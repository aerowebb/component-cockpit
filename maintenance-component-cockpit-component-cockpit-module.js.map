{"version":3,"sources":["webpack:///./node_modules/primeng/components/inputtextarea/inputtextarea.js","webpack:///./node_modules/primeng/components/keyfilter/keyfilter.js","webpack:///./node_modules/primeng/components/radiobutton/radiobutton.js","webpack:///./node_modules/primeng/components/selectbutton/selectbutton.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./node_modules/primeng/inputtextarea.js","webpack:///./node_modules/primeng/keyfilter.js","webpack:///./node_modules/primeng/radiobutton.js","webpack:///./node_modules/primeng/selectbutton.js","webpack:///./src/app/main/maintenance/component-cockpit/component-cockpit.module.ts","webpack:///./src/app/main/maintenance/component-cockpit/form/component-cockpit-form/component-cockpit-form.component.html","webpack:///./src/app/main/maintenance/component-cockpit/form/component-cockpit-form/component-cockpit-form.component.scss","webpack:///./src/app/main/maintenance/component-cockpit/form/component-cockpit-form/component-cockpit-form.component.ts","webpack:///./src/app/main/maintenance/component-cockpit/form/component-cockpit-form/component-cockpit-form.service.ts","webpack:///./src/app/main/maintenance/component-cockpit/form/popups/dialog-component-cockpit/dialog-component-cockpit.component.html","webpack:///./src/app/main/maintenance/component-cockpit/form/popups/dialog-component-cockpit/dialog-component-cockpit.component.scss","webpack:///./src/app/main/maintenance/component-cockpit/form/popups/dialog-component-cockpit/dialog-component-cockpit.component.ts","webpack:///./src/app/main/maintenance/component-cockpit/form/popups/dialog-component-cockpit/dialog-component-cockpit.service.ts","webpack:///./src/app/main/maintenance/component-cockpit/search/component-cockpit-search/component-cockpit-search.component.html","webpack:///./src/app/main/maintenance/component-cockpit/search/component-cockpit-search/component-cockpit-search.component.scss","webpack:///./src/app/main/maintenance/component-cockpit/search/component-cockpit-search/component-cockpit-search.component.ts","webpack:///./src/app/main/maintenance/component-cockpit/search/component-cockpit-search/component-cockpit-search.service.ts","webpack:///./src/app/shared/utils/label-value-utils.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,cAAc,mBAAO,CAAC,oEAAgB;AACtC,eAAe,mBAAO,CAAC,uEAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,yC;;;;;;;;;;;;ACrHa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,mBAAmB,mBAAO,CAAC,8EAAmB;AAC9C,cAAc,mBAAO,CAAC,oEAAgB;AACtC;AACA;AACA,gDAAgD,kBAAkB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;AC/Ka;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,cAAc,mBAAO,CAAC,oEAAgB;AACtC;AACA;AACA,gDAAgD,oBAAoB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+kBAA+kB,0JAA0J,mFAAmF,6BAA6B,gJAAgJ,kHAAkH,yDAAyD,OAAO;AAC3pC;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,uC;;;;;;;;;;;;ACtJa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,oBAAoB,mBAAO,CAAC,oFAAsB;AAClD,cAAc,mBAAO,CAAC,oEAAgB;AACtC;AACA;AACA,gDAAgD,qBAAqB,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,yBAAyB,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uPAAuP,yFAAyF,mBAAmB,iCAAiC,yPAAyP,whBAAwhB,wBAAwB,2JAA2J,WAAW,4BAA4B;AAC/2C;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,wC;;;;;;;;;;;;AC5KA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sGAAoC,G;;;;;;;;;;;;ACNrD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kHAA0C,G;;;;;;;;;;;;ACN3D;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kGAAkC,G;;;;;;;;;;;;ACNnD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0GAAsC,G;;;;;;;;;;;;ACNvD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8GAAwC,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNhB;AACS;AACA;AACA;AACI;AACM;AACR;AACI;AACE;AACd;AACI;AAEyC;AACqB;AAC7B;AAC6B;AACd;AACkB;AACtC;AACkC;AAGC;AACJ;AACiB;AACL;AACA;AACJ;AAGnH;;+EAE+E;AAE/E,IAAM,gBAAgB,GAAG;IACvB,+DAAc;IACd,+DAAc;IACd,+DAAc;IACd,mEAAgB;IAChB,yEAAmB;IACnB,yDAAW;IACX,8DAAa;IACb,uEAAkB;IAClB,qEAAiB;IACjB,iEAAe;CAChB,CAAC;AAEF,IAAM,gB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","file":"maintenance-component-cockpit-component-cockpit-module.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar common_1 = require(\"@angular/common\");\nvar InputTextarea = /** @class */ (function () {\n    function InputTextarea(el, ngModel) {\n        this.el = el;\n        this.ngModel = ngModel;\n        this.onResize = new core_1.EventEmitter();\n    }\n    InputTextarea.prototype.ngDoCheck = function () {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize();\n        }\n    };\n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    InputTextarea.prototype.onInput = function (e) {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.updateFilledState = function () {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    };\n    InputTextarea.prototype.onFocus = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.onBlur = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.resize = function (event) {\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n        this.onResize.emit(event || {});\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], InputTextarea.prototype, \"autoResize\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], InputTextarea.prototype, \"onResize\", void 0);\n    __decorate([\n        core_1.HostListener('input', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onInput\", null);\n    __decorate([\n        core_1.HostListener('focus', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onFocus\", null);\n    __decorate([\n        core_1.HostListener('blur', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onBlur\", null);\n    InputTextarea = __decorate([\n        core_1.Directive({\n            selector: '[pInputTextarea]',\n            host: {\n                '[class.ui-inputtext]': 'true',\n                '[class.ui-corner-all]': 'true',\n                '[class.ui-inputtextarea-resizable]': 'autoResize',\n                '[class.ui-state-default]': 'true',\n                '[class.ui-widget]': 'true',\n                '[class.ui-state-filled]': 'filled'\n            }\n        }),\n        __param(1, core_1.Optional()),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, forms_1.NgModel])\n    ], InputTextarea);\n    return InputTextarea;\n}());\nexports.InputTextarea = InputTextarea;\nvar InputTextareaModule = /** @class */ (function () {\n    function InputTextareaModule() {\n    }\n    InputTextareaModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [InputTextarea],\n            declarations: [InputTextarea]\n        })\n    ], InputTextareaModule);\n    return InputTextareaModule;\n}());\nexports.InputTextareaModule = InputTextareaModule;\n//# sourceMappingURL=inputtextarea.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar forms_1 = require(\"@angular/forms\");\nexports.KEYFILTER_VALIDATOR = {\n    provide: forms_1.NG_VALIDATORS,\n    useExisting: core_1.forwardRef(function () { return KeyFilter; }),\n    multi: true\n};\nvar KeyFilter = /** @class */ (function () {\n    function KeyFilter(el) {\n        this.el = el;\n    }\n    KeyFilter_1 = KeyFilter;\n    Object.defineProperty(KeyFilter.prototype, \"pattern\", {\n        get: function () {\n            return this._pattern;\n        },\n        set: function (_pattern) {\n            this._pattern = _pattern;\n            this.regex = KeyFilter_1.DEFAULT_MASKS[this._pattern] || this._pattern;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    KeyFilter.prototype.isNavKeyPress = function (e) {\n        var k = e.keyCode;\n        k = domhandler_1.DomHandler.getBrowser().safari ? (KeyFilter_1.SAFARI_KEYS[k] || k) : k;\n        return (k >= 33 && k <= 40) || k == KeyFilter_1.KEYS.RETURN || k == KeyFilter_1.KEYS.TAB || k == KeyFilter_1.KEYS.ESC;\n    };\n    ;\n    KeyFilter.prototype.isSpecialKey = function (e) {\n        var k = e.keyCode;\n        var c = e.charCode;\n        return k == 9 || k == 13 || k == 27 || k == 16 || k == 17 || (k >= 18 && k <= 20) ||\n            (domhandler_1.DomHandler.getBrowser().opera && !e.shiftKey && (k == 8 || (k >= 33 && k <= 35) || (k >= 36 && k <= 39) || (k >= 44 && k <= 45)));\n    };\n    KeyFilter.prototype.getKey = function (e) {\n        var k = e.keyCode || e.charCode;\n        return domhandler_1.DomHandler.getBrowser().safari ? (KeyFilter_1.SAFARI_KEYS[k] || k) : k;\n    };\n    KeyFilter.prototype.getCharCode = function (e) {\n        return e.charCode || e.keyCode || e.which;\n    };\n    ;\n    KeyFilter.prototype.onKeyPress = function (e) {\n        if (this.pValidateOnly) {\n            return;\n        }\n        var browser = domhandler_1.DomHandler.getBrowser();\n        if (e.ctrlKey || e.altKey) {\n            return;\n        }\n        var k = this.getKey(e);\n        if (k == 13) {\n            return;\n        }\n        if (browser.mozilla && (this.isNavKeyPress(e) || k == KeyFilter_1.KEYS.BACKSPACE || (k == KeyFilter_1.KEYS.DELETE && e.charCode == 0))) {\n            return;\n        }\n        var c = this.getCharCode(e);\n        var cc = String.fromCharCode(c);\n        var ok = true;\n        if (browser.mozilla && (this.isSpecialKey(e) || !cc)) {\n            return;\n        }\n        ok = this.regex.test(cc);\n        if (!ok) {\n            e.preventDefault();\n        }\n    };\n    KeyFilter.prototype.onPaste = function (e) {\n        var clipboardData = e.clipboardData || window.clipboardData.getData('text');\n        if (clipboardData) {\n            var pastedText = clipboardData;\n            if (!this.regex.test(pastedText)) {\n                e.preventDefault();\n            }\n        }\n    };\n    KeyFilter.prototype.validate = function (c) {\n        if (this.pValidateOnly) {\n            var value = this.el.nativeElement.value;\n            if (value && !this.regex.test(value)) {\n                return {\n                    validatePattern: false\n                };\n            }\n        }\n    };\n    var KeyFilter_1;\n    KeyFilter.DEFAULT_MASKS = {\n        pint: /[\\d]/,\n        'int': /[\\d\\-]/,\n        pnum: /[\\d\\.]/,\n        money: /[\\d\\.\\s,]/,\n        num: /[\\d\\-\\.]/,\n        hex: /[0-9a-f]/i,\n        email: /[a-z0-9_\\.\\-@]/i,\n        alpha: /[a-z_]/i,\n        alphanum: /[a-z0-9_]/i\n    };\n    KeyFilter.KEYS = {\n        TAB: 9,\n        RETURN: 13,\n        ESC: 27,\n        BACKSPACE: 8,\n        DELETE: 46\n    };\n    KeyFilter.SAFARI_KEYS = {\n        63234: 37,\n        63235: 39,\n        63232: 38,\n        63233: 40,\n        63276: 33,\n        63277: 34,\n        63272: 46,\n        63273: 36,\n        63275: 35 // end\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], KeyFilter.prototype, \"pValidateOnly\", void 0);\n    __decorate([\n        core_1.Input('pKeyFilter'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], KeyFilter.prototype, \"pattern\", null);\n    __decorate([\n        core_1.HostListener('keypress', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [KeyboardEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], KeyFilter.prototype, \"onKeyPress\", null);\n    __decorate([\n        core_1.HostListener('paste', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], KeyFilter.prototype, \"onPaste\", null);\n    KeyFilter = KeyFilter_1 = __decorate([\n        core_1.Directive({\n            selector: '[pKeyFilter]',\n            providers: [exports.KEYFILTER_VALIDATOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\n    ], KeyFilter);\n    return KeyFilter;\n}());\nexports.KeyFilter = KeyFilter;\nvar KeyFilterModule = /** @class */ (function () {\n    function KeyFilterModule() {\n    }\n    KeyFilterModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [KeyFilter],\n            declarations: [KeyFilter]\n        })\n    ], KeyFilterModule);\n    return KeyFilterModule;\n}());\nexports.KeyFilterModule = KeyFilterModule;\n//# sourceMappingURL=keyfilter.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar forms_1 = require(\"@angular/forms\");\nexports.RADIO_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return RadioButton; }),\n    multi: true\n};\nvar RadioButton = /** @class */ (function () {\n    function RadioButton(cd) {\n        this.cd = cd;\n        this.onClick = new core_1.EventEmitter();\n        this.onFocus = new core_1.EventEmitter();\n        this.onBlur = new core_1.EventEmitter();\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n    }\n    RadioButton.prototype.handleClick = function (event, radioButton, focus) {\n        event.preventDefault();\n        if (this.disabled) {\n            return;\n        }\n        this.select(event);\n        if (focus) {\n            radioButton.focus();\n        }\n    };\n    RadioButton.prototype.select = function (event) {\n        if (!this.disabled) {\n            this.inputViewChild.nativeElement.checked = true;\n            this.checked = true;\n            this.onModelChange(this.value);\n            this.onClick.emit(event);\n        }\n    };\n    RadioButton.prototype.writeValue = function (value) {\n        this.checked = (value == this.value);\n        if (this.inputViewChild.nativeElement) {\n            this.inputViewChild.nativeElement.checked = this.checked;\n        }\n        this.cd.markForCheck();\n    };\n    RadioButton.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    RadioButton.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    RadioButton.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    RadioButton.prototype.onInputFocus = function (event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    };\n    RadioButton.prototype.onInputBlur = function (event) {\n        this.focused = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    };\n    RadioButton.prototype.onChange = function (event) {\n        this.select(event);\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], RadioButton.prototype, \"value\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], RadioButton.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RadioButton.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], RadioButton.prototype, \"label\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], RadioButton.prototype, \"tabindex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], RadioButton.prototype, \"inputId\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], RadioButton.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], RadioButton.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], RadioButton.prototype, \"labelStyleClass\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], RadioButton.prototype, \"onClick\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], RadioButton.prototype, \"onFocus\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], RadioButton.prototype, \"onBlur\", void 0);\n    __decorate([\n        core_1.ViewChild('rb'),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], RadioButton.prototype, \"inputViewChild\", void 0);\n    RadioButton = __decorate([\n        core_1.Component({\n            selector: 'p-radioButton',\n            template: \"\\n        <div [ngStyle]=\\\"style\\\" [ngClass]=\\\"'ui-radiobutton ui-widget'\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #rb type=\\\"radio\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" [attr.value]=\\\"value\\\" [attr.tabindex]=\\\"tabindex\\\" \\n                    [checked]=\\\"checked\\\" (change)=\\\"onChange($event)\\\" (focus)=\\\"onInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\" [disabled]=\\\"disabled\\\">\\n            </div>\\n            <div (click)=\\\"handleClick($event, rb, true)\\\"\\n                [ngClass]=\\\"{'ui-radiobutton-box ui-widget ui-state-default':true,\\n                'ui-state-active':rb.checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\\\">\\n                <span class=\\\"ui-radiobutton-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-circle-on':rb.checked}\\\"></span>\\n            </div>\\n        </div>\\n        <label (click)=\\\"select($event)\\\" [class]=\\\"labelStyleClass\\\"\\n            [ngClass]=\\\"{'ui-radiobutton-label':true, 'ui-label-active':rb.checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\\\"\\n            *ngIf=\\\"label\\\" [attr.for]=\\\"inputId\\\">{{label}}</label>\\n    \",\n            providers: [exports.RADIO_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\n    ], RadioButton);\n    return RadioButton;\n}());\nexports.RadioButton = RadioButton;\nvar RadioButtonModule = /** @class */ (function () {\n    function RadioButtonModule() {\n    }\n    RadioButtonModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [RadioButton],\n            declarations: [RadioButton]\n        })\n    ], RadioButtonModule);\n    return RadioButtonModule;\n}());\nexports.RadioButtonModule = RadioButtonModule;\n//# sourceMappingURL=radiobutton.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar objectutils_1 = require(\"../utils/objectutils\");\nvar forms_1 = require(\"@angular/forms\");\nexports.SELECTBUTTON_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return SelectButton; }),\n    multi: true\n};\nvar SelectButton = /** @class */ (function () {\n    function SelectButton(cd) {\n        this.cd = cd;\n        this.tabindex = 0;\n        this.onOptionClick = new core_1.EventEmitter();\n        this.onChange = new core_1.EventEmitter();\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n    }\n    Object.defineProperty(SelectButton.prototype, \"options\", {\n        get: function () {\n            return this._options;\n        },\n        set: function (val) {\n            var opts = this.optionLabel ? objectutils_1.ObjectUtils.generateSelectItems(val, this.optionLabel) : val;\n            this._options = opts;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SelectButton.prototype.writeValue = function (value) {\n        this.value = value;\n        this.cd.markForCheck();\n    };\n    SelectButton.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    SelectButton.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    SelectButton.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    SelectButton.prototype.onItemClick = function (event, option, index) {\n        if (this.disabled || option.disabled) {\n            return;\n        }\n        if (this.multiple) {\n            var itemIndex_1 = this.findItemIndex(option);\n            if (itemIndex_1 != -1)\n                this.value = this.value.filter(function (val, i) { return i != itemIndex_1; });\n            else\n                this.value = (this.value || []).concat([option.value]);\n        }\n        else {\n            this.value = option.value;\n        }\n        this.onOptionClick.emit({\n            originalEvent: event,\n            option: option,\n            index: index\n        });\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    };\n    SelectButton.prototype.onFocus = function (event) {\n        this.focusedItem = event.target;\n    };\n    SelectButton.prototype.onBlur = function (event) {\n        this.focusedItem = null;\n        this.onModelTouched();\n    };\n    SelectButton.prototype.isSelected = function (option) {\n        if (this.multiple)\n            return this.findItemIndex(option) != -1;\n        else\n            return objectutils_1.ObjectUtils.equals(option.value, this.value, this.dataKey);\n    };\n    SelectButton.prototype.findItemIndex = function (option) {\n        var index = -1;\n        if (this.value) {\n            for (var i = 0; i < this.value.length; i++) {\n                if (this.value[i] == option.value) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], SelectButton.prototype, \"tabindex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SelectButton.prototype, \"multiple\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], SelectButton.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SelectButton.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"dataKey\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"optionLabel\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], SelectButton.prototype, \"onOptionClick\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], SelectButton.prototype, \"onChange\", void 0);\n    __decorate([\n        core_1.ContentChild(core_1.TemplateRef),\n        __metadata(\"design:type\", Object)\n    ], SelectButton.prototype, \"itemTemplate\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], SelectButton.prototype, \"options\", null);\n    SelectButton = __decorate([\n        core_1.Component({\n            selector: 'p-selectButton',\n            template: \"\\n        <div [ngClass]=\\\"'ui-selectbutton ui-buttonset ui-widget ui-corner-all ui-buttonset-' + (options ? options.length : 0)\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div *ngFor=\\\"let option of options; let i = index\\\" #btn class=\\\"ui-button ui-widget ui-state-default ui-button-text-only {{option.styleClass}}\\\"\\n                [ngClass]=\\\"{'ui-state-active':isSelected(option), 'ui-state-disabled': disabled || option.disabled, 'ui-state-focus': btn == focusedItem, \\n                'ui-button-text-icon-left': (option.icon != null), 'ui-button-icon-only': (option.icon && !option.label)}\\\" (click)=\\\"onItemClick($event,option,i)\\\" (keydown.enter)=\\\"onItemClick($event,option,i)\\\"\\n                [attr.title]=\\\"option.title\\\" [attr.aria-label]=\\\"option.label\\\" (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\" [attr.tabindex]=\\\"tabindex\\\">\\n                <ng-container *ngIf=\\\"!itemTemplate else customcontent\\\">\\n                    <span [ngClass]=\\\"['ui-clickable', 'ui-button-icon-left']\\\" [class]=\\\"option.icon\\\" *ngIf=\\\"option.icon\\\"></span>\\n                    <span class=\\\"ui-button-text ui-clickable\\\">{{option.label||'ui-btn'}}</span>\\n                </ng-container>\\n                <ng-template #customcontent>\\n                    <ng-container *ngTemplateOutlet=\\\"itemTemplate; context: {$implicit: option, index: i}\\\"></ng-container>\\n                </ng-template>\\n            </div>\\n        </div>\\n    \",\n            providers: [exports.SELECTBUTTON_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\n    ], SelectButton);\n    return SelectButton;\n}());\nexports.SelectButton = SelectButton;\nvar SelectButtonModule = /** @class */ (function () {\n    function SelectButtonModule() {\n    }\n    SelectButtonModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [SelectButton],\n            declarations: [SelectButton]\n        })\n    ], SelectButtonModule);\n    return SelectButtonModule;\n}());\nexports.SelectButtonModule = SelectButtonModule;\n//# sourceMappingURL=selectbutton.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputtextarea/inputtextarea\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/keyfilter/keyfilter\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/radiobutton/radiobutton\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/selectbutton/selectbutton\"));","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DialogTableModule } from '../../../shared/components/dialog-table/dialog-table.module';\r\nimport { DynamicAttributesModule } from '../../../shared/components/dynamic-attributes/dynamic-attributes.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\n\r\nimport { ComponentCockpitFormComponent } from './form/component-cockpit-form/component-cockpit-form.component';\r\nimport { ComponentCockpitFormService } from './form/component-cockpit-form/component-cockpit-form.service';\r\nimport { DialogComponentCockpitComponent } from './form/popups/dialog-component-cockpit/dialog-component-cockpit.component';\r\nimport { DialogComponentCockptService } from './form/popups/dialog-component-cockpit/dialog-component-cockpit.service';\r\nimport { ComponentCockpitSearchComponent } from './search/component-cockpit-search/component-cockpit-search.component';\r\nimport { ComponentCockpitSearchService } from './search/component-cockpit-search/component-cockpit-search.service';\r\n\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DropdownModule,\r\n  FileUploadModule,\r\n  InputTextareaModule,\r\n  TableModule,\r\n  TooltipModule,\r\n  SelectButtonModule,\r\n  RadioButtonModule,\r\n  KeyFilterModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [DialogTableModule, DynamicAttributesModule, ModalModule, ComponentSidebarModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogComponentCockpitComponent];\r\n\r\nconst DYNAMIC_COMPONENTS = [ComponentCockpitSearchComponent, ComponentCockpitFormComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [\r\n  ComponentCockpitSearchService,\r\n  ComponentCockpitFormService,\r\n  DialogComponentCockptService\r\n];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class ComponentCockpitModule {}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ componentData.componentId + \\\".title\\\" | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n          - {{ context }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"edit()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancel()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-menu-item (click)=\\\"refresh()\\\">\\r\\n        {{ \\\"global.refresh\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <!-- Home -->\\r\\n        <mat-tab id=\\\"homeTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ \\\"page.mainData\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group \\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".id\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"filterData.filterListOutput.bidoPreferenceUserDTO.preferenceUserId\\\"\\r\\n                            [disabled]=\\\"true\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group \\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".author\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"filterData.filterListOutput.author\\\"\\r\\n                            [disabled]=\\\"true\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".name\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"filterData.filterListOutput.bidoPreferenceUserDTO.description\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            maxlength=\\\"100\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".isPublic\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-checkbox\\r\\n                            binary=\\\"true\\\"\\r\\n                            class=\\\"aw-checkbox\\\"\\r\\n                            [(ngModel)]=\\\"filterData.filterListOutput.bidoPreferenceUserDTO.shared\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-checkbox>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".isPersistent\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-checkbox\\r\\n                            binary=\\\"true\\\"\\r\\n                            class=\\\"aw-checkbox\\\"\\r\\n                            [(ngModel)]=\\\"filterData.filterListOutput.isPersistent\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-checkbox>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".logicLink\\\" | translate }}</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            [options]=\\\"logicalLinkList\\\"\\r\\n                            [(ngModel)]=\\\"filterData.filterListOutput.logicalLink\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".icons\\\" | translate }}</label>\\r\\n                        <div class=\\\"form-control\\\"></div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                    </div>\\r\\n                    <!-- Circle-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".none\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"None\\\" [(ngModel)]=\\\"graphValue\\\"></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-circle aw-icon \\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: red;font-size: 18px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"RedCircle\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-circle aw-icon \\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color:#FFBF00;font-size: 18px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"YellowCircle\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-circle aw-icon \\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: blue;font-size: 18px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"BlueCircle\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-circle aw-icon \\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: lightgreen;font-size: 18px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"GreenCircle\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-circle aw-icon \\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: grey;font-size: 18px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"GreyCircle\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                    </div>\\r\\n                    <!-- triangle -->\\r\\n                    <div class=\\\"row\\\" style=\\\"margin-top: -5px;\\\">\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-caret-up aw-icon\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: red;font-size: 40px;\\r\\n                                  margin-left: -13px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"RedTriangle\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-caret-up aw-icon\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: #FFBF00;font-size: 40px;\\r\\n                                    margin-left: -13px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"YellowTriangle\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-caret-up aw-icon\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: blue;font-size: 40px;\\r\\n                            margin-left: -13px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"BlueTriangle\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-caret-up aw-icon\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: lightgreen;font-size: 40px;\\r\\n                              margin-left: -13px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"GreenTriangle\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-caret-up aw-icon\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: grey;font-size: 40px;\\r\\n                                margin-left: -13px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"GreyTriangle\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                    </div>\\r\\n                    <!-- square -->\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-square aw-icon \\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: red;font-size: 18px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"RedSquare\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-square aw-icon \\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: #FFBF00;font-size: 18px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"YellowSquare\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-square aw-icon \\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: blue;font-size: 18px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"BlueSquare\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-square aw-icon \\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: lightgreen;font-size: 18px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"GreenSquare\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-square aw-icon \\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            style=\\\"color: grey;font-size: 18px;\\\"\\r\\n                          ></i>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-radioButton\\r\\n                            class=\\\"aw-radiobutton\\\"\\r\\n                            value=\\\"GreySquare\\\"\\r\\n                            [(ngModel)]=\\\"graphValue\\\"\\r\\n                          ></p-radioButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab id=\\\"applicabilitiesTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".createApp\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".filterTitle\\\" | translate }}\\r\\n                      ({{ filterTable ? filterTable.length : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <p-table\\r\\n                          [resizableColumns]=\\\"true\\\"\\r\\n                          #ptableFilterElement\\r\\n                          class=\\\"aw-table2\\\"\\r\\n                          [columns]=\\\"filterTableCols\\\"\\r\\n                          [value]=\\\"filterTable\\\"\\r\\n                          [(selection)]=\\\"selectedFilter\\\"\\r\\n                          [scrollable]=\\\"true\\\"\\r\\n                        >\\r\\n                          <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                            <span *ngIf=\\\"!isfilterTable\\\"> &nbsp;</span>\\r\\n\\r\\n                            <div *ngIf=\\\"isfilterTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                              <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                              <div class=\\\"lds-hourglass\\\"></div>\\r\\n                            </div>\\r\\n                          </ng-template>\\r\\n                          <ng-template pTemplate=\\\"caption\\\">\\r\\n                            <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedFilter.length > 0 }\\\">\\r\\n                              <div class=\\\"aw-table-global-filter\\\">\\r\\n                                <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                                  <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                </label>\\r\\n\\r\\n                                <input\\r\\n                                  #ptableCusCustomerGlobalFilter\\r\\n                                  class=\\\"aw-table-global-filter-input\\\"\\r\\n                                  type=\\\"text\\\"\\r\\n                                  placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                                  (input)=\\\"ptableFilterElement.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"aw-table-actions\\\">\\r\\n                                <button\\r\\n                                  *ngIf=\\\"!isReadOpenMode && selectedFilter.length > 0\\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  color=\\\"warn\\\"\\r\\n                                  (click)=\\\"deleteFilterElement()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.delete\\\" | translate }}\\r\\n                                </button>\\r\\n\\r\\n                                <button\\r\\n                                  *ngIf=\\\"!isReadOpenMode && selectedFilter.length === 1\\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  (click)=\\\"EditFilterElement()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.edit\\\" | translate }}\\r\\n                                </button>\\r\\n\\r\\n                                <button\\r\\n                                  *ngIf=\\\"selectedFilter.length === 1\\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  (click)=\\\"openFilterElement()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.open\\\" | translate }}\\r\\n                                </button>\\r\\n\\r\\n                                <button\\r\\n                                  *ngIf=\\\"!isReadOpenMode && selectedFilter.length === 0\\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  (click)=\\\"addFilterElement()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.add\\\" | translate }}\\r\\n                                </button>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                            <colgroup>\\r\\n                              <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                              <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                            </colgroup>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                            <tr>\\r\\n                              <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                                <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                              </th>\\r\\n\\r\\n                              <th\\r\\n                                pResizableColumn\\r\\n                                *ngFor=\\\"let col of columns\\\"\\r\\n                                [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                              >\\r\\n                                {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                              </th>\\r\\n                            </tr>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                            <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                              <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                                <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                              </td>\\r\\n\\r\\n                              <td\\r\\n                                *ngFor=\\\"let col of columns\\\"\\r\\n                                [ngSwitch]=\\\"col.field\\\"\\r\\n                                [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                              >\\r\\n                                <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </ng-template>\\r\\n                        </p-table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".profileTitle\\\" | translate }}\\r\\n                      ({{ profileTable ? profileTable.length : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <p-table\\r\\n                          [resizableColumns]=\\\"true\\\"\\r\\n                          #ptableProfile\\r\\n                          class=\\\"aw-table2\\\"\\r\\n                          [columns]=\\\"profileTableCols\\\"\\r\\n                          [value]=\\\"profileTable\\\"\\r\\n                          [(selection)]=\\\"selectedProfile\\\"\\r\\n                          [scrollable]=\\\"true\\\"\\r\\n                        >\\r\\n                          <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                            <span *ngIf=\\\"!isprofileTable\\\"> &nbsp;</span>\\r\\n\\r\\n                            <div *ngIf=\\\"isprofileTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                              <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                              <div class=\\\"lds-hourglass\\\"></div>\\r\\n                            </div>\\r\\n                          </ng-template>\\r\\n                          <ng-template pTemplate=\\\"caption\\\">\\r\\n                            <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedProfile.length > 0 }\\\">\\r\\n                              <div class=\\\"aw-table-global-filter\\\">\\r\\n                                <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                                  <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                </label>\\r\\n\\r\\n                                <input\\r\\n                                  #ptableCusCustomerGlobalFilter\\r\\n                                  class=\\\"aw-table-global-filter-input\\\"\\r\\n                                  type=\\\"text\\\"\\r\\n                                  placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                                  (input)=\\\"ptableProfile.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"aw-table-actions\\\">\\r\\n                                <button\\r\\n                                  *ngIf=\\\"\\r\\n                                    !isReadOpenMode &&\\r\\n                                    selectedProfile.length > 0 &&\\r\\n                                    filterData.filterListOutput.bidoPreferenceUserDTO.shared\\r\\n                                  \\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  color=\\\"warn\\\"\\r\\n                                  (click)=\\\"deleteProfileList()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.delete\\\" | translate }}\\r\\n                                </button>\\r\\n                                <button\\r\\n                                  *ngIf=\\\"\\r\\n                                    !isReadOpenMode &&\\r\\n                                    selectedProfile.length === 0 &&\\r\\n                                    filterData.filterListOutput.bidoPreferenceUserDTO.shared\\r\\n                                  \\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  (click)=\\\"addProfileList()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.add\\\" | translate }}\\r\\n                                </button>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                            <colgroup>\\r\\n                              <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                              <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                            </colgroup>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                            <tr>\\r\\n                              <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                                <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                              </th>\\r\\n\\r\\n                              <th\\r\\n                                pResizableColumn\\r\\n                                *ngFor=\\\"let col of columns\\\"\\r\\n                                [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                              >\\r\\n                                {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                              </th>\\r\\n                            </tr>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                            <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                              <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                                <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                              </td>\\r\\n                              <td\\r\\n                                *ngFor=\\\"let col of columns\\\"\\r\\n                                [ngSwitch]=\\\"col.field\\\"\\r\\n                                [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                              >\\r\\n                                <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </ng-template>\\r\\n                        </p-table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".variantTitle\\\" | translate }}\\r\\n                      ({{ variantTable ? variantTable.length : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <p-table\\r\\n                          [resizableColumns]=\\\"true\\\"\\r\\n                          #ptableVariant\\r\\n                          class=\\\"aw-table2\\\"\\r\\n                          [columns]=\\\"variantTableCols\\\"\\r\\n                          [value]=\\\"variantTable\\\"\\r\\n                          [(selection)]=\\\"selectedVariant\\\"\\r\\n                          [scrollable]=\\\"true\\\"\\r\\n                        >\\r\\n                          <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                            <span *ngIf=\\\"!isVariantTable\\\"> &nbsp;</span>\\r\\n\\r\\n                            <div *ngIf=\\\"isVariantTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                              <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                              <div class=\\\"lds-hourglass\\\"></div>\\r\\n                            </div>\\r\\n                          </ng-template>\\r\\n                          <ng-template pTemplate=\\\"caption\\\">\\r\\n                            <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedVariant.length > 0 }\\\">\\r\\n                              <div class=\\\"aw-table-global-filter\\\">\\r\\n                                <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                                  <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                </label>\\r\\n\\r\\n                                <input\\r\\n                                  #ptableCusCustomerGlobalFilter\\r\\n                                  class=\\\"aw-table-global-filter-input\\\"\\r\\n                                  type=\\\"text\\\"\\r\\n                                  placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                                  (input)=\\\"ptableVariant.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"aw-table-actions\\\">\\r\\n                                <button\\r\\n                                  *ngIf=\\\"!isReadOpenMode && selectedVariant.length > 0\\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  color=\\\"warn\\\"\\r\\n                                  (click)=\\\"deleteVariantList()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.delete\\\" | translate }}\\r\\n                                </button>\\r\\n                                <button\\r\\n                                  *ngIf=\\\"!isReadOpenMode && selectedVariant.length === 0\\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  (click)=\\\"addVariantList()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.add\\\" | translate }}\\r\\n                                </button>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                            <colgroup>\\r\\n                              <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                              <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                            </colgroup>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                            <tr>\\r\\n                              <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                                <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                              </th>\\r\\n\\r\\n                              <th\\r\\n                                pResizableColumn\\r\\n                                *ngFor=\\\"let col of columns\\\"\\r\\n                                [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                              >\\r\\n                                {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                              </th>\\r\\n                            </tr>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                            <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                              <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                                <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                              </td>\\r\\n                              <td\\r\\n                                *ngFor=\\\"let col of columns\\\"\\r\\n                                [ngSwitch]=\\\"col.field\\\"\\r\\n                                [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                              >\\r\\n                                <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </ng-template>\\r\\n                        </p-table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".siteTitle\\\" | translate }}\\r\\n                      ({{ siteTable ? siteTable.length : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <p-table\\r\\n                          [resizableColumns]=\\\"true\\\"\\r\\n                          #ptableSite\\r\\n                          class=\\\"aw-table2\\\"\\r\\n                          [columns]=\\\"siteTableCols\\\"\\r\\n                          [value]=\\\"siteTable\\\"\\r\\n                          [(selection)]=\\\"selectedSite\\\"\\r\\n                          [scrollable]=\\\"true\\\"\\r\\n                        >\\r\\n                          <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                            <span *ngIf=\\\"!isSiteTable\\\"> &nbsp;</span>\\r\\n\\r\\n                            <div *ngIf=\\\"isSiteTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                              <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                              <div class=\\\"lds-hourglass\\\"></div>\\r\\n                            </div>\\r\\n                          </ng-template>\\r\\n                          <ng-template pTemplate=\\\"caption\\\">\\r\\n                            <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedSite.length > 0 }\\\">\\r\\n                              <div class=\\\"aw-table-global-filter\\\">\\r\\n                                <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                                  <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                </label>\\r\\n\\r\\n                                <input\\r\\n                                  #ptableCusCustomerGlobalFilter\\r\\n                                  class=\\\"aw-table-global-filter-input\\\"\\r\\n                                  type=\\\"text\\\"\\r\\n                                  placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                                  (input)=\\\"ptableSite.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"aw-table-actions\\\">\\r\\n                                <button\\r\\n                                  *ngIf=\\\"!isReadOpenMode && selectedSite.length > 0\\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  color=\\\"warn\\\"\\r\\n                                  (click)=\\\"deleteSiteList()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.delete\\\" | translate }}\\r\\n                                </button>\\r\\n                                <button\\r\\n                                  *ngIf=\\\"!isReadOpenMode && selectedSite.length === 0\\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  (click)=\\\"addSiteList()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.add\\\" | translate }}\\r\\n                                </button>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                            <colgroup>\\r\\n                              <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                              <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                            </colgroup>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                            <tr>\\r\\n                              <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                                <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                              </th>\\r\\n\\r\\n                              <th\\r\\n                                pResizableColumn\\r\\n                                *ngFor=\\\"let col of columns\\\"\\r\\n                                [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                              >\\r\\n                                {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                              </th>\\r\\n                            </tr>\\r\\n                          </ng-template>\\r\\n\\r\\n                          <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                            <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                              <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                                <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                              </td>\\r\\n                              <td\\r\\n                                *ngFor=\\\"let col of columns\\\"\\r\\n                                [ngSwitch]=\\\"col.field\\\"\\r\\n                                [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                              >\\r\\n                                <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </ng-template>\\r\\n                        </p-table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-dialog-component-cockpit\\r\\n  *ngIf=\\\"showPopup\\\"\\r\\n  [(display)]=\\\"showPopup\\\"\\r\\n  [elementFlag]=\\\"elementFlag\\\"\\r\\n  [profileFlag]=\\\"profileFlag\\\"\\r\\n  [siteFlag]=\\\"siteFlag\\\"\\r\\n  [variantFlag]=\\\"variantFlag\\\"\\r\\n  [dialogData]=\\\"currentData\\\"\\r\\n  [openMode]=\\\"dialogOpenMode\\\"\\r\\n  [propertyProfile]=\\\"propertyProfile\\\"\\r\\n  [propertySite]=\\\"propertySite\\\"\\r\\n  [propertyVariant]=\\\"propertyVariant\\\"\\r\\n  (onValidated)=\\\"onAddData($event)\\\"\\r\\n  (onValidatedOtherData)=\\\"onAddOtherData($event)\\\"\\r\\n>\\r\\n</aw-dialog-component-cockpit>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbnRlbmFuY2UvY29tcG9uZW50LWNvY2twaXQvZm9ybS9jb21wb25lbnQtY29ja3BpdC1mb3JtL2NvbXBvbmVudC1jb2NrcGl0LWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { PageTocService } from '../../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../shared/services/tab.service';\r\nimport { SaveFilterInput } from '../../../../../shared/types/api-input-types/component-filter/save-filter-input-dto.interface';\r\nimport { ElementListFilterOutput } from '../../../../../shared/types/api-output-types/element-list-filter-output-dto.interface';\r\nimport { FilterOutputById } from '../../../../../shared/types/api-output-types/filter-output-by-id.interface';\r\nimport { ProfileListFilterOutput } from '../../../../../shared/types/api-output-types/profile-list-filter-output.interface';\r\nimport { SiteListFilterOutput } from '../../../../../shared/types/api-output-types/site-list-filter-output.interface';\r\nimport { VariantListFilterOutput } from '../../../../../shared/types/api-output-types/variant-list-filter-output.interface';\r\nimport { BidoPreferenceUserDTOId } from '../../../../../shared/types/api-types/bido-preference-user-dto-id.interface';\r\nimport { FormPageComponent } from '../../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../../shared/types/table-column.interface';\r\nimport { LabelValueUtils } from '../../../../../shared/utils/label-value-utils';\r\nimport { StringUtils } from '../../../../../shared/utils/string-utils';\r\nimport { BidoPuProfileDTO } from '../.././../../../shared/types/api-types/bido-pu-profile-dto.interface';\r\n\r\nimport { ComponentCockpitFormService } from './component-cockpit-form.service';\r\n\r\ninterface FilterElementRow {\r\n  object?: string;\r\n  objectKey?: string;\r\n  data?: string;\r\n  dataKey?: string;\r\n  type?: string;\r\n  typeKey?: string;\r\n  value?: string;\r\n  valueKey?: string;\r\n  filterPreferenceFormated?: string;\r\n  _obj?: ElementListFilterOutput;\r\n}\r\n\r\nenum GraphType {\r\n  None = 'None',\r\n  RedTriangle = 'RedTriangle',\r\n  RedSquare = 'RedSquare',\r\n  RedCircle = 'RedCircle',\r\n  YellowTriangle = 'YellowTriangle',\r\n  YellowSquare = 'YellowSquare',\r\n  YellowCircle = 'YellowCircle',\r\n  GreenTriangle = 'GreenTriangle',\r\n  GreenSquare = 'GreenSquare',\r\n  GreenCircle = 'GreenCircle',\r\n  BlueTriangle = 'BlueTriangle',\r\n  BlueSquare = 'BlueSquare',\r\n  BlueCircle = 'BlueCircle',\r\n  GreyTriangle = 'GreyTriangle',\r\n  GreySquare = 'GreySquare',\r\n  GreyCircle = 'GreyCircle'\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-component-cockpit-form',\r\n  templateUrl: './component-cockpit-form.component.html',\r\n  styleUrls: ['./component-cockpit-form.component.scss']\r\n})\r\nexport class ComponentCockpitFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  @ViewChild('fliterElement')\r\n  public fliterElement: ElementRef;\r\n  @ViewChild('profileAnchor')\r\n  public profileAnchor: ElementRef;\r\n  @ViewChild('variantAnchor')\r\n  public variantAnchor: ElementRef;\r\n  @ViewChild('siteAnchor')\r\n  public siteAnchor: ElementRef;\r\n  @ViewChild('mainInformationAnchor')\r\n  public mainInformationAnchor: ElementRef;\r\n\r\n  public context: string;\r\n  public filterData: FilterOutputById;\r\n  public toc;\r\n  public selectedAnchor: string | undefined;\r\n  public logicalLinkList: LabelValue<string>[];\r\n  public propertyFilterList: LabelValue<string>[];\r\n  public propertyProfile: LabelValue<string>[];\r\n  public propertySite: LabelValue<string>[];\r\n  public propertyVariant: LabelValue<string>[];\r\n  public graphValue: string | undefined;\r\n\r\n  public filterTable: FilterElementRow[];\r\n  public customFilterTable: ElementListFilterOutput[];\r\n  public filterTableCols: TableColumn[];\r\n  public selectedFilter: FilterElementRow[];\r\n\r\n  public profileTable: ProfileListFilterOutput[];\r\n  public profileTableCols: TableColumn[];\r\n  public selectedProfile: ProfileListFilterOutput[];\r\n  public customProfileTable: BidoPuProfileDTO[];\r\n\r\n  public variantTable: VariantListFilterOutput[];\r\n  public variantTableCols: TableColumn[];\r\n  public selectedVariant: VariantListFilterOutput[];\r\n\r\n  public siteTable: SiteListFilterOutput[];\r\n  public siteTableCols: TableColumn[];\r\n  public selectedSite: SiteListFilterOutput[];\r\n\r\n  public showPopup: boolean;\r\n  public elementFlag: boolean;\r\n  public profileFlag: boolean;\r\n  public siteFlag: boolean;\r\n  public variantFlag: boolean;\r\n  private currentIndex: number;\r\n  public currentData: ElementListFilterOutput | undefined;\r\n  public dialogOpenMode: ComponentOpenMode;\r\n  public isfilterTable: boolean;\r\n  public isprofileTable: boolean;\r\n  public isVariantTable: boolean;\r\n  public isSiteTable: boolean;\r\n  public showSaveSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    pageTocService: PageTocService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly componentCockpitFormService: ComponentCockpitFormService,\r\n    private readonly translateService: TranslateService\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Write,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n    this.selectedAnchor = undefined;\r\n    this.registerPageTocEntrySelectedObservable();\r\n    this.profileTable = [];\r\n    this.filterTable = [];\r\n    this.customFilterTable = [];\r\n    this.customProfileTable = [];\r\n    this.variantTable = [];\r\n    this.siteTable = [];\r\n    this.selectedProfile = [];\r\n    this.selectedVariant = [];\r\n    this.selectedSite = [];\r\n    this.selectedFilter = [];\r\n    this.logicalLinkList = [];\r\n    this.propertyProfile = [];\r\n    this.propertySite = [];\r\n    this.propertyVariant = [];\r\n    this.propertyFilterList = [];\r\n    this.showPopup = false;\r\n    this.elementFlag = false;\r\n    this.profileFlag = false;\r\n    this.siteFlag = false;\r\n    this.variantFlag = false;\r\n    this.currentIndex = -1;\r\n    this.isfilterTable = false;\r\n    this.isprofileTable = false;\r\n    this.isVariantTable = false;\r\n    this.isSiteTable = false;\r\n    this.dialogOpenMode = ComponentOpenMode.Read;\r\n    this.profileTableCols = [{ field: 'name', alignment: 'left' }];\r\n    this.variantTableCols = [{ field: 'name', alignment: 'left' }];\r\n    this.siteTableCols = [{ field: 'name', alignment: 'left' }];\r\n\r\n    this.filterTableCols = [\r\n      { field: 'objectKey', alignment: 'left' },\r\n      { field: 'dataKey', alignment: 'left' },\r\n      { field: 'typeKey', alignment: 'left' },\r\n      { field: 'valueKey', alignment: 'left' }\r\n    ];\r\n    this.loadFilters();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.init();\r\n    this.fillDropdowns();\r\n    this.toc = [\r\n      {\r\n        id: 'mainInformationAnchor',\r\n        anchor: this.mainInformationAnchor,\r\n        label: `${this.translateService.instant('page.mainData')}`\r\n      },\r\n      {\r\n        id: 'fliterElement',\r\n        anchor: this.fliterElement,\r\n        label: `${this.translateService.instant(this.getTranslateKey('filterTitle'))}`\r\n      },\r\n      {\r\n        id: 'profileAnchor',\r\n        anchor: this.profileAnchor,\r\n        label: `${this.translateService.instant(this.getTranslateKey('profileTitle'))}`\r\n      },\r\n      {\r\n        id: 'variantAnchor',\r\n        anchor: this.variantAnchor,\r\n        label: `${this.translateService.instant(this.getTranslateKey('variantTitle'))}`\r\n      },\r\n      {\r\n        id: 'siteAnchor',\r\n        anchor: this.siteAnchor,\r\n        label: `${this.translateService.instant(this.getTranslateKey('siteTitle'))}`\r\n      }\r\n    ];\r\n    super.ngOnInit();\r\n    if (this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n\r\n      if (!!this.componentData.objectId) {\r\n        this.loadData();\r\n      } else {\r\n        this.context = 'tab.createMode';\r\n        this.displayComponentContext(this.context, this.isCreateOpenMode);\r\n        this.filterData.filterListOutput.isPersistent = true;\r\n        this.graphValue = GraphType.None;\r\n      }\r\n    }\r\n\r\n    this.setSelectedAnchor('mainInformationAnchor');\r\n  }\r\n\r\n  public init() {\r\n    this.filterData = {\r\n      filterListOutput: {\r\n        bidoPreferenceUserDTO: {}\r\n      }\r\n    };\r\n  }\r\n  public isSelectedAnchor(anchorId: string): boolean {\r\n    return anchorId === this.selectedAnchor;\r\n  }\r\n\r\n  public setSelectedAnchor(anchorId: string): void {\r\n    this.pageTocService.setAnchorSelected(anchorId);\r\n    this.selectedAnchor = anchorId;\r\n  }\r\n\r\n  private registerPageTocEntrySelectedObservable(): void {\r\n    this.pageTocService.pageTocEntrySelected$.pipe(takeUntil(this.unsubscribe)).subscribe((pageTocEntrySelected) => {\r\n      this.selectedAnchor = pageTocEntrySelected;\r\n    });\r\n  }\r\n  public getComponentName(): string {\r\n    return 'ComponentCockpitFormComponent';\r\n  }\r\n\r\n  public loadFilters() {\r\n    this.componentCockpitFormService.getFilterList().subscribe(\r\n      (results) => {\r\n        let data: LabelValue<string>;\r\n        if (!!results) {\r\n          results.forEach((obj) => {\r\n            if (!!obj.bidoPreferenceUserDTO.preferenceUserId && !!obj.bidoPreferenceUserDTO.description) {\r\n              data = {\r\n                label: obj.bidoPreferenceUserDTO.description,\r\n                value: obj.bidoPreferenceUserDTO.preferenceUserId\r\n              };\r\n            }\r\n            this.propertyFilterList.push(data);\r\n          });\r\n        } else {\r\n          this.propertyFilterList = [];\r\n        }\r\n      },\r\n      (err) => {\r\n        this.messageService.showErrorMessage(err.error.errorDetail);\r\n      }\r\n    );\r\n  }\r\n\r\n  public edit(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.reloadData();\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n    this.reloadData();\r\n  }\r\n\r\n  public reloadData() {\r\n    this.customFilterTable = [];\r\n    this.customProfileTable = [];\r\n    this.loadData();\r\n  }\r\n\r\n  public loadData() {\r\n    this.isfilterTable = true;\r\n    this.isprofileTable = true;\r\n    this.isVariantTable = true;\r\n    this.isSiteTable = true;\r\n    if (!!this.componentData.objectId) {\r\n      const prefId = this.serializationService.deserialize(this.componentData.objectId).preferenceUserId;\r\n      this.componentCockpitFormService.getData(prefId).subscribe((results) => {\r\n        this.filterData = results;\r\n        this.loadProfile();\r\n        this.loadVariant();\r\n        this.loadSite();\r\n        this.loadFilterList();\r\n        if (!!this.filterData.filterListOutput && !!this.filterData.filterListOutput.filterName) {\r\n          this.graphValue =\r\n            !!this.filterData.filterListOutput.bidoPreferenceUserDTO &&\r\n            !!this.filterData.filterListOutput.bidoPreferenceUserDTO.graphicalReference\r\n              ? this.filterData.filterListOutput.bidoPreferenceUserDTO.graphicalReference\r\n              : GraphType.None;\r\n          this.context = this.filterData.filterListOutput.filterName;\r\n          this.displayComponentContext(this.context, this.isCreateOpenMode);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public loadProfile() {\r\n    this.isprofileTable = false;\r\n    this.profileTable = !!this.filterData.profileListFilterOutputList\r\n      ? this.filterData.profileListFilterOutputList\r\n      : [];\r\n    this.profileTable.forEach((row) => {\r\n      if (!!row.bidoProfileDTO && !!this.filterData.filterListOutput.bidoPreferenceUserDTO) {\r\n        LabelValueUtils.stringValueToLabel<BidoPuProfileDTO>(row.bidoProfileDTO, 'profileId', this.propertyProfile);\r\n        const dto: BidoPuProfileDTO = {\r\n          profileId: row.bidoProfileDTO.profileId,\r\n          preferenceUserId: this.filterData.filterListOutput.bidoPreferenceUserDTO.preferenceUserId\r\n        };\r\n        this.customProfileTable.push(dto);\r\n      }\r\n    });\r\n  }\r\n\r\n  public loadVariant() {\r\n    this.isVariantTable = false;\r\n    this.variantTable = !!this.filterData.variantListFilterOutputList\r\n      ? this.filterData.variantListFilterOutputList\r\n      : [];\r\n    this.variantTable.forEach((obj) => {\r\n      obj.filterPreferenceFormated = obj.name;\r\n    });\r\n  }\r\n\r\n  public loadSite() {\r\n    this.isSiteTable = false;\r\n    this.siteTable = !!this.filterData.siteListFilterOutputList ? this.filterData.siteListFilterOutputList : [];\r\n    this.siteTable.forEach((obj) => {\r\n      obj.filterPreferenceFormated = obj.name;\r\n    });\r\n  }\r\n\r\n  public loadFilterList() {\r\n    this.isfilterTable = false;\r\n    this.customFilterTable = !!this.filterData.elementFilterList ? this.filterData.elementFilterList : [];\r\n    this.customFilterTable.forEach((obj) => {\r\n      if (obj.objectKey === 'Filter') {\r\n        obj.dataKey = obj.data;\r\n        LabelValueUtils.stringValueToLabel<ElementListFilterOutput>(obj, 'dataKey', this.propertyFilterList);\r\n      }\r\n      obj.filterPreferenceFormated = `${obj.object};;${obj.data};;${obj.type};;${obj.value}`;\r\n    });\r\n    const tableList: FilterElementRow[] = [];\r\n    if (!!this.filterData.elementFilterList) {\r\n      this.filterData.elementFilterList.forEach((obj) => {\r\n        const row: FilterElementRow = {\r\n          objectKey: obj.objectKey,\r\n          dataKey: obj.objectKey === 'Filter' ? (!!obj.data ? obj.data.toString() : '') : obj.dataKey,\r\n          typeKey: obj.typeKey,\r\n          valueKey: obj.valueKey,\r\n          filterPreferenceFormated: `${obj.object};;${obj.data};;${obj.type};;${obj.value}`,\r\n          _obj: obj\r\n        };\r\n        tableList.push(row);\r\n      });\r\n      this.filterTable = tableList;\r\n      this.filterTable.forEach((row) => {\r\n        if (row.objectKey === 'Filter') {\r\n          LabelValueUtils.stringValueToLabel<FilterElementRow>(row, 'dataKey', this.propertyFilterList);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public fillDropdowns() {\r\n    this.componentCockpitFormService.getLogicData().subscribe((results) => {\r\n      this.logicalLinkList = results;\r\n    });\r\n    this.componentCockpitFormService.getProfileDropdown().subscribe((results) => {\r\n      this.propertyProfile = results;\r\n    });\r\n    this.componentCockpitFormService.getSiteDropdown().subscribe((results) => {\r\n      this.propertySite = results;\r\n    });\r\n    this.componentCockpitFormService.getVariantDropdown().subscribe((results) => {\r\n      this.propertyVariant = results;\r\n    });\r\n  }\r\n\r\n  public addFilterElement() {\r\n    this.elementFlag = true;\r\n    this.profileFlag = false;\r\n    this.siteFlag = false;\r\n    this.variantFlag = false;\r\n    this.currentIndex = -1;\r\n    this.currentData = undefined;\r\n    this.dialogOpenMode = ComponentOpenMode.Create;\r\n    this.showPopup = true;\r\n  }\r\n\r\n  public addProfileList() {\r\n    this.elementFlag = false;\r\n    this.profileFlag = true;\r\n    this.siteFlag = false;\r\n    this.variantFlag = false;\r\n    this.currentIndex = -1;\r\n    this.currentData = undefined;\r\n    this.dialogOpenMode = ComponentOpenMode.Create;\r\n    this.showPopup = true;\r\n  }\r\n\r\n  public addSiteList() {\r\n    this.elementFlag = false;\r\n    this.profileFlag = false;\r\n    this.siteFlag = true;\r\n    this.variantFlag = false;\r\n    this.currentIndex = -1;\r\n    this.currentData = undefined;\r\n    this.dialogOpenMode = ComponentOpenMode.Create;\r\n    this.showPopup = true;\r\n  }\r\n\r\n  public addVariantList() {\r\n    this.elementFlag = false;\r\n    this.profileFlag = false;\r\n    this.siteFlag = false;\r\n    this.variantFlag = true;\r\n    this.currentIndex = -1;\r\n    this.currentData = undefined;\r\n    this.dialogOpenMode = ComponentOpenMode.Create;\r\n    this.showPopup = true;\r\n  }\r\n\r\n  public openFilterElement(): void {\r\n    if (this.selectedFilter.length === 1) {\r\n      this.currentData = this.selectedFilter[0]._obj;\r\n      this.currentIndex = -1;\r\n      this.dialogOpenMode = ComponentOpenMode.Read;\r\n      this.elementFlag = true;\r\n      this.profileFlag = false;\r\n      this.siteFlag = false;\r\n      this.variantFlag = false;\r\n      this.showPopup = true;\r\n    }\r\n  }\r\n\r\n  public EditFilterElement(): void {\r\n    if (this.selectedFilter.length === 1) {\r\n      this.currentIndex = this.filterTable.findIndex((row) => {\r\n        return (\r\n          !!row.filterPreferenceFormated &&\r\n          !!this.selectedFilter[0]._obj &&\r\n          !!this.selectedFilter[0]._obj.filterPreferenceFormated &&\r\n          row.filterPreferenceFormated === this.selectedFilter[0]._obj.filterPreferenceFormated\r\n        );\r\n      });\r\n\r\n      this.currentData = { ...this.selectedFilter[0]._obj };\r\n      this.dialogOpenMode = ComponentOpenMode.Write;\r\n      this.elementFlag = true;\r\n      this.profileFlag = false;\r\n      this.siteFlag = false;\r\n      this.variantFlag = false;\r\n      this.showPopup = true;\r\n    }\r\n  }\r\n\r\n  public onAddData(data: ElementListFilterOutput) {\r\n    let fileExists = true;\r\n    if (!!data) {\r\n      this.filterTable.forEach((doc, i) => {\r\n        if (doc.filterPreferenceFormated === data.filterPreferenceFormated) {\r\n          if (this.currentIndex === i) {\r\n            fileExists = true;\r\n          } else {\r\n            fileExists = false;\r\n            this.messageService.showWarningMessage(this.getTranslateKey('warningDataExists'));\r\n          }\r\n        }\r\n      });\r\n      if (fileExists) {\r\n        if (this.currentIndex !== -1) {\r\n          this.customFilterTable[this.currentIndex] = data;\r\n          this.filterTable[this.currentIndex] = this.createFilterRow(data);\r\n        } else {\r\n          this.customFilterTable = [...this.customFilterTable, data];\r\n          this.filterTable = [...this.filterTable, this.createFilterRow(data)];\r\n        }\r\n      }\r\n    }\r\n    this.selectedFilter = [];\r\n  }\r\n\r\n  public onAddOtherData(data) {\r\n    if (this.variantFlag) {\r\n      let isExistingEvent = false;\r\n      if (!!this.variantTable) {\r\n        this.variantTable.forEach((obj) => {\r\n          if (!!obj.name && !!data && obj.name === data.name) {\r\n            isExistingEvent = true;\r\n          }\r\n        });\r\n      }\r\n      if (isExistingEvent) {\r\n        this.messageService.showWarningMessage(this.getTranslateKey('warningDataExists'));\r\n      } else {\r\n        this.variantTable = [...this.variantTable, data];\r\n      }\r\n      this.selectedVariant = [];\r\n    }\r\n    if (this.siteFlag) {\r\n      let isExistingEvent = false;\r\n      if (!!this.siteTable) {\r\n        this.siteTable.forEach((obj) => {\r\n          if (!!obj.name && !!data && obj.name === data.name) {\r\n            isExistingEvent = true;\r\n          }\r\n        });\r\n      }\r\n      if (isExistingEvent) {\r\n        this.messageService.showWarningMessage(this.getTranslateKey('warningDataExists'));\r\n      } else {\r\n        this.siteTable = [...this.siteTable, data];\r\n      }\r\n      this.selectedSite = [];\r\n    }\r\n\r\n    if (this.profileFlag) {\r\n      LabelValueUtils.stringValueToLabel<BidoPuProfileDTO>(data, 'profileId', this.propertyProfile);\r\n      let isExistingEvent = false;\r\n      if (!!this.profileTable) {\r\n        this.profileTable.forEach((obj) => {\r\n          if (!!obj.name && !!data && obj.name === data.profileId) {\r\n            isExistingEvent = true;\r\n          }\r\n        });\r\n      }\r\n      if (isExistingEvent) {\r\n        this.messageService.showWarningMessage(this.getTranslateKey('warningDataExists'));\r\n      } else {\r\n        if (!!this.filterData.filterListOutput.bidoPreferenceUserDTO) {\r\n          data.preferenceUserId = this.filterData.filterListOutput.bidoPreferenceUserDTO.preferenceUserId;\r\n        }\r\n        const obj: ProfileListFilterOutput = {\r\n          name: data.profileId,\r\n          bidoProfileDTO: data\r\n        };\r\n        this.profileTable = [...this.profileTable, obj];\r\n        // tslint:disable-next-line: no-unsafe-any\r\n        this.customProfileTable = [...this.customProfileTable, data];\r\n      }\r\n      this.selectedProfile = [];\r\n    }\r\n  }\r\n\r\n  private createFilterRow(data: ElementListFilterOutput): FilterElementRow {\r\n    const row: FilterElementRow = {\r\n      objectKey: data.objectKey,\r\n      typeKey: data.typeKey,\r\n      valueKey: !!data.valueKey ? data.valueKey : '',\r\n      dataKey: data.dataKey,\r\n      filterPreferenceFormated: data.filterPreferenceFormated,\r\n      _obj: data\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  public deleteFilterElement(): void {\r\n    const confirmMessageKey =\r\n      this.selectedFilter.length > 1 ? 'confirmDeleteSelectedLists' : 'confirmDeleteSelectedList';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(confirmMessageKey),\r\n      accept: () => {\r\n        this.filterTable = this.filterTable.filter((filterDisplayed) => {\r\n          return !this.selectedFilter.some((row) => {\r\n            return (\r\n              !!filterDisplayed &&\r\n              !!row &&\r\n              filterDisplayed.typeKey === row.typeKey &&\r\n              filterDisplayed.objectKey === row.objectKey &&\r\n              filterDisplayed.valueKey === row.valueKey &&\r\n              filterDisplayed.dataKey === row.dataKey\r\n            );\r\n          });\r\n        });\r\n        this.customFilterTable = this.customFilterTable.filter((filterDisplayed) => {\r\n          return !this.selectedFilter.some((row) => {\r\n            return (\r\n              !!filterDisplayed &&\r\n              !!row &&\r\n              filterDisplayed.typeKey === row.typeKey &&\r\n              filterDisplayed.objectKey === row.objectKey &&\r\n              filterDisplayed.valueKey === row.valueKey &&\r\n              filterDisplayed.dataKey === row.dataKey\r\n            );\r\n          });\r\n        });\r\n\r\n        this.selectedFilter = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteVariantList(): void {\r\n    const confirmMessageKey =\r\n      this.selectedFilter.length > 1 ? 'confirmDeleteSelectedLists' : 'confirmDeleteSelectedList';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(confirmMessageKey),\r\n      accept: () => {\r\n        this.variantTable = this.variantTable.filter((obj) => {\r\n          return !this.selectedVariant.some((row) => {\r\n            return !!obj && !!row && obj.name === row.name;\r\n          });\r\n        });\r\n        this.selectedVariant = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteProfileList(): void {\r\n    const confirmMessageKey =\r\n      this.selectedFilter.length > 1 ? 'confirmDeleteSelectedLists' : 'confirmDeleteSelectedList';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(confirmMessageKey),\r\n      accept: () => {\r\n        this.profileTable = this.profileTable.filter((obj) => {\r\n          return !this.selectedProfile.some((row) => {\r\n            return !!obj && !!row && obj.name === row.name;\r\n          });\r\n        });\r\n        this.customProfileTable = this.customProfileTable.filter((obj) => {\r\n          return !this.selectedProfile.some((row) => {\r\n            return !!obj && !!row && obj.profileId === row.name;\r\n          });\r\n        });\r\n        this.selectedProfile = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteSiteList(): void {\r\n    const confirmMessageKey =\r\n      this.selectedFilter.length > 1 ? 'confirmDeleteSelectedLists' : 'confirmDeleteSelectedList';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(confirmMessageKey),\r\n      accept: () => {\r\n        this.siteTable = this.siteTable.filter((obj) => {\r\n          return !this.selectedSite.some((row) => {\r\n            return !!obj && !!row && obj.name === row.name;\r\n          });\r\n        });\r\n        this.selectedSite = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public validate() {\r\n    if (\r\n      !!this.filterData.filterListOutput.bidoPreferenceUserDTO &&\r\n      StringUtils.isNullOrEmpty(this.filterData.filterListOutput.bidoPreferenceUserDTO.description)\r\n    ) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    } else {\r\n      const filterList: ElementListFilterOutput[] = [];\r\n      this.customFilterTable.forEach((row) => {\r\n        const data: ElementListFilterOutput = {};\r\n        data.filterPreferenceFormated = row.filterPreferenceFormated;\r\n        filterList.push(data);\r\n      });\r\n      const variantList: VariantListFilterOutput[] = [];\r\n      this.variantTable.forEach((row) => {\r\n        const data: VariantListFilterOutput = {};\r\n        data.filterPreferenceFormated = row.filterPreferenceFormated;\r\n        variantList.push(data);\r\n      });\r\n      const siteList: SiteListFilterOutput[] = [];\r\n      this.siteTable.forEach((row) => {\r\n        const data: SiteListFilterOutput = {};\r\n        data.filterPreferenceFormated = row.filterPreferenceFormated;\r\n        siteList.push(data);\r\n      });\r\n      this.customProfileTable.forEach((row) => {\r\n        LabelValueUtils.labelToStringValue<BidoPuProfileDTO>(row, 'profileId', this.propertyProfile);\r\n      });\r\n      if (!!this.filterData.filterListOutput.bidoPreferenceUserDTO) {\r\n        this.filterData.filterListOutput.bidoPreferenceUserDTO.graphicalReference = this.graphValue;\r\n      }\r\n      if (this.isCreateOpenMode) {\r\n        const data: SaveFilterInput = {\r\n          bidoPreferenceUserDTO: this.filterData.filterListOutput.bidoPreferenceUserDTO,\r\n          isPersistent: this.filterData.filterListOutput.isPersistent,\r\n          logicalLink: this.filterData.filterListOutput.logicalLink\r\n        };\r\n\r\n        this.showSaveSpinner = true;\r\n        this.componentCockpitFormService.saveFilter(data).subscribe(\r\n          (results) => {\r\n            if (!!this.filterData.filterListOutput.bidoPreferenceUserDTO) {\r\n              this.filterData.filterListOutput.bidoPreferenceUserDTO = results;\r\n              this.customProfileTable.forEach((row) => {\r\n                row.preferenceUserId = results.preferenceUserId;\r\n              });\r\n              const input: SaveFilterInput = {\r\n                bidoPreferenceUserDTO: this.filterData.filterListOutput.bidoPreferenceUserDTO,\r\n                isPersistent: this.filterData.filterListOutput.isPersistent,\r\n                logicalLink: this.filterData.filterListOutput.logicalLink,\r\n                elementFilterList: filterList,\r\n                variantFilterList: variantList,\r\n                siteFilterList: siteList,\r\n                bidoPuProfileList: this.customProfileTable\r\n              };\r\n              this.componentCockpitFormService.saveFilter(input).subscribe(\r\n                (response) => {\r\n                  if (!!response.preferenceUserId) {\r\n                    const prefId: BidoPreferenceUserDTOId = {\r\n                      preferenceUserId: response.preferenceUserId\r\n                    };\r\n                    this.componentData.objectId = this.serializationService.serialize(prefId);\r\n                  }\r\n                  this.updateOpenMode(ComponentOpenMode.Read);\r\n                  this.reloadData();\r\n                  this.messageService.showSuccessMessage(this.getTranslateKey('createdSuccesfuly'));\r\n                },\r\n                (err) => {\r\n                  // FAILED\r\n                  this.messageService.showErrorMessage(err.error.errorDetail);\r\n                }\r\n              );\r\n            }\r\n            this.showSaveSpinner = false;\r\n          },\r\n          (err) => {\r\n            // FAILED\r\n            this.messageService.showErrorMessage(err.error.errorDetail);\r\n            this.showSaveSpinner = false;\r\n          }\r\n        );\r\n      } else {\r\n        const inputData: SaveFilterInput = {\r\n          bidoPreferenceUserDTO: this.filterData.filterListOutput.bidoPreferenceUserDTO,\r\n          isPersistent: this.filterData.filterListOutput.isPersistent,\r\n          logicalLink: this.filterData.filterListOutput.logicalLink,\r\n          elementFilterList: filterList,\r\n          variantFilterList: variantList,\r\n          siteFilterList: siteList,\r\n          bidoPuProfileList: this.customProfileTable\r\n        };\r\n\r\n        this.showSaveSpinner = true;\r\n        this.componentCockpitFormService.saveFilter(inputData).subscribe(\r\n          (results) => {\r\n            if (!!this.filterData.filterListOutput.bidoPreferenceUserDTO) {\r\n              this.filterData.filterListOutput.bidoPreferenceUserDTO.preferenceUserId = results.preferenceUserId;\r\n            }\r\n            this.messageService.showSuccessMessage(this.getTranslateKey('savedSuccesfuly'));\r\n            this.reloadData();\r\n            this.updateOpenMode(ComponentOpenMode.Read);\r\n            this.showSaveSpinner = false;\r\n          },\r\n          (err) => {\r\n            // FAILED\r\n            this.messageService.showErrorMessage(err.error.errorDetail);\r\n            this.showSaveSpinner = false;\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserProfileManagementApi } from '../../../../../shared/api/user-profile-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../shared/services/app-config.service';\r\nimport { SaveFilterInput } from '../../../../../shared/types/api-input-types/component-filter/save-filter-input-dto.interface';\r\nimport { FilterListOutput } from '../../../../../shared/types/api-output-types/filter-list-output-dto.interface';\r\nimport { FilterOutputById } from '../../../../../shared/types/api-output-types/filter-output-by-id.interface';\r\nimport { BidoPreferenceUserDTO } from '../../../../../shared/types/api-types/bido-preference-user-dto.interface';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class ComponentCockpitFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly userProfileManagementApi : UserProfileManagementApi\r\n\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getLogicData(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(\r\n      this.userProfileManagementApi.fillLogicLink\r\n    );\r\n  }\r\n\r\n  public getData(criteria: string): Observable<FilterOutputById> {\r\n    return super.post<string, FilterOutputById>(\r\n      this.userProfileManagementApi.getBidoPreferenceById, criteria\r\n    );\r\n  }\r\n\r\n  public saveFilter(criteria: SaveFilterInput): Observable<BidoPreferenceUserDTO > {\r\n    return super.post<SaveFilterInput, BidoPreferenceUserDTO >(\r\n      this.userProfileManagementApi.saveBidoFilter, criteria\r\n    );\r\n  }\r\n\r\n  public getProfileDropdown(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(\r\n      this.userProfileManagementApi.fillProfile\r\n    );\r\n  }\r\n\r\n  public getSiteDropdown(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(\r\n      this.userProfileManagementApi.fillSite\r\n    );\r\n  }\r\n\r\n  public getVariantDropdown(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(\r\n      this.userProfileManagementApi.fillVariant\r\n    );\r\n  }\r\n\r\n  public getFilterList(): Observable<FilterListOutput[]> {\r\n    return super.post<void, FilterListOutput[]>(\r\n      this.userProfileManagementApi.findFilterList\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div *ngIf=\\\"elementFlag\\\" class=\\\"modal-title\\\">{{ getComponentName() + \\\".elementPopup\\\" | translate }}</div>\\r\\n    <div *ngIf=\\\"profileFlag\\\" class=\\\"modal-title\\\">{{ getComponentName() + \\\".profilePopup\\\" | translate }}</div>\\r\\n    <div *ngIf=\\\"variantFlag\\\" class=\\\"modal-title\\\">{{ getComponentName() + \\\".variantPopup\\\" | translate }}</div>\\r\\n    <div *ngIf=\\\"siteFlag\\\" class=\\\"modal-title\\\">{{ getComponentName() + \\\".sitePopup\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div *ngIf=\\\"elementFlag\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n            <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".object\\\" | translate }} </label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [options]=\\\"propertyObject\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n                [(ngModel)]=\\\"dialogData.object\\\"\\r\\n                (onChange)=\\\"loadData()\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n            <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".data\\\" | translate }} </label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [options]=\\\"propertyData\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n                [(ngModel)]=\\\"selectedData\\\"\\r\\n                (onChange)=\\\"loadType()\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n            <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".type\\\" | translate }} </label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [options]=\\\"propertyType\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n                [(ngModel)]=\\\"dialogData.type\\\"\\r\\n                (onChange)=\\\"loadValue()\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".value\\\" | translate }} </label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [options]=\\\"propertyValue\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n                [(ngModel)]=\\\"dialogData.value\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"profileFlag\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n            <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".profile\\\" | translate }} </label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [options]=\\\"propertyProfile\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n                [(ngModel)]=\\\"profileValue.profileId\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"variantFlag\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n            <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".variant\\\" | translate }} </label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [options]=\\\"propertyVariant\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n                [(ngModel)]=\\\"variantValue.name\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"siteFlag\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n            <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".site\\\" | translate }} </label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [options]=\\\"propertySite\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n                [(ngModel)]=\\\"siteValue.name\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"onValidate()\\\"\\r\\n      [disabled]=\\\"isChecked()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbnRlbmFuY2UvY29tcG9uZW50LWNvY2twaXQvZm9ybS9wb3B1cHMvZGlhbG9nLWNvbXBvbmVudC1jb2NrcGl0L2RpYWxvZy1jb21wb25lbnQtY29ja3BpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../shared/services/session.service';\r\nimport { FillTypeInput } from '../../../../../../shared/types/api-input-types/component-filter/fill-type-input-dto.interface';\r\nimport { FillValueInput } from '../../../../../../shared/types/api-input-types/component-filter/fill-value-input-dto.interface';\r\nimport { ElementListFilterOutput } from '../../../../../../shared/types/api-output-types/element-list-filter-output-dto.interface';\r\nimport { SiteListFilterOutput } from '../../../../../../shared/types/api-output-types/site-list-filter-output.interface';\r\nimport { VariantListFilterOutput } from '../../../../../../shared/types/api-output-types/variant-list-filter-output.interface';\r\nimport { BidoPuProfileDTO } from '../../../../../../shared/types/api-types/bido-pu-profile-dto.interface';\r\nimport { DialogComponent } from '../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { LabelValueUtils } from '../../../../../../shared/utils/label-value-utils';\r\n\r\nimport { DialogComponentCockptService } from './dialog-component-cockpit.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-component-cockpit',\r\n  templateUrl: './dialog-component-cockpit.component.html',\r\n  styleUrls: ['./dialog-component-cockpit.component.scss']\r\n})\r\nexport class DialogComponentCockpitComponent  extends DialogComponent implements OnInit {\r\n  @Input() public elementFlag : boolean;\r\n  @Input() public profileFlag : boolean;\r\n  @Input() public siteFlag : boolean;\r\n  @Input() public variantFlag : boolean;\r\n  @Input() public dialogData : ElementListFilterOutput;\r\n  @Input() public propertyProfile : LabelValue<string>[];\r\n  @Input() public propertySite : LabelValue<string>[];\r\n  @Input() public propertyVariant : LabelValue<string>[];\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Output()\r\n  public onValidated: EventEmitter<ElementListFilterOutput>;\r\n\r\n  @Output()\r\n  public onValidatedOtherData: EventEmitter<VariantListFilterOutput | SiteListFilterOutput | BidoPuProfileDTO>;\r\n\r\n  public propertyObject: LabelValue<string>[];\r\n  public propertyData: LabelValue<string>[];\r\n  public propertyType: LabelValue<string>[];\r\n  public propertyValue: LabelValue<string>[];\r\n  public variantValue : VariantListFilterOutput;\r\n  public siteValue : SiteListFilterOutput;\r\n  public profileValue : BidoPuProfileDTO;\r\n\r\n  public selectedData : string | undefined;\r\n\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly dialogComponentCockptService : DialogComponentCockptService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogComponentCockpitComponent');\r\n    this.propertyObject = [];\r\n    this.propertyData = [];\r\n    this.propertyType = [];\r\n    this.propertyValue = [];\r\n    this.onValidated = new EventEmitter<ElementListFilterOutput>();\r\n    this.onValidatedOtherData = new EventEmitter<VariantListFilterOutput | SiteListFilterOutput | BidoPuProfileDTO>();\r\n    this.variantValue = {};\r\n    this.siteValue = {};\r\n    this.profileValue = {};\r\n    this.selectedData = undefined;\r\n   }\r\n\r\n  public ngOnInit() {\r\n  this.updateOpenMode(this.openMode);\r\n  if (!this.dialogData) {\r\n    this.dialogData = {};\r\n  }\r\n  if (this.elementFlag) {\r\n   this.fillDropDown();\r\n  }\r\n  }\r\n\r\n  public fillDropDown() {\r\n    this.dialogComponentCockptService.getObjectDropdown().subscribe(\r\n      (results) => {\r\n        this.propertyObject = results || [];\r\n      },\r\n      (err) => {\r\n        this.messageService.showErrorMessage(err.error.errorDetail);\r\n      }\r\n    );\r\n    if (!!this.dialogData.object) {\r\n      if (this.dialogData.object === 'e.3') {\r\n        this.propertyData = [];\r\n        this.dialogComponentCockptService.getFilterList().subscribe(\r\n          (results) => {\r\n            let data: LabelValue<string>;\r\n            if (!!results) {\r\n              results.forEach((obj) => {\r\n                if (!!obj.bidoPreferenceUserDTO.preferenceUserId && !!obj.bidoPreferenceUserDTO.description ) {\r\n                  data = {\r\n                    label: obj.bidoPreferenceUserDTO.description,\r\n                    value: obj.bidoPreferenceUserDTO.preferenceUserId.toString()\r\n                  };\r\n                }\r\n                this.propertyData.push(data);\r\n              });\r\n            } else {\r\n              this.propertyData = [];\r\n            }\r\n\r\n            this.selectedData = this.dialogData.data;\r\n          },\r\n          (err) => {\r\n            this.messageService.showErrorMessage(err.error.errorDetail);\r\n          }\r\n        );\r\n      } else {\r\n        const data1 = this.dialogData.object;\r\n        this.dialogComponentCockptService.getDataDropdown(data1).subscribe(\r\n          (results) => {\r\n            this.propertyData = results || [];\r\n            this.selectedData = this.dialogData.data;\r\n          },\r\n          (err) => {\r\n            this.messageService.showErrorMessage(err.error.errorDetail);\r\n          }\r\n        );\r\n      }\r\n    }\r\n    const data2 : FillTypeInput = {\r\n      objectKey : this.dialogData.object,\r\n      dataKey : this.dialogData.data\r\n      };\r\n    this.dialogComponentCockptService.getTypeDropDown(data2).subscribe(\r\n      (results) => {\r\n        this.propertyType = results || [];\r\n      },\r\n      (err) => {\r\n        this.messageService.showErrorMessage(err.error.errorDetail);\r\n      }\r\n    );\r\n    const data3 : FillValueInput = {\r\n      objectKey : this.dialogData.object,\r\n      dataKey : this.dialogData.data,\r\n      typeKey : this.dialogData.type\r\n    };\r\n    this.dialogComponentCockptService.getValueDropdown(data3).subscribe(\r\n      (results) => {\r\n        this.propertyValue = results || [];\r\n      },\r\n      (err) => {\r\n        this.messageService.showErrorMessage(err.error.errorDetail);\r\n      }\r\n    );\r\n  }\r\n  public loadObjectDropdown(): void {\r\n    this.dialogComponentCockptService.getObjectDropdown().subscribe(\r\n      (results) => {\r\n        this.propertyObject = results || [];\r\n      },\r\n      (err) => {\r\n        this.messageService.showErrorMessage(err.error.errorDetail);\r\n      }\r\n    );\r\n  }\r\n\r\n  public loadData(): void {\r\n    this.selectedData = undefined;\r\n    this.dialogData.data = undefined;\r\n    this.dialogData.type = undefined;\r\n    this.dialogData.value = undefined;\r\n    this.propertyData = [];\r\n    if (!!this.dialogData.object) {\r\n      if (this.dialogData.object === 'e.3') {\r\n        this.dialogComponentCockptService.getFilterList().subscribe(\r\n          (results) => {\r\n            let data: LabelValue<string>;\r\n            if (!!results) {\r\n              results.forEach((obj) => {\r\n                if (!!obj.bidoPreferenceUserDTO.preferenceUserId && !!obj.bidoPreferenceUserDTO.description ) {\r\n                  data = {\r\n                    label: obj.bidoPreferenceUserDTO.description,\r\n                    value: obj.bidoPreferenceUserDTO.preferenceUserId\r\n                  };\r\n                }\r\n                this.propertyData.push(data);\r\n              });\r\n            } else {\r\n              this.propertyData = [];\r\n            }\r\n          },\r\n          (err) => {\r\n            this.messageService.showErrorMessage(err.error.errorDetail);\r\n          }\r\n        );\r\n      } else {\r\n        const data = this.dialogData.object;\r\n        this.dialogComponentCockptService.getDataDropdown(data).subscribe(\r\n          (results) => {\r\n            this.propertyData = results || [];\r\n          },\r\n          (err) => {\r\n            this.messageService.showErrorMessage(err.error.errorDetail);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public loadType(): void {\r\n    this.dialogData.type = undefined;\r\n    this.dialogData.value = undefined;\r\n    this.dialogData.data = this.selectedData;\r\n    const data : FillTypeInput = {\r\n      objectKey : this.dialogData.object,\r\n      dataKey : this.dialogData.data\r\n      };\r\n    this.dialogComponentCockptService.getTypeDropDown(data).subscribe(\r\n      (results) => {\r\n        this.propertyType = results || [];\r\n      },\r\n      (err) => {\r\n        this.messageService.showErrorMessage(err.error.errorDetail);\r\n      }\r\n    );\r\n  }\r\n\r\n  public loadValue(): void {\r\n    this.dialogData.value = undefined;\r\n    this.dialogData.data = this.selectedData;\r\n    const data : FillValueInput = {\r\n      objectKey : this.dialogData.object,\r\n      dataKey : this.dialogData.data,\r\n      typeKey : this.dialogData.type\r\n    };\r\n    this.dialogComponentCockptService.getValueDropdown(data).subscribe(\r\n      (results) => {\r\n        this.propertyValue = results || [];\r\n      },\r\n      (err) => {\r\n        this.messageService.showErrorMessage(err.error.errorDetail);\r\n      }\r\n    );\r\n  }\r\n\r\n  public isChecked(): boolean {\r\n    if (\r\n      (!this.dialogData.data ||\r\n      !this.dialogData.object ||\r\n      !this.dialogData.type) &&\r\n      !this.variantValue.name &&\r\n      !this.profileValue.profileId &&\r\n      !this.siteValue.name\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  public onValidate() {\r\n    if (this.elementFlag) {\r\n      this.dialogData.objectKey = this.dialogData.object;\r\n      this.dialogData.typeKey = this.dialogData.type;\r\n      this.dialogData.dataKey = this.dialogData.data;\r\n      this.dialogData.valueKey = !!this.dialogData.value ? this.dialogData.value : '';\r\n      LabelValueUtils.stringValueToLabel<ElementListFilterOutput>(this.dialogData, 'objectKey', this.propertyObject);\r\n      LabelValueUtils.stringValueToLabel<ElementListFilterOutput>(this.dialogData, 'dataKey', this.propertyData);\r\n      LabelValueUtils.stringValueToLabel<ElementListFilterOutput>(this.dialogData, 'typeKey', this.propertyType);\r\n      LabelValueUtils.stringValueToLabel<ElementListFilterOutput>(this.dialogData, 'valueKey', this.propertyValue);\r\n      this.dialogData.value = !!this.dialogData.value ? this.dialogData.value : '';\r\n      this.dialogData.filterPreferenceFormated =\r\n      `${this.dialogData.object};;${this.dialogData.data};;${this.dialogData.type};;${this.dialogData.value}`;\r\n      this.onValidated.emit(this.dialogData);\r\n      this.closeDialog();\r\n    }\r\n\r\n    if (this.variantFlag) {\r\n      this.variantValue.filterPreferenceFormated = this.variantValue.name;\r\n      this.onValidatedOtherData.emit(this.variantValue);\r\n      this.closeDialog();\r\n    }\r\n\r\n    if (this.siteFlag) {\r\n      this.siteValue.filterPreferenceFormated = this.variantValue.name;\r\n      this.onValidatedOtherData.emit(this.siteValue);\r\n      this.closeDialog();\r\n    }\r\n\r\n    if (this.profileFlag) {\r\n      this.onValidatedOtherData.emit(this.profileValue);\r\n      this.closeDialog();\r\n    }\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserProfileManagementApi } from '../../../../../../shared/api/user-profile-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { FillTypeInput } from '../../../../../../shared/types/api-input-types/component-filter/fill-type-input-dto.interface';\r\nimport { FillValueInput } from '../../../../../../shared/types/api-input-types/component-filter/fill-value-input-dto.interface';\r\nimport { FilterListOutput } from '../../../../../../shared/types/api-output-types/filter-list-output-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class DialogComponentCockptService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly userProfileManagementApi : UserProfileManagementApi\r\n\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getObjectDropdown(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(\r\n      this.userProfileManagementApi.fillObject\r\n    );\r\n  }\r\n\r\n  public getDataDropdown(input: string): Observable<LabelValue<string>[]> {\r\n    return super.post<string, LabelValue<string>[]>(\r\n      this.userProfileManagementApi.fillData, input\r\n    );\r\n  }\r\n\r\n  public getTypeDropDown(input: FillTypeInput): Observable<LabelValue<string>[]> {\r\n    return super.post<FillTypeInput, LabelValue<string>[]>(\r\n      this.userProfileManagementApi.fillType, input\r\n    );\r\n  }\r\n  public getValueDropdown(input: FillValueInput): Observable<LabelValue<string>[]> {\r\n    return super.post<FillValueInput, LabelValue<string>[]>(\r\n      this.userProfileManagementApi.fillValue, input\r\n    );\r\n  }\r\n\r\n  public getFilterList(): Observable<FilterListOutput[]> {\r\n    return super.post<void, FilterListOutput[]>(\r\n      this.userProfileManagementApi.findFilterList\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ componentData.componentId + \\\".title\\\" | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        {{ \\\"page.searchPage\\\" | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"refresh()\\\">\\r\\n      {{ \\\"global.refresh\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewFilter()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }}\\r\\n                  ({{ resultsTable ? resultsTable.length : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #table\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"resultsTableCols\\\"\\r\\n                [value]=\\\"resultsTable\\\"\\r\\n                [style]=\\\"{ margin: '0 auto', width: '100%' }\\\"\\r\\n                [(selection)]=\\\"selectedFilterList\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedFilterList.length > 0 }\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableGlobalFilter\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"table.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        *ngIf=\\\"resultsTable && resultsTable.length > 0 && selectedFilterList.length === 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"exportTable()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.export\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"hasManageAccessRight && selectedFilterList.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteSelectedFilterList()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedFilterList.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openSelectedFilterList()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n                    <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      <span *ngSwitchCase=\\\"'isPersistent'\\\">\\r\\n                        <i\\r\\n                          *ngIf=\\\"rowData[col.field] !== null && rowData[col.field]\\\"\\r\\n                          class=\\\"fa fa-fw fa-check\\\"\\r\\n                          aria-hidden=\\\"true\\\"\\r\\n                        ></i>\\r\\n                      </span>\\r\\n\\r\\n                      <span *ngSwitchCase=\\\"'isPublic'\\\">\\r\\n                        <i\\r\\n                          *ngIf=\\\"rowData[col.field] !== null && rowData[col.field]\\\"\\r\\n                          class=\\\"fa fa-fw fa-check\\\"\\r\\n                          aria-hidden=\\\"true\\\"\\r\\n                        ></i>\\r\\n                      </span>\\r\\n                      <span *ngSwitchCase=\\\"'graphicalReference'\\\">\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'RedTriangle'\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-caret-up\\\"\\r\\n                            style=\\\"color: red;font-size: 30px;margin-left: -7px;\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                          ></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'RedSquare'\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-square\\\" style=\\\"color: red;font-size: 18px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'RedCircle'\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-circle\\\" style=\\\"color: red;font-size: 18px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'YellowTriangle'\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-caret-up\\\"\\r\\n                            style=\\\"color: #FFBF00;font-size: 30px;margin-left: -7px;\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                          ></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'YellowSquare'\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-square\\\" style=\\\"color: #FFBF00;font-size: 18px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'YellowCircle'\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-circle\\\" style=\\\"color: #FFBF00;font-size: 18px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'GreenTriangle'\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-caret-up\\\"\\r\\n                            style=\\\"color: lightgreen;font-size: 30px;margin-left: -7px;\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                          ></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'GreenSquare'\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-square\\\"\\r\\n                            style=\\\"color: lightgreen;font-size: 18px;\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                          ></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'GreenCircle'\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-circle\\\"\\r\\n                            style=\\\"color: lightgreen;font-size: 18px;\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                          ></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'GreyTriangle'\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-caret-up\\\"\\r\\n                            style=\\\"color: grey;font-size: 30px;margin-left: -7px;\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                          ></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'GreySquare'\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-square\\\" style=\\\"color: grey;font-size: 18px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'GreyCircle'\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-circle\\\" style=\\\"color: grey;font-size: 18px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'BlueTriangle'\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-caret-up\\\"\\r\\n                            style=\\\"color: blue;font-size: 30px;margin-left: -7px;\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                          ></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'BlueSquare'\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-square\\\" style=\\\"color: blue;font-size: 18px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field] === 'BlueCircle'\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-circle\\\" style=\\\"color: blue;font-size: 18px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </span>\\r\\n                      </span>\\r\\n\\r\\n                      <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbnRlbmFuY2UvY29tcG9uZW50LWNvY2twaXQvc2VhcmNoL2NvbXBvbmVudC1jb2NrcGl0LXNlYXJjaC9jb21wb25lbnQtY29ja3BpdC1zZWFyY2guY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ComponentConstants } from '../../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../shared/services/confirmation.service';\r\nimport { ExportService } from '../../../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../shared/services/tab.service';\r\nimport { FilterListOutput } from '../../../../../shared/types/api-output-types/filter-list-output-dto.interface';\r\nimport { BidoPreferenceUserDTOId } from '../../../../../shared/types/api-types/bido-preference-user-dto-id.interface';\r\nimport { BidoPreferenceUserDTO } from '../../../../../shared/types/api-types/bido-preference-user-dto.interface';\r\nimport { PageComponent } from '../../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../../shared/types/table-column.interface';\r\nimport { StringUtils } from '../../../../../shared/utils/string-utils';\r\n\r\nimport { ComponentCockpitSearchService } from './component-cockpit-search.service';\r\n\r\ninterface CockPitFilter {\r\n  filterName?: string;\r\n  isPublic?: boolean;\r\n  author?: string;\r\n  isPersistent?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-component-cockpit-search',\r\n  templateUrl: './component-cockpit-search.component.html',\r\n  styleUrls: ['./component-cockpit-search.component.scss']\r\n})\r\nexport class ComponentCockpitSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  private static readonly FILTER_TABLE_EXPORT_NAME: string = 'Cockpit-filter-list';\r\n\r\n  public resultsTableCols: TableColumn[];\r\n  public resultsTable: CockPitFilter[];\r\n  public selectedFilterList : FilterListOutput[];\r\n  public isLoading : boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly exportService: ExportService,\r\n    private readonly componentCockpitSearchService: ComponentCockpitSearchService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    this.resultsTableCols = [\r\n      { field: 'filterName', alignment: 'left' },\r\n      { field: 'graphicalReference', alignment: 'left' },\r\n      { field: 'isPublic', alignment: 'left' },\r\n      { field: 'author', alignment: 'left' },\r\n      { field: 'isPersistent', alignment: 'left' },\r\n    ];\r\n    this.resultsTable = [];\r\n    this.selectedFilterList = [];\r\n    this.isLoading = false;\r\n  }\r\n\r\n  public  ngOnInit() {\r\n  super.ngOnInit();\r\n  this.displayComponentContext('global.search', true);\r\n  this.LoadFilterList();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'ComponentCockpitSearchComponent';\r\n  }\r\n\r\n  public LoadFilterList(): void {\r\n   this.componentCockpitSearchService.getFilterList().subscribe((results) => {\r\n    this.resultsTable = results;\r\n   });\r\n  }\r\n\r\n  public refresh() {\r\n    this.LoadFilterList();\r\n    this.selectedFilterList = [];\r\n  }\r\n\r\n  public exportTable(): void {\r\n    const temp: CockPitFilter[] = [];\r\n    this.resultsTable.forEach((obj) => {\r\n      const row: CockPitFilter = {\r\n        filterName : obj.filterName,\r\n        isPublic : obj.isPublic,\r\n        author : obj.author,\r\n        isPersistent : obj.isPersistent,\r\n      };\r\n      temp.push(row);\r\n    });\r\n    this.exportService.toExcel(\r\n      temp,\r\n      ComponentCockpitSearchComponent.FILTER_TABLE_EXPORT_NAME,\r\n      this.componentData.componentId\r\n    );\r\n  }\r\n\r\n  public deleteSelectedFilterList(): void {\r\n    const confirmMessageKey =\r\n      this.selectedFilterList.length > 1\r\n        ? 'confirmDeleteSelectedLists'\r\n        : 'confirmDeleteSelectedList';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(confirmMessageKey),\r\n      accept: () => {\r\n        // tslint:disable-next-line:no-any\r\n        const removeList: BidoPreferenceUserDTO[] = [];\r\n        this.selectedFilterList.forEach((obj) => {\r\n          if (!!obj.bidoPreferenceUserDTO && !!obj.bidoPreferenceUserDTO.preferenceUserId ) {\r\n            removeList.push(obj.bidoPreferenceUserDTO);\r\n          }\r\n        });\r\n        this.componentCockpitSearchService.removeFilterList(removeList).subscribe(() => {\r\n          this.LoadFilterList();\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('onSuccessDeleteList'));\r\n        }, (err) => {\r\n          this.messageService.showErrorMessage(err.error.errorDetail);\r\n        });\r\n\r\n        this.selectedFilterList = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public openNewFilter(): void {\r\n    this.openCockpitFilter(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  public openSelectedFilterList(): void {\r\n    this.selectedFilterList.forEach((obj) => {\r\n      if (!!obj.bidoPreferenceUserDTO) {\r\n        if (StringUtils.isNullOrEmpty(obj.bidoPreferenceUserDTO.preferenceUserId)) {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingstoreID'));\r\n        } else {\r\n          this.openCockpitFilter(obj.bidoPreferenceUserDTO.preferenceUserId, ComponentOpenMode.Read);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private openCockpitFilter(objectId: string | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.MAI_COMPONENT_COCKPIT_FORM,\r\n      openMode\r\n    };\r\n    if (!!objectId) {\r\n      const prefId: BidoPreferenceUserDTOId = {\r\n        preferenceUserId: objectId\r\n      };\r\n      data.objectId = this.serializationService.serialize(prefId);\r\n    }\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserProfileManagementApi } from '../../../../../shared/api/user-profile-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../shared/services/app-config.service';\r\nimport { FilterListOutput } from '../../../../../shared/types/api-output-types/filter-list-output-dto.interface';\r\nimport { BidoPreferenceUserDTO } from '../../../../../shared/types/api-types/bido-preference-user-dto.interface';\r\n\r\n@Injectable()\r\nexport class ComponentCockpitSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly userProfileManagementApi : UserProfileManagementApi\r\n\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getFilterList(): Observable<FilterListOutput[]> {\r\n    return super.post<void, FilterListOutput[]>(\r\n      this.userProfileManagementApi.findFilterList\r\n    );\r\n  }\r\n\r\n  public removeFilterList(criteria: BidoPreferenceUserDTO[]): Observable<void> {\r\n    return super.post<BidoPreferenceUserDTO[], void>(\r\n      this.userProfileManagementApi.removeBidoUserFilter, criteria\r\n    );\r\n  }\r\n}\r\n","import { LabelValue } from '../../shared/types/label-value.interface';\r\n\r\nexport class LabelValueUtils {\r\n  /*\r\n   * DEPRECATED: do not use; create an interface instead\r\n   */\r\n  public static stringValueToLabel<T>(object: T, propertyName: string, propertyList: LabelValue<string>[]): boolean {\r\n    if (!!object[propertyName]) {\r\n      const labelValue = propertyList.find((property) => property.value === object[propertyName]);\r\n      if (!!labelValue) {\r\n        object[propertyName] = labelValue.label;\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /*\r\n   * DEPRECATED: do not use; create an interface instead\r\n   */\r\n  public static labelToStringValue<T>(object: T, propertyName: string, propertyList: LabelValue<string>[]): boolean {\r\n    if (!!object[propertyName]) {\r\n      const labelValue = propertyList.find((property) => property.label === object[propertyName]);\r\n      if (!!labelValue) {\r\n        object[propertyName] = labelValue.value;\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n"],"sourceRoot":""}