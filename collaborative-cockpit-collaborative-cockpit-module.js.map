{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/primeng/components/selectbutton/selectbutton.js","webpack:///./node_modules/primeng/dialog.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./node_modules/primeng/inputtextarea.js","webpack:///./node_modules/primeng/keyfilter.js","webpack:///./node_modules/primeng/message.js","webpack:///./node_modules/primeng/overlaypanel.js","webpack:///./node_modules/primeng/radiobutton.js","webpack:///./node_modules/primeng/selectbutton.js","webpack:///./node_modules/primeng/splitbutton.js","webpack:///./node_modules/primeng/treetable.js","webpack:///./src/app/main/collaborative-cockpit/collaborative-cockpit.module.ts","webpack:///./src/app/main/collaborative-cockpit/engineering-data-exchange-search/engineering-data-exchange-search.component.html","webpack:///./src/app/main/collaborative-cockpit/engineering-data-exchange-search/engineering-data-exchange-search.component.scss","webpack:///./src/app/main/collaborative-cockpit/engineering-data-exchange-search/engineering-data-exchange-search.component.ts","webpack:///./src/app/main/collaborative-cockpit/engineering-data-exchange-search/engineering-data-exchange-search.service.ts","webpack:///./src/app/main/collaborative-cockpit/engineering-data-exchange-search/import-report-popup/import-report-popup.component.html","webpack:///./src/app/main/collaborative-cockpit/engineering-data-exchange-search/import-report-popup/import-report-popup.component.scss","webpack:///./src/app/main/collaborative-cockpit/engineering-data-exchange-search/import-report-popup/import-report-popup.component.ts","webpack:///./src/app/main/collaborative-cockpit/fleet-data-exchange/fleet-data-exchange.component.html","webpack:///./src/app/main/collaborative-cockpit/fleet-data-exchange/fleet-data-exchange.component.scss","webpack:///./src/app/main/collaborative-cockpit/fleet-data-exchange/fleet-data-exchange.component.ts","webpack:///./src/app/main/collaborative-cockpit/fleet-data-exchange/fleet-data-exchange.service.ts","webpack:///./src/app/main/collaborative-cockpit/flight-data-exchange/flight-data-exchange.component.html","webpack:///./src/app/main/collaborative-cockpit/flight-data-exchange/flight-data-exchange.component.ts","webpack:///./src/app/main/collaborative-cockpit/flight-data-exchange/flight-data-exchange.service.ts","webpack:///./src/app/main/collaborative-cockpit/hr-data-exchange/hr-data-exchange.component.html","webpack:///./src/app/main/collaborative-cockpit/hr-data-exchange/hr-data-exchange.component.ts","webpack:///./src/app/main/collaborative-cockpit/hr-data-exchange/hr-data-exchange.service.ts","webpack:///./src/app/main/collaborative-cockpit/logistic-data-exchange/logistic-data-exchange.component.html","webpack:///./src/app/main/collaborative-cockpit/logistic-data-exchange/logistic-data-exchange.component.ts","webpack:///./src/app/main/collaborative-cockpit/logistic-data-exchange/logistic-data-exchange.service.ts","webpack:///./src/app/shared/components/dialog-assets-selection/assets-selection-dialog.component.html","webpack:///./src/app/shared/components/dialog-assets-selection/assets-selection-dialog.component.scss","webpack:///./src/app/shared/components/dialog-assets-selection/assets-selection-dialog.component.ts","webpack:///./src/app/shared/components/dialog-assets-selection/assets-selection-dialog.module.ts","webpack:///./src/app/shared/components/dialog-assets-selection/assets-selection-dialog.service.ts","webpack:///./src/app/shared/utils/file-utils.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+GAAe,GAAG,IAAqC,CAAC,iCAAO,EAAE,oCAAC,CAAC;AAAA;AAAA;AAAA,oGAAC,CAAC,KAAK,EAA6E,CAAC,kBAAkB,aAAa,gBAAgB,+BAA+B,WAAW,4FAA4F,WAAW,kEAAkE,4DAA4D,YAAY,IAAI,kBAAkB,yBAAyB,0DAA0D,kBAAkB,sBAAsB,yCAAyC,UAAU,cAAc,yBAAyB,iEAAiE,cAAc,IAAI,yCAAyC,SAAS,0CAA0C,0FAA0F,qOAAqO,0DAA0D,uDAAuD,iNAAiN,0BAA0B,4BAA4B,KAAK,KAAK,gDAAgD,mFAAmF,sBAAsB,KAAK,kCAAkC,iDAAiD,KAAK,GAAG,mBAAmB,8HAA8H,oIAAoI,2CAA2C,qBAAqB,uBAAuB,eAAe,0BAA0B,GAAG,wBAAwB,yCAAyC,oBAAoB,KAAK,gDAAgD,4DAA4D,qBAAqB,OAAO,EAAE,oBAAoB,KAA0B,qBAAqB;;AAEr/E,yC;;;;;;;;;;;;ACFa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,oBAAoB,mBAAO,CAAC,oFAAsB;AAClD,cAAc,mBAAO,CAAC,oEAAgB;AACtC;AACA;AACA,gDAAgD,qBAAqB,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,yBAAyB,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uPAAuP,yFAAyF,mBAAmB,iCAAiC,yPAAyP,whBAAwhB,wBAAwB,2JAA2J,WAAW,4BAA4B;AAC/2C;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,wC;;;;;;;;;;;;AC5KA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sFAA4B,G;;;;;;;;;;;;ACN7C;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sGAAoC,G;;;;;;;;;;;;ACNrD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kHAA0C,G;;;;;;;;;;;;ACN3D;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kGAAkC,G;;;;;;;;;;;;ACNnD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0FAA8B,G;;;;;;;;;;;;ACN/C;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8GAAwC,G;;;;;;;;;;;;ACNzD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0GAAsC,G;;;;;;;;;;;;ACNvD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8GAAwC,G;;;;;;;;;;;;A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","file":"collaborative-cockpit-collaborative-cockpit-module.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar objectutils_1 = require(\"../utils/objectutils\");\nvar forms_1 = require(\"@angular/forms\");\nexports.SELECTBUTTON_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return SelectButton; }),\n    multi: true\n};\nvar SelectButton = /** @class */ (function () {\n    function SelectButton(cd) {\n        this.cd = cd;\n        this.tabindex = 0;\n        this.onOptionClick = new core_1.EventEmitter();\n        this.onChange = new core_1.EventEmitter();\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n    }\n    Object.defineProperty(SelectButton.prototype, \"options\", {\n        get: function () {\n            return this._options;\n        },\n        set: function (val) {\n            var opts = this.optionLabel ? objectutils_1.ObjectUtils.generateSelectItems(val, this.optionLabel) : val;\n            this._options = opts;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SelectButton.prototype.writeValue = function (value) {\n        this.value = value;\n        this.cd.markForCheck();\n    };\n    SelectButton.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    SelectButton.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    SelectButton.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    SelectButton.prototype.onItemClick = function (event, option, index) {\n        if (this.disabled || option.disabled) {\n            return;\n        }\n        if (this.multiple) {\n            var itemIndex_1 = this.findItemIndex(option);\n            if (itemIndex_1 != -1)\n                this.value = this.value.filter(function (val, i) { return i != itemIndex_1; });\n            else\n                this.value = (this.value || []).concat([option.value]);\n        }\n        else {\n            this.value = option.value;\n        }\n        this.onOptionClick.emit({\n            originalEvent: event,\n            option: option,\n            index: index\n        });\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    };\n    SelectButton.prototype.onFocus = function (event) {\n        this.focusedItem = event.target;\n    };\n    SelectButton.prototype.onBlur = function (event) {\n        this.focusedItem = null;\n        this.onModelTouched();\n    };\n    SelectButton.prototype.isSelected = function (option) {\n        if (this.multiple)\n            return this.findItemIndex(option) != -1;\n        else\n            return objectutils_1.ObjectUtils.equals(option.value, this.value, this.dataKey);\n    };\n    SelectButton.prototype.findItemIndex = function (option) {\n        var index = -1;\n        if (this.value) {\n            for (var i = 0; i < this.value.length; i++) {\n                if (this.value[i] == option.value) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], SelectButton.prototype, \"tabindex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SelectButton.prototype, \"multiple\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], SelectButton.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SelectButton.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"dataKey\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"optionLabel\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], SelectButton.prototype, \"onOptionClick\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], SelectButton.prototype, \"onChange\", void 0);\n    __decorate([\n        core_1.ContentChild(core_1.TemplateRef),\n        __metadata(\"design:type\", Object)\n    ], SelectButton.prototype, \"itemTemplate\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], SelectButton.prototype, \"options\", null);\n    SelectButton = __decorate([\n        core_1.Component({\n            selector: 'p-selectButton',\n            template: \"\\n        <div [ngClass]=\\\"'ui-selectbutton ui-buttonset ui-widget ui-corner-all ui-buttonset-' + (options ? options.length : 0)\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div *ngFor=\\\"let option of options; let i = index\\\" #btn class=\\\"ui-button ui-widget ui-state-default ui-button-text-only {{option.styleClass}}\\\"\\n                [ngClass]=\\\"{'ui-state-active':isSelected(option), 'ui-state-disabled': disabled || option.disabled, 'ui-state-focus': btn == focusedItem, \\n                'ui-button-text-icon-left': (option.icon != null), 'ui-button-icon-only': (option.icon && !option.label)}\\\" (click)=\\\"onItemClick($event,option,i)\\\" (keydown.enter)=\\\"onItemClick($event,option,i)\\\"\\n                [attr.title]=\\\"option.title\\\" [attr.aria-label]=\\\"option.label\\\" (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\" [attr.tabindex]=\\\"tabindex\\\">\\n                <ng-container *ngIf=\\\"!itemTemplate else customcontent\\\">\\n                    <span [ngClass]=\\\"['ui-clickable', 'ui-button-icon-left']\\\" [class]=\\\"option.icon\\\" *ngIf=\\\"option.icon\\\"></span>\\n                    <span class=\\\"ui-button-text ui-clickable\\\">{{option.label||'ui-btn'}}</span>\\n                </ng-container>\\n                <ng-template #customcontent>\\n                    <ng-container *ngTemplateOutlet=\\\"itemTemplate; context: {$implicit: option, index: i}\\\"></ng-container>\\n                </ng-template>\\n            </div>\\n        </div>\\n    \",\n            providers: [exports.SELECTBUTTON_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\n    ], SelectButton);\n    return SelectButton;\n}());\nexports.SelectButton = SelectButton;\nvar SelectButtonModule = /** @class */ (function () {\n    function SelectButtonModule() {\n    }\n    SelectButtonModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [SelectButton],\n            declarations: [SelectButton]\n        })\n    ], SelectButtonModule);\n    return SelectButtonModule;\n}());\nexports.SelectButtonModule = SelectButtonModule;\n//# sourceMappingURL=selectbutton.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dialog/dialog\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputtextarea/inputtextarea\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/keyfilter/keyfilter\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/message/message\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/overlaypanel/overlaypanel\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/radiobutton/radiobutton\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/selectbutton/selectbutton\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/splitbutton/splitbutton\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/treetable/treetable\"));","import { DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\r\n\r\nimport { AngularCommonSharedModule } from '../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../shared/app-common-shared.module';\r\nimport { AssetsSelectionDialogModule } from '../../shared/components/dialog-assets-selection/assets-selection-dialog.module';\r\nimport { DialogSearchCustomerModule } from '../../shared/components/dialog-search-customer/dialog-search-customer.module';\r\nimport { DialogSearchEquipmentModule } from '../../shared/components/dialog-search-equipment/dialog-search-equipment.module';\r\nimport { DialogSearchItemModule } from '../../shared/components/dialog-search-item/dialog-search-item.module';\r\nimport { DialogTableModule } from '../../shared/components/dialog-table/dialog-table.module';\r\nimport { ModalModule } from '../../shared/components/modal/modal.module';\r\nimport { DynamicComponentLoaderModule } from '../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { EngineeringDataExchangeSearchComponent } from './engineering-data-exchange-search/engineering-data-exchange-search.component';\r\nimport { EgineeringDataExchangeSearchService } from './engineering-data-exchange-search/engineering-data-exchange-search.service';\r\nimport { ImportReportPopupComponent } from './engineering-data-exchange-search/import-report-popup/import-report-popup.component';\r\nimport { FleetDataExchangeComponent } from './fleet-data-exchange/fleet-data-exchange.component';\r\nimport { FleetDataExchangeService } from './fleet-data-exchange/fleet-data-exchange.service';\r\nimport { FlightDataExchangeComponent } from './flight-data-exchange/flight-data-exchange.component';\r\nimport { FlightDataExchangeService } from './flight-data-exchange/flight-data-exchange.service';\r\nimport { HrDataExchangeComponent } from './hr-data-exchange/hr-data-exchange.component';\r\nimport { HrDataExchangeService } from './hr-data-exchange/hr-data-exchange.service';\r\nimport { LogisticDataExchangeComponent } from './logistic-data-exchange/logistic-data-exchange.component';\r\nimport { LogisticDataExchangeService } from './logistic-data-exchange/logistic-data-exchange.service';\r\n\r\nconst PRIMENG_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DialogModule,\r\n  DropdownModule,\r\n  InputTextareaModule,\r\n  RadioButtonModule,\r\n  SelectButtonModule,\r\n  SplitButtonModule,\r\n  TableModule,\r\n  TooltipModule,\r\n  TriStateCheckboxModule,\r\n  FileUploadModule,\r\n  KeyFilterModule,\r\n  OverlayPanelModule,\r\n  TreeTableModule\r\n];\r\n\r\nconst COMPONENTS = [ImportReportPopupComponent];\r\n\r\nconst DYNAMIC_COMPONENTS = [\r\n  EngineeringDataExchangeSearchComponent,\r\n  FleetDataExchangeComponent,\r\n  FlightDataExchangeComponent,\r\n  HrDataExchangeComponent,\r\n  LogisticDataExchangeComponent\r\n];\r\n\r\nconst SERVICES = [\r\n  EgineeringDataExchangeSearchService,\r\n  FleetDataExchangeService,\r\n  FlightDataExchangeService,\r\n  HrDataExchangeService,\r\n  LogisticDataExchangeService\r\n];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ModalModule,\r\n    DialogSearchCustomerModule,\r\n    DialogSearchEquipmentModule,\r\n    DialogSearchItemModule,\r\n    DialogTableModule,\r\n    AssetsSelectionDialogModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...PRIMENG_MODULES\r\n  ],\r\n  providers: [...SERVICES, DatePipe]\r\n})\r\nexport class CollaborativeCockpitModule {}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        {{ \\\"page.searchPage\\\" | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"section flex--1\\\">\\r\\n                  <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".type\\\" | translate }}</h4>\\r\\n                  <div class=\\\"section-content\\\">\\r\\n                    <div class=\\\"form-group form-group-select-buton\\\">\\r\\n                      <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n\\r\\n                      <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                        <p-selectButton\\r\\n                          [(ngModel)]=\\\"type\\\"\\r\\n                          [options]=\\\"propertyTypeList\\\"\\r\\n                          (onChange)=\\\"onTypeChange($event)\\\"\\r\\n                        ></p-selectButton>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"section flex--1\\\">\\r\\n                  <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".format\\\" | translate }}</h4>\\r\\n                  <div class=\\\"section-content\\\">\\r\\n                    <div class=\\\"form-group form-group-select-buton\\\">\\r\\n                      <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n\\r\\n                      <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                        <p-selectButton\\r\\n                          [(ngModel)]=\\\"format\\\"\\r\\n                          [options]=\\\"propertyFormatList\\\"\\r\\n                          (onChange)=\\\"onFormatChange($event)\\\"\\r\\n                        ></p-selectButton>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"section flex--1\\\"></div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".data\\\" | translate }}</h4>\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"form-group form-group-select-buton\\\">\\r\\n                    <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n\\r\\n                    <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                      <p-selectButton\\r\\n                        [(ngModel)]=\\\"data\\\"\\r\\n                        [options]=\\\"propertyDataList\\\"\\r\\n                        (onChange)=\\\"setSearchCriteriaVisibility($event)\\\"\\r\\n                      ></p-selectButton>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\" *ngIf=\\\"showSearchCriteria\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group flex--4\\\" [ngClass]=\\\"{ required: true }\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".family\\\" | translate }} </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        (onChange)=\\\"onFamilyChange($event)\\\"\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [(ngModel)]=\\\"selectedFamily\\\"\\r\\n                        [options]=\\\"familyValues\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group flex--4\\\" [ngClass]=\\\"{ required: true }\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".variant\\\" | translate }} </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        (onChange)=\\\"setImportSectionVisibility($event)\\\"\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        [(ngModel)]=\\\"selectedVariant\\\"\\r\\n                        [options]=\\\"variantValues\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      >\\r\\n                      </p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group flex--4\\\"></div>\\r\\n                  <div class=\\\"form-group flex--4\\\"></div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\" *ngIf=\\\"visibilityImport()\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"format === EXCEL && data === IPC\\\">\\r\\n                  {{ componentData.componentId + \\\".importExcelIpc\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"format === EXCEL && data === MAINTENANCE\\\">\\r\\n                  {{ componentData.componentId + \\\".importExcelMaintenance\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"format === EXCEL && data === LOGISTIC\\\">\\r\\n                  {{ componentData.componentId + \\\".importExcelLogistics\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"format === EXCEL && data === FEEDBACK\\\">\\r\\n                  {{ componentData.componentId + \\\".importExcelExperienceFeedback\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"format === EXCEL && data === FUNCTIONAL\\\">\\r\\n                  {{ componentData.componentId + \\\".importFunctionalLocations\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"format === EXCEL && data === AMG\\\">\\r\\n                  {{ componentData.componentId + \\\".importExcelAmg\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"format === 'XML' && data === 'IPC'\\\">\\r\\n                  {{ componentData.componentId + \\\".importXmlIpc\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"format === 'XML' && data === 'Maintenance'\\\">\\r\\n                  {{ componentData.componentId + \\\".importXmlMaintenance\\\" | translate }}\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div *ngIf=\\\"validTypeFormatDataCombination()\\\" class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <span\\r\\n                      class=\\\"form-label\\\"\\r\\n                      (click)=\\\"openTemplate(loadTemplate())\\\"\\r\\n                      style=\\\"cursor: pointer; text-decoration: underline; color: blue; width: min-content\\\"\\r\\n                    >\\r\\n                      {{ loadTemplate() }}\\r\\n                    </span>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"selectedVariant !== '' && showSearchCriteria\\\" class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".selectedFamilyVariant\\\" | translate }}:\\r\\n                      {{ familyAndVariantSelected() }}\\r\\n                    </label>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-row  grid-cell--6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".fileToImport\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n                      <div class=\\\"form-control-data\\\">\\r\\n                        {{ fileName }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"btn-file-upload-wrapper\\\">\\r\\n                        <p-fileUpload\\r\\n                          #fileUploader\\r\\n                          *ngIf=\\\"!isReadOpenMode\\\"\\r\\n                          class=\\\"aw-fileupload\\\"\\r\\n                          name=\\\"document[]\\\"\\r\\n                          customUpload=\\\"true\\\"\\r\\n                          mode=\\\"basic\\\"\\r\\n                          auto=\\\"true\\\"\\r\\n                          chooseLabel=\\\"\\\"\\r\\n                          (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                          [disabled]=\\\"enableImport()\\\"\\r\\n                        >\\r\\n                        </p-fileUpload>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <!-- <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label selectedFV\\\">\\r\\n                      {{ componentData.componentId + \\\".fileToImport\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div style=\\\"width: 28rem\\\" class=\\\"form-control form-control-with-btn selectedFV\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n                      <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"fileName\\\" [disabled]=\\\"true\\\" />\\r\\n\\r\\n                      <div>\\r\\n                        <p-fileUpload\\r\\n                          #fileUploader\\r\\n                          class=\\\"aw-fileupload\\\"\\r\\n                          name=\\\"document\\\"\\r\\n                          customUpload=\\\"true\\\"\\r\\n                          mode=\\\"basic\\\"\\r\\n                          auto=\\\"true\\\"\\r\\n                          chooseLabel=\\\"{{'global.upload' | translate}}\\\"\\r\\n                          (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                          [disabled]=\\\"enableImport()\\\"\\r\\n                        ></p-fileUpload>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div> -->\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label *ngIf=\\\"format === 'EXCEL' && data === 'IPC'\\\" class=\\\"form-label selectedFV\\\">\\r\\n                      {{ componentData.componentId + \\\".ipcCheckbox\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label *ngIf=\\\"format === 'EXCEL' && data === 'Maintenance'\\\" class=\\\"form-label selectedFV\\\">\\r\\n                      {{ componentData.componentId + \\\".maintenanceCheckbox\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label *ngIf=\\\"format === 'XML' && data === 'IPC'\\\" class=\\\"form-label selectedFV\\\">\\r\\n                      {{ componentData.componentId + \\\".ipcCheckbox\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label *ngIf=\\\"format === 'XML' && data === 'Maintenance'\\\" class=\\\"form-label selectedFV\\\">\\r\\n                      {{ componentData.componentId + \\\".maintenanceCheckbox\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label *ngIf=\\\"data === 'Logistics'\\\" class=\\\"form-label selectedFV\\\">\\r\\n                      {{ componentData.componentId + \\\".logisticsCheckbox\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label *ngIf=\\\"data === 'Experience Feedback'\\\" class=\\\"form-label selectedFV\\\">\\r\\n                      {{ componentData.componentId + \\\".experienceFeedbackCheckbox\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-checkbox\\r\\n                        *ngIf=\\\"format === 'EXCEL' && data === 'IPC'\\\"\\r\\n                        binary=\\\"true\\\"\\r\\n                        class=\\\"aw-checkbox\\\"\\r\\n                        [(ngModel)]=\\\"ipcExcelCheckbox\\\"\\r\\n                        [disabled]=\\\"\\\"\\r\\n                      ></p-checkbox>\\r\\n                      <p-checkbox\\r\\n                        *ngIf=\\\"format === 'EXCEL' && data === 'Maintenance'\\\"\\r\\n                        binary=\\\"true\\\"\\r\\n                        class=\\\"aw-checkbox\\\"\\r\\n                        [(ngModel)]=\\\"maintenanceExcelCheckbox\\\"\\r\\n                        [disabled]=\\\"\\\"\\r\\n                      ></p-checkbox>\\r\\n                      <p-checkbox\\r\\n                        *ngIf=\\\"format === 'XML' && data === 'IPC'\\\"\\r\\n                        binary=\\\"true\\\"\\r\\n                        class=\\\"aw-checkbox\\\"\\r\\n                        [(ngModel)]=\\\"ipcXmlCheckbox\\\"\\r\\n                        [disabled]=\\\"\\\"\\r\\n                      ></p-checkbox>\\r\\n                      <p-checkbox\\r\\n                        *ngIf=\\\"format === 'XML' && data === 'Maintenance'\\\"\\r\\n                        binary=\\\"true\\\"\\r\\n                        class=\\\"aw-checkbox\\\"\\r\\n                        [(ngModel)]=\\\"maintenanceXmlCheckbox\\\"\\r\\n                        [disabled]=\\\"\\\"\\r\\n                      ></p-checkbox>\\r\\n                      <p-checkbox\\r\\n                        *ngIf=\\\"data === 'Logistics'\\\"\\r\\n                        binary=\\\"true\\\"\\r\\n                        class=\\\"aw-checkbox\\\"\\r\\n                        [(ngModel)]=\\\"logisticsCheckbox\\\"\\r\\n                        [disabled]=\\\"\\\"\\r\\n                      ></p-checkbox>\\r\\n                      <p-checkbox\\r\\n                        *ngIf=\\\"data === 'Experience Feedback'\\\"\\r\\n                        binary=\\\"true\\\"\\r\\n                        class=\\\"aw-checkbox\\\"\\r\\n                        [(ngModel)]=\\\"experienceFeedbackCheckbox\\\"\\r\\n                        [disabled]=\\\"\\\"\\r\\n                      ></p-checkbox>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"format !== ''\\\" class=\\\"grid-row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      *ngIf=\\\"format === 'XML'\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn-with-spinner\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"simulate()\\\"\\r\\n                    >\\r\\n                      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSimulateSpinner\\\"></span>\\r\\n                      {{ componentData.componentId + \\\".simulateFile\\\" | translate }}\\r\\n                    </button>\\r\\n\\r\\n                    &nbsp;&nbsp;&nbsp;\\r\\n\\r\\n                    <button type=\\\"button\\\" mat-raised-button class=\\\"btn-with-spinner\\\" (click)=\\\"import()\\\">\\r\\n                      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                      {{ componentData.componentId + \\\".importFile\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\" *ngIf=\\\"visibilityImport()\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainer class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".importReportList\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #ptable\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"reportTableCols\\\"\\r\\n                [value]=\\\"importReport\\\"\\r\\n                [(selection)]=\\\"selectedReports\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedReports.length > 0 }\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableGlobalFilter\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"ptable.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <div class=\\\"aw-btn-group aw-table-actions\\\">\\r\\n                        <button\\r\\n                          *ngIf=\\\"hasManageAccessRight && selectedReports.length > 0\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteReports()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td\\r\\n                      style=\\\"overflow: hidden; text-overflow: ellipsis;\\\"\\r\\n                      *ngFor=\\\"let col of columns\\\"\\r\\n                      [ngSwitch]=\\\"col.field\\\"\\r\\n                      [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                    >\\r\\n                      <div *ngSwitchCase=\\\"'reportName'\\\">\\r\\n                        <span\\r\\n                          (click)=\\\"openReportDetail(rowData)\\\"\\r\\n                          style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n                        >\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </span>\\r\\n                      </div>\\r\\n                      <div *ngSwitchCase=\\\"'familyCode'\\\">\\r\\n                        <span> {{ rowData.labelValueDTO.label }} </span>\\r\\n                      </div>\\r\\n                      <div *ngSwitchCase=\\\"'statusDate'\\\">\\r\\n                        <span>\\r\\n                          {{ rowData[col.field] | date: \\\"yyyy/MM/dd HH:mm\\\":\\\"\\\":translateService.currentLang }}\\r\\n                        </span>\\r\\n                      </div>\\r\\n                      <div *ngSwitchDefault>{{ rowData[col.field] }}</div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- For Type Export > Excel > IPC -->\\r\\n      <div class=\\\"grid-row\\\" *ngIf=\\\"visibilityExportExcelIpc()\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainer class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\" *ngIf=\\\"selectedVariant !== ''\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".exportIPC\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"selectedVariant !== ''\\\" class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"grid-row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" mat-raised-button (click)=\\\"exportExcelIpc()\\\">\\r\\n                        <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                        {{ componentData.componentId + \\\".export\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- For Type Export > Excel > Maintenance -->\\r\\n      <div class=\\\"grid-row\\\" *ngIf=\\\"visibilityExportExcelMaintenance()\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainer class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\" *ngIf=\\\"selectedVariant !== ''\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".maintenanceData\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"selectedVariant !== ''\\\" class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"form-group flex--4\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".taskGroup\\\" | translate }} </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [(ngModel)]=\\\"selectedTaskGroup\\\"\\r\\n                        [options]=\\\"taskGroups\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group flex--4\\\"></div>\\r\\n                  <div class=\\\"form-group flex--4\\\"></div>\\r\\n                  <div class=\\\"form-group flex--4\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn-with-spinner\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"exportMaintenanceExcel()\\\"\\r\\n                      >\\r\\n                        <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                        {{ componentData.componentId + \\\".export\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- For Type Export > XML > IPC -->\\r\\n      <div class=\\\"grid-row\\\" *ngIf=\\\"visibilityExportXmlIpc()\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainer class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\" *ngIf=\\\"selectedVariant !== ''\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".exportIPC\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"selectedVariant !== ''\\\" class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".selectedFamilyVariant\\\" | translate }}:\\r\\n                      {{ familyAndVariantSelected() }}\\r\\n                    </label>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"grid-cell--3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".identifyRevision\\\" | translate }}:\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [(ngModel)]=\\\"ipcExportData.lastPublicationDate\\\"\\r\\n                          appendTo=\\\"body\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"grid-cell--12\\\">\\r\\n                    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                      <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                        <div class=\\\"section\\\">\\r\\n                          <h4 class=\\\"section-title\\\">\\r\\n                            {{ componentData.componentId + \\\".selectExportData\\\" | translate }}\\r\\n                          </h4>\\r\\n                          <div class=\\\"section-content\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ componentData.componentId + \\\".ipcStructureCheckbox\\\" | translate }}\\r\\n                              </label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-checkbox\\r\\n                                  binary=\\\"true\\\"\\r\\n                                  class=\\\"aw-checkbox general-type-checkbox\\\"\\r\\n                                  [(ngModel)]=\\\"ipcExportData.withFamilyVariant\\\"\\r\\n                                ></p-checkbox>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"section\\\">\\r\\n                          <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".itemFilter\\\" | translate }}</h4>\\r\\n                          <div class=\\\"section-content\\\">\\r\\n                            <div class=\\\"column\\\">\\r\\n                              <!-- Item -->\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group flex--3\\\">\\r\\n                                  <!-- <label class=\\\"form-label\\\">{{ getComponentName() + \\\".itemGroup\\\" | translate }}</label> -->\\r\\n\\r\\n                                  <div class=\\\"form-control form-control-with-modal\\\">\\r\\n                                    <div class=\\\"form-control-data\\\" (click)=\\\"openItemTableDialog()\\\">\\r\\n                                      {{ ipcExportData.chapter }}\\r\\n                                      <span *ngIf=\\\"ipcExportData.section\\\"> - {{ ipcExportData.section }}</span>\\r\\n                                      <span *ngIf=\\\"ipcExportData.subject\\\"> - {{ ipcExportData.subject }}</span>\\r\\n                                      <span *ngIf=\\\"ipcExportData.sheet\\\"> - {{ ipcExportData.sheet }}</span>\\r\\n                                      <span *ngIf=\\\"ipcExportData.mark\\\"> - {{ ipcExportData.mark }}</span>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div\\r\\n                                      *ngIf=\\\"\\r\\n                                        ipcExportData.chapter &&\\r\\n                                        ipcExportData.section &&\\r\\n                                        ipcExportData.subject &&\\r\\n                                        ipcExportData.sheet &&\\r\\n                                        ipcExportData.mark\\r\\n                                      \\\"\\r\\n                                      class=\\\"btn-clear-wrapper\\\"\\r\\n                                    >\\r\\n                                      <i\\r\\n                                        class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                                        aria-hidden=\\\"true\\\"\\r\\n                                        (click)=\\\"\\r\\n                                          ipcExportData.chapter = undefined;\\r\\n                                          ipcExportData.section = undefined;\\r\\n                                          ipcExportData.subject = undefined;\\r\\n                                          ipcExportData.sheet = undefined;\\r\\n                                          ipcExportData.mark = undefined;\\r\\n                                          ipcExportData.versionNumber = undefined\\r\\n                                        \\\"\\r\\n                                      ></i>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"btn-search-wrapper\\\">\\r\\n                                      <i\\r\\n                                        class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                                        aria-hidden=\\\"true\\\"\\r\\n                                        (click)=\\\"openItemTableDialog()\\\"\\r\\n                                      ></i>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group flex--3\\\"></div>\\r\\n                                <div class=\\\"form-group flex--3\\\"></div>\\r\\n                              </div>\\r\\n\\r\\n                              <!-- Checkbox -->\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group flex--4\\\">\\r\\n                                  <label class=\\\"form-label\\\">{{\\r\\n                                    componentData.componentId + \\\".part\\\" | translate\\r\\n                                  }}</label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-checkbox class=\\\"aw-checkbox\\\" binary=\\\"true\\\" [(ngModel)]=\\\"ipcExportData.withPn\\\">\\r\\n                                    </p-checkbox>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group flex--4\\\">\\r\\n                                  <label class=\\\"form-label\\\">{{\\r\\n                                    componentData.componentId + \\\".refMgmt\\\" | translate\\r\\n                                  }}</label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-checkbox\\r\\n                                      class=\\\"aw-checkbox\\\"\\r\\n                                      binary=\\\"true\\\"\\r\\n                                      [(ngModel)]=\\\"ipcExportData.withMeasureReference\\\"\\r\\n                                    ></p-checkbox>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group flex--4\\\">\\r\\n                                  <label class=\\\"form-label\\\">{{\\r\\n                                    componentData.componentId + \\\".measureUnit\\\" | translate\\r\\n                                  }}</label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-checkbox\\r\\n                                      class=\\\"aw-checkbox\\\"\\r\\n                                      binary=\\\"true\\\"\\r\\n                                      [(ngModel)]=\\\"ipcExportData.withUnitMeasure\\\"\\r\\n                                    ></p-checkbox>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group flex--4\\\"></div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group flex--4\\\">\\r\\n                                  <label class=\\\"form-label\\\">{{\\r\\n                                    componentData.componentId + \\\".evolution\\\" | translate\\r\\n                                  }}</label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-checkbox\\r\\n                                      class=\\\"aw-checkbox\\\"\\r\\n                                      binary=\\\"true\\\"\\r\\n                                      [(ngModel)]=\\\"ipcExportData.withEvolution\\\"\\r\\n                                    ></p-checkbox>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group flex--4\\\">\\r\\n                                  <label class=\\\"form-label\\\">{{\\r\\n                                    componentData.componentId + \\\".sbad\\\" | translate\\r\\n                                  }}</label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-checkbox class=\\\"aw-checkbox\\\" binary=\\\"true\\\" [(ngModel)]=\\\"ipcExportData.withSb\\\">\\r\\n                                    </p-checkbox>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group flex--4\\\">\\r\\n                                  <label class=\\\"form-label\\\">{{\\r\\n                                    componentData.componentId + \\\".modification\\\" | translate\\r\\n                                  }}</label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-checkbox\\r\\n                                      class=\\\"aw-checkbox\\\"\\r\\n                                      binary=\\\"true\\\"\\r\\n                                      [(ngModel)]=\\\"ipcExportData.withModification\\\"\\r\\n                                    ></p-checkbox>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group flex--4\\\"></div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- <div class=\\\"section\\\">\\r\\n                          <h4 class=\\\"section-title\\\">\\r\\n                            {{ componentData.componentId + \\\".selectExportData\\\" | translate }}\\r\\n                          </h4>\\r\\n\\r\\n                          <div class=\\\"section-content\\\">\\r\\n                            <div class=\\\"column\\\">\\r\\n                              <div class=\\\"grid-row\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".ipcStructureCheckbox\\\" | translate }}\\r\\n                                  </label>\\r\\n\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-checkbox\\r\\n                                      binary=\\\"true\\\"\\r\\n                                      class=\\\"aw-checkbox general-type-checkbox\\\"\\r\\n                                      [(ngModel)]=\\\"ipcExportData.withFamilyVariant\\\"\\r\\n                                    ></p-checkbox>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"grid-row\\\">\\r\\n                                <div class=\\\"section\\\">\\r\\n                                <div class=\\\"section-title-wrapper\\\">\\r\\n                                  <h4 class=\\\"section-title\\\">\\r\\n                                    {{ componentData.componentId + \\\".itemFilter\\\" | translate }}\\r\\n                                  </h4>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"section-content\\\">\\r\\n                                  <div class=\\\"column\\\">\\r\\n                                    <div class=\\\"grid-row\\\">\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                        <div class=\\\"grid-cell--3\\\">\\r\\n                                          <label class=\\\"form-label\\\">\\r\\n                                            {{ componentData.componentId + \\\".selectCode\\\" | translate }}\\r\\n                                          </label>\\r\\n                                          <div class=\\\"form-control\\\">\\r\\n                                            <p-dropdown\\r\\n                                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                              [showClear]=\\\"true\\\"\\r\\n                                              [options]=\\\"ataCodes\\\"\\r\\n                                              [(ngModel)]=\\\"selectedATACode\\\"\\r\\n                                              placeholder=\\\"&nbsp;\\\"\\r\\n                                              (onChange)=\\\"setATACodeComponents($event)\\\"\\r\\n                                            ></p-dropdown>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"grid-row\\\">\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-label\\\">\\r\\n                                          {{ componentData.componentId + \\\".searchCode\\\" | translate }}\\r\\n                                        </label>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"grid-row\\\">\\r\\n                                      <div class=\\\"grid-cell--2\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <div class=\\\"form-control\\\" style=\\\"display: inherit\\\">\\r\\n                                            <input\\r\\n                                              type=\\\"text\\\"\\r\\n                                              class=\\\"aw-input minus-input\\\"\\r\\n                                              [(ngModel)]=\\\"ipcExportData.chapter\\\"\\r\\n                                            />\\r\\n                                            <h2>-</h2>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"grid-cell--2\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <div class=\\\"form-control\\\" style=\\\"display: inherit\\\">\\r\\n                                            <input\\r\\n                                              type=\\\"text\\\"\\r\\n                                              class=\\\"aw-input minus-input\\\"\\r\\n                                              [(ngModel)]=\\\"ipcExportData.section\\\"\\r\\n                                            />\\r\\n                                            <h2>-</h2>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"grid-cell--2\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <div class=\\\"form-control\\\" style=\\\"display: inherit\\\">\\r\\n                                            <input\\r\\n                                              type=\\\"text\\\"\\r\\n                                              class=\\\"aw-input minus-input\\\"\\r\\n                                              [(ngModel)]=\\\"ipcExportData.subject\\\"\\r\\n                                            />\\r\\n                                            <h2>-</h2>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"grid-cell--2\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <div class=\\\"form-control\\\" style=\\\"display: inherit\\\">\\r\\n                                            <input\\r\\n                                              type=\\\"text\\\"\\r\\n                                              class=\\\"aw-input minus-input\\\"\\r\\n                                              [(ngModel)]=\\\"ipcExportData.sheet\\\"\\r\\n                                            />\\r\\n                                            <h2>-</h2>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"grid-cell--2\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <div\\r\\n                                            class=\\\"form-control form-control-with-btn\\\"\\r\\n                                            style=\\\"display: inherit\\\"\\r\\n                                            [ngClass]=\\\"{ disabled: isReadOpenMode }\\\"\\r\\n                                          >\\r\\n                                            <input\\r\\n                                              type=\\\"text\\\"\\r\\n                                              class=\\\"aw-input minus-input\\\"\\r\\n                                              [(ngModel)]=\\\"ipcExportData.mark\\\"\\r\\n                                            />\\r\\n                                            <i\\r\\n                                              class=\\\"fa fa-fw fa-search aw-icon\\\"\\r\\n                                              aria-hidden=\\\"true\\\"\\r\\n                                              pTooltip=\\\"{{ 'global.search' | translate }}\\\"\\r\\n                                              tooltipPosition=\\\"top\\\"\\r\\n                                              (click)=\\\"openItemTableDialog()\\\"\\r\\n                                            ></i>\\r\\n                                            &nbsp;\\r\\n                                            <i\\r\\n                                              class=\\\"fa fa-fw fa-undo aw-icon\\\"\\r\\n                                              aria-hidden=\\\"true\\\"\\r\\n                                              pTooltip=\\\"{{ 'global.reset' | translate }}\\\"\\r\\n                                              tooltipPosition=\\\"top\\\"\\r\\n                                              (click)=\\\"resetATAData()\\\"\\r\\n                                            ></i>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"grid-row\\\">\\r\\n                                      <div class=\\\"grid-cell--3\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <label class=\\\"form-label\\\">{{\\r\\n                                            componentData.componentId + \\\".part\\\" | translate\\r\\n                                          }}</label>\\r\\n                                          <div class=\\\"form-control\\\">\\r\\n                                            <p-checkbox\\r\\n                                              class=\\\"aw-checkbox\\\"\\r\\n                                              binary=\\\"true\\\"\\r\\n                                              [(ngModel)]=\\\"ipcExportData.withPn\\\"\\r\\n                                            ></p-checkbox>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"grid-row\\\">\\r\\n                                      <div class=\\\"grid-cell--3\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <label class=\\\"form-label\\\">{{\\r\\n                                            componentData.componentId + \\\".evolution\\\" | translate\\r\\n                                          }}</label>\\r\\n                                          <div class=\\\"form-control\\\">\\r\\n                                            <p-checkbox\\r\\n                                              class=\\\"aw-checkbox\\\"\\r\\n                                              binary=\\\"true\\\"\\r\\n                                              [(ngModel)]=\\\"ipcExportData.withEvolution\\\"\\r\\n                                            ></p-checkbox>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"grid-cell--3\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <label class=\\\"form-label\\\">{{\\r\\n                                            componentData.componentId + \\\".refMgmt\\\" | translate\\r\\n                                          }}</label>\\r\\n                                          <div class=\\\"form-control\\\">\\r\\n                                            <p-checkbox\\r\\n                                              class=\\\"aw-checkbox\\\"\\r\\n                                              binary=\\\"true\\\"\\r\\n                                              [(ngModel)]=\\\"ipcExportData.withMeasureReference\\\"\\r\\n                                            ></p-checkbox>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"grid-cell--3\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <label class=\\\"form-label\\\">{{\\r\\n                                            componentData.componentId + \\\".sbad\\\" | translate\\r\\n                                          }}</label>\\r\\n                                          <div class=\\\"form-control\\\">\\r\\n                                            <p-checkbox\\r\\n                                              class=\\\"aw-checkbox\\\"\\r\\n                                              binary=\\\"true\\\"\\r\\n                                              [(ngModel)]=\\\"ipcExportData.withSb\\\"\\r\\n                                            ></p-checkbox>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"grid-row\\\">\\r\\n                                      <div class=\\\"grid-cell--3\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <label class=\\\"form-label\\\">{{\\r\\n                                            componentData.componentId + \\\".modification\\\" | translate\\r\\n                                          }}</label>\\r\\n                                          <div class=\\\"form-control\\\">\\r\\n                                            <p-checkbox\\r\\n                                              class=\\\"aw-checkbox\\\"\\r\\n                                              binary=\\\"true\\\"\\r\\n                                              [(ngModel)]=\\\"ipcExportData.withModification\\\"\\r\\n                                            ></p-checkbox>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"grid-cell--3\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <label class=\\\"form-label\\\">{{\\r\\n                                            componentData.componentId + \\\".measureUnit\\\" | translate\\r\\n                                          }}</label>\\r\\n                                          <div class=\\\"form-control\\\">\\r\\n                                            <p-checkbox\\r\\n                                              class=\\\"aw-checkbox\\\"\\r\\n                                              binary=\\\"true\\\"\\r\\n                                              [(ngModel)]=\\\"ipcExportData.withUnitMeasure\\\"\\r\\n                                            ></p-checkbox>\\r\\n                                          </div>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        </div> -->\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" mat-raised-button (click)=\\\"exportIPC()\\\">\\r\\n                        <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                        {{ componentData.componentId + \\\".export\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- For Type Export > XML > Maintenance -->\\r\\n      <div class=\\\"grid-row\\\" *ngIf=\\\"visibilityExportXmlMaintenance()\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainer class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\" *ngIf=\\\"selectedVariant !== ''\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".maintenanceData\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"selectedVariant !== ''\\\" class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".selectedfamilyAndVariant\\\" | translate }}:\\r\\n                      {{ familyAndVariantSelected() }}\\r\\n                    </label>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"grid-cell--12\\\">\\r\\n                    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                      <div class=\\\"grid-cell-header\\\">\\r\\n                        <div class=\\\"grid-cell-title-container\\\">\\r\\n                          <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".dataToExport\\\" | translate }}</h3>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                        <div class=\\\"section\\\">\\r\\n                          <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".taskData\\\" | translate }}</h4>\\r\\n\\r\\n                          <div class=\\\"section-content\\\">\\r\\n                            <div class=\\\"grid-row\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">{{\\r\\n                                  componentData.componentId + \\\".shopManual\\\" | translate\\r\\n                                }}</label>\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <p-checkbox\\r\\n                                    class=\\\"aw-checkbox\\\"\\r\\n                                    binary=\\\"true\\\"\\r\\n                                    [(ngModel)]=\\\"maintenanceExportData.withShopManual\\\"\\r\\n                                  ></p-checkbox>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".range\\\" | translate }}</label>\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <p-checkbox\\r\\n                                    class=\\\"aw-checkbox\\\"\\r\\n                                    binary=\\\"true\\\"\\r\\n                                    [(ngModel)]=\\\"maintenanceExportData.withRange\\\"\\r\\n                                  ></p-checkbox>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">{{\\r\\n                                  componentData.componentId + \\\".taskStructure\\\" | translate\\r\\n                                }}</label>\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <p-checkbox\\r\\n                                    class=\\\"aw-checkbox\\\"\\r\\n                                    binary=\\\"true\\\"\\r\\n                                    [(ngModel)]=\\\"maintenanceExportData.withTaskStructure\\\"\\r\\n                                  ></p-checkbox>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">{{\\r\\n                                  componentData.componentId + \\\".taskGroup\\\" | translate\\r\\n                                }}</label>\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <p-checkbox\\r\\n                                    class=\\\"aw-checkbox\\\"\\r\\n                                    binary=\\\"true\\\"\\r\\n                                    [(ngModel)]=\\\"maintenanceExportData.withTaskGroup\\\"\\r\\n                                  ></p-checkbox>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">{{\\r\\n                                  componentData.componentId + \\\".maintainProg\\\" | translate\\r\\n                                }}</label>\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <p-checkbox\\r\\n                                    class=\\\"aw-checkbox\\\"\\r\\n                                    binary=\\\"true\\\"\\r\\n                                    [(ngModel)]=\\\"maintenanceExportData.withMaintenancePlan\\\"\\r\\n                                  ></p-checkbox>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"section\\\">\\r\\n                          <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".catalogData\\\" | translate }}</h4>\\r\\n\\r\\n                          <div class=\\\"section-content\\\">\\r\\n                            <div class=\\\"grid-row\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">{{\\r\\n                                  componentData.componentId + \\\".qualification\\\" | translate\\r\\n                                }}</label>\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <p-checkbox\\r\\n                                    class=\\\"aw-checkbox\\\"\\r\\n                                    binary=\\\"true\\\"\\r\\n                                    [(ngModel)]=\\\"maintenanceExportData.withQualification\\\"\\r\\n                                  ></p-checkbox>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">{{\\r\\n                                  componentData.componentId + \\\".techIntervLevel\\\" | translate\\r\\n                                }}</label>\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <p-checkbox\\r\\n                                    class=\\\"aw-checkbox\\\"\\r\\n                                    binary=\\\"true\\\"\\r\\n                                    [(ngModel)]=\\\"maintenanceExportData.withTechnicalLevel\\\"\\r\\n                                  ></p-checkbox>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">{{\\r\\n                                  componentData.componentId + \\\".damage\\\" | translate\\r\\n                                }}</label>\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <p-checkbox\\r\\n                                    class=\\\"aw-checkbox\\\"\\r\\n                                    binary=\\\"true\\\"\\r\\n                                    [(ngModel)]=\\\"maintenanceExportData.withDamage\\\"\\r\\n                                  ></p-checkbox>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">{{\\r\\n                                  componentData.componentId + \\\".localisation\\\" | translate\\r\\n                                }}</label>\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <p-checkbox\\r\\n                                    class=\\\"aw-checkbox\\\"\\r\\n                                    binary=\\\"true\\\"\\r\\n                                    label=\\\"\\\"\\r\\n                                    [(ngModel)]=\\\"maintenanceExportData.withLocalisation\\\"\\r\\n                                  ></p-checkbox>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">{{\\r\\n                                  componentData.componentId + \\\".consumable\\\" | translate\\r\\n                                }}</label>\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <p-checkbox\\r\\n                                    class=\\\"aw-checkbox\\\"\\r\\n                                    binary=\\\"true\\\"\\r\\n                                    [(ngModel)]=\\\"maintenanceExportData.withComponent\\\"\\r\\n                                  ></p-checkbox>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn-with-spinner\\\"\\r\\n                        mat-raised-button\\r\\n                        class=\\\"search\\\"\\r\\n                        (click)=\\\"exportMaintenance()\\\"\\r\\n                      >\\r\\n                        <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                        <span>{{ componentData.componentId + \\\".export\\\" | translate }}</span>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- For Type Export > XML > EIPC -->\\r\\n      <div class=\\\"grid-row\\\" *ngIf=\\\"visibilityExportXmlEipc()\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainer class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\" *ngIf=\\\"selectedVariant !== ''\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".eipcData\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"selectedVariant !== ''\\\" class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".selectedfamilyAndVariant\\\" | translate }}:\\r\\n                      {{ familyAndVariantSelected() }}\\r\\n                    </label>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn-with-spinner\\\"\\r\\n                        mat-raised-button\\r\\n                        class=\\\"search\\\"\\r\\n                        (click)=\\\"exportEIPC()\\\"\\r\\n                      >\\r\\n                        <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                        <span>{{ componentData.componentId + \\\".export\\\" | translate }}</span>\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <aw-import-report-popup\\r\\n        *ngIf=\\\"showImportReportMessage\\\"\\r\\n        [importReportMessage]=\\\"importReportMessage\\\"\\r\\n        [(display)]=\\\"showImportReportMessage\\\"\\r\\n      ></aw-import-report-popup>\\r\\n\\r\\n      <aw-dialog-search-item\\r\\n        *ngIf=\\\"showItemTableDialog\\\"\\r\\n        [(display)]=\\\"showItemTableDialog\\\"\\r\\n        (onValidated)=\\\"onSelectedItem($event)\\\"\\r\\n      ></aw-dialog-search-item>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  /*.criteria-checkboxes,\\r\\n  .form-group {\\r\\n    margin-right: 20px;\\r\\n    max-width: 15rem;\\r\\n    min-width: 10rem;\\r\\n    width: 20%;\\r\\n\\r\\n    &:last-of-type {\\r\\n      margin-right: 0;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  .minus-input {\\r\\n    margin-right: 2px;\\r\\n    max-width: 4rem;\\r\\n    min-width: 1rem;\\r\\n    width: 20%;\\r\\n  }\\r\\n\\r\\n  .plus-input {\\r\\n    margin-right: 20px;\\r\\n    max-width: 35rem;\\r\\n    min-width: 25rem;\\r\\n    width: 20%;\\r\\n  }\\r\\n\\r\\n  .search-criteria-primary {\\r\\n    justify-content: flex-start;\\r\\n\\r\\n    .criteria-checkboxes {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n\\r\\n      p-checkbox:first-of-type {\\r\\n        margin-top: 30px;\\r\\n      }\\r\\n\\r\\n      p-checkbox:nth-of-type(2) {\\r\\n        margin-top: 5px;\\r\\n      }\\r\\n    }\\r\\n  }*/ }\\n  :host .form-group-select-buton {\\n    margin-top: 0 !important; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9jb2xsYWJvcmF0aXZlLWNvY2twaXQvZW5naW5lZXJpbmctZGF0YS1leGNoYW5nZS1zZWFyY2gvRDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxmcm9udGVuZF9hZXJvd2ViYi9zcmNcXGFwcFxcbWFpblxcY29sbGFib3JhdGl2ZS1jb2NrcGl0XFxlbmdpbmVlcmluZy1kYXRhLWV4Y2hhbmdlLXNlYXJjaFxcZW5naW5lZXJpbmctZGF0YS1leGNoYW5nZS1zZWFyY2guY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21haW4vY29sbGFib3JhdGl2ZS1jb2NrcGl0L2VuZ2luZWVyaW5nLWRhdGEtZXhjaGFuZ2Utc2VhcmNoL2VuZ2luZWVyaW5nLWRhdGEtZXhjaGFuZ2Utc2VhcmNoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0U7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lDeUNFLEVEQUM7RUExQ0w7SUE2Q0ksd0JBQXdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2NvbGxhYm9yYXRpdmUtY29ja3BpdC9lbmdpbmVlcmluZy1kYXRhLWV4Y2hhbmdlLXNlYXJjaC9lbmdpbmVlcmluZy1kYXRhLWV4Y2hhbmdlLXNlYXJjaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAvKi5jcml0ZXJpYS1jaGVja2JveGVzLFxyXG4gIC5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgIG1heC13aWR0aDogMTVyZW07XHJcbiAgICBtaW4td2lkdGg6IDEwcmVtO1xyXG4gICAgd2lkdGg6IDIwJTtcclxuXHJcbiAgICAmOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5taW51cy1pbnB1dCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDJweDtcclxuICAgIG1heC13aWR0aDogNHJlbTtcclxuICAgIG1pbi13aWR0aDogMXJlbTtcclxuICAgIHdpZHRoOiAyMCU7XHJcbiAgfVxyXG5cclxuICAucGx1cy1pbnB1dCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDM1cmVtO1xyXG4gICAgbWluLXdpZHRoOiAyNXJlbTtcclxuICAgIHdpZHRoOiAyMCU7XHJcbiAgfVxyXG5cclxuICAuc2VhcmNoLWNyaXRlcmlhLXByaW1hcnkge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG5cclxuICAgIC5jcml0ZXJpYS1jaGVja2JveGVzIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgICAgIHAtY2hlY2tib3g6Zmlyc3Qtb2YtdHlwZSB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgcC1jaGVja2JveDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSovXHJcblxyXG4gIC5mb3JtLWdyb3VwLXNlbGVjdC1idXRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcbiIsIjpob3N0IHtcbiAgLyouY3JpdGVyaWEtY2hlY2tib3hlcyxcclxuICAuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDE1cmVtO1xyXG4gICAgbWluLXdpZHRoOiAxMHJlbTtcclxuICAgIHdpZHRoOiAyMCU7XHJcblxyXG4gICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubWludXMtaW5wdXQge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAycHg7XHJcbiAgICBtYXgtd2lkdGg6IDRyZW07XHJcbiAgICBtaW4td2lkdGg6IDFyZW07XHJcbiAgICB3aWR0aDogMjAlO1xyXG4gIH1cclxuXHJcbiAgLnBsdXMtaW5wdXQge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzNXJlbTtcclxuICAgIG1pbi13aWR0aDogMjVyZW07XHJcbiAgICB3aWR0aDogMjAlO1xyXG4gIH1cclxuXHJcbiAgLnNlYXJjaC1jcml0ZXJpYS1wcmltYXJ5IHtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuXHJcbiAgICAuY3JpdGVyaWEtY2hlY2tib3hlcyB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgICBwLWNoZWNrYm94OmZpcnN0LW9mLXR5cGUge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHAtY2hlY2tib3g6bnRoLW9mLXR5cGUoMikge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDVweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0qLyB9XG4gIDpob3N0IC5mb3JtLWdyb3VwLXNlbGVjdC1idXRvbiB7XG4gICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50OyB9XG4iXX0= */\"","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport { FileUpload } from 'primeng/fileupload';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { DialogTableData } from '../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { BidoFunctionTypeConstants } from '../../../shared/constants/bido-function-type-constants';\r\nimport { GenericPropertyConstants } from '../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { TableColumnFilterMode } from '../../../shared/enums/table-column-filter-mode.enum';\r\nimport { TableSelectionMode } from '../../../shared/enums/table-selection-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../shared/services/session.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { ExportMaintenanceFileInput } from '../../../shared/types/api-input-types/engineering-data-exchange/export-maintenance-file-input.interface';\r\nimport { ExportReferentialFileInput } from '../../../shared/types/api-input-types/engineering-data-exchange/export-referential-file-input.interface';\r\nimport { FindDataListBySearchCriteriaInput } from '../../../shared/types/api-input-types/engineering-data-exchange/find-data-list-by-search-criteria-input.interface';\r\nimport { GetExcelDataInput } from '../../../shared/types/api-input-types/engineering-data-exchange/get-excel-data-input.interface';\r\nimport { GetTypeDataInput } from '../../../shared/types/api-input-types/engineering-data-exchange/get-type-data-input.interface';\r\nimport { GetXMLDataInput } from '../../../shared/types/api-input-types/engineering-data-exchange/get-xml-data-input.interface';\r\nimport { RefreshArchivedImportReportInput } from '../../../shared/types/api-input-types/engineering-data-exchange/refresh-archived-import-report-input.interface';\r\nimport { RemoveDataInput } from '../../../shared/types/api-input-types/engineering-data-exchange/remove-data-input.interface';\r\nimport { FindFamilyVariantInput } from '../../../shared/types/api-input-types/product-structure-management/find-family-variant-input.interface';\r\nimport { FindBireItemsByFamilyVariantCode } from '../../../shared/types/api-output-types/engineering-data-exchange/find-bire-items-by-family-variant-code.interface';\r\nimport { GetFamilyVariantOutputDTO } from '../../../shared/types/api-output-types/engineering-data-exchange/get-family-variant-output-dto.interface';\r\nimport { GetImportListTableOutputDTO } from '../../../shared/types/api-output-types/engineering-data-exchange/get-import-list-table-output-dto.interface';\r\nimport { BidoDocumentationDTO } from '../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { BireItemDTO } from '../../../shared/types/api-types/bire-item-dto.interface';\r\nimport { BirePnDTO } from '../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { BireReportDTOId } from '../../../shared/types/api-types/bire-report-dto-id.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { FileUtils } from '../../../shared/utils/file-utils';\r\n\r\nimport { EgineeringDataExchangeSearchService } from './engineering-data-exchange-search.service';\r\n\r\n@Component({\r\n  selector: 'aw-engineering-data-exchange-search',\r\n  templateUrl: './engineering-data-exchange-search.component.html',\r\n  styleUrls: ['./engineering-data-exchange-search.component.scss']\r\n})\r\nexport class EngineeringDataExchangeSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public readonly EXPORT: string = 'Export';\r\n  public readonly LOADING: string = 'Loading';\r\n\r\n  public readonly EXCEL: string = 'EXCEL';\r\n  public readonly XML: string = 'XML';\r\n\r\n  public readonly IPC: string = 'IPC';\r\n  public readonly MAINTENANCE: string = 'Maintenance';\r\n  public readonly LOGISTIC: string = 'Logistics';\r\n  public readonly FEEDBACK: string = 'Experience Feedback';\r\n  public readonly FUNCTIONAL: string = 'Functional locations';\r\n  public readonly EIPC: string = 'EIPC - Detailed Parts List';\r\n  public readonly AMG: string = 'Guidelines';\r\n\r\n  public searchObject: BirePnDTO;\r\n\r\n  public familyValues: LabelValue<string>[];\r\n  public variantValues: LabelValue<string>[];\r\n\r\n  public selectedFamily: string;\r\n  public selectedVariant: string | undefined;\r\n\r\n  public familyCode: string;\r\n  public variantCode: string;\r\n  public structureType: string;\r\n  public familyName: string;\r\n  public variantName: string;\r\n\r\n  public getFamilyVariantOutputDTO: GetFamilyVariantOutputDTO[];\r\n\r\n  public propertyVariant: LabelValue<string>[];\r\n  public propertyDataList: LabelValue<string>[];\r\n  public propertyDataLoadingExcel: LabelValue<string>[];\r\n  public propertyDataLoadingXml: LabelValue<string>[];\r\n  public propertyDataExportXml: LabelValue<string>[];\r\n  public propertyDataExportExcel: LabelValue<string>[];\r\n  public propertyFormatList: LabelValue<string>[];\r\n  public propertyTypeList: LabelValue<string>[];\r\n\r\n  public formats: LabelValue<string>[];\r\n\r\n  public ataCodes: LabelValue<string>[];\r\n  private ataData: FindBireItemsByFamilyVariantCode[];\r\n  public selectedATACode: string;\r\n\r\n  public type: string;\r\n  public format: string | undefined;\r\n  public data: string | undefined;\r\n\r\n  public ipcExcelCheckbox: boolean;\r\n  public maintenanceExcelCheckbox: boolean;\r\n  public ipcXmlCheckbox: boolean;\r\n  public maintenanceXmlCheckbox: boolean;\r\n  public logisticsCheckbox: boolean;\r\n  public experienceFeedbackCheckbox: boolean;\r\n  public amgExcelCheckbox: boolean;\r\n\r\n  public showSearchCriteria: boolean;\r\n  public showImportPanel: boolean;\r\n  public showImportReportList: boolean;\r\n  public showImportDataPanel: boolean;\r\n  public showExportIPCPanel: boolean;\r\n  public showExportIPCPanelExcel: boolean;\r\n  public showExportMaintenancePanel: boolean;\r\n  public showExportEIPCPanel: boolean;\r\n\r\n  public importReport: GetImportListTableOutputDTO[];\r\n  public selectedReports: GetImportListTableOutputDTO[];\r\n\r\n  public file: BidoDocumentationDTO | undefined;\r\n  public fileName: string | undefined;\r\n\r\n  public importReportMessage: string;\r\n  public showImportReportMessage: boolean;\r\n\r\n  public reportTableCols: TableColumn[];\r\n\r\n  public keyMap: Map<string, Observable<LabelValue<string>[]>>;\r\n\r\n  public taskGroups: LabelValue<string>[];\r\n  public selectedTaskGroup: string;\r\n\r\n  // For Export\r\n  public showItemTableDialog: boolean;\r\n  public itemTableData: DialogTableData<BireItemDTO>;\r\n  public showExportPanel: boolean;\r\n  public exportPanel: string;\r\n\r\n  public ipcExportData: ExportReferentialFileInput;\r\n  public maintenanceExportData: ExportMaintenanceFileInput;\r\n  public eipcExportData: RefreshArchivedImportReportInput;\r\n\r\n  public showSpinner: boolean;\r\n  public showSimulateSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public sessionService: SessionService,\r\n    public translateService: TranslateService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly engineeringDataExchangeSearchService: EgineeringDataExchangeSearchService,\r\n    private readonly datepipe: DatePipe,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.searchObject = {};\r\n\r\n    this.familyValues = [];\r\n    this.variantValues = [];\r\n\r\n    this.familyCode = '';\r\n    this.variantCode = '';\r\n    this.structureType = '';\r\n    this.familyName = '';\r\n    this.variantName = '';\r\n\r\n    this.propertyVariant = [];\r\n    this.propertyDataExportXml = [];\r\n    this.propertyDataExportExcel = [];\r\n    this.propertyDataLoadingExcel = [];\r\n    this.propertyDataLoadingXml = [];\r\n    this.propertyDataList = [];\r\n    this.propertyTypeList = [];\r\n    this.propertyFormatList = [];\r\n\r\n    this.taskGroups = [];\r\n    this.selectedTaskGroup = '';\r\n\r\n    this.selectedReports = [];\r\n\r\n    this.showSpinner = false;\r\n    this.showSimulateSpinner = false;\r\n\r\n    this.ataCodes = [];\r\n    this.ataData = [];\r\n    this.selectedATACode = '';\r\n\r\n    this.ipcExcelCheckbox = false;\r\n    this.maintenanceExcelCheckbox = false;\r\n    this.ipcXmlCheckbox = false;\r\n    this.maintenanceXmlCheckbox = false;\r\n    this.logisticsCheckbox = false;\r\n    this.experienceFeedbackCheckbox = false;\r\n    this.amgExcelCheckbox = false;\r\n\r\n    this.showSearchCriteria = false;\r\n    this.showImportPanel = false;\r\n    this.showImportReportList = false;\r\n    this.showImportDataPanel = false;\r\n    this.showExportIPCPanel = false;\r\n    this.showExportIPCPanelExcel = false;\r\n    this.showExportMaintenancePanel = false;\r\n    this.showExportEIPCPanel = false;\r\n\r\n    this.file = undefined;\r\n    this.fileName = '';\r\n\r\n    this.importReportMessage = '';\r\n    this.showImportReportMessage = false;\r\n\r\n    this.ipcExportData = {};\r\n    this.ipcExportData.withFamilyVariant = true;\r\n    this.maintenanceExportData = {};\r\n    this.eipcExportData = {};\r\n\r\n    this.keyMap = new Map<string, Observable<LabelValue<string>[]>>();\r\n    this.keyMap.set('structureType', this.propertiesService.getValue('getStructureTypeMap'));\r\n    this.keyMap.set('itemType', this.propertiesService.getValue('getItemTypeMap'));\r\n    this.keyMap.set('itemFamilyCode', this.propertiesService.getValue(GenericPropertyConstants.ITEM_FAMILY_CODE_MAP));\r\n\r\n    this.translateService.onLangChange.subscribe((_: LangChangeEvent) => {\r\n      this.loadDropDownLists();\r\n    });\r\n  }\r\n\r\n  public visibilityExportExcelIpc(): boolean {\r\n    return this.canDisplayForm(this.EXPORT, this.EXCEL, this.IPC);\r\n  }\r\n\r\n  public visibilityExportExcelMaintenance(): boolean {\r\n    return this.canDisplayForm(this.EXPORT, this.EXCEL, this.MAINTENANCE);\r\n  }\r\n\r\n  public visibilityExportXmlIpc(): boolean {\r\n    return this.canDisplayForm(this.EXPORT, this.XML, this.IPC);\r\n  }\r\n\r\n  public visibilityExportXmlMaintenance(): boolean {\r\n    return this.canDisplayForm(this.EXPORT, this.XML, this.MAINTENANCE);\r\n  }\r\n\r\n  public visibilityExportXmlEipc(): boolean {\r\n    return this.canDisplayForm(this.EXPORT, this.XML, this.EIPC);\r\n  }\r\n\r\n  public visibilityImport(): boolean {\r\n    return this.canDisplayForm(this.LOADING, this.format, this.data);\r\n  }\r\n\r\n  private canDisplayForm(type: string, format: string | undefined, data: string | undefined): boolean {\r\n    if (!format) {\r\n      return false;\r\n    }\r\n    if (!data) {\r\n      return false;\r\n    }\r\n\r\n    if (this.type !== type) {\r\n      return false;\r\n    }\r\n    if (this.format !== format) {\r\n      return false;\r\n    }\r\n    if (this.data !== data) {\r\n      return false;\r\n    }\r\n\r\n    if (this.type === this.LOADING) {\r\n      if (this.data === this.LOGISTIC || this.data === this.FUNCTIONAL || this.data === this.AMG) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (!this.validFamilyVariantCombination()) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'EngineeringDataExchangeSearchComponent';\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.displayComponentContext('global.search', true);\r\n\r\n    this.loadDropDownLists();\r\n  }\r\n\r\n  private setTableCols(): void {\r\n    if (this.data === this.LOGISTIC || this.data === this.FUNCTIONAL || this.data === this.AMG) {\r\n      this.reportTableCols = [\r\n        { field: 'reportCode', alignment: 'center' },\r\n        { field: 'reportName', alignment: 'center', width: '28%' },\r\n        { field: 'statusUser', alignment: 'center' },\r\n        { field: 'statusDate', alignment: 'center' }\r\n      ];\r\n    } else {\r\n      this.reportTableCols = [\r\n        { field: 'familyCode', alignment: 'center', width: '18%' },\r\n        { field: 'reportCode', alignment: 'center', width: '18%' },\r\n        { field: 'reportName', alignment: 'center', width: '28%' },\r\n        { field: 'statusUser', alignment: 'center', width: '18%' },\r\n        { field: 'statusDate', alignment: 'center', width: '18%' }\r\n      ];\r\n    }\r\n  }\r\n\r\n  public deleteReports(): void {\r\n    if (this.selectedReports !== []) {\r\n      const partialMessageKey =\r\n        this.selectedReports.length > 1 ? 'confirmDeleteSelectedReports' : 'confirmDeleteSelectedReport';\r\n\r\n      const reports = new Array<BireReportDTOId>();\r\n      this.selectedReports.forEach((report) => {\r\n        if (report && report.bireReportDTO.reportId) {\r\n          const reportId: BireReportDTOId = {\r\n            reportId: report.bireReportDTO.reportId\r\n          };\r\n          reports.push(reportId);\r\n        }\r\n      });\r\n      if (!!reports && !!this.data) {\r\n        const removeDataInput: RemoveDataInput = {\r\n          bireReportDTOId: reports,\r\n          data: this.data\r\n        };\r\n        this.confirmationService.confirmDelete({\r\n          messageKey: this.getTranslateKey(partialMessageKey),\r\n          accept: () => {\r\n            this.engineeringDataExchangeSearchService.removeReportsByReportId(removeDataInput).subscribe(\r\n              (result) => {\r\n                const messageKey =\r\n                  partialMessageKey === 'confirmDeleteSelectedReports'\r\n                    ? this.getTranslateKey('successOnDeleteReports')\r\n                    : this.getTranslateKey('successOnDeleteReport');\r\n\r\n                this.messageService.showSuccessMessage(messageKey);\r\n                this.selectedReports = [];\r\n                this.loadImportReportList();\r\n              },\r\n              () => {\r\n                const messageKey =\r\n                  partialMessageKey === 'confirmDeleteSelectedReports'\r\n                    ? this.getTranslateKey('errorOnDeleteReports')\r\n                    : this.getTranslateKey('errorOnDeleteReport');\r\n\r\n                this.messageService.showSuccessMessage(messageKey);\r\n              }\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        super.throwUnboundLocalError('deleteReports', 'reports && this.data');\r\n      }\r\n    }\r\n  }\r\n\r\n  public openReportDetail(object: GetImportListTableOutputDTO): void {\r\n    if (!!object && !!object.bireReportDTO && !!object.bireReportDTO.reportId && !!object.bireReportDTO.reportName) {\r\n      const bireReportDTOId: BireReportDTOId = {\r\n        reportId: object.bireReportDTO.reportId\r\n      };\r\n      if (this.data === this.LOGISTIC) {\r\n        if (!!object.reportContent && !!object.reportName) {\r\n          if (object.reportName.includes('.txt')) {\r\n            this.downLoadFiles(object.reportContent, object.reportName);\r\n          } else {\r\n            this.downLoadFiles(object.reportContent, `${object.reportName}.txt`);\r\n          }\r\n        }\r\n      } else if (this.data === this.FUNCTIONAL) {\r\n        this.engineeringDataExchangeSearchService.openFLIMportReportContent(bireReportDTOId).subscribe((result) => {\r\n          if (!!object.bireReportDTO.reportName && object.bireReportDTO.reportName.includes('.txt')) {\r\n            this.downLoadFiles(result, object.bireReportDTO.reportName);\r\n          } else {\r\n            this.downLoadFiles(result, `${object.bireReportDTO.reportName}.txt`);\r\n          }\r\n        });\r\n      } else {\r\n        this.engineeringDataExchangeSearchService.openImportReportContent(bireReportDTOId).subscribe((result) => {\r\n          if (!!object.bireReportDTO.reportName && object.bireReportDTO.reportName.includes('.txt')) {\r\n            this.downLoadFiles(result, object.bireReportDTO.reportName);\r\n          } else {\r\n            this.downLoadFiles(result, `${object.bireReportDTO.reportName}.txt`);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('openReportDetail', 'object');\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onTypeChange(event: any) {\r\n    this.format = undefined;\r\n    if (event.value === null) {\r\n      this.data = undefined;\r\n      this.resetScreen();\r\n    } else {\r\n      this.propertyFormatList = this.formats;\r\n      if (this.propertyFormatList && this.propertyFormatList.length > 0) {\r\n        this.format = this.propertyFormatList[0].value;\r\n      }\r\n      this.changedTypeFormat();\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onFormatChange(event: any) {\r\n    this.changedTypeFormat();\r\n  }\r\n\r\n  public changedTypeFormat() {\r\n    this.resetScreen();\r\n    this.data = undefined;\r\n    if (this.type === 'Loading') {\r\n      this.showExportIPCPanel = false;\r\n      this.showExportIPCPanelExcel = false;\r\n      this.showExportMaintenancePanel = false;\r\n      this.showExportEIPCPanel = false;\r\n      if (this.data === '' || this.data === undefined) {\r\n        this.showImportDataPanel = false;\r\n        this.showImportPanel = false;\r\n      }\r\n      if (this.format === 'XML') {\r\n        this.propertyDataList = this.propertyDataLoadingXml;\r\n      } else if (this.format === 'EXCEL') {\r\n        this.propertyDataList = this.propertyDataLoadingExcel;\r\n      } else {\r\n        this.propertyDataList = [];\r\n        this.data = undefined;\r\n      }\r\n    } else if (this.type === 'Export') {\r\n      this.showImportDataPanel = false;\r\n      this.showImportPanel = false;\r\n      if (this.data === '' || this.data === undefined) {\r\n        this.showExportIPCPanel = false;\r\n        this.showExportIPCPanelExcel = false;\r\n        this.showExportMaintenancePanel = false;\r\n        this.showExportEIPCPanel = false;\r\n      }\r\n      if (this.format === 'XML') {\r\n        this.propertyDataList = this.propertyDataExportXml;\r\n      } else if (this.format === 'EXCEL') {\r\n        this.propertyDataList = this.propertyDataExportExcel;\r\n      } else {\r\n        this.propertyDataList = [];\r\n        this.data = undefined;\r\n      }\r\n    } else {\r\n      this.showImportDataPanel = false;\r\n      this.showImportPanel = false;\r\n      this.propertyDataList = [];\r\n      this.data = undefined;\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onFamilyChange(event: any) {\r\n    this.variantValues = [];\r\n    this.selectedVariant = '';\r\n\r\n    if (event.value === '' || event.value === null) {\r\n      this.selectedVariant = '';\r\n      this.showImportDataPanel = false;\r\n      this.showImportPanel = false;\r\n      this.showExportIPCPanel = false;\r\n      this.showExportIPCPanelExcel = false;\r\n      this.showExportMaintenancePanel = false;\r\n      this.showExportEIPCPanel = false;\r\n    } else {\r\n      if (this.selectedVariant === '') {\r\n        this.showImportDataPanel = false;\r\n        this.showImportPanel = false;\r\n        this.showExportIPCPanel = false;\r\n        this.showExportIPCPanelExcel = false;\r\n        this.showExportMaintenancePanel = false;\r\n        this.showExportEIPCPanel = false;\r\n      }\r\n      this.getFamilyVariantOutputDTO.forEach((object) => {\r\n        if (object.familyLabelValueDTO.label === this.selectedFamily) {\r\n          if (object.variantLabelValueDTO !== []) {\r\n            object.variantLabelValueDTO.forEach((variant) => {\r\n              this.variantValues.push(variant.variantLabelValue);\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      this.familyAndVariantSelected();\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onVariantChange(event: any) {\r\n    if (this.selectedVariant !== '') {\r\n      this.familyAndVariantSelected();\r\n    }\r\n  }\r\n\r\n  private familyAndVariantSelected(): string {\r\n    this.getFamilyVariantOutputDTO.forEach((familyObject) => {\r\n      if (familyObject.familyLabelValueDTO.label === this.selectedFamily) {\r\n        familyObject.variantLabelValueDTO.forEach((variantObject) => {\r\n          if (variantObject.variantLabelValue.label === this.selectedVariant) {\r\n            this.variantCode = variantObject.variantCode;\r\n            this.variantName = variantObject.variantName;\r\n            this.structureType = variantObject.structureType;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return `${this.selectedFamily}/${this.variantCode}-${this.variantName}/${this.structureType}`;\r\n  }\r\n\r\n  private getFamilyVariantComponents(): void {\r\n    this.getFamilyVariantOutputDTO.forEach((familyObject) => {\r\n      if (familyObject.familyLabelValueDTO.label === this.selectedFamily) {\r\n        familyObject.variantLabelValueDTO.forEach((variantObject) => {\r\n          if (variantObject.variantLabelValue.label === this.selectedVariant) {\r\n            this.familyCode = variantObject.familyCode;\r\n            this.structureType = variantObject.structureType;\r\n            this.variantCode = variantObject.variantCode;\r\n            this.familyName = variantObject.familyName;\r\n            this.variantName = variantObject.variantName;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private resetCheckboxes(): void {\r\n    this.ipcExcelCheckbox = false;\r\n    this.maintenanceExcelCheckbox = false;\r\n    this.logisticsCheckbox = false;\r\n    this.experienceFeedbackCheckbox = false;\r\n    this.ipcXmlCheckbox = false;\r\n    this.ipcExcelCheckbox = false;\r\n    this.maintenanceXmlCheckbox = false;\r\n    this.amgExcelCheckbox = false;\r\n  }\r\n\r\n  public import(): void {\r\n    if (this.fileName !== '') {\r\n      const partialMessageKey = this.getTranslateKey('importData');\r\n      this.confirmationService.confirm({\r\n        interpolateParams: { 'importData.fileName': this.fileName },\r\n        contextKeys: [this.getTranslateKey('importData.line1')],\r\n        messageKey: partialMessageKey,\r\n        accept: () => {\r\n          this.showSpinner = true;\r\n          this.getFamilyVariantComponents();\r\n\r\n          // Importing Excel file\r\n          const isExcel =\r\n            this.file &&\r\n            (this.showDocExtension(this.file) === 'xlsx' ||\r\n              this.showDocExtension(this.file) === 'xls' ||\r\n              (this.data === this.AMG && this.showDocExtension(this.file) === 'zip'));\r\n          if (this.format === 'EXCEL' && isExcel) {\r\n            if (!!this.file && !!this.fileName && !!this.file.docFile && !!this.data) {\r\n              const excelInput: GetExcelDataInput = {\r\n                fileName: this.fileName,\r\n                excelSource: this.file && this.file.docFile,\r\n                withOldDataRemoving: false,\r\n                familyCodeSelected: this.familyCode,\r\n                structureTypeSelected: this.structureType,\r\n                variantCodeSelected: this.variantCode,\r\n                data: this.data\r\n              };\r\n\r\n              switch (this.data) {\r\n                case this.IPC:\r\n                  {\r\n                    excelInput.withOldDataRemoving = this.ipcExcelCheckbox;\r\n                  }\r\n                  break;\r\n                case this.MAINTENANCE:\r\n                  {\r\n                    excelInput.withOldDataRemoving = this.maintenanceExcelCheckbox;\r\n                  }\r\n                  break;\r\n                case this.LOGISTIC:\r\n                  {\r\n                    excelInput.withOldDataRemoving = this.logisticsCheckbox;\r\n                  }\r\n                  break;\r\n                case this.FEEDBACK:\r\n                  {\r\n                    excelInput.withOldDataRemoving = this.experienceFeedbackCheckbox;\r\n                  }\r\n                  break;\r\n                case this.AMG:\r\n                  {\r\n                    excelInput.withOldDataRemoving = this.amgExcelCheckbox;\r\n                  }\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n\r\n              this.engineeringDataExchangeSearchService.saveEngineeringExcelDataExchange(excelInput).subscribe(\r\n                (result) => {\r\n                  this.fileName = '';\r\n                  this.importReportMessage = result;\r\n                  this.showImportReportMessage = true;\r\n                  this.loadImportReportList();\r\n                  this.showSpinner = false;\r\n                },\r\n                (error) => {\r\n                  this.messageService.showErrorMessage(error.error.errorDesc);\r\n                  this.showSpinner = false;\r\n                }\r\n              );\r\n            } else {\r\n              super.throwUnboundLocalError('import', 'this.file');\r\n              this.showSpinner = false;\r\n            }\r\n          } else if (this.format === 'EXCEL' && !isExcel) {\r\n            this.fileName = '';\r\n            if (this.data === this.AMG) {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('notExcelOrZip'));\r\n            } else {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('notExcel'));\r\n            }\r\n            this.showSpinner = false;\r\n          }\r\n\r\n          // Import Xml File\r\n          if (!!this.file && this.format === 'XML' && this.showDocExtension(this.file) === 'xml') {\r\n            if (!!this.fileName && !!this.file.docFile && !!this.data) {\r\n              const xmlInput: GetXMLDataInput = {\r\n                fileName: this.fileName,\r\n                xmlSource: this.file && this.file.docFile,\r\n                familyCode: this.familyCode,\r\n                structureType: this.structureType,\r\n                variantCode: this.variantCode,\r\n                withDeletion: false,\r\n                simulate: false,\r\n                data: this.data\r\n              };\r\n              switch (this.data) {\r\n                case this.IPC:\r\n                  {\r\n                    xmlInput.withDeletion = this.ipcXmlCheckbox;\r\n                  }\r\n                  break;\r\n                case this.MAINTENANCE:\r\n                  {\r\n                    xmlInput.withDeletion = this.maintenanceXmlCheckbox;\r\n                  }\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n              this.engineeringDataExchangeSearchService.saveEngineeringXMLDataExchange(xmlInput).subscribe(\r\n                (result) => {\r\n                  this.fileName = '';\r\n                  this.importReportMessage = result;\r\n                  this.showImportReportMessage = true;\r\n                  this.loadImportReportList();\r\n                  this.showSpinner = false;\r\n                },\r\n                (error) => {\r\n                  this.messageService.showErrorMessage(error.error.errorDesc);\r\n                  this.showSpinner = false;\r\n                }\r\n              );\r\n            } else {\r\n              super.throwUnboundLocalError('import', 'this.file');\r\n              this.showSpinner = false;\r\n            }\r\n          } else if (!!this.file && this.format === 'XML' && this.showDocExtension(this.file) !== 'xml') {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('notXml'));\r\n            this.showSpinner = false;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public simulate(): void {\r\n    if (this.fileName !== '') {\r\n      const partialMessageKey = this.getTranslateKey('importData');\r\n      this.confirmationService.confirm({\r\n        interpolateParams: { 'importData.fileName': this.fileName },\r\n        contextKeys: [this.getTranslateKey('importData.line1')],\r\n        messageKey: partialMessageKey,\r\n        accept: () => {\r\n          this.showSimulateSpinner = true;\r\n          this.getFamilyVariantComponents();\r\n\r\n          if (\r\n            !!this.file &&\r\n            !!this.fileName &&\r\n            !!this.file.docFile &&\r\n            !!this.familyCode &&\r\n            !!this.structureType &&\r\n            !!this.variantCode &&\r\n            !!this.data\r\n          ) {\r\n            if (this.format === 'XML' && this.showDocExtension(this.file) === 'xml') {\r\n              const xmlInput: GetXMLDataInput = {\r\n                fileName: this.fileName,\r\n                xmlSource: this.file.docFile,\r\n                familyCode: this.familyCode,\r\n                structureType: this.structureType,\r\n                variantCode: this.variantCode,\r\n                withDeletion: false,\r\n                simulate: true,\r\n                data: this.data\r\n              };\r\n              switch (this.data) {\r\n                case this.IPC:\r\n                  {\r\n                    xmlInput.withDeletion = this.ipcXmlCheckbox;\r\n                  }\r\n                  break;\r\n                case this.MAINTENANCE:\r\n                  {\r\n                    xmlInput.withDeletion = this.maintenanceXmlCheckbox;\r\n                  }\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n              this.engineeringDataExchangeSearchService.saveEngineeringXMLDataExchange(xmlInput).subscribe(\r\n                (result) => {\r\n                  this.fileName = '';\r\n                  this.importReportMessage = result;\r\n                  this.showImportReportMessage = true;\r\n                  this.showSimulateSpinner = false;\r\n                },\r\n                (error) => {\r\n                  this.messageService.showErrorMessage(error.error.errorDesc);\r\n                  this.showSimulateSpinner = false;\r\n                }\r\n              );\r\n            } else if (this.format === 'XML' && this.showDocExtension(this.file) !== 'xml') {\r\n              this.fileName = '';\r\n              this.messageService.showErrorMessage(this.getTranslateKey('notXml'));\r\n              this.showSimulateSpinner = false;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public downLoadFiles(docFile: Uint8Array, docName: string): void {\r\n    FileUtils.downloadFile(docFile, docName);\r\n  }\r\n\r\n  public exportIPC(): void {\r\n    this.getFamilyVariantComponents();\r\n    this.showSpinner = true;\r\n    this.ipcExportData.familyCode = this.familyCode;\r\n    this.ipcExportData.structureType = this.structureType;\r\n    this.ipcExportData.variantCode = this.variantCode;\r\n\r\n    if (this.ipcExportData.lastPublicationDate) {\r\n      this.ipcExportData.lastPublicationDate = new Date(this.ipcExportData.lastPublicationDate).toISOString();\r\n    }\r\n\r\n    const currDate = new Date();\r\n    const customDate = `${this.datepipe.transform(currDate, 'dd-MM-yyyy_HH')}h${this.datepipe.transform(\r\n      currDate,\r\n      'mm'\r\n    )}`;\r\n    this.engineeringDataExchangeSearchService.exportReferentialFile(this.ipcExportData).subscribe(\r\n      (result) => {\r\n        this.showSpinner = false;\r\n        if (result !== null) {\r\n          const fileName = `IPC_${this.familyName}_${this.variantCode}_${customDate}.zip`;\r\n\r\n          this.getFamilyVariantComponents();\r\n          this.downLoadFiles(result, fileName);\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnExport'));\r\n        }\r\n      },\r\n      () => {\r\n        this.showSpinner = false;\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnExport'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public exportExcelIpc(): void {\r\n    this.getFamilyVariantComponents();\r\n    this.showSpinner = true;\r\n    this.ipcExportData.familyCode = this.familyCode;\r\n    this.ipcExportData.structureType = this.structureType;\r\n    this.ipcExportData.variantCode = this.variantCode;\r\n\r\n    if (this.ipcExportData.lastPublicationDate) {\r\n      this.ipcExportData.lastPublicationDate = new Date(this.ipcExportData.lastPublicationDate).toISOString();\r\n    }\r\n\r\n    const currDate = new Date();\r\n    const customDate = `${this.datepipe.transform(currDate, 'dd-MM-yyyy_HH')}h${this.datepipe.transform(\r\n      currDate,\r\n      'mm'\r\n    )}`;\r\n    this.engineeringDataExchangeSearchService.exportReferentialFileExcel(this.ipcExportData).subscribe(\r\n      (result) => {\r\n        this.showSpinner = false;\r\n        if (result !== null) {\r\n          const fileName = `IPC_${this.familyName}_${this.variantCode}_${customDate}.xls`;\r\n\r\n          this.getFamilyVariantComponents();\r\n          this.downLoadFiles(result, fileName);\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnExport'));\r\n        }\r\n      },\r\n      () => {\r\n        this.showSpinner = false;\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnExport'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public exportMaintenance(): void {\r\n    this.getFamilyVariantComponents();\r\n    this.showSpinner = true;\r\n    this.maintenanceExportData.familyCode = this.familyCode;\r\n    this.maintenanceExportData.structureType = this.structureType;\r\n    this.maintenanceExportData.variantCode = this.variantCode;\r\n\r\n    const currDate = new Date();\r\n    const customDate = `${this.datepipe.transform(currDate, 'dd-MM-yyyy_HH')}h${this.datepipe.transform(\r\n      currDate,\r\n      'mm'\r\n    )}`;\r\n\r\n    this.engineeringDataExchangeSearchService.exportMaintenanceFile(this.maintenanceExportData).subscribe(\r\n      (result) => {\r\n        this.showSpinner = false;\r\n        if (result !== null) {\r\n          const fileName = `Maintenance_${this.familyName}_${this.variantCode}_${customDate}.zip`;\r\n\r\n          this.getFamilyVariantComponents();\r\n          this.downLoadFiles(result, fileName);\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnExport'));\r\n        }\r\n      },\r\n      () => {\r\n        this.showSpinner = false;\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnExport'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public exportMaintenanceExcel(): void {\r\n    this.getFamilyVariantComponents();\r\n    this.showSpinner = true;\r\n    this.maintenanceExportData.familyCode = this.familyCode;\r\n    this.maintenanceExportData.structureType = this.structureType;\r\n    this.maintenanceExportData.variantCode = this.variantCode;\r\n    this.maintenanceExportData.taskGroupCode = this.selectedTaskGroup;\r\n\r\n    const currDate = new Date();\r\n    const customDate = `${this.datepipe.transform(currDate, 'dd-MM-yyyy_HH')}h${this.datepipe.transform(\r\n      currDate,\r\n      'mm'\r\n    )}`;\r\n\r\n    this.engineeringDataExchangeSearchService.exportMaintenanceFileExcel(this.maintenanceExportData).subscribe(\r\n      (result) => {\r\n        this.showSpinner = false;\r\n        if (result !== null) {\r\n          const fileName = `Maintenance_${this.familyName}_${this.variantCode}_${customDate}.xls`;\r\n\r\n          this.getFamilyVariantComponents();\r\n          this.downLoadFiles(result, fileName);\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnExport'));\r\n        }\r\n      },\r\n      () => {\r\n        this.showSpinner = false;\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnExport'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public exportEIPC(): void {\r\n    this.getFamilyVariantComponents();\r\n    this.showSpinner = true;\r\n    this.eipcExportData.familyCode = this.familyCode;\r\n    this.eipcExportData.structureType = this.structureType;\r\n    this.eipcExportData.variantCode = this.variantCode;\r\n\r\n    const currDate = new Date().getTime();\r\n\r\n    this.engineeringDataExchangeSearchService.exportDetailPartsList(this.eipcExportData).subscribe(\r\n      (result) => {\r\n        this.showSpinner = false;\r\n        if (result !== null) {\r\n          const fileName = `EIPC_${this.familyName}_${this.variantCode}_DPLIST_${currDate}.xml`;\r\n          this.getFamilyVariantComponents();\r\n          this.downLoadFiles(result, fileName);\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnExport'));\r\n        }\r\n      },\r\n      () => {\r\n        this.showSpinner = false;\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnExport'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadDropDownLists(): void {\r\n    const familyVariantInput: FindFamilyVariantInput = {\r\n      useCase: BidoFunctionTypeConstants.UC_MCH_TASK,\r\n      module: BidoFunctionTypeConstants.MODULE_FAMILY\r\n    };\r\n    this.engineeringDataExchangeSearchService.getFamilyVariant(familyVariantInput).subscribe(\r\n      (results) => {\r\n        this.getFamilyVariantOutputDTO = results;\r\n        results.forEach((result) => {\r\n          this.familyValues.push(result.familyLabelValueDTO);\r\n          this.selectedFamily = this.familyValues[0].label;\r\n          result.variantLabelValueDTO.forEach((object) => {\r\n            this.variantValues.push(object.variantLabelValue);\r\n          });\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFamilyVariant'));\r\n      }\r\n    );\r\n\r\n    let dataListBySearchCriteriaInput: FindDataListBySearchCriteriaInput = {\r\n      format: 'EXCEL',\r\n      type: 'Loading'\r\n    };\r\n    this.engineeringDataExchangeSearchService.findDataListBySearchCriteria(dataListBySearchCriteriaInput).subscribe(\r\n      (results) => {\r\n        this.propertyDataLoadingExcel = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetDataList'));\r\n      }\r\n    );\r\n    dataListBySearchCriteriaInput = {\r\n      format: 'XML',\r\n      type: 'Loading'\r\n    };\r\n    this.engineeringDataExchangeSearchService.findDataListBySearchCriteria(dataListBySearchCriteriaInput).subscribe(\r\n      (results) => {\r\n        this.propertyDataLoadingXml = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetDataList'));\r\n      }\r\n    );\r\n    dataListBySearchCriteriaInput = {\r\n      format: 'XML',\r\n      type: 'Export'\r\n    };\r\n    this.engineeringDataExchangeSearchService.findDataListBySearchCriteria(dataListBySearchCriteriaInput).subscribe(\r\n      (results) => {\r\n        this.propertyDataExportXml = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetDataList'));\r\n      }\r\n    );\r\n    dataListBySearchCriteriaInput = {\r\n      format: 'EXCEL',\r\n      type: 'Export'\r\n    };\r\n    this.engineeringDataExchangeSearchService.findDataListBySearchCriteria(dataListBySearchCriteriaInput).subscribe(\r\n      (results) => {\r\n        this.propertyDataExportExcel = [];\r\n        if (results) {\r\n          results.forEach((element: LabelValue<string>) => {\r\n            if (element.value !== this.EIPC) {\r\n              this.propertyDataExportExcel.push(element);\r\n            }\r\n          });\r\n          this.propertyDataExportExcel = [...this.propertyDataExportExcel];\r\n        }\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetDataList'));\r\n      }\r\n    );\r\n\r\n    this.getTypeList();\r\n\r\n    this.engineeringDataExchangeSearchService.findAllBireTaskGroup().subscribe((data: LabelValue<string>[]) => {\r\n      this.taskGroups = data;\r\n    });\r\n  }\r\n\r\n  private getTypeList(): void {\r\n    this.engineeringDataExchangeSearchService.findTypeList().subscribe(\r\n      (results) => {\r\n        this.propertyTypeList = results;\r\n        if (this.propertyTypeList && this.propertyTypeList.length > 0) {\r\n          this.type = this.propertyTypeList[0].value;\r\n          /*if (this.format !== undefined) {\r\n            this.changedTypeFormat();\r\n          }*/\r\n          this.getFormatList();\r\n        }\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetTypeList'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private getFormatList(): void {\r\n    this.engineeringDataExchangeSearchService.findFormatList().subscribe(\r\n      (results) => {\r\n        this.propertyFormatList = results;\r\n        this.formats = results;\r\n        this.onTypeChange({ value: this.type });\r\n        /*if (this.propertyFormatList && this.propertyFormatList.length > 0) {\r\n          this.format = this.propertyFormatList[0].value;\r\n          if (this.type !== undefined) {\r\n            this.changedTypeFormat();\r\n          }\r\n        }*/\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFormatList'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public loadImportReportList(): void {\r\n    this.getFamilyVariantComponents();\r\n    this.importReport = [];\r\n    if (this.type === 'Loading') {\r\n      const loadImportReportsInput: RefreshArchivedImportReportInput = {\r\n        familyCode: this.familyCode,\r\n        structureType: this.structureType,\r\n        variantCode: this.variantCode,\r\n        data: this.data,\r\n        reportCode: '',\r\n        format: this.format\r\n      };\r\n      if (this.format === 'EXCEL') {\r\n        switch (this.data) {\r\n          case this.IPC:\r\n            {\r\n              loadImportReportsInput.reportCode = 'TCI_IMPORT_REPORT';\r\n            }\r\n            break;\r\n          case this.MAINTENANCE:\r\n            {\r\n              loadImportReportsInput.reportCode = 'TASK_IMPORT_REPORT';\r\n            }\r\n            break;\r\n          case this.LOGISTIC:\r\n            {\r\n              loadImportReportsInput.reportCode = 'LOGISTICS_IMPORT_REPORT';\r\n            }\r\n            break;\r\n          case this.FEEDBACK:\r\n            {\r\n              loadImportReportsInput.reportCode = 'EXPERIENCE_IMPORT_REPORT';\r\n            }\r\n            break;\r\n          case this.FUNCTIONAL:\r\n            {\r\n              loadImportReportsInput.reportCode = 'FL_STRUCTURE_IMPORT_REPORT';\r\n            }\r\n            break;\r\n          case this.AMG:\r\n            {\r\n              loadImportReportsInput.reportCode = 'AMG_IMPORT_REPORT';\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      } else if (this.format === 'XML') {\r\n        switch (this.data) {\r\n          case this.IPC:\r\n            {\r\n              loadImportReportsInput.reportCode = 'REFERENTIAL_IMPORT_REPORT_CODE';\r\n            }\r\n            break;\r\n          case this.MAINTENANCE:\r\n            {\r\n              loadImportReportsInput.reportCode = 'MAINTENANCE_IMPORT_REPORT_CODE';\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      this.engineeringDataExchangeSearchService.refreshEngineeringDataExchange(loadImportReportsInput).subscribe(\r\n        (results) => {\r\n          this.importReport = results;\r\n          this.importReport.forEach((report) => {\r\n            report.reportId = report.bireReportDTO.reportId;\r\n            report.familyCode = report.bireReportDTO.familyCode;\r\n            report.structureType = report.bireReportDTO.structureType;\r\n            report.variantCode = report.bireReportDTO.variantCode;\r\n            report.reportCode = report.bireReportDTO.reportCode;\r\n            report.reportName = report.bireReportDTO.reportName;\r\n            report.reportContent = report.bireReportDTO.reportContent;\r\n            report.reportDescription = report.bireReportDTO.reportDescription;\r\n            report.statusState = report.bireReportDTO.statusState;\r\n            report.statusUser = report.bireReportDTO.statusUser;\r\n            report.statusDate = report.bireReportDTO.statusDate;\r\n          });\r\n        },\r\n        () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadImportReports'));\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public showDocExtension(document: BidoDocumentationDTO): string {\r\n    return FileUtils.getExtension(document.docName);\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    // if (!!event.files) {\r\n    const file: File = event.files[0];\r\n    {\r\n      // if (!!this.file && !!this.file.docName) {\r\n      FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n        if (fileContent) {\r\n          this.file = {\r\n            docFile: fileContent,\r\n            docName: file.name,\r\n            docPublicationDate: new Date()\r\n          };\r\n          this.fileName = this.file.docName;\r\n        }\r\n      });\r\n      // } else {\r\n      //   super.throwUnboundLocalError('uploadDocument', 'this.file && this.file.docName');\r\n      // }\r\n    }\r\n\r\n    fileUploader.clear();\r\n    // }\r\n  }\r\n\r\n  public loadImportComponents(): void {\r\n    this.setFamilyAndVariantDropdowns();\r\n    this.fileName = '';\r\n  }\r\n\r\n  public loadExportComponents(): void {\r\n    this.setFamilyAndVariantDropdowns();\r\n    this.ipcExportData = {};\r\n    this.maintenanceExportData = {};\r\n  }\r\n\r\n  private resetScreen(): void {\r\n    this.showSearchCriteria = false;\r\n    this.showImportPanel = false;\r\n    this.showImportReportList = false;\r\n    this.showImportDataPanel = false;\r\n    this.showExportIPCPanel = false;\r\n    this.showExportIPCPanelExcel = false;\r\n    this.showExportMaintenancePanel = false;\r\n    this.showExportEIPCPanel = false;\r\n    this.resetCheckboxes();\r\n    this.loadImportComponents();\r\n    this.loadExportComponents();\r\n  }\r\n\r\n  public loadTemplate(): string {\r\n    let templateName = '';\r\n    if (this.format === 'EXCEL') {\r\n      switch (this.data) {\r\n        case this.IPC:\r\n          {\r\n            templateName = 'TEMPLATE_IPC_FILE.xls';\r\n          }\r\n          break;\r\n        case this.MAINTENANCE:\r\n          {\r\n            templateName = 'TEMPLATE_TASK_FILE.xls';\r\n          }\r\n          break;\r\n        case this.LOGISTIC:\r\n          {\r\n            templateName = 'TEMPLATE_LOGISTICS_FILE.xls';\r\n          }\r\n          break;\r\n        case this.FEEDBACK:\r\n          {\r\n            templateName = 'TEMPLATE_EXPERIENCE_FILE.xls';\r\n          }\r\n          break;\r\n        case this.FUNCTIONAL:\r\n          {\r\n            templateName = 'TEMPLATE_FL_FILE.xls';\r\n          }\r\n          break;\r\n        case this.AMG:\r\n          {\r\n            templateName = 'TEMPLATE_AMG_FILE.xls';\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else if (this.format === 'XML') {\r\n      switch (this.data) {\r\n        case this.IPC:\r\n          {\r\n            templateName = 'Template_REFERENTIAL_DATA_IMPORT.xsd';\r\n          }\r\n          break;\r\n        case this.MAINTENANCE:\r\n          {\r\n            templateName = 'Template_MAINTENANCE_DATA_IMPORT.xsd';\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return templateName;\r\n  }\r\n\r\n  public openTemplate(templateName: string): void {\r\n    if (!!this.data && !!this.format) {\r\n      const getTemplateInput: GetTypeDataInput = {\r\n        data: this.data,\r\n        format: this.format\r\n      };\r\n      /*const partialMessageKey = this.getTranslateKey('openReport');\r\n      this.confirmationService.confirm({\r\n        interpolateParams: { 'openReport.reportName': templateName },\r\n        messageKey: partialMessageKey,\r\n        accept: () => {\r\n          this.engineeringDataExchangeSearchService.getTemplate(getTemplateInput).subscribe((result) => {\r\n            this.downLoadFiles(result, templateName);\r\n          });\r\n        }\r\n      });*/\r\n      this.engineeringDataExchangeSearchService.getTemplate(getTemplateInput).subscribe((result) => {\r\n        this.downLoadFiles(result, templateName);\r\n      });\r\n    } else {\r\n      super.throwUnboundLocalError('openTemplate', 'this.data && this.format');\r\n    }\r\n  }\r\n\r\n  /********************************\r\n   * Validation Assisting Functions\r\n   *******************************/\r\n\r\n  public enableImport(): boolean {\r\n    if (!!this.format && !!this.data) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public validTypeFormatDataCombination(): boolean {\r\n    if (!!this.type && !!this.format && !!this.data) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public validFamilyVariantCombination(): boolean {\r\n    if (!!this.selectedFamily && !!this.selectedVariant) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private loadATACodes(familyCode: string, structureType: string, variantCode: string): void {\r\n    this.ataCodes = [];\r\n    this.ataData = [];\r\n    const input: RefreshArchivedImportReportInput = {\r\n      familyCode,\r\n      structureType,\r\n      variantCode\r\n    };\r\n    this.engineeringDataExchangeSearchService.loadATAcodes(input).subscribe((results) => {\r\n      this.ataData = results;\r\n      results.forEach((result) => {\r\n        this.ataCodes.push(result.labelValueDTO);\r\n      });\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public setATACodeComponents(event: any) {\r\n    if (event.value !== '' || event.value !== null) {\r\n      this.ataData.forEach((ata) => {\r\n        if (this.selectedATACode === ata.labelValueDTO.label) {\r\n          this.ipcExportData.section = ata.bireItemDTO.section;\r\n          this.ipcExportData.subject = ata.bireItemDTO.subject;\r\n          this.ipcExportData.chapter = ata.bireItemDTO.chapter;\r\n          this.ipcExportData.sheet = ata.bireItemDTO.sheet;\r\n          this.ipcExportData.mark = ata.bireItemDTO.marks;\r\n        }\r\n      });\r\n    } else {\r\n      this.ipcExportData.section = '';\r\n      this.ipcExportData.subject = '';\r\n      this.ipcExportData.chapter = '';\r\n      this.ipcExportData.sheet = '';\r\n      this.ipcExportData.mark = '';\r\n    }\r\n  }\r\n\r\n  public resetATAData(): void {\r\n    this.selectedATACode = '';\r\n    this.ipcExportData.chapter = '';\r\n    this.ipcExportData.section = '';\r\n    this.ipcExportData.sheet = '';\r\n    this.ipcExportData.subject = '';\r\n    this.ipcExportData.mark = '';\r\n  }\r\n\r\n  private setFamilyAndVariantDropdowns(): void {\r\n    this.familyValues = [];\r\n    this.variantValues = [];\r\n    const results = this.getFamilyVariantOutputDTO;\r\n    if (results && results.length > 0) {\r\n      results.forEach((result) => {\r\n        this.familyValues.push(result.familyLabelValueDTO);\r\n        this.selectedFamily = this.familyValues[0].label;\r\n      });\r\n      results[0].variantLabelValueDTO.forEach((variantValue) => {\r\n        this.variantValues.push(variantValue.variantLabelValue);\r\n      });\r\n    }\r\n    this.selectedVariant = undefined;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public setSearchCriteriaVisibility(event: any): void {\r\n    this.showSearchCriteria = this.validTypeFormatDataCombination() ? this.checkSearchCriteria() : false;\r\n    this.setTableCols();\r\n    this.resetCheckboxes();\r\n    this.fileName = '';\r\n    this.setFamilyAndVariantDropdowns();\r\n    this.importReport = [];\r\n\r\n    if (event.value === null || event.value === '') {\r\n      this.showImportDataPanel = false;\r\n      this.showImportPanel = false;\r\n      this.showExportIPCPanel = false;\r\n      this.showExportIPCPanelExcel = false;\r\n      this.showExportMaintenancePanel = false;\r\n      this.showExportEIPCPanel = false;\r\n    } else {\r\n      if (this.format === 'EXCEL') {\r\n        this.showImportDataPanel = false;\r\n        this.showImportPanel = false;\r\n        this.showExportIPCPanel = false;\r\n        this.showExportIPCPanelExcel = false;\r\n        this.showExportMaintenancePanel = false;\r\n        this.showExportEIPCPanel = false;\r\n        if (this.data === this.LOGISTIC || this.data === this.FUNCTIONAL || this.data === this.AMG) {\r\n          this.loadImportReportList();\r\n          if (this.validTypeFormatDataCombination()) {\r\n            this.showImportDataPanel = true;\r\n            this.showImportPanel = true;\r\n          } else {\r\n            this.showImportDataPanel = false;\r\n            this.showImportPanel = false;\r\n          }\r\n        }\r\n      } else if (this.format === 'XML') {\r\n        this.showImportDataPanel = false;\r\n        this.showImportPanel = false;\r\n        this.showExportIPCPanel = false;\r\n        this.showExportIPCPanelExcel = false;\r\n        this.showExportMaintenancePanel = false;\r\n        this.showExportEIPCPanel = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public setImportSectionVisibility(): void {\r\n    this.resetCheckboxes();\r\n    this.fileName = '';\r\n    if (this.format === 'EXCEL') {\r\n      this.showExportIPCPanel = false;\r\n      this.showExportIPCPanelExcel = false;\r\n      this.showExportMaintenancePanel = false;\r\n      this.showExportEIPCPanel = false;\r\n      this.importReport = [];\r\n      if (this.validTypeFormatDataCombination() && this.validFamilyVariantCombination()) {\r\n        this.loadImportReportList();\r\n        this.showImportDataPanel = true;\r\n        this.showImportPanel = true;\r\n      } else {\r\n        this.showImportDataPanel = false;\r\n        this.showImportPanel = false;\r\n      }\r\n    } else if (this.format === 'XML') {\r\n      if (this.type === 'Loading') {\r\n        if (this.data !== null || this.data !== '') {\r\n          this.loadImportReportList();\r\n          this.showImportDataPanel = true;\r\n          this.showImportPanel = true;\r\n        } else {\r\n          this.importReport = [];\r\n          this.showImportDataPanel = false;\r\n          this.showImportPanel = false;\r\n        }\r\n      } else {\r\n        this.showImportDataPanel = false;\r\n        this.showImportPanel = false;\r\n        if (this.validTypeFormatDataCombination() && this.validFamilyVariantCombination()) {\r\n          switch (this.data) {\r\n            case this.IPC:\r\n              {\r\n                this.ipcExportData = {};\r\n                this.ipcExportData.withFamilyVariant = true;\r\n                this.showExportIPCPanel = true;\r\n                this.showExportIPCPanelExcel = false;\r\n                this.showExportMaintenancePanel = false;\r\n                this.showExportEIPCPanel = false;\r\n                this.getFamilyVariantComponents();\r\n                this.loadATACodes(this.familyCode, this.structureType, this.variantCode);\r\n              }\r\n              break;\r\n            case this.MAINTENANCE:\r\n              {\r\n                this.maintenanceExportData = {\r\n                  withShopManual: true,\r\n                  withRange: true,\r\n                  withTaskStructure: true,\r\n                  withTaskGroup: true,\r\n                  withMaintenancePlan: true\r\n                };\r\n                this.showExportIPCPanel = false;\r\n                this.showExportIPCPanelExcel = false;\r\n                this.showExportMaintenancePanel = true;\r\n                this.showExportEIPCPanel = false;\r\n              }\r\n              break;\r\n            case 'EIPC - Detailed Parts List':\r\n              {\r\n                this.eipcExportData = {};\r\n                this.showExportIPCPanel = false;\r\n                this.showExportIPCPanelExcel = false;\r\n                this.showExportMaintenancePanel = false;\r\n                this.showExportEIPCPanel = true;\r\n              }\r\n              break;\r\n            default:\r\n              {\r\n                this.eipcExportData = {};\r\n                this.showExportIPCPanel = false;\r\n                this.showExportIPCPanelExcel = false;\r\n                this.showExportMaintenancePanel = false;\r\n                this.showExportEIPCPanel = false;\r\n              }\r\n              break;\r\n          }\r\n        } else {\r\n          this.showExportIPCPanel = false;\r\n          this.showExportIPCPanelExcel = false;\r\n          this.showExportMaintenancePanel = false;\r\n          this.showExportEIPCPanel = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public checkSearchCriteria(): boolean {\r\n    let returnValue = false;\r\n    if (this.type === 'Loading') {\r\n      if (this.format === 'EXCEL') {\r\n        returnValue =\r\n          this.data === this.LOGISTIC || this.data === this.FUNCTIONAL || this.data === this.AMG ? false : true;\r\n      } else if (this.format === 'XML') {\r\n        returnValue = true;\r\n      }\r\n    } else {\r\n      if (this.format === 'EXCEL') {\r\n        returnValue = true;\r\n      } else if (this.format === 'XML') {\r\n        this.showExportXMLData();\r\n\r\n        returnValue = true;\r\n      } else {\r\n        returnValue = false;\r\n      }\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  // For export\r\n  public openItemTableDialog() {\r\n    this.initItemTableData();\r\n    this.showItemTableDialog = true;\r\n  }\r\n\r\n  private initItemTableData(): void {\r\n    this.getFamilyVariantComponents();\r\n    const itemTableCols: TableColumn[] = [\r\n      { field: 'familyCode', alignment: 'left', width: '10%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'structureType', alignment: 'left', width: '20%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'variantCode', alignment: 'left', width: '10%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'name', alignment: 'left', width: '30%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'chapter', alignment: 'left', width: '8%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'section', alignment: 'left', width: '8%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'subject', alignment: 'left', width: '8%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'sheet', alignment: 'left', width: '8%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'marks', alignment: 'left', width: '8%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'functionCode', alignment: 'left', width: '10%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'itemNumber', alignment: 'left', width: '10%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'itemType', alignment: 'left', width: '10%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'fLocType', alignment: 'left', width: '10%', filterMode: TableColumnFilterMode.Input }, // not in BireItemDTO\r\n      { field: 'itemFamilyCode', alignment: 'left', width: '10%', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'configurableArticle', alignment: 'left', width: '10%', filterMode: TableColumnFilterMode.Input }\r\n    ];\r\n\r\n    this.itemTableData = {\r\n      componentId: 'DialogItem',\r\n      tableCols: itemTableCols,\r\n      tableRows: this.engineeringDataExchangeSearchService.findBireItemsBySearchCriteria(\r\n        this.familyCode,\r\n        this.structureType,\r\n        this.variantCode\r\n      ),\r\n      dataKey: undefined,\r\n      selectionMode: TableSelectionMode.Single,\r\n      globalFilter: true\r\n    };\r\n  }\r\n\r\n  // To handle export data panel visibility\r\n  private showExportXMLData() {\r\n    if (this.type && this.format && this.data) {\r\n      this.showExportPanel = true;\r\n      this.exportPanel = this.data === this.IPC ? '0' : this.data === this.MAINTENANCE ? '1' : '2';\r\n    } else {\r\n      this.showExportPanel = false;\r\n    }\r\n  }\r\n\r\n  /**************\r\n   * Items dialog\r\n   **************/\r\n\r\n  public onSelectedItem(item: BireItemDTO): void {\r\n    if (item) {\r\n      this.ipcExportData.chapter = item.chapter;\r\n      this.ipcExportData.section = item.section;\r\n      this.ipcExportData.subject = item.subject;\r\n      this.ipcExportData.sheet = item.sheet;\r\n      this.ipcExportData.mark = item.marks;\r\n    }\r\n    this.ataData.forEach((ata) => {\r\n      if (\r\n        ata.bireItemDTO.chapter === item.chapter &&\r\n        ata.bireItemDTO.section === item.section &&\r\n        ata.bireItemDTO.subject === item.subject &&\r\n        ata.bireItemDTO.sheet === item.sheet &&\r\n        ata.bireItemDTO.marks === item.marks\r\n      ) {\r\n        this.selectedATACode = ata.labelValueDTO.label;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { EngineeringDataExchangeApi } from '../../../shared/api/engineering-data-exchange.api';\r\nimport { FleetManagementApi } from '../../../shared/api/fleet-management.api';\r\nimport { MaintenanceExportApi } from '../../../shared/api/maintenance-export.api';\r\nimport { ProductStructureManagementApi } from '../../../shared/api/product-structure-management.api';\r\nimport { ReferentialExportApi } from '../../../shared/api/referential-export.api';\r\nimport { TaskManagementApi } from '../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { ExportMaintenanceFileInput } from '../../../shared/types/api-input-types/engineering-data-exchange/export-maintenance-file-input.interface';\r\nimport { ExportReferentialFileInput } from '../../../shared/types/api-input-types/engineering-data-exchange/export-referential-file-input.interface';\r\nimport { FindDataListBySearchCriteriaInput } from '../../../shared/types/api-input-types/engineering-data-exchange/find-data-list-by-search-criteria-input.interface';\r\nimport { GetExcelDataInput } from '../../../shared/types/api-input-types/engineering-data-exchange/get-excel-data-input.interface';\r\nimport { GetTypeDataInput } from '../../../shared/types/api-input-types/engineering-data-exchange/get-type-data-input.interface';\r\nimport { GetXMLDataInput } from '../../../shared/types/api-input-types/engineering-data-exchange/get-xml-data-input.interface';\r\nimport { RefreshArchivedImportReportInput } from '../../../shared/types/api-input-types/engineering-data-exchange/refresh-archived-import-report-input.interface';\r\nimport { RemoveDataInput } from '../../../shared/types/api-input-types/engineering-data-exchange/remove-data-input.interface';\r\nimport { FindBireItemsBySearchCriteriaInput } from '../../../shared/types/api-input-types/product-structure-management/find-bire-items-by-search-criteria-input.interface';\r\nimport { FindBireItemsByFamilyVariantCode } from '../../../shared/types/api-output-types/engineering-data-exchange/find-bire-items-by-family-variant-code.interface';\r\nimport { GetFamilyVariantOutputDTO } from '../../../shared/types/api-output-types/engineering-data-exchange/get-family-variant-output-dto.interface';\r\nimport { GetImportListTableOutputDTO } from '../../../shared/types/api-output-types/engineering-data-exchange/get-import-list-table-output-dto.interface';\r\nimport { BireItemDTO } from '../../../shared/types/api-types/bire-item-dto.interface';\r\nimport { BireReportDTOId } from '../../../shared/types/api-types/bire-report-dto-id.interface';\r\nimport { FindFamilyVariantInput } from '../../../shared/types/api-types/find-family-variant-input.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class EgineeringDataExchangeSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly engineeringDataExchangeApi: EngineeringDataExchangeApi,\r\n    private readonly maintenanceExportApi: MaintenanceExportApi,\r\n    private readonly referentialExportApi: ReferentialExportApi,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly taskManagementApi: TaskManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getFamilyVariant(familyVariantInput: FindFamilyVariantInput): Observable<GetFamilyVariantOutputDTO[]> {\r\n    return super.post<FindFamilyVariantInput, GetFamilyVariantOutputDTO[]>(\r\n      this.productStructureManagementApi.findBireFamilyVariant,\r\n      familyVariantInput\r\n    );\r\n  }\r\n\r\n  public findDataListBySearchCriteria(\r\n    findDataListBySearchCriteria: FindDataListBySearchCriteriaInput\r\n  ): Observable<LabelValue<string>[]> {\r\n    return super.post<FindDataListBySearchCriteriaInput, LabelValue<string>[]>(\r\n      this.engineeringDataExchangeApi.findDataListBySearchCriteria,\r\n      findDataListBySearchCriteria\r\n    );\r\n  }\r\n\r\n  public findFormatList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.engineeringDataExchangeApi.findFormatList);\r\n  }\r\n\r\n  public findTypeList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.engineeringDataExchangeApi.findTypeList);\r\n  }\r\n\r\n  public findBireVariantVersionsByFamilyCode(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.engineeringDataExchangeApi.findTypeList);\r\n  }\r\n\r\n  public saveEngineeringExcelDataExchange(getExcelDataInput: GetExcelDataInput): Observable<string> {\r\n    return super.post<GetExcelDataInput, string>(\r\n      this.engineeringDataExchangeApi.saveEngineeringExcelDataExchange,\r\n      getExcelDataInput\r\n    );\r\n  }\r\n\r\n  public saveEngineeringXMLDataExchange(getXMLDataInput: GetXMLDataInput): Observable<string> {\r\n    return super.post<GetXMLDataInput, string>(\r\n      this.engineeringDataExchangeApi.saveEngineeringXMLDataExchange,\r\n      getXMLDataInput\r\n    );\r\n  }\r\n\r\n  public refreshEngineeringDataExchange(\r\n    refreshArchivedImportReportInput: RefreshArchivedImportReportInput\r\n  ): Observable<GetImportListTableOutputDTO[]> {\r\n    return super.post<RefreshArchivedImportReportInput, GetImportListTableOutputDTO[]>(\r\n      this.engineeringDataExchangeApi.refreshEngineeringDataExchange,\r\n      refreshArchivedImportReportInput\r\n    );\r\n  }\r\n\r\n  public removeReportsByReportId(reports: RemoveDataInput): Observable<boolean> {\r\n    return super.post<RemoveDataInput, boolean>(this.engineeringDataExchangeApi.removeReportsByReportId, reports);\r\n  }\r\n\r\n  public exportReferentialFile(exportInput: ExportReferentialFileInput): Observable<Uint8Array> {\r\n    return super.post<ExportReferentialFileInput, Uint8Array>(\r\n      this.referentialExportApi.exportReferentialFile,\r\n      exportInput\r\n    );\r\n  }\r\n\r\n  public exportReferentialFileExcel(exportInput: ExportReferentialFileInput): Observable<Uint8Array> {\r\n    return super.post<ExportReferentialFileInput, Uint8Array>(\r\n      this.referentialExportApi.exportReferentialFileExcel,\r\n      exportInput\r\n    );\r\n  }\r\n\r\n  public exportMaintenanceFile(exportInput: ExportMaintenanceFileInput): Observable<Uint8Array> {\r\n    return super.post<ExportMaintenanceFileInput, Uint8Array>(\r\n      this.maintenanceExportApi.exportMaintenanceFile,\r\n      exportInput\r\n    );\r\n  }\r\n\r\n  public exportMaintenanceFileExcel(exportInput: ExportMaintenanceFileInput): Observable<Uint8Array> {\r\n    return super.post<ExportMaintenanceFileInput, Uint8Array>(\r\n      this.maintenanceExportApi.exportMaintenanceFileExcel,\r\n      exportInput\r\n    );\r\n  }\r\n\r\n  public exportDetailPartsList(exportInput: RefreshArchivedImportReportInput): Observable<Uint8Array> {\r\n    return super.post<RefreshArchivedImportReportInput, Uint8Array>(\r\n      this.referentialExportApi.exportDetailPartsList,\r\n      exportInput\r\n    );\r\n  }\r\n\r\n  public getTemplate(input: GetTypeDataInput): Observable<Uint8Array> {\r\n    return super.post<GetTypeDataInput, Uint8Array>(\r\n      this.engineeringDataExchangeApi.fetchEngineeringDataExchangeTemplate,\r\n      input\r\n    );\r\n  }\r\n\r\n  public openImportReportContent(input: BireReportDTOId): Observable<Uint8Array> {\r\n    return super.post<BireReportDTOId, Uint8Array>(\r\n      this.productStructureManagementApi.findBireReportContentOfBireReport,\r\n      input\r\n    );\r\n  }\r\n\r\n  public openFLIMportReportContent(input: BireReportDTOId): Observable<Uint8Array> {\r\n    return super.post<BireReportDTOId, Uint8Array>(this.fleetManagementApi.findBidoReportContentOfBidoReport, input);\r\n  }\r\n\r\n  public loadATAcodes(input: RefreshArchivedImportReportInput): Observable<FindBireItemsByFamilyVariantCode[]> {\r\n    return super.post<RefreshArchivedImportReportInput, FindBireItemsByFamilyVariantCode[]>(\r\n      this.productStructureManagementApi.findBireItemsByFamilyAndVariantCodes,\r\n      input\r\n    );\r\n  }\r\n\r\n  public findAllBireTaskGroup(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.taskManagementApi.findAllBireTaskGroups);\r\n  }\r\n\r\n  public findBireItemsBySearchCriteria(\r\n    familyCode: string,\r\n    structureType: string,\r\n    variantCode: string\r\n  ): Observable<SearchResultsDTO<BireItemDTO>> {\r\n    const params: FindBireItemsBySearchCriteriaInput = {\r\n      bireItemDTOCriteria: {\r\n        familyCode,\r\n        structureType,\r\n        variantCode\r\n      }\r\n    };\r\n\r\n    return super.post<FindBireItemsBySearchCriteriaInput, SearchResultsDTO<BireItemDTO>>(\r\n      this.productStructureManagementApi.findBireItemsBySearchCriteria,\r\n      params\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<a-modal style=\\\"height: 28em;\\\" class=\\\"aw-modal\\\" [(visible)]=\\\"displayValue\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\" style=\\\"overflow: hidden\\\">\\r\\n      <label class=\\\"form-label\\\"></label>\\r\\n\\r\\n      <div class=\\\"form-control\\\" style=\\\"height: auto\\\">\\r\\n        <textarea\\r\\n          pInputTextArea\\r\\n          [cols]=\\\"60\\\"\\r\\n          [rows]=\\\"15\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [(ngModel)]=\\\"importReportMessage\\\"\\r\\n          disabled\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"close()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \".textbox {\\n  background-color: white; }\\n\\n.modal-height {\\n  height: 28rem; }\\n\\n.textarea-height {\\n  height: 18rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9jb2xsYWJvcmF0aXZlLWNvY2twaXQvZW5naW5lZXJpbmctZGF0YS1leGNoYW5nZS1zZWFyY2gvaW1wb3J0LXJlcG9ydC1wb3B1cC9EOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGZyb250ZW5kX2Flcm93ZWJiL3NyY1xcYXBwXFxtYWluXFxjb2xsYWJvcmF0aXZlLWNvY2twaXRcXGVuZ2luZWVyaW5nLWRhdGEtZXhjaGFuZ2Utc2VhcmNoXFxpbXBvcnQtcmVwb3J0LXBvcHVwXFxpbXBvcnQtcmVwb3J0LXBvcHVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQXVCLEVBQUE7O0FBR3pCO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0UsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9jb2xsYWJvcmF0aXZlLWNvY2twaXQvZW5naW5lZXJpbmctZGF0YS1leGNoYW5nZS1zZWFyY2gvaW1wb3J0LXJlcG9ydC1wb3B1cC9pbXBvcnQtcmVwb3J0LXBvcHVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRleHRib3gge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4ubW9kYWwtaGVpZ2h0IHtcclxuICBoZWlnaHQ6IDI4cmVtO1xyXG59XHJcblxyXG4udGV4dGFyZWEtaGVpZ2h0IHtcclxuICBoZWlnaHQ6IDE4cmVtO1xyXG59XHJcbiJdfQ== */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aw-import-report-popup',\r\n  templateUrl: './import-report-popup.component.html',\r\n  styleUrls: ['./import-report-popup.component.scss']\r\n})\r\nexport class ImportReportPopupComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Output() public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input() public importReportMessage: string | null;\r\n\r\n  public readonly componentId: string;\r\n  public displayValue: boolean;\r\n\r\n  public constructor() {\r\n    this.componentId = 'ImportReportPopupComponent';\r\n    this.displayChange = new EventEmitter<boolean>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (this.importReportMessage === '') {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  public close(): void {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ componentData.componentId + \\\".fleetDataExchange\\\" | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        {{ \\\"page.searchPage\\\" | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <!--Type format data-->\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"section flex--1\\\">\\r\\n                  <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".type\\\" | translate }}</h4>\\r\\n                  <div class=\\\"section-content\\\">\\r\\n                    <div class=\\\"form-group form-group-select-buton\\\">\\r\\n                      <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n\\r\\n                      <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                        <p-selectButton\\r\\n                          [(ngModel)]=\\\"type\\\"\\r\\n                          [options]=\\\"propertyTypeList\\\"\\r\\n                          (onChange)=\\\"onTypeChange($event)\\\"\\r\\n                        ></p-selectButton>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"section flex--1\\\">\\r\\n                  <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".format\\\" | translate }}</h4>\\r\\n                  <div class=\\\"section-content\\\">\\r\\n                    <div class=\\\"form-group form-group-select-buton\\\">\\r\\n                      <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n\\r\\n                      <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                        <p-selectButton\\r\\n                          [(ngModel)]=\\\"format\\\"\\r\\n                          [options]=\\\"propertyFormatList\\\"\\r\\n                          (onChange)=\\\"onFormatChange()\\\"\\r\\n                        ></p-selectButton>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"section flex--1\\\"></div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".data\\\" | translate }}</h4>\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"form-group form-group-select-buton\\\">\\r\\n                    <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n\\r\\n                    <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                      <p-selectButton\\r\\n                        [(ngModel)]=\\\"data\\\"\\r\\n                        [options]=\\\"propertyDataList\\\"\\r\\n                        (onChange)=\\\"onDataChange()\\\"\\r\\n                      ></p-selectButton>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\" *ngIf=\\\"showSearchCriteria\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group flex--4\\\" [ngClass]=\\\"{ required: true }\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".family\\\" | translate }} </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        (onChange)=\\\"changeFamilyType($event)\\\"\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [(ngModel)]=\\\"family\\\"\\r\\n                        [options]=\\\"propertyFamilyList\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group flex--4\\\" [ngClass]=\\\"{ required: true }\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".variant\\\" | translate }} </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        (onChange)=\\\"changedVariantType($event)\\\"\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        [(ngModel)]=\\\"variant\\\"\\r\\n                        [options]=\\\"propertyVariantList\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      >\\r\\n                      </p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group flex--4\\\"></div>\\r\\n                  <div class=\\\"form-group flex--4\\\"></div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- For Export>Excel>Asset -->\\r\\n      <div class=\\\"grid-row\\\" *ngIf=\\\"showAssetPanel()\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ componentData.componentId + \\\".assestDataExport\\\" | translate }}\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label selectedFV\\\">\\r\\n                        {{ componentData.componentId + \\\".familyVariantSelected\\\" | translate }}:\\r\\n                        {{ familyAndVariantSelected() }}\\r\\n                      </label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">\\r\\n                  {{ componentData.componentId + \\\".topAsset\\\" | translate }}\\r\\n                </h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".assetCode\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control form-control-with-btn\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.equipmentCriteria.equipmentCode\\\"\\r\\n                        />\\r\\n                        <i\\r\\n                          class=\\\"fa fa-fw fa-search aw-icon\\\"\\r\\n                          aria-hidden=\\\"true\\\"\\r\\n                          pTooltip=\\\"{{ 'global.search' | translate }}\\\"\\r\\n                          tooltipPosition=\\\"top\\\"\\r\\n                          (click)=\\\"openAdvanceSearchDialog()\\\"\\r\\n                        ></i>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">P/N</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.equipmentCriteria.pnCode\\\"\\r\\n                          [disabled]=\\\"true\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">S/N</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.equipmentCriteria.sn\\\"\\r\\n                          [disabled]=\\\"true\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".name\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"nameTxt\\\" [disabled]=\\\"true\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".designation\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.equipmentCriteria.equipmentDesignation\\\"\\r\\n                          [disabled]=\\\"true\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".selAssestDataExport\\\" | translate }}:</h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".familyVariant\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.familyVariantCodeSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        P/N\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.pnSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        S/N\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.snSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".assetCode\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.codeSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".ownerCode\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.ownerCodeSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".operatorCode\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.operatorCodeSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".registration\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.registrationSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".designation\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.designationSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".function\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.functionSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".operationStatus\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.operationalStatusSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".eisDate\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.eisDateSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".superiorAssetCode\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.superiorAssetCodeSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".functionCode\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.functionCodeSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".lifeRestriction\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"assetDataExport.lifeRestrictionSelected\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row search-criteria-footer\\\">\\r\\n                    <div class=\\\"search-actions\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" mat-raised-button (click)=\\\"export()\\\">\\r\\n                        <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                        {{ componentData.componentId + \\\".export\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"showTabs()\\\" class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"data === component.fleet\\\"\\r\\n                  [ngClass]=\\\"{ active: tabFleetId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openFleetTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".importFleet\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"data === component.counterUpdates\\\"\\r\\n                  [ngClass]=\\\"{ active: tabCounterId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openCounterTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".importCounterUpdates\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"type === component.loading && format === component.excel && data === component.flights\\\"\\r\\n                  [ngClass]=\\\"{ active: tabExcelFlightsId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openFlightsTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".importExcelFlights\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"data === component.usageModel\\\"\\r\\n                  [ngClass]=\\\"{ active: tabUsageId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openUsageTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".importUsageModel\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"type === component.loading && data === component.configEvents\\\"\\r\\n                  [ngClass]=\\\"{ active: tabImportConfigurationId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openImportConfigurationTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".importConfiguration\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"type === component.loading && format === component.xml && data === component.flights\\\"\\r\\n                  [ngClass]=\\\"{ active: tabImportXmlFlightId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openImportFlightTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".importXmlFlights\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"data === component.globalImport\\\"\\r\\n                  [ngClass]=\\\"{ active: tabGlobalImportId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openGlobalImportTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".importGlobal\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"type === component.export && data === component.configEvents\\\"\\r\\n                  [ngClass]=\\\"{ active: tabExportConfigurationId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openExportConfigurationTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".exportConfiguration\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"type === component.export && format === component.xml && data === component.flights\\\"\\r\\n                  [ngClass]=\\\"{ active: tabExportXmlFlightId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openExportFlightTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".exportXmlFlights\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"data === component.globalExport\\\"\\r\\n                  [ngClass]=\\\"{ active: tabGlobalExportId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openGlobalExportTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".exportGlobal\\\" | translate }}\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"showImportPanel && showReportTables()\\\" class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div *ngIf=\\\"data !== 'Global'\\\" class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label selectedFV\\\">\\r\\n                      <span\\r\\n                        (click)=\\\"openTemplate(loadTemplate())\\\"\\r\\n                        style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n                      >\\r\\n                        {{ loadTemplate() }}\\r\\n                      </span>\\r\\n                    </label>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div\\r\\n                  *ngIf=\\\"\\r\\n                    showSearchCriteria &&\\r\\n                    type === component.loading &&\\r\\n                    format === component.excel &&\\r\\n                    data === component.fleet\\r\\n                  \\\"\\r\\n                  class=\\\"grid-row\\\"\\r\\n                >\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label selectedFV\\\">\\r\\n                      <span>\\r\\n                        {{ componentData.componentId + \\\".familyVariant\\\" | translate }}:\\r\\n                        {{ familyAndVariantSelected() }}\\r\\n                      </span>\\r\\n                    </label>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-row grid-cell--3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label\\r\\n                      class=\\\"form-label selectedFV\\\"\\r\\n                      *ngIf=\\\"type === component.loading && format === component.excel && data === component.fleet\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".fleetDataFileToImport\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label\\r\\n                      class=\\\"form-label selectedFV\\\"\\r\\n                      *ngIf=\\\"\\r\\n                        type === component.loading && format === component.excel && data === component.counterUpdates\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".counterUpdatesFileToImport\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label\\r\\n                      class=\\\"form-label selectedFV\\\"\\r\\n                      *ngIf=\\\"type === component.loading && format === component.excel && data === component.flights\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".excelFlightsFileToImport\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label\\r\\n                      class=\\\"form-label selectedFV\\\"\\r\\n                      *ngIf=\\\"type === component.loading && format === component.excel && data === 'Usage Model'\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".usageModelFileToImport\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label\\r\\n                      class=\\\"form-label selectedFV\\\"\\r\\n                      *ngIf=\\\"type === component.loading && format === component.xml && data === component.configEvents\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".configurationAndEventsFileToImport\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label\\r\\n                      class=\\\"form-label selectedFV\\\"\\r\\n                      *ngIf=\\\"type === component.loading && format === component.xml && data === component.flights\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".xmlFlightsFileToImport\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label\\r\\n                      class=\\\"form-label selectedFV\\\"\\r\\n                      *ngIf=\\\"type === component.loading && format === component.zip && data === 'Global Import'\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".globalImportFileToImport\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n                      <div class=\\\"form-control-data\\\">\\r\\n                        {{ fileName }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"btn-file-upload-wrapper\\\">\\r\\n                        <p-fileUpload\\r\\n                          #fileUploader\\r\\n                          *ngIf=\\\"!isReadOpenMode\\\"\\r\\n                          class=\\\"aw-fileupload\\\"\\r\\n                          name=\\\"document[]\\\"\\r\\n                          customUpload=\\\"true\\\"\\r\\n                          mode=\\\"basic\\\"\\r\\n                          auto=\\\"true\\\"\\r\\n                          chooseLabel=\\\"\\\"\\r\\n                          [disabled]=\\\"enableImport()\\\"\\r\\n                          (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                        ></p-fileUpload>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label\\r\\n                      *ngIf=\\\"\\r\\n                        showSearchCriteria &&\\r\\n                        type === component.loading &&\\r\\n                        format === component.excel &&\\r\\n                        data === component.fleet\\r\\n                      \\\"\\r\\n                      class=\\\"form-label selectedFV\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".oldEquipCheckbox\\\" | translate }}\\r\\n                    </label>\\r\\n                    <label\\r\\n                      *ngIf=\\\"\\r\\n                        type === component.loading && format === component.excel && data === component.counterUpdates\\r\\n                      \\\"\\r\\n                      class=\\\"form-label selectedFV\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".simPropagationChkBox\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-checkbox\\r\\n                        *ngIf=\\\"\\r\\n                          showSearchCriteria &&\\r\\n                          type === component.loading &&\\r\\n                          format === component.excel &&\\r\\n                          data === component.fleet\\r\\n                        \\\"\\r\\n                        binary=\\\"true\\\"\\r\\n                        class=\\\"aw-checkbox\\\"\\r\\n                        [(ngModel)]=\\\"oldEquipCheckbox\\\"\\r\\n                      ></p-checkbox>\\r\\n                      <p-checkbox\\r\\n                        *ngIf=\\\"\\r\\n                          type === component.loading && format === component.excel && data === component.counterUpdates\\r\\n                        \\\"\\r\\n                        binary=\\\"true\\\"\\r\\n                        class=\\\"aw-checkbox\\\"\\r\\n                        [(ngModel)]=\\\"simPropagationCheckbox\\\"\\r\\n                      ></p-checkbox>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngIf=\\\"\\r\\n                tabExportReportId !== currentTabsId &&\\r\\n                type === component.export &&\\r\\n                ((format == component.xml && (data === component.configEvents || data === component.flights)) ||\\r\\n                  (format == component.zip && data === component.globalExport))\\r\\n              \\\"\\r\\n              class=\\\"grid-cell-content grid-cell-content-with-section\\\"\\r\\n            >\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group flex--1\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".exportData\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [(ngModel)]=\\\"exportDataFrom\\\"\\r\\n                          [disabled]=\\\"isReadOnlyForm\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group flex--3\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div\\r\\n                *ngIf=\\\"\\r\\n                  (format == component.xml && (data === component.configEvents || data === component.flights)) ||\\r\\n                  (format == component.zip && data === component.globalExport)\\r\\n                \\\"\\r\\n                class=\\\"section\\\"\\r\\n              >\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".lockAsset\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox binary=\\\"true\\\" class=\\\"aw-checkbox\\\" [(ngModel)]=\\\"lockAssetCheckbox\\\"></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".exportEngineeringData\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox binary=\\\"true\\\" class=\\\"aw-checkbox\\\" [(ngModel)]=\\\"exportEngineeringData\\\"></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">\\r\\n                  {{ componentData.componentId + \\\".assetSelection\\\" | translate }}\\r\\n                </h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <p-table\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                      #ptableAssetSelection\\r\\n                      class=\\\"aw-table2\\\"\\r\\n                      [columns]=\\\"assetSelectionTableCols\\\"\\r\\n                      [value]=\\\"superiorTable\\\"\\r\\n                      [(selection)]=\\\"selectedAssetTask\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"caption\\\">\\r\\n                        <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedAssetTask.length > 0 }\\\">\\r\\n                          <div class=\\\"aw-table-global-filter\\\">\\r\\n                            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </label>\\r\\n\\r\\n                            <input\\r\\n                              #ptableAssetSelectionGlobalFilter\\r\\n                              class=\\\"aw-table-global-filter-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                              (input)=\\\"ptableAssetSelection.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"aw-table-actions\\\">\\r\\n                            <button\\r\\n                              *ngIf=\\\"selectedAssetTask.length > 0\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"deleteAssets()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.delete\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button type=\\\"button\\\" mat-raised-button (click)=\\\"openAssetsSelectionDialog()\\\">\\r\\n                              {{ \\\"global.add\\\" | translate }}\\r\\n                            </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                        <colgroup>\\r\\n                          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                          </th>\\r\\n\\r\\n                          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                            {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                          </th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                          </td>\\r\\n\\r\\n                          <td\\r\\n                            *ngFor=\\\"let col of columns\\\"\\r\\n                            [ngSwitch]=\\\"col.field\\\"\\r\\n                            [ngStyle]=\\\"{ 'text-align': col.alignment, 'min-width': '75rem' }\\\"\\r\\n                          >\\r\\n                            <div *ngSwitchDefault>\\r\\n                              {{ rowData[col.field] }}\\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-table>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row search-criteria-footer\\\">\\r\\n                    <div class=\\\"search-actions\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" mat-raised-button (click)=\\\"export()\\\">\\r\\n                        <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                        {{ componentData.componentId + \\\".export\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"showImportPanel && showReportTables()\\\" class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      *ngIf=\\\"type === component.loading && format === component.xml && data === component.configEvents\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"import(1)\\\"\\r\\n                      [ngClass]=\\\"{ inactive: fileName === '' }\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".simulate\\\" | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn-with-spinner\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"import(0)\\\"\\r\\n                      [ngClass]=\\\"{ inactive: fileName === '' }\\\"\\r\\n                    >\\r\\n                      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                      {{ componentData.componentId + \\\".importFile\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"showTabs()\\\" class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"showImportReports()\\\"\\r\\n                  [ngClass]=\\\"{ active: tabImportReportId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openImportReportsTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".importReports\\\" | translate }} ({{ reports ? reports.length : 0 }})\\r\\n                </h3>\\r\\n\\r\\n                <h3\\r\\n                  class=\\\"grid-cell-title\\\"\\r\\n                  *ngIf=\\\"showExportReports()\\\"\\r\\n                  [ngClass]=\\\"{ active: tabExportReportId === currentTabsId }\\\"\\r\\n                  (click)=\\\"openExportReportsTab()\\\"\\r\\n                >\\r\\n                  {{ componentData.componentId + \\\".exportReports\\\" | translate }} ({{ reports ? reports.length : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!--For archived import reports-->\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div\\r\\n                *ngIf=\\\"showImportPanel && type && format && data\\\"\\r\\n                [ngClass]=\\\"{ display: tabImportReportId === currentTabsId ? 'flex' : 'none' }\\\"\\r\\n              >\\r\\n                <p-table\\r\\n                  [resizableColumns]=\\\"true\\\"\\r\\n                  #ptableImportReports\\r\\n                  class=\\\"aw-table2\\\"\\r\\n                  [columns]=\\\"reportTableCols\\\"\\r\\n                  [value]=\\\"reports\\\"\\r\\n                  [(selection)]=\\\"selectedReports\\\"\\r\\n                  [scrollable]=\\\"true\\\"\\r\\n                >\\r\\n                  <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                    <span *ngIf=\\\"!isReportLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                    <div *ngIf=\\\"isReportLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                      <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                      <div class=\\\"lds-hourglass\\\"></div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"caption\\\">\\r\\n                    <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedReports.length > 0 }\\\">\\r\\n                      <div class=\\\"aw-table-global-filter\\\">\\r\\n                        <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </label>\\r\\n\\r\\n                        <input\\r\\n                          #ptableImportReportGlobalFilter\\r\\n                          class=\\\"aw-table-global-filter-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                          (input)=\\\"ptableImportReports.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"aw-table-actions\\\">\\r\\n                        <button\\r\\n                          *ngIf=\\\"selectedReports.length > 0\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"deleteReports()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                    <colgroup>\\r\\n                      <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                      <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                    </colgroup>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                    <tr>\\r\\n                      <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                      </th>\\r\\n\\r\\n                      <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                        {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                      </th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                    <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                      <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                      </td>\\r\\n\\r\\n                      <td\\r\\n                        *ngFor=\\\"let col of columns\\\"\\r\\n                        [ngSwitch]=\\\"col.field\\\"\\r\\n                        [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                      >\\r\\n                        <div *ngSwitchCase=\\\"'reportName'\\\">\\r\\n                          <span\\r\\n                            (click)=\\\"openReportDetail(rowData)\\\"\\r\\n                            style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n                          >\\r\\n                            {{ rowData[col.field] }}\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        <div *ngSwitchCase=\\\"'statusDate'\\\">\\r\\n                          <span>\\r\\n                            {{ rowData[col.field] | date: \\\"dd/MM/yyyy HH:mm:ss\\\":\\\"\\\":translateService.currentLang }}\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        <div *ngSwitchDefault>\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </p-table>\\r\\n              </div>\\r\\n\\r\\n              <div\\r\\n                *ngIf=\\\"\\r\\n                  tabExportReportId !== currentTabsId &&\\r\\n                  type === component.export &&\\r\\n                  ((format == component.xml && (data === component.configEvents || data === component.flights)) ||\\r\\n                    (format == component.zip && data === component.globalExport))\\r\\n                \\\"\\r\\n                [ngClass]=\\\"{ display: tabExportReportId === currentTabsId ? 'flex' : 'none' }\\\"\\r\\n              >\\r\\n                <p-table\\r\\n                  [resizableColumns]=\\\"true\\\"\\r\\n                  #ptableExportReports\\r\\n                  class=\\\"aw-table2\\\"\\r\\n                  [columns]=\\\"exportReportTableCols\\\"\\r\\n                  [value]=\\\"reports\\\"\\r\\n                  [(selection)]=\\\"selectedExportReports\\\"\\r\\n                  [scrollable]=\\\"true\\\"\\r\\n                >\\r\\n                  <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                    <span *ngIf=\\\"!isReportLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                    <div *ngIf=\\\"isReportLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                      <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                      <div class=\\\"lds-hourglass\\\"></div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"caption\\\">\\r\\n                    <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedExportReports.length > 0 }\\\">\\r\\n                      <div class=\\\"aw-table-global-filter\\\">\\r\\n                        <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </label>\\r\\n\\r\\n                        <input\\r\\n                          #ptableExportReportGlobalFilter\\r\\n                          class=\\\"aw-table-global-filter-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                          (input)=\\\"ptableExportReports.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"aw-table-actions\\\">\\r\\n                        <button\\r\\n                          *ngIf=\\\"selectedExportReports.length > 0\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"deleteExportReports()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                    <colgroup>\\r\\n                      <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                      <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                    </colgroup>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                    <tr>\\r\\n                      <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                      </th>\\r\\n\\r\\n                      <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                        {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                      </th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                    <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                      <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                      </td>\\r\\n\\r\\n                      <td\\r\\n                        *ngFor=\\\"let col of columns\\\"\\r\\n                        [ngSwitch]=\\\"col.field\\\"\\r\\n                        [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                      >\\r\\n                        <div *ngSwitchCase=\\\"'reportName'\\\">\\r\\n                          <span\\r\\n                            (click)=\\\"openReportDetail(rowData)\\\"\\r\\n                            style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n                          >\\r\\n                            {{ rowData[col.field] }}\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        <div *ngSwitchCase=\\\"'statusDate'\\\">\\r\\n                          <span>\\r\\n                            {{ rowData[col.field] | date: \\\"dd/MM/yyyy HH:mm:ss\\\":\\\"\\\":translateService.currentLang }}\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        <div *ngSwitchDefault>\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </p-table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-search-equipment\\r\\n    *ngIf=\\\"showQuickSearchEquipmentDialog\\\"\\r\\n    [(display)]=\\\"showQuickSearchEquipmentDialog\\\"\\r\\n    [equipment-code]=\\\"assetCodeTxt\\\"\\r\\n    [family-variant]=\\\"getFamilyVariant()\\\"\\r\\n    (onSelected)=\\\"setSelectedAsset($event)\\\"\\r\\n  ></aw-dialog-search-equipment>\\r\\n\\r\\n  <aw-assets-selection-dialog\\r\\n    *ngIf=\\\"showAssetsSelectionDialog\\\"\\r\\n    [(display)]=\\\"showAssetsSelectionDialog\\\"\\r\\n    [showAssetsSelectionDialog]=\\\"showAssetsSelectionDialog\\\"\\r\\n    (onSelected)=\\\"setSelectedAssetsFromSelectionDilog($event)\\\"\\r\\n  ></aw-assets-selection-dialog>\\r\\n\\r\\n  <aw-import-report-popup\\r\\n    *ngIf=\\\"showImportReportMessage\\\"\\r\\n    [importReportMessage]=\\\"importReportMessage\\\"\\r\\n    [(display)]=\\\"showImportReportMessage\\\"\\r\\n  ></aw-import-report-popup>\\r\\n</div>\\r\\n\"","module.exports = \":host .selectedFV {\\n  width: 200%; }\\n\\n:host .form-group-select-buton {\\n  margin-top: 0 !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9jb2xsYWJvcmF0aXZlLWNvY2twaXQvZmxlZXQtZGF0YS1leGNoYW5nZS9EOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGZyb250ZW5kX2Flcm93ZWJiL3NyY1xcYXBwXFxtYWluXFxjb2xsYWJvcmF0aXZlLWNvY2twaXRcXGZsZWV0LWRhdGEtZXhjaGFuZ2VcXGZsZWV0LWRhdGEtZXhjaGFuZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxXQUFXLEVBQUE7O0FBRmY7RUFNSSx3QkFBd0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vY29sbGFib3JhdGl2ZS1jb2NrcGl0L2ZsZWV0LWRhdGEtZXhjaGFuZ2UvZmxlZXQtZGF0YS1leGNoYW5nZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAuc2VsZWN0ZWRGViB7XHJcbiAgICB3aWR0aDogMjAwJTtcclxuICB9XHJcblxyXG4gIC5mb3JtLWdyb3VwLXNlbGVjdC1idXRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport { FileUpload } from 'primeng/fileupload';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { BidoFunctionTypeConstants } from '../../../shared/constants/bido-function-type-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../shared/services/session.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { ExportAssetDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/export-asset-data-input.interface';\r\nimport { ExportFleetDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/export-fleet-data-input.interface';\r\nimport { FindAssetListConfigurationEventDTO } from '../../../shared/types/api-input-types/fleet-data-exchange/find-asset-list-configuration-event-dto.interface';\r\nimport { FindDataListBySearchCriteriaInput } from '../../../shared/types/api-input-types/fleet-data-exchange/find-data-list-by-search-criteria-input.interface';\r\nimport { GetRefreshedArchivedReportDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/get-refreshed-archived-report-data-input.interface';\r\nimport { SaveExcelDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/save-excel-data-input.interface';\r\nimport { SaveXmlDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/save-xml-data-input.interface';\r\nimport { SaveZipDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/save-zip-data-input.interface';\r\nimport { FindFamilyVariantInput } from '../../../shared/types/api-input-types/product-structure-management/find-family-variant-input.interface';\r\nimport { GetFamilyVariantOutputDTO } from '../../../shared/types/api-output-types/engineering-data-exchange/get-family-variant-output-dto.interface';\r\nimport { BidoEquipmentOVSOutputDTO } from '../../../shared/types/api-output-types/fleet-management/bido-equipment-ovs-output-dto';\r\nimport { BidoDocumentationDTO } from '../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { BidoEquipmentTableDTO } from '../../../shared/types/api-types/bido-equipment-table-dto.interface';\r\nimport { BireReportDTOId } from '../../../shared/types/api-types/bire-report-dto-id.interface';\r\nimport { BireReportDTO } from '../../../shared/types/api-types/bire-report-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { FileUtils } from '../../../shared/utils/file-utils';\r\nimport { ListUtils } from '../../../shared/utils/list-utils';\r\n\r\nimport { FleetDataExchangeService } from './fleet-data-exchange.service';\r\n\r\nenum FileExtensions {\r\n  txt = 'txt',\r\n  xls = 'xls',\r\n  xlsx = 'xlsx',\r\n  xml = 'xml',\r\n  zip = 'zip'\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-fleet-data-exchange',\r\n  templateUrl: './fleet-data-exchange.component.html',\r\n  styleUrls: ['./fleet-data-exchange.component.scss']\r\n})\r\nexport class FleetDataExchangeComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public static readonly asset: string = 'Asset';\r\n  public static readonly loading: string = 'Loading';\r\n  public static readonly configEvents: string = 'Configuration and Events';\r\n  public static readonly flights: string = 'Flights';\r\n  public static readonly globalExport: string = 'Global Export';\r\n  public static readonly globalImport: string = 'Global Import';\r\n  public static readonly excel: string = 'Excel';\r\n  public static readonly xml: string = 'Xml';\r\n  public static readonly zip: string = 'Zip';\r\n  public static readonly export: string = 'Export';\r\n  public static readonly counterUpdates: string = 'Counter Updates';\r\n  public static readonly usageModel: string = 'Usage Model';\r\n  public static readonly fleet: string = 'Fleet';\r\n  public static readonly dateFormat: string = 'dd-MM-yyyy_HH';\r\n  public static readonly monthFormat: string = 'mm';\r\n\r\n  public readonly component: typeof FleetDataExchangeComponent;\r\n\r\n  public showImportComponents: boolean;\r\n  public showExportComponents: boolean;\r\n\r\n  public isFavoriteEntry: boolean;\r\n\r\n  // Tab id\r\n  public readonly tabFleetId: string;\r\n  public readonly tabCounterId: string;\r\n  public readonly tabExcelFlightsId: string;\r\n  public readonly tabUsageId: string;\r\n  public readonly tabImportConfigurationId: string;\r\n  public readonly tabImportXmlFlightId: string;\r\n  public readonly tabGlobalImportId: string;\r\n  public readonly tabExportConfigurationId: string;\r\n  public readonly tabExportXmlFlightId: string;\r\n  public readonly tabGlobalExportId: string;\r\n  public readonly tabImportReportId: string;\r\n  public readonly tabExportReportId: string;\r\n\r\n  public currentTabsId: string;\r\n\r\n  // Dropdown\r\n  public propertyDataList: LabelValue<string>[];\r\n  public propertyFormatList: LabelValue<string>[];\r\n  public propertyTypeList: LabelValue<string>[];\r\n  public propertyFamilyList: LabelValue<string>[];\r\n  public propertyVariantList: LabelValue<string>[];\r\n\r\n  public getFamilyVariantOutputDTO: GetFamilyVariantOutputDTO[];\r\n\r\n  public type: string;\r\n  public format: string | undefined;\r\n  public data: string | undefined;\r\n  public family: string | undefined;\r\n  public variant: string | undefined;\r\n\r\n  public familyCode: string | undefined;\r\n  public structureType: string | undefined;\r\n  public variantCode: string | undefined;\r\n  public familyName: string | undefined;\r\n  public variantName: string | undefined;\r\n\r\n  public showImportPanel: boolean;\r\n  public showAssetSection: boolean;\r\n\r\n  public file: BidoDocumentationDTO;\r\n  public fileName: string | undefined;\r\n  public showSearchCriteria: boolean;\r\n\r\n  public reportTableCols: TableColumn[];\r\n\r\n  // Tab id\r\n  public readonly tabAssetSelectionId: string;\r\n  public currentTabId: string;\r\n  public assetSelectionTableCols: TableColumn[];\r\n  public exportReportTableCols: TableColumn[];\r\n\r\n  public showQuickSearchEquipmentDialog: boolean;\r\n  public equipment: BidoEquipmentTableDTO | null;\r\n\r\n  // Checkbox\r\n  public assetDataExportCheckbox: string[];\r\n  public lockAssetCheckbox: boolean;\r\n  public oldEquipCheckbox: boolean;\r\n  public simPropagationCheckbox: boolean;\r\n  public exportEngineeringData: boolean;\r\n\r\n  // Import Table Parmas\r\n  public reports: BireReportDTO[];\r\n  public selectedReports: BireReportDTO[];\r\n\r\n  // Input Txt Params\r\n  public assetCodeTxt: string;\r\n  public pnCodeTxt: string;\r\n  public snCodeTxt: string;\r\n  public nameTxt: string;\r\n  public designationTxt: string;\r\n\r\n  public exportDataFrom: Date | undefined;\r\n\r\n  public selectedExportReports: BireReportDTO[];\r\n  public selectedAssetTask: FindAssetListConfigurationEventDTO[];\r\n\r\n  public importReportMessage: string;\r\n  public showImportReportMessage: boolean;\r\n\r\n  public assetDataExport: ExportAssetDataInput;\r\n\r\n  public showAssetsSelectionDialog: boolean;\r\n\r\n  public superiorTable: FindAssetListConfigurationEventDTO[];\r\n\r\n  public isReportLoading: boolean;\r\n  public showSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public translateService: TranslateService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly fleetDataExchangeService: FleetDataExchangeService,\r\n    private readonly datepipe: DatePipe,\r\n    public sessionService: SessionService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.component = FleetDataExchangeComponent;\r\n\r\n    this.showExportComponents = false;\r\n    this.showImportComponents = false;\r\n\r\n    this.tabFleetId = 'fleet';\r\n    this.tabImportReportId = 'importReports';\r\n    this.tabCounterId = 'counterUpdates';\r\n    this.tabExcelFlightsId = 'flights';\r\n    this.tabUsageId = 'usageModel';\r\n    this.tabImportConfigurationId = 'importConfiguration';\r\n    this.tabImportXmlFlightId = 'importFlight';\r\n    this.tabGlobalImportId = 'globalImport';\r\n    this.tabExportConfigurationId = 'exportConfiguration';\r\n    this.tabExportXmlFlightId = 'exportFlight';\r\n    this.tabGlobalExportId = 'globalExport';\r\n    this.tabExportReportId = 'exportReports';\r\n\r\n    this.showSearchCriteria = false;\r\n    this.getFamilyVariantOutputDTO = [];\r\n\r\n    this.familyCode = '';\r\n    this.structureType = '';\r\n    this.variantCode = '';\r\n    this.familyName = '';\r\n    this.variantName = '';\r\n\r\n    this.exportDataFrom = undefined;\r\n\r\n    this.tabAssetSelectionId = 'assetSelection';\r\n    this.tabExportReportId = 'exportReport';\r\n    this.currentTabId = this.tabAssetSelectionId;\r\n\r\n    this.propertyDataList = [];\r\n    this.propertyTypeList = [];\r\n    this.propertyFormatList = [\r\n      { label: this.getTranslation('excel'), value: this.component.excel },\r\n      { label: this.getTranslation('xml'), value: this.component.xml },\r\n      { label: this.getTranslation('zip'), value: this.component.zip }\r\n    ];\r\n\r\n    this.propertyFamilyList = [];\r\n    this.propertyVariantList = [];\r\n\r\n    this.assetDataExportCheckbox = this.resetAssetExpChkBoxes();\r\n    this.lockAssetCheckbox = false;\r\n    this.exportEngineeringData = true;\r\n    this.oldEquipCheckbox = false;\r\n    this.simPropagationCheckbox = false;\r\n    this.showSpinner = false;\r\n\r\n    this.assetDataExport = {\r\n      equipmentCriteria: {},\r\n      familyVariantCodeSelected: true,\r\n      codeSelected: true,\r\n      pnSelected: true,\r\n      snSelected: true,\r\n      designationSelected: true,\r\n      eisDateSelected: true,\r\n      functionCodeSelected: true,\r\n      functionSelected: true,\r\n      lifeRestrictionSelected: true,\r\n      operationalStatusSelected: true,\r\n      registrationSelected: true,\r\n      superiorAssetCodeSelected: true,\r\n      operatorCodeSelected: true,\r\n      ownerCodeSelected: true\r\n    };\r\n\r\n    this.importReportMessage = '';\r\n    this.showImportReportMessage = false;\r\n\r\n    this.showAssetsSelectionDialog = false;\r\n\r\n    this.translateService.onLangChange.subscribe((_: LangChangeEvent) => {\r\n      this.loadDropDownLists();\r\n    });\r\n\r\n    this.equipment = {\r\n      bidoEquipmentDTO: {},\r\n      type: ''\r\n    };\r\n\r\n    this.setTableCols();\r\n    this.selectedReports = [];\r\n    this.selectedExportReports = [];\r\n    this.selectedAssetTask = [];\r\n\r\n    this.superiorTable = [];\r\n\r\n    this.isReportLoading = false;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.displayComponentContext('global.search', true);\r\n\r\n    this.equipment = {\r\n      bidoEquipmentDTO: {},\r\n      type: ''\r\n    };\r\n\r\n    this.loadDropDownLists();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'FleetDataExchangeComponent';\r\n  }\r\n\r\n  // Load Dropdown with data at initial\r\n  private loadDropDownLists(): void {\r\n    this.fleetDataExchangeService.findTypeList().subscribe(\r\n      (results) => {\r\n        this.propertyTypeList = ListUtils.orEmpty(results).map((elt) => {\r\n          // FIXME\r\n          if (elt.value === 'Loading') {\r\n            elt.label = this.translateService.instant('loading');\r\n          } else if (elt.value === 'Export') {\r\n            elt.label = this.translateService.instant('export');\r\n          }\r\n\r\n          return elt;\r\n        });\r\n        this.type = this.component.loading;\r\n        this.initializePropertyDataList();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetTypeList'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadFamilyVariantDropdowns(): void {\r\n    const familyVariantInput: FindFamilyVariantInput = {\r\n      useCase: BidoFunctionTypeConstants.UC_MCH_TASK,\r\n      module: BidoFunctionTypeConstants.MODULE_FAMILY,\r\n      familyCode: '',\r\n      familyName: '',\r\n      structureType: ''\r\n    };\r\n\r\n    this.fleetDataExchangeService.getBireFamilyVariant(familyVariantInput).subscribe(\r\n      (results) => {\r\n        const list = new Array<LabelValue<string>>();\r\n        results.forEach((variantElement) => {\r\n          list.push(variantElement.familyLabelValueDTO);\r\n          this.getFamilyVariantOutputDTO = results;\r\n        });\r\n        this.propertyFamilyList = list;\r\n        this.family = list[0].label;\r\n        this.loadVariantsForSelectedFamily();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFamilyVariantList'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public getFamilyVariant(): string {\r\n    this.getFamilyVariantComponents();\r\n\r\n    return `${this.familyCode}-${this.variantCode}`;\r\n  }\r\n\r\n  private loadVariantsForSelectedFamily(): void {\r\n    this.propertyVariantList = [];\r\n    const list: LabelValue<string>[] = [];\r\n    this.getFamilyVariantOutputDTO.forEach((result) => {\r\n      if (result.familyLabelValueDTO.label === this.family) {\r\n        result.variantLabelValueDTO.forEach((object) => {\r\n          const element: LabelValue<string> = {\r\n            label: `${object.variantCode}-${object.structureType}-${object.variantName}`,\r\n            value: object.variantLabelValue.value\r\n          };\r\n\r\n          list.push(element);\r\n        });\r\n        this.propertyVariantList = list;\r\n      }\r\n    });\r\n  }\r\n\r\n  public familyAndVariantSelected(): string {\r\n    this.getFamilyVariantComponents();\r\n\r\n    return `${this.family}/${this.variantCode}-${this.variantName}/${this.structureType}`;\r\n  }\r\n\r\n  // Change event of Type and format\r\n  public onTypeChange(event: LabelValue<string>): void {\r\n    this.format = undefined;\r\n    if (event.value === null) {\r\n      this.data = undefined;\r\n      this.resetScreen();\r\n    } else if (event.value === this.component.loading) {\r\n      this.propertyFormatList = [\r\n        { label: this.getTranslation('excel'), value: this.component.excel },\r\n        { label: this.getTranslation('xml'), value: this.component.xml },\r\n        { label: this.getTranslation('zip'), value: this.component.zip }\r\n      ];\r\n      this.initializePropertyDataList();\r\n      this.data = undefined;\r\n    } else if (event.value === this.component.export) {\r\n      this.propertyFormatList = [\r\n        { label: this.getTranslation('excel'), value: this.component.excel },\r\n        { label: this.getTranslation('xml'), value: this.component.xml },\r\n        { label: this.getTranslation('zip'), value: this.component.zip }\r\n      ];\r\n      this.format = this.component.excel;\r\n\r\n      // Pre-select 'Asset'\r\n      this.propertyDataList = [{ label: this.getTranslation('equipmentText'), value: this.component.asset }];\r\n      this.data = this.component.asset;\r\n\r\n      this.onDataChangeInit();\r\n    }\r\n    if (this.data !== this.component.asset) {\r\n      this.showSearchCriteria = false;\r\n    }\r\n    this.clearSearchProperties();\r\n    this.selectImportOrExportComponents();\r\n    this.reports = [];\r\n    this.fileName = '';\r\n    this.selectedReports = [];\r\n    this.resetScreen();\r\n  }\r\n\r\n  public onFormatChange(): void {\r\n    this.data = undefined;\r\n    if (this.format === null) {\r\n      this.propertyDataList = [];\r\n    }\r\n    this.showSearchCriteria = false;\r\n    this.selectImportOrExportComponents();\r\n    this.resetScreen();\r\n    if (!!this.format) {\r\n      if (this.type === this.component.loading) {\r\n        if (this.format === this.component.excel) {\r\n          this.initializePropertyDataList();\r\n        } else if (this.format === this.component.xml) {\r\n          this.propertyDataList = [{ label: this.getTranslation('configEvents'), value: this.component.configEvents }];\r\n          this.data = this.component.configEvents;\r\n          this.onDataChange();\r\n        } else if (this.format === this.component.zip) {\r\n          this.resetScreen();\r\n          this.propertyDataList = [{ label: this.getTranslation('globalImport'), value: this.component.globalImport }];\r\n          this.data = this.component.globalImport;\r\n          this.showSearchCriteria = this.validSearchCombination() ? this.checkSearchCriteria() : false;\r\n          this.alterImportTableCols();\r\n          this.loadReportList();\r\n\r\n          this.currentTabsId = this.tabGlobalImportId;\r\n        } else {\r\n          this.propertyDataList = [];\r\n        }\r\n      } else if (this.type === this.component.export) {\r\n        if (this.format === this.component.excel) {\r\n          this.propertyDataList = [{ label: this.getTranslation('equipmentText'), value: this.component.asset }];\r\n\r\n          // Pre-select 'Asset'\r\n          this.data = this.component.asset;\r\n          this.onDataChangeInit();\r\n        } else if (this.format === this.component.xml) {\r\n          this.propertyDataList = [{ label: this.getTranslation('configEvents'), value: this.component.configEvents }];\r\n          this.data = this.component.configEvents;\r\n          this.onDataChange();\r\n        } else if (this.format === this.component.zip) {\r\n          this.propertyDataList = [{ label: this.getTranslation('globalExport'), value: this.component.globalExport }];\r\n          this.data = this.component.globalExport;\r\n          this.onDataChange();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private initializePropertyDataList(): void {\r\n    this.format = this.component.excel;\r\n    this.propertyDataList = [\r\n      { label: this.getTranslation('fleet'), value: this.component.fleet },\r\n      { label: this.getTranslation('counterUpdates'), value: this.component.counterUpdates },\r\n      { label: this.getTranslation('usageModel'), value: this.component.usageModel }\r\n    ];\r\n  }\r\n\r\n  public validFamilyVariantCombination(): boolean {\r\n    if (!!this.family && !!this.variant) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public validSearchCombination(): boolean {\r\n    if (!!this.type && !!this.format && !!this.data) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public selectImportOrExportComponents(): void {\r\n    if (this.validSearchCombination()) {\r\n      if (this.type === this.component.loading) {\r\n        this.showImportComponents = true;\r\n        this.showExportComponents = false;\r\n      } else if (this.type === this.component.export) {\r\n        this.showExportComponents = true;\r\n        this.showImportComponents = false;\r\n      } else {\r\n        this.showImportComponents = false;\r\n        this.showExportComponents = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public showImportReports(): boolean {\r\n    let returnValue = false;\r\n    if (this.type === this.component.loading) {\r\n      if (this.format === this.component.excel) {\r\n        switch (this.data) {\r\n          case this.component.fleet:\r\n            if (!!this.family && !!this.variant) {\r\n              returnValue = true;\r\n            }\r\n            break;\r\n          case this.component.counterUpdates:\r\n            returnValue = true;\r\n            break;\r\n          case this.component.flights:\r\n            returnValue = true;\r\n            break;\r\n          case this.component.usageModel:\r\n            returnValue = true;\r\n            break;\r\n          default:\r\n            returnValue = false;\r\n            break;\r\n        }\r\n      } else if (this.format === this.component.xml) {\r\n        switch (this.data) {\r\n          case this.component.configEvents:\r\n            returnValue = true;\r\n            break;\r\n          case this.component.flights:\r\n            returnValue = true;\r\n            break;\r\n          default:\r\n            returnValue = false;\r\n            break;\r\n        }\r\n      } else if (this.format === this.component.zip) {\r\n        returnValue = true;\r\n      }\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  public showExportReports(): boolean {\r\n    let returnValue = false;\r\n    if (this.type === this.component.export) {\r\n      if (this.format === this.component.excel) {\r\n        returnValue = false;\r\n      } else if (this.format === this.component.xml) {\r\n        switch (this.data) {\r\n          case this.component.configEvents:\r\n            returnValue = true;\r\n            break;\r\n          case this.component.flights:\r\n            returnValue = true;\r\n            break;\r\n          default:\r\n            return false;\r\n        }\r\n      } else if (this.format === this.component.zip && this.data === this.component.globalExport) {\r\n        returnValue = true;\r\n      }\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  public showTabs(): boolean {\r\n    let returnValue = false;\r\n    if (this.data === this.component.fleet || this.data === this.component.asset) {\r\n      if (!!this.variant && this.variant !== '') {\r\n        if (this.showImportReports() || this.showExportReports()) {\r\n          returnValue = true;\r\n        }\r\n      }\r\n    } else {\r\n      if (this.showImportReports() || this.showExportReports()) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  public loadTemplate(): string {\r\n    let templateName = '';\r\n    if (this.format === this.component.excel) {\r\n      switch (this.data) {\r\n        case this.component.fleet:\r\n          {\r\n            templateName = 'TEMPLATE_FLEET_DATA.xls';\r\n          }\r\n          break;\r\n        case this.component.counterUpdates:\r\n          {\r\n            templateName = 'TEMPLATE_COUNTER.xls';\r\n          }\r\n          break;\r\n        case this.component.flights:\r\n          {\r\n            templateName = 'Template_FLIGHTS_IMPORT.xls';\r\n          }\r\n          break;\r\n        case this.component.usageModel:\r\n          {\r\n            templateName = 'TEMPLATE_USAGE_MODEL.xls';\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else if (this.format === this.component.xml) {\r\n      switch (this.data) {\r\n        case this.component.configEvents:\r\n          {\r\n            templateName = 'CONF_EVENT.xsd';\r\n          }\r\n          break;\r\n        case this.component.flights:\r\n          {\r\n            templateName = 'Template_FLIGHTS_IMPORT.xsd';\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return templateName;\r\n  }\r\n\r\n  public openTemplate(templateName: string): void {\r\n    if (!!this.type && !!this.data && !!this.format) {\r\n      const getTemplateInput: FindDataListBySearchCriteriaInput = {\r\n        type: this.type,\r\n        data: this.data,\r\n        format: this.format\r\n      };\r\n\r\n      this.fleetDataExchangeService.getTemplate(getTemplateInput).subscribe((result) => {\r\n        this.downLoadFiles(result, templateName);\r\n      });\r\n    } else {\r\n      super.throwUnboundLocalError('openTemplate', 'this.type && this.data && this.format');\r\n    }\r\n  }\r\n\r\n  public downLoadFiles(docFile: Uint8Array, docName: string): void {\r\n    FileUtils.downloadFile(docFile, docName);\r\n  }\r\n\r\n  private resetScreen(): void {\r\n    this.clearSearchProperties();\r\n    this.getFamilyVariantComponents();\r\n    this.file = {};\r\n    this.fileName = '';\r\n    this.resetCheckboxes();\r\n    this.superiorTable = [];\r\n    this.reports = [];\r\n    this.exportDataFrom = undefined;\r\n    this.assetDataExport.equipmentCriteria = {};\r\n  }\r\n\r\n  private resetCheckboxes(): void {\r\n    this.oldEquipCheckbox = false;\r\n    this.simPropagationCheckbox = false;\r\n    this.lockAssetCheckbox = false;\r\n    this.exportEngineeringData = true;\r\n    this.assetDataExport.familyVariantCodeSelected = true;\r\n    this.assetDataExport.codeSelected = true;\r\n    this.assetDataExport.pnSelected = true;\r\n    this.assetDataExport.snSelected = true;\r\n    this.assetDataExport.designationSelected = true;\r\n    this.assetDataExport.eisDateSelected = true;\r\n    this.assetDataExport.functionCodeSelected = true;\r\n    this.assetDataExport.functionSelected = true;\r\n    this.assetDataExport.lifeRestrictionSelected = true;\r\n    this.assetDataExport.operationalStatusSelected = true;\r\n    this.assetDataExport.registrationSelected = true;\r\n    this.assetDataExport.superiorAssetCodeSelected = true;\r\n    this.assetDataExport.operatorCodeSelected = true;\r\n    this.assetDataExport.ownerCodeSelected = true;\r\n  }\r\n\r\n  private onDataChangeInit(): void {\r\n    this.resetScreen();\r\n    if (this.data === this.component.fleet || this.data === this.component.asset) {\r\n      this.loadFamilyVariantDropdowns();\r\n    }\r\n    this.showSearchCriteria = this.validSearchCombination() ? this.checkSearchCriteria() : false;\r\n    this.alterImportTableCols();\r\n\r\n    this.loadReportList();\r\n  }\r\n\r\n  // Event to show search panel\r\n  public onDataChange(): void {\r\n    this.onDataChangeInit();\r\n\r\n    if (this.type === this.component.loading) {\r\n      if (this.format === this.component.excel) {\r\n        switch (this.data) {\r\n          case this.component.fleet:\r\n            {\r\n              if (this.validFamilyVariantCombination()) {\r\n                this.currentTabsId = this.tabFleetId;\r\n              }\r\n            }\r\n            break;\r\n          case this.component.counterUpdates:\r\n            this.currentTabsId = this.tabCounterId;\r\n            break;\r\n          case this.component.flights:\r\n            this.currentTabsId = this.tabExcelFlightsId;\r\n            break;\r\n          case this.component.usageModel:\r\n            this.currentTabsId = this.tabUsageId;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      } else if (this.format === this.component.xml) {\r\n        switch (this.data) {\r\n          case this.component.configEvents:\r\n            this.currentTabsId = this.tabImportConfigurationId;\r\n            break;\r\n          case this.component.flights:\r\n            this.currentTabsId = this.tabImportXmlFlightId;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      } else if (this.format === this.component.zip) {\r\n        this.data = this.component.globalImport;\r\n        this.currentTabsId = this.tabGlobalImportId;\r\n      }\r\n    } else if (this.type === this.component.export) {\r\n      if (this.format === this.component.excel) {\r\n        if (this.data === this.component.asset) {\r\n          if (!!this.family && !!this.variant) {\r\n            // show form for asset data export\r\n          }\r\n        }\r\n      } else {\r\n        switch (this.data) {\r\n          case this.component.configEvents:\r\n            this.currentTabsId = this.tabExportConfigurationId;\r\n            break;\r\n          case this.component.flights:\r\n            this.currentTabsId = this.tabExportXmlFlightId;\r\n            break;\r\n          case this.component.globalExport:\r\n            this.currentTabsId = this.tabGlobalExportId;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkSearchCriteria(): boolean {\r\n    let returnValue = false;\r\n    if (this.type === this.component.loading) {\r\n      if (this.format === this.component.excel) {\r\n        if (this.data === this.component.fleet) {\r\n          this.showImportPanel = false;\r\n\r\n          returnValue = true;\r\n        } else {\r\n          this.showImportPanel = true;\r\n\r\n          returnValue = false;\r\n        }\r\n      } else if (this.format === this.component.xml || this.format === this.component.zip) {\r\n        this.showImportPanel = true;\r\n\r\n        returnValue = false;\r\n      }\r\n    } else {\r\n      this.showImportPanel = false;\r\n      if (this.format === this.component.xml) {\r\n        returnValue = false;\r\n      } else if (this.format === this.component.excel) {\r\n        if (this.data === this.component.asset) {\r\n          returnValue = true;\r\n        }\r\n      } else {\r\n        returnValue = false;\r\n      }\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  public showReportTables(): boolean {\r\n    let returnValue = false;\r\n    if (!(this.currentTabsId === this.tabImportReportId) && !(this.currentTabsId === this.tabExportReportId)) {\r\n      returnValue = true;\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  public showAssetPanel(): boolean {\r\n    let returnValue = false;\r\n    if (this.data === this.component.asset) {\r\n      if (!!this.family && !!this.variant && this.variant !== '') {\r\n        returnValue = true;\r\n      }\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  // Clearing search parmeters\r\n  private clearSearchProperties() {\r\n    this.family = undefined;\r\n    this.variant = undefined;\r\n    this.getFamilyVariantComponents();\r\n  }\r\n\r\n  // Change event of family dropdown\r\n  public changeFamilyType() {\r\n    this.variant = undefined;\r\n    if (!this.family) {\r\n      this.showImportPanel = false;\r\n    } else {\r\n      this.loadVariantsForSelectedFamily();\r\n    }\r\n  }\r\n\r\n  // Change event of variant dropdown\r\n  public changedVariantType() {\r\n    if (this.variant !== '' && !!this.variant) {\r\n      this.familyAndVariantSelected();\r\n      this.showImportPanel = true;\r\n\r\n      if (this.type === this.component.loading) {\r\n        this.currentTabsId = this.tabFleetId;\r\n      } else {\r\n        if (this.data === this.component.asset) {\r\n          this.showAssetPanel();\r\n        }\r\n      }\r\n      this.loadReportList();\r\n    } else {\r\n      this.showImportPanel = false;\r\n      this.showAssetPanel();\r\n    }\r\n  }\r\n\r\n  // Modifying table columns depending on search criteria\r\n  private alterImportTableCols() {\r\n    this.reports = [];\r\n    if (this.type === this.component.loading) {\r\n      if (this.showSearchCriteria) {\r\n        this.reportTableCols = [\r\n          { field: 'familyVariantCode', alignment: 'center' },\r\n          { field: 'reportCode', alignment: 'center' },\r\n          { field: 'reportName', alignment: 'center', width: '25rem' },\r\n          { field: 'statusUser', alignment: 'center' },\r\n          { field: 'statusDate', alignment: 'center' }\r\n        ];\r\n      } else {\r\n        this.reportTableCols = [\r\n          { field: 'reportCode', alignment: 'center' },\r\n          { field: 'reportName', alignment: 'center', width: '25rem' },\r\n          { field: 'statusUser', alignment: 'center' },\r\n          { field: 'statusDate', alignment: 'center' }\r\n        ];\r\n      }\r\n    }\r\n  }\r\n\r\n  private getFamilyVariantComponents(): void {\r\n    if (this.variant !== '' && !!this.variant) {\r\n      this.propertyVariantList.forEach((variant) => {\r\n        if (variant.value === this.variant) {\r\n          this.getFamilyVariantOutputDTO.forEach((familyObject) => {\r\n            if (familyObject.familyLabelValueDTO.label === this.family) {\r\n              familyObject.variantLabelValueDTO.forEach((variantObject) => {\r\n                if (variantObject.variantLabelValue.label === variant.value) {\r\n                  this.familyCode = variantObject.familyCode;\r\n                  this.structureType = variantObject.structureType;\r\n                  this.variantCode = variantObject.variantCode;\r\n                  this.familyName = variantObject.familyName;\r\n                  this.variantName = variantObject.variantName;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.familyCode = undefined;\r\n      this.structureType = undefined;\r\n      this.variantCode = undefined;\r\n      this.familyName = undefined;\r\n      this.variantName = undefined;\r\n    }\r\n  }\r\n\r\n  // Event to delete report entry\r\n  public deleteReports() {\r\n    if (this.selectedReports !== []) {\r\n      const partialMessageKey =\r\n        this.selectedReports.length > 1 ? 'confirmDeleteSelectedReports' : 'confirmDeleteSelectedReport';\r\n\r\n      const reports = new Array<BireReportDTOId>();\r\n\r\n      this.selectedReports.forEach((report) => {\r\n        if (report && report.reportId) {\r\n          const reportId: BireReportDTOId = {\r\n            reportId: report.reportId\r\n          };\r\n          reports.push(reportId);\r\n        }\r\n      });\r\n\r\n      this.confirmationService.confirmDelete({\r\n        messageKey: this.getTranslateKey(partialMessageKey),\r\n        accept: () => {\r\n          this.fleetDataExchangeService.deleteReportEntry(reports).subscribe(\r\n            (results) => {\r\n              const messageKey =\r\n                partialMessageKey === 'confirmDeleteSelectedReports'\r\n                  ? this.getTranslateKey('successOnDeleteReports')\r\n                  : this.getTranslateKey('successOnDeleteReport');\r\n\r\n              this.messageService.showSuccessMessage(messageKey);\r\n\r\n              this.selectedReports = [];\r\n              this.loadReportList();\r\n            },\r\n            () => {\r\n              const messageKey =\r\n                partialMessageKey === 'confirmDeleteSelectedReports'\r\n                  ? this.getTranslateKey('errorOnDeleteReports')\r\n                  : this.getTranslateKey('errorOnDeleteReport');\r\n\r\n              this.messageService.showSuccessMessage(messageKey);\r\n            }\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public deleteExportReports() {\r\n    if (this.selectedExportReports !== []) {\r\n      const partialMessageKey =\r\n        this.selectedExportReports.length > 1 ? 'confirmDeleteSelectedReports' : 'confirmDeleteSelectedReport';\r\n\r\n      const reports = new Array<BireReportDTOId>();\r\n\r\n      this.selectedExportReports.forEach((report) => {\r\n        if (report && report.reportId) {\r\n          const reportId: BireReportDTOId = {\r\n            reportId: report.reportId\r\n          };\r\n          reports.push(reportId);\r\n        }\r\n      });\r\n\r\n      this.confirmationService.confirmDelete({\r\n        messageKey: this.getTranslateKey(partialMessageKey),\r\n        accept: () => {\r\n          this.fleetDataExchangeService.deleteReportEntry(reports).subscribe(\r\n            (results) => {\r\n              const messageKey =\r\n                partialMessageKey === 'confirmDeleteSelectedReports'\r\n                  ? this.getTranslateKey('successOnDeleteReports')\r\n                  : this.getTranslateKey('successOnDeleteReport');\r\n\r\n              this.messageService.showSuccessMessage(messageKey);\r\n\r\n              this.selectedExportReports = [];\r\n              this.loadReportList();\r\n            },\r\n            () => {\r\n              const messageKey =\r\n                partialMessageKey === 'confirmDeleteSelectedReports'\r\n                  ? this.getTranslateKey('errorOnDeleteReports')\r\n                  : this.getTranslateKey('errorOnDeleteReport');\r\n\r\n              this.messageService.showSuccessMessage(messageKey);\r\n            }\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public deleteAssets() {\r\n    if (this.selectedAssetTask !== []) {\r\n      const partialMessageKey = 'global.deleteConfirmationMsg';\r\n\r\n      this.confirmationService.confirmDelete({\r\n        messageKey: partialMessageKey,\r\n        accept: () => {\r\n          this.superiorTable = this.superiorTable.filter((asset) => {\r\n            return !this.selectedAssetTask.includes(asset);\r\n          });\r\n          this.selectedAssetTask = [];\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public openReportDetail(object: BireReportDTO): void {\r\n    if (!!object && !!object.reportId) {\r\n      const bireReportDTOId: BireReportDTOId = {\r\n        reportId: object.reportId\r\n      };\r\n      this.fleetDataExchangeService.openImportReportContent(bireReportDTOId).subscribe((result) => {\r\n        if (!!object && !!object.reportName) {\r\n          if (\r\n            object.reportName.includes(`.${FileExtensions.txt}`) ||\r\n            object.reportName.includes(`.${FileExtensions.zip}`)\r\n          ) {\r\n            this.downLoadFiles(result, object.reportName);\r\n          } else if (this.type === this.component.loading) {\r\n            this.downLoadFiles(result, `${object.reportName}.${FileExtensions.txt}`);\r\n          } else if (this.type === this.component.export) {\r\n            this.downLoadFiles(result, `${object.reportName}.${FileExtensions.zip}`);\r\n          }\r\n        } else {\r\n          super.throwUnboundLocalError('openReportDetail', 'object.reportName');\r\n        }\r\n      });\r\n    } else {\r\n      super.throwUnboundLocalError('openReportDetail', 'object.reportId');\r\n    }\r\n  }\r\n\r\n  public enableImport(): boolean {\r\n    if (!!this.format && !!this.data) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public showDocExtension(document: BidoDocumentationDTO): string {\r\n    return FileUtils.getExtension(document.docName);\r\n  }\r\n\r\n  // function is called with parameter 1 if simulate button is clicked, else called with 0\r\n  public import(simulate: boolean): void {\r\n    if (this.fileName !== '') {\r\n      const partialMessageKey = this.getTranslateKey('importData');\r\n      this.confirmationService.confirm({\r\n        interpolateParams: { 'importData.fileName': this.fileName },\r\n        contextKeys: [this.getTranslateKey('importData.line1')],\r\n        messageKey: partialMessageKey,\r\n        delayCallback: true,\r\n        accept: () => {\r\n          // Importing Excel file\r\n          this.showSpinner = true;\r\n          const isExcel =\r\n            this.showDocExtension(this.file) === FileExtensions.xlsx ||\r\n            this.showDocExtension(this.file) === FileExtensions.xls;\r\n          if (this.format === this.component.excel && isExcel) {\r\n            const excelInput: SaveExcelDataInput = {\r\n              fileName: this.fileName,\r\n              excelSource: this.file.docFile,\r\n              removingChoice: false,\r\n              familyCodeSelected: undefined,\r\n              variantCodeSelected: undefined,\r\n              isSimulated: simulate,\r\n              data: this.data\r\n            };\r\n\r\n            switch (this.data) {\r\n              case this.component.fleet:\r\n                {\r\n                  if (this.validFamilyVariantCombination()) {\r\n                    this.getFamilyVariantComponents();\r\n                    excelInput.familyCodeSelected = this.familyCode;\r\n                    excelInput.variantCodeSelected = this.variantCode;\r\n                    excelInput.removingChoice = this.oldEquipCheckbox;\r\n                  }\r\n                }\r\n                break;\r\n              case this.component.counterUpdates:\r\n                excelInput.isSimulated = this.simPropagationCheckbox;\r\n                break;\r\n              case this.component.flights:\r\n              case this.component.usageModel:\r\n              default:\r\n                break;\r\n            }\r\n\r\n            this.fleetDataExchangeService.saveExcelFleetDataExchange(excelInput).subscribe(\r\n              (result) => {\r\n                this.fileName = '';\r\n                const importReport = `${result}\\n${this.getTranslation('importReportError')}`;\r\n                this.importReportMessage = importReport;\r\n                this.showImportReportMessage = true;\r\n                this.loadReportList();\r\n                this.showSpinner = false;\r\n              },\r\n              () => {\r\n                if (simulate) {\r\n                  this.messageService.showErrorMessage(this.getTranslateKey('errorOnSimulate'));\r\n                  this.showSpinner = false;\r\n                } else {\r\n                  this.messageService.showErrorMessage(this.getTranslateKey('errorOnImport'));\r\n                  this.showSpinner = false;\r\n                }\r\n              }\r\n            );\r\n          } else if (this.format === this.component.excel && !isExcel) {\r\n            this.fileName = '';\r\n            this.messageService.showErrorMessage(this.getTranslateKey('notExcel'));\r\n            this.showSpinner = false;\r\n          }\r\n\r\n          // Import Xml File\r\n          if (this.format === this.component.xml || this.format === this.component.zip) {\r\n            if (!!this.file && !!this.fileName && !!this.data && !!this.file.docFile) {\r\n              const xmlInput: SaveXmlDataInput = {\r\n                fileName: this.fileName,\r\n                xmlSource: this.file.docFile,\r\n                simulated: simulate,\r\n                data: this.data\r\n              };\r\n\r\n              const zipInput: SaveZipDataInput = {\r\n                fileName: this.fileName,\r\n                zipSource: this.file.docFile,\r\n                isSimulated: simulate\r\n              };\r\n\r\n              switch (this.data) {\r\n                case this.component.configEvents:\r\n                  if (this.showDocExtension(this.file) === this.component.xml.toLowerCase()) {\r\n                    xmlInput.simulated = simulate ? true : false;\r\n                    this.importXmlData(xmlInput);\r\n                  } else {\r\n                    this.messageService.showErrorMessage(this.getTranslateKey('notXml'));\r\n                    this.showSpinner = false;\r\n                  }\r\n                  break;\r\n                case this.component.flights:\r\n                  if (this.showDocExtension(this.file) === this.component.xml.toLowerCase()) {\r\n                    this.importXmlData(xmlInput);\r\n                  } else {\r\n                    this.messageService.showErrorMessage(this.getTranslateKey('notXml'));\r\n                    this.showSpinner = false;\r\n                  }\r\n                  break;\r\n                case this.component.globalImport:\r\n                  if (this.showDocExtension(this.file) === this.component.zip.toLowerCase()) {\r\n                    this.importZipData(zipInput);\r\n                  } else {\r\n                    this.messageService.showErrorMessage(this.getTranslateKey('notZip'));\r\n                    this.showSpinner = false;\r\n                  }\r\n                  break;\r\n                default:\r\n                  {\r\n                    this.showSpinner = false;\r\n                  }\r\n                  break;\r\n              }\r\n            } else {\r\n              super.throwUnboundLocalError('import', 'this.fileName && this.file && this.data && this.file.docFile');\r\n              this.showSpinner = false;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public importXmlData(xmlInput: SaveXmlDataInput): void {\r\n    this.fleetDataExchangeService.saveXmlFleetDataExchange(xmlInput).subscribe(\r\n      (result) => {\r\n        this.fileName = '';\r\n        this.importReportMessage = result;\r\n        this.showImportReportMessage = true;\r\n        this.loadReportList();\r\n        this.showSpinner = false;\r\n        this.showSpinner = false;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnImport'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public importZipData(zipInput: SaveZipDataInput): void {\r\n    this.fleetDataExchangeService.saveZipFleetDataExchange(zipInput).subscribe(\r\n      (result) => {\r\n        this.fileName = '';\r\n        this.loadReportList();\r\n        this.showSpinner = false;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnImport'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public export(): void {\r\n    this.showSpinner = true;\r\n    const excelInput: ExportAssetDataInput = { ...this.assetDataExport };\r\n\r\n    const xmlInput: ExportFleetDataInput = {\r\n      equipmentCode: [],\r\n      date: new Date(),\r\n      lockAsset: false\r\n    };\r\n\r\n    this.superiorTable.forEach((row) => {\r\n      xmlInput.equipmentCode.push(row.equipmentCode);\r\n    });\r\n\r\n    if (this.format === this.component.excel) {\r\n      if (this.data === this.component.asset) {\r\n        this.getFamilyVariantComponents();\r\n\r\n        if (!!excelInput && !!excelInput.equipmentCriteria) {\r\n          excelInput.equipmentCriteria.familyVariantCode = `${this.familyCode}-${this.variantCode}`;\r\n\r\n          this.fleetDataExchangeService\r\n            .exportAssetData(excelInput)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.showSpinner = false;\r\n              })\r\n            )\r\n            .subscribe((bytes) => {\r\n              this.fleetDataExchangeService.getServerDate().subscribe((result) => {\r\n                const templateName = `${this.translateService.instant(\r\n                  this.getTranslateKey('assetDataExportFileNamePrefix')\r\n                )}_${this.familyName}_${this.variantCode}_${this.datepipe.transform(\r\n                  result,\r\n                  this.component.dateFormat\r\n                )}h${this.datepipe.transform(result, this.component.monthFormat)}.${FileExtensions.xls}`;\r\n\r\n                this.downLoadFiles(bytes, templateName);\r\n              });\r\n            });\r\n        } else {\r\n          this.showSpinner = false;\r\n          super.throwUnboundLocalError('export', 'excelInput');\r\n        }\r\n      }\r\n    } else if (this.format === this.component.xml || this.format === this.component.zip) {\r\n      if (this.superiorTable.length !== 0) {\r\n        xmlInput.date = this.exportDataFrom;\r\n        switch (this.data) {\r\n          case this.component.configEvents:\r\n            {\r\n              xmlInput.lockAsset = this.lockAssetCheckbox;\r\n\r\n              this.fleetDataExchangeService\r\n                .exportConfEventData(xmlInput)\r\n                .pipe(\r\n                  finalize(() => {\r\n                    this.showSpinner = false;\r\n                  })\r\n                )\r\n                .subscribe((bytes) => {\r\n                  this.fleetDataExchangeService.getServerDate().subscribe((result) => {\r\n                    const templateName = `${this.translateService.instant(\r\n                      this.getTranslateKey('eventDataExportFileNamePrefix')\r\n                    )}_${this.datepipe.transform(result, this.component.dateFormat)}h${this.datepipe.transform(\r\n                      result,\r\n                      this.component.monthFormat\r\n                    )}.${FileExtensions.zip}`;\r\n\r\n                    this.downLoadFiles(bytes, templateName);\r\n                    this.loadReportList();\r\n                  });\r\n                });\r\n            }\r\n            break;\r\n          case this.component.flights:\r\n            {\r\n              this.fleetDataExchangeService\r\n                .exportFlightsData(xmlInput)\r\n                .pipe(\r\n                  finalize(() => {\r\n                    this.showSpinner = false;\r\n                  })\r\n                )\r\n                .subscribe((bytes) => {\r\n                  this.fleetDataExchangeService.getServerDate().subscribe((result) => {\r\n                    const templateName = `${this.translateService.instant(\r\n                      this.getTranslateKey('flightsDataExportFileNamePrefix')\r\n                    )}_${this.datepipe.transform(result, this.component.dateFormat)}h${this.datepipe.transform(\r\n                      result,\r\n                      this.component.monthFormat\r\n                    )}.${FileExtensions.zip}`;\r\n\r\n                    this.downLoadFiles(bytes, templateName);\r\n                    this.loadReportList();\r\n                  });\r\n                });\r\n            }\r\n            break;\r\n          case this.component.globalExport:\r\n            {\r\n              xmlInput.lockAsset = this.lockAssetCheckbox;\r\n              xmlInput.exportEngineeringData = this.exportEngineeringData;\r\n\r\n              this.fleetDataExchangeService\r\n                .exportGlobalData(xmlInput)\r\n                .pipe(\r\n                  finalize(() => {\r\n                    this.showSpinner = false;\r\n                  })\r\n                )\r\n                .subscribe((bytes) => {\r\n                  this.fleetDataExchangeService.getServerDate().subscribe((result) => {\r\n                    const templateName = `${this.translateService.instant(\r\n                      this.getTranslateKey('globalExportFileNamePrefix')\r\n                    )}_${this.datepipe.transform(result, this.component.dateFormat)}h${this.datepipe.transform(\r\n                      result,\r\n                      this.component.monthFormat\r\n                    )}.${FileExtensions.zip}`;\r\n                    this.downLoadFiles(bytes, templateName);\r\n                    this.loadReportList();\r\n                  });\r\n                });\r\n            }\r\n            break;\r\n          default: {\r\n            this.showSpinner = false;\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        this.showSpinner = false;\r\n        this.messageService.showErrorMessage(this.getTranslateKey('addAssets'));\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadReportList(): void {\r\n    this.getFamilyVariantComponents();\r\n\r\n    this.reports = [];\r\n    if (!!this.data && !!this.format && !!this.type) {\r\n      const input: GetRefreshedArchivedReportDataInput = {\r\n        data: this.data,\r\n        format: this.format,\r\n        type: this.type,\r\n        reportCode: ''\r\n      };\r\n      if (this.type === this.component.loading) {\r\n        // 'Loading'\r\n        if (this.format === this.component.excel) {\r\n          // 'Excel'\r\n          switch (this.data) {\r\n            case this.component.fleet:\r\n              {\r\n                if (\r\n                  !!this.familyCode &&\r\n                  !!this.variantCode &&\r\n                  !!this.structureType &&\r\n                  this.validFamilyVariantCombination()\r\n                ) {\r\n                  input.bireVariantVersionId = {\r\n                    familyCode: this.familyCode,\r\n                    variantCode: this.variantCode,\r\n                    structureType: this.structureType\r\n                  };\r\n                  input.reportCode = 'FLEET_IMPORT_REPORT';\r\n                  this.hitFetchAPI(input);\r\n                }\r\n              }\r\n              break;\r\n            case this.component.counterUpdates:\r\n              {\r\n                input.reportCode = 'COUNTER_IMPORT_REPORT';\r\n                this.hitFetchAPI(input);\r\n              }\r\n              break;\r\n            case this.component.flights:\r\n              {\r\n                input.reportCode = 'XLS_MISSION_IMPORT_REPORT_CODE';\r\n                this.hitFetchAPI(input);\r\n              }\r\n              break;\r\n            case this.component.usageModel:\r\n              {\r\n                input.reportCode = 'USAGE_IMPORT_REPORT';\r\n                this.hitFetchAPI(input);\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        } else if (this.format === this.component.xml) {\r\n          switch (this.data) {\r\n            case this.component.configEvents:\r\n              {\r\n                input.reportCode = 'XML_CONF_EVENT_IMPORT_REPORT';\r\n                this.hitFetchAPI(input);\r\n              }\r\n              break;\r\n            case this.component.flights:\r\n              {\r\n                input.reportCode = 'XML_MISSION_IMPORT_REPORT_CODE';\r\n                this.hitFetchAPI(input);\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        } else if (this.format === this.component.zip) {\r\n          input.reportCode = 'ZIP_GLOBAL_IMPORT_REPORT';\r\n          this.hitFetchAPI(input);\r\n        }\r\n      } else if (this.type === this.component.export) {\r\n        if (this.format === this.component.xml) {\r\n          switch (this.data) {\r\n            case this.component.configEvents:\r\n              {\r\n                input.reportCode = 'ZIP_CONF_EVENT_EXPORT_REPORT';\r\n                this.hitFetchAPI(input);\r\n              }\r\n              break;\r\n            case this.component.flights:\r\n              {\r\n                input.reportCode = 'ZIP_MISSION_EXPORT_REPORT';\r\n                this.hitFetchAPI(input);\r\n              }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        } else if (this.format === this.component.zip && this.data === this.component.globalExport) {\r\n          input.reportCode = 'ZIP_GLOBAL_EXPORT_REPORT';\r\n          this.hitFetchAPI(input);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private hitFetchAPI(input: GetRefreshedArchivedReportDataInput): void {\r\n    // this.clearSearchProperties();\r\n    this.isReportLoading = true;\r\n    this.fleetDataExchangeService.fetchFleetDataExchangeReport(input).subscribe((result) => {\r\n      this.reports = result;\r\n      this.isReportLoading = false;\r\n    });\r\n  }\r\n\r\n  // For Doc Import\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    // if (!!event.files) {\r\n    const file: File = event.files[0];\r\n    {\r\n      // if (!!this.file && !!this.file.docName) {\r\n      FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n        if (fileContent) {\r\n          this.file = {\r\n            docFile: fileContent,\r\n            docName: file.name,\r\n            docPublicationDate: new Date()\r\n          };\r\n          this.fileName = this.file.docName;\r\n        }\r\n      });\r\n    }\r\n\r\n    fileUploader.clear();\r\n    // }\r\n  }\r\n\r\n  // Method to set table columns\r\n  private setTableCols(): void {\r\n    this.assetSelectionTableCols = [\r\n      { field: 'equipmentText', width: '150px' },\r\n      { field: 'equipmentFamilyVariantCode', width: '70px' },\r\n      { field: 'equipmentRegistration', width: '70px' },\r\n      { field: 'equipmentPn', width: '70px' },\r\n      { field: 'equipmentDesignation', width: '80px' },\r\n      { field: 'equipmentFunction', width: '60px' },\r\n      { field: 'equipmentSn', width: '70px' },\r\n      { field: 'equipmentSupAsset', width: '80px' },\r\n      { field: 'equipmentOwner', width: '60px' },\r\n      { field: 'equipmentOperator', width: '60px' },\r\n      { field: 'equipmentLocation', width: '60px' }, // to be added in backend\r\n      { field: 'equipmentOperationalStatus', width: '100px' },\r\n      { field: 'equipmentCode', width: '100px' }\r\n    ];\r\n\r\n    this.exportReportTableCols = [\r\n      { field: 'reportCode', alignment: 'center' },\r\n      { field: 'reportName', alignment: 'center' },\r\n      { field: 'statusUser', alignment: 'center' },\r\n      { field: 'statusDate', alignment: 'center' }\r\n    ];\r\n  }\r\n\r\n  // Tab Navigation\r\n  public openAssetSelectionTab() {\r\n    this.currentTabId = this.tabAssetSelectionId;\r\n  }\r\n  public openExportReportTab() {\r\n    this.currentTabId = this.tabExportReportId;\r\n  }\r\n\r\n  public openAdvanceSearchDialog() {\r\n    this.showQuickSearchEquipmentDialog = true;\r\n  }\r\n\r\n  public setSelectedAsset(event: BidoEquipmentOVSOutputDTO): void {\r\n    if (!!this.assetDataExport && !!this.assetDataExport.equipmentCriteria) {\r\n      this.assetDataExport.equipmentCriteria.equipmentCode = event.equipmentCode;\r\n      this.assetDataExport.equipmentCriteria.pnCode = event.pnCode;\r\n      this.assetDataExport.equipmentCriteria.sn = event.sn;\r\n      this.assetDataExport.equipmentCriteria.equipmentDesignation = event.equipmentDesignation;\r\n      this.assetDataExport.equipmentCriteria.familyVariantCode = event.familyVariantCode;\r\n    } else {\r\n      super.throwUnboundLocalError(\r\n        'setSelectedAsset',\r\n        'this.assetDataExport && this.assetDataExport.equipmentCriteria'\r\n      );\r\n    }\r\n  }\r\n\r\n  public setSelectedAssetsFromSelectionDilog(event: FindAssetListConfigurationEventDTO[]) {\r\n    event.forEach((e) => {\r\n      const inSuperiorTable = this.superiorTable.filter((asset) => asset.equipmentCode === e.equipmentCode);\r\n      if (inSuperiorTable.length === 0) {\r\n        this.superiorTable.push(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Resetting chkboxes\r\n  private resetAssetExpChkBoxes() {\r\n    this.assetCodeTxt = '';\r\n    this.pnCodeTxt = '';\r\n    this.snCodeTxt = '';\r\n    // this.nameTxt = ;     // TODO How to make name\r\n    this.designationTxt = '';\r\n\r\n    return [\r\n      'Family Variant',\r\n      'pn',\r\n      'sn',\r\n      'Asset Code',\r\n      'Owner Code',\r\n      'Operator Code',\r\n      'Registration',\r\n      'Designation',\r\n      'Function',\r\n      'Operational Status',\r\n      'EIS Date',\r\n      'Superior asset code',\r\n      'Function code',\r\n      'Life restriction'\r\n    ];\r\n  }\r\n\r\n  private getTranslation(label: string): string {\r\n    return this.translateService.instant(this.getTranslateKey(label)) as string;\r\n  }\r\n\r\n  /**********\r\n   * Open Tabs\r\n   **********/\r\n\r\n  public openFleetTab(): void {\r\n    this.currentTabsId = this.tabFleetId;\r\n  }\r\n\r\n  public openCounterTab(): void {\r\n    this.currentTabsId = this.tabCounterId;\r\n  }\r\n\r\n  public openFlightsTab(): void {\r\n    this.currentTabsId = this.tabExcelFlightsId;\r\n  }\r\n\r\n  public openUsageTab(): void {\r\n    this.currentTabsId = this.tabUsageId;\r\n  }\r\n\r\n  public openImportConfigurationTab(): void {\r\n    this.currentTabsId = this.tabImportConfigurationId;\r\n  }\r\n\r\n  public openImportFlightTab(): void {\r\n    this.currentTabsId = this.tabImportXmlFlightId;\r\n  }\r\n\r\n  public openGlobalImportTab(): void {\r\n    this.currentTabsId = this.tabGlobalImportId;\r\n  }\r\n\r\n  public openExportConfigurationTab(): void {\r\n    this.currentTabsId = this.tabExportConfigurationId;\r\n  }\r\n\r\n  public openExportFlightTab(): void {\r\n    this.currentTabsId = this.tabExportXmlFlightId;\r\n  }\r\n\r\n  public openGlobalExportTab(): void {\r\n    this.currentTabsId = this.tabGlobalExportId;\r\n  }\r\n\r\n  public openImportReportsTab(): void {\r\n    this.currentTabsId = this.tabImportReportId;\r\n  }\r\n\r\n  public openExportReportsTab(): void {\r\n    this.currentTabsId = this.tabExportReportId;\r\n  }\r\n\r\n  /*************************\r\n   * Asset(s) selection popup\r\n   *************************/\r\n\r\n  public openAssetsSelectionDialog(): void {\r\n    this.showAssetsSelectionDialog = true;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtWarehouseApi } from '../../../shared/api/bidt-warehouse.api';\r\nimport { EngineeringDataExchangeApi } from '../../../shared/api/engineering-data-exchange.api';\r\nimport { FleetBusinessApi } from '../../../shared/api/fleet-business.api';\r\nimport { FleetManagementApi } from '../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../shared/api/product-structure-management.api';\r\nimport { StandardExportApi } from '../../../shared/api/standard-export.api';\r\nimport { StandardImportApi } from '../../../shared/api/standard-import.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { ExportAssetDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/export-asset-data-input.interface';\r\nimport { ExportFleetDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/export-fleet-data-input.interface';\r\nimport { FindAssetListConfigurationEventDTO } from '../../../shared/types/api-input-types/fleet-data-exchange/find-asset-list-configuration-event-dto.interface';\r\nimport { FindAssetListInput } from '../../../shared/types/api-input-types/fleet-data-exchange/find-asset-list-input.interface';\r\nimport { FindDataListBySearchCriteriaInput } from '../../../shared/types/api-input-types/fleet-data-exchange/find-data-list-by-search-criteria-input.interface';\r\nimport { GetRefreshedArchivedReportDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/get-refreshed-archived-report-data-input.interface';\r\nimport { SaveExcelDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/save-excel-data-input.interface';\r\nimport { SaveXmlDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/save-xml-data-input.interface';\r\nimport { SaveZipDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/save-zip-data-input.interface';\r\nimport { FindFamilyVariantInput } from '../../../shared/types/api-input-types/product-structure-management/find-family-variant-input.interface';\r\nimport { GetFamilyVariantOutputDTO } from '../../../shared/types/api-output-types/engineering-data-exchange/get-family-variant-output-dto.interface';\r\nimport { BidoFleetDTO } from '../../../shared/types/api-types/bido-fleet-dto.interface';\r\nimport { BidoReportDTOId } from '../../../shared/types/api-types/bido-report-dto-id.interface';\r\nimport { BidoReportDTO } from '../../../shared/types/api-types/bido-report-dto.interface';\r\nimport { BireReportDTOId } from '../../../shared/types/api-types/bire-report-dto-id.interface';\r\nimport { BireReportDTO } from '../../../shared/types/api-types/bire-report-dto.interface';\r\nimport { BireVariantVersionDTOId } from '../../../shared/types/api-types/bire-variant-version-dto-id.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FleetDataExchangeService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly engineeringDataExchangeApi: EngineeringDataExchangeApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly standardImportController: StandardImportApi,\r\n    private readonly bidtWarehouseApi: BidtWarehouseApi,\r\n    private readonly standardExportController: StandardExportApi,\r\n    private readonly fleetBusinessController: FleetBusinessApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findTypeList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.engineeringDataExchangeApi.findTypeList);\r\n  }\r\n\r\n  public getBireFamilyVariant(familyVariantInput: FindFamilyVariantInput): Observable<GetFamilyVariantOutputDTO[]> {\r\n    return super.post<FindFamilyVariantInput, GetFamilyVariantOutputDTO[]>(\r\n      this.productStructureManagementApi.findBireFamilyVariant,\r\n      familyVariantInput\r\n    );\r\n  }\r\n\r\n  public getImportFlightReports(): Observable<BidoReportDTO[]> {\r\n    return super.post<void, BidoReportDTO[]>(this.fleetManagementApi.findBidoReportsByReportCode);\r\n  }\r\n\r\n  public getImportFleetReports(variantVersionInput: BireVariantVersionDTOId): Observable<BidoReportDTO[]> {\r\n    return super.post<BireVariantVersionDTOId, BidoReportDTO[]>(\r\n      this.fleetManagementApi.findBidoReportsByFamilyVariantCodeAndFleetImportReportCode,\r\n      variantVersionInput\r\n    );\r\n  }\r\n\r\n  public deleteReportEntry(reportId: BidoReportDTOId[]) {\r\n    return super.post<BidoReportDTOId[], BidoReportDTO[]>(this.fleetManagementApi.removeBidoReport, reportId);\r\n  }\r\n\r\n  public saveExcelFleetDataExchange(excelInput: SaveExcelDataInput) {\r\n    return super.post<SaveExcelDataInput, string>(this.fleetManagementApi.saveExcelFleetDataExchange, excelInput);\r\n  }\r\n\r\n  public saveXmlFleetDataExchange(xmlInput: SaveXmlDataInput) {\r\n    return super.post<SaveXmlDataInput, string>(this.fleetManagementApi.saveXmlFleetDataExchange, xmlInput);\r\n  }\r\n\r\n  public saveZipFleetDataExchange(zipInput: SaveZipDataInput) {\r\n    return super.post<SaveZipDataInput, string>(this.fleetManagementApi.saveZipFleetDataExchange, zipInput);\r\n  }\r\n\r\n  public fetchFleetDataExchangeReport(input: GetRefreshedArchivedReportDataInput): Observable<BireReportDTO[]> {\r\n    return super.post<GetRefreshedArchivedReportDataInput, BireReportDTO[]>(\r\n      this.fleetManagementApi.fetchFleetDataExchangeReport,\r\n      input\r\n    );\r\n  }\r\n\r\n  public getTemplate(input: FindDataListBySearchCriteriaInput): Observable<Uint8Array> {\r\n    return super.post<FindDataListBySearchCriteriaInput, Uint8Array>(\r\n      this.standardImportController.getImportFleetDataTemplate,\r\n      input\r\n    );\r\n  }\r\n\r\n  public openImportReportContent(input: BireReportDTOId): Observable<Uint8Array> {\r\n    return super.post<BireReportDTOId, Uint8Array>(this.fleetManagementApi.findBidoReportContentOfBidoReport, input);\r\n  }\r\n\r\n  public exportConfEventData(input: ExportFleetDataInput): Observable<Uint8Array> {\r\n    return super.post<ExportFleetDataInput, Uint8Array>(this.standardExportController.exportConfEvent, input);\r\n  }\r\n\r\n  public exportFlightsData(input: ExportFleetDataInput): Observable<Uint8Array> {\r\n    return super.post<ExportFleetDataInput, Uint8Array>(this.standardExportController.exportFlights, input);\r\n  }\r\n\r\n  public exportGlobalData(input: ExportFleetDataInput): Observable<Uint8Array> {\r\n    return super.post<ExportFleetDataInput, Uint8Array>(this.standardExportController.exportGlobal, input);\r\n  }\r\n\r\n  public exportAssetData(input: ExportAssetDataInput): Observable<Uint8Array> {\r\n    return super.post<ExportAssetDataInput, Uint8Array>(this.fleetBusinessController.exportAssetData, input);\r\n  }\r\n\r\n  public getServerDate(): Observable<Date> {\r\n    return super.post<void, Date>(this.productStructureManagementApi.getServerDate);\r\n  }\r\n\r\n  /***********************************\r\n   * Asset(s) Selection popup services\r\n   ***********************************/\r\n\r\n  public getWarehouseDropdownList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.bidtWarehouseApi.getWarehouses);\r\n  }\r\n\r\n  public getBidoFleetsBySearchCriteria(criteria: BidoFleetDTO): Observable<SearchResultsDTO<BidoFleetDTO>> {\r\n    return super.post<BidoFleetDTO, SearchResultsDTO<BidoFleetDTO>>(\r\n      this.fleetManagementApi.findBidoFleetsBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public getAssetTypeList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.fleetManagementApi.initializeAssetTypeList);\r\n  }\r\n\r\n  public getFunctionList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.fleetManagementApi.initializeFunctionList);\r\n  }\r\n\r\n  public getFamilyVariantList(assetType: string): Observable<LabelValue<string>[]> {\r\n    return super.post<string, LabelValue<string>[]>(\r\n      this.productStructureManagementApi.initializeFamilyVariantList,\r\n      assetType\r\n    );\r\n  }\r\n\r\n  public findAssetList(input: FindAssetListInput): Observable<SearchResultsDTO<FindAssetListConfigurationEventDTO>> {\r\n    return super.post<FindAssetListInput, SearchResultsDTO<FindAssetListConfigurationEventDTO>>(\r\n      this.fleetManagementApi.findAssetList,\r\n      input\r\n    );\r\n  }\r\n\r\n  public getOperationalStatusList(assetType: string): Observable<LabelValue<string>[]> {\r\n    return super.post<string, LabelValue<string>[]>(\r\n      this.productStructureManagementApi.initializeOperationalStatusList,\r\n      assetType\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ componentData.componentId + \\\".flightDataExchange\\\" | translate }}\\r\\n      </h2>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"section flex--1\\\">\\r\\n                  <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".type\\\" | translate }}</h4>\\r\\n                  <div class=\\\"section-content\\\">\\r\\n                    <div class=\\\"form-group form-group-select-buton\\\">\\r\\n                      <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n\\r\\n                      <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                        <p-selectButton\\r\\n                          [(ngModel)]=\\\"type\\\"\\r\\n                          [options]=\\\"propertyTypeList\\\"\\r\\n                          (onChange)=\\\"onTypeChange($event)\\\"\\r\\n                        ></p-selectButton>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"section flex--1\\\">\\r\\n                  <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".format\\\" | translate }}</h4>\\r\\n                  <div class=\\\"section-content\\\">\\r\\n                    <div class=\\\"form-group form-group-select-buton\\\">\\r\\n                      <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n\\r\\n                      <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                        <p-selectButton\\r\\n                          [(ngModel)]=\\\"format\\\"\\r\\n                          [options]=\\\"propertyFormatList\\\"\\r\\n                          (onChange)=\\\"onFormatChange()\\\"\\r\\n                        ></p-selectButton>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"section flex--1\\\"></div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title active\\\" *ngIf=\\\"type === component.loading && format === component.xml\\\">\\r\\n                  {{ componentData.componentId + \\\".importXmlFlights\\\" | translate }}\\r\\n                </h3>\\r\\n\\r\\n                <h3 class=\\\"grid-cell-title active\\\" *ngIf=\\\"type === component.loading && format === component.excel\\\">\\r\\n                  {{ componentData.componentId + \\\".importExcelFlights\\\" | translate }}\\r\\n                </h3>\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"type === component.export && format === component.xml\\\">\\r\\n                  {{ componentData.componentId + \\\".exportXmlFlights\\\" | translate }}\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div *ngIf=\\\"type === component.loading\\\" class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label selectedFV\\\">\\r\\n                      <span\\r\\n                        (click)=\\\"openTemplate(loadTemplate())\\\"\\r\\n                        style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n                      >\\r\\n                        {{ loadTemplate() }}\\r\\n                      </span>\\r\\n                    </label>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-row grid-cell--3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label\\r\\n                      class=\\\"form-label selectedFV\\\"\\r\\n                      *ngIf=\\\"type === component.loading && format === component.excel\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".excelFlightsFileToImport\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <label class=\\\"form-label selectedFV\\\" *ngIf=\\\"type === component.loading && format === component.xml\\\">\\r\\n                      {{ componentData.componentId + \\\".xmlFlightsFileToImport\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div\\r\\n                      *ngIf=\\\"type === component.loading\\\"\\r\\n                      class=\\\"form-control form-control-with-modal\\\"\\r\\n                      [ngClass]=\\\"{ disabled: isReadOpenMode }\\\"\\r\\n                    >\\r\\n                      <div class=\\\"form-control-data\\\">\\r\\n                        {{ fileName }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"btn-file-upload-wrapper\\\">\\r\\n                        <p-fileUpload\\r\\n                          #fileUploader\\r\\n                          *ngIf=\\\"!isReadOpenMode\\\"\\r\\n                          class=\\\"aw-fileupload\\\"\\r\\n                          name=\\\"document[]\\\"\\r\\n                          customUpload=\\\"true\\\"\\r\\n                          mode=\\\"basic\\\"\\r\\n                          auto=\\\"true\\\"\\r\\n                          chooseLabel=\\\"\\\"\\r\\n                          [disabled]=\\\"enableImport()\\\"\\r\\n                          (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                        ></p-fileUpload>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngIf=\\\"type === component.export && format == component.xml\\\"\\r\\n              class=\\\"grid-cell-content grid-cell-content-with-section\\\"\\r\\n            >\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group flex--1\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".exportData\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [(ngModel)]=\\\"exportDataFrom\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [(ngModel)]=\\\"exportDataFrom\\\"\\r\\n                          [disabled]=\\\"isReadOnlyForm\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group flex--3\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">\\r\\n                  {{ componentData.componentId + \\\".assetSelection\\\" | translate }}\\r\\n                </h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <p-table\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                      #ptableAssetSelection\\r\\n                      class=\\\"aw-table2\\\"\\r\\n                      [columns]=\\\"assetSelectionTableCols\\\"\\r\\n                      [value]=\\\"superiorTable\\\"\\r\\n                      [(selection)]=\\\"selectedAssetTask\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"caption\\\">\\r\\n                        <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedAssetTask.length > 0 }\\\">\\r\\n                          <div class=\\\"aw-table-global-filter\\\">\\r\\n                            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </label>\\r\\n\\r\\n                            <input\\r\\n                              #ptableAssetSelectionGlobalFilter\\r\\n                              class=\\\"aw-table-global-filter-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                              (input)=\\\"ptableAssetSelection.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"aw-table-actions\\\">\\r\\n                            <button\\r\\n                              *ngIf=\\\"selectedAssetTask.length > 0\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"deleteAssets()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.delete\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button type=\\\"button\\\" mat-raised-button (click)=\\\"openAssetsSelectionDialog()\\\">\\r\\n                              {{ \\\"global.add\\\" | translate }}\\r\\n                            </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                        <colgroup>\\r\\n                          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                          </th>\\r\\n\\r\\n                          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                            {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                          </th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                          </td>\\r\\n\\r\\n                          <td\\r\\n                            *ngFor=\\\"let col of columns\\\"\\r\\n                            [ngSwitch]=\\\"col.field\\\"\\r\\n                            [ngStyle]=\\\"{ 'text-align': col.alignment, 'min-width': '75rem' }\\\"\\r\\n                          >\\r\\n                            <div *ngSwitchDefault>\\r\\n                              {{ rowData[col.field] }}\\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-table>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row search-criteria-footer\\\">\\r\\n                    <div class=\\\"search-actions\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" mat-raised-button (click)=\\\"export()\\\">\\r\\n                        <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                        {{ componentData.componentId + \\\".export\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\" *ngIf=\\\"type === component.loading\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"aw-btn\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"import(0)\\\"\\r\\n                      [ngClass]=\\\"{ inactive: fileName === '' }\\\"\\r\\n                    >\\r\\n                      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                      {{ componentData.componentId + \\\".importFile\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title active\\\" *ngIf=\\\"type === component.loading\\\">\\r\\n                  {{ componentData.componentId + \\\".importReports\\\" | translate }} ({{ reports ? reports.length : 0 }})\\r\\n                </h3>\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"type === component.export\\\">\\r\\n                  {{ componentData.componentId + \\\".exportReports\\\" | translate }} ({{ reports ? reports.length : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!--For archived import reports-->\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div *ngIf=\\\"type === component.loading\\\">\\r\\n                <p-table\\r\\n                  [resizableColumns]=\\\"true\\\"\\r\\n                  #ptableImportReports\\r\\n                  class=\\\"aw-table2\\\"\\r\\n                  [columns]=\\\"reportTableCols\\\"\\r\\n                  [value]=\\\"reports\\\"\\r\\n                  [(selection)]=\\\"selectedReports\\\"\\r\\n                  [scrollable]=\\\"true\\\"\\r\\n                >\\r\\n                  <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                    <span *ngIf=\\\"!isReportLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                    <div *ngIf=\\\"isReportLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                      <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                      <div class=\\\"lds-hourglass\\\"></div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"caption\\\">\\r\\n                    <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedReports.length > 0 }\\\">\\r\\n                      <div class=\\\"aw-table-global-filter\\\">\\r\\n                        <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </label>\\r\\n\\r\\n                        <input\\r\\n                          #ptableImportReportGlobalFilter\\r\\n                          class=\\\"aw-table-global-filter-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                          (input)=\\\"ptableImportReports.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"aw-table-actions\\\">\\r\\n                        <button\\r\\n                          mat-raised-button\\r\\n                          *ngIf=\\\"selectedReports.length > 0\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          class=\\\"aw-btn aw-table-action\\\"\\r\\n                          (click)=\\\"deleteReports()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                    <colgroup>\\r\\n                      <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                      <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                    </colgroup>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                    <tr>\\r\\n                      <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                      </th>\\r\\n\\r\\n                      <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                        {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                      </th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                    <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                      <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                      </td>\\r\\n\\r\\n                      <td\\r\\n                        *ngFor=\\\"let col of columns\\\"\\r\\n                        [ngSwitch]=\\\"col.field\\\"\\r\\n                        [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                      >\\r\\n                        <div *ngSwitchCase=\\\"'reportName'\\\">\\r\\n                          <span\\r\\n                            (click)=\\\"openReportDetail(rowData)\\\"\\r\\n                            style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n                          >\\r\\n                            {{ rowData[col.field] }}\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        <div *ngSwitchCase=\\\"'statusDate'\\\">\\r\\n                          <span>\\r\\n                            {{ rowData[col.field] | date: \\\"dd/MM/yyyy HH:mm:ss\\\":\\\"\\\":translateService.currentLang }}\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        <div *ngSwitchDefault>\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </p-table>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"type === component.export\\\">\\r\\n                <p-table\\r\\n                  [resizableColumns]=\\\"true\\\"\\r\\n                  #ptableExportReports\\r\\n                  class=\\\"aw-table2\\\"\\r\\n                  [columns]=\\\"exportReportTableCols\\\"\\r\\n                  [value]=\\\"reports\\\"\\r\\n                  [(selection)]=\\\"selectedExportReports\\\"\\r\\n                  [scrollable]=\\\"true\\\"\\r\\n                >\\r\\n                  <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                    <span *ngIf=\\\"!isReportLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                    <div *ngIf=\\\"isReportLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                      <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                      <div class=\\\"lds-hourglass\\\"></div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"caption\\\">\\r\\n                    <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedExportReports.length > 0 }\\\">\\r\\n                      <div class=\\\"aw-table-global-filter\\\">\\r\\n                        <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </label>\\r\\n\\r\\n                        <input\\r\\n                          #ptableExportReportGlobalFilter\\r\\n                          class=\\\"aw-table-global-filter-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                          (input)=\\\"ptableExportReports.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"aw-table-actions\\\">\\r\\n                        <button\\r\\n                          *ngIf=\\\"selectedExportReports.length > 0\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"deleteExportReports()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                    <colgroup>\\r\\n                      <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                      <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                    </colgroup>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                    <tr>\\r\\n                      <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                      </th>\\r\\n\\r\\n                      <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                        {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                      </th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                    <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                      <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                      </td>\\r\\n\\r\\n                      <td\\r\\n                        *ngFor=\\\"let col of columns\\\"\\r\\n                        [ngSwitch]=\\\"col.field\\\"\\r\\n                        [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                      >\\r\\n                        <div *ngSwitchCase=\\\"'reportName'\\\">\\r\\n                          <span\\r\\n                            (click)=\\\"openReportDetail(rowData)\\\"\\r\\n                            style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n                          >\\r\\n                            {{ rowData[col.field] }}\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        <div *ngSwitchCase=\\\"'statusDate'\\\">\\r\\n                          <span>\\r\\n                            {{ rowData[col.field] | date: \\\"dd/MM/yyyy HH:mm:ss\\\":\\\"\\\":translateService.currentLang }}\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        <div *ngSwitchDefault>\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </p-table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-assets-selection-dialog\\r\\n  *ngIf=\\\"showAssetsSelectionDialog\\\"\\r\\n  [(display)]=\\\"showAssetsSelectionDialog\\\"\\r\\n  [showAssetsSelectionDialog]=\\\"showAssetsSelectionDialog\\\"\\r\\n  (onSelected)=\\\"setSelectedAssetsFromSelectionDilog($event)\\\"\\r\\n></aw-assets-selection-dialog>\\r\\n\\r\\n<aw-import-report-popup\\r\\n  *ngIf=\\\"showImportReportMessage\\\"\\r\\n  [importReportMessage]=\\\"importReportMessage\\\"\\r\\n  [(display)]=\\\"showImportReportMessage\\\"\\r\\n></aw-import-report-popup>\\r\\n\"","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport { FileUpload } from 'primeng/primeng';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../shared/services/session.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { FindDataListBySearchCriteriaInput } from '../../../shared/types/api-input-types/engineering-data-exchange/find-data-list-by-search-criteria-input.interface';\r\nimport { ExportFleetDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/export-fleet-data-input.interface';\r\nimport { FindAssetListConfigurationEventDTO } from '../../../shared/types/api-input-types/fleet-data-exchange/find-asset-list-configuration-event-dto.interface';\r\nimport { GetRefreshedArchivedReportDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/get-refreshed-archived-report-data-input.interface';\r\nimport { SaveExcelDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/save-excel-data-input.interface';\r\nimport { SaveXmlDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/save-xml-data-input.interface';\r\nimport { BidoDocumentationDTO } from '../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { BireReportDTOId } from '../../../shared/types/api-types/bire-report-dto-id.interface';\r\nimport { BireReportDTO } from '../../../shared/types/api-types/bire-report-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { FileUtils } from '../../../shared/utils/file-utils';\r\nimport { ListUtils } from '../../../shared/utils/list-utils';\r\n\r\nimport { FlightDataExchangeService } from './flight-data-exchange.service';\r\n\r\nenum FileExtensions {\r\n  txt = 'txt',\r\n  xls = 'xls',\r\n  xlsx = 'xlsx',\r\n  xml = 'xml',\r\n  zip = 'zip'\r\n}\r\n@Component({\r\n  selector: 'aw-flight-data-exchange',\r\n  templateUrl: './flight-data-exchange.component.html'\r\n})\r\nexport class FlightDataExchangeComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public static readonly loading: string = 'Loading';\r\n  public static readonly excel: string = 'Excel';\r\n  public static readonly xml: string = 'Xml';\r\n  public static readonly export: string = 'Export';\r\n  public static readonly flights: string = 'Flights';\r\n  public static readonly dateFormat: string = 'dd-MM-yyyy_HH';\r\n  public static readonly monthFormat: string = 'mm';\r\n  public readonly component: typeof FlightDataExchangeComponent;\r\n\r\n  public exportDataFrom: Date | undefined;\r\n\r\n  public file: BidoDocumentationDTO;\r\n  public fileName: string | undefined;\r\n  public type: string;\r\n  public format: string | undefined;\r\n\r\n  // Dropdown\r\n  public propertyDataList: LabelValue<string>[];\r\n  public propertyFormatList: LabelValue<string>[];\r\n  public propertyTypeList: LabelValue<string>[];\r\n  public propertyFamilyList: LabelValue<string>[];\r\n  public propertyVariantList: LabelValue<string>[];\r\n\r\n  public showImportComponents: boolean;\r\n  public showExportComponents: boolean;\r\n\r\n  public importReportMessage: string;\r\n  public showImportReportMessage: boolean;\r\n\r\n  // Import Table Parmas\r\n  public reportTableCols: TableColumn[];\r\n  public reports: BireReportDTO[];\r\n  public selectedReports: BireReportDTO[];\r\n\r\n  public isReportLoading: boolean;\r\n  public showSpinner: boolean;\r\n\r\n  public assetSelectionTableCols: TableColumn[];\r\n  public exportReportTableCols: TableColumn[];\r\n\r\n  public superiorTable: FindAssetListConfigurationEventDTO[];\r\n  public selectedAssetTask: FindAssetListConfigurationEventDTO[];\r\n\r\n  public selectedExportReports: BireReportDTO[];\r\n\r\n  public showAssetsSelectionDialog: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    public translateService: TranslateService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly flightDataExchangeService: FlightDataExchangeService,\r\n    public sessionService: SessionService,\r\n    private readonly datepipe: DatePipe,\r\n    private readonly confirmationService: ConfirmationService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    this.component = FlightDataExchangeComponent;\r\n\r\n    this.showExportComponents = false;\r\n    this.showImportComponents = false;\r\n    this.isReportLoading = false;\r\n    this.exportDataFrom = undefined;\r\n\r\n    this.propertyDataList = [];\r\n    this.propertyTypeList = [];\r\n    this.propertyFormatList = [\r\n      { label: this.getTranslation('excel'), value: this.component.excel },\r\n      { label: this.getTranslation('xml'), value: this.component.xml }\r\n    ];\r\n    this.reports = [];\r\n    this.selectedReports = [];\r\n\r\n    this.initImportTableCols();\r\n    this.setExportTableCols();\r\n    this.type = this.component.loading;\r\n    this.format = this.component.excel;\r\n    this.selectedAssetTask = [];\r\n    this.selectedExportReports = [];\r\n\r\n    this.superiorTable = [];\r\n\r\n    this.importReportMessage = '';\r\n    this.showImportReportMessage = false;\r\n\r\n    this.showAssetsSelectionDialog = false;\r\n\r\n    this.translateService.onLangChange.subscribe((_: LangChangeEvent) => {\r\n      this.loadDropDownLists();\r\n    });\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'FlightDataExchangeComponent';\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.displayComponentContext('global.search', true);\r\n\r\n    this.loadDropDownLists();\r\n    this.loadReportList();\r\n  }\r\n\r\n  // Change event of Type and format\r\n  public onTypeChange(event: LabelValue<string>): void {\r\n    this.format = undefined;\r\n    this.propertyFormatList = [];\r\n    if (event.value === this.component.loading) {\r\n      this.format = this.component.excel;\r\n      this.propertyFormatList = [\r\n        { label: this.getTranslation('excel'), value: this.component.excel },\r\n        { label: this.getTranslation('xml'), value: this.component.xml }\r\n      ];\r\n    } else if (event.value === this.component.export) {\r\n      this.showAssetsSelectionDialog = false;\r\n      this.propertyFormatList = [{ label: this.getTranslation('xml'), value: this.component.xml }];\r\n      this.format = this.component.xml;\r\n      this.onDataChangeInit();\r\n    }\r\n\r\n    this.selectImportOrExportComponents();\r\n    this.resetScreen();\r\n    this.loadReportList();\r\n  }\r\n\r\n  private onDataChangeInit(): void {\r\n    this.resetScreen();\r\n    this.initImportTableCols();\r\n    this.loadReportList();\r\n  }\r\n\r\n  public onFormatChange(): void {\r\n    if (this.format === null) {\r\n      this.propertyDataList = [];\r\n    }\r\n\r\n    this.selectImportOrExportComponents();\r\n\r\n    if (!!this.format) {\r\n      if (this.format === this.component.excel) {\r\n        this.format = this.component.excel;\r\n      } else if (this.format === this.component.xml) {\r\n        this.format = this.component.xml;\r\n      }\r\n    }\r\n    this.loadReportList();\r\n  }\r\n\r\n  public selectImportOrExportComponents(): void {\r\n    if (this.validSearchCombination()) {\r\n      if (this.type === this.component.loading) {\r\n        this.showImportComponents = true;\r\n        this.showExportComponents = false;\r\n      } else if (this.type === this.component.export) {\r\n        this.showExportComponents = true;\r\n        this.showImportComponents = false;\r\n      } else {\r\n        this.showImportComponents = false;\r\n        this.showExportComponents = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public validSearchCombination(): boolean {\r\n    if (!!this.type && !!this.format) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public openTemplate(templateName: string): void {\r\n    if (!!this.type && !!this.format) {\r\n      const getTemplateInput: FindDataListBySearchCriteriaInput = {\r\n        type: this.type,\r\n        format: this.format,\r\n        data: this.component.flights\r\n      };\r\n\r\n      this.flightDataExchangeService.getTemplate(getTemplateInput).subscribe((result) => {\r\n        this.downLoadFiles(result, templateName);\r\n      });\r\n    } else {\r\n      super.throwUnboundLocalError('openTemplate', 'this.type && this.format');\r\n    }\r\n  }\r\n\r\n  public downLoadFiles(docFile: Uint8Array, docName: string): void {\r\n    FileUtils.downloadFile(docFile, docName);\r\n  }\r\n\r\n  public loadTemplate(): string {\r\n    let templateName = '';\r\n    if (this.format === this.component.excel) {\r\n      templateName = 'Template_FLIGHTS_IMPORT.xls';\r\n    } else if (this.format === this.component.xml) {\r\n      templateName = 'Template_FLIGHTS_IMPORT.xsd';\r\n    }\r\n\r\n    return templateName;\r\n  }\r\n\r\n  public enableImport(): boolean {\r\n    if (!!this.format) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // For Doc Import\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    // if (!!event.files) {\r\n    const file: File = event.files[0];\r\n    {\r\n      // if (!!this.file && !!this.file.docName) {\r\n      FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n        if (fileContent) {\r\n          this.file = {\r\n            docFile: fileContent,\r\n            docName: file.name,\r\n            docPublicationDate: new Date()\r\n          };\r\n          this.fileName = this.file.docName;\r\n        }\r\n      });\r\n    }\r\n\r\n    fileUploader.clear();\r\n    // }\r\n  }\r\n\r\n  // function is called with parameter 1 if simulate button is clicked, else called with 0\r\n  public import(simulate: boolean): void {\r\n    if (this.fileName !== '') {\r\n      const partialMessageKey = this.getTranslateKey('importData');\r\n      this.confirmationService.confirm({\r\n        interpolateParams: { 'importData.fileName': this.fileName },\r\n        contextKeys: [this.getTranslateKey('importData.line1')],\r\n        messageKey: partialMessageKey,\r\n        delayCallback: true,\r\n        accept: () => {\r\n          // Importing Excel file\r\n          this.showSpinner = true;\r\n          const isExcel =\r\n            this.showDocExtension(this.file) === FileExtensions.xlsx ||\r\n            this.showDocExtension(this.file) === FileExtensions.xls;\r\n          if (this.format === this.component.excel && isExcel) {\r\n            const excelInput: SaveExcelDataInput = {\r\n              fileName: this.fileName,\r\n              excelSource: this.file.docFile,\r\n              removingChoice: false,\r\n              familyCodeSelected: undefined,\r\n              variantCodeSelected: undefined,\r\n              isSimulated: simulate,\r\n              data: this.component.flights\r\n            };\r\n\r\n            this.flightDataExchangeService.saveExcelFleetDataExchange(excelInput).subscribe(\r\n              (result) => {\r\n                this.fileName = '';\r\n                const importReport = `${result}\\n${this.getTranslation('importReportError')}`;\r\n                this.importReportMessage = importReport;\r\n                this.showImportReportMessage = true;\r\n                this.loadReportList();\r\n                this.showSpinner = false;\r\n              },\r\n              () => {\r\n                if (simulate) {\r\n                  this.messageService.showErrorMessage(this.getTranslateKey('errorOnSimulate'));\r\n                  this.showSpinner = false;\r\n                } else {\r\n                  this.messageService.showErrorMessage(this.getTranslateKey('errorOnImport'));\r\n                  this.showSpinner = false;\r\n                }\r\n              }\r\n            );\r\n          } else if (this.format === this.component.excel && !isExcel) {\r\n            this.fileName = '';\r\n            this.messageService.showErrorMessage(this.getTranslateKey('notExcel'));\r\n            this.showSpinner = false;\r\n          }\r\n\r\n          // Import Xml File\r\n          if (this.format === this.component.xml) {\r\n            if (!!this.file && !!this.fileName && !!this.file.docFile) {\r\n              const xmlInput: SaveXmlDataInput = {\r\n                fileName: this.fileName,\r\n                xmlSource: this.file.docFile,\r\n                simulated: simulate,\r\n                data: this.component.flights\r\n              };\r\n\r\n              if (this.showDocExtension(this.file) === this.component.xml.toLowerCase()) {\r\n                this.importXmlData(xmlInput);\r\n              } else {\r\n                this.messageService.showErrorMessage(this.getTranslateKey('notXml'));\r\n                this.showSpinner = false;\r\n              }\r\n            } else {\r\n              super.throwUnboundLocalError('import', 'this.fileName && this.file && this.data && this.file.docFile');\r\n              this.showSpinner = false;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public importXmlData(xmlInput: SaveXmlDataInput): void {\r\n    this.flightDataExchangeService.saveXmlFleetDataExchange(xmlInput).subscribe(\r\n      (result) => {\r\n        this.fileName = '';\r\n        this.importReportMessage = result;\r\n        this.showImportReportMessage = true;\r\n        this.loadReportList();\r\n        this.showSpinner = false;\r\n        this.showSpinner = false;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnImport'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public export(): void {\r\n    this.showSpinner = true;\r\n\r\n    const xmlInput: ExportFleetDataInput = {\r\n      equipmentCode: [],\r\n      date: new Date(),\r\n      lockAsset: false\r\n    };\r\n\r\n    this.superiorTable.forEach((row) => {\r\n      xmlInput.equipmentCode.push(row.equipmentCode);\r\n    });\r\n\r\n    if (this.type === this.component.export) {\r\n      if (this.format === this.component.xml) {\r\n        if (this.superiorTable.length !== 0) {\r\n          xmlInput.date = this.exportDataFrom;\r\n\r\n          this.flightDataExchangeService\r\n            .exportFlightsData(xmlInput)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.showSpinner = false;\r\n              })\r\n            )\r\n            .subscribe((bytes) => {\r\n              this.flightDataExchangeService.getServerDate().subscribe((result) => {\r\n                const templateName = `${this.translateService.instant(\r\n                  this.getTranslateKey('flightsDataExportFileNamePrefix')\r\n                )}_${this.datepipe.transform(result, this.component.dateFormat)}h${this.datepipe.transform(\r\n                  result,\r\n                  this.component.monthFormat\r\n                )}.${FileExtensions.zip}`;\r\n\r\n                this.downLoadFiles(bytes, templateName);\r\n                this.loadReportList();\r\n              });\r\n            });\r\n        } else {\r\n          this.showSpinner = false;\r\n          this.messageService.showErrorMessage(this.getTranslateKey('addAssets'));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public showImportReports(): boolean {\r\n    let returnValue = false;\r\n    if (this.type === this.component.loading) {\r\n      if (this.format === this.component.excel) {\r\n        returnValue = true;\r\n      } else if (this.format === this.component.xml) {\r\n        returnValue = true;\r\n      }\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  // Event to delete report entry\r\n  public deleteReports() {\r\n    if (this.selectedReports !== []) {\r\n      const partialMessageKey =\r\n        this.selectedReports.length > 1 ? 'confirmDeleteSelectedReports' : 'confirmDeleteSelectedReport';\r\n\r\n      const reports = new Array<BireReportDTOId>();\r\n\r\n      this.selectedReports.forEach((report) => {\r\n        if (report && report.reportId) {\r\n          const reportId: BireReportDTOId = {\r\n            reportId: report.reportId\r\n          };\r\n          reports.push(reportId);\r\n        }\r\n      });\r\n\r\n      this.confirmationService.confirmDelete({\r\n        messageKey: this.getTranslateKey(partialMessageKey),\r\n        accept: () => {\r\n          this.flightDataExchangeService.deleteReportEntry(reports).subscribe(\r\n            (results) => {\r\n              const messageKey =\r\n                partialMessageKey === 'confirmDeleteSelectedReports'\r\n                  ? this.getTranslateKey('successOnDeleteReports')\r\n                  : this.getTranslateKey('successOnDeleteReport');\r\n\r\n              this.messageService.showSuccessMessage(messageKey);\r\n\r\n              this.selectedReports = [];\r\n              this.loadReportList();\r\n            },\r\n            () => {\r\n              const messageKey =\r\n                partialMessageKey === 'confirmDeleteSelectedReports'\r\n                  ? this.getTranslateKey('errorOnDeleteReports')\r\n                  : this.getTranslateKey('errorOnDeleteReport');\r\n\r\n              this.messageService.showSuccessMessage(messageKey);\r\n            }\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public deleteExportReports() {\r\n    if (this.selectedExportReports !== []) {\r\n      const partialMessageKey =\r\n        this.selectedExportReports.length > 1 ? 'confirmDeleteSelectedReports' : 'confirmDeleteSelectedReport';\r\n\r\n      const reports = new Array<BireReportDTOId>();\r\n\r\n      this.selectedExportReports.forEach((report) => {\r\n        if (report && report.reportId) {\r\n          const reportId: BireReportDTOId = {\r\n            reportId: report.reportId\r\n          };\r\n          reports.push(reportId);\r\n        }\r\n      });\r\n\r\n      this.confirmationService.confirmDelete({\r\n        messageKey: this.getTranslateKey(partialMessageKey),\r\n        accept: () => {\r\n          this.flightDataExchangeService.deleteReportEntry(reports).subscribe(\r\n            (results) => {\r\n              const messageKey =\r\n                partialMessageKey === 'confirmDeleteSelectedReports'\r\n                  ? this.getTranslateKey('successOnDeleteReports')\r\n                  : this.getTranslateKey('successOnDeleteReport');\r\n\r\n              this.messageService.showSuccessMessage(messageKey);\r\n\r\n              this.selectedExportReports = [];\r\n              this.loadReportList();\r\n            },\r\n            () => {\r\n              const messageKey =\r\n                partialMessageKey === 'confirmDeleteSelectedReports'\r\n                  ? this.getTranslateKey('errorOnDeleteReports')\r\n                  : this.getTranslateKey('errorOnDeleteReport');\r\n\r\n              this.messageService.showSuccessMessage(messageKey);\r\n            }\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public deleteAssets() {\r\n    if (this.selectedAssetTask !== []) {\r\n      const partialMessageKey = 'global.deleteConfirmationMsg';\r\n\r\n      this.confirmationService.confirmDelete({\r\n        messageKey: partialMessageKey,\r\n        accept: () => {\r\n          this.superiorTable = this.superiorTable.filter((asset) => {\r\n            return !this.selectedAssetTask.includes(asset);\r\n          });\r\n          this.selectedAssetTask = [];\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public openReportDetail(object: BireReportDTO): void {\r\n    if (!!object && !!object.reportId) {\r\n      const bireReportDTOId: BireReportDTOId = {\r\n        reportId: object.reportId\r\n      };\r\n      this.flightDataExchangeService.openImportReportContent(bireReportDTOId).subscribe((result) => {\r\n        if (!!object && !!object.reportName) {\r\n          if (\r\n            object.reportName.includes(`.${FileExtensions.txt}`) ||\r\n            object.reportName.includes(`.${FileExtensions.zip}`)\r\n          ) {\r\n            this.downLoadFiles(result, object.reportName);\r\n          } else if (this.type === this.component.loading) {\r\n            this.downLoadFiles(result, `${object.reportName}.${FileExtensions.txt}`);\r\n          } else if (this.type === this.component.export) {\r\n            this.downLoadFiles(result, `${object.reportName}.${FileExtensions.zip}`);\r\n          }\r\n        } else {\r\n          super.throwUnboundLocalError('openReportDetail', 'object.reportName');\r\n        }\r\n      });\r\n    } else {\r\n      super.throwUnboundLocalError('openReportDetail', 'object.reportId');\r\n    }\r\n  }\r\n\r\n  // Method to set table columns\r\n  private setExportTableCols(): void {\r\n    this.assetSelectionTableCols = [\r\n      { field: 'equipmentText', width: '10%' },\r\n      { field: 'equipmentFamilyVariantCode', width: '10%' },\r\n      { field: 'equipmentRegistration', width: '10%' },\r\n      { field: 'equipmentPn', width: '5%' },\r\n      { field: 'equipmentDesignation', width: '10%' },\r\n      { field: 'equipmentFunction', width: '10%' },\r\n      { field: 'equipmentSn', width: '5%' },\r\n      { field: 'equipmentSupAsset', width: '10%' },\r\n      { field: 'equipmentOwner', width: '5%' },\r\n      { field: 'equipmentOperator', width: '10%' },\r\n      { field: 'equipmentLocation', width: '10%' },\r\n      { field: 'equipmentOperationalStatus', width: '10%' },\r\n      { field: 'equipmentCode', width: '5%' }\r\n    ];\r\n\r\n    this.exportReportTableCols = [\r\n      { field: 'reportCode', alignment: 'center' },\r\n      { field: 'reportName', alignment: 'center' },\r\n      { field: 'statusUser', alignment: 'center' },\r\n      { field: 'statusDate', alignment: 'center' }\r\n    ];\r\n  }\r\n\r\n  // Modifying table columns depending on search criteria\r\n  private initImportTableCols() {\r\n    this.reportTableCols = [\r\n      { field: 'reportCode', alignment: 'center' },\r\n      { field: 'reportName', alignment: 'center', width: '25rem' },\r\n      { field: 'statusUser', alignment: 'center' },\r\n      { field: 'statusDate', alignment: 'center' }\r\n    ];\r\n  }\r\n\r\n  private loadReportList(): void {\r\n    this.selectedReports = [];\r\n    this.reports = [];\r\n    if (!!this.format && !!this.type) {\r\n      const input: GetRefreshedArchivedReportDataInput = {\r\n        data: this.getTranslation('flights'),\r\n        format: this.format,\r\n        type: this.type,\r\n        reportCode: ''\r\n      };\r\n\r\n      if (this.type === this.component.loading) {\r\n        // 'Loading'\r\n        if (this.format === this.component.excel) {\r\n          // 'Excel'\r\n          input.reportCode = 'XLS_MISSION_IMPORT_REPORT_CODE';\r\n          this.hitFetchAPI(input);\r\n        } else if (this.format === this.component.xml) {\r\n          input.reportCode = 'XML_MISSION_IMPORT_REPORT_CODE';\r\n          this.hitFetchAPI(input);\r\n        }\r\n      } else if (this.type === this.component.export) {\r\n        if (this.format === this.component.xml) {\r\n          input.reportCode = 'ZIP_MISSION_EXPORT_REPORT';\r\n          this.hitFetchAPI(input);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public setSelectedAssetsFromSelectionDilog(event: FindAssetListConfigurationEventDTO[]) {\r\n    event.forEach((e) => {\r\n      const inSuperiorTable = this.superiorTable.filter((asset) => asset.equipmentCode === e.equipmentCode);\r\n      if (inSuperiorTable.length === 0) {\r\n        this.superiorTable.push(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  private hitFetchAPI(input: GetRefreshedArchivedReportDataInput): void {\r\n    this.isReportLoading = true;\r\n    this.flightDataExchangeService.fetchFleetDataExchangeReport(input).subscribe((result) => {\r\n      this.reports = result;\r\n      this.isReportLoading = false;\r\n    });\r\n  }\r\n\r\n  private resetScreen(): void {\r\n    this.file = {};\r\n    this.fileName = '';\r\n\r\n    this.superiorTable = [];\r\n    this.reports = [];\r\n    this.exportDataFrom = undefined;\r\n  }\r\n\r\n  // Load Dropdown with data at initial\r\n  private loadDropDownLists(): void {\r\n    this.flightDataExchangeService.findTypeList().subscribe(\r\n      (results) => {\r\n        this.propertyTypeList = ListUtils.orEmpty(results).map((elt) => {\r\n          // FIXME\r\n          if (elt.value === 'Loading') {\r\n            elt.label = this.translateService.instant('loading');\r\n          } else if (elt.value === 'Export') {\r\n            elt.label = this.translateService.instant('export');\r\n          }\r\n\r\n          return elt;\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetTypeList'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private getTranslation(label: string): string {\r\n    return this.translateService.instant(this.getTranslateKey(label)) as string;\r\n  }\r\n\r\n  public showDocExtension(document: BidoDocumentationDTO): string {\r\n    return FileUtils.getExtension(document.docName);\r\n  }\r\n\r\n  /*************************\r\n   * Asset(s) selection popup\r\n   *************************/\r\n\r\n  public openAssetsSelectionDialog(): void {\r\n    this.showAssetsSelectionDialog = true;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { EngineeringDataExchangeApi } from '../../../shared/api/engineering-data-exchange.api';\r\nimport { FleetManagementApi } from '../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../shared/api/product-structure-management.api';\r\nimport { StandardExportApi } from '../../../shared/api/standard-export.api';\r\nimport { StandardImportApi } from '../../../shared/api/standard-import.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { FindDataListBySearchCriteriaInput } from '../../../shared/types/api-input-types/engineering-data-exchange/find-data-list-by-search-criteria-input.interface';\r\nimport { ExportFleetDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/export-fleet-data-input.interface';\r\nimport { GetRefreshedArchivedReportDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/get-refreshed-archived-report-data-input.interface';\r\nimport { SaveExcelDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/save-excel-data-input.interface';\r\nimport { SaveXmlDataInput } from '../../../shared/types/api-input-types/fleet-data-exchange/save-xml-data-input.interface';\r\nimport { BidoReportDTOId } from '../../../shared/types/api-types/bido-report-dto-id.interface';\r\nimport { BidoReportDTO } from '../../../shared/types/api-types/bido-report-dto.interface';\r\nimport { BireReportDTOId } from '../../../shared/types/api-types/bire-report-dto-id.interface';\r\nimport { BireReportDTO } from '../../../shared/types/api-types/bire-report-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FlightDataExchangeService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly engineeringDataExchangeApi: EngineeringDataExchangeApi,\r\n    private readonly standardImportApi: StandardImportApi,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly standardExportController: StandardExportApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findTypeList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.engineeringDataExchangeApi.findTypeList);\r\n  }\r\n\r\n  public getTemplate(input: FindDataListBySearchCriteriaInput): Observable<Uint8Array> {\r\n    return super.post<FindDataListBySearchCriteriaInput, Uint8Array>(\r\n      this.standardImportApi.getImportFleetDataTemplate,\r\n      input\r\n    );\r\n  }\r\n\r\n  public openImportReportContent(input: BireReportDTOId): Observable<Uint8Array> {\r\n    return super.post<BireReportDTOId, Uint8Array>(this.fleetManagementApi.findBidoReportContentOfBidoReport, input);\r\n  }\r\n\r\n  public exportFlightsData(input: ExportFleetDataInput): Observable<Uint8Array> {\r\n    return super.post<ExportFleetDataInput, Uint8Array>(this.standardExportController.exportFlights, input);\r\n  }\r\n\r\n  public deleteReportEntry(reportId: BidoReportDTOId[]) {\r\n    return super.post<BidoReportDTOId[], BidoReportDTO[]>(this.fleetManagementApi.removeBidoReport, reportId);\r\n  }\r\n\r\n  public saveExcelFleetDataExchange(excelInput: SaveExcelDataInput) {\r\n    return super.post<SaveExcelDataInput, string>(this.fleetManagementApi.saveExcelFleetDataExchange, excelInput);\r\n  }\r\n\r\n  public saveXmlFleetDataExchange(xmlInput: SaveXmlDataInput) {\r\n    return super.post<SaveXmlDataInput, string>(this.fleetManagementApi.saveXmlFleetDataExchange, xmlInput);\r\n  }\r\n\r\n  public getServerDate(): Observable<Date> {\r\n    return super.post<void, Date>(this.productStructureManagementApi.getServerDate);\r\n  }\r\n\r\n  public fetchFleetDataExchangeReport(input: GetRefreshedArchivedReportDataInput): Observable<BireReportDTO[]> {\r\n    return super.post<GetRefreshedArchivedReportDataInput, BireReportDTO[]>(\r\n      this.fleetManagementApi.fetchFleetDataExchangeReport,\r\n      input\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        {{ \\\"page.searchPage\\\" | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"></label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <span\\r\\n                        (click)=\\\"openTemplate(loadTemplate())\\\"\\r\\n                        style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n                      >\\r\\n                        {{ loadTemplate() }}\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row grid-cell--6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{\\r\\n                      componentData.componentId + \\\".employeeFileToImport\\\" | translate\\r\\n                    }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n                      <div class=\\\"form-control-data\\\">\\r\\n                        {{ fileName }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"btn-file-upload-wrapper\\\">\\r\\n                        <p-fileUpload\\r\\n                          #fileUploader\\r\\n                          *ngIf=\\\"!isReadOpenMode\\\"\\r\\n                          class=\\\"aw-fileupload\\\"\\r\\n                          name=\\\"document[]\\\"\\r\\n                          customUpload=\\\"true\\\"\\r\\n                          mode=\\\"basic\\\"\\r\\n                          auto=\\\"true\\\"\\r\\n                          chooseLabel=\\\"\\\"\\r\\n                          (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                        ></p-fileUpload>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" mat-raised-button (click)=\\\"import()\\\">\\r\\n                      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                      <i class=\\\"fa fa-fw fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      <span>{{ componentData.componentId + \\\".importFile\\\" | translate }}</span>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-import-report-popup\\r\\n  *ngIf=\\\"showImportReportMessage\\\"\\r\\n  [importReportMessage]=\\\"importReportMessage\\\"\\r\\n  [(display)]=\\\"showImportReportMessage\\\"\\r\\n></aw-import-report-popup>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FileUpload } from 'primeng/fileupload';\r\n\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { ImportEmployeeFromExcelHRAndLogisticsInput } from '../../../shared/types/api-input-types/employee-data-exchange/import-employee-from-excel-hr-logistics-input.interface';\r\nimport { ImportFromExcelHRAndLogisticsOutputDTO } from '../../../shared/types/api-output-types/hr-data-exchange/import-from-excel-hr-logistic-output.interface';\r\nimport { BidoDocumentationDTO } from '../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { FileUtils } from '../../../shared/utils/file-utils';\r\n\r\nimport { HrDataExchangeService } from './hr-data-exchange.service';\r\n\r\n@Component({\r\n  selector: 'aw-hr-data-exchange',\r\n  templateUrl: './hr-data-exchange.component.html'\r\n})\r\nexport class HrDataExchangeComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public fileName: string | undefined;\r\n  public file: BidoDocumentationDTO;\r\n  public showImportReportMessage: boolean;\r\n  public importReportMessage: string;\r\n  public showSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly hrDataExchangeService: HrDataExchangeService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.fileName = '';\r\n    this.showImportReportMessage = false;\r\n    this.importReportMessage = '';\r\n    this.showSpinner = false;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'HrDataExchangeComponent';\r\n  }\r\n\r\n  // For Doc Import\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (event.files) {\r\n      const file: File = event.files[0];\r\n      {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          if (fileContent) {\r\n            this.file = {\r\n              docFile: fileContent,\r\n              docName: file.name,\r\n              docPublicationDate: new Date()\r\n            };\r\n            this.fileName = this.file.docName;\r\n          }\r\n        });\r\n      }\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public openTemplate(templateName: string): void {\r\n    this.hrDataExchangeService.getImportEmployee().subscribe((result) => {\r\n      this.downLoadFiles(result, templateName);\r\n    });\r\n    // const partialMessageKey = this.getTranslateKey('openReport');\r\n    // this.confirmationService.confirm({\r\n    //   interpolateParams: { 'openReport.reportName': templateName },\r\n    //   messageKey: partialMessageKey,\r\n    //   accept: () => {\r\n    //     this.hrDataExchangeService.getImportEmployee().subscribe((result) => {\r\n    //       this.downLoadFiles(result, templateName);\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  public downLoadFiles(docFile: Uint8Array, docName: string): void {\r\n    FileUtils.downloadFile(docFile, docName);\r\n  }\r\n\r\n  public loadTemplate(): string {\r\n    return 'TEMPLATE_EMPLOYEE.xls';\r\n  }\r\n\r\n  public showDocExtension(document: BidoDocumentationDTO): string {\r\n    return FileUtils.getExtension(document.docName);\r\n  }\r\n\r\n  /**\r\n   * function is called with parameter 1 if simulate button is clicked, else called with 0\r\n   */\r\n  public import(): void {\r\n    if (this.fileName !== '') {\r\n      const partialMessageKey = this.getTranslateKey('importData');\r\n      this.confirmationService.confirm({\r\n        interpolateParams: { 'importData.fileName': this.fileName },\r\n        contextKeys: [this.getTranslateKey('importData.line1')],\r\n        messageKey: partialMessageKey,\r\n        accept: () => {\r\n          // Importing Excel file\r\n          this.showSpinner = true;\r\n          if (this.fileName && this.file.docFile) {\r\n            const excelInput: ImportEmployeeFromExcelHRAndLogisticsInput = {\r\n              fileName: this.fileName,\r\n              excelSource: this.file.docFile\r\n            };\r\n\r\n            this.hrDataExchangeService\r\n              .importEmployeeFromExcel(excelInput)\r\n              .subscribe((result: ImportFromExcelHRAndLogisticsOutputDTO) => {\r\n                this.fileName = '';\r\n                this.showImportReportMessage = true;\r\n                this.importReportMessage = result.reportRepresentation;\r\n                this.showSpinner = false;\r\n              });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { StandardImportBidtApi } from '../../../shared/api/standard-import-bidt.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { ImportEmployeeFromExcelHRAndLogisticsInput } from '../../../shared/types/api-input-types/employee-data-exchange/import-employee-from-excel-hr-logistics-input.interface';\r\nimport { ImportFromExcelHRAndLogisticsOutputDTO } from '../../../shared/types/api-output-types/hr-data-exchange/import-from-excel-hr-logistic-output.interface';\r\n\r\n@Injectable()\r\nexport class HrDataExchangeService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly standardImportBidtApi: StandardImportBidtApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getImportEmployee(): Observable<Uint8Array> {\r\n    return super.post<void, Uint8Array>(this.standardImportBidtApi.getImportEmployeeXLS);\r\n  }\r\n\r\n  public importEmployeeFromExcel(\r\n    file: ImportEmployeeFromExcelHRAndLogisticsInput\r\n  ): Observable<ImportFromExcelHRAndLogisticsOutputDTO> {\r\n    return super.post<ImportEmployeeFromExcelHRAndLogisticsInput, ImportFromExcelHRAndLogisticsOutputDTO>(\r\n      this.standardImportBidtApi.importEmployeeFromExcel,\r\n      file\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        {{ \\\"page.searchPage\\\" | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"></label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <span\\r\\n                        (click)=\\\"openTemplate(loadTemplate())\\\"\\r\\n                        style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n                      >\\r\\n                        {{ loadTemplate() }}\\r\\n                      </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row  grid-cell--6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{\\r\\n                      componentData.componentId + \\\".materialFileToImport\\\" | translate\\r\\n                    }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n                      <div class=\\\"form-control-data\\\">\\r\\n                        {{ fileName }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"btn-file-upload-wrapper\\\">\\r\\n                        <p-fileUpload\\r\\n                          #fileUploader\\r\\n                          *ngIf=\\\"!isReadOpenMode\\\"\\r\\n                          class=\\\"aw-fileupload\\\"\\r\\n                          name=\\\"document[]\\\"\\r\\n                          customUpload=\\\"true\\\"\\r\\n                          mode=\\\"basic\\\"\\r\\n                          auto=\\\"true\\\"\\r\\n                          chooseLabel=\\\"\\\"\\r\\n                          (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                        ></p-fileUpload>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" mat-raised-button (click)=\\\"import()\\\">\\r\\n                      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSpinner\\\"></span>\\r\\n                      <i class=\\\"fa fa-fw fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      <span>{{ componentData.componentId + \\\".importFile\\\" | translate }}</span>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-import-report-popup\\r\\n  *ngIf=\\\"showImportReportMessage\\\"\\r\\n  [importReportMessage]=\\\"importReportMessage\\\"\\r\\n  [(display)]=\\\"showImportReportMessage\\\"\\r\\n></aw-import-report-popup>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FileUpload } from 'primeng/fileupload';\r\n\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { ImportEmployeeFromExcelHRAndLogisticsInput } from '../../../shared/types/api-input-types/employee-data-exchange/import-employee-from-excel-hr-logistics-input.interface';\r\nimport { ImportFromExcelHRAndLogisticsOutputDTO } from '../../../shared/types/api-output-types/hr-data-exchange/import-from-excel-hr-logistic-output.interface';\r\nimport { BidoDocumentationDTO } from '../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { FileUtils } from '../../../shared/utils/file-utils';\r\n\r\nimport { LogisticDataExchangeService } from './logistic-data-exchange.service';\r\n\r\n@Component({\r\n  selector: 'aw-logistic-data-exchange',\r\n  templateUrl: './logistic-data-exchange.component.html'\r\n})\r\nexport class LogisticDataExchangeComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public fileName: string | undefined;\r\n  public file: BidoDocumentationDTO;\r\n  public showImportReportMessage: boolean;\r\n  public importReportMessage: string;\r\n  public showSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly logisticDataExchangeService: LogisticDataExchangeService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.fileName = '';\r\n    this.showImportReportMessage = false;\r\n    this.importReportMessage = '';\r\n    this.showSpinner = false;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'LogisticDataExchangeComponent';\r\n  }\r\n\r\n  // For Doc Import\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (event.files) {\r\n      const file: File = event.files[0];\r\n      {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          if (fileContent) {\r\n            this.file = {\r\n              docFile: fileContent,\r\n              docName: file.name,\r\n              docPublicationDate: new Date()\r\n            };\r\n            this.fileName = this.file.docName;\r\n          }\r\n        });\r\n      }\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public openTemplate(templateName: string): void {\r\n    this.logisticDataExchangeService.getImportMaterial().subscribe((result) => {\r\n      this.downLoadFiles(result, templateName);\r\n    });\r\n    // const partialMessageKey = this.getTranslateKey('openReport');\r\n    // this.confirmationService.confirm({\r\n    //   interpolateParams: { 'openReport.reportName': templateName },\r\n    //   messageKey: partialMessageKey,\r\n    //   accept: () => {\r\n    //     this.logisticDataExchangeService.getImportMaterial().subscribe((result) => {\r\n    //       this.downLoadFiles(result, templateName);\r\n    //     });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  public downLoadFiles(docFile: Uint8Array, docName: string): void {\r\n    FileUtils.downloadFile(docFile, docName);\r\n  }\r\n\r\n  public loadTemplate(): string {\r\n    return 'TEMPLATE_MATERIAL.xls';\r\n  }\r\n\r\n  public showDocExtension(document: BidoDocumentationDTO): string {\r\n    return FileUtils.getExtension(document.docName);\r\n  }\r\n\r\n  /**\r\n   * function is called with parameter 1 if simulate button is clicked, else called with 0\r\n   */\r\n  public import(): void {\r\n    if (this.fileName !== '') {\r\n      const partialMessageKey = this.getTranslateKey('importData');\r\n      this.confirmationService.confirm({\r\n        interpolateParams: { 'importData.fileName': this.fileName },\r\n        contextKeys: [this.getTranslateKey('importData.line1')],\r\n        messageKey: partialMessageKey,\r\n        accept: () => {\r\n          this.showSpinner = true;\r\n          // Importing Excel file\r\n          if (!!this.fileName && !!this.file.docFile) {\r\n            const excelInput: ImportEmployeeFromExcelHRAndLogisticsInput = {\r\n              fileName: this.fileName,\r\n              excelSource: this.file.docFile\r\n            };\r\n\r\n            this.logisticDataExchangeService\r\n              .importMaterialFromExcel(excelInput)\r\n              .subscribe((result: ImportFromExcelHRAndLogisticsOutputDTO) => {\r\n                this.fileName = '';\r\n                this.showImportReportMessage = true;\r\n                this.importReportMessage = result.reportRepresentation;\r\n                this.showSpinner = false;\r\n              });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { StandardImportBidtApi } from '../../../shared/api/standard-import-bidt.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { ImportEmployeeFromExcelHRAndLogisticsInput } from '../../../shared/types/api-input-types/employee-data-exchange/import-employee-from-excel-hr-logistics-input.interface';\r\nimport { ImportFromExcelHRAndLogisticsOutputDTO } from '../../../shared/types/api-output-types/hr-data-exchange/import-from-excel-hr-logistic-output.interface';\r\n\r\n@Injectable()\r\nexport class LogisticDataExchangeService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly standardImportBidtApi: StandardImportBidtApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getImportMaterial(): Observable<Uint8Array> {\r\n    return super.post<void, Uint8Array>(this.standardImportBidtApi.getImportMaterialXLS);\r\n  }\r\n\r\n  public importMaterialFromExcel(\r\n    file: ImportEmployeeFromExcelHRAndLogisticsInput\r\n  ): Observable<ImportFromExcelHRAndLogisticsOutputDTO> {\r\n    return super.post<ImportEmployeeFromExcelHRAndLogisticsInput, ImportFromExcelHRAndLogisticsOutputDTO>(\r\n      this.standardImportBidtApi.importMaterialFromExcel,\r\n      file\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"90\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ \\\"assetsSelectionDialog.title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"search-dialog-container\\\">\\r\\n      <div class=\\\"section search-criteria-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">{{ \\\"assetsSelectionDialog.searchCriteria\\\" | translate }}</h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <div class=\\\"column\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-radioButton\\r\\n                    inputId=\\\"opt1\\\"\\r\\n                    class=\\\"aw-radio\\\"\\r\\n                    name=\\\"group1\\\"\\r\\n                    value=\\\"asset\\\"\\r\\n                    [(ngModel)]=\\\"radio\\\"\\r\\n                    (click)=\\\"radioButtonClick('asset')\\\"\\r\\n                    label=\\\"{{ 'assetsSelectionDialog.asset' | translate }}\\\"\\r\\n                  >\\r\\n                  </p-radioButton>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-radioButton\\r\\n                    inputId=\\\"opt2\\\"\\r\\n                    class=\\\"aw-radio criteria-radio-margin\\\"\\r\\n                    name=\\\"group1\\\"\\r\\n                    value=\\\"fleet\\\"\\r\\n                    [(ngModel)]=\\\"radio\\\"\\r\\n                    (click)=\\\"radioButtonClick('fleet')\\\"\\r\\n                    label=\\\"{{ 'assetsSelectionDialog.fleet' | translate }}\\\"\\r\\n                  ></p-radioButton>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"radio === component.assetValue\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">{{ \\\"assetsSelectionDialog.assetType\\\" | translate }}</label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"assetTypes\\\"\\r\\n                    [(ngModel)]=\\\"searchObject.assetType\\\"\\r\\n                    (onChange)=\\\"onChangeAssetType($event)\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">{{ \\\"assetsSelectionDialog.familyVariant\\\" | translate }}</label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"familyVariants\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [(ngModel)]=\\\"searchObject.familyVariantCode\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">{{ \\\"assetsSelectionDialog.opStatus\\\" | translate }}</label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"opStatuses\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [(ngModel)]=\\\"searchObject.operationStatus\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"radio === component.assetValue\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{\\r\\n                    (searchObject.assetType === awPropertiesConstants.FAMILY_FUNCTION_AIRCRAFT_KEY\\r\\n                      ? \\\"assetsSelectionDialog.msn\\\"\\r\\n                      : searchObject.assetType === awPropertiesConstants.FAMILY_FUNCTION_ENGINE_KEY\\r\\n                      ? \\\"assetsSelectionDialog.esn\\\"\\r\\n                      : \\\"assetsSelectionDialog.equipmentSn\\\"\\r\\n                    ) | translate\\r\\n                  }}\\r\\n                </label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.snCriteria\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\" *ngIf=\\\"searchObject.assetType !== 'Tool'\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ \\\"assetsSelectionDialog.operator\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control form-control-with-modal\\\">\\r\\n                  <div class=\\\"form-control-data\\\" (click)=\\\"openCustomerQuickSearchDialog()\\\">\\r\\n                    {{ searchObject.operationCriteria }}\\r\\n                  </div>\\r\\n                  <div class=\\\"btn-search-wrapper\\\">\\r\\n                    <i\\r\\n                      class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                      aria-hidden=\\\"true\\\"\\r\\n                      (click)=\\\"openCustomerQuickSearchDialog()\\\"\\r\\n                    ></i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ \\\"assetsSelectionDialog.warehouse\\\" | translate }} </label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"warehouses\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [(ngModel)]=\\\"searchObject.warehouseCriteria\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\" *ngIf=\\\"searchObject.assetType === 'Equipment'\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ \\\"assetsSelectionDialog.function\\\" | translate }} </label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"functions\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [(ngModel)]=\\\"searchObject.assetFunction\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"radio === component.fleetValue\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ \\\"assetsSelectionDialog.fleet\\\" | translate }} </label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"fleets\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [(ngModel)]=\\\"searchObject.fleetType\\\"\\r\\n                    (onChange)=\\\"searchAssets()\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\"></div>\\r\\n\\r\\n              <div class=\\\"form-group\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row search-criteria-footer\\\">\\r\\n              <div class=\\\"search-actions\\\">\\r\\n                <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"searchAssets()\\\">\\r\\n                  <span>{{ \\\"global.toSearch\\\" | translate }}</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"section results-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">\\r\\n          {{ \\\"assetsSelectionDialog.assetsList\\\" | translate }} ({{ assetsTable.list ? assetsTable.list.length : 0 }})\\r\\n        </h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <p-table\\r\\n            [resizableColumns]=\\\"true\\\"\\r\\n            #ptable\\r\\n            class=\\\"aw-table2\\\"\\r\\n            [columns]=\\\"assetsTableCols\\\"\\r\\n            [value]=\\\"assetsTable.list\\\"\\r\\n            [style]=\\\"{ margin: '0 auto', width: '100%' }\\\"\\r\\n            [(selection)]=\\\"selectedAssets\\\"\\r\\n            (onFilter)=\\\"onFilter($event)\\\"\\r\\n            [scrollable]=\\\"true\\\"\\r\\n            scrollHeight=\\\"400px\\\"\\r\\n          >\\r\\n            <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n              <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n              <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                <div class=\\\"lds-hourglass\\\"></div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"caption\\\">\\r\\n              <div class=\\\"aw-table-header\\\">\\r\\n                <div class=\\\"aw-table-global-filter\\\">\\r\\n                  <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                    <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </label>\\r\\n\\r\\n                  <input\\r\\n                    #ptableGlobalFilter\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"aw-table-global-filter-input\\\"\\r\\n                    placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                    (input)=\\\"ptable.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n              <colgroup>\\r\\n                <col style=\\\"width: 3rem; text-align: center;\\\" />\\r\\n                <col *ngFor=\\\"let col of columns\\\" [style.width]=\\\"col.width\\\" />\\r\\n              </colgroup>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n              <tr>\\r\\n                <th class=\\\"aw-table-checkbox-header\\\">\\r\\n                  <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                </th>\\r\\n                <th pResizableColumn *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                  <span *ngSwitchCase=\\\"'equipmentSn'\\\">\\r\\n                    {{\\r\\n                      (searchObject.assetType === awPropertiesConstants.FAMILY_FUNCTION_AIRCRAFT_KEY\\r\\n                        ? \\\"assetsSelectionDialog.msn\\\"\\r\\n                        : searchObject.assetType === awPropertiesConstants.FAMILY_FUNCTION_ENGINE_KEY\\r\\n                        ? \\\"assetsSelectionDialog.esn\\\"\\r\\n                        : \\\"assetsSelectionDialog.equipmentSn\\\"\\r\\n                      ) | translate\\r\\n                    }}\\r\\n                  </span>\\r\\n                  <span *ngSwitchDefault>\\r\\n                    {{ \\\"assetsSelectionDialog\\\" + \\\".\\\" + col.field | translate }}\\r\\n                  </span>\\r\\n                </th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n              <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                  <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                </td>\\r\\n\\r\\n                <td *ngFor=\\\"let col of columns\\\">\\r\\n                  <span> {{ rowData[col.field] }} </span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </p-table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" *ngIf=\\\"!isReadOpenMode\\\" mat-raised-button (click)=\\\"onCancel()\\\">\\r\\n      <i class=\\\"fa fa-fw fa-times\\\" aria-hidden=\\\"true\\\"></i> <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"onValidate()\\\"\\r\\n      [disabled]=\\\"selectedAssets.length === 0\\\"\\r\\n      [ngClass]=\\\"{ inactive: selectedAssets.length === 0 }\\\"\\r\\n    >\\r\\n      <i class=\\\"fa fa-fw fa-check\\\" aria-hidden=\\\"true\\\"></i> <span>{{ \\\"global.validate\\\" | translate }}</span>\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-customer\\r\\n  *ngIf=\\\"showCustomerQuickSearchPopup\\\"\\r\\n  [(display)]=\\\"showCustomerQuickSearchPopup\\\"\\r\\n  [customer-code]=\\\"searchObject.operationCriteria\\\"\\r\\n  (onSelected)=\\\"setSelectedBusinessPartner($event)\\\"\\r\\n>\\r\\n</aw-dialog-search-customer>\\r\\n\"","module.exports = \":host .form-group {\\n  margin-right: 30px;\\n  width: 30%;\\n  margin-top: 0px; }\\n  :host .form-group:last-of-type {\\n    margin-right: 0; }\\n  :host .search-criteria-primary .aw-button-level3 {\\n  font-size: 0.9rem;\\n  max-height: 30px;\\n  min-height: 30px;\\n  min-width: 50px; }\\n  :host .dialog-panel-result {\\n  margin-top: 25px; }\\n  :host .panel-result-footer {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  margin-top: 30px; }\\n  :host .search-action-right {\\n  text-align: right; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9nLWFzc2V0cy1zZWxlY3Rpb24vRDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxmcm9udGVuZF9hZXJvd2ViYi9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxkaWFsb2ctYXNzZXRzLXNlbGVjdGlvblxcYXNzZXRzLXNlbGVjdGlvbi1kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLGVBQWUsRUFBQTtFQUpuQjtJQU1NLGVBQWUsRUFBQTtFQU5yQjtFQVdNLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGVBQWUsRUFBQTtFQWRyQjtFQWtCSSxnQkFBZ0IsRUFBQTtFQWxCcEI7RUFzQkksYUFBYTtFQUNiLG1CQUFtQjtFQUNuQiw4QkFBOEI7RUFDOUIsZ0JBQWdCLEVBQUE7RUF6QnBCO0VBNkJJLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9nLWFzc2V0cy1zZWxlY3Rpb24vYXNzZXRzLXNlbGVjdGlvbi1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgICY6bGFzdC1vZi10eXBlIHtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgfVxyXG4gIH1cclxuICAuc2VhcmNoLWNyaXRlcmlhLXByaW1hcnkge1xyXG4gICAgLmF3LWJ1dHRvbi1sZXZlbDMge1xyXG4gICAgICBmb250LXNpemU6IDAuOXJlbTtcclxuICAgICAgbWF4LWhlaWdodDogMzBweDtcclxuICAgICAgbWluLWhlaWdodDogMzBweDtcclxuICAgICAgbWluLXdpZHRoOiA1MHB4O1xyXG4gICAgfVxyXG4gIH1cclxuICAuZGlhbG9nLXBhbmVsLXJlc3VsdCB7XHJcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xyXG4gIH1cclxuXHJcbiAgLnBhbmVsLXJlc3VsdC1mb290ZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gIH1cclxuXHJcbiAgLnNlYXJjaC1hY3Rpb24tcmlnaHQge1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { AWPropertiesConstants } from '../../../shared/constants/aw-properties-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { FindAssetListConfigurationEventDTO } from '../../../shared/types/api-input-types/fleet-data-exchange/find-asset-list-configuration-event-dto.interface';\r\nimport { FindAssetListInput } from '../../../shared/types/api-input-types/fleet-data-exchange/find-asset-list-input.interface';\r\nimport { BidoCustomerDTO } from '../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { DialogComponent } from '../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\n\r\nimport { AssetsSelectionDialogService } from './assets-selection-dialog.service';\r\n\r\n@Component({\r\n  selector: 'aw-assets-selection-dialog',\r\n  templateUrl: './assets-selection-dialog.component.html',\r\n  styleUrls: ['./assets-selection-dialog.component.scss']\r\n})\r\nexport class AssetsSelectionDialogComponent extends DialogComponent {\r\n  public static readonly assetValue: string = 'asset';\r\n  public static readonly fleetValue: string = 'fleet';\r\n\r\n  public readonly component: typeof AssetsSelectionDialogComponent;\r\n  public readonly awPropertiesConstants: typeof AWPropertiesConstants;\r\n\r\n  @Input()\r\n  public showAssetsSelectionDialog: boolean;\r\n\r\n  @Output()\r\n  public onSelected = new EventEmitter<FindAssetListConfigurationEventDTO[]>();\r\n\r\n  public showCustomerQuickSearchPopup: boolean;\r\n  public displayValue: boolean;\r\n\r\n  public minimize: boolean;\r\n\r\n  public isLoading: boolean;\r\n\r\n  public radio: string;\r\n  public oldRadioValue: string;\r\n  public searchObject: FindAssetListInput;\r\n\r\n  public assetTypes: LabelValue<string>[];\r\n  public familyVariants: LabelValue<string>[];\r\n  public opStatuses: LabelValue<string>[];\r\n  public warehouses: LabelValue<string>[];\r\n  public functions: LabelValue<string>[];\r\n  public fleets: LabelValue<string>[];\r\n\r\n  public totalFilteredRows: number;\r\n  public assetsTableCols: TableColumn[];\r\n  public assetsTable: SearchResultsDTO<FindAssetListConfigurationEventDTO>;\r\n  public selectedAssets: FindAssetListConfigurationEventDTO[];\r\n\r\n  public constructor(\r\n    private readonly assetSelectionDialogService: AssetsSelectionDialogService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'assetsSelectionDialog');\r\n    this.component = AssetsSelectionDialogComponent;\r\n    this.awPropertiesConstants = AWPropertiesConstants;\r\n\r\n    this.showCustomerQuickSearchPopup = false;\r\n    this.displayChange = new EventEmitter<boolean>();\r\n\r\n    this.minimize = false;\r\n    this.radio = this.component.assetValue;\r\n    this.oldRadioValue = this.component.assetValue;\r\n    this.searchObject = {};\r\n\r\n    this.assetTypes = [];\r\n    this.familyVariants = [];\r\n    this.opStatuses = [];\r\n    this.warehouses = [];\r\n    this.functions = [];\r\n    this.fleets = [];\r\n\r\n    this.assetsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n    this.totalFilteredRows = 0;\r\n    this.selectedAssets = [];\r\n\r\n    this.assetsTableCols = [\r\n      { field: 'equipmentText', width: '250px' },\r\n      { field: 'equipmentFamilyVariantCode', width: '100px' },\r\n      { field: 'equipmentRegistration', width: '100px' },\r\n      { field: 'equipmentPn', width: '100px' },\r\n      { field: 'equipmentDesignation', width: '110px' },\r\n      { field: 'equipmentFunction', width: '90px' },\r\n      { field: 'equipmentSn', width: '100px' },\r\n      { field: 'equipmentSupAsset', width: '110px' },\r\n      { field: 'equipmentOwner', width: '90px' },\r\n      { field: 'equipmentOperator', width: '90px' },\r\n      { field: 'equipmentLocation', width: '90px' }, // to be added in backend\r\n      { field: 'equipmentOperationalStatus', width: '150px' },\r\n      { field: 'equipmentCode', width: '150px' }\r\n    ];\r\n\r\n    this.loadDropdowns();\r\n\r\n    this.isLoading = false;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onFilter(event: any): void {\r\n    this.totalFilteredRows = event.filteredValue.length;\r\n  }\r\n\r\n  // Fetching Dropdown data\r\n  public loadDropdowns(): void {\r\n    // Asset type dropdown\r\n    this.assetSelectionDialogService.getAssetTypeList().subscribe((results) => {\r\n      this.assetTypes = results || [];\r\n      this.searchObject.assetType = this.assetTypes[0].value;\r\n      this.hitFamilyVariantDropdownApi(this.searchObject.assetType);\r\n      this.hitOperationalStatusDropdownApi(this.searchObject.assetType);\r\n    });\r\n\r\n    // Warehouse dropdown\r\n    this.assetSelectionDialogService.getWarehouseDropdownList().subscribe((results) => {\r\n      this.warehouses = results || [];\r\n    });\r\n\r\n    // Function dropdown\r\n    this.assetSelectionDialogService.getFunctionList().subscribe((results) => {\r\n      this.functions = results || [];\r\n    });\r\n\r\n    // Fleet dropdown\r\n    this.assetSelectionDialogService.getBidoFleetsBySearchCriteria({}).subscribe((result) => {\r\n      result.list.forEach((bidoFleetDTO) => {\r\n        const fleet: LabelValue<string> = {\r\n          label: !!bidoFleetDTO.fleetName\r\n            ? `${bidoFleetDTO.fleetCode} - ${bidoFleetDTO.fleetName}`\r\n            : (bidoFleetDTO.fleetCode as string),\r\n          value: bidoFleetDTO.fleetId as string\r\n        };\r\n        this.fleets.push(fleet);\r\n      });\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onChangeAssetType(event: any) {\r\n    if (event.value === '' || !this.notUndefinedAndNull(event.value)) {\r\n      // Family variant dropdown\r\n      this.hitFamilyVariantDropdownApi(event.value);\r\n      this.hitOperationalStatusDropdownApi(event.value);\r\n    }\r\n  }\r\n\r\n  private hitFamilyVariantDropdownApi(assetType: string) {\r\n    this.assetSelectionDialogService.getFamilyVariantList(assetType).subscribe((results) => {\r\n      this.familyVariants = results || [];\r\n    });\r\n  }\r\n\r\n  private hitOperationalStatusDropdownApi(assetType: string) {\r\n    this.assetSelectionDialogService.getOperationalStatusList(assetType).subscribe((results) => {\r\n      this.opStatuses = results || [];\r\n    });\r\n  }\r\n\r\n  private notUndefinedAndNull(property: string): boolean {\r\n    const value = property !== undefined && property !== null ? false : true;\r\n\r\n    return value;\r\n  }\r\n\r\n  public onCancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public onValidate(): void {\r\n    this.onSelected.emit(this.selectedAssets);\r\n    this.display = false;\r\n  }\r\n\r\n  public openCustomerQuickSearchDialog(): void {\r\n    this.showCustomerQuickSearchPopup = true;\r\n  }\r\n\r\n  public resetSearchCriteria(): void {\r\n    this.radio = this.component.assetValue;\r\n    this.searchObject.assetType = this.assetTypes[0].label;\r\n    this.hitFamilyVariantDropdownApi(this.assetTypes[0].value);\r\n    this.searchObject = {};\r\n  }\r\n\r\n  public searchAssets(): void {\r\n    this.minimize = true;\r\n    this.isLoading = true;\r\n\r\n    this.assetSelectionDialogService.findAssetList(this.searchObject).subscribe((results) => {\r\n      this.assetsTable = results;\r\n      this.totalFilteredRows = this.assetsTable.list.length;\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  public radioButtonClick(newRadioValue: string) {\r\n    if (this.oldRadioValue !== newRadioValue) {\r\n      this.searchObject = {};\r\n      if (newRadioValue === this.component.assetValue) {\r\n        this.searchObject.assetType = AWPropertiesConstants.FAMILY_FUNCTION_AIRCRAFT_KEY;\r\n      }\r\n      this.oldRadioValue = newRadioValue;\r\n      this.radio = newRadioValue;\r\n      this.assetsTable.list = [];\r\n    }\r\n  }\r\n\r\n  public setSelectedBusinessPartner(event: BidoCustomerDTO): void {\r\n    if (Object.keys(event).length === 0) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n    this.searchObject.operationCriteria = event.customerCode;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { TableModule } from 'primeng/table';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { DialogSearchCustomerModule } from '../dialog-search-customer/dialog-search-customer.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\n\r\nimport { AssetsSelectionDialogComponent } from './assets-selection-dialog.component';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  CalendarModule,\r\n  InputTextareaModule,\r\n  TableModule,\r\n  DropdownModule,\r\n  RadioButtonModule,\r\n  OverlayPanelModule,\r\n  MessageModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [DialogSearchCustomerModule, ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [AssetsSelectionDialogComponent];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ]\r\n})\r\nexport class AssetsSelectionDialogModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtWarehouseApi } from '../../../shared/api/bidt-warehouse.api';\r\nimport { FleetManagementApi } from '../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { FindAssetListConfigurationEventDTO } from '../../../shared/types/api-input-types/fleet-data-exchange/find-asset-list-configuration-event-dto.interface';\r\nimport { FindAssetListInput } from '../../../shared/types/api-input-types/fleet-data-exchange/find-asset-list-input.interface';\r\nimport { BidoFleetDTO } from '../../../shared/types/api-types/bido-fleet-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AssetsSelectionDialogService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n\r\n    private readonly bidtWarehouseApi: BidtWarehouseApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  /***********************************\r\n   * Asset(s) Selection popup services\r\n   ***********************************/\r\n\r\n  public getWarehouseDropdownList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.bidtWarehouseApi.getWarehouses);\r\n  }\r\n\r\n  public getBidoFleetsBySearchCriteria(criteria: BidoFleetDTO): Observable<SearchResultsDTO<BidoFleetDTO>> {\r\n    return super.post<BidoFleetDTO, SearchResultsDTO<BidoFleetDTO>>(\r\n      this.fleetManagementApi.findBidoFleetsBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public getAssetTypeList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.fleetManagementApi.initializeAssetTypeList);\r\n  }\r\n\r\n  public getFunctionList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.fleetManagementApi.initializeFunctionList);\r\n  }\r\n\r\n  public getFamilyVariantList(assetType: string): Observable<LabelValue<string>[]> {\r\n    return super.post<string, LabelValue<string>[]>(\r\n      this.productStructureManagementApi.initializeFamilyVariantList,\r\n      assetType\r\n    );\r\n  }\r\n\r\n  public findAssetList(input: FindAssetListInput): Observable<SearchResultsDTO<FindAssetListConfigurationEventDTO>> {\r\n    return super.post<FindAssetListInput, SearchResultsDTO<FindAssetListConfigurationEventDTO>>(\r\n      this.fleetManagementApi.findAssetList,\r\n      input\r\n    );\r\n  }\r\n\r\n  public getOperationalStatusList(assetType: string): Observable<LabelValue<string>[]> {\r\n    return super.post<string, LabelValue<string>[]>(\r\n      this.productStructureManagementApi.initializeOperationalStatusList,\r\n      assetType\r\n    );\r\n  }\r\n}\r\n","import * as FileSaver from 'file-saver';\r\n\r\nimport { NumberUtils } from './number-utils';\r\n\r\nexport class FileUtils {\r\n  public static readonly KIBIOCTET: number = 1024;\r\n  public static readonly KILOOCTET: number = 1000;\r\n\r\n  public static downloadFile(file: Uint8Array | undefined, fileName: string | undefined): void {\r\n    if (!!file && !!fileName) {\r\n      const byteCharacters = atob(file.toString());\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n\r\n      FileSaver.saveAs(new Blob([new Uint8Array(byteNumbers)]), fileName);\r\n    }\r\n  }\r\n\r\n  public static getExtension(fileName: string | undefined): string {\r\n    return !!fileName && fileName.includes('.') ? fileName.substring(fileName.lastIndexOf('.') + 1) : '';\r\n  }\r\n\r\n  public static getFileContentAsBase64(file: File | undefined, callback: (fileContent: Uint8Array) => void): void {\r\n    if (!!file) {\r\n      const reader: FileReader = new FileReader();\r\n      reader.onloadend = () => {\r\n        let fileContent: any = reader.result; // tslint:disable-line:no-any\r\n        fileContent = fileContent.substring((fileContent.indexOf(',') as number) + 1); // Remove data:*/*;base64,\r\n        callback(fileContent);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  public static getFormattedSize(size: number | undefined): string {\r\n    if (!!size) {\r\n      return size / FileUtils.KILOOCTET < FileUtils.KILOOCTET\r\n        ? `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET)} Ko`\r\n        : `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET / FileUtils.KILOOCTET)} Mo`;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}