{"version":3,"sources":["webpack:///./node_modules/primeng/components/overlaypanel/overlaypanel.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,mBAAmB,mBAAO,CAAC,8EAAmB;AAC9C,mBAAmB,mBAAO,CAAC,mFAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kMAAkM,2BAA2B,0FAA0F;AACvT;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,uFAAuF,sBAAsB;AAC7G,uFAAuF,sBAAsB;AAC7G;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,wC","file":"default~administration-administration-module~administration-attributes-attributes-module~collaborati~9d07f8cf.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar animations_1 = require(\"@angular/animations\");\nvar OverlayPanel = /** @class */ (function () {\n    function OverlayPanel(el, renderer, cd, zone) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.zone = zone;\n        this.dismissable = true;\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.showTransitionOptions = '225ms ease-out';\n        this.hideTransitionOptions = '195ms ease-in';\n        this.onShow = new core_1.EventEmitter();\n        this.onHide = new core_1.EventEmitter();\n        this.visible = false;\n    }\n    OverlayPanel.prototype.bindDocumentClickListener = function () {\n        var _this = this;\n        if (!this.documentClickListener && this.dismissable) {\n            this.zone.runOutsideAngular(function () {\n                var documentEvent = domhandler_1.DomHandler.isIOS() ? 'touchstart' : 'click';\n                _this.documentClickListener = _this.renderer.listen('document', documentEvent, function (event) {\n                    if (!_this.container.contains(event.target) && _this.target !== event.target && !_this.target.contains(event.target)) {\n                        _this.zone.run(function () {\n                            _this.hide();\n                        });\n                    }\n                    _this.cd.markForCheck();\n                });\n            });\n        }\n    };\n    OverlayPanel.prototype.unbindDocumentClickListener = function () {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    };\n    OverlayPanel.prototype.toggle = function (event, target) {\n        var _this = this;\n        if (this.visible) {\n            this.visible = false;\n            if (this.hasTargetChanged(event, target)) {\n                this.target = target || event.currentTarget || event.target;\n                setTimeout(function () {\n                    _this.visible = true;\n                }, 200);\n            }\n        }\n        else {\n            this.show(event, target);\n        }\n    };\n    OverlayPanel.prototype.show = function (event, target) {\n        this.target = target || event.currentTarget || event.target;\n        this.visible = true;\n    };\n    OverlayPanel.prototype.hasTargetChanged = function (event, target) {\n        return this.target != null && this.target !== (target || event.currentTarget || event.target);\n    };\n    OverlayPanel.prototype.appendContainer = function () {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.container);\n            else\n                domhandler_1.DomHandler.appendChild(this.container, this.appendTo);\n        }\n    };\n    OverlayPanel.prototype.restoreAppend = function () {\n        if (this.container && this.appendTo) {\n            this.el.nativeElement.appendChild(this.container);\n        }\n    };\n    OverlayPanel.prototype.onAnimationStart = function (event) {\n        switch (event.toState) {\n            case 'visible':\n                this.container = event.element;\n                this.onShow.emit(null);\n                this.appendContainer();\n                if (this.autoZIndex) {\n                    this.container.style.zIndex = String(this.baseZIndex + (++domhandler_1.DomHandler.zindex));\n                }\n                domhandler_1.DomHandler.absolutePosition(this.container, this.target);\n                if (domhandler_1.DomHandler.getOffset(this.container).top < domhandler_1.DomHandler.getOffset(this.target).top) {\n                    domhandler_1.DomHandler.addClass(this.container, 'ui-overlaypanel-flipped');\n                }\n                if (domhandler_1.DomHandler.getOffset(this.container).left < domhandler_1.DomHandler.getOffset(this.target).left &&\n                    domhandler_1.DomHandler.getOffset(this.container).left > 0) {\n                    domhandler_1.DomHandler.addClass(this.container, 'ui-overlaypanel-shifted');\n                }\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                break;\n            case 'void':\n                this.onContainerDestroy();\n                this.onHide.emit({});\n                break;\n        }\n    };\n    OverlayPanel.prototype.hide = function () {\n        this.visible = false;\n    };\n    OverlayPanel.prototype.onCloseClick = function (event) {\n        this.hide();\n        event.preventDefault();\n    };\n    OverlayPanel.prototype.onWindowResize = function (event) {\n        this.hide();\n    };\n    OverlayPanel.prototype.bindDocumentResizeListener = function () {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    };\n    OverlayPanel.prototype.unbindDocumentResizeListener = function () {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    };\n    OverlayPanel.prototype.onContainerDestroy = function () {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n    };\n    OverlayPanel.prototype.ngOnDestroy = function () {\n        this.target = null;\n        if (this.container) {\n            this.restoreAppend();\n            this.onContainerDestroy();\n        }\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], OverlayPanel.prototype, \"dismissable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], OverlayPanel.prototype, \"showCloseIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], OverlayPanel.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], OverlayPanel.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], OverlayPanel.prototype, \"appendTo\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], OverlayPanel.prototype, \"autoZIndex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], OverlayPanel.prototype, \"baseZIndex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], OverlayPanel.prototype, \"showTransitionOptions\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], OverlayPanel.prototype, \"hideTransitionOptions\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], OverlayPanel.prototype, \"onShow\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], OverlayPanel.prototype, \"onHide\", void 0);\n    OverlayPanel = __decorate([\n        core_1.Component({\n            selector: 'p-overlayPanel',\n            template: \"\\n        <div [ngClass]=\\\"'ui-overlaypanel ui-widget ui-widget-content ui-corner-all ui-shadow'\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\"\\n            [@animation]=\\\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\\\" (@animation.start)=\\\"onAnimationStart($event)\\\" *ngIf=\\\"visible\\\">\\n            <div class=\\\"ui-overlaypanel-content\\\">\\n                <ng-content></ng-content>\\n            </div>\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"showCloseIcon\\\" class=\\\"ui-overlaypanel-close ui-state-default\\\" (click)=\\\"onCloseClick($event)\\\" (keydown.enter)=\\\"hide()\\\">\\n                <span class=\\\"ui-overlaypanel-close-icon pi pi-times\\\"></span>\\n            </a>\\n        </div>\\n    \",\n            animations: [\n                animations_1.trigger('animation', [\n                    animations_1.state('void', animations_1.style({\n                        transform: 'translateY(5%)',\n                        opacity: 0\n                    })),\n                    animations_1.state('visible', animations_1.style({\n                        transform: 'translateY(0)',\n                        opacity: 1\n                    })),\n                    animations_1.transition('void => visible', animations_1.animate('{{showTransitionParams}}')),\n                    animations_1.transition('visible => void', animations_1.animate('{{hideTransitionParams}}'))\n                ])\n            ]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.Renderer2, core_1.ChangeDetectorRef, core_1.NgZone])\n    ], OverlayPanel);\n    return OverlayPanel;\n}());\nexports.OverlayPanel = OverlayPanel;\nvar OverlayPanelModule = /** @class */ (function () {\n    function OverlayPanelModule() {\n    }\n    OverlayPanelModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [OverlayPanel],\n            declarations: [OverlayPanel]\n        })\n    ], OverlayPanelModule);\n    return OverlayPanelModule;\n}());\nexports.OverlayPanelModule = OverlayPanelModule;\n//# sourceMappingURL=overlaypanel.js.map"],"sourceRoot":""}