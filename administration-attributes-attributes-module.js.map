{"version":3,"sources":["webpack:///./node_modules/primeng/components/inputtextarea/inputtextarea.js","webpack:///./node_modules/primeng/components/radiobutton/radiobutton.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./node_modules/primeng/inputtextarea.js","webpack:///./src/app/main/administration/attributes/attributes.module.ts","webpack:///./src/app/main/administration/attributes/form/attribute-form-list-popup/attribute-form-list-popup.component.html","webpack:///./src/app/main/administration/attributes/form/attribute-form-list-popup/attribute-form-list-popup.component.ts","webpack:///./src/app/main/administration/attributes/form/attributes-form.component.html","webpack:///./src/app/main/administration/attributes/form/attributes-form.component.scss","webpack:///./src/app/main/administration/attributes/form/attributes-form.component.ts","webpack:///./src/app/main/administration/attributes/form/attributes-form.service.ts","webpack:///./src/app/main/administration/attributes/search/attributes-search.component.html","webpack:///./src/app/main/administration/attributes/search/attributes-search.component.scss","webpack:///./src/app/main/administration/attributes/search/attributes-search.component.ts","webpack:///./src/app/main/administration/attributes/search/attributes-search.service.ts","webpack:///./src/app/shared/utils/array-utils.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,cAAc,mBAAO,CAAC,oEAAgB;AACtC,eAAe,mBAAO,CAAC,uEAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,yC;;;;;;;;;;;;ACrHa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,cAAc,mBAAO,CAAC,oEAAgB;AACtC;AACA;AACA,gDAAgD,oBAAoB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+kBAA+kB,0JAA0J,mFAAmF,6BAA6B,gJAAgJ,kHAAkH,yDAAyD,OAAO;AAC3pC;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,uC;;;;;;;;;;;;ACtJA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sGAAoC,G;;;;;;;;;;;;ACNrD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kHAA0C,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNlB;AACS;AACA;AACA;AACI;AACM;AACF;AACF;AACE;AACQ;AAClB;AAEyC;AACqB;AAC7B;AACe;AACkB;AACtC;AACA;AACkC;AAES;AAC5C;AACJ;AACU;AACJ;AAG7E;;+EAE+E;AAE/E,IAAM,gBAAgB,GAAG;IACvB,+DAAc;IACd,+DAAc;IACd,+DAAc;IACd,mEAAgB;IAChB,yEAAmB;IACnB,uEAAkB;IAClB,yDAAkB;IAClB,8DAAa;IACb,uEAAkB;IAClB,qEAAiB;CAClB,CAAC;AAEF,IAAM,gBAAgB,GAAG,CAAC,sGAAiB,EAAE,wHAAuB,EAAE,kFAAW,EAAE,kFAAW,CAAC,CAAC;AAEhG;;+EAE+E;AAE/E,IAAM,UAAU,GAAG,CAAC,oIAA+B,CAAC,CAAC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","file":"administration-attributes-attributes-module.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar common_1 = require(\"@angular/common\");\nvar InputTextarea = /** @class */ (function () {\n    function InputTextarea(el, ngModel) {\n        this.el = el;\n        this.ngModel = ngModel;\n        this.onResize = new core_1.EventEmitter();\n    }\n    InputTextarea.prototype.ngDoCheck = function () {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize();\n        }\n    };\n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    InputTextarea.prototype.onInput = function (e) {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.updateFilledState = function () {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    };\n    InputTextarea.prototype.onFocus = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.onBlur = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.resize = function (event) {\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n        this.onResize.emit(event || {});\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], InputTextarea.prototype, \"autoResize\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], InputTextarea.prototype, \"onResize\", void 0);\n    __decorate([\n        core_1.HostListener('input', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onInput\", null);\n    __decorate([\n        core_1.HostListener('focus', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onFocus\", null);\n    __decorate([\n        core_1.HostListener('blur', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onBlur\", null);\n    InputTextarea = __decorate([\n        core_1.Directive({\n            selector: '[pInputTextarea]',\n            host: {\n                '[class.ui-inputtext]': 'true',\n                '[class.ui-corner-all]': 'true',\n                '[class.ui-inputtextarea-resizable]': 'autoResize',\n                '[class.ui-state-default]': 'true',\n                '[class.ui-widget]': 'true',\n                '[class.ui-state-filled]': 'filled'\n            }\n        }),\n        __param(1, core_1.Optional()),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, forms_1.NgModel])\n    ], InputTextarea);\n    return InputTextarea;\n}());\nexports.InputTextarea = InputTextarea;\nvar InputTextareaModule = /** @class */ (function () {\n    function InputTextareaModule() {\n    }\n    InputTextareaModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [InputTextarea],\n            declarations: [InputTextarea]\n        })\n    ], InputTextareaModule);\n    return InputTextareaModule;\n}());\nexports.InputTextareaModule = InputTextareaModule;\n//# sourceMappingURL=inputtextarea.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar forms_1 = require(\"@angular/forms\");\nexports.RADIO_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return RadioButton; }),\n    multi: true\n};\nvar RadioButton = /** @class */ (function () {\n    function RadioButton(cd) {\n        this.cd = cd;\n        this.onClick = new core_1.EventEmitter();\n        this.onFocus = new core_1.EventEmitter();\n        this.onBlur = new core_1.EventEmitter();\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n    }\n    RadioButton.prototype.handleClick = function (event, radioButton, focus) {\n        event.preventDefault();\n        if (this.disabled) {\n            return;\n        }\n        this.select(event);\n        if (focus) {\n            radioButton.focus();\n        }\n    };\n    RadioButton.prototype.select = function (event) {\n        if (!this.disabled) {\n            this.inputViewChild.nativeElement.checked = true;\n            this.checked = true;\n            this.onModelChange(this.value);\n            this.onClick.emit(event);\n        }\n    };\n    RadioButton.prototype.writeValue = function (value) {\n        this.checked = (value == this.value);\n        if (this.inputViewChild.nativeElement) {\n            this.inputViewChild.nativeElement.checked = this.checked;\n        }\n        this.cd.markForCheck();\n    };\n    RadioButton.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    RadioButton.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    RadioButton.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    RadioButton.prototype.onInputFocus = function (event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    };\n    RadioButton.prototype.onInputBlur = function (event) {\n        this.focused = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    };\n    RadioButton.prototype.onChange = function (event) {\n        this.select(event);\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], RadioButton.prototype, \"value\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], RadioButton.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RadioButton.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], RadioButton.prototype, \"label\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], RadioButton.prototype, \"tabindex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], RadioButton.prototype, \"inputId\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], RadioButton.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], RadioButton.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], RadioButton.prototype, \"labelStyleClass\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], RadioButton.prototype, \"onClick\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], RadioButton.prototype, \"onFocus\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], RadioButton.prototype, \"onBlur\", void 0);\n    __decorate([\n        core_1.ViewChild('rb'),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], RadioButton.prototype, \"inputViewChild\", void 0);\n    RadioButton = __decorate([\n        core_1.Component({\n            selector: 'p-radioButton',\n            template: \"\\n        <div [ngStyle]=\\\"style\\\" [ngClass]=\\\"'ui-radiobutton ui-widget'\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #rb type=\\\"radio\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" [attr.value]=\\\"value\\\" [attr.tabindex]=\\\"tabindex\\\" \\n                    [checked]=\\\"checked\\\" (change)=\\\"onChange($event)\\\" (focus)=\\\"onInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\" [disabled]=\\\"disabled\\\">\\n            </div>\\n            <div (click)=\\\"handleClick($event, rb, true)\\\"\\n                [ngClass]=\\\"{'ui-radiobutton-box ui-widget ui-state-default':true,\\n                'ui-state-active':rb.checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\\\">\\n                <span class=\\\"ui-radiobutton-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-circle-on':rb.checked}\\\"></span>\\n            </div>\\n        </div>\\n        <label (click)=\\\"select($event)\\\" [class]=\\\"labelStyleClass\\\"\\n            [ngClass]=\\\"{'ui-radiobutton-label':true, 'ui-label-active':rb.checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\\\"\\n            *ngIf=\\\"label\\\" [attr.for]=\\\"inputId\\\">{{label}}</label>\\n    \",\n            providers: [exports.RADIO_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\n    ], RadioButton);\n    return RadioButton;\n}());\nexports.RadioButton = RadioButton;\nvar RadioButtonModule = /** @class */ (function () {\n    function RadioButtonModule() {\n    }\n    RadioButtonModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [RadioButton],\n            declarations: [RadioButton]\n        })\n    ], RadioButtonModule);\n    return RadioButtonModule;\n}());\nexports.RadioButtonModule = RadioButtonModule;\n//# sourceMappingURL=radiobutton.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputtextarea/inputtextarea\"));","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { DialogTableModule } from '../../../shared/components/dialog-table/dialog-table.module';\r\nimport { DynamicAttributesModule } from '../../../shared/components/dynamic-attributes/dynamic-attributes.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { AttributeFormListPopupComponent } from './form/attribute-form-list-popup/attribute-form-list-popup.component';\r\nimport { AttributesFormComponent } from './form/attributes-form.component';\r\nimport { AttributesFormService } from './form/attributes-form.service';\r\nimport { AttributesSearchComponent } from './search/attributes-search.component';\r\nimport { AttributesSearchService } from './search/attributes-search.service';\r\n\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DropdownModule,\r\n  FileUploadModule,\r\n  InputTextareaModule,\r\n  OverlayPanelModule,\r\n  PrimeNgTableModule,\r\n  TooltipModule,\r\n  SelectButtonModule,\r\n  RadioButtonModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [DialogTableModule, DynamicAttributesModule, ModalModule, TableModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [AttributeFormListPopupComponent];\r\n\r\nconst DYNAMIC_COMPONENTS = [AttributesSearchComponent, AttributesFormComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [AttributesSearchService, AttributesFormService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class AttributesModule { }\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".valuetitle\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n  <a-content>\\r\\n    <div class=\\\"search-dialog-container\\\">\\r\\n      <div class=\\\"section search-criteria-section\\\">\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--12\\\">\\r\\n            <div class=\\\"grid-row\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".textEn\\\" | translate }}</label>\\r\\n                <div class=\\\"form-control \\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"isReadOpenMode\\\" [(ngModel)]=\\\"attributeValue.textEn\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-row\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".textFr\\\" | translate }} </label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"isReadOpenMode\\\" [(ngModel)]=\\\"attributeValue.textFr\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"checkEmpty()\\\" (click)=\\\"validate()\\\">\\r\\n      <span>{{ \\\"global.validate\\\" | translate }}</span>\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { AttributeValueDTO } from '../../../../../shared/types/api-types/attribute-value-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { StringUtils } from '../../../../../shared/utils/string-utils';\r\n\r\n@Component({\r\n  selector: 'aw-attribute-form-list-popup',\r\n  templateUrl: './attribute-form-list-popup.component.html'\r\n})\r\nexport class AttributeFormListPopupComponent extends DialogComponent implements OnInit {\r\n  public attributeValue: AttributeValueDTO;\r\n\r\n  @Input('attributeValue')\r\n  public set setEngineeringData(attributeValueDTO: AttributeValueDTO) {\r\n    if (!!attributeValueDTO) {\r\n      this.attributeValue = attributeValueDTO;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Output()\r\n  public onValidated: EventEmitter<AttributeValueDTO>;\r\n\r\n  public selectedType: string;\r\n\r\n  public constructor(public sessionService: SessionService, public messageService: MessageService) {\r\n    super(ComponentOpenMode.Read, 'AttributeFormListPopupComponent');\r\n    this.onValidated = new EventEmitter<AttributeValueDTO>();\r\n    this.setDefaultValue();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n  }\r\n\r\n  public checkEmpty(): boolean {\r\n    return (\r\n      StringUtils.isNullOrEmpty(this.attributeValue.textEn) || StringUtils.isNullOrEmpty(this.attributeValue.textFr)\r\n    );\r\n  }\r\n\r\n  public validate() {\r\n    if (!!this.attributeValue) {\r\n      this.onValidated.emit(this.attributeValue);\r\n      this.closeDialog();\r\n    }\r\n  }\r\n\r\n  private setDefaultValue() {\r\n    this.attributeValue = {\r\n      attributeId: '',\r\n      attributeValue: '',\r\n      textEn: '',\r\n      textFr: ''\r\n    };\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ pageSubtitle }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight && isSaveRequired\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"edit()\\\"\\r\\n    >\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancel()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"saving\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"refresh()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ componentName + \\\".mainInformation\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"row flex--2\\\">\\r\\n                            <div class=\\\"form-group form-group-type\\\">\\r\\n                              <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n\\r\\n                              <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                                <p-selectButton\\r\\n                                  [(ngModel)]=\\\"selectedAttributeCategory\\\"\\r\\n                                  [options]=\\\"searchCategoryList\\\"\\r\\n                                  (onChange)=\\\"checkAttributeCategory()\\\"\\r\\n                                  [disabled]=\\\"!enableSelectButton\\\"\\r\\n                                ></p-selectButton>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group flex--2\\\">\\r\\n                            <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n\\r\\n                            <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                              <p-selectButton\\r\\n                                [(ngModel)]=\\\"selectedValueType\\\"\\r\\n                                [options]=\\\"valueTypeList\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode || attributesFormsInput.isStandard\\\"\\r\\n                              ></p-selectButton>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"column\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group form-group-category\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ componentData.componentId + \\\".category\\\" | translate }}</label\\r\\n                              >\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-dropdown\\r\\n                                  class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                  [(ngModel)]=\\\"attributesFormsInput.attributeCategory\\\"\\r\\n                                  placeholder=\\\"&nbsp;\\\"\\r\\n                                  [options]=\\\"isEngineering ? engineeringCategoryList : fleetCategoryList\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode || isWriteOpenMode\\\"\\r\\n                                ></p-dropdown>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group \\\" [ngClass]=\\\"{ required: isCreateOpenMode }\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ componentData.componentId + \\\".nameEn\\\" | translate }}\\r\\n                              </label>\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode || isWriteOpenMode\\\"\\r\\n                                  [(ngModel)]=\\\"attributesFormsInput.attributeNameEn\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group \\\" [ngClass]=\\\"{ required: isCreateOpenMode }\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ componentData.componentId + \\\".nameFr\\\" | translate }}\\r\\n                              </label>\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode || isWriteOpenMode\\\"\\r\\n                                  [(ngModel)]=\\\"attributesFormsInput.attributeNameFr\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ componentData.componentId + \\\".descriptionEn\\\" | translate }}\\r\\n                              </label>\\r\\n                              <div class=\\\"form-control text-area\\\">\\r\\n                                <textarea\\r\\n                                  class=\\\"aw-textarea\\\"\\r\\n                                  [rows]=\\\"3\\\"\\r\\n                                  pInputTextarea\\r\\n                                  autoResize=\\\"autoResize\\\"\\r\\n                                  [(ngModel)]=\\\"attributesFormsInput.attributeDescriptionEn\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode || attributesFormsInput.isStandard\\\"\\r\\n                                ></textarea>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ componentData.componentId + \\\".descriptionFr\\\" | translate }}\\r\\n                              </label>\\r\\n                              <div class=\\\"form-control text-area\\\">\\r\\n                                <textarea\\r\\n                                  class=\\\"aw-textarea\\\"\\r\\n                                  [rows]=\\\"3\\\"\\r\\n                                  pInputTextarea\\r\\n                                  autoResize=\\\"autoResize\\\"\\r\\n                                  [(ngModel)]=\\\"attributesFormsInput.attributeDescriptionFr\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode || attributesFormsInput.isStandard\\\"\\r\\n                                ></textarea>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"row\\\"></div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"showValuesManagement()\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".valueTitle\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".importTitle\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\" *ngIf=\\\"!isCreateOpenMode\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\"></label>\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <span\\r\\n                              (click)=\\\"openTemplate(loadTemplate())\\\"\\r\\n                              style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n                            >\\r\\n                              {{ loadTemplate() }}\\r\\n                            </span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".fileToImport\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <label class=\\\"form-label\\\"> </label>\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"fileName\\\"\\r\\n                              disabled\\r\\n                              style=\\\"border-bottom-color: #000\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\"> </label>\\r\\n                          <div class=\\\"form-control \\\">\\r\\n                            <label class=\\\"form-label\\\"> </label>\\r\\n                            <div class=\\\"grid-cell--2\\\" style=\\\"padding-top: 2.7em; width: 17%\\\">\\r\\n                              <p-fileUpload\\r\\n                                #fileUploader\\r\\n                                *ngIf=\\\"!isReadOpenMode\\\"\\r\\n                                chooseLabel=\\\"\\\"\\r\\n                                title=\\\"Upload\\\"\\r\\n                                ngClass=\\\"defaultUpload\\\"\\r\\n                                name=\\\"document[]\\\"\\r\\n                                customUpload=\\\"true\\\"\\r\\n                                mode=\\\"basic\\\"\\r\\n                                auto=\\\"true\\\"\\r\\n                                (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                              ></p-fileUpload>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode\\\"\\r\\n                          [disabled]=\\\"checkImport()\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"import()\\\"\\r\\n                        >\\r\\n                          <i class=\\\"fa fa-fw fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          <span>{{ getComponentName() + \\\".importFile\\\" | translate }}</span>\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- Attributes values management : engineering table -->\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 *ngIf=\\\"isEngineering\\\" class=\\\"grid-cell-title\\\">\\r\\n                      {{ \\\"global.results\\\" | translate }}\\r\\n                      ({{ engineeringTableDataSource ? engineeringTableDataSource.dataCount : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <a-table [dataSource]=\\\"engineeringTableDataSource\\\" *ngIf=\\\"isEngineering\\\">\\r\\n                          <ng-template tableActionsDef>\\r\\n                            <button\\r\\n                              *ngIf=\\\"!isReadOpenMode && engineeringTableDataSource.hasDataSelection\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              color=\\\"warn\\\"\\r\\n                              (click)=\\\"deleteEngineeringList()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.delete\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"!isReadOpenMode && engineeringTableDataSource.dataSelectionCount === 1\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"editEngineeringList()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.edit\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"!isReadOpenMode && !engineeringTableDataSource.hasDataSelection\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"createEngineeringList()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.add\\\" | translate }}\\r\\n                            </button>\\r\\n                          </ng-template>\\r\\n                        </a-table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <!-- Attributes values management : fleet table -->\\r\\n\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <h4 *ngIf=\\\"!isEngineering\\\" class=\\\"section-title\\\">\\r\\n                      {{ \\\"global.results\\\" | translate }}\\r\\n                      ({{ fleetTableDataSource ? fleetTableDataSource.dataCount : 0 }})\\r\\n                    </h4>\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <a-table [dataSource]=\\\"fleetTableDataSource\\\" *ngIf=\\\"!isEngineering\\\">\\r\\n                          <ng-template tableActionsDef>\\r\\n                            <button\\r\\n                              *ngIf=\\\"!isReadOpenMode && fleetTableDataSource.hasDataSelection\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              color=\\\"warn\\\"\\r\\n                              (click)=\\\"deleteFleetList()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.delete\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"!isReadOpenMode && fleetTableDataSource.dataSelectionCount === 1\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"editFleetList()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.edit\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"!isReadOpenMode && !fleetTableDataSource.hasDataSelection\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"createFleetList()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.add\\\" | translate }}\\r\\n                            </button>\\r\\n                          </ng-template>\\r\\n                        </a-table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n  <aw-attribute-form-list-popup\\r\\n    *ngIf=\\\"showListPopup\\\"\\r\\n    [(display)]=\\\"showListPopup\\\"\\r\\n    [openMode]=\\\"dialogOpenMode\\\"\\r\\n    [attributeValue]=\\\"attributePopupDataInput\\\"\\r\\n    (onValidated)=\\\"onAddEngineeringdata($event)\\\"\\r\\n  >\\r\\n  </aw-attribute-form-list-popup>\\r\\n</div>\\r\\n\"","module.exports = \"::ng-deep .defaultUpload .ui-fileupload-choose .pi-plus:before {\\n  content: \\\"\\\\e934\\\"; }\\n\\n::ng-deep .defaultUpload .ui-button {\\n  color: #007ad9;\\n  background: none;\\n  border: none;\\n  font-size: 19px; }\\n\\n::ng-deep .defaultUpload .ui-fileupload-choose:not(.ui-state-disabled):hover {\\n  color: #007ad9;\\n  background: none;\\n  border: none;\\n  font-size: 19px; }\\n\\n:host .form-group-type {\\n  flex: initial !important; }\\n\\n:host .form-group-category {\\n  max-width: 18rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi9hdHRyaWJ1dGVzL2Zvcm0vRDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxmcm9udGVuZF9hZXJvd2ViYi9zcmNcXGFwcFxcbWFpblxcYWRtaW5pc3RyYXRpb25cXGF0dHJpYnV0ZXNcXGZvcm1cXGF0dHJpYnV0ZXMtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUdNLGdCQUFnQixFQUFBOztBQU10QjtFQUVLLGNBQWE7RUFDYixnQkFBZTtFQUNmLFlBQVc7RUFDWCxlQUFlLEVBQUE7O0FBTHBCO0VBUUksY0FBYTtFQUNiLGdCQUFlO0VBQ2YsWUFBVztFQUNYLGVBQWUsRUFBQTs7QUFLbkI7RUFFSSx3QkFBd0IsRUFBQTs7QUFGNUI7RUFLSSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vYXR0cmlidXRlcy9mb3JtL2F0dHJpYnV0ZXMtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG46Om5nLWRlZXAgLmRlZmF1bHRVcGxvYWR7XHJcbiAgLnVpLWZpbGV1cGxvYWQtY2hvb3NlICB7XHJcbiAgICAgLnBpLXBsdXM6YmVmb3Jle1xyXG4gICAgICBjb250ZW50OiBcIlxcZTkzNFwiO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxufVxyXG5cclxuOjpuZy1kZWVwIC5kZWZhdWx0VXBsb2Fke1xyXG4gIC51aS1idXR0b24ge1xyXG4gICAgIGNvbG9yOiMwMDdhZDk7XHJcbiAgICAgYmFja2dyb3VuZDpub25lO1xyXG4gICAgIGJvcmRlcjpub25lO1xyXG4gICAgIGZvbnQtc2l6ZTogMTlweDtcclxuICB9XHJcbiAgLnVpLWZpbGV1cGxvYWQtY2hvb3NlOm5vdCgudWktc3RhdGUtZGlzYWJsZWQpOmhvdmVye1xyXG4gICAgY29sb3I6IzAwN2FkOTtcclxuICAgIGJhY2tncm91bmQ6bm9uZTtcclxuICAgIGJvcmRlcjpub25lO1xyXG4gICAgZm9udC1zaXplOiAxOXB4O1xyXG4gIH1cclxuICBcclxufVxyXG5cclxuOmhvc3Qge1xyXG4gIC5mb3JtLWdyb3VwLXR5cGUge1xyXG4gICAgZmxleDogaW5pdGlhbCAhaW1wb3J0YW50O1xyXG4gIH1cclxuICAuZm9ybS1ncm91cC1jYXRlZ29yeSB7XHJcbiAgICBtYXgtd2lkdGg6IDE4cmVtO1xyXG4gIH1cclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { FileUpload } from 'primeng/fileupload';\r\n\r\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { AccessibleFunctionsConstants } from '../../../../shared/constants/accessible-functions-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ReportConstants } from '../../../../shared/constants/report-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { ImportAttributeInput } from '../../../../shared/types/api-input-types/administration-attributes/import-attribute-bido-input.interface';\r\nimport { ImportAttributeValuesBireInput } from '../../../../shared/types/api-input-types/administration-attributes/import-attribute-value-bire-input-interface';\r\nimport { AttributeTransferDTO } from '../../../../shared/types/api-types/attribute-transfer-dto.interface';\r\nimport { AttributeValueDTO } from '../../../../shared/types/api-types/attribute-value-dto.interface';\r\nimport { BidoAttributeDTOId } from '../../../../shared/types/api-types/bido-attribute-dto-id.interface';\r\nimport { BidoAttributeDTO } from '../../../../shared/types/api-types/bido-attribute-dto.interface';\r\nimport { BireAttributeDTOId } from '../../../../shared/types/api-types/bire-attribute-dto-id.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\nimport { BireDocumentDTO } from '../../../../shared/types/api-types/bire-document-dto.interface';\r\nimport { ReportDTO } from '../../../../shared/types/api-types/report-dto.interface';\r\nimport { ReportMessageDTO } from '../../../../shared/types/api-types/report-message-dto.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { ArrayUtils } from '../../../../shared/utils/array-utils';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\nimport { AttributesSearchComponent } from '../search/attributes-search.component';\r\n\r\nimport { AttributesFormService } from './attributes-form.service';\r\n\r\nenum AttributeCategory {\r\n  Engineering = 1,\r\n  Fleet\r\n}\r\n\r\nenum ValueType {\r\n  Text = 'Text',\r\n  Boolean = 'Boolean',\r\n  Date = 'Date',\r\n  EnumeratedValueList = 'List'\r\n}\r\n\r\ninterface AttributesFormsInput {\r\n  attributeDescriptionEn?: string;\r\n  attributeDescriptionFr?: string;\r\n  attributeCategory?: string;\r\n  attributeType?: string;\r\n  isStandard?: boolean;\r\n  attributeNameEn?: string;\r\n  attributeNameFr?: string;\r\n  attributeId?: string;\r\n}\r\ninterface EngineeringDataRow {\r\n  textEn: string;\r\n  textFr: string;\r\n  obj: AttributeValueDTO;\r\n}\r\ninterface FleetDataRow {\r\n  textEn: string;\r\n  textFr: string;\r\n  obj: AttributeValueDTO;\r\n}\r\n@Component({\r\n  selector: 'aw-attributes-form',\r\n  styleUrls: ['./attributes-form.component.scss'],\r\n  templateUrl: './attributes-form.component.html'\r\n})\r\nexport class AttributesFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public readonly componentName: string;\r\n  public optionValue: string;\r\n  public engineeringValueList: AttributeValueDTO[];\r\n  public engineeringImportInput: BireAttributeDTO;\r\n  public fleetValueList: AttributeValueDTO[];\r\n  public enginerringattributeFormInput: BireAttributeDTO;\r\n  public fleetattributeFormInput: BidoAttributeDTO;\r\n  public fleetTableDataSource: TableDataSource<FleetDataRow>;\r\n  public engineeringTableDataSource: TableDataSource<EngineeringDataRow>;\r\n  public showListPopup: boolean;\r\n  public categoryValue: string;\r\n  public isEngineering: boolean;\r\n  public enableSelectButton: boolean;\r\n  public engineeringCategoryList: LabelValue<string>[];\r\n  public fleetCategoryList: LabelValue<string>[];\r\n  public attributesFormsInput: AttributesFormsInput;\r\n  public context: string;\r\n  public engineeringAttributeId: BireAttributeDTOId;\r\n  public fleetAttributeId: BidoAttributeDTOId;\r\n  public selectModule: string;\r\n  public dialogOpenMode: ComponentOpenMode;\r\n  public currentEngineeringData: AttributeValueDTO | undefined;\r\n  public currentFleetData: AttributeValueDTO | undefined;\r\n  public engineeringData: BireAttributeDTO[];\r\n  public fleetData: BidoAttributeDTO | undefined;\r\n  private currentEngineeringIndex: number;\r\n  private currentFleetIndex: number;\r\n  public file: BireDocumentDTO;\r\n  public fileName: string | undefined;\r\n\r\n  public selectedAttributeCategory: AttributeCategory;\r\n  public searchCategoryList: SelectItem[];\r\n\r\n  public selectedValueType: string;\r\n  public valueTypeList: SelectItem[];\r\n\r\n  public pageSubtitle: string | undefined;\r\n\r\n  public saving: boolean;\r\n  public attributePopupDataInput: AttributeValueDTO | undefined;\r\n  public fleetDataInput: AttributeValueDTO | undefined;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly attributesFormService: AttributesFormService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly translateService: TranslateService,\r\n    private readonly sessionService: SessionService\r\n  ) {\r\n    super(ComponentOpenMode.Read, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    this.componentName = 'AttributesFormComponent';\r\n\r\n    this.currentEngineeringData = undefined;\r\n    this.currentFleetData = undefined;\r\n    this.fleetData = undefined;\r\n    this.currentEngineeringIndex = -1;\r\n    this.currentFleetIndex = -1;\r\n    this.engineeringValueList = [];\r\n    this.fleetValueList = [];\r\n\r\n    this.pageSubtitle = undefined;\r\n    this.attributePopupDataInput = undefined;\r\n    this.fleetDataInput = undefined;\r\n\r\n    this.initEngineeringTableDataSource();\r\n    this.initFleetTableDataSource();\r\n    this.setAttributeCategoryList();\r\n    this.setValueTypeList();\r\n    this.initSearchObject();\r\n  }\r\n\r\n  private initSearchObject(): void {\r\n    this.selectedAttributeCategory = AttributeCategory.Engineering;\r\n    this.selectedValueType = ValueType.Text;\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_ATTRIBUTES_FORM;\r\n  }\r\n\r\n  public showValuesManagement(): boolean {\r\n    return this.selectedValueType === ValueType.EnumeratedValueList;\r\n  }\r\n\r\n  public get isSaveRequired(): boolean {\r\n    if (!!this.attributesFormsInput) {\r\n      return (this.attributesFormsInput.isStandard as boolean) ? this.showValuesManagement() : true;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private initEngineeringTableDataSource(): void {\r\n    this.engineeringTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'textEn',\r\n          translateKey: this.getTranslateKey('textEn')\r\n        },\r\n        {\r\n          field: 'textFr',\r\n          translateKey: this.getTranslateKey('textFr')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initFleetTableDataSource(): void {\r\n    this.fleetTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'textEn',\r\n          translateKey: this.getTranslateKey('textEn')\r\n        },\r\n        {\r\n          field: 'textFr',\r\n          translateKey: this.getTranslateKey('textFr')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private setValueTypeList(): void {\r\n    const textKey = this.getTranslateKey('text');\r\n    const booleanKey = this.getTranslateKey('boolean');\r\n    const dateKey = this.getTranslateKey('date');\r\n    const listKey = this.getTranslateKey('list');\r\n    this.translateService.get([textKey, booleanKey, dateKey, listKey]).subscribe((results) => {\r\n      const textLabel = !!results ? results[textKey] : 'Text';\r\n      const booleanLabel = !!results ? results[booleanKey] : 'Boolean';\r\n      const dateLabel = !!results ? results[dateKey] : 'Date';\r\n      const listLabel = !!results ? results[listKey] : 'Enumerated Values List';\r\n      this.valueTypeList = [\r\n        { label: textLabel, value: ValueType.Text },\r\n        { label: booleanLabel, value: ValueType.Boolean },\r\n        { label: dateLabel, value: ValueType.Date },\r\n        { label: listLabel, value: ValueType.EnumeratedValueList }\r\n      ];\r\n    });\r\n  }\r\n\r\n  private setAttributeCategoryList(): void {\r\n    const engineeringKey = this.getTranslateKey('engineering');\r\n    const fleetKey = this.getTranslateKey('fleet');\r\n    this.translateService.get([engineeringKey, fleetKey]).subscribe((results) => {\r\n      const engineeringLabel = !!results ? results[engineeringKey] : 'Engineering';\r\n      const fleetLabel = !!results ? results[fleetKey] : 'Fleet';\r\n      this.searchCategoryList = [];\r\n      this.sessionService\r\n        .getAccessibleFunctions([AccessibleFunctionsConstants.ATTRIBUTES_TRANSACTION])\r\n        .subscribe((categoryResults: { [entryComponent: string]: string[] }) => {\r\n          const categories: string[] =\r\n            categoryResults.accessibleFunctionsPerEntryComponent[AccessibleFunctionsConstants.ATTRIBUTES_TRANSACTION];\r\n          if (categories.includes(AttributesSearchComponent.ENGINEERING_TAB)) {\r\n            this.searchCategoryList = this.searchCategoryList.concat({\r\n              label: engineeringLabel,\r\n              value: AttributeCategory.Engineering\r\n            });\r\n          }\r\n          if (categories.includes(AttributesSearchComponent.FLEET_TAB)) {\r\n            this.searchCategoryList = this.searchCategoryList.concat({\r\n              label: fleetLabel,\r\n              value: AttributeCategory.Fleet\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n  protected getTranslateKey(key: string): string {\r\n    return super.getTranslateKey(key, this.componentName);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.updateOpenMode(this.componentData.openMode);\r\n    this.saving = false;\r\n    if (!!this.componentData.objectId) {\r\n      this.enableSelectButton = false;\r\n      this.isEngineering = this.serializationService.deserialize(this.componentData.objectId).isEngineering;\r\n      if (this.isEngineering) {\r\n        this.selectedAttributeCategory = AttributeCategory.Engineering;\r\n        this.loadEngineeringDropDowns();\r\n        this.loadEngineeringAttributesData();\r\n      } else {\r\n        this.selectedAttributeCategory = AttributeCategory.Fleet;\r\n        this.loadFleetDropDowns();\r\n        this.loadFleetAttributesData();\r\n      }\r\n    } else {\r\n      this.isEngineering = true;\r\n      this.enableSelectButton = true;\r\n      this.loadEngineeringDropDowns();\r\n      this.loadFleetDropDowns();\r\n    }\r\n\r\n    this.initObjects();\r\n    this.selectModule = 'engineering';\r\n    this.attributesFormsInput.attributeType = 'Text';\r\n    this.showListPopup = false;\r\n    this.attributesFormsInput.attributeCategory = '1-all';\r\n  }\r\n\r\n  public reset() {\r\n    this.attributesFormsInput.attributeCategory = '1-all';\r\n    this.attributesFormsInput.attributeNameFr = undefined;\r\n    this.attributesFormsInput.attributeNameEn = undefined;\r\n    this.attributesFormsInput.attributeType = 'Text';\r\n    this.attributesFormsInput.attributeDescriptionEn = undefined;\r\n    this.attributesFormsInput.attributeDescriptionFr = undefined;\r\n  }\r\n\r\n  public checkAttributeCategory(): void {\r\n    this.reset();\r\n    this.isEngineering = this.selectedAttributeCategory === AttributeCategory.Engineering;\r\n  }\r\n\r\n  public checkModuleEngineering() {\r\n    this.reset();\r\n    this.isEngineering = true;\r\n  }\r\n\r\n  public checkModuleFleet() {\r\n    this.reset();\r\n    this.isEngineering = false;\r\n  }\r\n\r\n  public loadEngineeringDropDowns() {\r\n    this.engineeringCategoryList = [];\r\n    this.propertiesService.getValue(GenericPropertyConstants.MCH_ATTRIBUTE_CATEGORY_MAP).subscribe((results) => {\r\n      this.engineeringCategoryList = results;\r\n    });\r\n  }\r\n\r\n  public loadFleetDropDowns() {\r\n    this.fleetCategoryList = [];\r\n    this.propertiesService.getValue(GenericPropertyConstants.ATTRIBUTE_CATEGORY_MAP).subscribe((results) => {\r\n      this.fleetCategoryList = results;\r\n    });\r\n  }\r\n\r\n  public initObjects() {\r\n    this.fileName = '';\r\n    this.attributesFormsInput = {};\r\n    this.enginerringattributeFormInput = {\r\n      attributeId: '',\r\n      attributeNameEn: undefined,\r\n      attributeNameFr: undefined,\r\n      bireAttributeValueDatas: []\r\n    };\r\n    this.fleetattributeFormInput = {\r\n      attributeId: '',\r\n      attributeNameEn: undefined,\r\n      attributeNameFr: undefined,\r\n      bidoAttributeValueDatas: []\r\n    };\r\n  }\r\n\r\n  public cancel(): void {\r\n    if (this.isCreateOpenMode) {\r\n      this.initObjects();\r\n    } else {\r\n      this.initObjects();\r\n      this.componentData.openMode = ComponentOpenMode.Read;\r\n      this.ngOnInit();\r\n      this.updateOpenMode(ComponentOpenMode.Read);\r\n    }\r\n  }\r\n\r\n  public edit(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.ngOnInit();\r\n  }\r\n\r\n  private loadPageSubtitle(): void {\r\n    this.pageSubtitle =\r\n      this.translateService.currentLang === 'en'\r\n        ? this.attributesFormsInput.attributeNameEn\r\n        : this.attributesFormsInput.attributeNameFr;\r\n  }\r\n\r\n  public loadEngineeringAttributesData() {\r\n    if (!!this.componentData.objectId) {\r\n      this.engineeringValueList = [];\r\n      const data: AttributeTransferDTO = this.serializationService.deserialize(this.componentData.objectId);\r\n      if (data.engineeringAttributeId) {\r\n        this.engineeringAttributeId = {\r\n          attributeId: data.engineeringAttributeId.attributeId\r\n        };\r\n        this.attributesFormService\r\n          .getEnginerringAttribiuteData(this.engineeringAttributeId)\r\n          .subscribe((results: BireAttributeDTO) => {\r\n            if (results) {\r\n              // Sort attribute list as per text english\r\n              if (!!results.bireAttributeValueDatas) {\r\n                results.bireAttributeValueDatas.sort(ArrayUtils.compareValues('textEn'));\r\n              }\r\n\r\n              this.enginerringattributeFormInput = results;\r\n              this.loadEnginerringListData(this.enginerringattributeFormInput);\r\n              this.attributesFormsInput = {\r\n                attributeDescriptionEn: results.attributeDescriptionEn,\r\n                attributeDescriptionFr: results.attributeDescriptionFr,\r\n                attributeCategory: results.attributeCategory,\r\n                attributeType: results.attributeType,\r\n                isStandard: results.isStandard,\r\n                attributeNameEn: results.attributeNameEn,\r\n                attributeNameFr: results.attributeNameFr\r\n              };\r\n              this.loadPageSubtitle();\r\n              if (results.attributeType) {\r\n                this.selectedValueType = results.attributeType;\r\n              }\r\n              if (this.attributesFormsInput.attributeNameEn) {\r\n                this.displayComponentContext(this.attributesFormsInput.attributeNameEn, this.isCreateOpenMode);\r\n              }\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  public loadFleetAttributesData() {\r\n    if (!!this.componentData.objectId) {\r\n      this.fleetValueList = [];\r\n      const data: AttributeTransferDTO = this.serializationService.deserialize(this.componentData.objectId);\r\n      if (data.fleetAttributeId) {\r\n        this.fleetAttributeId = {\r\n          attributeId: data.fleetAttributeId.attributeId\r\n        };\r\n        this.attributesFormService.getFleetAttribiuteData(this.fleetAttributeId).subscribe((results) => {\r\n          if (results) {\r\n            // Sort attribute list as per text english\r\n            if (!!results.bidoAttributeValueDatas) {\r\n              results.bidoAttributeValueDatas.sort(ArrayUtils.compareValues('textEn'));\r\n            }\r\n            this.fleetattributeFormInput = results;\r\n            this.loadFleetListData(this.fleetattributeFormInput);\r\n            this.attributesFormsInput = {\r\n              attributeDescriptionEn: results.attributeDescriptionEn,\r\n              attributeDescriptionFr: results.attributeDescriptionFr,\r\n              attributeCategory: results.attributeCategory,\r\n              attributeType: results.attributeType,\r\n              isStandard: results.isStandard,\r\n              attributeNameEn: results.attributeNameEn,\r\n              attributeNameFr: results.attributeNameFr\r\n            };\r\n            this.loadPageSubtitle();\r\n            if (results.attributeType) {\r\n              this.selectedValueType = results.attributeType;\r\n            }\r\n            if (this.attributesFormsInput.attributeNameEn) {\r\n              this.displayComponentContext(this.attributesFormsInput.attributeNameEn, this.isCreateOpenMode);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public loadEnginerringListData(engineeringData: BireAttributeDTO) {\r\n    if (!!engineeringData.bireAttributeValueDatas) {\r\n      this.engineeringValueList = engineeringData.bireAttributeValueDatas;\r\n      this.engineeringTableDataSource.setData(\r\n        this.engineeringValueList.map((data) => {\r\n          const row: EngineeringDataRow = {\r\n            textEn: data.textEn,\r\n            textFr: data.textFr,\r\n            obj: data\r\n          };\r\n\r\n          return row;\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public loadFleetListData(fleetData: BidoAttributeDTO) {\r\n    if (!!fleetData.bidoAttributeValueDatas) {\r\n      this.fleetValueList = fleetData.bidoAttributeValueDatas;\r\n      this.fleetTableDataSource.setData(\r\n        this.fleetValueList.map((data) => {\r\n          const row: FleetDataRow = {\r\n            textEn: data.textEn,\r\n            textFr: data.textFr,\r\n            obj: data\r\n          };\r\n\r\n          return row;\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  public createEngineeringList() {\r\n    this.currentEngineeringIndex = -1;\r\n    this.attributePopupDataInput = undefined;\r\n    this.currentEngineeringData = undefined;\r\n    this.showListPopup = true;\r\n    this.dialogOpenMode = ComponentOpenMode.Create;\r\n  }\r\n\r\n  public createFleetList() {\r\n    this.currentFleetIndex = -1;\r\n    this.attributePopupDataInput = undefined;\r\n    this.currentFleetData = undefined;\r\n    this.showListPopup = true;\r\n    this.dialogOpenMode = ComponentOpenMode.Create;\r\n  }\r\n\r\n  public editEngineeringList() {\r\n    if (!!this.engineeringTableDataSource.dataSelection && this.engineeringTableDataSource.dataSelectionCount === 1) {\r\n      this.currentEngineeringIndex = this.engineeringTableDataSource.data.findIndex(\r\n        (x) =>\r\n          x.obj.textEn === this.engineeringTableDataSource.dataSelection[0].textEn &&\r\n          x.obj.textFr === this.engineeringTableDataSource.dataSelection[0].textFr\r\n      );\r\n      this.attributePopupDataInput = {\r\n        attributeId: this.engineeringTableDataSource.dataSelection[0].obj.attributeId,\r\n        attributeValue: this.engineeringTableDataSource.dataSelection[0].obj.attributeValue,\r\n        textEn: this.engineeringTableDataSource.dataSelection[0].textEn,\r\n        textFr: this.engineeringTableDataSource.dataSelection[0].textFr\r\n      };\r\n      this.showListPopup = true;\r\n      this.dialogOpenMode = ComponentOpenMode.Write;\r\n    }\r\n  }\r\n\r\n  public editFleetList() {\r\n    if (!!this.fleetTableDataSource.dataSelection && this.fleetTableDataSource.dataSelectionCount === 1) {\r\n      this.currentFleetIndex = this.fleetTableDataSource.data.findIndex(\r\n        (x) =>\r\n          x.textEn === this.fleetTableDataSource.dataSelection[0].textEn &&\r\n          x.textFr === this.fleetTableDataSource.dataSelection[0].textFr\r\n      );\r\n\r\n      this.attributePopupDataInput = {\r\n        attributeId: this.fleetTableDataSource.dataSelection[0].obj.attributeId,\r\n        attributeValue: this.fleetTableDataSource.dataSelection[0].obj.attributeValue,\r\n        textEn: this.fleetTableDataSource.dataSelection[0].textEn,\r\n        textFr: this.fleetTableDataSource.dataSelection[0].textFr\r\n      };\r\n\r\n      this.showListPopup = true;\r\n      this.dialogOpenMode = ComponentOpenMode.Write;\r\n    }\r\n  }\r\n\r\n  public onAddEngineeringdata(attributeValue: AttributeValueDTO) {\r\n    let isDuplicateData = false;\r\n    if (this.isEngineering) {\r\n      if (!!attributeValue && !!attributeValue.attributeId) {\r\n        isDuplicateData = this.engineeringTableDataSource.dataSrc.some((element) => {\r\n          return (\r\n            element.obj.attributeValue !== attributeValue.attributeValue &&\r\n            element.textEn === attributeValue.textEn &&\r\n            element.textFr === attributeValue.textFr\r\n          );\r\n        });\r\n      } else {\r\n        isDuplicateData = this.engineeringTableDataSource.dataSrc.some((element, index) => {\r\n          return (\r\n            this.currentEngineeringIndex !== index &&\r\n            element.textEn === attributeValue.textEn &&\r\n            element.textFr === attributeValue.textFr\r\n          );\r\n        });\r\n      }\r\n\r\n      if (isDuplicateData) {\r\n        this.messageService.showWarningMessage(this.getTranslateKey('duplicatesValue'));\r\n      } else {\r\n        this.addEditEngineeringData(attributeValue);\r\n        this.engineeringTableDataSource.dataSelection = [];\r\n      }\r\n    } else {\r\n      if (!!attributeValue && !!attributeValue.attributeId) {\r\n        isDuplicateData = this.fleetValueList.some((element) => {\r\n          return (\r\n            element.attributeValue !== attributeValue.attributeValue &&\r\n            element.textEn === attributeValue.textEn &&\r\n            element.textFr === attributeValue.textFr\r\n          );\r\n        });\r\n      } else {\r\n        isDuplicateData = this.fleetValueList.some((element, index) => {\r\n          return (\r\n            this.currentEngineeringIndex !== index &&\r\n            element.textEn === attributeValue.textEn &&\r\n            element.textFr === attributeValue.textFr\r\n          );\r\n        });\r\n      }\r\n\r\n      if (isDuplicateData) {\r\n        this.messageService.showWarningMessage(this.getTranslateKey('duplicatesValue'));\r\n      } else {\r\n        this.addEditFleetData(attributeValue);\r\n        this.fleetTableDataSource.dataSelection = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  public addFleetData(engineeringData: AttributeValueDTO): FleetDataRow {\r\n    const row: FleetDataRow = {\r\n      textEn: engineeringData.textEn,\r\n      textFr: engineeringData.textFr,\r\n      obj: engineeringData\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  public addData(engineeringData: AttributeValueDTO): EngineeringDataRow {\r\n    const row: EngineeringDataRow = {\r\n      textEn: engineeringData.textEn,\r\n      textFr: engineeringData.textFr,\r\n      obj: engineeringData\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  public deleteEngineeringList() {\r\n    const partialMessageKey =\r\n      this.engineeringTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedValues'\r\n        : 'confirmDeleteSelectedValue';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.engineeringValueList = this.engineeringValueList.filter((list) => {\r\n          return !this.engineeringTableDataSource.dataSelection.some((row) => {\r\n            return !!list.textEn && !!row.textEn && list.textEn === row.textEn;\r\n          });\r\n        });\r\n        this.engineeringTableDataSource.setData(\r\n          this.engineeringTableDataSource.data.filter((data) => {\r\n            return !this.engineeringTableDataSource.dataSelection.some((row) => {\r\n              return data.textEn === row.textEn;\r\n            });\r\n          })\r\n        );\r\n        this.engineeringTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteFleetList() {\r\n    const partialMessageKey =\r\n      this.fleetTableDataSource.dataSelectionCount > 1 ? 'confirmDeleteSelectedValues' : 'confirmDeleteSelectedValue';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.fleetValueList = this.fleetValueList.filter((list) => {\r\n          return !this.fleetTableDataSource.dataSelection.some((row) => {\r\n            return !!list.textEn && !!row.textEn && list.textEn === row.textEn;\r\n          });\r\n        });\r\n        this.fleetTableDataSource.setData(\r\n          this.fleetTableDataSource.data.filter((data) => {\r\n            return !this.fleetTableDataSource.dataSelection.some((row) => {\r\n              return data.textEn === row.textEn;\r\n            });\r\n          })\r\n        );\r\n        this.fleetTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public isEngineeringAttribute(): boolean {\r\n    return this.selectedAttributeCategory === AttributeCategory.Engineering;\r\n  }\r\n\r\n  public validate() {\r\n    this.saving = true;\r\n    if (this.isEngineeringAttribute()) {\r\n      this.engineeringValueList.forEach((value) => {\r\n        value.attributeId = !!this.componentData.objectId ? this.engineeringAttributeId.attributeId : '';\r\n      });\r\n      this.enginerringattributeFormInput = {\r\n        attributeId: !!this.componentData.objectId ? this.engineeringAttributeId.attributeId : '',\r\n        attributeDescriptionEn: this.attributesFormsInput.attributeDescriptionEn,\r\n        attributeDescriptionFr: this.attributesFormsInput.attributeDescriptionFr,\r\n        attributeCategory: this.attributesFormsInput.attributeCategory,\r\n        attributeType: this.selectedValueType,\r\n        attributeNameFr: this.attributesFormsInput.attributeNameFr,\r\n        attributeNameEn: this.attributesFormsInput.attributeNameEn,\r\n        bireAttributeValueDatas: this.engineeringValueList,\r\n        isStandard: this.attributesFormsInput.isStandard\r\n      };\r\n      if (\r\n        StringUtils.isNullOrEmpty(\r\n          this.enginerringattributeFormInput.attributeNameEn && this.enginerringattributeFormInput.attributeNameFr\r\n        )\r\n      ) {\r\n        this.saving = false;\r\n        this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n      } else {\r\n        this.attributesFormService.saveFormEnginerringAttributes(this.enginerringattributeFormInput).subscribe(\r\n          (results) => {\r\n            this.saving = false;\r\n            if (!!this.enginerringattributeFormInput.attributeNameEn) {\r\n              const data: AttributeTransferDTO = {\r\n                isEngineering: true,\r\n                engineeringAttributeId: results\r\n              };\r\n              this.componentData.objectId = this.serializationService.serialize(data);\r\n              this.loadEngineeringAttributesData();\r\n              this.updateOpenMode(ComponentOpenMode.Write);\r\n              this.displayComponentContext(this.enginerringattributeFormInput.attributeNameEn, this.isCreateOpenMode);\r\n              this.componentData.openMode = ComponentOpenMode.Write;\r\n            }\r\n            this.messageService.showSuccessMessage(\r\n              this.getTranslateKey(!!this.componentData.objectId ? 'onUpdateSave' : 'onCreateSave')\r\n            );\r\n          },\r\n          (err) => {\r\n            // FAILED\r\n            this.saving = false;\r\n            this.messageService.showErrorMessage(err.error.errorDetail);\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      this.fleetValueList.forEach((value) => {\r\n        value.attributeId = !!this.componentData.objectId ? this.fleetAttributeId.attributeId : '';\r\n      });\r\n      this.fleetattributeFormInput = {\r\n        attributeId: !!this.componentData.objectId ? this.fleetAttributeId.attributeId : '',\r\n        attributeDescriptionEn: this.attributesFormsInput.attributeDescriptionEn,\r\n        attributeDescriptionFr: this.attributesFormsInput.attributeDescriptionFr,\r\n        attributeCategory: this.attributesFormsInput.attributeCategory,\r\n        // attributeType: this.attributesFormsInput.attributeType,\r\n        attributeType: this.selectedValueType,\r\n        attributeNameFr: this.attributesFormsInput.attributeNameFr,\r\n        attributeNameEn: this.attributesFormsInput.attributeNameEn,\r\n        bidoAttributeValueDatas: this.fleetValueList,\r\n        isStandard: this.attributesFormsInput.isStandard\r\n      };\r\n      if (\r\n        StringUtils.isNullOrEmpty(\r\n          this.fleetattributeFormInput.attributeNameEn && this.fleetattributeFormInput.attributeNameFr\r\n        )\r\n      ) {\r\n        this.saving = false;\r\n        this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n      } else {\r\n        this.attributesFormService.saveFormfleetAttributes(this.fleetattributeFormInput).subscribe(\r\n          (results) => {\r\n            this.saving = false;\r\n            if (!!this.fleetattributeFormInput.attributeNameEn) {\r\n              const data: AttributeTransferDTO = {\r\n                isEngineering: false,\r\n                fleetAttributeId: results\r\n              };\r\n              this.componentData.objectId = this.serializationService.serialize(data);\r\n              this.loadFleetAttributesData();\r\n              this.updateOpenMode(ComponentOpenMode.Write);\r\n              this.displayComponentContext(this.fleetattributeFormInput.attributeNameEn, this.isCreateOpenMode);\r\n            }\r\n            this.messageService.showSuccessMessage(\r\n              this.getTranslateKey(!!this.componentData.objectId ? 'onUpdateSave' : 'onCreateSave')\r\n            );\r\n          },\r\n          (err) => {\r\n            // FAILED\r\n            this.saving = false;\r\n            this.messageService.showErrorMessage(err.error.errorDetail);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // IMPORT\r\n\r\n  public openTemplate(templateName: string): void {\r\n    const partialMessageKey = this.getTranslateKey('openReport');\r\n    this.confirmationService.confirm({\r\n      interpolateParams: { 'openReport.reportName': templateName },\r\n      messageKey: partialMessageKey,\r\n      accept: () => {\r\n        const templateService = this.isEngineering\r\n          ? this.attributesFormService.getEnginerringImportTemplate()\r\n          : this.attributesFormService.getFleetImportTemplate();\r\n        templateService.subscribe((result) => {\r\n          this.downLoadFiles(result, templateName);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public downLoadFiles(docFile: Uint8Array, docName: string): void {\r\n    FileUtils.downloadFile(docFile, docName);\r\n  }\r\n\r\n  public loadTemplate(): string {\r\n    return 'TEMPLATE_ATTRIBIUTE_VALUE.xls';\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (event.files) {\r\n      const file: File = event.files[0];\r\n      {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          if (fileContent) {\r\n            this.file = {\r\n              docFile: fileContent,\r\n              docName: file.name,\r\n              docPublicationDate: new Date()\r\n            };\r\n            this.fileName = this.file.docName;\r\n          }\r\n        });\r\n      }\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public checkImport(): boolean {\r\n    return !this.fileName ? true : false;\r\n  }\r\n\r\n  private getFirstErrorMessage(report: ReportDTO): string | undefined {\r\n    let errorMsg: string | undefined;\r\n    if (report && report.messages && report.messages.length > 0) {\r\n      report.messages.forEach((message: ReportMessageDTO) => {\r\n        if (message.severity === ReportConstants.SEVERITY_ERROR) {\r\n          errorMsg = message.message;\r\n\r\n          return;\r\n        }\r\n      });\r\n    }\r\n\r\n    return errorMsg;\r\n  }\r\n\r\n  public import() {\r\n    if (this.fileName !== '') {\r\n      const partialMessageKey = this.getTranslateKey('importData');\r\n      this.confirmationService.confirm({\r\n        interpolateParams: { 'importData.fileName': this.fileName },\r\n        contextKeys: [this.getTranslateKey('importData.line1')],\r\n        messageKey: partialMessageKey,\r\n        accept: () => {\r\n          // Importing Excel file\r\n          if (this.isEngineering && !!this.fileName && !!this.file.docFile) {\r\n            this.enginerringattributeFormInput.attributeType = this.attributesFormsInput.attributeType;\r\n            const excelInput: ImportAttributeValuesBireInput = {\r\n              fileName: this.fileName,\r\n              excelSource: this.file.docFile,\r\n              attributeId: this.engineeringAttributeId.attributeId,\r\n              bireAttributeDTO: this.enginerringattributeFormInput\r\n            };\r\n\r\n            this.attributesFormService.importEnginerringAttributeValue(excelInput).subscribe((result: ReportDTO) => {\r\n              const errorMsg: string | undefined = this.getFirstErrorMessage(result);\r\n              if (errorMsg) {\r\n                this.messageService.showRawErrorMessage(errorMsg);\r\n              } else {\r\n                this.loadEngineeringAttributesData();\r\n                this.messageService.showSuccessMessage(\r\n                  this.getTranslateKey(!!this.componentData.objectId ? 'onUpdateSave' : 'onCreateSave')\r\n                );\r\n              }\r\n            });\r\n          }\r\n          if (!this.isEngineering && !!this.fileName && !!this.file.docFile) {\r\n            this.fleetattributeFormInput.attributeType = this.attributesFormsInput.attributeType;\r\n            const excelInput: ImportAttributeInput = {\r\n              fileName: this.fileName,\r\n              excelSource: this.file.docFile,\r\n              attributeId: this.fleetAttributeId.attributeId,\r\n              bidoAttributeDTO: this.fleetattributeFormInput\r\n            };\r\n\r\n            this.attributesFormService.importFleetAttributeValue(excelInput).subscribe(\r\n              (result: ReportDTO) => {\r\n                const errorMsg: string | undefined = this.getFirstErrorMessage(result);\r\n                if (errorMsg) {\r\n                  this.messageService.showRawErrorMessage(errorMsg);\r\n                } else {\r\n                  this.loadFleetAttributesData();\r\n                  this.messageService.showSuccessMessage(this.getTranslateKey('valuesImported'));\r\n                }\r\n              },\r\n              (err) => {\r\n                // FAILED\r\n                this.messageService.showErrorMessage(err.error.errorDetail);\r\n              }\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private addEditEngineeringData(attributeValue: AttributeValueDTO) {\r\n    if (this.currentEngineeringIndex === -1) {\r\n      this.engineeringTableDataSource.addData([this.addData(attributeValue)]);\r\n      this.engineeringValueList = [...this.engineeringValueList, attributeValue];\r\n    } else {\r\n      this.engineeringTableDataSource.replaceData(\r\n        this.engineeringTableDataSource.dataSelection[0],\r\n        this.addData(attributeValue)\r\n      );\r\n      this.engineeringTableDataSource.dataSelection = [];\r\n      this.engineeringValueList[this.currentEngineeringIndex] = attributeValue;\r\n    }\r\n  }\r\n\r\n  private addEditFleetData(attributeValue: AttributeValueDTO) {\r\n    if (this.currentFleetIndex === -1) {\r\n      this.fleetTableDataSource.addData([this.addData(attributeValue)]);\r\n      this.fleetValueList = [...this.fleetValueList, attributeValue];\r\n    } else {\r\n      this.fleetTableDataSource.replaceData(this.fleetTableDataSource.dataSelection[0], this.addData(attributeValue));\r\n      this.fleetValueList[this.currentFleetIndex] = attributeValue;\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\r\nimport { StandardImportPsApi } from '../../../../shared/api/standard-import-ps-api';\r\nimport { StandardImportApi } from '../../../../shared/api/standard-import.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { ImportAttributeInput } from '../../../../shared/types/api-input-types/administration-attributes/import-attribute-bido-input.interface';\r\nimport { ImportAttributeValuesBireInput } from '../../../../shared/types/api-input-types/administration-attributes/import-attribute-value-bire-input-interface';\r\nimport { BidoAttributeDTOId } from '../../../../shared/types/api-types/bido-attribute-dto-id.interface';\r\nimport { BidoAttributeDTO } from '../../../../shared/types/api-types/bido-attribute-dto.interface';\r\nimport { BireAttributeDTOId } from '../../../../shared/types/api-types/bire-attribute-dto-id.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\nimport { ReportDTO } from '../../../../shared/types/api-types/report-dto.interface';\r\n\r\n\r\n@Injectable()\r\nexport class AttributesFormService extends AbstractAwHttpService {\r\n\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly standardImportPsApi : StandardImportPsApi,\r\n    private readonly standardImportApi : StandardImportApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public saveFormEnginerringAttributes(category : BireAttributeDTO): Observable<BireAttributeDTOId> {\r\n   return super.post<BireAttributeDTO, BireAttributeDTOId >(this.productStructureManagementApi.\r\n    saveBireAttribute, category);\r\n}\r\n  public saveFormfleetAttributes(category : BidoAttributeDTO): Observable<BidoAttributeDTOId> {\r\n  return super.post<BidoAttributeDTO, BidoAttributeDTOId >(this.fleetManagementApi.\r\n    saveBidoAttribute, category);\r\n}\r\n\r\n\r\n  public getEnginerringAttribiuteData(selectedAttribute : BireAttributeDTOId): Observable<BireAttributeDTO> {\r\n  return super.post<BireAttributeDTOId, BireAttributeDTO >(this.productStructureManagementApi.\r\n    findBireAttribute, selectedAttribute);\r\n}\r\n  public getFleetAttribiuteData(selectedAttribute : BidoAttributeDTOId): Observable<BidoAttributeDTO> {\r\n  return super.post<BidoAttributeDTOId, BidoAttributeDTO >(this.fleetManagementApi.\r\n    findBidoAttribute, selectedAttribute);\r\n}\r\n  public getEnginerringImportTemplate(): Observable<Uint8Array> {\r\n    return super.post<void, Uint8Array>(this.standardImportPsApi.getImportAttributeValuesBireXLS);\r\n  }\r\n  public getFleetImportTemplate() : Observable<Uint8Array> {\r\n  return super.post<void, Uint8Array>(this.standardImportApi.getImportAttributeValuesBidoXLS);\r\n}\r\n\r\n  public importEnginerringAttributeValue(file : ImportAttributeValuesBireInput): Observable<ReportDTO> {\r\n  return super.post<ImportAttributeValuesBireInput, ReportDTO>\r\n  (this.standardImportPsApi.importAttributeValuesBireFromExcel, file);\r\n}\r\n  public importFleetAttributeValue(file : ImportAttributeInput): Observable<ReportDTO> {\r\n  return super.post<ImportAttributeInput, ReportDTO>\r\n  (this.standardImportApi.importattributevaluesfromexcel, file);\r\n}\r\n\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ \\\"page.searchPage\\\" | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewAttributeForm()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <!-- All attributes table -->\\r\\n\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 *ngIf=\\\"selectedType === component.TYPE_ALL\\\" class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.list\\\" | translate }} ({{ allTableDataSource ? allTableDataSource.dataCount : 0 }})\\r\\n                </h3>\\r\\n                <h3 *ngIf=\\\"selectedType === component.TYPE_ENGINEERING\\\" class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.list\\\" | translate }} ({{\\r\\n                    engineeringTableDataSource ? engineeringTableDataSource.dataCount : 0\\r\\n                  }})\\r\\n                </h3>\\r\\n                <h3 *ngIf=\\\"selectedType === component.TYPE_FLEET\\\" class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.list\\\" | translate }} ({{ fleetTableDataSource ? fleetTableDataSource.dataCount : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group form-group-type\\\">\\r\\n                  <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n                  <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                    <p-selectButton [options]=\\\"types\\\" [(ngModel)]=\\\"selectedType\\\"></p-selectButton>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group form-group-category\\\" *ngIf=\\\"selectedType === component.TYPE_ENGINEERING\\\">\\r\\n                  <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      [(ngModel)]=\\\"categoryEngineeringValue\\\"\\r\\n                      placeholder=\\\"&nbsp;\\\"\\r\\n                      [options]=\\\"engineeringCategoryList\\\"\\r\\n                      (onChange)=\\\"reloadEngineeringAttributeList()\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group form-group-category\\\" *ngIf=\\\"selectedType === component.TYPE_FLEET\\\">\\r\\n                  <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      [(ngModel)]=\\\"categoryFleetValue\\\"\\r\\n                      [options]=\\\"fleetCategoryList\\\"\\r\\n                      placeholder=\\\"&nbsp;\\\"\\r\\n                      (onChange)=\\\"reloadFleetAttributeList()\\\"\\r\\n                    >\\r\\n                    </p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <a-table [dataSource]=\\\"allTableDataSource\\\" *ngIf=\\\"selectedType === component.TYPE_ALL\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    *ngIf=\\\"allTableDataSource.hasData && !allTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportAllTable()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"hasManageAccessRight && allTableDataSource.hasDataSelection && isStandardCheckEnginerring()\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteSelectedAllAttributeConfirm()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"allTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openSelectedAttribute()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"isStandard\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i\\r\\n                    *ngIf=\\\"rowData.isStandard !== null && rowData.isStandard\\\"\\r\\n                    class=\\\"fa fa-fw fa-check\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  >\\r\\n                  </i>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n\\r\\n              <!-- Engineering attributes table -->\\r\\n\\r\\n              <a-table [dataSource]=\\\"engineeringTableDataSource\\\" *ngIf=\\\"selectedType === component.TYPE_ENGINEERING\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    *ngIf=\\\"engineeringTableDataSource.hasData && !engineeringTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportEngineeringTable()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"\\r\\n                      hasManageAccessRight &&\\r\\n                      engineeringTableDataSource.hasDataSelection &&\\r\\n                      isStandardCheckEnginerring()\\r\\n                    \\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteSelectedEngineeringAttribute()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"engineeringTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openSelectedAttribute()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"isStandard\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i\\r\\n                    *ngIf=\\\"rowData.isStandard !== null && rowData.isStandard\\\"\\r\\n                    class=\\\"fa fa-fw fa-check\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  >\\r\\n                  </i>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n\\r\\n              <!-- Fleet attributes table -->\\r\\n\\r\\n              <a-table [dataSource]=\\\"fleetTableDataSource\\\" *ngIf=\\\"selectedType === component.TYPE_FLEET\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    *ngIf=\\\"fleetTableDataSource.hasData && !fleetTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportFleetTable()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"hasManageAccessRight && fleetTableDataSource.hasDataSelection && isStandardCheckFleet()\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteSelectedFleetAttribute()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"fleetTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openSelectedAttribute()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"isStandard\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i\\r\\n                    *ngIf=\\\"rowData.isStandard !== null && rowData.isStandard\\\"\\r\\n                    class=\\\"fa fa-fw fa-check\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  >\\r\\n                  </i>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host .form-group-type {\\n  flex: initial !important; }\\n\\n:host .form-group-category {\\n  max-width: 18rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi9hdHRyaWJ1dGVzL3NlYXJjaC9EOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGZyb250ZW5kX2Flcm93ZWJiL3NyY1xcYXBwXFxtYWluXFxhZG1pbmlzdHJhdGlvblxcYXR0cmlidXRlc1xcc2VhcmNoXFxhdHRyaWJ1dGVzLXNlYXJjaC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHdCQUF3QixFQUFBOztBQUY1QjtFQUtJLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi9hdHRyaWJ1dGVzL3NlYXJjaC9hdHRyaWJ1dGVzLXNlYXJjaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAuZm9ybS1ncm91cC10eXBlIHtcclxuICAgIGZsZXg6IGluaXRpYWwgIWltcG9ydGFudDtcclxuICB9XHJcbiAgLmZvcm0tZ3JvdXAtY2F0ZWdvcnkge1xyXG4gICAgbWF4LXdpZHRoOiAxOHJlbTtcclxuICB9XHJcbn0iXX0= */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { AccessibleFunctionsConstants } from '../../../../shared/constants/accessible-functions-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { ExportService } from '../../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { AttributeTransferDTO } from '../../../../shared/types/api-types/attribute-transfer-dto.interface';\r\nimport { BidoAttributeDTOId } from '../../../../shared/types/api-types/bido-attribute-dto-id.interface';\r\nimport { BidoAttributeDTO } from '../../../../shared/types/api-types/bido-attribute-dto.interface';\r\nimport { BireAttributeDTOId } from '../../../../shared/types/api-types/bire-attribute-dto-id.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\n\r\nimport { AttributesSearchService } from './attributes-search.service';\r\n\r\ninterface TableRow {\r\n  attributeNameEn?: string;\r\n  attributeDescriptionEn?: string;\r\n  attributeType?: string;\r\n  isStandard?: boolean;\r\n}\r\n\r\nenum PossibleTypes {\r\n  All = 'all',\r\n  Engineering = 'engineering',\r\n  Fleet = 'fleet'\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-attributes-search',\r\n  templateUrl: './attributes-search.component.html',\r\n  styleUrls: ['./attributes-search.component.scss']\r\n})\r\nexport class AttributesSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  private static readonly ENGINERRING_TABLE_EXPORT_NAME: string = 'engineering-attribute-list';\r\n  private static readonly FLEET_TABLE_EXPORT_NAME: string = 'fleet-attribute-list';\r\n  private static readonly ALL_TABLE_EXPORT_NAME: string = 'all-attribute-list';\r\n  public static readonly ENGINEERING_TAB: string = 'ENGINEERING_TAB';\r\n  public static readonly FLEET_TAB: string = 'FLEET_TAB';\r\n  public static readonly TYPE_ALL = PossibleTypes.All;\r\n  public static readonly TYPE_ENGINEERING = PossibleTypes.Engineering;\r\n  public static readonly TYPE_FLEET = PossibleTypes.Fleet;\r\n  public component: typeof AttributesSearchComponent;\r\n\r\n  public types: SelectItem[];\r\n  public selectedType: string;\r\n  public engineeringCategoryList: LabelValue<string>[];\r\n  public fleetCategoryList: LabelValue<string>[];\r\n  public categoryEngineeringValue: string;\r\n  public categoryFleetValue: string;\r\n\r\n  public allTableDataSource: TableDataSource<BireAttributeDTO>;\r\n  public engineeringTableDataSource: TableDataSource<BireAttributeDTO>;\r\n  public fleetTableDataSource: TableDataSource<BidoAttributeDTO>;\r\n  public attributeId: BireAttributeDTOId;\r\n  public isLoading: boolean;\r\n  public resultsTableColsAll: TableColumn[];\r\n  public resultsTableColsEngineering: TableColumn[];\r\n  public resultsTableColsFleet: TableColumn[];\r\n  public filtersVisible: boolean;\r\n\r\n  public allBireAttributes: BireAttributeDTO[];\r\n  public allBidoAttributes: BidoAttributeDTO[];\r\n\r\n  private accessibleCategories: string[] = [];\r\n\r\n  @ViewChild('resultsContainerAnchor')\r\n  public resultsContainerAnchor: ElementRef;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly attributesSearchService: AttributesSearchService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly exportService: ExportService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly sessionService: SessionService\r\n  ) {\r\n\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.component = AttributesSearchComponent;\r\n    // load categories dropdown\r\n    this.initAllTableDataSource();\r\n    this.initEngineeringTableDataSource();\r\n    this.initFleetTableDataSource();\r\n    this.engineeringCategoryList = [];\r\n    this.propertiesService.getValue(GenericPropertyConstants.MCH_ATTRIBUTE_CATEGORY_MAP).subscribe((results) => {\r\n      this.engineeringCategoryList = results;\r\n    });\r\n    this.fleetCategoryList = [];\r\n    this.propertiesService.getValue(GenericPropertyConstants.ATTRIBUTE_CATEGORY_MAP).subscribe((results) => {\r\n      this.fleetCategoryList = results;\r\n    });\r\n    this.isLoading = false;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.categoryEngineeringValue = '1-all';\r\n    this.categoryFleetValue = '1-all';\r\n    this.filtersVisible = false;\r\n    super.ngOnInit();\r\n    this.displayComponentContext('global.search', true);\r\n\r\n    this.sessionService.getAccessibleFunctions([AccessibleFunctionsConstants.ATTRIBUTES_TRANSACTION]).subscribe(\r\n      (results: { [entryComponent: string]: string[] }) => {\r\n        this.accessibleCategories =\r\n          results.accessibleFunctionsPerEntryComponent[AccessibleFunctionsConstants.ATTRIBUTES_TRANSACTION];\r\n        this.types = [{ label: 'All', value: 'all' }];\r\n        this.selectedType = 'all';\r\n\r\n        if (this.accessibleCategories.includes(AttributesSearchComponent.ENGINEERING_TAB)) {\r\n          this.types = this.types.concat({ label: 'Engineering', value: 'engineering' });\r\n        }\r\n        if (this.accessibleCategories.includes(AttributesSearchComponent.FLEET_TAB)) {\r\n          this.types = this.types.concat({ label: 'Fleet', value: 'fleet' });\r\n        }\r\n        this.reloadAllAttributeList();\r\n      });\r\n    this.reloadEngineeringAttributeList();\r\n    this.reloadFleetAttributeList();\r\n  }\r\n\r\n  private initEngineeringTableDataSource() {\r\n    this.engineeringTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'attributeNameEn', translateKey: this.getTranslateKey('attributeNameEn'), width: '30%' },\r\n        { field: 'attributeCategory', translateKey: this.getTranslateKey('attributeCategory'), width: '20%' },\r\n        { field: 'attributeDescriptionEn', translateKey: this.getTranslateKey('attributeDescriptionEn'), width: '20%' },\r\n        { field: 'attributeType', translateKey: this.getTranslateKey('attributeType'), width: '20%' },\r\n        { field: 'isStandard', translateKey: this.getTranslateKey('isStandard'), width: '10%' }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initFleetTableDataSource() {\r\n    this.fleetTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'attributeNameEn', translateKey: this.getTranslateKey('attributeNameEn'), width: '30%' },\r\n        { field: 'attributeCategory', translateKey: this.getTranslateKey('attributeCategory'), width: '20%' },\r\n        { field: 'attributeDescriptionEn', translateKey: this.getTranslateKey('attributeDescriptionEn'), width: '20%' },\r\n        { field: 'attributeType', translateKey: this.getTranslateKey('attributeType'), width: '20%' },\r\n        { field: 'isStandard', translateKey: this.getTranslateKey('isStandard'), width: '10%' }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initAllTableDataSource() {\r\n    this.allTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'attributeNameEn', translateKey: this.getTranslateKey('attributeNameEn'), width: '30%' },\r\n        { field: 'attributeCategory', translateKey: this.getTranslateKey('attributeCategory'), width: '20%' },\r\n        { field: 'attributeDescriptionEn', translateKey: this.getTranslateKey('attributeDescriptionEn'), width: '20%' },\r\n        { field: 'attributeType', translateKey: this.getTranslateKey('attributeType'), width: '20%' },\r\n        { field: 'isStandard', translateKey: this.getTranslateKey('isStandard'), width: '10%' }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public reloadAllAttributeList(): void {\r\n    this.initAllTableDataSource();\r\n    if (this.accessibleCategories.includes(AttributesSearchComponent.ENGINEERING_TAB)) {\r\n      this.attributesSearchService.getAllEngineeringAttributeList().subscribe(\r\n        (resultsBire: BireAttributeDTO[]) => {\r\n\r\n          if (resultsBire) {\r\n            this.allTableDataSource.addData(resultsBire);\r\n            this.allBireAttributes = resultsBire;\r\n            this.allTableDataSource.dataSrc.forEach((attribute: BireAttributeDTO) => {\r\n              this.engineeringCategoryList.forEach((value: LabelValue<string>) => {\r\n                if (value.value === attribute.attributeCategory) {\r\n                  attribute.attributeCategory = value.label;\r\n\r\n                  return;\r\n                }\r\n              });\r\n            });\r\n            this.allTableDataSource.update();\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    if (this.accessibleCategories.includes(AttributesSearchComponent.FLEET_TAB)) {\r\n      this.attributesSearchService.getAllFleetAttributeList().subscribe((resultsBido) => {\r\n        this.isLoading = false;\r\n        if (resultsBido) {\r\n          this.allTableDataSource.addData(resultsBido);\r\n          this.allBidoAttributes = resultsBido;\r\n          this.allTableDataSource.dataSrc.forEach((attribute: BireAttributeDTO) => {\r\n            this.fleetCategoryList.forEach((value: LabelValue<string>) => {\r\n              if (value.value === attribute.attributeCategory) {\r\n                attribute.attributeCategory = value.label;\r\n\r\n                return;\r\n              }\r\n            });\r\n          });\r\n          this.allTableDataSource.data.forEach((attribute: BireAttributeDTO) => {\r\n            this.fleetCategoryList.forEach((value: LabelValue<string>) => {\r\n              if (value.value === attribute.attributeCategory) {\r\n                attribute.attributeCategory = value.label;\r\n\r\n                return;\r\n              }\r\n            });\r\n          });\r\n          this.allTableDataSource.update();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.allTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  public toggleFilterVisibility(): void {\r\n    this.filtersVisible = !this.filtersVisible;\r\n  }\r\n\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_ATTRIBUTES_SEARCH;\r\n  }\r\n\r\n  public resetSearchCriteria() {\r\n    this.categoryEngineeringValue = '1-all';\r\n    this.categoryFleetValue = '1-all';\r\n    this.reloadEngineeringAttributeList();\r\n    this.reloadFleetAttributeList();\r\n  }\r\n\r\n  public reloadEngineeringAttributeList() {\r\n    this.isLoading = true;\r\n    super.scrollToAnchor(this.resultsContainerAnchor);\r\n    this.attributesSearchService.getEngineeringAttributeList(this.categoryEngineeringValue).subscribe((results) => {\r\n      this.isLoading = false;\r\n      if (results) {\r\n        this.engineeringTableDataSource.setData(results);\r\n        this.engineeringTableDataSource.dataSrc.forEach((attribute: BireAttributeDTO) => {\r\n          this.engineeringCategoryList.forEach((value: LabelValue<string>) => {\r\n            if (value.value === attribute.attributeCategory) {\r\n              attribute.attributeCategory = value.label;\r\n\r\n              return;\r\n            }\r\n          });\r\n        });\r\n        this.engineeringTableDataSource.update();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  public reloadFleetAttributeList() {\r\n    this.isLoading = true;\r\n    super.scrollToAnchor(this.resultsContainerAnchor);\r\n    this.attributesSearchService.getFleetAttributeList(this.categoryFleetValue).subscribe((results) => {\r\n      this.isLoading = false;\r\n      if (results) {\r\n        this.fleetTableDataSource.setData(results);\r\n        this.fleetTableDataSource.dataSelection = [];\r\n        this.fleetTableDataSource.dataSrc.forEach((attribute: BireAttributeDTO) => {\r\n          this.fleetCategoryList.forEach((value: LabelValue<string>) => {\r\n            if (value.value === attribute.attributeCategory) {\r\n              attribute.attributeCategory = value.label;\r\n\r\n              return;\r\n            }\r\n          });\r\n        });\r\n        this.fleetTableDataSource.update();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  public openNewAttributeForm(): void {\r\n    this.openEngineeringAttribute(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  public openSelectedAttribute() {\r\n    if (this.selectedType === PossibleTypes.Fleet) {\r\n      this.fleetTableDataSource.dataSelection.forEach((attribute) => {\r\n        if (!!attribute) {\r\n          if (StringUtils.isNullOrEmpty(attribute.attributeId)) {\r\n            this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingAttributeId'));\r\n          } else {\r\n            this.openFleetAttribute(attribute.attributeId, ComponentOpenMode.Read);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (this.selectedType === PossibleTypes.Engineering) {\r\n      this.engineeringTableDataSource.dataSelection.forEach((attribute) => {\r\n        if (!!attribute) {\r\n          if (StringUtils.isNullOrEmpty(attribute.attributeId)) {\r\n            this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingAttributeId'));\r\n          } else {\r\n            this.openEngineeringAttribute(attribute.attributeId, ComponentOpenMode.Read);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (this.selectedType === PossibleTypes.All) {\r\n      this.allTableDataSource.dataSelection.forEach((attribute) => {\r\n        if (!!attribute) {\r\n          if (StringUtils.isNullOrEmpty(attribute.attributeId)) {\r\n            this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingAttributeId'));\r\n          } else {\r\n            if (!!attribute.bireAttributeValueDatas) {\r\n              this.openEngineeringAttribute(attribute.attributeId, ComponentOpenMode.Read);\r\n            } else {\r\n              this.openFleetAttribute(attribute.attributeId, ComponentOpenMode.Read);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      this.allTableDataSource.dataSelection.forEach((attribute) => {\r\n        if (!!attribute) {\r\n          if (StringUtils.isNullOrEmpty(attribute.attributeId)) {\r\n            this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingAttributeId'));\r\n          } else {\r\n            if (!!attribute.bireAttributeValueDatas) {\r\n              this.openEngineeringAttribute(attribute.attributeId, ComponentOpenMode.Read);\r\n            } else {\r\n              this.openFleetAttribute(attribute.attributeId, ComponentOpenMode.Read);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public openEngineeringAttribute(objectId: string | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.ADM_ATTRIBUTES_FORM,\r\n      openMode\r\n    };\r\n    if (!!objectId) {\r\n      const attributeFormId: BireAttributeDTOId = {\r\n        attributeId: objectId\r\n      };\r\n      const obj: AttributeTransferDTO = {\r\n        isEngineering: true,\r\n        engineeringAttributeId: attributeFormId,\r\n      };\r\n      data.objectId = this.serializationService.serialize(obj);\r\n    }\r\n    const labelKey = 'transaction.' + ComponentConstants.ADM_ATTRIBUTES_FORM;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n\r\n  }\r\n\r\n  public openFleetAttribute(objectId: string | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.ADM_ATTRIBUTES_FORM,\r\n      openMode\r\n    };\r\n    if (!!objectId) {\r\n      const attributeFormId: BidoAttributeDTOId = {\r\n        attributeId: objectId\r\n      };\r\n      const obj: AttributeTransferDTO = {\r\n        isEngineering: false,\r\n        fleetAttributeId: attributeFormId,\r\n      };\r\n      data.objectId = this.serializationService.serialize(obj);\r\n    }\r\n    const labelKey = 'transaction.' + ComponentConstants.ADM_ATTRIBUTES_FORM;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n\r\n  }\r\n\r\n  public deleteSelectedAllAttributeConfirm(): void {\r\n    const deleteMessage =\r\n      this.allTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedAttributes' : 'confirmDeleteSelectedAttribute';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(deleteMessage),\r\n      accept: () => {\r\n        this.deleteSelectedAllAttribute();\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteSelectedAllAttribute(): void {\r\n    const removeBireAttributeIdList: BireAttributeDTOId[] = [];\r\n    const removeBidoAttributeIdList: BidoAttributeDTOId[] = [];\r\n    this.allTableDataSource.dataSelection.forEach((attribute) => {\r\n      // find among bire attributes\r\n      this.allBireAttributes.forEach((bireAttribute: BireAttributeDTO) => {\r\n        if (attribute.attributeId === bireAttribute.attributeId) {\r\n          const attributeID: BireAttributeDTOId = {\r\n            attributeId: attribute.attributeId\r\n          };\r\n          removeBireAttributeIdList.push(attributeID);\r\n        }\r\n      });\r\n      // find among bido attributes\r\n      this.allBidoAttributes.forEach((bidoAttribute: BidoAttributeDTO) => {\r\n        if (attribute.attributeId === bidoAttribute.attributeId) {\r\n          const attributeID: BidoAttributeDTOId = {\r\n            attributeId: attribute.attributeId\r\n          };\r\n          removeBidoAttributeIdList.push(attributeID);\r\n        }\r\n      });\r\n    });\r\n\r\n    if (removeBireAttributeIdList.length === 0 && removeBidoAttributeIdList.length === 0) {\r\n\r\n      return;\r\n    }\r\n\r\n    const bire$ = this.attributesSearchService.removeEngineeringAttributes(removeBireAttributeIdList);\r\n    const bido$ = this.attributesSearchService.removeFleetAttributes(removeBidoAttributeIdList);\r\n\r\n    forkJoin([bire$, bido$]).subscribe(\r\n      () => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('onSuccessDeleteAttributes'));\r\n        this.reloadEngineeringAttributeList();\r\n        this.reloadFleetAttributeList();\r\n        this.reloadAllAttributeList();\r\n        this.allTableDataSource.dataSelection = [];\r\n        this.fleetTableDataSource.dataSelection = [];\r\n        this.engineeringTableDataSource.dataSelection = [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeleteAttributes'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public deleteSelectedEngineeringAttribute() {\r\n    const deleteMessage =\r\n      this.engineeringTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedAttributes' : 'confirmDeleteSelectedAttribute';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(deleteMessage),\r\n      accept: () => {\r\n        const removeAttributeIdList: BireAttributeDTOId[] = [];\r\n        this.engineeringTableDataSource.dataSelection.forEach((attribute) => {\r\n          if (!!attribute.attributeId && !!removeAttributeIdList) {\r\n            const attributeID: BireAttributeDTOId = {\r\n              attributeId: attribute.attributeId\r\n            };\r\n            removeAttributeIdList.push(attributeID);\r\n          }\r\n        });\r\n        this.attributesSearchService.removeEngineeringAttributes(removeAttributeIdList).subscribe((results) => {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('onSuccessDeleteAttributes'));\r\n          this.reloadEngineeringAttributeList();\r\n          this.reloadAllAttributeList();\r\n        }, () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeleteAttributes'));\r\n        });\r\n        this.engineeringTableDataSource.dataSelection = [];\r\n        this.allTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteSelectedFleetAttribute() {\r\n    const deleteMessage =\r\n      this.fleetTableDataSource.dataSelectionCount > 1 ?\r\n        'confirmDeleteSelectedAttributes' : 'confirmDeleteSelectedAttribute';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(deleteMessage),\r\n      accept: () => {\r\n        const removeAttributeIdList: BidoAttributeDTOId[] = [];\r\n        this.fleetTableDataSource.dataSelection.forEach((attribute) => {\r\n          if (!!attribute.attributeId && !!removeAttributeIdList) {\r\n            const attributeID: BidoAttributeDTOId = {\r\n              attributeId: attribute.attributeId\r\n            };\r\n            removeAttributeIdList.push(attributeID);\r\n          }\r\n        });\r\n        this.attributesSearchService.removeFleetAttributes(removeAttributeIdList).subscribe((results) => {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('onSuccessDeleteAttributes'));\r\n          this.reloadFleetAttributeList();\r\n          this.reloadAllAttributeList();\r\n        }, () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeleteAttributes'));\r\n        });\r\n        this.fleetTableDataSource.dataSelection = [];\r\n        this.allTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public exportAllTable(): void {\r\n    const temp: TableRow[] = [];\r\n    this.allTableDataSource.dataSrc.forEach((data) => {\r\n      const obj: TableRow = {\r\n        attributeNameEn: data.attributeNameEn,\r\n        attributeDescriptionEn: data.attributeDescriptionEn,\r\n        attributeType: data.attributeType,\r\n        isStandard: data.isStandard\r\n      };\r\n      temp.push(obj);\r\n    });\r\n    this.exportService.toExcel(\r\n      temp,\r\n      AttributesSearchComponent.ALL_TABLE_EXPORT_NAME,\r\n      this.componentData.componentId\r\n    );\r\n  }\r\n\r\n  public exportEngineeringTable(): void {\r\n    const temp: TableRow[] = [];\r\n    this.engineeringTableDataSource.dataSrc.forEach((data) => {\r\n      const obj: TableRow = {\r\n        attributeNameEn: data.attributeNameEn,\r\n        attributeDescriptionEn: data.attributeDescriptionEn,\r\n        attributeType: data.attributeType,\r\n        isStandard: data.isStandard\r\n      };\r\n      temp.push(obj);\r\n    });\r\n    this.exportService.toExcel(\r\n      temp,\r\n      AttributesSearchComponent.ENGINERRING_TABLE_EXPORT_NAME,\r\n      this.componentData.componentId\r\n    );\r\n  }\r\n\r\n  public exportFleetTable(): void {\r\n    const temp: TableRow[] = [];\r\n    this.fleetTableDataSource.dataSrc.forEach((data) => {\r\n      const obj: TableRow = {\r\n        attributeNameEn: data.attributeNameEn,\r\n        attributeDescriptionEn: data.attributeDescriptionEn,\r\n        attributeType: data.attributeType,\r\n        isStandard: data.isStandard\r\n      };\r\n      temp.push(obj);\r\n    });\r\n    this.exportService.toExcel(\r\n      temp,\r\n      AttributesSearchComponent.FLEET_TABLE_EXPORT_NAME,\r\n      this.componentData.componentId\r\n    );\r\n  }\r\n\r\n  public isStandardCheckEnginerring(): boolean {\r\n    return this.engineeringTableDataSource.dataSelection.every((data) => {\r\n      return !data.isStandard;\r\n    }\r\n    );\r\n  }\r\n\r\n  public isStandardCheckFleet(): boolean {\r\n    return this.fleetTableDataSource.dataSelection.every((data) => {\r\n      return !data.isStandard;\r\n    }\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { BidoAttributeDTOId } from '../../../../shared/types/api-types/bido-attribute-dto-id.interface';\r\nimport { BidoAttributeDTO } from '../../../../shared/types/api-types/bido-attribute-dto.interface';\r\nimport { BireAttributeDTOId } from '../../../../shared/types/api-types/bire-attribute-dto-id.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\n\r\n@Injectable()\r\nexport class AttributesSearchService extends AbstractAwHttpService {\r\n\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getAllEngineeringAttributeList(): Observable<BireAttributeDTO[]> {\r\n    return super.post<void, BireAttributeDTO[]>(this.productStructureManagementApi.\r\n     findBireAttributes);\r\n  }\r\n\r\n  public getEngineeringAttributeList(category : string): Observable<BireAttributeDTO[]> {\r\n   return super.post<string, BireAttributeDTO[]>(this.productStructureManagementApi.\r\n    findBireAttributesByCategory, category);\r\n}\r\n\r\n  public getAllFleetAttributeList(): Observable<BidoAttributeDTO[]> {\r\n    return super.post<void, BidoAttributeDTO[]>(this.fleetManagementApi.\r\n      findBidoAttributes);\r\n  }\r\n\r\n  public getFleetAttributeList(category : string): Observable<BidoAttributeDTO[]> {\r\n  return super.post<string, BidoAttributeDTO[]>(this.fleetManagementApi.\r\n    findBidoAttributesByAttributeCategory, category);\r\n}\r\n  public removeEngineeringAttributes(selectedAttribute : BireAttributeDTOId[]): Observable<void> {\r\n  return super.post<BireAttributeDTOId[], void>(this.productStructureManagementApi.\r\n    removeBireAttribute, selectedAttribute);\r\n}\r\n\r\n  public removeFleetAttributes(selectedAttribute : BidoAttributeDTOId[]): Observable<void> {\r\n  return super.post<BidoAttributeDTOId[], void>(this.fleetManagementApi.\r\n    removeBidoAttribute, selectedAttribute);\r\n}\r\n\r\n\r\n}\r\n","export class ArrayUtils {\r\n    public static compareValues(key: string, order = 'asc') {\r\n    return (a, b) => {\r\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n            // property doesn't exist on either object\r\n            return 0;\r\n        }\r\n\r\n        const varA = (typeof a[key] === 'string') ? a[key].toUpperCase() : a[key];\r\n        const varB = (typeof b[key] === 'string') ? b[key].toUpperCase() : b[key];\r\n\r\n        let comparison = 0;\r\n        if (varA > varB) {\r\n            comparison = 1;\r\n        } else if (varA < varB) {\r\n            comparison = -1;\r\n        }\r\n\r\n        return (\r\n            (order === 'desc') ? (comparison * -1) : comparison\r\n        );\r\n    };\r\n    }\r\n}\r\n"],"sourceRoot":""}