{"version":3,"sources":["webpack:///./node_modules/primeng/chart.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./node_modules/primeng/inputswitch.js","webpack:///./src/app/main/logistics/packaging-batch/form/dialog-add-update/dialog-add-update.component.html","webpack:///./src/app/main/logistics/packaging-batch/form/dialog-add-update/dialog-add-update.component.scss","webpack:///./src/app/main/logistics/packaging-batch/form/dialog-add-update/dialog-add-update.component.ts","webpack:///./src/app/main/logistics/packaging-batch/form/document-upload-dialog/document-upload-dialog.component.html","webpack:///./src/app/main/logistics/packaging-batch/form/document-upload-dialog/document-upload-dialog.component.scss","webpack:///./src/app/main/logistics/packaging-batch/form/document-upload-dialog/document-upload-dialog.component.ts","webpack:///./src/app/main/logistics/packaging-batch/form/packaging-batch-form.component.html","webpack:///./src/app/main/logistics/packaging-batch/form/packaging-batch-form.component.scss","webpack:///./src/app/main/logistics/packaging-batch/form/packaging-batch-form.component.ts","webpack:///./src/app/main/logistics/packaging-batch/form/packaging-batch-form.service.ts","webpack:///./src/app/main/logistics/packaging-batch/packaging-batch.module.ts","webpack:///./src/app/main/logistics/packaging-batch/search/packaging-batch-search.component.html","webpack:///./src/app/main/logistics/packaging-batch/search/packaging-batch-search.component.scss","webpack:///./src/app/main/logistics/packaging-batch/search/packaging-batch-search.component.ts","webpack:///./src/app/main/logistics/packaging-batch/search/packaging-batch-search.service.ts","webpack:///./src/app/shared/constants/bidt-stock-mvt-constants.ts","webpack:///./src/app/shared/constants/bire-measure-reference-constants.ts","webpack:///./src/app/shared/constants/bire-rating-constants.ts","webpack:///./src/app/shared/utils/bido-family-variant-utils.ts"],"names":[],"mappings":"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","file":"default~logistics-packaging-batch-packaging-batch-module~logistics-stock-movements-stock-movements-m~f2aec021.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/chart/chart\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputswitch/inputswitch\"));","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"50\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".batchNumber\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <input\\r\\n                name=\\\"value\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"aw-input\\\"\\r\\n                [(ngModel)]=\\\"assemblyObject.batchNumber\\\"\\r\\n                disabled=\\\"true\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".quantity\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <input\\r\\n                name=\\\"value1\\\"\\r\\n                type=\\\"number\\\"\\r\\n                class=\\\"aw-input\\\"\\r\\n                [(ngModel)]=\\\"assemblyObject.quantity\\\"\\r\\n                max=\\\"{{ quantityMaxValue }}\\\"\\r\\n                min=\\\"0\\\"\\r\\n                [disabled]=\\\"fromStockMovement\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"unit\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".unit\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <input name=\\\"value1\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"unit\\\" [disabled]=\\\"true\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".operationalStatus\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"assemblyObject.operationalStatus\\\"\\r\\n                [options]=\\\"statusList\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".dateCreation\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-calendar\\r\\n                showButtonBar=\\\"true\\\"\\r\\n                [monthNavigator]=\\\"true\\\"\\r\\n                [yearNavigator]=\\\"true\\\"\\r\\n                [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                class=\\\"aw-calendar\\\"\\r\\n                [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                [(ngModel)]=\\\"assemblyObject.creationDate\\\"\\r\\n                [disabled]=\\\"true\\\"\\r\\n              >\\r\\n              </p-calendar>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".createdBy\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <input\\r\\n                name=\\\"value1\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"aw-input\\\"\\r\\n                disabled=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"assemblyObject.statusUser\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"assemblyObject.quantity < 0 || assemblyObject.quantity > quantityMaxValue\\\"\\r\\n    >\\r\\n      <span>{{ \\\"global.validate\\\" | translate }}</span>\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbG9naXN0aWNzL3BhY2thZ2luZy1iYXRjaC9mb3JtL2RpYWxvZy1hZGQtdXBkYXRlL2RpYWxvZy1hZGQtdXBkYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { AWPropertiesConstants } from '../../../../../shared/constants/aw-properties-constants';\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\n\r\ninterface SubAssemblyInterface {\r\n  batchNumber?: string;\r\n  quantity: number;\r\n  creationDate?: Date;\r\n  batchOriginQty?: string;\r\n  operationalStatus?: string;\r\n  location?: string;\r\n  emp?: string;\r\n  warehouseDes?: string;\r\n  empCode?: string;\r\n  statusUser?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-add-update',\r\n  templateUrl: './dialog-add-update.component.html',\r\n  styleUrls: ['./dialog-add-update.component.scss']\r\n})\r\nexport class DialogAddUpdateComponent extends DialogComponent implements OnInit {\r\n  private static readonly TEN: number = 10;\r\n  @Input() public subAssemblyObject: SubAssemblyInterface;\r\n  @Input() public quantity: string;\r\n  @Input() public operatonalStatus: string;\r\n  @Input() public unit: string;\r\n  @Input() public fromStockMovement: boolean;\r\n  @Output() public onValidate: EventEmitter<SubAssemblyInterface>;\r\n  public quantityMaxValue: number;\r\n  public operationlStatusDisplayed: string;\r\n  public statusList: LabelValue<string>[];\r\n\r\n  public assemblyObject: SubAssemblyInterface;\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogAddUpdateComponent');\r\n    this.onValidate = new EventEmitter<SubAssemblyInterface>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.assemblyObject = {\r\n      quantity: 0\r\n    };\r\n    this.operationlStatusDisplayed = '';\r\n    if (this.subAssemblyObject && this.subAssemblyObject.batchNumber) {\r\n      const assemblyNumberArr = this.subAssemblyObject.batchNumber.split('-');\r\n      const assemblyNumber = parseInt(assemblyNumberArr[1] || '0', 10) + 1;\r\n      this.assemblyObject.batchNumber =\r\n        assemblyNumber < DialogAddUpdateComponent.TEN\r\n          ? assemblyNumberArr[0].concat('-0', assemblyNumber.toString())\r\n          : assemblyNumberArr[0].concat('-', assemblyNumber.toString());\r\n      this.assemblyObject.quantity = this.subAssemblyObject.quantity;\r\n    }\r\n\r\n    this.propertiesService.getValue(GenericPropertyConstants.BATCH_EQUIPMENT_STATUS_MAP).subscribe((results) => {\r\n      this.statusList = results;\r\n    });\r\n    this.assemblyObject.statusUser =\r\n      this.subAssemblyObject.statusUser || this.sessionService.userFirstName + ' ' + this.sessionService.userLastName;\r\n    this.assemblyObject.operationalStatus =\r\n      this.operatonalStatus && this.statusList.filter((row) => row.value === this.operatonalStatus).length > 0\r\n        ? this.operatonalStatus\r\n        : AWPropertiesConstants.MM_BATCH_EQUIPMENT_STATUS_SERVICEABLE;\r\n    this.assemblyObject.creationDate = new Date();\r\n    this.quantityMaxValue = parseInt(this.quantity, 10);\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidate.emit(this.assemblyObject);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".docManagement\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docName\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"document.docName\\\" [disabled]=\\\"isReadOpenMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docPublicationDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"document.docPublicationDate\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docEndOfValidityDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"document.docEndOfValidityDate\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docType\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"types\\\"\\r\\n          [(ngModel)]=\\\"document.docCategory\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docDescription\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          pInputTextarea\\r\\n          [rows]=\\\"3\\\"\\r\\n          [(ngModel)]=\\\"document.docDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbG9naXN0aWNzL3BhY2thZ2luZy1iYXRjaC9mb3JtL2RvY3VtZW50LXVwbG9hZC1kaWFsb2cvZG9jdW1lbnQtdXBsb2FkLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidoDocumentationDTO } from '../../../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-document-upload-dialog',\r\n  templateUrl: './document-upload-dialog.component.html',\r\n  styleUrls: ['./document-upload-dialog.component.scss']\r\n})\r\nexport class DocumentUploadDialogComponent extends DialogComponent implements OnInit {\r\n  @Input() public document: BidoDocumentationDTO;\r\n  @Input() public openMode: ComponentOpenMode;\r\n  @Input() public types: SelectItem[];\r\n  @Output() public onValidated: EventEmitter<BidoDocumentationDTO>;\r\n\r\n  public constructor(public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DocumentUploadDialogComponent');\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidoDocumentationDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.document) {\r\n      this.document = {};\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.document);\r\n    this.closeDialog();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">{{ \\\"transaction.\\\" + componentData.componentId | translate }}</h2>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div *ngIf=\\\"context\\\" class=\\\"page-subtitle\\\">- {{ context }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div class=\\\"object-status\\\" *ngIf=\\\"\\\" (click)=\\\"showStatus()\\\">\\r\\n        {{  | formatSelectOption:  }}\\r\\n      </div> -->\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"editBatch()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      id=\\\"cancel\\\"\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"onCancel()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveBatch()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" mat-raised-button *ngIf=\\\"!isCreateOpenMode\\\" (click)=\\\"showAddUpdatePopup()\\\">\\r\\n      {{ getComponentName() + \\\".delotir\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"reloadBatch()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">{{ \\\"addToFavorite\\\" | translate }}</button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <!-- Home -->\\r\\n        <mat-tab id=\\\"homeTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <!-- MAIN INFO PANEL -->\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ \\\"page.mainData\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <!-- ROW 1 -->\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".familyVariant\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.familyVariantCode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".batchNumber\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.batchNumber\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pn\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control \\\">\\r\\n                        <div *ngIf=\\\"isReadOpenMode\\\" class=\\\"custom-anchor\\\">\\r\\n                          <a>{{ equipment.bidoEquipmentDTO.pnCode }}</a>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!isReadOpenMode\\\">\\r\\n                          <input\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            [(ngModel)]=\\\"equipment.bidoEquipmentDTO.pnCode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".quantity\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.quantity\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".eisDate\\\" | translate }}</label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.eisDate\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"!isCreateOpenMode && !isReadOpenMode\\\" class=\\\"form-group\\\" style=\\\"margin-top:48px\\\">\\r\\n                      <i\\r\\n                        class=\\\"fa fa-fw fa-level-down aw-icon aw-icon-with-border\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                        pTooltip=\\\"{{ componentData.componentId + '.propagate' | translate }}\\\"\\r\\n                        tooltipPosition=\\\"top\\\"\\r\\n                        (click)=\\\"propagate()\\\"\\r\\n                      ></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <!-- ROW 2 -->\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group flex--2\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".designation\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          maxlength=\\\"35\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.equipmentDesignation\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".expirationDate\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          appendTo=\\\"body\\\"\\r\\n                          [(ngModel)]=\\\"mainInfo.expirationDate\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"!isTool() && !isAircraft()\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{\\r\\n                        componentData.componentId + \\\".configurationTracked\\\" | translate\\r\\n                      }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          binary=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"configurationTracked\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!isTool() && isAircraft()\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{\\r\\n                        componentData.componentId + \\\".configurationTracked\\\" | translate\\r\\n                      }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          binary=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"configurationTracked\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".owner\\\" | translate }}</label>\\r\\n\\r\\n                      <div\\r\\n                        class=\\\"form-control form-control-with-modal\\\"\\r\\n                        [ngClass]=\\\"{ disabled: isReadOpenMode || !isCreateOpenMode }\\\"\\r\\n                      >\\r\\n                        <div class=\\\"form-control-data\\\" (click)=\\\"isCreateOpenMode ? searchOwners() : ''\\\">\\r\\n                          {{ equipment.bidoEquipmentDTO.ownerCustomerCode }}\\r\\n                          <span *ngIf=\\\"ownerCustomerName\\\">({{ ownerCustomerName }})</span>\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"equipment.bidoEquipmentDTO.ownerCustomerCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"equipment.ownerCustomerCode = undefined; ownerCustomerName = undefined\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                        <div class=\\\"btn-search-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"searchOwners()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".operator\\\" | translate }}</label>\\r\\n\\r\\n                      <div\\r\\n                        class=\\\"form-control form-control-with-modal\\\"\\r\\n                        [ngClass]=\\\"{ disabled: isReadOpenMode || !isCreateOpenMode }\\\"\\r\\n                      >\\r\\n                        <div class=\\\"form-control-data\\\" (click)=\\\"isCreateOpenMode ? searchOperators() : ''\\\">\\r\\n                          {{ equipment.bidoEquipmentDTO.operatorCustomerCode }}\\r\\n                          <span *ngIf=\\\"operatorCustomerName\\\">({{ operatorCustomerName }})</span>\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"equipment.bidoEquipmentDTO.operatorCustomerCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"equipment.operatorCustomerCode = undefined; operatorCustomerName = undefined\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                        <div class=\\\"btn-search-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"searchOperators()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <!-- ROW 3 -->\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div *ngIf=\\\"!isTool() && !isAircraft()\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".manufacturer\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          maxlength=\\\"35\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.snManufacturer\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!isTool() && isAircraft()\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".acManuFacturer\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input \\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.snManufacturer\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"!isTool() && !isAircraft()\\\" class=\\\"form-group general-field\\\">\\r\\n                      <label class=\\\"form-label\\\">{{\\r\\n                        componentData.componentId + \\\".manufacturingDate\\\" | translate\\r\\n                      }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.manufacturingDate\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        >\\r\\n                        </p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"!isTool() && isAircraft()\\\" class=\\\"form-group general-field\\\">\\r\\n                      <label class=\\\"form-label\\\">{{\\r\\n                        componentData.componentId + \\\".manufacturingDate\\\" | translate\\r\\n                      }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.manufacturingDate\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        >\\r\\n                        </p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"!isEngine() && !isAircraft() && !isTool()\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".model\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"equipmentModelCodeAndName\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"isEngine() && !isAircraft() && !isTool()\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".model\\\" | translate }}</label>\\r\\n\\r\\n                      <div *ngIf=\\\"isCreateOpenMode\\\" class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"equipmentModelCodeAndName\\\" [disabled]=\\\"true\\\" />\\r\\n                      </div>\\r\\n\\r\\n                      <div\\r\\n                        *ngIf=\\\"!isCreateOpenMode\\\"\\r\\n                        class=\\\"form-control form-control-with-modal\\\"\\r\\n                        [ngClass]=\\\"{ disabled: isReadOpenMode }\\\"\\r\\n                      >\\r\\n                        <div class=\\\"form-control-data\\\" (click)=\\\"!isReadOpenMode ? searchModelCodePopup() : ''\\\">\\r\\n                          {{ equipmentModelCodeAndName }}\\r\\n                        </div>\\r\\n                        <div class=\\\"btn-search-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-edit aw-icon btn-search\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"searchModelCodePopup()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"!isTool() && !isAircraft() && isEngine()\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".manApp\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          binary=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"equipment.pMa\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"!isEngine() && !isAircraft() && !isTool()\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".rating\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [disabled]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"equipmentRatingCodeAndName\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"isEngine() && !isAircraft() && !isTool()\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".rating\\\" | translate }}</label>\\r\\n\\r\\n                      <div *ngIf=\\\"isCreateOpenMode\\\" class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"equipmentRatingCodeAndName\\\"\\r\\n                          [disabled]=\\\"true\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n\\r\\n                      <div\\r\\n                        *ngIf=\\\"!isCreateOpenMode\\\"\\r\\n                        class=\\\"form-control form-control-with-modal\\\"\\r\\n                        [ngClass]=\\\"{ disabled: isReadOpenMode }\\\"\\r\\n                      >\\r\\n                        <div class=\\\"form-control-data\\\" (click)=\\\"!isReadOpenMode ? searchRatingCodePopup() : ''\\\">\\r\\n                          {{ equipmentRatingCodeAndName }}\\r\\n                        </div>\\r\\n                        <div class=\\\"btn-search-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-edit aw-icon btn-search\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"searchRatingCodePopup()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".operationalStatus\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.operationalStatus\\\"\\r\\n                          [options]=\\\"statusList\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Engineering References -->\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".engineeringReferences\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content  grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div *ngIf=\\\"!isTool()\\\" class=\\\"section\\\">\\r\\n                      <div *ngIf=\\\"!isAircraft()\\\" class=\\\"section-content\\\">\\r\\n                        <div class=\\\"column\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".itemCode\\\" | translate\\r\\n                              }}</label>\\r\\n                              <div class=\\\"form-control display--flex-row\\\">\\r\\n                                <input\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input flex--1\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.bidoEquipmentDTO.chapter\\\"\\r\\n                                  maxlength=\\\"2\\\"\\r\\n                                />\\r\\n                                <span style=\\\"margin-top:10px\\\" class=\\\"separator\\\">-</span>\\r\\n                                <input\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input flex--1\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.section\\\"\\r\\n                                  maxlength=\\\"2\\\"\\r\\n                                />\\r\\n                                <span style=\\\"margin-top:10px\\\" class=\\\"separator\\\">-</span>\\r\\n                                <input\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input flex--1\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.bidoEquipmentDTO.subject\\\"\\r\\n                                  maxlength=\\\"2\\\"\\r\\n                                />\\r\\n                                <span style=\\\"margin-top:10px\\\" class=\\\"separator\\\">-</span>\\r\\n                                <input\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input flex--1\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.bidoEquipmentDTO.sheet\\\"\\r\\n                                  maxlength=\\\"5\\\"\\r\\n                                />\\r\\n                                <span style=\\\"margin-top:10px\\\" class=\\\"separator\\\">-</span>\\r\\n                                <input\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input flex--1\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.bidoEquipmentDTO.marks\\\"\\r\\n                                  maxlength=\\\"5\\\"\\r\\n                                />\\r\\n\\r\\n                                <div class=\\\"btn-search-wrapper\\\" *ngIf=\\\"!isReadOpenMode\\\">\\r\\n                                  <i\\r\\n                                    class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                                    aria-hidden=\\\"true\\\"\\r\\n                                    (click)=\\\"openItemTableDialog()\\\"\\r\\n                                  ></i>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group general-field\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".itemNumber\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.itemNumber\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group general-field\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".functionCode\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.bidoEquipmentDTO.functionCode\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".position\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-dropdown\\r\\n                                  class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                  [options]=\\\"propertyPositions\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.bidoEquipmentDTO.equiPosition\\\"\\r\\n                                  [showClear]=\\\"true\\\"\\r\\n                                  placeholder=\\\"&nbsp;\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                ></p-dropdown>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!isEngine()\\\" class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".function\\\" | translate\\r\\n                              }}</label>\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-dropdown\\r\\n                                  class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                  [options]=\\\"propertyFunctions\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.bidoEquipmentDTO.equipmentFunction\\\"\\r\\n                                  [showClear]=\\\"true\\\"\\r\\n                                  placeholder=\\\"&nbsp;\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                ></p-dropdown>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!isEngine()\\\" class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".lifeRestriction\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-checkbox\\r\\n                                  class=\\\"aw-checkbox\\\"\\r\\n                                  binary=\\\"true\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.bidoEquipmentDTO.lifeRestriction\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                >\\r\\n                                </p-checkbox>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!isEngine()\\\" class=\\\"form-group general-field\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".manufacturingConfiguration\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-checkbox\\r\\n                                  binary=\\\"true\\\"\\r\\n                                  class=\\\"aw-checkbox\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.bidoEquipmentDTO.manufacturingConfiguration\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                ></p-checkbox>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".geographicalLocation\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content  grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".zone\\\" | translate }}</label>\\r\\n\\r\\n                          <div *ngIf=\\\"isCreateOpenMode\\\" class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"propertyZones\\\"\\r\\n                              [(ngModel)]=\\\"equipment.bidoEquipmentDTO.zone\\\"\\r\\n                              (onChange)=\\\"changeZone()\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n\\r\\n                          <div\\r\\n                            *ngIf=\\\"!isCreateOpenMode\\\"\\r\\n                            class=\\\"form-control form-control-with-modal\\\"\\r\\n                            [ngClass]=\\\"{ disabled: isReadOpenMode }\\\"\\r\\n                          >\\r\\n                            <div class=\\\"form-control-data\\\" (click)=\\\"!isReadOpenMode ? searchGeoLocation() : ''\\\">\\r\\n                              {{ equipment.bidoEquipmentDTO.zone }}\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"equipment.bidoEquipmentDTO.zone\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                              <i\\r\\n                                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                                aria-hidden=\\\"true\\\"\\r\\n                                (click)=\\\"equipment.bidoEquipmentDTO.zone = undefined\\\"\\r\\n                              ></i>\\r\\n                            </div>\\r\\n                            <div class=\\\"btn-search-wrapper\\\">\\r\\n                              <i\\r\\n                                class=\\\"fa fa-fw fa-edit aw-icon btn-search\\\"\\r\\n                                aria-hidden=\\\"true\\\"\\r\\n                                (click)=\\\"searchGeoLocation()\\\"\\r\\n                              ></i>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".country\\\" | translate }}</label>\\r\\n\\r\\n                          <div *ngIf=\\\"isCreateOpenMode\\\" class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"propertyCountries\\\"\\r\\n                              [(ngModel)]=\\\"equipment.bidoEquipmentDTO.country\\\"\\r\\n                              (onChange)=\\\"changeCountry()\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"!isCreateOpenMode\\\" class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              [(ngModel)]=\\\"equipment.bidoEquipmentDTO.country\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".location\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"propertyLocations\\\"\\r\\n                              [(ngModel)]=\\\"locationValue\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".usCounters\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content  grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".usage\\\" | translate }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"\\r\\n                              !equipment.usageCounterCalculationDTO.usageValue ||\\r\\n                              equipment.usageCounterCalculationDTO.usageValue === NOT_ACTIVATED\\r\\n                                ? COLOR_RED\\r\\n                                : COLOR_GREEN\\r\\n                            \\\"\\r\\n                          >\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"equipment.usageCounterCalculationDTO.usageValue\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".storage\\\" | translate }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"\\r\\n                              !equipment.usageCounterCalculationDTO.storageValue ||\\r\\n                              equipment.usageCounterCalculationDTO.storageValue === NOT_ACTIVATED\\r\\n                                ? COLOR_RED\\r\\n                                : COLOR_GREEN\\r\\n                            \\\"\\r\\n                          >\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"equipment.usageCounterCalculationDTO.storageValue\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".usageStorage\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"\\r\\n                              !equipment.usageCounterCalculationDTO.usageStorageValue ||\\r\\n                              equipment.usageCounterCalculationDTO.usageStorageValue === NOT_ACTIVATED\\r\\n                                ? COLOR_RED\\r\\n                                : COLOR_GREEN\\r\\n                            \\\"\\r\\n                          >\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"equipment.usageCounterCalculationDTO.usageStorageValue\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"!isCreateOpenMode\\\" id=\\\"structureTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".batchInfo\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <!-- Batch Reference -->\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ getComponentName() + \\\".batchReference\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content  grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <!-- SECTION  1 -->\\r\\n                      <div class=\\\"section flex--2\\\">\\r\\n                        <h4 class=\\\"section-title\\\">\\r\\n                          {{ componentData.componentId + \\\".manufaturingBatch\\\" | translate }}\\r\\n                        </h4>\\r\\n                        <div class=\\\"section-content\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                getComponentName() + \\\".manufaturingBatchNumber\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control \\\">\\r\\n                                <div *ngIf=\\\"isReadOpenMode\\\" class=\\\"custom-anchor\\\">\\r\\n                                  <a (click)=\\\"openMfgBatch(equipment.manufacturingBatch.equipmentCode)\\\">{{\\r\\n                                    equipment.manufacturingBatch && equipment.manufacturingBatch.batchNumber\\r\\n                                  }}</a>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!isReadOpenMode\\\">\\r\\n                                  <input\\r\\n                                    class=\\\"aw-input\\\"\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                    [(ngModel)]=\\\"\\r\\n                                      equipment.manufacturingBatch && equipment.manufacturingBatch.batchNumber\\r\\n                                    \\\"\\r\\n                                  />\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{ getComponentName() + \\\".batchQuantity\\\" | translate }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input\\r\\n                                  class=\\\"aw-input\\\"\\r\\n                                  type=\\\"text\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.manufacturingBatch && equipment.manufacturingBatch.quantity\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                getComponentName() + \\\".manufaturingBatchDate\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-calendar\\r\\n                                  showButtonBar=\\\"true\\\"\\r\\n                                  [monthNavigator]=\\\"true\\\"\\r\\n                                  [yearNavigator]=\\\"true\\\"\\r\\n                                  [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                                  class=\\\"aw-calendar\\\"\\r\\n                                  [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                                  [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                                  appendTo=\\\"body\\\"\\r\\n                                  [(ngModel)]=\\\"equipment.manufacturingBatch && equipment.manufacturingBatch.date\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                ></p-calendar>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- SECTION 2 -->\\r\\n                      <div class=\\\"section flex--2\\\">\\r\\n                        <h4 class=\\\"section-title\\\">\\r\\n                          {{ componentData.componentId + \\\".originalPackagingBatch\\\" | translate }}\\r\\n                        </h4>\\r\\n                        <div class=\\\"section-content\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                getComponentName() + \\\".originalPackagingBatchNumber\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control \\\">\\r\\n                                <div *ngIf=\\\"isReadOpenMode\\\" class=\\\"custom-anchor\\\">\\r\\n                                  <a (click)=\\\"openPackagingBatch(equipment.superiorPackagingBatch.equipmentCode)\\\">{{\\r\\n                                    equipment.superiorPackagingBatch && equipment.superiorPackagingBatch.batchNumber\\r\\n                                  }}</a>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"!isReadOpenMode\\\">\\r\\n                                  <input\\r\\n                                    class=\\\"aw-input\\\"\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                    [(ngModel)]=\\\"\\r\\n                                      equipment.superiorPackagingBatch && equipment.superiorPackagingBatch.batchNumber\\r\\n                                    \\\"\\r\\n                                  />\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                getComponentName() + \\\".originalPackagingBatchQuantity\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input\\r\\n                                  class=\\\"aw-input\\\"\\r\\n                                  type=\\\"text\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                  [(ngModel)]=\\\"\\r\\n                                    equipment.superiorPackagingBatch && equipment.superiorPackagingBatch.quantity\\r\\n                                  \\\"\\r\\n                                />\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                getComponentName() + \\\".originalPackagingBatchDate\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-calendar\\r\\n                                  showButtonBar=\\\"true\\\"\\r\\n                                  [monthNavigator]=\\\"true\\\"\\r\\n                                  [yearNavigator]=\\\"true\\\"\\r\\n                                  [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                                  class=\\\"aw-calendar\\\"\\r\\n                                  [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                                  [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                                  appendTo=\\\"body\\\"\\r\\n                                  [(ngModel)]=\\\"\\r\\n                                    equipment.superiorPackagingBatch && equipment.superiorPackagingBatch.date\\r\\n                                  \\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                ></p-calendar>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Sub Assemblies -->\\r\\n            <div *ngIf=\\\"!isCreateOpenMode\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container\\\">\\r\\n                      <h3 class=\\\"grid-cell-title\\\">\\r\\n                        {{ getComponentName() + \\\".subAssemblies\\\" | translate }}\\r\\n                      </h3>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content\\\">\\r\\n                    <p-table\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                      #pSubAssemblyPosts\\r\\n                      class=\\\"aw-table2\\\"\\r\\n                      [columns]=\\\"subAssemblyTableCols\\\"\\r\\n                      [value]=\\\"subAssemblyTableData\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                        <span *ngIf=\\\"!isLoadingEventsTable\\\"> &nbsp;</span>\\r\\n\\r\\n                        <div *ngIf=\\\"isLoadingEventsTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                          <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                          <div class=\\\"lds-hourglass\\\"></div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"caption\\\">\\r\\n                        <div class=\\\"aw-table-header\\\">\\r\\n                          <div class=\\\"aw-table-global-filter\\\">\\r\\n                            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </label>\\r\\n\\r\\n                            <input\\r\\n                              #ptableMeasuresGlobalFilter\\r\\n                              class=\\\"aw-table-global-filter-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                              (input)=\\\"pSubAssemblyPosts.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                        <colgroup>\\r\\n                          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                            {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                          </th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                          <td\\r\\n                            *ngFor=\\\"let col of columns\\\"\\r\\n                            [ngSwitch]=\\\"col.field\\\"\\r\\n                            [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                          >\\r\\n                            <span *ngSwitchCase=\\\"'batchNumber'\\\">\\r\\n                              <a (click)=\\\"openPackagingBatch(rowData.equipmentCode)\\\">{{ rowData[col.field] }}</a>\\r\\n                            </span>\\r\\n                            <span *ngSwitchCase=\\\"'creationDate'\\\">\\r\\n                              {{ rowData[col.field] | date: \\\"shortDate\\\":\\\"\\\":translateService.currentLang }}\\r\\n                            </span>\\r\\n                            <span *ngSwitchCase=\\\"'operationalStatus'\\\">{{\\r\\n                              rowData[col.field] | formatSelectOption: statusList\\r\\n                            }}</span>\\r\\n                            <span *ngSwitchCase=\\\"'emp'\\\">\\r\\n                              {{ rowData[\\\"location\\\"] }}\\r\\n                            </span>\\r\\n                            <span *ngSwitchCase=\\\"'quantity'\\\">\\r\\n                              {{ rowData[col.field] | formatNumber }}\\r\\n                            </span>\\r\\n                            <span *ngSwitchCase=\\\"'batchOriginQty'\\\">\\r\\n                              {{ rowData[col.field] | formatNumber }}\\r\\n                            </span>\\r\\n                            <span *ngSwitchDefault>\\r\\n                              {{ rowData[col.field] }}\\r\\n                            </span>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"!isCreateOpenMode\\\" id=\\\"stockTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".stock\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <!-- Stock -->\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div *ngIf=\\\"!isCreateOpenMode\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container\\\">\\r\\n                      <h3 class=\\\"grid-cell-title\\\">\\r\\n                        {{ componentData.componentId + \\\".currentStock\\\" | translate }}\\r\\n                      </h3>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                    <div *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\" class=\\\"grid-cell-content-action\\\">\\r\\n                      <button type=\\\"button\\\" mat-raised-button (click)=\\\"createStockMovement()\\\">\\r\\n                        {{ componentData.componentId + \\\".createStockMovement\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".site\\\" | translate }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <input\\r\\n                                type=\\\"text\\\"\\r\\n                                class=\\\"aw-input\\\"\\r\\n                                [(ngModel)]=\\\"equipment.stockOutputDto.site\\\"\\r\\n                                [disabled]=\\\"true\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".warehouse\\\" | translate }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <input\\r\\n                                type=\\\"text\\\"\\r\\n                                class=\\\"aw-input\\\"\\r\\n                                [(ngModel)]=\\\"equipment.stockOutputDto.warehouse\\\"\\r\\n                                [disabled]=\\\"true\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".zone\\\" | translate }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"areaText\\\" [disabled]=\\\"true\\\" />\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".bin\\\" | translate }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <input\\r\\n                                type=\\\"text\\\"\\r\\n                                class=\\\"aw-input\\\"\\r\\n                                [(ngModel)]=\\\"equipment.stockOutputDto.storageBin\\\"\\r\\n                                [disabled]=\\\"true\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container\\\">\\r\\n                      <h3 *ngIf=\\\"!awPropertiesConstants.MM_FULL_MODULE_ACTIVATED\\\" class=\\\"grid-cell-title\\\">\\r\\n                        {{ componentData.componentId + \\\".stockLog\\\" | translate }} ({{\\r\\n                          bidoStockDisplayed ? bidoStockDisplayed.length : 0\\r\\n                        }})\\r\\n                      </h3>\\r\\n                      <h3 *ngIf=\\\"awPropertiesConstants.MM_FULL_MODULE_ACTIVATED\\\" class=\\\"grid-cell-title\\\">\\r\\n                        {{ componentData.componentId + \\\".stockLog\\\" | translate }} ({{\\r\\n                          stockMvtTableDataSource.dataCount\\r\\n                        }})\\r\\n                      </h3>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                    <div class=\\\"section\\\" *ngIf=\\\"!awPropertiesConstants.MM_FULL_MODULE_ACTIVATED\\\">\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"table-wrapper\\\">\\r\\n                            <p-table\\r\\n                              [resizableColumns]=\\\"true\\\"\\r\\n                              #ptableStock\\r\\n                              class=\\\"aw-table2\\\"\\r\\n                              [columns]=\\\"stockTableCols\\\"\\r\\n                              [value]=\\\"bidoStockDisplayed\\\"\\r\\n                              [scrollable]=\\\"true\\\"\\r\\n                              dataKey=\\\"code\\\"\\r\\n                              [paginator]=\\\"true\\\"\\r\\n                              [rows]=\\\"TABLE_PAGINATION_DEFAULT_ROWS\\\"\\r\\n                            >\\r\\n                              <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                                <span *ngIf=\\\"!isLoadingStockTable\\\"> &nbsp;</span>\\r\\n\\r\\n                                <div *ngIf=\\\"isLoadingStockTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                                  <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                                  <div class=\\\"lds-hourglass\\\"></div>\\r\\n                                </div>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template pTemplate=\\\"caption\\\">\\r\\n                                <div class=\\\"aw-table-header\\\">\\r\\n                                  <div class=\\\"aw-table-global-filter\\\">\\r\\n                                    <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                                      <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                    </label>\\r\\n\\r\\n                                    <input\\r\\n                                      #ptableStockGlobalFilter\\r\\n                                      class=\\\"aw-table-global-filter-input\\\"\\r\\n                                      type=\\\"text\\\"\\r\\n                                      placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                                      (input)=\\\"ptableStock.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                                    />\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"aw-table-actions\\\"></div>\\r\\n                                </div>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                                <colgroup>\\r\\n                                  <col\\r\\n                                    *ngFor=\\\"let col of columns\\\"\\r\\n                                    [ngStyle]=\\\"{ width: col.width, 'text-align': col.alignment }\\\"\\r\\n                                  />\\r\\n                                  <col class=\\\"row-expand-wrapper\\\" />\\r\\n                                  <col class=\\\"row-action-wrapper\\\" />\\r\\n                                </colgroup>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                                <tr>\\r\\n                                  <th\\r\\n                                    pResizableColumn\\r\\n                                    *ngFor=\\\"let col of columns\\\"\\r\\n                                    [ngStyle]=\\\"{ width: col.width, 'text-align': col.alignment }\\\"\\r\\n                                  >\\r\\n                                    {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                                  </th>\\r\\n                                  <th class=\\\"row-expand-wrapper\\\"></th>\\r\\n                                  <th class=\\\"row-action-wrapper\\\"></th>\\r\\n                                </tr>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                                <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                                  <td\\r\\n                                    *ngFor=\\\"let col of columns\\\"\\r\\n                                    [ngSwitch]=\\\"col.field\\\"\\r\\n                                    [ngStyle]=\\\"{ width: col.width, 'text-align': col.alignment }\\\"\\r\\n                                  >\\r\\n                                    <span *ngSwitchCase=\\\"'stockMvtDate'\\\">\\r\\n                                      {{ rowData[col.field] | date: \\\"shortDate\\\":\\\"\\\":translateService.currentLang }}\\r\\n                                    </span>\\r\\n                                    <span *ngSwitchCase=\\\"'code'\\\">\\r\\n                                      {{ rowData[\\\"code\\\"] }}\\r\\n                                    </span>\\r\\n\\r\\n                                    <span *ngSwitchCase=\\\"'document'\\\">\\r\\n                                      <a *ngIf=\\\"rowData['document']\\\" (click)=\\\"onClickDocument(rowData)\\\">\\r\\n                                        {{ rowData[\\\"document\\\"] }}</a\\r\\n                                      >\\r\\n                                    </span>\\r\\n                                    <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\\r\\n                                  </td>\\r\\n\\r\\n                                  <td class=\\\"row-expand-wrapper\\\" [pRowToggler]=\\\"rowData\\\">\\r\\n                                    <i\\r\\n                                      class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n                                      [ngClass]=\\\"rowData._expand ? 'fa-minus' : 'fa-plus'\\\"\\r\\n                                      aria-hidden=\\\"true\\\"\\r\\n                                      pTooltip=\\\"{{ 'global.showTableRowDetails' | translate }}\\\"\\r\\n                                      tooltipPosition=\\\"top\\\"\\r\\n                                      (click)=\\\"toggleRowDetailsVisibilityStock(rowData)\\\"\\r\\n                                    ></i>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template pTemplate=\\\"rowexpansion\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                                <tr class=\\\"row-expanded\\\" *ngIf=\\\"rowData._expand\\\">\\r\\n                                  <td [attr.colspan]=\\\"columns.length + 2\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-label\\\">\\r\\n                                          {{ getComponentName() + \\\".stockMvtBatchNumber\\\" | translate }}\\r\\n                                        </label>\\r\\n\\r\\n                                        <div class=\\\"form-control\\\">\\r\\n                                          <input\\r\\n                                            class=\\\"aw-input\\\"\\r\\n                                            type=\\\"text\\\"\\r\\n                                            [(ngModel)]=\\\"rowData.stockMvtBatchNumber\\\"\\r\\n                                            [disabled]=\\\"true\\\"\\r\\n                                          />\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-label\\\">\\r\\n                                          {{ getComponentName() + \\\".bin\\\" | translate }}\\r\\n                                        </label>\\r\\n                                        <div class=\\\"form-control\\\">\\r\\n                                          <input\\r\\n                                            class=\\\"aw-input\\\"\\r\\n                                            type=\\\"text\\\"\\r\\n                                            [(ngModel)]=\\\"rowData.bin\\\"\\r\\n                                            [disabled]=\\\"true\\\"\\r\\n                                          />\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-label\\\">\\r\\n                                          {{ getComponentName() + \\\".stockType\\\" | translate }}\\r\\n                                        </label>\\r\\n\\r\\n                                        <div class=\\\"form-control\\\">\\r\\n                                          <input\\r\\n                                            class=\\\"aw-input\\\"\\r\\n                                            type=\\\"text\\\"\\r\\n                                            [(ngModel)]=\\\"rowData.stockType\\\"\\r\\n                                            [disabled]=\\\"true\\\"\\r\\n                                          />\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-label\\\">\\r\\n                                          {{ getComponentName() + \\\".valuation\\\" | translate }}\\r\\n                                        </label>\\r\\n\\r\\n                                        <div class=\\\"form-control\\\">\\r\\n                                          <input\\r\\n                                            class=\\\"aw-input\\\"\\r\\n                                            type=\\\"text\\\"\\r\\n                                            [(ngModel)]=\\\"rowData.valuation\\\"\\r\\n                                            [disabled]=\\\"true\\\"\\r\\n                                          />\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-label\\\">\\r\\n                                          {{ getComponentName() + \\\".comments\\\" | translate }}\\r\\n                                        </label>\\r\\n\\r\\n                                        <div class=\\\"form-control\\\">\\r\\n                                          <input\\r\\n                                            class=\\\"aw-input\\\"\\r\\n                                            type=\\\"text\\\"\\r\\n                                            [(ngModel)]=\\\"rowData.comments\\\"\\r\\n                                            [disabled]=\\\"true\\\"\\r\\n                                          />\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n                              </ng-template>\\r\\n                            </p-table>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"section\\\" *ngIf=\\\"awPropertiesConstants.MM_FULL_MODULE_ACTIVATED\\\">\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"table-wrapper\\\">\\r\\n                            <a-table [dataSource]=\\\"stockMvtTableDataSource\\\">\\r\\n                              <ng-template columnDef=\\\"movement\\\" let-rowData=\\\"rowData\\\">\\r\\n                                <div>\\r\\n                                  <a style=\\\"font-weight: 600;\\\" (click)=\\\"openStockMovement(rowData)\\\">\\r\\n                                    {{ rowData[\\\"stockMvtCode\\\"] }}\\r\\n                                  </a>\\r\\n                                </div>\\r\\n\\r\\n                                <div>\\r\\n                                  {{ rowData[\\\"bidtStockMvtType\\\"]?.smtName | extractTranslation }}\\r\\n                                </div>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template columnDef=\\\"type\\\" let-rowData=\\\"rowData\\\">\\r\\n                                <i\\r\\n                                  *ngIf=\\\"rowData['bidtStockMvtType']?.smtWay === bidtStockMvtConstants.MVT_WAY_CREDIT\\\"\\r\\n                                  class=\\\"fa fa-fw fa-arrow-right procurement-type--in\\\"\\r\\n                                  aria-hidden=\\\"true\\\"\\r\\n                                ></i>\\r\\n                                <i\\r\\n                                  *ngIf=\\\"rowData['bidtStockMvtType']?.smtWay === bidtStockMvtConstants.MVT_WAY_DEBIT\\\"\\r\\n                                  class=\\\"fa fa-fw fa-arrow-right procurement-type--out\\\"\\r\\n                                  aria-hidden=\\\"true\\\"\\r\\n                                ></i>\\r\\n                                <i\\r\\n                                  *ngIf=\\\"rowData['bidtStockMvtType']?.smtWay === bidtStockMvtConstants.MVT_WAY_TRANSFER\\\"\\r\\n                                  class=\\\"fa fa-fw fa-arrow-right procurement-type--transfer\\\"\\r\\n                                  aria-hidden=\\\"true\\\"\\r\\n                                ></i>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template columnDef=\\\"warehouseWorkshop\\\" let-rowData=\\\"rowData\\\">\\r\\n                                <div>\\r\\n                                  <div style=\\\"min-width: 3rem; display: inline-block;\\\">\\r\\n                                    {{ getComponentName() + \\\".site\\\" | translate }}\\r\\n                                  </div>\\r\\n                                  <span style=\\\"font-weight: 600\\\">{{ rowData[\\\"siteName\\\"] }}</span>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                  <span style=\\\"font-weight: 600\\\">{{ rowData[\\\"warehousename\\\"] }}</span>\\r\\n                                </div>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template columnDef=\\\"outbound\\\" let-rowData=\\\"rowData\\\">\\r\\n                                <div *ngIf=\\\"rowData['bidtStorageBinZoneIssue']?.sbNumber\\\">\\r\\n                                  <div style=\\\"min-width: 2rem; display: inline-block;\\\">\\r\\n                                    {{ getComponentName() + \\\".zone\\\" | translate }}\\r\\n                                  </div>\\r\\n                                  <span style=\\\"font-weight: 600\\\">\\r\\n                                    {{ rowData[\\\"bidtStorageBinZoneIssue\\\"]?.sbNumber }}\\r\\n                                    <ng-container *ngIf=\\\"rowData['bidtStorageBinZoneIssue']?.sbDescription\\\">\\r\\n                                      - {{ rowData[\\\"bidtStorageBinZoneIssue\\\"]?.sbDescription }}\\r\\n                                    </ng-container>\\r\\n                                  </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"rowData['bidtStorageBinBinIssue']?.sbNumber\\\">\\r\\n                                  <div style=\\\"min-width: 3rem; display: inline-block;\\\">\\r\\n                                    {{ getComponentName() + \\\".emp\\\" | translate }}\\r\\n                                  </div>\\r\\n                                  <span style=\\\"font-weight: 600\\\">{{\\r\\n                                    rowData[\\\"bidtStorageBinBinIssue\\\"]?.sbNumber\\r\\n                                  }}</span>\\r\\n                                </div>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template columnDef=\\\"inbound\\\" let-rowData=\\\"rowData\\\">\\r\\n                                <div *ngIf=\\\"rowData['bidtStorageBinZoneReceipt']?.sbNumber\\\">\\r\\n                                  <div style=\\\"min-width: 2rem; display: inline-block;\\\">\\r\\n                                    {{ getComponentName() + \\\".zone\\\" | translate }}\\r\\n                                  </div>\\r\\n                                  <span style=\\\"font-weight: 600\\\">\\r\\n                                    {{ rowData[\\\"bidtStorageBinZoneReceipt\\\"]?.sbNumber }}\\r\\n                                    <ng-container *ngIf=\\\"rowData['bidtStorageBinZoneReceipt']?.sbDescription\\\">\\r\\n                                      - {{ rowData[\\\"bidtStorageBinZoneReceipt\\\"]?.sbDescription }}\\r\\n                                    </ng-container>\\r\\n                                  </span>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"rowData['bidtStorageBinBinReceipt']?.sbNumber\\\">\\r\\n                                  <div style=\\\"min-width: 3rem; display: inline-block;\\\">\\r\\n                                    {{ getComponentName() + \\\".emp\\\" | translate }}\\r\\n                                  </div>\\r\\n                                  <span style=\\\"font-weight: 600\\\">{{\\r\\n                                    rowData[\\\"bidtStorageBinBinReceipt\\\"]?.sbNumber\\r\\n                                  }}</span>\\r\\n                                </div>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template columnDef=\\\"status\\\" let-rowData=\\\"rowData\\\">\\r\\n                                <div>\\r\\n                                  <span style=\\\"font-weight: 600;\\\">{{ rowData[\\\"smoStatus\\\"].label }}</span>\\r\\n                                </div>\\r\\n\\r\\n                                <div>\\r\\n                                  {{\\r\\n                                    (rowData[\\\"_stockMvt\\\"].stockMvtDate\\r\\n                                      ? rowData[\\\"_stockMvt\\\"].stockMvtDate\\r\\n                                      : rowData[\\\"_stockMvt\\\"].stockMvtPlannedDate\\r\\n                                    ) | date: \\\"yyyy/MM/dd HH:mm\\\":\\\"\\\":translateService.currentLang\\r\\n                                  }}\\r\\n                                </div>\\r\\n                              </ng-template>\\r\\n\\r\\n                              <ng-template columnDef=\\\"document\\\" let-rowData=\\\"rowData\\\">\\r\\n                                <div>\\r\\n                                  <a (click)=\\\"openDocOrigine(rowData)\\\">{{ rowData[\\\"documentNum\\\"] }}</a>\\r\\n                                </div>\\r\\n                                <div>\\r\\n                                  <i>{{ rowData[\\\"documentDescription\\\"] }}</i>\\r\\n                                </div>\\r\\n                              </ng-template>\\r\\n                            </a-table>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <!--------table end ---------->\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"!isCreateOpenMode\\\" id=\\\"additionalTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ getComponentName() + \\\".additionalInfo\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <!-- Additional Information -->\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ getComponentName() + \\\".additionalInfo\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div *ngIf=\\\"!isTool()\\\" class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"column\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div *ngIf=\\\"!isAircraft()\\\" class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".assetCode\\\" | translate }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <input\\r\\n                                type=\\\"text\\\"\\r\\n                                maxlength=\\\"25\\\"\\r\\n                                class=\\\"aw-input\\\"\\r\\n                                [(ngModel)]=\\\"equipment.bidoEquipmentDTO.equipmentCode\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"isAircraft()\\\" class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".assetCode\\\" | translate }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <input\\r\\n                                type=\\\"text\\\"\\r\\n                                maxlength=\\\"25\\\"\\r\\n                                class=\\\"aw-input\\\"\\r\\n                                [(ngModel)]=\\\"equipment.bidoEquipmentDTO.equipmentCode\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <aw-dynamic-attributes\\r\\n                          [showHistory]=\\\"true\\\"\\r\\n                          [history]=\\\"dynamicAttributesHistoric\\\"\\r\\n                          [attributes]=\\\"dynamicAttributes\\\"\\r\\n                          [isReadOpenMode]=\\\"isReadOpenMode\\\"\\r\\n                        >\\r\\n                        </aw-dynamic-attributes>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"!isCreateOpenMode\\\" id=\\\"documentTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".tabDocument\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <!-- Documents -->\\r\\n            <div *ngIf=\\\"!isCreateOpenMode\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container\\\">\\r\\n                      <h3 class=\\\"grid-cell-title\\\">\\r\\n                        {{ componentData.componentId + \\\".tabDocument\\\" | translate }}\\r\\n                      </h3>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content\\\">\\r\\n                    <a-table [dataSource]=\\\"documentTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button\\r\\n                          *ngIf=\\\"documentTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"downloadFiles()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.download\\\" | translate }}\\r\\n                        </button>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && documentTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteDocuments()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && documentTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"editDocument()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.edit\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && documentTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"openDocument()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.open\\\" | translate }}\\r\\n                        </button>\\r\\n                        <p-fileUpload\\r\\n                          #fileUploader\\r\\n                          *ngIf=\\\"!isReadOpenMode && !documentTableDataSource.hasDataSelection\\\"\\r\\n                          chooseLabel=\\\"{{ 'global.upload' | translate }}\\\"\\r\\n                          name=\\\"document[]\\\"\\r\\n                          customUpload=\\\"true\\\"\\r\\n                          mode=\\\"basic\\\"\\r\\n                          auto=\\\"true\\\"\\r\\n                          (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                        ></p-fileUpload>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"docEndOfValidityDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                        {{ rowData.docEndOfValidityDate | date: \\\"shortDate\\\":\\\"\\\":translateService.currentLang }}\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"docExtension\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <span> {{ showDocExtension(rowData) }} </span>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"docPublicationDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <span>\\r\\n                          {{ rowData.docPublicationDate | date: \\\"shortDate\\\":\\\"\\\":translateService.currentLang }}\\r\\n                        </span>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-dialog-table\\r\\n  *ngIf=\\\"showDialogOwner\\\"\\r\\n  [(display)]=\\\"showDialogOwner\\\"\\r\\n  [data]=\\\"dialogTableDataOwner\\\"\\r\\n  (onSelected)=\\\"setSelectedOwner($event)\\\"\\r\\n></aw-dialog-table>\\r\\n\\r\\n<aw-dialog-table\\r\\n  *ngIf=\\\"showDialogOperator\\\"\\r\\n  [(display)]=\\\"showDialogOperator\\\"\\r\\n  [data]=\\\"dialogTableDataOperator\\\"\\r\\n  (onSelected)=\\\"setSelectedOperator($event)\\\"\\r\\n></aw-dialog-table>\\r\\n\\r\\n<aw-dialog-table\\r\\n  *ngIf=\\\"showItemTableDialog\\\"\\r\\n  [keyMap]=\\\"keyMap\\\"\\r\\n  [data]=\\\"itemTableData\\\"\\r\\n  [(display)]=\\\"showItemTableDialog\\\"\\r\\n  (onSelected)=\\\"setSelectedItems($event)\\\"\\r\\n></aw-dialog-table>\\r\\n\\r\\n<aw-dialog-add-update\\r\\n  *ngIf=\\\"openAddUpdatedialog\\\"\\r\\n  [(display)]=\\\"openAddUpdatedialog\\\"\\r\\n  [subAssemblyObject]=\\\"subAssemblyPopupObject\\\"\\r\\n  [quantity]=\\\"equipment.bidoEquipmentDTO.quantity\\\"\\r\\n  [operatonalStatus]=\\\"equipment.bidoEquipmentDTO.operationalStatus\\\"\\r\\n  [unit]=\\\"packagingBatchUnit\\\"\\r\\n  (onValidate)=\\\"updateSubAssembly($event)\\\"\\r\\n>\\r\\n</aw-dialog-add-update>\\r\\n\\r\\n<aw-document-upload-dialog\\r\\n  *ngIf=\\\"showAddDocumentDialog\\\"\\r\\n  [(display)]=\\\"showAddDocumentDialog\\\"\\r\\n  [openMode]=\\\"documentDialogOpenMode\\\"\\r\\n  [document]=\\\"currentDocument\\\"\\r\\n  [types]=\\\"documentTypes\\\"\\r\\n  (onValidated)=\\\"addNewDocument($event)\\\"\\r\\n>\\r\\n</aw-document-upload-dialog>\\r\\n\"","module.exports = \":host .value-red {\\n  background-color: #f6685e !important; }\\n\\n:host .value-yellow {\\n  background-color: #ffc107 !important; }\\n\\n:host .value-green {\\n  background-color: #4caf50 !important; }\\n\\n:host .value-green,\\n:host .value-red,\\n:host .value-yellow {\\n  padding: 0.5em; }\\n\\n:host .red {\\n  color: #f6685e !important; }\\n\\n:host .green {\\n  color: #4caf50 !important; }\\n\\n:host .custom-anchor {\\n  padding: 0.7em 0; }\\n\\n:host .procurement-type--in {\\n  color: #4caf50;\\n  -webkit-transform: rotate(320deg);\\n          transform: rotate(320deg); }\\n\\n:host .procurement-type--out {\\n  color: #f6685e;\\n  -webkit-transform: rotate(45deg);\\n          transform: rotate(45deg); }\\n\\n:host .procurement-type--transfer {\\n  color: #006ea9; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvcGFja2FnaW5nLWJhdGNoL2Zvcm0vRDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxmcm9udGVuZF9hZXJvd2ViYi9zcmNcXGFwcFxcbWFpblxcbG9naXN0aWNzXFxwYWNrYWdpbmctYmF0Y2hcXGZvcm1cXHBhY2thZ2luZy1iYXRjaC1mb3JtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tYWluL2xvZ2lzdGljcy9wYWNrYWdpbmctYmF0Y2gvZm9ybS9EOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGZyb250ZW5kX2Flcm93ZWJiL3NyY1xcc3R5bGVzXFxfY29uc3RhbnRzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFFSSxvQ0FBd0MsRUFBQTs7QUFGNUM7RUFNSSxvQ0FBb0MsRUFBQTs7QUFOeEM7RUFVSSxvQ0FBMEMsRUFBQTs7QUFWOUM7OztFQWdCSSxjQUFjLEVBQUE7O0FBaEJsQjtFQW9CSSx5QkFBNkIsRUFBQTs7QUFwQmpDO0VBd0JJLHlCQUErQixFQUFBOztBQXhCbkM7RUE0QkksZ0JBQWdCLEVBQUE7O0FBNUJwQjtFQWdDSSxjQ2RrQjtFRGVsQixpQ0FBeUI7VUFBekIseUJBQXlCLEVBQUE7O0FBakM3QjtFQXFDSSxjQ2hCZ0I7RURpQmhCLGdDQUF3QjtVQUF4Qix3QkFBd0IsRUFBQTs7QUF0QzVCO0VBMENJLGNDbkJnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvcGFja2FnaW5nLWJhdGNoL2Zvcm0vcGFja2FnaW5nLWJhdGNoLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiY29uc3RhbnRzXCI7XHJcbkBpbXBvcnQgXCJtaXhpbnNcIjtcclxuXHJcbjpob3N0IHtcclxuICAudmFsdWUtcmVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRyZWQtbGlnaHQxICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICAudmFsdWUteWVsbG93IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRvcmFuZ2UgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIC52YWx1ZS1ncmVlbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW4tbGlnaHQxICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICAudmFsdWUtZ3JlZW4sXHJcbiAgLnZhbHVlLXJlZCxcclxuICAudmFsdWUteWVsbG93IHtcclxuICAgIHBhZGRpbmc6IDAuNWVtO1xyXG4gIH1cclxuXHJcbiAgLnJlZCB7XHJcbiAgICBjb2xvcjogJHJlZC1saWdodDEgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIC5ncmVlbiB7XHJcbiAgICBjb2xvcjogJGdyZWVuLWxpZ2h0MSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgLmN1c3RvbS1hbmNob3Ige1xyXG4gICAgcGFkZGluZzogMC43ZW0gMDtcclxuICB9XHJcblxyXG4gIC5wcm9jdXJlbWVudC10eXBlLS1pbiB7XHJcbiAgICBjb2xvcjogJGdyZWVuLWxpZ2h0MTtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlKDMyMGRlZyk7XHJcbiAgfVxyXG5cclxuICAucHJvY3VyZW1lbnQtdHlwZS0tb3V0IHtcclxuICAgIGNvbG9yOiAkcmVkLWxpZ2h0MTtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICB9XHJcblxyXG4gIC5wcm9jdXJlbWVudC10eXBlLS10cmFuc2ZlciB7XHJcbiAgICBjb2xvcjogJGJsdWUtZGFyazE7XHJcbiAgfVxyXG59XHJcbiIsIiRwcmltYXJ5LWJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcclxuJHByaW1hcnktdGV4dC1jb2xvcjogIzAwMDtcclxuJHNlY29uZGFyeS10ZXh0LWNvbG9yOiAjNTk1OTU5O1xyXG4kYWNjZW50LWNvbG9yOiAjMDE1NzliO1xyXG5cclxuJGJvZHktYmFja2dyb3VuZC1jb2xvcjogI2U4ZWJlZDtcclxuJHRvcGJhci1jb2xvcjogI2ZhZmFmYTtcclxuXHJcbi8vICRwcmltYXJ5LWJhY2tncm91bmQtY29sb3I6ICMxZTFlMWU7XHJcbi8vICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjogIzMzMzMzMztcclxuLy8gJHByaW1hcnktdGV4dC1jb2xvcjogI2U4ZThlODtcclxuLy8gJHNlY29uZGFyeS10ZXh0LWNvbG9yOiAjZmZmO1xyXG4vLyAkYWNjZW50LWNvbG9yOiAjOWNkY2ZlO1xyXG5cclxuJGJvcmRlci1jb2xvcjogJHNlY29uZGFyeS10ZXh0LWNvbG9yO1xyXG4kYm9yZGVyLWNvbG9yLS1kaXNhYmxlZDogdHJhbnNwYXJlbnQ7XHJcbiRib3JkZXItY29sb3ItLWZvY3VzOiAkYWNjZW50LWNvbG9yO1xyXG4kYm9yZGVyLWNvbG9yLS1ob3ZlcjogIzFhMWExYTtcclxuXHJcbiRncmVlbi1kYXJrMTogIzI3NjMyYTtcclxuJGdyZWVuLWxpZ2h0MTogIzRjYWY1MDtcclxuJG9yYW5nZTogI2ZmYzEwNztcclxuJHJlZC1kYXJrMTogI2E4MjUyNTtcclxuJHJlZC1saWdodDE6ICNmNjY4NWU7XHJcbiRibHVlLWxpZ2h0MTogI2I4ZDBlODtcclxuJGJsdWUtZGFyazE6ICMwMDZlYTk7XHJcbiRncmV5MTogI2M4ZDRkNjtcclxuJHllbGxvdzE6ICNkZGRmMDA7XHJcblxyXG4kY3JpdGljYWwtdmFsdWUtZGFyazogI2ZiYTY0MzsgLy8gVE9ETzogcmVtb3ZlIGl0XHJcbiRjcml0aWNhbC12YWx1ZS1saWdodDogI2ZlY2M4ZTsgLy8gVE9ETzogcmVtb3ZlIGl0XHJcbiRjYWxlbmRhci15ZWxsb3c6ICNlZmVmYjA7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG4kYmFkLXZhbHVlLWRhcms6ICNmZjY3NTg7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuJGJvcmRlci1yYWRpdXM6IDRweDtcclxuJGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiRib3JkZXItd2lkdGg6IDFweDtcclxuJGZvbnQtZmFtaWx5OiBcIkxhdG9MYXRpbldlYlwiO1xyXG4kZm9udC1zaXplOiAwLjg3NXJlbTtcclxuJGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiRsaW5lLWhlaWdodDogMS40Mjg1NzE0Mjk7XHJcbiRtYXJnaW4tdmFsdWU6IDhweDtcclxuJHBhZ2UtbWF4LXdpZHRoOiAxMzY2cHg7XHJcbiRhdHRyaWJ1dGVzLWNvbHVtbi13aWR0aC00OiA0O1xyXG4kYXR0cmlidXRlcy1jb2x1bW4td2lkdGgtMzogMztcclxuJGF0dHJpYnV0ZXMtY29sdW1uLXdpZHRoLTI6IDI7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcblxyXG4kbGVmdC1zaWRlYmFyLXdpZHRoLS1jb2xsYXBzZWQ6IDUwcHg7XHJcbiRsZWZ0LXNpZGViYXItd2lkdGgtLWV4cGFuZGVkOiAyMjBweDtcclxuJHJpZ2h0LXNpZGViYXItd2lkdGgtLWNvbGxhcHNlZDogNTBweDtcclxuJHJpZ2h0LXNpZGViYXItd2lkdGgtLWV4cGFuZGVkOiAyMjBweDtcclxuJHRvcGJhci1oZWlnaHQ6IDQwcHg7XHJcbiRtYWluYmFyLWJvcmRlci1jb2xvcjogZGFya2VuKCRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvciwgNSUpO1xyXG4kbWFpbmJhci1ib3JkZXItd2lkdGg6IDJweDtcclxuJHBhZ2UtaGVhZGVyLWhlaWdodDogNS41cmVtO1xyXG4kZm9ybS1jb250cm9sLWhlaWdodDogMi41cmVtO1xyXG4kY2hlY2tib3gtaGVpZ2h0OiAxLjI1cmVtO1xyXG4kcmFkaW9idXR0b24taGVpZ2h0OiAxLjI1cmVtO1xyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { FileUpload } from 'primeng/fileupload';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\nimport { BidtSiteDTO } from '../../../../../../generated_files/api-types/bidt-site-dto.interface';\r\nimport { BidtWarehouseDTO } from '../../../../../../generated_files/api-types/bidt-warehouse-dto.interface';\r\nimport { DialogTableData } from '../../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { DynamicAttributesService } from '../../../../shared/components/dynamic-attributes/dynamic-attributes.service';\r\nimport { DynamicAttributes } from '../../../../shared/components/dynamic-attributes/types/dynamic-attributes.interface';\r\nimport { ColumnAlignment, TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { AppConstants } from '../../../../shared/constants/app-constants';\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { BidoAttributeConstants } from '../../../../shared/constants/bido-attribute-constants';\r\nimport { BidtStockMvtConstants } from '../../../../shared/constants/bidt-stock-mvt-constants';\r\nimport { BireMeasureReferenceConstants } from '../../../../shared/constants/bire-measure-reference-constants';\r\nimport { BireRatingConstants } from '../../../../shared/constants/bire-rating-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { LangConstants } from '../../../../shared/constants/lang-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { TableColumnFilterMode } from '../../../../shared/enums/table-column-filter-mode.enum';\r\nimport { TableSelectionMode } from '../../../../shared/enums/table-selection-mode.enum';\r\nimport { ExtractTranslationPipe } from '../../../../shared/pipes/extract-translation.pipe';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../../shared/services/date.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { AssetInputDto } from '../../../../shared/types/api-input-types/fleet-management/asset-input-dto.interface';\r\nimport { FindBireItemsBySearchCriteriaInput } from '../../../../shared/types/api-input-types/product-structure-management/find-bire-items-by-search-criteria-input.interface';\r\nimport { AssetOutputDto } from '../../../../shared/types/api-output-types/fleet-management/asset-output-dto.interface';\r\nimport { BidoDocumentationTableOutputDTO } from '../../../../shared/types/api-output-types/fleet-management/bido-documentation-table-output-dto.interface';\r\nimport { BidmWorkOrderDTOId } from '../../../../shared/types/api-types/bidm-work-order-dto-id.interface';\r\nimport { BidoAttributeDTO } from '../../../../shared/types/api-types/bido-attribute-dto.interface';\r\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { BidoDocumentationDTOId } from '../../../../shared/types/api-types/bido-documentation-dto-id.interface';\r\nimport { BidoDocumentationDTO } from '../../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { BidoEquipmentAttributeDTOId } from '../../../../shared/types/api-types/bido-equipment-attribute-dto-id.interface';\r\nimport { BidoEquipmentAttributeDTO } from '../../../../shared/types/api-types/bido-equipment-attribute-dto.interface';\r\nimport { BidoEquipmentDTOId } from '../../../../shared/types/api-types/bido-equipment-dto-id.interface';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BidoNotificationDTO } from '../../../../shared/types/api-types/bido-notification-dto.interface';\r\nimport { BidtDeliveryFolderDTO } from '../../../../shared/types/api-types/bidt-delivery-folder-dto.interface';\r\nimport { BidtDfTypeDTO } from '../../../../shared/types/api-types/bidt-df-type-dto.interface';\r\nimport { BidtProcurementRequestDTO } from '../../../../shared/types/api-types/bidt-procurement-request-dto.interface';\r\nimport { BidtStockMvtDTO } from '../../../../shared/types/api-types/bidt-stock-mvt-dto.interface';\r\nimport { BidtStockMvtTypeDTO } from '../../../../shared/types/api-types/bidt-stock-mvt-type-dto.interface';\r\nimport { BidtStorageBinDTO } from '../../../../shared/types/api-types/bidt-storage-bin-dto.interface';\r\nimport { BidtTransferOrderDTO } from '../../../../shared/types/api-types/bidt-transfer-order-dto.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\nimport { BireItemDTO } from '../../../../shared/types/api-types/bire-item-dto.interface';\r\nimport { HBidoEquipmentAttributeDTO } from '../../../../shared/types/api-types/h-bido-equipment-attribute-dto.interface';\r\nimport { StockTableDto } from '../../../../shared/types/api-types/stock-table-dto.interface';\r\nimport { SuperiorAssetDTO } from '../../../../shared/types/api-types/superior-asset-dto.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { BidoFamilyVariantUtils } from '../../../../shared/utils/bido-family-variant-utils';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\nimport { ListUtils } from '../../../../shared/utils/list-utils';\r\nimport { SelectItemUtils } from '../../../../shared/utils/select-item-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\nimport { LogisticsService } from '../../logistics.service';\r\n\r\nimport { PackagingBatchFormService } from './packaging-batch-form.service';\r\n\r\ninterface DocumentTableRow {\r\n  docName?: string;\r\n  docPublicationDate?: string;\r\n  docEndOfValidityDate?: string;\r\n  docDescription?: string;\r\n  docExtension?: string;\r\n  docCode?: string;\r\n  docCategory?: string;\r\n  _obj?: BidoDocumentationDTO;\r\n}\r\n\r\ninterface SubAssemblyInterface {\r\n  batchNumber?: string;\r\n  quantity?: number;\r\n  creationDate?: Date;\r\n  batchOriginQty?: number;\r\n  operationalStatus?: string;\r\n  zone?: string;\r\n  zoneId?: string;\r\n  location?: string;\r\n  locationId?: string;\r\n  statusUser?: string;\r\n  equipmentCode?: string;\r\n}\r\n\r\ninterface FormData {\r\n  batchNumber?: string;\r\n  quantity?: string;\r\n  manufaturingBatchNumber?: string;\r\n  batchQuantity?: string;\r\n  manufaturingBatchDate?: Date;\r\n  originalPackagingBatchNumber?: string;\r\n  originalPackagingBatchQuantity?: string;\r\n  originalPackagingBatchDate?: Date;\r\n  expirationDate?: Date;\r\n}\r\n\r\ninterface StockMovementRow {\r\n  stockMvtCode?: string;\r\n  bidtStockMvtType?: BidtStockMvtTypeDTO;\r\n  siteName?: string;\r\n  warehousename?: string;\r\n  bidtStorageBinZoneIssue?: BidtStorageBinDTO;\r\n  bidtStorageBinBinIssue?: BidtStorageBinDTO;\r\n  bidtStorageBinZoneReceipt?: BidtStorageBinDTO;\r\n  bidtStorageBinBinReceipt?: BidtStorageBinDTO;\r\n  smoStatus?: SelectItem;\r\n  documentNum?: string;\r\n  documentDescription?: string;\r\n  statusDate?: Date;\r\n  _bidtSiteReceipt?: BidtSiteDTO;\r\n  _bidtWarehouseReceipt?: BidtWarehouseDTO;\r\n  _procurementRequest?: BidtProcurementRequestDTO;\r\n  _transferOrder?: BidtTransferOrderDTO;\r\n  _deliveryFolder?: BidtDeliveryFolderDTO;\r\n  _stockMvt?: BidtStockMvtDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-packaging-batch-form',\r\n  styleUrls: ['./packaging-batch-form.component.scss'],\r\n  templateUrl: './packaging-batch-form.component.html'\r\n})\r\nexport class PackagingBatchFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public TABLE_PAGINATION_DEFAULT_ROWS: number = AppConstants.TABLE_PAGINATION_DEFAULT_ROWS;\r\n  public readonly bidtStockMvtConstants: typeof BidtStockMvtConstants;\r\n  public awPropertiesConstants: typeof AWPropertiesConstants;\r\n  public mainInfo: FormData;\r\n  public documentTableDataSource: TableDataSource<DocumentTableRow>;\r\n  public stockTableCols: TableColumn[];\r\n  public stockMvtStatuses: LabelValue<string>[];\r\n\r\n  // TEST DATA\r\n  public assetCode: string;\r\n  // Material Management Full\r\n  public stockMvtTableDataSource: TableDataSource<BidtStockMvtDTO>;\r\n\r\n  public equipment: AssetOutputDto;\r\n  public equipmentModelCodeAndName: string | undefined;\r\n  public equipmentRatingCodeAndName: string | undefined;\r\n  public bidoStockDisplayed: StockTableDto[] | undefined;\r\n  public documents: BidoDocumentationTableOutputDTO[];\r\n  public documentTypes: SelectItem[];\r\n  public propertyLocations: LabelValue<string>[];\r\n\r\n  /*DYNAMIC Attributes*/\r\n  public attributeIdValueMap: Map<string, string>;\r\n  public bireAttributesForEquipment: BidoEquipmentAttributeDTO[];\r\n  public dynamicAttributes: DynamicAttributes[];\r\n  public dynamicAttributesHistoric: Observable<HBidoEquipmentAttributeDTO[]>;\r\n\r\n  public locationValue: string | undefined;\r\n  public ownerCustomerName: string | undefined;\r\n  public fatherEquipment: SuperiorAssetDTO;\r\n  public operatorCustomerName: string | undefined;\r\n  public subAssemblyTableCols: TableColumn[];\r\n  public subAssemblyTableData: SubAssemblyInterface[];\r\n\r\n  public context: string;\r\n\r\n  // Color\r\n  public COLOR_NONE: string = '';\r\n  public COLOR_RED: string = 'red';\r\n  public COLOR_GREEN: string = 'green';\r\n  public COLOR_YELLOW: string = 'yellow';\r\n  public NOT_ACTIVATED: string = 'Not Activated';\r\n\r\n  public showSaveSpinner: boolean;\r\n\r\n  public showDialogOwner: boolean;\r\n  public showDialogOperator: boolean;\r\n  public dialogTableDataOwner: DialogTableData<BidoCustomerDTO>;\r\n  public dialogTableDataOperator: DialogTableData<BidoCustomerDTO>;\r\n\r\n  public showItemTableDialog: boolean;\r\n  public itemTableData: DialogTableData<BireItemDTO>;\r\n\r\n  public propertyPositions: LabelValue<string>[];\r\n  public propertyFunctions: LabelValue<string>[];\r\n  public allFunctions: LabelValue<string>[];\r\n  public statusList: LabelValue<string>[];\r\n  private procurementRequestTypes: LabelValue<string | undefined>[];\r\n\r\n  public openAddUpdatedialog: boolean;\r\n  public subAssemblyPopupObject: SubAssemblyInterface;\r\n\r\n  // map status\r\n  public movementsStatusMap: SelectItem[];\r\n  public stockMovementRows: StockMovementRow[];\r\n  public areaText?: string;\r\n\r\n  private documentsAdded: BidoDocumentationTableOutputDTO[];\r\n  private documentsUpdated: BidoDocumentationTableOutputDTO[];\r\n  public currentDocumentIndex: number;\r\n  public addedDocumentIndex: number;\r\n  public currentDocument: BidoDocumentationDTO | undefined;\r\n  public documentDialogOpenMode: ComponentOpenMode;\r\n  public showAddDocumentDialog: Boolean;\r\n  private eventAdded: BidoNotificationDTO[];\r\n  private transferTypeList: BidtDfTypeDTO[];\r\n\r\n  public packagingBatchUnit: string | undefined;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public sessionService: SessionService,\r\n    private readonly dateService: DateService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly dynamicAttributesService: DynamicAttributesService,\r\n    public translateService: TranslateService,\r\n    private readonly packagingBatchFormService: PackagingBatchFormService,\r\n    private readonly logisticsService: LogisticsService,\r\n    private readonly extractTranslationPipe: ExtractTranslationPipe\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    this.initInput();\r\n    this.bidtStockMvtConstants = BidtStockMvtConstants;\r\n    this.awPropertiesConstants = AWPropertiesConstants;\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_PACKAGING_BATCH_FORM;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.updateOpenMode(this.componentData.openMode);\r\n    this.assetCode = !!this.componentData.objectId ? this.componentData.objectId : '';\r\n    this.displayComponentContext(this.assetCode, this.isCreateOpenMode);\r\n\r\n    this.init();\r\n  }\r\n\r\n  /******************************************************\r\n   * init\r\n   ******************************************************/\r\n  private initInput() {\r\n    this.equipment = {\r\n      bidoEquipmentDTO: {},\r\n      stockOutputDto: {},\r\n      usageCounterCalculationDTO: {},\r\n      superiorAsset: {},\r\n      manufacturingBatch: {},\r\n      superiorPackagingBatch: {}\r\n    };\r\n\r\n    this.mainInfo = {};\r\n    this.bidoStockDisplayed = [];\r\n    this.documents = [];\r\n    this.fatherEquipment = {};\r\n    this.stockMvtStatuses = [];\r\n    this.stockMovementRows = [];\r\n    this.documentsAdded = [];\r\n    this.documentsUpdated = [];\r\n    this.currentDocumentIndex = -1;\r\n    this.addedDocumentIndex = -1;\r\n    this.documentDialogOpenMode = ComponentOpenMode.Read;\r\n    this.showAddDocumentDialog = false;\r\n    this.eventAdded = [];\r\n    this.procurementRequestTypes = [];\r\n    this.transferTypeList = [];\r\n  }\r\n\r\n  private onSavedAsset(): void {\r\n    this.eventAdded = [];\r\n    this.documentsAdded = [];\r\n    this.documents = [];\r\n    this.documentsUpdated = [];\r\n    this.documentTableDataSource.dataSelection = [];\r\n    super.updateOpenMode(ComponentOpenMode.Read);\r\n  }\r\n\r\n  private init() {\r\n    this.stockTableCols = [\r\n      { field: 'code', alignment: 'left', width: '10%' },\r\n      { field: 'stockMvtDate', alignment: 'left', width: '11%' },\r\n      { field: 'stockMvtWay', alignment: 'left', width: '7%' },\r\n      { field: 'mvtStatus', alignment: 'left', width: '12%' },\r\n      { field: 'site', alignment: 'left', width: '25%' },\r\n      { field: 'warehouse', alignment: 'left', width: '25%' },\r\n      { field: 'document', alignment: 'left', width: '10%' }\r\n    ];\r\n\r\n    this.subAssemblyTableCols = [\r\n      { field: 'batchNumber', alignment: 'left', width: '10%' },\r\n      { field: 'quantity', alignment: 'left', width: '11%' },\r\n      { field: 'creationDate', alignment: 'left', width: '11%' },\r\n      { field: 'batchOriginQty', alignment: 'left', width: '11%' },\r\n      { field: 'operationalStatus', alignment: 'left', width: '11%' },\r\n      { field: 'zone', alignment: 'left', width: '11%' },\r\n      { field: 'emp', alignment: 'left', width: '11%' }\r\n    ];\r\n\r\n    this.propertiesService.getValue(GenericPropertyConstants.PROCUREMENT_REQUEST_TYPE_MAP).subscribe((res) => {\r\n      this.procurementRequestTypes = res;\r\n    });\r\n\r\n    this.initInput();\r\n    this.fillDropdown();\r\n    this.loadDocumentTypes();\r\n    this.initDocumentTableDataSource();\r\n    this.loadEquipment();\r\n    this.initAttributeValue();\r\n    this.initStockMvtTable();\r\n    this.loadStovkMvtStatuses();\r\n    this.getShipmentTypeValue();\r\n  }\r\n\r\n  /******************************************************\r\n   * Fill Dropdowns\r\n   ******************************************************/\r\n  private getShipmentTypeValue() {\r\n    this.packagingBatchFormService.getShipmentDfTypes().subscribe((res) => {\r\n      this.transferTypeList = res;\r\n    });\r\n  }\r\n\r\n  private fillDropdown() {\r\n    this.propertiesService.getValue(GenericPropertyConstants.BATCH_EQUIPMENT_STATUS_MAP).subscribe((results) => {\r\n      this.statusList = results;\r\n    });\r\n\r\n    this.packagingBatchFormService.getPositionMap().subscribe(\r\n      (results) => {\r\n        this.propertyPositions = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetPosition'));\r\n      }\r\n    );\r\n\r\n    this.propertiesService.getValue(GenericPropertyConstants.MVT_STATUS_MAP).subscribe((results) => {\r\n      this.movementsStatusMap = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n\r\n    const bireId: BireAttributeDTO = {\r\n      attributeId: BidoAttributeConstants.ASSET_LOCATION.toString()\r\n    };\r\n    this.packagingBatchFormService.getAssetSourceSystemIdList(bireId).subscribe(\r\n      (results) => {\r\n        this.propertyLocations = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetLocation'));\r\n      }\r\n    );\r\n\r\n    this.packagingBatchFormService.getEquipmentFunctionList().subscribe(\r\n      (results) => {\r\n        this.allFunctions = results;\r\n        let valueLabel: LabelValue<string>[] = [];\r\n        valueLabel = results;\r\n        this.propertyFunctions = valueLabel.filter((el) => {\r\n          if (\r\n            el.value !== AWPropertiesConstants.FAMILY_FUNCTION_AIRCRAFT_KEY &&\r\n            el.value !== AWPropertiesConstants.FAMILY_FUNCTION_ENGINE_KEY &&\r\n            el.value !== AWPropertiesConstants.FAMILY_FUNCTION_TOOL_KEY\r\n          ) {\r\n            return el;\r\n          }\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFunction'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private initAttributeValue(): void {\r\n    const leafs = this.dynamicAttributesService.getLeafs(this.dynamicAttributes);\r\n\r\n    leafs.forEach((attribute) => {\r\n      attribute.value = undefined;\r\n    });\r\n  }\r\n\r\n  /******************************************************\r\n   * Cancel, Edit and Reload\r\n   ******************************************************/\r\n  public cancelBatch(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n\r\n    this.reloadBatch();\r\n  }\r\n\r\n  public editBatch(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public reloadBatch(): void {\r\n    this.init();\r\n  }\r\n\r\n  /******************************************************\r\n   * init Document table columns\r\n   ******************************************************/\r\n  private initDocumentTableDataSource(): void {\r\n    this.documentTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'docName',\r\n          translateKey: this.getTranslateKey('docName')\r\n        },\r\n        {\r\n          field: 'docPublicationDate',\r\n          translateKey: this.getTranslateKey('docPublicationDate')\r\n        },\r\n        {\r\n          field: 'docEndOfValidityDate',\r\n          translateKey: this.getTranslateKey('docEndOfValidityDate')\r\n        },\r\n        {\r\n          field: 'docCategory',\r\n          translateKey: this.getTranslateKey('docCategory')\r\n        },\r\n        {\r\n          field: 'docDescription',\r\n          translateKey: this.getTranslateKey('docDescription')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public isTool() {\r\n    return false;\r\n  }\r\n\r\n  public isAircraft() {\r\n    return false;\r\n  }\r\n\r\n  public isEngine() {\r\n    return false;\r\n  }\r\n\r\n  // Documents\r\n  private loadDocumentTypes(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.DOC_ASSET_CATEGORY_MAP).subscribe((results) => {\r\n      this.documentTypes = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  private getDynamicAttributesObservable(attributeCategory: string): Observable<BidoAttributeDTO[]> {\r\n    return this.packagingBatchFormService.findBidoAttributesByAttributeCategory(attributeCategory);\r\n  }\r\n\r\n  /******************************************************\r\n   * Load Equipment Data with Attributes\r\n   ******************************************************/\r\n  public loadEquipment(): void {\r\n    let observables: Observable<BidoAttributeDTO[]>[] = [];\r\n\r\n    observables = [\r\n      this.getDynamicAttributesObservable(AWPropertiesConstants.FM_ATTRIBUTE_CATEGORY_ALL_KEY),\r\n      this.getDynamicAttributesObservable(AWPropertiesConstants.FM_ATTRIBUTE_CATEGORY_ALL_ASSETS_KEY)\r\n    ];\r\n\r\n    if (!this.isEngine() && !this.isAircraft() && !this.isTool()) {\r\n      observables.push(this.getDynamicAttributesObservable(AWPropertiesConstants.FM_ATTRIBUTE_CATEGORY_EQUIPMENT_KEY));\r\n    }\r\n    if (this.isEngine() && !this.isAircraft() && !this.isTool()) {\r\n      observables.push(this.getDynamicAttributesObservable(AWPropertiesConstants.FM_ATTRIBUTE_CATEGORY_ENGINE_KEY));\r\n    }\r\n\r\n    if (this.isAircraft() && !this.isEngine() && !this.isTool()) {\r\n      observables.push(this.getDynamicAttributesObservable(AWPropertiesConstants.FM_ATTRIBUTE_CATEGORY_AIRCRAFT_KEY));\r\n    }\r\n\r\n    forkJoin(observables).subscribe(\r\n      (results: BidoAttributeDTO[][]) => {\r\n        if (results) {\r\n          const filteredAttributesList: BidoAttributeDTO[][] = [];\r\n          results.forEach((element) => {\r\n            const innerElements = element.filter((element2) => {\r\n              return (\r\n                element2.attributeId !== BidoAttributeConstants.ITEM_NUMBER.toString() &&\r\n                element2.attributeId !== BidoAttributeConstants.SAP_EQUIPMENT_CODE.toString() &&\r\n                element2.attributeId !== BidoAttributeConstants.ASSET_LOCATION.toString()\r\n              );\r\n            });\r\n\r\n            filteredAttributesList.push(innerElements);\r\n          });\r\n\r\n          let flattenResults: BidoAttributeDTO[] = filteredAttributesList.reduce((acc, val) => acc.concat(val), []);\r\n          flattenResults = this.sortAttributes(flattenResults);\r\n\r\n          this.dynamicAttributes = this.dynamicAttributesService.from(flattenResults);\r\n\r\n          if (!!this.assetCode) {\r\n            const assetId: AssetInputDto = {\r\n              bidoEquipmentDTOId: {\r\n                equipmentCode: this.assetCode\r\n              },\r\n              assetfunction: ' '\r\n            };\r\n            this.packagingBatchFormService.findBidoEquipmentAlternative(assetId).subscribe(\r\n              (result) => {\r\n                if (result) {\r\n                  this.equipment = { ...result };\r\n                  if (this.equipment && this.equipment.bidoEquipmentDTO) {\r\n                    this.loadSubAssemblies();\r\n                    this.equipment.bidoEquipmentDTO.quantity = this.equipment.bidoEquipmentDTO.quantity\r\n                      ? Math.trunc(this.equipment.bidoEquipmentDTO.quantity)\r\n                      : undefined;\r\n                    if (this.componentData) {\r\n                      if (!this.isAircraft() && !this.isEngine()) {\r\n                        this.context = [\r\n                          StringUtils.isNullOrEmpty(this.equipment.bidoEquipmentDTO.pnCode)\r\n                            ? ''\r\n                            : `P/N ${this.equipment.bidoEquipmentDTO.pnCode}`,\r\n                          StringUtils.isNullOrEmpty(this.equipment.bidoEquipmentDTO.sn)\r\n                            ? ''\r\n                            : `S/N ${this.equipment.bidoEquipmentDTO.sn}`\r\n                        ]\r\n                          .filter((s) => !StringUtils.isEmpty(s))\r\n                          .join(' | ');\r\n                      }\r\n\r\n                      // Displaying description along with context\r\n                      if (!!this.equipment.bidoEquipmentDTO.equipmentDesignation) {\r\n                        this.context = [\r\n                          StringUtils.isNullOrEmpty(this.context) ? '' : this.context,\r\n                          this.equipment.bidoEquipmentDTO.equipmentDesignation\r\n                        ]\r\n                          .filter((s) => !StringUtils.isEmpty(s))\r\n                          .join(' | ');\r\n                      }\r\n\r\n                      this.displayComponentContext(this.context, this.isCreateOpenMode);\r\n                    }\r\n\r\n                    if (!!this.equipment.superiorAsset) {\r\n                      this.fatherEquipment = this.equipment.superiorAsset;\r\n                    }\r\n                    this.ownerCustomerName = this.equipment.ownerCustomerName;\r\n\r\n                    this.equipment.bidoEquipmentDTO.equipmentFunction = !!this.equipment.bidoEquipmentDTO\r\n                      .equipmentFunction\r\n                      ? this.equipment.bidoEquipmentDTO.equipmentFunction\r\n                      : undefined;\r\n                    this.operatorCustomerName = this.equipment.operatorCustomerName;\r\n                    this.loadStocks();\r\n                    this.loadStockMvtMatMgmtFull();\r\n                    this.loadDocuments();\r\n                    if (!!this.equipment.bidoEquipmentDTO.bidoEquipmentAttributeList) {\r\n                      const locationData = this.equipment.bidoEquipmentDTO.bidoEquipmentAttributeList.filter((el) => {\r\n                        if (el.attributeId === BidoAttributeConstants.ASSET_LOCATION.toString()) {\r\n                          return el;\r\n                        }\r\n                      });\r\n                      this.locationValue = !!locationData[0] ? locationData[0].attributeValue : undefined;\r\n                      this.dynamicAttributesService.setValues(\r\n                        this.dynamicAttributes,\r\n                        this.equipment.bidoEquipmentDTO.bidoEquipmentAttributeList\r\n                      );\r\n                    }\r\n                  }\r\n                  this.getBatchReference();\r\n                  this.loadExpirationDate();\r\n                }\r\n                if (!!this.equipment.modelCode && !!this.equipment.modelName) {\r\n                  this.equipmentModelCodeAndName = this.equipment.modelCode + ' - ' + this.equipment.modelName;\r\n                }\r\n                if (!!this.equipment.ratingCode && !!this.equipment.ratingName) {\r\n                  this.equipmentRatingCodeAndName = this.equipment.ratingCode + ' - ' + this.equipment.ratingName;\r\n                }\r\n                this.openHistoricAttributes();\r\n              },\r\n              (err) => {\r\n                this.messageService.showErrorMessage(err.error.errorDetail);\r\n              }\r\n            );\r\n          }\r\n        }\r\n      },\r\n      (err) => {\r\n        this.messageService.showErrorMessage(err.error.errorDetail);\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadExpirationDate(): void {\r\n    this.logisticsService\r\n      .findBidoEquipmentCounter({\r\n        equipmentCode: this.assetCode,\r\n        counterCode: BireMeasureReferenceConstants.BIRE_MEASURE_REFERENCE_COUNTER_CODE_CALENDAR_LIMIT,\r\n        familyCode: BidoFamilyVariantUtils.getFamilyCodeFromFamilyVariantCode(\r\n          this.equipment.bidoEquipmentDTO.familyVariantCode\r\n        ),\r\n        ratingCode: BireRatingConstants.DEFAULT\r\n      })\r\n      .subscribe((bidoEquipmentCounter) => {\r\n        if (bidoEquipmentCounter) {\r\n          this.mainInfo.expirationDate = bidoEquipmentCounter.dateLimit;\r\n        }\r\n      });\r\n  }\r\n\r\n  private loadStockMvtMatMgmtFull(): void {\r\n    if (AWPropertiesConstants.MM_FULL_MODULE_ACTIVATED) {\r\n      this.stockMvtTableDataSource.setData([]);\r\n      const equipMentCode: BidoEquipmentDTOId = {\r\n        equipmentCode: this.assetCode\r\n      };\r\n\r\n      this.packagingBatchFormService.findBidtStockMvtMmf(equipMentCode).subscribe((results) => {\r\n        if (!!results) {\r\n          if (!!results) {\r\n            if (!!results.bidtStockMvts) {\r\n              if (!!results.bidtStockInfoList[0].birePnDTO) {\r\n                this.packagingBatchUnit = results.bidtStockInfoList[0].birePnDTO.quantityUnit;\r\n              }\r\n              results.bidtStockInfoList.forEach((movement) => {\r\n                const movementRow: StockMovementRow = {\r\n                  stockMvtCode: movement.stockMvt.stockMvtCode,\r\n                  bidtStockMvtType: movement.stockMvt.bidtStockMvtType,\r\n                  siteName: movement.site ? `${movement.site.siteCode} - ${movement.site.siteName}` : undefined,\r\n                  warehousename: movement.warehouse\r\n                    ? `${movement.warehouse.whCode} - ${movement.warehouse.whName}`\r\n                    : undefined,\r\n                  bidtStorageBinZoneIssue: movement.stockMvt.bidtStorageBinZoneIssue,\r\n                  bidtStorageBinBinIssue: movement.stockMvt.bidtStorageBinBinIssue,\r\n                  bidtStorageBinZoneReceipt: movement.stockMvt.bidtStorageBinZoneReceipt,\r\n                  bidtStorageBinBinReceipt: movement.stockMvt.bidtStorageBinBinReceipt,\r\n                  smoStatus: this.getMvtStockStatus(movement.stockMvt.mvtStatus as string),\r\n                  documentNum: movement.procurementRequest\r\n                    ? movement.procurementRequest.procCode\r\n                    : movement.transferOrder\r\n                    ? movement.transferOrder.torCode\r\n                    : movement.deliveryFolder\r\n                    ? movement.deliveryFolder.dfCode\r\n                    : undefined,\r\n                  documentDescription: movement.procurementRequest\r\n                    ? this.getProcTypeDescription(movement.procurementRequest.procType || '')\r\n                    : movement.transferOrder\r\n                    ? this.getTransferTypeDescription(movement.transferOrder.torType || '')\r\n                    : movement.deliveryFolder\r\n                    ? StringUtils.orEmpty(\r\n                        this.extractTranslationPipe.transform(\r\n                          (movement.deliveryFolder.bidtDfType as BidtDfTypeDTO).dftDesignation\r\n                        )\r\n                      )\r\n                    : undefined,\r\n                  statusDate: movement.stockMvt.statusDate,\r\n                  _bidtSiteReceipt: movement.site,\r\n                  _bidtWarehouseReceipt: movement.warehouse,\r\n                  _procurementRequest: movement.procurementRequest,\r\n                  _transferOrder: movement.transferOrder,\r\n                  _deliveryFolder: movement.deliveryFolder,\r\n                  _stockMvt: movement.stockMvt\r\n                };\r\n                this.stockMovementRows.push(movementRow);\r\n              });\r\n              this.stockMvtTableDataSource.setData([...this.stockMovementRows]);\r\n            }\r\n            if (!!results.stockInformation) {\r\n              this.equipment.stockOutputDto.site = results.stockInformation.siteText;\r\n              this.equipment.stockOutputDto.warehouse = results.stockInformation.warehouseText;\r\n              this.equipment.stockOutputDto.storageBin = results.stockInformation.storageBinText;\r\n              this.areaText = results.stockInformation.areaText;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private getProcTypeDescription(typeCode: string): string {\r\n    const typeValue = this.procurementRequestTypes.find((type) => type.value === typeCode);\r\n\r\n    return typeValue ? typeValue.label : typeCode;\r\n  }\r\n\r\n  private getTransferTypeDescription(typeCode: string): string {\r\n    const typeValue = this.transferTypeList.find((type) => (type.id && type.id.toString()) === typeCode);\r\n\r\n    return typeValue ? StringUtils.orEmpty(this.extractTranslationPipe.transform(typeValue.dftDesignation)) : typeCode;\r\n  }\r\n\r\n  public openDocOrigine(movementRow: StockMovementRow): void {\r\n    if (movementRow._procurementRequest) {\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.LOG_PROCUREMENT_REQUEST_FORM,\r\n        objectId: this.serializationService.serialize({ id: movementRow._procurementRequest.id }),\r\n        openMode: ComponentOpenMode.Read\r\n      };\r\n      const labelKey = 'transaction.' + data.componentId;\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    } else if (movementRow._transferOrder) {\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.LOG_TRANSFER_ORDER_FORM,\r\n        objectId: this.serializationService.serialize(movementRow._transferOrder.id),\r\n        openMode: ComponentOpenMode.Read\r\n      };\r\n      const labelKey = 'transaction.' + data.componentId;\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    } else if (movementRow._deliveryFolder) {\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.LOG_GOODS_RECEIPT_FORM,\r\n        openMode: ComponentOpenMode.Read,\r\n        objectId: this.serializationService.serialize({ id: movementRow._deliveryFolder.id })\r\n      };\r\n      const labelKey = 'transaction.' + data.componentId;\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    }\r\n  }\r\n\r\n  public getMvtStockStatus(key: string): SelectItem {\r\n    return this.movementsStatusMap.filter((status) => status.value === key)[0];\r\n  }\r\n\r\n  private initStockMvtTable(): void {\r\n    this.stockMvtTableDataSource = new TableDataSource({\r\n      enableSelection: false,\r\n      columns: [\r\n        { field: 'movement', translateKey: this.getTranslateKey('movement'), width: '12.5%' },\r\n        { field: 'type', translateKey: this.getTranslateKey('type'), alignment: ColumnAlignment.CENTER, width: '5%' },\r\n        { field: 'warehouseWorkshop', translateKey: this.getTranslateKey('warehouseWorkshop'), width: '20%' },\r\n        { field: 'outbound', translateKey: this.getTranslateKey('outbound'), width: '17.5%' },\r\n        { field: 'inbound', translateKey: this.getTranslateKey('inbound'), width: '17.5%' },\r\n        { field: 'status', translateKey: this.getTranslateKey('status'), width: '12.5%' },\r\n        { field: 'document', translateKey: this.getTranslateKey('document'), width: '15%' }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private getBatchReference(): void {\r\n    if (\r\n      !this.equipment.manufacturingBatch &&\r\n      this.equipment.superiorPackagingBatch &&\r\n      this.equipment.superiorPackagingBatch.equipmentCode\r\n    ) {\r\n      this.packagingBatchFormService\r\n        .getTopManufacturingBatch(this.equipment.superiorPackagingBatch.equipmentCode)\r\n        .subscribe((manufacturingBatch) => {\r\n          this.equipment.manufacturingBatch = manufacturingBatch;\r\n        });\r\n    }\r\n  }\r\n\r\n  /******************************************************\r\n   * Attributes\r\n   ******************************************************/\r\n  private sortAttributes(attributes: BidoAttributeDTO[]): BidoAttributeDTO[] {\r\n    return attributes.sort((attr1, attr2) => {\r\n      const attrLabel1 = this.getAttributeLabel(attr1);\r\n      const attrLabel2 = this.getAttributeLabel(attr2);\r\n      if (StringUtils.isNullOrEmpty(attrLabel1)) {\r\n        return 1;\r\n      }\r\n      if (StringUtils.isNullOrEmpty(attrLabel2)) {\r\n        return 1;\r\n      }\r\n\r\n      return attrLabel1.localeCompare(attrLabel2);\r\n    });\r\n  }\r\n\r\n  private getAttributeLabel(attribute: BidoAttributeDTO): string {\r\n    switch (this.translateService.currentLang) {\r\n      case LangConstants.ENGLISH_CODE:\r\n        return !!attribute.attributeNameEn ? attribute.attributeNameEn : '';\r\n\r\n      case LangConstants.FRENCH_CODE:\r\n        return !!attribute.attributeNameFr ? attribute.attributeNameFr : '';\r\n\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  /******************************************************\r\n   * Load Stocks Table\r\n   ******************************************************/\r\n  public loadStocks(): void {\r\n    if (!AWPropertiesConstants.MM_FULL_MODULE_ACTIVATED) {\r\n      if (!!this.equipment.stockOutputDto && !!this.bidoStockDisplayed) {\r\n        this.bidoStockDisplayed = this.equipment.stockOutputDto.stockTableDtos;\r\n      }\r\n    }\r\n  }\r\n\r\n  public openStockMovement(rowData: StockMovementRow): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_STOCK_MOVEMENT_FORM,\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n    const inputObject = {\r\n      id: rowData._stockMvt && rowData._stockMvt.id,\r\n      bidtProcReqItemId: rowData._stockMvt && rowData._stockMvt.bidtProcReqItemId\r\n    };\r\n    data.objectId = this.serializationService.serialize(inputObject);\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n  /******************************************************\r\n   * Load Documents Table\r\n   ******************************************************/\r\n  public loadDocuments() {\r\n    this.documentTableDataSource.setData([]);\r\n    if (!!this.equipment.bidoDocumentationTableOutputDTOs) {\r\n      this.documents = this.equipment.bidoDocumentationTableOutputDTOs;\r\n      this.equipment.bidoDocumentationTableOutputDTOs.forEach((doc) => {\r\n        if (!!doc.bidoDocumentationDTO) {\r\n          const selectedDocumentType = this.documentTypes.find(\r\n            (documentType) =>\r\n              !!doc.bidoDocumentationDTO &&\r\n              !!doc.bidoDocumentationDTO.docCategory &&\r\n              (documentType.value as string) === doc.bidoDocumentationDTO.docCategory\r\n          );\r\n          const newDoc: DocumentTableRow = {\r\n            docExtension: FileUtils.getExtension(doc.bidoDocumentationDTO.docName).toUpperCase(),\r\n            docName: doc.bidoDocumentationDTO.docName,\r\n            docPublicationDate: this.dateService.dateToString(doc.bidoDocumentationDTO.docPublicationDate),\r\n            docDescription: doc.bidoDocumentationDTO.docDescription,\r\n            docEndOfValidityDate: this.dateService.dateToString(doc.bidoDocumentationDTO.docEndOfValidityDate),\r\n            docCategory: !!selectedDocumentType ? StringUtils.orEmpty(selectedDocumentType.label) : '',\r\n            docCode: doc.bidoDocumentationDTO.docCode,\r\n            _obj: doc.bidoDocumentationDTO\r\n          };\r\n          this.documentTableDataSource.addData([newDoc]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /******************************************************\r\n   * Historic Attributes\r\n   ******************************************************/\r\n  private openHistoricAttributes() {\r\n    if (!!this.equipment && this.equipment.bidoEquipmentDTO && !!this.equipment.bidoEquipmentDTO.equipmentCode) {\r\n      const attributeIds: BidoEquipmentAttributeDTOId[] = this.dynamicAttributesService.toBireEquipmentAttributeId(\r\n        this.equipment.bidoEquipmentDTO.equipmentCode,\r\n        this.dynamicAttributes\r\n      );\r\n      this.dynamicAttributesHistoric = this.packagingBatchFormService.findHBidoEquipmentAttributesByAttributeId(\r\n        attributeIds\r\n      );\r\n    }\r\n  }\r\n\r\n  private loadSubAssemblies() {\r\n    if (!!this.equipment.bidoEquipmentDTO.equipmentCode) {\r\n      this.subAssemblyTableData = [];\r\n      this.packagingBatchFormService\r\n        .findSubBatches(this.equipment.bidoEquipmentDTO.equipmentCode)\r\n        .subscribe((result) => {\r\n          if (result && result.length) {\r\n            this.mapSubBatchResult(result);\r\n            this.subAssemblyTableData.sort((a, b) => {\r\n              if (!!a.batchNumber && !!b.batchNumber && a.batchNumber > b.batchNumber) {\r\n                return 1;\r\n              }\r\n              if (!!a.batchNumber && !!b.batchNumber && a.batchNumber < b.batchNumber) {\r\n                return -1;\r\n              }\r\n\r\n              return 0;\r\n            });\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  private mapSubBatchResult(result: BidoEquipmentDTO[]): void {\r\n    result.forEach((element) => {\r\n      this.packagingBatchFormService.getStockInformationByAsset(element).subscribe((stockInfo) => {\r\n        const subAssemblyObj: SubAssemblyInterface = {\r\n          equipmentCode: element.equipmentCode,\r\n          batchNumber: element.batchNumber,\r\n          quantity: element.quantity,\r\n          creationDate: element.manufacturingDate,\r\n          operationalStatus: element.operationalStatus,\r\n          zone: stockInfo.storageBinText,\r\n          location: stockInfo.areaText,\r\n          zoneId: stockInfo.storageBinId,\r\n          locationId: stockInfo.areaId,\r\n          batchOriginQty: Number(this.equipment.bidoEquipmentDTO.quantity) + Number(element.quantity)\r\n        };\r\n\r\n        this.subAssemblyTableData.push(subAssemblyObj);\r\n      });\r\n    });\r\n  }\r\n\r\n  public openPackagingBatch(equipmentCode: string): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_PACKAGING_BATCH_FORM,\r\n      openMode: ComponentOpenMode.Read,\r\n      objectId: equipmentCode\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public openMfgBatch(objectId: string | undefined): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_MANUFACTURING_BATCH_FORM,\r\n      objectId: objectId ? this.serializationService.serialize({ customerCode: objectId }) : undefined,\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public toggleRowDetailsVisibilityStock(rowData: StockTableDto) {\r\n    rowData._expand = !rowData._expand;\r\n  }\r\n\r\n  public createStockMovement(): void {\r\n    // TODO\r\n  }\r\n\r\n  /******************************************************\r\n   * Open Work Order UC\r\n   ******************************************************/\r\n  public onClickDocument(row: StockTableDto) {\r\n    if (row.projectId && row.woId) {\r\n      const objectId: BidmWorkOrderDTOId = {\r\n        projectId: row.projectId,\r\n        woId: row.woId\r\n      };\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.MAI_WORK_ORDER_FORM,\r\n        openMode: ComponentOpenMode.Write,\r\n        objectId: this.serializationService.serialize(objectId)\r\n      };\r\n      const labelKey = 'transaction.' + data.componentId;\r\n\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    } else {\r\n      // TODO: open either purchase request or sales request\r\n    }\r\n  }\r\n\r\n  /******************************************************\r\n   * Search Owners\r\n   ******************************************************/\r\n  public searchOwners() {\r\n    this.showDialogOwner = true;\r\n    const itemCol: TableColumn[] = [\r\n      { field: 'customerCode', alignment: 'left' },\r\n      { field: 'customerName', alignment: 'left' }\r\n    ];\r\n    const bire: BidoCustomerDTO = {\r\n      isOwner: true,\r\n      isOperator: false\r\n    };\r\n    this.dialogTableDataOwner = {\r\n      componentId: 'PartnerPopupDialog',\r\n      tableCols: itemCol,\r\n      tableRows: this.packagingBatchFormService.findBidoCustomersBySearchCriteria(bire),\r\n      dataKey: undefined,\r\n      selectionMode: TableSelectionMode.Single,\r\n      globalFilter: true\r\n    };\r\n  }\r\n\r\n  public setSelectedOwner(selectedObject: BidoCustomerDTO) {\r\n    if (!!this.equipment && !!this.equipment.bidoEquipmentDTO) {\r\n      if (selectedObject) {\r\n        this.equipment.bidoEquipmentDTO.ownerCustomerCode = selectedObject.customerCode;\r\n        this.ownerCustomerName = selectedObject.customerName;\r\n      }\r\n      this.showDialogOwner = false;\r\n    }\r\n  }\r\n\r\n  /******************************************************\r\n   * Search operators\r\n   ******************************************************/\r\n  public searchOperators() {\r\n    this.showDialogOperator = true;\r\n    const itemCol: TableColumn[] = [\r\n      { field: 'customerCode', alignment: 'left' },\r\n      { field: 'customerName', alignment: 'left' }\r\n    ];\r\n    const bire: BidoCustomerDTO = {\r\n      isOwner: false,\r\n      isOperator: true\r\n    };\r\n    this.dialogTableDataOperator = {\r\n      componentId: 'PartnerPopupDialog',\r\n      tableCols: itemCol,\r\n      tableRows: this.packagingBatchFormService.findBidoCustomersBySearchCriteria(bire),\r\n      dataKey: undefined,\r\n      selectionMode: TableSelectionMode.Single,\r\n      globalFilter: true\r\n    };\r\n  }\r\n\r\n  public setSelectedOperator(selectedObject: BidoCustomerDTO) {\r\n    if (!!this.equipment && !!this.equipment.bidoEquipmentDTO) {\r\n      if (selectedObject) {\r\n        this.equipment.bidoEquipmentDTO.operatorCustomerCode = selectedObject.customerCode;\r\n        this.operatorCustomerName = selectedObject.customerName;\r\n      }\r\n      this.showDialogOwner = false;\r\n    }\r\n  }\r\n\r\n  public openItemTableDialog(): void {\r\n    if (!!this.equipment.bidoEquipmentDTO.familyVariantCode) {\r\n      this.initItemTableData();\r\n      this.showItemTableDialog = true;\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('familyVariantMissing'));\r\n    }\r\n  }\r\n\r\n  /******************************************************\r\n   * Item Table Data\r\n   ******************************************************/\r\n  private initItemTableData(): void {\r\n    const itemTableCols: TableColumn[] = [\r\n      {\r\n        field: 'familyCode',\r\n        alignment: 'left',\r\n        width: '10%',\r\n        filterMode: TableColumnFilterMode.Input\r\n      },\r\n      {\r\n        field: 'variantCode',\r\n        alignment: 'left',\r\n        width: '10%',\r\n        filterMode: TableColumnFilterMode.Input\r\n      },\r\n      {\r\n        field: 'designation',\r\n        alignment: 'left',\r\n        width: '30%',\r\n        filterMode: TableColumnFilterMode.Input\r\n      },\r\n      {\r\n        field: 'chapter',\r\n        alignment: 'left',\r\n        width: '5%',\r\n        filterMode: TableColumnFilterMode.Input\r\n      },\r\n      {\r\n        field: 'section',\r\n        alignment: 'left',\r\n        width: '5%',\r\n        filterMode: TableColumnFilterMode.Input\r\n      },\r\n      {\r\n        field: 'subject',\r\n        alignment: 'left',\r\n        width: '5%',\r\n        filterMode: TableColumnFilterMode.Input\r\n      },\r\n      {\r\n        field: 'sheet',\r\n        alignment: 'left',\r\n        width: '5%',\r\n        filterMode: TableColumnFilterMode.Input\r\n      },\r\n      {\r\n        field: 'marks',\r\n        alignment: 'left',\r\n        width: '5%',\r\n        filterMode: TableColumnFilterMode.Input\r\n      },\r\n      {\r\n        field: 'itemNumber',\r\n        alignment: 'left',\r\n        width: '10%',\r\n        filterMode: TableColumnFilterMode.Input\r\n      },\r\n      {\r\n        field: 'functionCode',\r\n        alignment: 'left',\r\n        width: '15%',\r\n        filterMode: TableColumnFilterMode.Input\r\n      }\r\n    ];\r\n\r\n    if (!!this.equipment && !!this.equipment.bidoEquipmentDTO.familyVariantCode) {\r\n      const familyTab: string[] = this.equipment.bidoEquipmentDTO.familyVariantCode.split('-');\r\n      const params: FindBireItemsBySearchCriteriaInput = {\r\n        bireItemDTOCriteria: {\r\n          familyCode: familyTab[0],\r\n          structureType: AWPropertiesConstants.STRUCTURE_TYPE_IPC_KEY,\r\n          variantCode: familyTab[1]\r\n        },\r\n        pnCode: this.equipment.bidoEquipmentDTO.pnCode\r\n      };\r\n      this.itemTableData = {\r\n        componentId: 'DialogItem',\r\n        tableCols: itemTableCols,\r\n        tableRows: this.packagingBatchFormService.findBireItemsBySearchCriteria(params),\r\n        dataKey: undefined,\r\n        selectionMode: TableSelectionMode.Single,\r\n        globalFilter: true\r\n      };\r\n    } else {\r\n      super.throwUnboundLocalError('initItemTableData', 'this.familyCode && this.structureType && this.variantCode');\r\n    }\r\n  }\r\n\r\n  public setSelectedItems(selectedObject: BireItemDTO) {\r\n    if (!!this.equipment && !!this.equipment.bidoEquipmentDTO) {\r\n      if (selectedObject) {\r\n        const familyCode = selectedObject.familyCode;\r\n        const variantCode = selectedObject.variantCode;\r\n        this.equipment.bidoEquipmentDTO.familyVariantCode = `${familyCode}-${variantCode}`;\r\n        this.equipment.bidoEquipmentDTO.section = selectedObject.section;\r\n        this.equipment.bidoEquipmentDTO.marks = selectedObject.marks;\r\n        this.equipment.bidoEquipmentDTO.chapter = selectedObject.chapter;\r\n        this.equipment.bidoEquipmentDTO.sheet = selectedObject.sheet;\r\n        this.equipment.bidoEquipmentDTO.subject = selectedObject.subject;\r\n        this.equipment.bidoEquipmentDTO.statusDate = selectedObject.statusDate;\r\n        this.equipment.bidoEquipmentDTO.statusUser = selectedObject.statusUser;\r\n        this.equipment.bidoEquipmentDTO.statusState = selectedObject.statusState;\r\n        this.equipment.itemNumber = selectedObject.itemNumber;\r\n        this.equipment.bidoEquipmentDTO.equipmentDesignation = selectedObject.name;\r\n        this.equipment.bidoEquipmentDTO.functionCode = selectedObject.functionCode;\r\n      }\r\n    }\r\n  }\r\n\r\n  public searchGeoLocation() {\r\n    // TODO\r\n  }\r\n\r\n  public showAddUpdatePopup(): void {\r\n    this.subAssemblyPopupObject = {};\r\n    if (this.subAssemblyTableData && this.subAssemblyTableData.length) {\r\n      const assemblyObject = this.subAssemblyTableData[this.subAssemblyTableData.length - 1];\r\n      this.subAssemblyPopupObject.batchNumber = assemblyObject.batchNumber || '';\r\n    } else {\r\n      this.subAssemblyPopupObject.batchNumber = this.equipment.bidoEquipmentDTO.batchNumber;\r\n    }\r\n    this.subAssemblyPopupObject.statusUser = this.equipment.ownerCustomerName;\r\n    this.subAssemblyPopupObject.quantity = 0;\r\n    this.openAddUpdatedialog = true;\r\n  }\r\n\r\n  public updateSubAssembly(subAssemblyObject: SubAssemblyInterface): void {\r\n    const bidoEquipmentObject: BidoEquipmentDTO = { ...this.equipment.bidoEquipmentDTO };\r\n    bidoEquipmentObject.equEquipmentCode = bidoEquipmentObject.equipmentCode;\r\n    bidoEquipmentObject.quantity = subAssemblyObject.quantity;\r\n    bidoEquipmentObject.batchNumber = subAssemblyObject.batchNumber;\r\n    bidoEquipmentObject.operationalStatus = subAssemblyObject.batchNumber;\r\n    bidoEquipmentObject.operationalStatus = subAssemblyObject.operationalStatus;\r\n    bidoEquipmentObject.manufacturingDate = subAssemblyObject.creationDate;\r\n    bidoEquipmentObject.statusUser = subAssemblyObject.statusUser;\r\n    bidoEquipmentObject.equipmentCode = undefined;\r\n\r\n    this.packagingBatchFormService.addOrUpdateBatch(bidoEquipmentObject).subscribe(() => {\r\n      this.loadSubAssemblies();\r\n      this.reloadBatch();\r\n      this.openAddUpdatedialog = false;\r\n    });\r\n  }\r\n\r\n  public saveBatch(): void {\r\n    if (this.isCreateOpenMode) {\r\n      this.logisticsService.addOrUpdateBatch(this.equipment.bidoEquipmentDTO).subscribe({\r\n        next: (equipmentValue) => {\r\n          this.updateOpenMode(ComponentOpenMode.Read);\r\n        }\r\n      });\r\n    } else {\r\n      this.updateAsset();\r\n    }\r\n  }\r\n\r\n  private loadStovkMvtStatuses(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.MVT_STATUS_MAP).subscribe({\r\n      next: (stockMvtStatuses) => {\r\n        this.stockMvtStatuses = ListUtils.orEmpty(stockMvtStatuses);\r\n      }\r\n    });\r\n  }\r\n\r\n  public onCancel(): void {\r\n    super.updateOpenMode(ComponentOpenMode.Read);\r\n    this.reloadBatch();\r\n  }\r\n\r\n  private updateAsset(): void {\r\n    if (!!this.equipment.bidoEquipmentDTO.equipmentCode) {\r\n      this.equipment.bidoEquipmentAttributeDTOList = this.dynamicAttributesService.toBidoEquipmentAttribute(\r\n        this.equipment.bidoEquipmentDTO.equipmentCode,\r\n        this.dynamicAttributes\r\n      );\r\n      const object: BidoEquipmentAttributeDTO = {\r\n        attributeId: BidoAttributeConstants.ASSET_LOCATION.toString(),\r\n        equipmentCode: this.equipment.bidoEquipmentDTO.equipmentCode,\r\n        attributeValue: this.locationValue\r\n      };\r\n      this.equipment.bidoEquipmentAttributeDTOList.push(object);\r\n    }\r\n    const assetOutputDto: AssetOutputDto = {\r\n      bidoEquipmentDTO: this.equipment.bidoEquipmentDTO,\r\n      createBidoDocumentationTableOutputDTOs: this.documentsAdded,\r\n      updateBidoDocumentationTableOutputDTOs: this.documentsUpdated,\r\n      removeBidoDocumentationId: this.equipment.removeBidoDocumentationId,\r\n      stockOutputDto: {},\r\n      usageCounterCalculationDTO: {},\r\n      superiorAsset: {},\r\n      bidoEquipmentAttributeDTOList: this.equipment.bidoEquipmentAttributeDTOList,\r\n      itemNumber: this.equipment.itemNumber,\r\n      modelCode: this.equipment.modelCode,\r\n      modelName: this.equipment.modelName,\r\n      ratingCode: this.equipment.ratingCode,\r\n      ratingName: this.equipment.ratingName\r\n    };\r\n    const bidoNotificationDTO: BidoNotificationDTO[] = this.eventAdded;\r\n    this.showSaveSpinner = true;\r\n    this.logisticsService.updateAsset(assetOutputDto).subscribe(\r\n      () => {\r\n        this.onSavedAsset();\r\n        this.createBidoNotification(bidoNotificationDTO);\r\n        this.reloadBatch();\r\n        this.messageService.showSuccessMessage('global.successOnSave');\r\n        this.showSaveSpinner = false;\r\n      },\r\n      (err) => {\r\n        this.messageService.showErrorMessage(err.error.errorDesc);\r\n        this.showSaveSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  private createBidoNotification(bidoNotificationDTO: BidoNotificationDTO[]): void {\r\n    this.logisticsService.createBidoNotification(bidoNotificationDTO).subscribe(() => {\r\n      this.onSavedAsset();\r\n    });\r\n  }\r\n\r\n  public deleteDocuments(): void {\r\n    const partialMessageKey =\r\n      this.documentTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedDocuments'\r\n        : 'confirmDeleteSelectedDocument';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const temp: BidoDocumentationDTOId[] = [];\r\n        this.documentTableDataSource.dataSelection.forEach((data) => {\r\n          if (!!data && !!data._obj && !!data._obj.docCode) {\r\n            const codeId: BidoDocumentationDTOId = {\r\n              docCode: data._obj.docCode\r\n            };\r\n            temp.push(codeId);\r\n          }\r\n        });\r\n        this.equipment.removeBidoDocumentationId = temp;\r\n\r\n        this.documentTableDataSource.setData(\r\n          this.documentTableDataSource.dataSrc.filter((data) => {\r\n            return !this.documentTableDataSource.dataSelection.some((row) => {\r\n              return data.docName === row.docName;\r\n            });\r\n          })\r\n        );\r\n\r\n        this.documents = this.documents.filter((data) => {\r\n          return !this.documentTableDataSource.dataSelection.some((row) => {\r\n            return !!data.bidoDocumentationDTO && data.bidoDocumentationDTO.docName === row.docName;\r\n          });\r\n        });\r\n\r\n        this.documentsAdded = this.documentsAdded.filter((data) => {\r\n          return !this.documentTableDataSource.dataSelection.some((row) => {\r\n            return !!data.bidoDocumentationDTO && data.bidoDocumentationDTO.docName === row.docName;\r\n          });\r\n        });\r\n        this.documentsUpdated = this.documentsUpdated.filter((data) => {\r\n          return !this.documentTableDataSource.dataSelection.some((row) => {\r\n            return !!data.bidoDocumentationDTO && data.bidoDocumentationDTO.docName === row.docName;\r\n          });\r\n        });\r\n\r\n        this.documentTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    let flag = false;\r\n    if (!!event.files) {\r\n      const file: File = event.files[0];\r\n      this.documents.forEach((document) => {\r\n        if (!!document.bidoDocumentationDTO) {\r\n          if (document.bidoDocumentationDTO.docName === file.name) {\r\n            flag = true;\r\n          }\r\n        }\r\n      });\r\n      if (flag) {\r\n        this.messageService.showWarningMessage('global.warningOnFileExists');\r\n      } else {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          const fileNameParts = file.name && file.name.includes('.') ? file.name.split('.') : [];\r\n          const docType = fileNameParts.length > 0 ? fileNameParts[fileNameParts.length - 1].toUpperCase() : undefined;\r\n\r\n          if (!!fileContent) {\r\n            const document: BidoDocumentationDTO = {\r\n              docType,\r\n              docFile: fileContent,\r\n              docName: file.name,\r\n              docPublicationDate: new Date(),\r\n              equipmentCode: this.equipment.bidoEquipmentDTO.equipmentCode\r\n            };\r\n            const bidoDoc: BidoDocumentationTableOutputDTO = {\r\n              bidoDocumentationDTO: document\r\n            };\r\n            this.documents = [...this.documents, bidoDoc];\r\n            this.documentsAdded = [...this.documentsAdded, bidoDoc];\r\n\r\n            this.documentTableDataSource.addData([this.addData(document)]);\r\n          }\r\n        });\r\n      }\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public openDocument(): void {\r\n    if (this.documentTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocumentIndex = -1;\r\n      this.addedDocumentIndex = -1;\r\n      this.currentDocument = this.documentTableDataSource.dataSelection[0]._obj;\r\n      this.documentDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showAddDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public editDocument(): void {\r\n    if (this.documentTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocumentIndex = this.documents.findIndex((list) => {\r\n        return (\r\n          !!list.bidoDocumentationDTO &&\r\n          !!this.documentTableDataSource.dataSelection[0].docName &&\r\n          list.bidoDocumentationDTO.docName === this.documentTableDataSource.dataSelection[0].docName\r\n        );\r\n      });\r\n      this.addedDocumentIndex = this.documentsAdded.findIndex((list) => {\r\n        return (\r\n          !!list.bidoDocumentationDTO &&\r\n          !!this.documentTableDataSource.dataSelection[0].docName &&\r\n          list.bidoDocumentationDTO.docName === this.documentTableDataSource.dataSelection[0].docName\r\n        );\r\n      });\r\n      this.currentDocument = { ...this.documentTableDataSource.dataSelection[0]._obj };\r\n      this.documentDialogOpenMode = ComponentOpenMode.Write;\r\n      this.showAddDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public addData(newDocument: BidoDocumentationDTO): DocumentTableRow {\r\n    const selectedDocumentType = this.documentTypes.find(\r\n      (documentType) => !!newDocument.docCategory && (documentType.value as string) === newDocument.docCategory\r\n    );\r\n    const row: DocumentTableRow = {\r\n      docName: newDocument.docName,\r\n      docDescription: newDocument.docDescription,\r\n      docCategory: !!selectedDocumentType ? StringUtils.orEmpty(selectedDocumentType.label) : '',\r\n      docPublicationDate: this.dateService.dateToString(newDocument.docPublicationDate),\r\n      docEndOfValidityDate: this.dateService.dateToString(newDocument.docEndOfValidityDate),\r\n      _obj: newDocument\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  public addNewDocument(newDocument: BidoDocumentationDTO) {\r\n    const bidoDoc: BidoDocumentationTableOutputDTO = {\r\n      bidoDocumentationDTO: newDocument\r\n    };\r\n    let fileExists = true;\r\n    if (!!newDocument) {\r\n      this.documentTableDataSource.dataSrc.forEach((doc, i) => {\r\n        if (doc.docName === newDocument.docName) {\r\n          if (this.currentDocumentIndex === i) {\r\n            fileExists = true;\r\n          } else {\r\n            fileExists = false;\r\n            this.messageService.showWarningMessage('global.warningOnFileExists');\r\n          }\r\n        }\r\n      });\r\n      if (fileExists) {\r\n        if (this.currentDocumentIndex !== -1) {\r\n          this.documents[this.currentDocumentIndex] = bidoDoc;\r\n          this.documentTableDataSource.replaceData(\r\n            this.documentTableDataSource.dataSrc[this.currentDocumentIndex],\r\n            this.addData(newDocument)\r\n          );\r\n          const updatedDocumentIndex = this.documentsUpdated.findIndex((obj) => {\r\n            return (\r\n              !!obj.bidoDocumentationDTO &&\r\n              !!obj.bidoDocumentationDTO.docName &&\r\n              !!bidoDoc.bidoDocumentationDTO &&\r\n              !!bidoDoc.bidoDocumentationDTO.docName &&\r\n              obj.bidoDocumentationDTO.docName === bidoDoc.bidoDocumentationDTO.docName\r\n            );\r\n          });\r\n          if (newDocument.docCode) {\r\n            if (updatedDocumentIndex !== -1) {\r\n              this.documentsUpdated[updatedDocumentIndex] = bidoDoc;\r\n            } else {\r\n              this.documentsUpdated = [...this.documentsUpdated, bidoDoc];\r\n            }\r\n          } else {\r\n            if (this.addedDocumentIndex !== -1) {\r\n              this.documentsAdded[this.addedDocumentIndex] = bidoDoc;\r\n            } else {\r\n              this.documentsAdded = [...this.documentsAdded, bidoDoc];\r\n            }\r\n          }\r\n        } else {\r\n          const isAdded = this.documentsAdded.some((documentAdded) => this.areSameDocument(documentAdded, bidoDoc));\r\n          if (isAdded) {\r\n            this.messageService.showWarningMessage('global.warningOnDocumentExists');\r\n          } else {\r\n            this.documents = [...this.documents, bidoDoc];\r\n            this.documentsAdded = [...this.documentsAdded, bidoDoc];\r\n            this.documentTableDataSource.addData([this.addData(newDocument)]);\r\n          }\r\n        }\r\n      }\r\n      this.documentTableDataSource.dataSelection = [];\r\n    }\r\n  }\r\n\r\n  private areSameDocument(\r\n    obj1: BidoDocumentationTableOutputDTO | undefined,\r\n    obj2: BidoDocumentationTableOutputDTO | undefined\r\n  ): boolean {\r\n    if (!obj1 || !obj2) {\r\n      return false;\r\n    } else {\r\n      return (\r\n        !!obj1.bidoDocumentationDTO &&\r\n        !!obj1.bidoDocumentationDTO.docName &&\r\n        !!obj2.bidoDocumentationDTO &&\r\n        !!obj2.bidoDocumentationDTO.docName &&\r\n        obj1.bidoDocumentationDTO.docName === obj2.bidoDocumentationDTO.docName\r\n      );\r\n    }\r\n  }\r\n\r\n  public downloadFiles(): void {\r\n    this.documentTableDataSource.dataSelection.forEach((documentRow) => {\r\n      if (!!documentRow._obj) {\r\n        FileUtils.downloadFile(documentRow._obj.docFile, documentRow._obj.docName);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AssetManagementApi } from '../../../../shared/api/asset-management.api';\r\nimport { BidoEquipmentApi } from '../../../../shared/api/bido-equipment.api';\r\nimport { BidtDfTypeApi } from '../../../../shared/api/bidt-df-type.api';\r\nimport { BidtStockMvtApi } from '../../../../shared/api/bidt-stock-mvt.api';\r\nimport { FleetHistoryApi } from '../../../../shared/api/fleet-history.api';\r\nimport { FleetManagementApi } from '../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { AssetInputDto } from '../../../../shared/types/api-input-types/fleet-management/asset-input-dto.interface';\r\nimport { FindBireItemsBySearchCriteriaInput } from '../../../../shared/types/api-input-types/product-structure-management/find-bire-items-by-search-criteria-input.interface';\r\nimport { BidtStockMvtMmfOutputDTO } from '../../../../shared/types/api-output-types/bidt-stock-mvt/bidt-stock-mvt-mmf-output-dto.interface';\r\nimport { AssetOutputDto } from '../../../../shared/types/api-output-types/fleet-management/asset-output-dto.interface';\r\nimport { ReferenceBatchDTO } from '../../../../shared/types/api-output-types/fleet-management/reference-batch-dto.interface';\r\nimport { BidoAttributeDTOId } from '../../../../shared/types/api-types/bido-attribute-dto-id.interface';\r\nimport { BidoAttributeDTO } from '../../../../shared/types/api-types/bido-attribute-dto.interface';\r\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { BidoEquipmentAttributeDTOId } from '../../../../shared/types/api-types/bido-equipment-attribute-dto-id.interface';\r\nimport { BidoEquipmentDTOId } from '../../../../shared/types/api-types/bido-equipment-dto-id.interface';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BidtDfTypeDTO } from '../../../../shared/types/api-types/bidt-df-type-dto.interface';\r\nimport { BireItemDTO } from '../../../../shared/types/api-types/bire-item-dto.interface';\r\nimport { HBidoEquipmentAttributeDTO } from '../../../../shared/types/api-types/h-bido-equipment-attribute-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { StockInformationDTO } from '../../../../shared/types/api-types/stock-information-dto-interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class PackagingBatchFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly fleetHistoryApi: FleetHistoryApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly assetManagementApi: AssetManagementApi,\r\n    private readonly bidoEquipmentApi: BidoEquipmentApi,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly bidtStockMvtApi: BidtStockMvtApi,\r\n    private readonly bidtDfTypeApi: BidtDfTypeApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBidoEquipmentAlternative(asset: AssetInputDto): Observable<AssetOutputDto> {\r\n    return super.post<AssetInputDto, AssetOutputDto>(this.assetManagementApi.getAssetByCode, asset);\r\n  }\r\n\r\n  public findBidoAttributesByAttributeCategory(category: string): Observable<BidoAttributeDTO[]> {\r\n    return super.post<string, BidoAttributeDTO[]>(\r\n      this.fleetManagementApi.findBidoAttributesByAttributeCategory,\r\n      category\r\n    );\r\n  }\r\n\r\n  public findHBidoEquipmentAttributesByAttributeId(\r\n    ids: BidoEquipmentAttributeDTOId[]\r\n  ): Observable<HBidoEquipmentAttributeDTO[]> {\r\n    return super.post<BidoEquipmentAttributeDTOId[], HBidoEquipmentAttributeDTO[]>(\r\n      this.fleetHistoryApi.findHBidoEquipmentAttributesByAttributeId,\r\n      ids\r\n    );\r\n  }\r\n\r\n  public findSubBatches(assetCode: string): Observable<BidoEquipmentDTO[]> {\r\n    const obj: BidoEquipmentDTOId = {\r\n      equipmentCode: assetCode\r\n    };\r\n\r\n    return super.post<BidoEquipmentDTOId, BidoEquipmentDTO[]>(this.bidoEquipmentApi.findSubBatches, obj);\r\n  }\r\n\r\n  public addOrUpdateBatch(equipmentObject: BidoEquipmentDTO): Observable<string> {\r\n    return super.post<BidoEquipmentDTO, string>(this.bidoEquipmentApi.addOrUpdateBatch, equipmentObject);\r\n  }\r\n\r\n  public getTopManufacturingBatch(equipmentCode: string): Observable<ReferenceBatchDTO> {\r\n    return super.post<string, ReferenceBatchDTO>(this.bidoEquipmentApi.getTopManufacturingBatch, equipmentCode);\r\n  }\r\n\r\n  public batchData() {\r\n    return {\r\n      manufaturingBatchNumber: '519000',\r\n      batchQuantity: '1500',\r\n      manufaturingBatchDate: new Date(),\r\n      originalPackagingBatchNumber: '519000-01',\r\n      originalPackagingBatchQuantity: '500',\r\n      originalPackagingBatchDate: new Date(),\r\n      batchNumber: '519000-10',\r\n      expirationDate: new Date(),\r\n      quantity: '150'\r\n    };\r\n  }\r\n\r\n  public getAssetSourceSystemIdList(bireId: BidoAttributeDTOId): Observable<LabelValue<string>[]> {\r\n    return super.post<BidoAttributeDTOId, LabelValue<string>[]>(\r\n      this.fleetManagementApi.getAssetSourceSystemIdList,\r\n      bireId\r\n    );\r\n  }\r\n\r\n  public findBidoCustomersBySearchCriteria(criteria: BidoCustomerDTO): Observable<SearchResultsDTO<BidoCustomerDTO>> {\r\n    return super.post<BidoCustomerDTO, SearchResultsDTO<BidoCustomerDTO>>(\r\n      this.fleetManagementApi.findBidoCustomersBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public findBireItemsBySearchCriteria(\r\n    findBireItemsBySearchCriteriaInput: FindBireItemsBySearchCriteriaInput\r\n  ): Observable<SearchResultsDTO<BireItemDTO>> {\r\n    return super.post<FindBireItemsBySearchCriteriaInput, SearchResultsDTO<BireItemDTO>>(\r\n      this.productStructureManagementApi.findBireItemsBySearchCriteria,\r\n      findBireItemsBySearchCriteriaInput\r\n    );\r\n  }\r\n\r\n  public getCountryZoneMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue(GenericPropertyConstants.COUNTRY_ZONE_MAP);\r\n  }\r\n\r\n  public getPositionMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue(GenericPropertyConstants.POSITION_MAP);\r\n  }\r\n\r\n  public getEquipmentFunctionList(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue(GenericPropertyConstants.ITEM_FAMILY_CODE_MAP);\r\n  }\r\n\r\n  public findBidtStockMvtMmf(bidoEquipmentDTOId: BidoEquipmentDTOId): Observable<BidtStockMvtMmfOutputDTO> {\r\n    return super.post<BidoEquipmentDTOId, BidtStockMvtMmfOutputDTO>(\r\n      this.bidtStockMvtApi.findBidtStockMvtMmf,\r\n      bidoEquipmentDTOId\r\n    );\r\n  }\r\n\r\n  public getStockInformationByAsset(bidoEquipmentDTO: BidoEquipmentDTO): Observable<StockInformationDTO> {\r\n    return super.post<BidoEquipmentDTO, StockInformationDTO>(\r\n      this.bidoEquipmentApi.getStockInformationByAsset,\r\n      bidoEquipmentDTO\r\n    );\r\n  }\r\n\r\n  public getShipmentDfTypes(): Observable<BidtDfTypeDTO[]> {\r\n    return super.post<void, BidtDfTypeDTO[]>(this.bidtDfTypeApi.findShipmentDfTypes);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { InputTextareaModule } from 'primeng/primeng';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { DialogTableModule } from '../../../shared/components/dialog-table/dialog-table.module';\r\nimport { DynamicAttributesModule } from '../../../shared/components/dynamic-attributes/dynamic-attributes.module';\r\nimport { ManageSearchCriteriaModule } from '../../../shared/components/manage-search-criteria/manage-search-criteria.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { DialogAddUpdateComponent } from './form/dialog-add-update/dialog-add-update.component';\r\nimport { DocumentUploadDialogComponent } from './form/document-upload-dialog/document-upload-dialog.component';\r\nimport { PackagingBatchFormComponent } from './form/packaging-batch-form.component';\r\nimport { PackagingBatchFormService } from './form/packaging-batch-form.service';\r\nimport { PackagingBatchSearchComponent } from './search/packaging-batch-search.component';\r\nimport { PackagingBatchSearchService } from './search/packaging-batch-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  TooltipModule,\r\n  DropdownModule,\r\n  TableModule,\r\n  CheckboxModule,\r\n  PrimeNgTableModule,\r\n  DialogTableModule,\r\n  FileUploadModule,\r\n  SelectButtonModule,\r\n  CalendarModule,\r\n  ManageSearchCriteriaModule,\r\n  InputSwitchModule,\r\n  ChartModule,\r\n  ProgressBarModule,\r\n  ModalModule,\r\n  DynamicAttributesModule,\r\n  InputTextareaModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [];\r\n\r\nconst DYNAMIC_COMPONENTS = [\r\n  PackagingBatchFormComponent,\r\n  PackagingBatchSearchComponent,\r\n  DialogAddUpdateComponent,\r\n  DocumentUploadDialogComponent\r\n];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [PackagingBatchFormService, PackagingBatchSearchService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES],\r\n  exports: [DialogAddUpdateComponent]\r\n})\r\nexport class PackagingBatchModule {}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewPackaging()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">{{ \\\"addToFavorite\\\" | translate }}</button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"row search-criteria-header\\\">\\r\\n                <aw-manage-search-criteria\\r\\n                  [componentId]=\\\"SEARCH_CRITERIA_ID\\\"\\r\\n                  (onSelected)=\\\"loadSearchCriteria($event)\\\"\\r\\n                  (onSavedAsked)=\\\"saveSearchCriteriaAsked()\\\"\\r\\n                  [objectFromPage]=\\\"searchCriteriaToSave\\\"\\r\\n                  [canChange]=\\\"!searchCriteriaCalculated\\\"\\r\\n                ></aw-manage-search-criteria>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group \\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".pn\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"searchCriteria.pn\\\" class=\\\"aw-input\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group \\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".batchNumber\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"searchCriteria.batchNumber\\\" class=\\\"aw-input\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group \\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".designation\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"searchCriteria.designation\\\" class=\\\"aw-input\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{\\r\\n                        componentData.componentId + \\\".operationalStatus\\\" | translate\\r\\n                      }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"searchCriteria.operationalStatus\\\"\\r\\n                          [options]=\\\"statusList\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".eisDate\\\" | translate }}</label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [(ngModel)]=\\\"searchCriteria.date\\\"\\r\\n                          appendTo=\\\"body\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <!-- ACTION -->\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row search-criteria-footer\\\">\\r\\n                    <div class=\\\"search-actions\\\">\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"search()\\\"\\r\\n                        color=\\\"primary\\\"\\r\\n                        appKeyPress\\r\\n                        [keyCode]=\\\"'Enter'\\\"\\r\\n                        (keyPress)=\\\"search()\\\"\\r\\n                      >\\r\\n                        {{ componentData.componentId + \\\".toSearch\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }} ({{ resultsTable ? resultsTable.length : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #ptableResult\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"resultTableCols\\\"\\r\\n                [value]=\\\"resultsTable\\\"\\r\\n                [(selection)]=\\\"selectedResults\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedResults.length > 0 }\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableEquipmentGlobalFilter\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"ptableResult.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedResults.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openSelectedBatch()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      <!-- Part Number -->\\r\\n                      <span *ngSwitchCase=\\\"'batchNumber'\\\">\\r\\n                        <a (click)=\\\"openSelectedBatch(rowData)\\\">{{ rowData[col.field] }}</a>\\r\\n                      </span>\\r\\n                      <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host .custom-width {\\n  max-width: -webkit-fit-content;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvcGFja2FnaW5nLWJhdGNoL3NlYXJjaC9EOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGZyb250ZW5kX2Flcm93ZWJiL3NyY1xcYXBwXFxtYWluXFxsb2dpc3RpY3NcXHBhY2thZ2luZy1iYXRjaFxcc2VhcmNoXFxwYWNrYWdpbmctYmF0Y2gtc2VhcmNoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksOEJBQXNCO0VBQXRCLDJCQUFzQjtFQUF0QixzQkFBc0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vbG9naXN0aWNzL3BhY2thZ2luZy1iYXRjaC9zZWFyY2gvcGFja2FnaW5nLWJhdGNoLXNlYXJjaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAuY3VzdG9tLXdpZHRoIHtcclxuICAgIG1heC13aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ISearchCriteria } from '../../../../shared/components/manage-search-criteria/search-criteria.interface';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BireVariantVersionDTO } from '../../../../shared/types/api-types/bire-variant-version-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { ListUtils } from '../../../../shared/utils/list-utils';\r\n\r\nimport { PackagingBatchSearchService } from './packaging-batch-search.service';\r\n\r\ninterface CustomFamilyVariantLabelValue {\r\n  label: string;\r\n  value: BireVariantVersionDTO;\r\n}\r\n\r\ninterface PackagingBatchResultInterface {\r\n  pn?: string;\r\n  quantity?: number;\r\n  batchNumber?: string;\r\n  designation?: string;\r\n  operationalStatus?: string;\r\n  date?: Date;\r\n  assetCode?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-packaging-batch-search',\r\n  styleUrls: ['./packaging-batch-search.component.scss'],\r\n  templateUrl: './packaging-batch-search.component.html'\r\n})\r\nexport class PackagingBatchSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public readonly SEARCH_CRITERIA_ID: string; // TODO: Add a search ID\r\n\r\n  @ViewChild('resultsContainerAnchor')\r\n  public resultsContainerAnchor: ElementRef;\r\n\r\n  public hideSearchCriteria: boolean;\r\n\r\n  // Table\r\n  public resultTableCols: TableColumn[];\r\n  public resultsTable: PackagingBatchResultInterface[];\r\n  public selectedResults: PackagingBatchResultInterface[];\r\n\r\n  // Dropdowns\r\n  public familyVariantList: CustomFamilyVariantLabelValue[];\r\n  public statusList: LabelValue<string>[];\r\n\r\n  public searchCriteria: PackagingBatchResultInterface;\r\n  public searchCriteriaCalculated: boolean;\r\n  public searchCriteriaToSave: PackagingBatchResultInterface;\r\n\r\n  public shopList: SelectItem[];\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly propertiesService: PropertiesService,\r\n    public sessionService: SessionService,\r\n    private readonly packagingBatchSearchService: PackagingBatchSearchService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_PACKAGING_BATCH_SEARCH;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.displayComponentContext('global.search', true);\r\n\r\n    this.searchCriteria = {};\r\n    this.resultsTable = [];\r\n    this.selectedResults = [];\r\n    this.loadTableCols();\r\n  }\r\n\r\n  /************************************\r\n   * Load Tech Receipt Table Columns\r\n   ************************************/\r\n  private loadTableCols() {\r\n    this.resultTableCols = [\r\n      { field: 'batchNumber', alignment: 'left' },\r\n      { field: 'pn', alignment: 'left' },\r\n      { field: 'quantity', alignment: 'left' },\r\n      { field: 'designation', alignment: 'left' },\r\n      { field: 'operationalStatus', alignment: 'left' },\r\n      { field: 'date', alignment: 'left' },\r\n      { field: 'assetCode', alignment: 'left' }\r\n    ];\r\n\r\n    this.loadDropdowns();\r\n  }\r\n\r\n  /************************************\r\n   * Fetch Dropdown Data\r\n   ************************************/\r\n  private loadDropdowns(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.BATCH_EQUIPMENT_STATUS_MAP).subscribe((results) => {\r\n      this.statusList = results;\r\n    });\r\n    this.loadFamilyVariantList();\r\n  }\r\n\r\n  private loadFamilyVariantList(): void {\r\n    const familyFunction = '';\r\n\r\n    this.packagingBatchSearchService.findAllBireVariantVersionByFamilyFunction(familyFunction).subscribe((results) => {\r\n      this.familyVariantList = ListUtils.orEmpty(results)\r\n        .filter((familyVariant) => !!familyVariant.familyCode && !!familyVariant.variantCode)\r\n        .map((familyVariant) => {\r\n          const label =\r\n            `${familyVariant.familyName || familyVariant.familyCode}` +\r\n            '-' +\r\n            `${familyVariant.variantName || familyVariant.variantCode}`;\r\n\r\n          return {\r\n            label,\r\n            value: familyVariant\r\n          };\r\n        });\r\n    });\r\n  }\r\n\r\n  /************************************\r\n   * Load Tech Receipt\r\n   ************************************/\r\n  public search() {\r\n    this.hideSearchCriteria = true;\r\n    const bidoObject = this.getbidoInputObject();\r\n    this.resultsTable = [];\r\n    this.packagingBatchSearchService.loadPackagingBatchData(bidoObject).subscribe((result) => {\r\n      if (result && result.length) {\r\n        this.mapBidoEqupmentOutput(result);\r\n      }\r\n    });\r\n  }\r\n\r\n  private mapBidoEqupmentOutput(result: BidoEquipmentDTO[]): void {\r\n    result.forEach((element) => {\r\n      const tableObject: PackagingBatchResultInterface = {\r\n        batchNumber: element.batchNumber,\r\n        pn: element.pnCode,\r\n        designation: element.equipmentDesignation,\r\n        operationalStatus: this.getOprationalStatus(element.operationalStatus || ''),\r\n        date: element.eisDate,\r\n        assetCode: element.equipmentCode,\r\n        quantity: element.quantity\r\n      };\r\n\r\n      this.resultsTable.push(tableObject);\r\n    });\r\n  }\r\n\r\n  private getOprationalStatus(status: string): string {\r\n    const result = this.statusList.find(({ value }) => value === status);\r\n\r\n    return result ? result.label : '';\r\n  }\r\n\r\n  private getbidoInputObject(): BidoEquipmentDTO {\r\n    const equpmantObject: BidoEquipmentDTO = {\r\n      pnCode: this.searchCriteria.pn,\r\n      batchNumber: this.searchCriteria.batchNumber,\r\n      equipmentDesignation: this.searchCriteria.designation,\r\n      operationalStatus: this.searchCriteria.operationalStatus,\r\n      eisDate: this.searchCriteria.date\r\n    };\r\n\r\n    return equpmantObject;\r\n  }\r\n  /************************************\r\n   * Open Selected Tech Receipt\r\n   ************************************/\r\n  public openSelectedBatch(rowData: PackagingBatchResultInterface) {\r\n    if (!!rowData) {\r\n      this.selectedResults = [];\r\n      this.selectedResults.push(rowData);\r\n    }\r\n\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_PACKAGING_BATCH_FORM,\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n\r\n    data.objectId = this.selectedResults[0].assetCode;\r\n\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  /**********************************\r\n   * Search Criteria\r\n   **********************************/\r\n  public loadSearchCriteria(event: ISearchCriteria): void {\r\n    const criteria = event.criteria as PackagingBatchResultInterface | undefined;\r\n    if (criteria) {\r\n      if (!this.componentData.objectId) {\r\n        this.searchCriteria = criteria;\r\n      } else {\r\n        this.componentData.objectId = undefined;\r\n      }\r\n\r\n      this.search();\r\n    } else {\r\n      this.clearSearchCriteria();\r\n    }\r\n  }\r\n\r\n  private clearSearchCriteria(): void {\r\n    this.searchCriteria = {};\r\n  }\r\n\r\n  public saveSearchCriteriaAsked(): void {\r\n    this.searchCriteriaToSave = this.searchCriteria;\r\n  }\r\n\r\n  /**\r\n   * Open item screen form\r\n   */\r\n  public openNewPackaging(): void {\r\n    this.openPackaging(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  private openPackaging(objectId: string | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_PACKAGING_BATCH_FORM,\r\n      openMode\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidoEquipmentApi } from '../../../../shared/api/bido-equipment.api';\r\nimport { BidtWarehouseApi } from '../../../../shared/api/bidt-warehouse.api';\r\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { FindAllBireVariantVersionByFamilyFunctionInput } from '../../../../shared/types/api-input-types/product-structure-management/find-all-bire-variant-version-by-family-function-input.interface';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BidtWarehouseDTO } from '../../../../shared/types/api-types/bidt-warehouse-dto.interface';\r\nimport { BireVariantVersionDTO } from '../../../../shared/types/api-types/bire-variant-version-dto.interface';\r\n\r\n@Injectable()\r\nexport class PackagingBatchSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtWarehouseApi: BidtWarehouseApi,\r\n    private readonly bidoEquipmentApi: BidoEquipmentApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findAllBireVariantVersionByFamilyFunction(\r\n    familyFunction: string | undefined\r\n  ): Observable<BireVariantVersionDTO[]> {\r\n    const param = {\r\n      familyFunction\r\n    };\r\n\r\n    return super.post<FindAllBireVariantVersionByFamilyFunctionInput, BireVariantVersionDTO[]>(\r\n      this.productStructureManagementApi.findAllBireVariantVersionByFamilyFunction,\r\n      param\r\n    );\r\n  }\r\n\r\n  public loadPackagingBatchData(equipmentObj: BidoEquipmentDTO): Observable<BidoEquipmentDTO[]> {\r\n    return super.post<BidoEquipmentDTO, BidoEquipmentDTO[]>(\r\n      this.bidoEquipmentApi.findPackagingBatchesByCriteria,\r\n      equipmentObj\r\n    );\r\n  }\r\n\r\n  public getWarehousesBySiteId(siteId: number): Observable<BidtWarehouseDTO[]> {\r\n    return super.post<number, BidtWarehouseDTO[]>(this.bidtWarehouseApi.findBySiteId, siteId);\r\n  }\r\n}\r\n","export class BidtStockMvtConstants {\r\n  public static readonly MVT_WAY_CREDIT: string = 'C';\r\n\r\n  public static readonly MVT_WAY_DEBIT: string = 'D';\r\n\r\n  public static readonly MVT_WAY_TRANSFER: string = 'T';\r\n\r\n  public static readonly MVT_RECONDITIONING: string = 'MVT_RECONDITIONING';\r\n\r\n  public static readonly MVT_RELATED_FL: string = 'MVT_RELATED_FL';\r\n\r\n  public static readonly MVT_STORAGE_COUNTER_RESET = 'MVT_STORAGE_COUNTER_RESET';\r\n\r\n  public static readonly MVT_STATUS_STEP_WAY_BEFORE_TRANSFERT = 0;\r\n  public static readonly MVT_STATUS_STEP_WAY_TRANSFERT = 1;\r\n  public static readonly MVT_STATUS_STEP_WAY_DEBIT = 2;\r\n  public static readonly MVT_STATUS_STEP_WAY_CREDIT = 3;\r\n}\r\n","export class BireMeasureReferenceConstants {\r\n  // Calendar Limit\r\n  public static readonly BIRE_MEASURE_REFERENCE_COUNTER_CODE_CALENDAR_LIMIT: string = 'CAL';\r\n\r\n  // References for Maintenance Program\r\n  public static readonly BIRE_MEASURE_REFERENCE_COUNTER_CODE_PRE_FLIGHT: string = 'BF';\r\n  public static readonly BIRE_MEASURE_REFERENCE_COUNTER_CODE_POST_FLIGHT: string = 'AF';\r\n  public static readonly BIRE_MEASURE_REFERENCE_COUNTER_CODE_DAILY: string = 'DAILY';\r\n  public static readonly BIRE_MEASURE_REFERENCE_COUNTER_CODE_TSN: string = 'TSN';\r\n}\r\n","export class BireRatingConstants {\r\n  public static readonly DEFAULT = '_';\r\n}\r\n","import { StringUtils } from '../../shared/utils/string-utils';\r\n\r\nexport class BidoFamilyVariantUtils {\r\n  public static buildFamilyVariantCode(\r\n    familyCode: string | undefined,\r\n    variantCode: string | undefined\r\n  ): string | undefined {\r\n    if (StringUtils.isNullOrEmpty(familyCode) || StringUtils.isNullOrEmpty(variantCode)) {\r\n      return undefined;\r\n    } else {\r\n      return `${familyCode}-${variantCode}`;\r\n    }\r\n  }\r\n\r\n  public static getFamilyCodeFromFamilyVariantCode(familyVariantCode: string | undefined): string | undefined {\r\n    return !!familyVariantCode && familyVariantCode.indexOf('-') > -1\r\n      ? familyVariantCode.substring(0, familyVariantCode.indexOf('-'))\r\n      : undefined;\r\n  }\r\n\r\n  public static getVariantCodeFromFamilyVariantCode(familyVariantCode: string | undefined): string | undefined {\r\n    return !!familyVariantCode && familyVariantCode.indexOf('-') > -1\r\n      ? familyVariantCode.substring(familyVariantCode.indexOf('-') + 1)\r\n      : undefined;\r\n  }\r\n}\r\n"],"sourceRoot":""}