{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./node_modules/primeng/inputtextarea.js","webpack:///./node_modules/primeng/message.js","webpack:///./node_modules/primeng/radiobutton.js","webpack:///./node_modules/primeng/splitbutton.js","webpack:///./src/app/main/logistics/sales-document/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component.html","webpack:///./src/app/main/logistics/sales-document/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component.ts","webpack:///./src/app/main/logistics/sales-document/dialog-material-and-services/dialog-material-and-services.component.html","webpack:///./src/app/main/logistics/sales-document/dialog-material-and-services/dialog-material-and-services.component.ts","webpack:///./src/app/main/logistics/sales-document/form/sales-document-form.component.html","webpack:///./src/app/main/logistics/sales-document/form/sales-document-form.component.scss","webpack:///./src/app/main/logistics/sales-document/form/sales-document-form.component.ts","webpack:///./src/app/main/logistics/sales-document/form/sales-document-form.service.ts","webpack:///./src/app/main/logistics/sales-document/sales-document.module.ts","webpack:///./src/app/main/logistics/sales-document/search/sales-document-search.component.html","webpack:///./src/app/main/logistics/sales-document/search/sales-document-search.component.scss","webpack:///./src/app/main/logistics/sales-document/search/sales-document-search.component.ts","webpack:///./src/app/main/logistics/sales-document/search/sales-document-search.service.ts","webpack:///./src/app/shared/utils/file-utils.ts","webpack:///./src/app/shared/utils/label-value-utils.ts"],"names":[],"mappings":"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","file":"logistics-sales-document-sales-document-module.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputtextarea/inputtextarea\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/message/message\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/radiobutton/radiobutton\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/splitbutton/splitbutton\"));","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docName\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"100\\\"\\r\\n          [(ngModel)]=\\\"document.documentName\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docDescription\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          pInputTextarea\\r\\n          [rows]=\\\"3\\\"\\r\\n          [(ngModel)]=\\\"document.documentDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          maxlength=\\\"300\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" color=\\\"primary\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { BidtDocumentDTO } from '../../../../shared/types/api-types/bidt-document-dto.interface';\r\nimport { DialogComponent } from '../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-business-partner-bido-document',\r\n  templateUrl: './dialog-business-partner-bido-document.component.html'\r\n})\r\nexport class DialogBusinessPartnerBidoDocumentComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public document: BidtDocumentDTO;\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Input()\r\n  public types: SelectItem[];\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtDocumentDTO>;\r\n\r\n  public constructor(public sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DialogOrderDocBidtDocumentComponent');\r\n\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidtDocumentDTO>();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.updateOpenMode(this.openMode);\r\n\r\n    if (!this.document) {\r\n      this.document = {};\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.document);\r\n    this.closeDialog();\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".material\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: !newObj }\\\">\\r\\n        <div class=\\\"form-control-data\\\" (click)=\\\"openMaterialDialog()\\\">\\r\\n          {{ obj.pnText }}\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"obj.pnText && newObj\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n          <i\\r\\n            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n            aria-hidden=\\\"true\\\"\\r\\n            (click)=\\\"obj.pnText = undefined\\\"\\r\\n          ></i>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"newObj\\\" class=\\\"btn-search-wrapper\\\">\\r\\n          <i\\r\\n            *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n            class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n            aria-hidden=\\\"true\\\"\\r\\n            (click)=\\\"openMaterialDialog()\\\"\\r\\n          ></i>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"snVisibility\\\" class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".serialNumber\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"obj.serialNumber\\\" maxlength=\\\"50\\\" [disabled]=\\\"isReadOnlyForm\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"bnVisibility\\\" class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".batchNumber\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"obj.batchNumber\\\" maxlength=\\\"50\\\" [disabled]=\\\"isReadOnlyForm\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".quantity\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          pKeyFilter=\\\"int\\\"\\r\\n          maxlength=\\\"37\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"obj.quantityForTable\\\"\\r\\n          [disabled]=\\\"isReadOnlyForm\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".warehouse\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"warehouses\\\"\\r\\n          [(ngModel)]=\\\"obj.warehouse\\\"\\r\\n          [disabled]=\\\"isReadOnlyForm\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".partStatus\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"obj.partStatus\\\" disabled />\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span *ngIf=\\\"!isReadOnlyForm\\\">{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n      <span *ngIf=\\\"isReadOnlyForm\\\">{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"associate()\\\"\\r\\n      [disabled]=\\\"!obj.pnText\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-material\\r\\n  *ngIf=\\\"showQuickSearchMaterialPopup\\\"\\r\\n  [(display)]=\\\"showQuickSearchMaterialPopup\\\"\\r\\n  [material-code]=\\\"pnCode\\\"\\r\\n  (onSelected)=\\\"setSelectedMaterial($event)\\\"\\r\\n></aw-dialog-search-material>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { MaterialAndServicesOutput } from '../../../../shared/types/api-output-types/bidt-purchase-request/material-and-services-output.interface';\r\nimport { BirePnDTOId } from '../../../../shared/types/api-types/bire-pn-dto-id.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { DialogComponent } from '../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { SalesDocumentFormService } from '../form/sales-document-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-material-and-services',\r\n  templateUrl: './dialog-material-and-services.component.html'\r\n})\r\nexport class DialogMaterialAndServicesComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public obj: MaterialAndServicesOutput;\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n\r\n  @Input()\r\n  public newObj: boolean;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<MaterialAndServicesOutput>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<MaterialAndServicesOutput>;\r\n\r\n  public showQuickSearchMaterialPopup: boolean;\r\n\r\n  public warehouses: LabelValue<string>[];\r\n\r\n  public pnCode: string | undefined;\r\n\r\n  public snVisibility: boolean;\r\n  public bnVisibility: boolean;\r\n\r\n  public constructor(private readonly salesDocumentFormService: SalesDocumentFormService) {\r\n    super(ComponentOpenMode.Write, 'DialogMaterialsComponent');\r\n\r\n    this.init();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.obj) {\r\n      this.obj = {\r\n        price: 0,\r\n        productionLeadTime: 0,\r\n        bidtStockMvtDTO: {},\r\n        quantity: 0\r\n      };\r\n      this.pnCode = undefined;\r\n    } else {\r\n      this.pnCode = !!this.obj.bidtStockMvtDTO ? this.obj.bidtStockMvtDTO.birePnPnCode : undefined;\r\n      if (!!this.obj.quantityForTable) {\r\n        const qty = this.obj.quantityForTable.split(',');\r\n        let quantity = '';\r\n        for (let i = 0; i < qty.length; i++) {\r\n          quantity = `${quantity}${qty[i]}`;\r\n        }\r\n        this.obj.quantityForTable = quantity;\r\n      }\r\n      if (!!this.pnCode) {\r\n        this.setSnBnVisibility(this.pnCode);\r\n        this.loadWarehouses();\r\n      }\r\n    }\r\n  }\r\n\r\n  private init(): void {\r\n    this.showQuickSearchMaterialPopup = false;\r\n    this.warehouses = [];\r\n    this.onCreate = new EventEmitter<MaterialAndServicesOutput>();\r\n    this.onUpdate = new EventEmitter<MaterialAndServicesOutput>();\r\n    this.snVisibility = false;\r\n    this.bnVisibility = false;\r\n  }\r\n\r\n  public openMaterialDialog() {\r\n    if (this.newObj) {\r\n      this.showQuickSearchMaterialPopup = true;\r\n    }\r\n  }\r\n\r\n  public setSelectedMaterial(selectedObject: BirePnDTO) {\r\n    if (selectedObject) {\r\n      this.obj.pnText = !!selectedObject.articleDesignation\r\n        ? `${selectedObject.pnCode} / ${selectedObject.articleDesignation}`\r\n        : selectedObject.pnCode;\r\n      this.pnCode = selectedObject.pnCode;\r\n      if (!!this.pnCode) {\r\n        this.setSnBnVisibility(this.pnCode);\r\n      }\r\n      this.loadWarehouses();\r\n    }\r\n    this.showQuickSearchMaterialPopup = false;\r\n  }\r\n\r\n  private loadWarehouses(): void {\r\n    if (!!this.pnCode) {\r\n      this.salesDocumentFormService.displayWarehouse(this.pnCode).subscribe((results) => {\r\n        this.warehouses = results || [];\r\n        if (!this.newObj && !!this.obj.warehouse) {\r\n          this.obj.warehouse = this.warehouses.filter((ware) => ware.label === this.obj.warehouse)[0].value;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public associate(): void {\r\n    this.updateBidtStockMvtDTO();\r\n    if (this.newObj) {\r\n      this.onCreate.emit(this.obj);\r\n      this.display = false;\r\n    } else {\r\n      this.onUpdate.emit(this.obj);\r\n      this.display = false;\r\n    }\r\n  }\r\n\r\n  private setSnBnVisibility(pnCode: string): void {\r\n    const input: BirePnDTOId = {\r\n      pnCode\r\n    };\r\n    this.salesDocumentFormService.findBirePn(input).subscribe((result) => {\r\n      if (\r\n        !!result &&\r\n        (AWPropertiesConstants.PN_TRACEABILITY_BY_SN === result.traceability ||\r\n          AWPropertiesConstants.PN_TRACEABILITY_BY_PACKAGING_BATCH_AND_SN === result.traceability)\r\n      ) {\r\n        this.snVisibility = true;\r\n      }\r\n\r\n      if (\r\n        !!result &&\r\n        (AWPropertiesConstants.PN_TRACEABILITY_BY_BATCH === result.traceability ||\r\n          AWPropertiesConstants.PN_TRACEABILITY_BY_PACKAGING_BATCH_AND_SN === result.traceability)\r\n      ) {\r\n        this.bnVisibility = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateBidtStockMvtDTO(): void {\r\n    if (!!this.obj.bidtStockMvtDTO) {\r\n      this.obj.bidtStockMvtDTO = {\r\n        birePnPnCode: this.pnCode,\r\n        stockMvtSn: this.obj.serialNumber,\r\n        stockMvtBatchNumber: this.obj.batchNumber,\r\n        id: this.obj.id\r\n      };\r\n      if (!!this.obj.quantityForTable) {\r\n        this.obj.bidtStockMvtDTO.stockMvtQuantity = this.obj.quantityForTable;\r\n      }\r\n      if (!!this.obj.warehouse) {\r\n        const radix = 10;\r\n        this.obj.bidtStockMvtDTO.bidtWarehouseId = Number.parseInt(this.obj.warehouse, radix);\r\n        this.obj.warehouse = this.warehouses.filter((ware) => ware.value === this.obj.warehouse)[0].label;\r\n      }\r\n      if (this.obj.bidtStockMvtDTO.id === null || this.obj.bidtStockMvtDTO.id === undefined) {\r\n        this.obj.bidtStockMvtDTO.id = Math.random();\r\n      }\r\n      if (!!this.obj.quantityForTable) {\r\n        this.obj.quantityForTable = this.numberStringToStringWithCommas(this.obj.quantityForTable);\r\n      }\r\n    }\r\n  }\r\n\r\n  /***************\r\n   * Helper method\r\n   **************/\r\n\r\n  public numberToStringWithCommas(n: number): string {\r\n    const parts = n.toString().split('.');\r\n\r\n    return parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + (parts[1] ? '.' + parts[1] : '');\r\n  }\r\n\r\n  public numberStringToStringWithCommas(n: string): string {\r\n    const parts = n.split('.');\r\n\r\n    return parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + (parts[1] ? '.' + parts[1] : '');\r\n  }\r\n}\r\n","module.exports = \"<aw-component-sidebar\\r\\n  *ngIf=\\\"mainData.srCode\\\"\\r\\n  [toc]=\\\"toc\\\"\\r\\n  [(visibility)]=\\\"rightSidebarVisibility\\\"\\r\\n  [ngClass]=\\\"{ collapsed: rightSidebarCollapsed, expanded: rightSidebarExpanded }\\\"\\r\\n></aw-component-sidebar>\\r\\n\\r\\n<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\"\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n        {{ pageSubtitle }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <p-splitButton\\r\\n      *ngIf=\\\"databaseMaterials.length !== 0\\\"\\r\\n      class=\\\"aw-split-btn aw-table-action\\\"\\r\\n      label=\\\"{{ getComponentName() + '.navigate' | translate }}\\\"\\r\\n      [model]=\\\"navigationLinkList\\\"\\r\\n    ></p-splitButton>\\r\\n\\r\\n    <button *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"reloadSalesDoc()\\\">\\r\\n      {{ \\\"global.refresh\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"editSalesDoc()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancelSalesDoc()\\\">\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveSalesDoc()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div #mainInformationAnchor class=\\\"grid-cell--12\\\" (click)=\\\"selectPageTocEntry(component.MAIN_ANCHOR_ID)\\\">\\r\\n          <div\\r\\n            class=\\\"grid-cell grid-cell--container\\\"\\r\\n            [ngClass]=\\\"{ active: isPageTocEntrySelected(component.MAIN_ANCHOR_ID) }\\\"\\r\\n          >\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"page.mainData\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"form-group flex--2\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".srCode\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"aw-input\\\" disabled [(ngModel)]=\\\"mainData.srCode\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group flex--2\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".srName\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"aw-input\\\"\\r\\n                    [(ngModel)]=\\\"mainData.srName\\\"\\r\\n                    maxlength=\\\"100\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group flex--2\\\">\\r\\n                <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".srDescription\\\" | translate }}</label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <textarea\\r\\n                    pInputTextarea\\r\\n                    [rows]=\\\"3\\\"\\r\\n                    class=\\\"aw-textarea\\\"\\r\\n                    maxlength=\\\"40\\\"\\r\\n                    [(ngModel)]=\\\"mainData.srDescription\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                  ></textarea>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"form-group flex--2\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ componentData.componentId + \\\".creationDate\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [(ngModel)]=\\\"mainData.srCreationDate\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                    [maxDate]=\\\"currDate\\\"\\r\\n                  ></p-calendar>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group flex--2\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ componentData.componentId + \\\".bidoCustomerCustomerCode\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [options]=\\\"salesDocumentCustomers\\\"\\r\\n                    [(ngModel)]=\\\"mainData.bidoCustomerCustomerCode\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group flex--2\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"form-group flex--2\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ componentData.componentId + \\\".deliveryDate\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [(ngModel)]=\\\"mainData.srDeliveryDate\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                  ></p-calendar>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group flex--2\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ componentData.componentId + \\\".srStatus\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"salesDocumentStatus\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    [(ngModel)]=\\\"mainData.srStatus\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group flex--2\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div [hidden]=\\\"!mainData.srCode\\\" class=\\\"grid-row\\\">\\r\\n        <div #msAnchor class=\\\"grid-cell--12\\\" (click)=\\\"selectPageTocEntry(component.MATERIALS_ANCHOR_ID)\\\">\\r\\n          <div\\r\\n            *ngIf=\\\"mainData.srCode\\\"\\r\\n            class=\\\"grid-cell grid-cell--container\\\"\\r\\n            [ngClass]=\\\"{ active: isPageTocEntrySelected(component.MATERIALS_ANCHOR_ID) }\\\"\\r\\n          >\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ componentData.componentId + \\\".materialsList\\\" | translate }} ({{\\r\\n                    materialsTable ? materialsTable.length : 0\\r\\n                  }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #pTableMaterialsAndServices\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"materialsTableCols\\\"\\r\\n                [value]=\\\"materialsTable\\\"\\r\\n                [(selection)]=\\\"selectedMaterials\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isMaterialsTableLoading\\\">&nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isMaterialsTableLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedMaterials.length > 0 }\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableDecompositionGlobalFilter\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"pTableMaterialsAndServices.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedMaterials.length === 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"goToGoodsMovements()\\\"\\r\\n                        [disabled]=\\\"databaseMaterials.length === 0\\\"\\r\\n                      >\\r\\n                        {{ componentData.componentId + \\\".goodsMovements\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <!-- <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && selectedMaterials.length === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"goToStockMovements()\\\"\\r\\n                      >\\r\\n                        {{ componentData.componentId + \\\".stockMovements\\\" | translate }}\\r\\n                      </button> -->\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && selectedMaterials.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"deleteMaterials()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && selectedMaterials.length === 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"createMaterial()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && selectedMaterials.length === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editMaterial()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedMaterials.length === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openMaterial()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col *ngIf=\\\"!isReadOpenMode\\\" class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <!-- <tr>\\r\\n                    <th *ngIf=\\\"!isReadOpenMode\\\" colspan=\\\"6\\\"></th>\\r\\n                    <th *ngIf=\\\"isReadOpenMode\\\" colspan=\\\"5\\\"></th>\\r\\n\\r\\n                    <th *ngIf=\\\"hideUPrices\\\" colspan=\\\"4\\\" class=\\\"table-border-left\\\" style=\\\"text-align: center\\\">\\r\\n                      {{ getComponentName() + \\\".unitPrices\\\" | translate }}\\r\\n                    </th>\\r\\n                    <th colspan=\\\"2\\\" class=\\\"table-border-left\\\" style=\\\"text-align: center\\\">\\r\\n                      {{ getComponentName() + \\\".totalPrices\\\" | translate }}\\r\\n                    </th>\\r\\n                    <th colspan=\\\"3\\\" class=\\\"table-border-left\\\" style=\\\"text-align: center\\\">\\r\\n                      {{ getComponentName() + \\\".stockMovements\\\" | translate }}\\r\\n                    </th>\\r\\n                  </tr> -->\\r\\n\\r\\n                  <tr>\\r\\n                    <th *ngIf=\\\"!isReadOpenMode\\\" class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td *ngIf=\\\"!isReadOpenMode\\\" class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      <span *ngSwitchCase=\\\"'pnText'\\\">\\r\\n                        <a (click)=\\\"goToMaterial(rowData)\\\">\\r\\n                          <span title=\\\"{{ rowData[col.field] }}\\\">{{ rowData[col.field] }}</span>\\r\\n                        </a>\\r\\n                      </span>\\r\\n\\r\\n                      <span *ngSwitchCase=\\\"'warehouse'\\\">\\r\\n                        <span title=\\\"{{ rowData[col.field] }}\\\">{{ rowData[col.field] }}</span>\\r\\n                      </span>\\r\\n\\r\\n                      <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div [hidden]=\\\"!mainData.srCode\\\" class=\\\"grid-row\\\">\\r\\n        <div #documentAnchor class=\\\"grid-cell--12\\\" (click)=\\\"selectPageTocEntry(component.DOCUMENTS_ANCHOR_ID)\\\">\\r\\n          <div\\r\\n            class=\\\"grid-cell grid-cell--container\\\"\\r\\n            *ngIf=\\\"mainData.srCode\\\"\\r\\n            [ngClass]=\\\"{ active: isPageTocEntrySelected(component.DOCUMENTS_ANCHOR_ID) }\\\"\\r\\n          >\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.documents\\\" | translate }}\\r\\n                  ({{ documentTable ? documentTable.length : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #ptableDocument\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"documentTableCols\\\"\\r\\n                [value]=\\\"documentTable\\\"\\r\\n                [(selection)]=\\\"selectedDocuments\\\"\\r\\n                dataKey=\\\"docName\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isLoadingDocumentTable\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isLoadingDocumentTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedDocuments.length > 0 }\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableDocumentGlobalFilter\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"ptableDocument.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedDocuments.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"downloadFiles()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.download\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && selectedDocuments.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteDocuments()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && selectedDocuments.length === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editDocument()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedDocuments.length === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openDocument()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <p-fileUpload\\r\\n                        #fileUploader\\r\\n                        *ngIf=\\\"!isReadOpenMode && selectedDocuments.length === 0\\\"\\r\\n                        class=\\\"aw-fileupload aw-table-action\\\"\\r\\n                        chooseLabel=\\\"{{ 'global.upload' | translate }}\\\"\\r\\n                        name=\\\"document[]\\\"\\r\\n                        customUpload=\\\"true\\\"\\r\\n                        mode=\\\"basic\\\"\\r\\n                        auto=\\\"true\\\"\\r\\n                        (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                      ></p-fileUpload>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" [ngClass]=\\\"{ 'display--none': isReadOpenMode }\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\" [ngClass]=\\\"{ 'display--none': isReadOpenMode }\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\" [ngClass]=\\\"{ 'display--none': isReadOpenMode }\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ rowData[col.field] }}\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-dialog-business-partner-bido-document\\r\\n  *ngIf=\\\"showDocumentDialog\\\"\\r\\n  [(display)]=\\\"showDocumentDialog\\\"\\r\\n  [document]=\\\"currentDocument\\\"\\r\\n  [openMode]=\\\"documentDialogOpenMode\\\"\\r\\n  [types]=\\\"documentTypes\\\"\\r\\n  (onValidated)=\\\"onAddDocument($event)\\\"\\r\\n></aw-dialog-business-partner-bido-document>\\r\\n\\r\\n<aw-dialog-material-and-services\\r\\n  *ngIf=\\\"showDialogMaterialAndServices\\\"\\r\\n  [(display)]=\\\"showDialogMaterialAndServices\\\"\\r\\n  [obj]=\\\"currentMaterialObject\\\"\\r\\n  [isReadOnlyForm]=\\\"isReadOnlyPopup\\\"\\r\\n  [newObj]=\\\"isNewMaterialObject\\\"\\r\\n  (onCreate)=\\\"addNewMaterial($event)\\\"\\r\\n  (onUpdate)=\\\"updateMaterial($event)\\\"\\r\\n></aw-dialog-material-and-services>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbG9naXN0aWNzL3NhbGVzLWRvY3VtZW50L2Zvcm0vc2FsZXMtZG9jdW1lbnQtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { cloneDeep as _cloneDeep } from 'lodash-es';\r\nimport { MenuItem, SelectItem } from 'primeng/api';\r\nimport { FileUpload } from 'primeng/fileupload';\r\n\r\nimport { PageTocService } from '../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { PageTocEntry } from '../../../../shared/components/component-sidebar/types/page-toc-entry.interface';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../../shared/services/date.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { SaveSalesDocumentDTO } from '../../../../shared/types/api-input-types/bidt-sales-request/save-sales-document-dto.interface';\r\nimport { MaterialAndServicesOutput } from '../../../../shared/types/api-output-types/bidt-purchase-request/material-and-services-output.interface';\r\nimport { BidtDocumentDTO } from '../../../../shared/types/api-types/bidt-document-dto.interface';\r\nimport { BidtSalesRequestDTO } from '../../../../shared/types/api-types/bidt-sales-request-dto.interface';\r\nimport { BidtStockMvtDTO } from '../../../../shared/types/api-types/bidt-stock-mvt-dto.interface';\r\nimport { BirePnDTOId } from '../../../../shared/types/api-types/bire-pn-dto-id.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { GoodsMovementInput } from '../../../../shared/types/component-input-types/logistics/goods-movement-input.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\nimport { ListUtils } from '../../../../shared/utils/list-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\nimport { SalesDocumentSearchService } from '../search/sales-document-search.service';\r\n\r\nimport { SalesDocumentFormService } from './sales-document-form.service';\r\n\r\ninterface DocumentRow {\r\n  docName: string;\r\n  docExtension: string;\r\n  docSize: string;\r\n  docAttachmentDate: string;\r\n  docType: string;\r\n  id?: number;\r\n  _obj: BidtDocumentDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-sales-document-form',\r\n  templateUrl: './sales-document-form.component.html',\r\n  styleUrls: ['./sales-document-form.component.scss']\r\n})\r\nexport class SalesDocumentFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  // General\r\n  public static readonly MAIN_ANCHOR_ID: string = 'mainInformationAnchor';\r\n  public static readonly MATERIALS_ANCHOR_ID: string = 'materialsAnchor';\r\n  public static readonly DOCUMENTS_ANCHOR_ID: string = 'documentsAnchor';\r\n\r\n  private readonly SET_TIME_OUT = 500;\r\n\r\n  public pageId?: number;\r\n  public pageSubtitle: string;\r\n\r\n  public navigationLinkList: MenuItem[];\r\n\r\n  public mainData: BidtSalesRequestDTO;\r\n\r\n  public readonly component: typeof SalesDocumentFormComponent;\r\n\r\n  public currDate: Date;\r\n\r\n  // Materials Table\r\n  public materialsTable: MaterialAndServicesOutput[];\r\n  public databaseMaterials: MaterialAndServicesOutput[];\r\n  public selectedMaterials: MaterialAndServicesOutput[];\r\n  public materialsTableCols: TableColumn[];\r\n  public isMaterialsTableLoading: boolean;\r\n  public showDialogMaterialAndServices: boolean;\r\n  public currentMaterialObject: MaterialAndServicesOutput | undefined;\r\n  public isNewMaterialObject: boolean;\r\n  public isReadOnlyPopup: boolean;\r\n  public selectedMaterialIndex?: number;\r\n\r\n  // Documents Table\r\n  public documentTable: DocumentRow[];\r\n  public documentTableCols: TableColumn[];\r\n  public documentTypes: SelectItem[];\r\n  public selectedDocuments: DocumentRow[];\r\n  public currentDocument: BidtDocumentDTO | undefined;\r\n  public documentDialogOpenMode: ComponentOpenMode;\r\n  public showDocumentDialog: boolean;\r\n  public isLoadingDocumentTable: boolean;\r\n\r\n  private documents: BidtDocumentDTO[];\r\n  private currentDocumentIndex: number;\r\n  private documentsAdded: BidtDocumentDTO[];\r\n  private documentsRemoved: BidtDocumentDTO[];\r\n  private documentsUpdated: BidtDocumentDTO[];\r\n  private documentDataRemoveList: number[];\r\n\r\n  // Dropdowns\r\n  public salesDocumentStatus: LabelValue<string>[];\r\n  public salesDocumentCustomers: LabelValue<string>[];\r\n\r\n  // Table of content\r\n\r\n  @ViewChild(SalesDocumentFormComponent.MAIN_ANCHOR_ID)\r\n  public mainInformationEltRef: ElementRef;\r\n\r\n  @ViewChild(SalesDocumentFormComponent.MATERIALS_ANCHOR_ID)\r\n  public materialsEltRef: ElementRef;\r\n\r\n  @ViewChild(SalesDocumentFormComponent.DOCUMENTS_ANCHOR_ID)\r\n  public documentsEltRef: ElementRef;\r\n\r\n  public toc: PageTocEntry[];\r\n  public showSaveSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    pageTocService: PageTocService,\r\n    public sessionService: SessionService,\r\n    private readonly translateService: TranslateService,\r\n    private readonly salesDocumentFormService: SalesDocumentFormService,\r\n    private readonly salesDocumentSearchService: SalesDocumentSearchService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly dateService: DateService,\r\n    private readonly confirmationService: ConfirmationService\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Write,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n\r\n    this.component = SalesDocumentFormComponent;\r\n\r\n    this.setNavigationLinkList();\r\n\r\n    this.registerPageTocEntryObservable();\r\n\r\n    this.currDate = new Date();\r\n\r\n    this.init();\r\n    this.setTableCols();\r\n    this.loadDropdowns();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    if (!!this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n\r\n      this.setTableOfContent();\r\n\r\n      this.pageId = !!this.componentData.objectId\r\n        ? (this.serializationService.deserialize(this.componentData.objectId).id as number)\r\n        : undefined;\r\n\r\n      if (this.pageId !== null && this.pageId !== undefined) {\r\n        this.loadSalesDoc();\r\n      } else {\r\n        this.mainData.srCreationDate = (new Date() as unknown) as number;\r\n        this.displayComponentContext('tab.createMode', this.isCreateOpenMode);\r\n      }\r\n    }\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_SALES_DOCUMENT_FORM;\r\n  }\r\n\r\n  private init(): void {\r\n    // general\r\n    this.pageId = undefined;\r\n\r\n    // dropdowns\r\n    this.salesDocumentCustomers = [];\r\n    this.salesDocumentStatus = [];\r\n\r\n    // materials table\r\n    this.materialsTableCols = [];\r\n\r\n    // documents table\r\n    this.showDocumentDialog = false;\r\n    this.isLoadingDocumentTable = false;\r\n\r\n    this.initAfterSave();\r\n  }\r\n\r\n  public initAfterSave(): void {\r\n    // general\r\n    this.pageSubtitle = '';\r\n    this.mainData = {};\r\n\r\n    // materials table\r\n    this.materialsTable = [];\r\n    this.databaseMaterials = [];\r\n    this.selectedMaterials = [];\r\n    this.isMaterialsTableLoading = false;\r\n    this.showDialogMaterialAndServices = false;\r\n    this.currentMaterialObject = undefined;\r\n    this.isNewMaterialObject = false;\r\n    this.isReadOnlyPopup = false;\r\n\r\n    // documents table\r\n    this.documentsAdded = [];\r\n    this.documentsRemoved = [];\r\n    this.documentsUpdated = [];\r\n    this.documents = [];\r\n    this.documentTable = [];\r\n    this.documentTypes = [];\r\n    this.selectedDocuments = [];\r\n    this.currentDocument = undefined;\r\n    this.currentDocumentIndex = -1;\r\n    this.documentDialogOpenMode = ComponentOpenMode.Read;\r\n    this.documentDataRemoveList = [];\r\n  }\r\n\r\n  private setTableCols(): void {\r\n    this.materialsTableCols = [\r\n      { field: 'pnText', alignment: 'left', width: '30%' },\r\n      { field: 'serialNumber', alignment: 'left' },\r\n      { field: 'batchNumber', alignment: 'left' },\r\n      { field: 'quantityForTable', alignment: 'left' },\r\n      { field: 'warehouse', alignment: 'left' },\r\n      { field: 'partStatus', alignment: 'left' }\r\n    ];\r\n\r\n    this.documentTableCols = [\r\n      { field: 'docName', alignment: 'left', width: '40%' },\r\n      { field: 'docExtension', alignment: 'left', width: '20%' },\r\n      { field: 'docSize', alignment: 'left', width: '20%' },\r\n      { field: 'docAttachmentDate', alignment: 'left', width: '20%' }\r\n    ];\r\n  }\r\n\r\n  private setNavigationLinkList(): void {\r\n    const goodsMovementKey = this.getTranslateKey('goodsMovement');\r\n    const stockMovementKey = this.getTranslateKey('stockMovement');\r\n    this.translateService.get([goodsMovementKey, stockMovementKey]).subscribe((results) => {\r\n      const goodsMovementLabel = results ? results[goodsMovementKey] : 'Goods Movements';\r\n\r\n      this.navigationLinkList = [\r\n        {\r\n          label: goodsMovementLabel,\r\n          command: () => {\r\n            this.goToGoodsMovements();\r\n          }\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  /*******************\r\n   * Table Of Content\r\n   ******************/\r\n\r\n  private setTableOfContent(): void {\r\n    const mainDataKey = 'page.mainData';\r\n    const materialsKey = this.getTranslateKey('materials');\r\n    const documentsKey = 'global.documents';\r\n    this.translateService.get([mainDataKey, materialsKey, documentsKey]).subscribe((results: string[]) => {\r\n      const mainDataLabel = !!results ? results[mainDataKey] : 'Main Information';\r\n      const materialsLabel = !!results ? results[materialsKey] : 'Materials';\r\n      const documentsLabel = !!results ? results[documentsKey] : 'Documents';\r\n\r\n      this.toc = [\r\n        {\r\n          id: 'mainInformationAnchor',\r\n          anchor: this.mainInformationEltRef,\r\n          label: mainDataLabel\r\n        },\r\n        {\r\n          id: 'materialsAnchor',\r\n          anchor: this.materialsEltRef,\r\n          label: materialsLabel\r\n        },\r\n        {\r\n          id: 'documentsAnchor',\r\n          anchor: this.documentsEltRef,\r\n          label: documentsLabel\r\n        }\r\n      ];\r\n\r\n      setTimeout(() => {\r\n        super.selectPageTocEntry(this.component.MAIN_ANCHOR_ID);\r\n      }, this.SET_TIME_OUT);\r\n    });\r\n  }\r\n\r\n  /**************\r\n   * Page loading\r\n   *************/\r\n\r\n  private loadSalesDoc(): void {\r\n    this.isMaterialsTableLoading = true;\r\n    this.isLoadingDocumentTable = true;\r\n    if (this.pageId !== null && this.pageId !== undefined) {\r\n      this.salesDocumentFormService.getById(this.pageId).subscribe((result) => {\r\n        // Main Information\r\n        this.mainData = result.bidtSalesRequestDTO || {};\r\n        // this.componentData.objectId = this.serializationService.serialize(this.mainData);\r\n        this.setPageContext();\r\n\r\n        // Materials Table\r\n        this.materialsTable = result.materialAndServicesOutputList || [];\r\n        this.databaseMaterials = _cloneDeep(this.materialsTable);\r\n\r\n        // Documents Table\r\n        ListUtils.orEmpty(result.documentTablist)\r\n          .filter((document) => !!document.documentName)\r\n          .forEach((doc) => {\r\n            this.documents.push(doc.bidtDocumentDTO);\r\n          });\r\n        this.documentTable = this.documents.map((document) => this.createDocumentRow(document));\r\n      });\r\n      this.isMaterialsTableLoading = false;\r\n      this.isLoadingDocumentTable = false;\r\n    }\r\n  }\r\n\r\n  private setPageContext(): void {\r\n    let context = 'tab.create';\r\n    if (!!this.mainData.srCode) {\r\n      context = this.mainData.srCode;\r\n      context = !!this.mainData.srName ? `${context} | ${this.mainData.srName}` : context;\r\n      context = !!this.mainData.bidoCustomerCustomerCode\r\n        ? `${context} | ${this.mainData.bidoCustomerCustomerCode}`\r\n        : context;\r\n    }\r\n\r\n    this.pageSubtitle = context;\r\n\r\n    // if (!this.isCreateOpenMode) {\r\n    //   this.updateOpenMode(ComponentOpenMode.Write);\r\n    // }\r\n\r\n    this.displayComponentContext(context, this.isCreateOpenMode);\r\n  }\r\n\r\n  /***********\r\n   * Dropdowns\r\n   **********/\r\n\r\n  private loadDropdowns(): void {\r\n    this.loadSalesDocumentStatus();\r\n    this.loadSalesDocumentCustomers();\r\n  }\r\n\r\n  private loadSalesDocumentStatus(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.PURCHASE_STATUS_MAP).subscribe((results) => {\r\n      this.salesDocumentStatus = results || [];\r\n    });\r\n  }\r\n\r\n  private loadSalesDocumentCustomers(): void {\r\n    this.salesDocumentSearchService.fetchSupplierDropDownData().subscribe((result) => {\r\n      this.salesDocumentCustomers = result;\r\n    });\r\n  }\r\n\r\n  /**************\r\n   * Page actions\r\n   *************/\r\n\r\n  public reloadSalesDoc(): void {\r\n    this.initAfterSave();\r\n    this.loadSalesDoc();\r\n  }\r\n\r\n  public editSalesDoc(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public cancelSalesDoc(): void {\r\n    this.reloadSalesDoc();\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n  }\r\n\r\n  public saveSalesDoc(): void {\r\n    if (!this.mainData.srCreationDate) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    } else {\r\n      const bidtStockMvtDTOList: BidtStockMvtDTO[] = [];\r\n      this.materialsTable.forEach((material) => {\r\n        const updating = this.databaseMaterials.some(\r\n          (dm) =>\r\n            !!material.bidtStockMvtDTO && !!dm.bidtStockMvtDTO && dm.bidtStockMvtDTO.id === material.bidtStockMvtDTO.id\r\n        );\r\n        if (!updating && !!material.bidtStockMvtDTO) {\r\n          material.bidtStockMvtDTO.id = undefined;\r\n        }\r\n        if (!!material.bidtStockMvtDTO) {\r\n          bidtStockMvtDTOList.push(material.bidtStockMvtDTO);\r\n        }\r\n      });\r\n      const bidtDocumentList: BidtDocumentDTO[] = [];\r\n      this.documentTable.forEach((doc) => {\r\n        if (!!doc._obj.documentPublicationDate) {\r\n          doc._obj.documentPublicationDate = new Date(doc._obj.documentPublicationDate);\r\n        }\r\n        doc._obj.bidtSalesRequestId = this.pageId;\r\n        bidtDocumentList.push(doc._obj);\r\n      });\r\n      const input: SaveSalesDocumentDTO = {\r\n        bidtSalesRequestDTO: this.mainData,\r\n        bidtStockMvtDTOList,\r\n        bidtDocumentList,\r\n        documentDataRemoveList: this.documentDataRemoveList\r\n      };\r\n      this.save(input);\r\n    }\r\n  }\r\n\r\n  private save(input: SaveSalesDocumentDTO): void {\r\n    this.showSaveSpinner = true;\r\n    this.salesDocumentFormService.saveSalesDocument(input).subscribe(\r\n      (result) => {\r\n        this.pageId = result;\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveSalesDocument'));\r\n        this.updateOpenMode(ComponentOpenMode.Write);\r\n        this.componentData.openMode = 1;\r\n        this.initAfterSave();\r\n        this.loadSalesDoc();\r\n        this.showSaveSpinner = false;\r\n      },\r\n      (error) => {\r\n        this.showSaveSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  /*****************\r\n   * Materials Table\r\n   ****************/\r\n\r\n  public deleteMaterials(): void {\r\n    this.selectedMaterials.forEach((material) => {\r\n      this.materialsTable = this.materialsTable.filter(\r\n        (m) => !!m.bidtStockMvtDTO && !!material.bidtStockMvtDTO && m.bidtStockMvtDTO.id !== material.bidtStockMvtDTO.id\r\n      );\r\n    });\r\n    this.selectedMaterials = [];\r\n  }\r\n\r\n  public createMaterial(): void {\r\n    this.showDialogMaterialAndServices = true;\r\n    this.currentMaterialObject = _cloneDeep(this.selectedMaterials[0]);\r\n    this.isReadOnlyPopup = false;\r\n    this.isNewMaterialObject = true;\r\n    this.selectedMaterialIndex = undefined;\r\n  }\r\n\r\n  public editMaterial(): void {\r\n    this.showDialogMaterialAndServices = true;\r\n    this.currentMaterialObject = _cloneDeep(this.selectedMaterials[0]);\r\n    this.isReadOnlyPopup = false;\r\n    this.isNewMaterialObject = false;\r\n    this.selectedMaterialIndex = this.materialsTable.findIndex(\r\n      (material) =>\r\n        !!material.bidtStockMvtDTO &&\r\n        !!this.selectedMaterials[0].bidtStockMvtDTO &&\r\n        material.bidtStockMvtDTO.id === this.selectedMaterials[0].bidtStockMvtDTO.id\r\n    );\r\n    this.selectedMaterials = [];\r\n  }\r\n\r\n  public openMaterial(): void {\r\n    this.showDialogMaterialAndServices = true;\r\n    this.currentMaterialObject = _cloneDeep(this.selectedMaterials[0]);\r\n    this.isReadOnlyPopup = true;\r\n    this.isNewMaterialObject = false;\r\n    this.selectedMaterials = [];\r\n  }\r\n\r\n  public goToStockMovements(): void {\r\n    // todo\r\n  }\r\n\r\n  public goToGoodsMovements(): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_GOODS_MOVEMENT_FORM,\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n    const input: GoodsMovementInput = {\r\n      purchaseRequestId: this.mainData.id\r\n    };\r\n    data.objectId = this.serializationService.serialize(input);\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public addNewMaterial(event: MaterialAndServicesOutput): void {\r\n    if (!!event.bidtStockMvtDTO) {\r\n      event.bidtStockMvtDTO.bidtSalesRequestId = this.pageId;\r\n    }\r\n    this.materialsTable.push(event);\r\n  }\r\n\r\n  public updateMaterial(event: MaterialAndServicesOutput): void {\r\n    if (this.selectedMaterialIndex !== null && this.selectedMaterialIndex !== undefined) {\r\n      this.materialsTable[this.selectedMaterialIndex] = event;\r\n    }\r\n  }\r\n\r\n  public goToMaterial(row: MaterialAndServicesOutput): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_MATERIAL_FORM,\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n    if (!!row.bidtStockMvtDTO && !!row.bidtStockMvtDTO.birePnPnCode) {\r\n      const input: BirePnDTOId = {\r\n        pnCode: row.bidtStockMvtDTO.birePnPnCode\r\n      };\r\n      this.salesDocumentFormService.findBirePn(input).subscribe((result) => {\r\n        if (!!result) {\r\n          const materialFormId: BirePnDTO = {\r\n            pnCode: result.pnCode,\r\n            pnType: result.pnType\r\n          };\r\n          data.objectId = this.serializationService.serialize(materialFormId);\r\n        }\r\n        const labelKey = 'transaction.' + data.componentId;\r\n\r\n        this.tabService.open(this.tabService.create(data, labelKey, true));\r\n      });\r\n    }\r\n  }\r\n\r\n  /*****************\r\n   * Documents Table\r\n   ****************/\r\n\r\n  public deleteDocuments(): void {\r\n    const partialMessageKey =\r\n      this.selectedDocuments.length > 1 ? 'confirmDeleteSelectedDocuments' : 'confirmDeleteSelectedDocument';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.selectedDocuments.forEach((selectedDocumentRow) => {\r\n          const documentsAddedWithoutSelection = this.documentsAdded.filter(\r\n            (document) => !this.areSameDocument(document, selectedDocumentRow._obj)\r\n          );\r\n          // list of added objects contains the selection\r\n          if (this.documentsAdded.length !== documentsAddedWithoutSelection.length) {\r\n            // Remove selection from added objects\r\n            this.documentsAdded = documentsAddedWithoutSelection;\r\n          } else {\r\n            const documentsUpdatedWithoutSelection = this.documentsUpdated.filter(\r\n              (document) => !this.areSameDocument(document, selectedDocumentRow._obj)\r\n            );\r\n            // list of updated objects contains the selection\r\n            if (this.documentsUpdated.length !== documentsUpdatedWithoutSelection.length) {\r\n              // Remove selection from added objects\r\n              this.documentsUpdated = documentsUpdatedWithoutSelection;\r\n            }\r\n\r\n            this.documentsRemoved = [...this.documentsRemoved, selectedDocumentRow._obj];\r\n          }\r\n        });\r\n\r\n        this.documentsRemoved.forEach((doc) => {\r\n          if (doc.id !== null && doc.id !== undefined) {\r\n            this.documentDataRemoveList.push(doc.id);\r\n          }\r\n        });\r\n\r\n        this.documents = this.documents.filter((document) => {\r\n          return !this.selectedDocuments.some((selectedDocumentRow) =>\r\n            this.areSameDocument(document, selectedDocumentRow._obj)\r\n          );\r\n        });\r\n\r\n        this.documentTable = this.documentTable.filter((documentRow) => {\r\n          return !this.selectedDocuments.some((selectedDocumentRow) => {\r\n            return this.areSameDocument(documentRow._obj, selectedDocumentRow._obj);\r\n          });\r\n        });\r\n\r\n        this.selectedDocuments = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public editDocument(): void {\r\n    if (this.selectedDocuments.length === 1) {\r\n      this.currentDocumentIndex = this.documents.findIndex((document) =>\r\n        this.areSameDocument(document, this.selectedDocuments[0]._obj)\r\n      );\r\n\r\n      this.currentDocument = { ...this.selectedDocuments[0]._obj };\r\n      this.documentDialogOpenMode = ComponentOpenMode.Write;\r\n      this.showDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public openDocument(): void {\r\n    if (this.selectedDocuments.length === 1) {\r\n      this.currentDocument = this.selectedDocuments[0]._obj;\r\n      this.currentDocumentIndex = -1;\r\n      this.documentDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (!!event.files) {\r\n      const file: File = event.files[0];\r\n\r\n      // Check if the file already exists\r\n      const fileExists = this.documents.some((document) => document.documentName === file.name);\r\n      if (fileExists) {\r\n        this.messageService.showWarningMessage('global.warningOnFileExists');\r\n      } else {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          if (!!fileContent) {\r\n            const document: BidtDocumentDTO = {\r\n              documentContent: fileContent,\r\n              documentName: file.name,\r\n              documentPublicationDate: new Date(),\r\n              bidtSalesRequestId: this.pageId\r\n            };\r\n\r\n            document.documentType = this.formatDocExtension(document);\r\n\r\n            this.documents = [...this.documents, document];\r\n            this.documentsAdded = [...this.documentsAdded, document];\r\n            this.documentTable = [...this.documentTable, this.createDocumentRow(document)];\r\n          }\r\n        });\r\n      }\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public onAddDocument(document: BidtDocumentDTO): void {\r\n    if (!!document) {\r\n      if (this.currentDocumentIndex !== -1) {\r\n        this.documents[this.currentDocumentIndex] = document;\r\n        this.documentTable[this.currentDocumentIndex] = this.createDocumentRow(document);\r\n\r\n        const updatedDocumentIndex = this.documentsUpdated.findIndex((documentUpdated) =>\r\n          this.areSameDocument(documentUpdated, document)\r\n        );\r\n        if (updatedDocumentIndex !== -1) {\r\n          this.documentsUpdated[updatedDocumentIndex] = document;\r\n        } else {\r\n          this.documentsUpdated = [...this.documentsUpdated, document];\r\n        }\r\n      } else {\r\n        const isAdded = this.documentsAdded.some((documentAdded) => this.areSameDocument(documentAdded, document));\r\n        if (isAdded) {\r\n          this.messageService.showWarningMessage('global.warningOnDocumentExists');\r\n        } else {\r\n          this.documents = [...this.documents, document];\r\n          this.documentsAdded = [...this.documentsAdded, document];\r\n          this.documentTable = [...this.documentTable, this.createDocumentRow(document)];\r\n        }\r\n      }\r\n    }\r\n\r\n    this.selectedDocuments = [];\r\n  }\r\n\r\n  public downloadFiles(): void {\r\n    this.selectedDocuments.forEach((documentRow) => {\r\n      FileUtils.downloadFile(documentRow._obj.documentContent, documentRow._obj.documentName);\r\n    });\r\n  }\r\n\r\n  /**********************************\r\n   * Documents Table - helper methods\r\n   *********************************/\r\n\r\n  private createDocumentRow(document: BidtDocumentDTO): DocumentRow {\r\n    const selectedDocumentType = this.documentTypes.find(\r\n      (documentType) => !!document.documentType && (documentType.value as string) === document.documentType\r\n    );\r\n\r\n    const documentRow: DocumentRow = {\r\n      docAttachmentDate: !!document.documentPublicationDate\r\n        ? this.dateService.dateToString(new Date(document.documentPublicationDate))\r\n        : '',\r\n      docExtension: this.formatDocExtension(document),\r\n      docName: document.documentName as string,\r\n      docSize: this.formatDocSize(document),\r\n      docType: !!selectedDocumentType ? StringUtils.orEmpty(selectedDocumentType.label) : '',\r\n      id: document.id,\r\n      _obj: document\r\n    };\r\n\r\n    return documentRow;\r\n  }\r\n\r\n  private formatDocExtension(document: BidtDocumentDTO): string {\r\n    return FileUtils.getExtension(document.documentName).toUpperCase();\r\n  }\r\n\r\n  private formatDocSize(document: BidtDocumentDTO): string {\r\n    return !!document.documentContent ? FileUtils.getFormattedSize(document.documentContent.length) : '';\r\n  }\r\n\r\n  private areSameDocument(obj1: BidtDocumentDTO | undefined, obj2: BidtDocumentDTO | undefined): boolean {\r\n    if (!obj1 || !obj2) {\r\n      return false;\r\n    } else {\r\n      return !!obj1.documentName && !!obj2.documentName && obj1.documentName === obj2.documentName;\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtPurchaseRequestApi } from '../../../../shared/api/bidt-purchase-request.api';\r\nimport { BidtSalesRequestApi } from '../../../../shared/api/bidt-sales-request.api';\r\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { SaveSalesDocumentDTO } from '../../../../shared/types/api-input-types/bidt-sales-request/save-sales-document-dto.interface';\r\nimport { SalesDocumentListOutput } from '../../../../shared/types/api-output-types/bidt-sales-request/sales-document-list-output.interface';\r\nimport { BirePnDTOId } from '../../../../shared/types/api-types/bire-pn-dto-id.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class SalesDocumentFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtSalesRequestApi: BidtSalesRequestApi,\r\n    private readonly productStructureManagement: ProductStructureManagementApi,\r\n    private readonly bidtPurchaseRequest: BidtPurchaseRequestApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getById(id: number): Observable<SalesDocumentListOutput> {\r\n    return super.post<number, SalesDocumentListOutput>(this.bidtSalesRequestApi.getById, id);\r\n  }\r\n\r\n  public displayWarehouse(pnCode: string): Observable<LabelValue<string>[]> {\r\n    return super.post<string, LabelValue<string>[]>(this.bidtPurchaseRequest.displayWarehouse, pnCode);\r\n  }\r\n\r\n  public findBirePn(id: BirePnDTOId): Observable<BirePnDTO> {\r\n    return super.post<BirePnDTOId, BirePnDTO>(this.productStructureManagement.findBirePn, id);\r\n  }\r\n\r\n  public saveSalesDocument(input: SaveSalesDocumentDTO): Observable<number> {\r\n    return super.post<SaveSalesDocumentDTO, number>(this.bidtSalesRequestApi.saveSalesDocument, input);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DialogSearchMaterialModule } from '../../../shared/components/dialog-search-material/dialog-search-material.module';\r\nimport { DialogSearchPurchaseRequestModule } from '../../../shared/components/dialog-search-purchase-request/dialog-search-purchase-request.module';\r\nimport { ManageSearchCriteriaModule } from '../../../shared/components/manage-search-criteria/manage-search-criteria.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { DialogBusinessPartnerBidoDocumentComponent } from './dialog-business-partner-bido-document/dialog-business-partner-bido-document.component';\r\nimport { DialogMaterialAndServicesComponent } from './dialog-material-and-services/dialog-material-and-services.component';\r\nimport { SalesDocumentFormComponent } from './form/sales-document-form.component';\r\nimport { SalesDocumentFormService } from './form/sales-document-form.service';\r\nimport { SalesDocumentSearchComponent } from './search/sales-document-search.component';\r\nimport { SalesDocumentSearchService } from './search/sales-document-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DropdownModule,\r\n  FileUploadModule,\r\n  InputTextareaModule,\r\n  TableModule,\r\n  TooltipModule,\r\n  KeyFilterModule,\r\n  MessageModule,\r\n  RadioButtonModule,\r\n  SplitButtonModule,\r\n  TriStateCheckboxModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [\r\n  DialogSearchMaterialModule,\r\n  DialogSearchPurchaseRequestModule,\r\n  ModalModule,\r\n  ComponentSidebarModule\r\n];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogBusinessPartnerBidoDocumentComponent, DialogMaterialAndServicesComponent];\r\n\r\nconst DYNAMIC_COMPONENTS = [SalesDocumentFormComponent, SalesDocumentSearchComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [SalesDocumentFormService, SalesDocumentSearchService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ManageSearchCriteriaModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class SalesDocumentModule {}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        {{ \\\"page.searchPage\\\" | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewSalesDocument()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row search-criteria-header\\\">\\r\\n                  <aw-manage-search-criteria\\r\\n                    [componentId]=\\\"SEARCH_CRITERIA_ID\\\"\\r\\n                    (onSelected)=\\\"loadSearchCriteria($event)\\\"\\r\\n                    (onSavedAsked)=\\\"saveSearchCriteriaAsked()\\\"\\r\\n                    [objectFromPage]=\\\"criteriaToSave\\\"\\r\\n                    [canChange]=\\\"!hasBeenCalculated\\\"\\r\\n                  ></aw-manage-search-criteria>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".srCode\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"bidtSalesDTO.srCode\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".srStatus\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"salesDocumentStatus\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        [(ngModel)]=\\\"bidtSalesDTO.srStatus\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".srName\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"bidtSalesDTO.srName\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{\\r\\n                      componentData.componentId + \\\".bidoCustomerCustomerCode\\\" | translate\\r\\n                    }}</label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        [options]=\\\"salesDocumentCustomers\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.searchSupplier\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".material\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n                      <div class=\\\"form-control-data\\\" (click)=\\\"searchMaterialCode()\\\">\\r\\n                        {{ searchObject.pn }}\\r\\n                      </div>\\r\\n\\r\\n                      <div *ngIf=\\\"searchObject.pn\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                        <i\\r\\n                          class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                          aria-hidden=\\\"true\\\"\\r\\n                          (click)=\\\"searchObject.pn = undefined\\\"\\r\\n                        ></i>\\r\\n                      </div>\\r\\n                      <div class=\\\"btn-search-wrapper\\\">\\r\\n                        <i\\r\\n                          class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                          aria-hidden=\\\"true\\\"\\r\\n                          (click)=\\\"searchMaterialCode()\\\"\\r\\n                        ></i>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".srDescription\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"bidtSalesDTO.srDescription\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group flex--2\\\"></div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"advanced-criteria\\\" [ngClass]=\\\"{ 'display--none': !showAdvancedCriteria }\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".creationDate\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [(ngModel)]=\\\"bidtSalesDTO.srCreationDate\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".deliveryDate\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [(ngModel)]=\\\"bidtSalesDTO.srDeliveryDate\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".sNo\\\" | translate }}</label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"searchObject.sn\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".batchNo\\\" | translate }}</label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" maxlength=\\\"20\\\" [(ngModel)]=\\\"searchObject.batchNumber\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <button mat-button (click)=\\\"showAdvancedCriteria = !showAdvancedCriteria\\\">\\r\\n                    <ng-container *ngIf=\\\"showAdvancedCriteria\\\">\\r\\n                      <mat-icon>remove</mat-icon>\\r\\n                      {{ \\\"global.collapseCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"!showAdvancedCriteria\\\">\\r\\n                      <mat-icon>add</mat-icon>\\r\\n                      {{ \\\"global.expandCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                  </button>\\r\\n\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"search()\\\"\\r\\n                      appKeyPress\\r\\n                      color=\\\"primary\\\"\\r\\n                      [keyCode]=\\\"'Enter'\\\"\\r\\n                      (keyPress)=\\\"search()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.toSearch\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }}\\r\\n                  ({{ results ? results.length : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #ptableResults\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"resultTableCols\\\"\\r\\n                [value]=\\\"results\\\"\\r\\n                [(selection)]=\\\"selectedResults\\\"\\r\\n                dataKey=\\\"srCode\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedResults.length > 0 }\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableResultsGlobalFilter\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"ptableResults.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        *ngIf=\\\"results && results.length > 0 && selectedResults.length === 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"exportTable()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.export\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"hasManageAccessRight && selectedResults.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteResults()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedResults.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openSelectedResults()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      <a *ngSwitchCase=\\\"'srCode'\\\" (click)=\\\"openSalesDocument(rowData, componentOpenMode.Read)\\\">\\r\\n                        {{ rowData[col.field] }}</a\\r\\n                      >\\r\\n\\r\\n                      <span *ngSwitchCase=\\\"'creationDate'\\\">\\r\\n                        {{ dateService.timestampToString(rowData.srCreationDate) }}\\r\\n                      </span>\\r\\n\\r\\n                      <span *ngSwitchCase=\\\"'deliveryDate'\\\">\\r\\n                        {{ dateService.timestampToString(rowData.srDeliveryDate) }}\\r\\n                      </span>\\r\\n\\r\\n                      <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-dialog-search-material\\r\\n  *ngIf=\\\"showQuickSearchMaterialPopup\\\"\\r\\n  [(display)]=\\\"showQuickSearchMaterialPopup\\\"\\r\\n  [material-code]=\\\"searchObject.productCode\\\"\\r\\n  (onSelected)=\\\"setSelectedMaterial($event)\\\"\\r\\n></aw-dialog-search-material>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbG9naXN0aWNzL3NhbGVzLWRvY3VtZW50L3NlYXJjaC9zYWxlcy1kb2N1bWVudC1zZWFyY2guY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { ISearchCriteria } from '../../../../shared/components/manage-search-criteria/search-criteria.interface';\r\nimport { AppConstants } from '../../../../shared/constants/app-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../../shared/services/date.service';\r\nimport { ExportService } from '../../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { SalesDocumentListInput } from '../../../../shared/types/api-input-types/bidt-sales-request/sales-document-list-input.interface';\r\nimport { SalesDocumentListOutput } from '../../../../shared/types/api-output-types/bidt-sales-request/sales-document-list-output.interface';\r\nimport { BidtSalesRequestDTO } from '../../../../shared/types/api-types/bidt-sales-request-dto.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { LabelValueUtils } from '../../../../shared/utils/label-value-utils';\r\n\r\nimport { SalesDocumentSearchService } from './sales-document-search.service';\r\n\r\ninterface SalesDocumentExport {\r\n  srCode?: string;\r\n  srName?: string;\r\n  srDescription?: string;\r\n  bidoCustomerCustomerCode?: string;\r\n  srStatus?: string;\r\n  srCreationDate?: string;\r\n  srDeliveryDate?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-sales-document-search',\r\n  templateUrl: './sales-document-search.component.html',\r\n  styleUrls: ['./sales-document-search.component.scss']\r\n})\r\nexport class SalesDocumentSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public componentOpenMode: typeof ComponentOpenMode;\r\n\r\n  // search objects\r\n  public bidtSalesDTO: BidtSalesRequestDTO;\r\n  public searchObject: SalesDocumentListInput;\r\n\r\n  // dropdowns\r\n  public salesDocumentStatus: LabelValue<string>[];\r\n  public salesDocumentCustomers: LabelValue<string>[];\r\n\r\n  // ovs popup\r\n  public showQuickSearchMaterialPopup: boolean;\r\n\r\n  // results\r\n  public isLoading: boolean;\r\n  public showAdvancedCriteria: boolean;\r\n  public resultTable: SalesDocumentListOutput[];\r\n  public results: BidtSalesRequestDTO[];\r\n  public resultTableCols: TableColumn[];\r\n  public selectedResults: BidtSalesRequestDTO[];\r\n\r\n  // save search criteria\r\n  public criteriaToSave: SalesDocumentListInput;\r\n  public hasBeenCalculated: boolean;\r\n  public criteriaName: string | undefined;\r\n  public readonly SEARCH_CRITERIA_ID: string = AppConstants.SALES_DOCUMENT_SEARCH_CRITERIA_ID;\r\n\r\n  // data for export\r\n  private exportData: SalesDocumentExport[];\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public sessionService: SessionService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly salesDocumentSearchService: SalesDocumentSearchService,\r\n    private readonly dateService: DateService,\r\n    private readonly exportService: ExportService,\r\n    private readonly translateService: TranslateService,\r\n    private readonly confirmationService: ConfirmationService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.componentOpenMode = ComponentOpenMode;\r\n    this.init();\r\n    this.setTableCols();\r\n\r\n    this.loadDropdowns();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_SALES_DOCUMENT_SEARCH;\r\n  }\r\n\r\n  private init(): void {\r\n    // search objects\r\n    this.bidtSalesDTO = {};\r\n    this.searchObject = {};\r\n\r\n    // dropdowns\r\n    this.salesDocumentStatus = [];\r\n    this.salesDocumentCustomers = [];\r\n\r\n    // ovs popup\r\n    this.showQuickSearchMaterialPopup = false;\r\n\r\n    // results\r\n    this.isLoading = false;\r\n    this.showAdvancedCriteria = false;\r\n    this.resultTableCols = [];\r\n    this.resultTableInit();\r\n  }\r\n\r\n  private resultTableInit(): void {\r\n    this.resultTable = [];\r\n    this.results = [];\r\n    this.selectedResults = [];\r\n\r\n    // data for export\r\n    this.exportData = [];\r\n  }\r\n\r\n  private setTableCols(): void {\r\n    this.resultTableCols = [\r\n      { field: 'srCode', alignment: 'left' },\r\n      { field: 'srName', alignment: 'left' },\r\n      { field: 'srDescription', alignment: 'left' },\r\n      { field: 'bidoCustomerCustomerCode', alignment: 'left' },\r\n      { field: 'srStatus', alignment: 'left' },\r\n      { field: 'creationDate', alignment: 'left' },\r\n      { field: 'deliveryDate', alignment: 'left' }\r\n    ];\r\n  }\r\n\r\n  /***********\r\n   * Dropdowns\r\n   **********/\r\n\r\n  private loadDropdowns(): void {\r\n    this.loadSalesDocumentStatus();\r\n    this.loadSalesDocumentCustomers();\r\n  }\r\n\r\n  private loadSalesDocumentStatus(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.PURCHASE_STATUS_MAP).subscribe((results) => {\r\n      this.salesDocumentStatus = results || [];\r\n    });\r\n  }\r\n\r\n  private loadSalesDocumentCustomers(): void {\r\n    this.salesDocumentSearchService.fetchSupplierDropDownData().subscribe((result) => {\r\n      this.salesDocumentCustomers = result;\r\n    });\r\n  }\r\n\r\n  /***********\r\n   * Ovs popup\r\n   **********/\r\n\r\n  public searchMaterialCode() {\r\n    this.showQuickSearchMaterialPopup = true;\r\n  }\r\n\r\n  public setSelectedMaterial(selectedObject: BirePnDTO) {\r\n    if (selectedObject) {\r\n      this.searchObject.pn = selectedObject.pnCode;\r\n    }\r\n    this.showQuickSearchMaterialPopup = false;\r\n  }\r\n\r\n  /********************\r\n   * Search by criteria\r\n   *******************/\r\n\r\n  public search(): void {\r\n    this.resultTableInit();\r\n\r\n    if (this.searchObject.sn === '') {\r\n      this.searchObject.sn = undefined;\r\n    }\r\n    if (this.searchObject.batchNumber === '') {\r\n      this.searchObject.batchNumber = undefined;\r\n    }\r\n\r\n    const input: SalesDocumentListInput = this.searchObject;\r\n    input.bidtSalesDTO = this.bidtSalesDTO;\r\n\r\n    this.isLoading = true;\r\n\r\n    this.salesDocumentSearchService.findByCriteria(input).subscribe((result) => {\r\n      this.isLoading = false;\r\n      result.forEach((res) => {\r\n        if (!!res.bidtSalesRequestDTO && res.bidtSalesRequestDTO.srCreationDate) {\r\n          res.bidtSalesRequestDTO.creationDate = this.dateService.timestampToString(\r\n            res.bidtSalesRequestDTO.srCreationDate\r\n          );\r\n        }\r\n        if (!!res.bidtSalesRequestDTO && res.bidtSalesRequestDTO.srDeliveryDate) {\r\n          res.bidtSalesRequestDTO.creationDate = this.dateService.timestampToString(\r\n            res.bidtSalesRequestDTO.srDeliveryDate\r\n          );\r\n        }\r\n        if (!!res.bidtSalesRequestDTO && res.bidtSalesRequestDTO.srStatus) {\r\n          LabelValueUtils.stringValueToLabel(res.bidtSalesRequestDTO, 'srStatus', this.salesDocumentStatus);\r\n        }\r\n        if (!!res.bidtSalesRequestDTO) {\r\n          this.results.push(res.bidtSalesRequestDTO);\r\n        }\r\n      });\r\n\r\n      this.results.forEach((res) => {\r\n        const data: SalesDocumentExport = {\r\n          srCode: res.srCode,\r\n          srName: res.srName,\r\n          srDescription: res.srDescription,\r\n          bidoCustomerCustomerCode: res.bidoCustomerCustomerCode,\r\n          srStatus: res.srStatus,\r\n          srCreationDate: res.creationDate,\r\n          srDeliveryDate: res.deliveryDate\r\n        };\r\n        this.exportData.push(data);\r\n      });\r\n\r\n      this.resultTable = result;\r\n    });\r\n  }\r\n\r\n  /**************************\r\n   * GOTO Sales Document Form\r\n   *************************/\r\n\r\n  public openNewSalesDocument(): void {\r\n    this.openSalesDocument(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  public openSalesDocument(object: BidtSalesRequestDTO | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_SALES_DOCUMENT_FORM,\r\n      openMode\r\n    };\r\n    if (!!object) {\r\n      data.objectId = this.serializationService.serialize(object);\r\n    }\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  /**********************\r\n   * Save search criteria\r\n   *********************/\r\n\r\n  public loadSearchCriteria(event: ISearchCriteria): void {\r\n    const criteria: SalesDocumentListInput | undefined = event.criteria;\r\n    if (!criteria) {\r\n      this.resetSearchCriteria();\r\n\r\n      return;\r\n    }\r\n    // do not load criteria first time if we come from stock alert page\r\n    if (!this.componentData.objectId) {\r\n      this.criteriaName = event.name;\r\n      this.searchObject = criteria || {};\r\n      this.bidtSalesDTO = criteria.bidtSalesDTO || {};\r\n    } else {\r\n      this.componentData.objectId = undefined;\r\n    }\r\n    this.search();\r\n  }\r\n\r\n  public saveSearchCriteriaAsked(): void {\r\n    this.searchObject.bidtSalesDTO = this.bidtSalesDTO;\r\n    const criteriaToSave: SalesDocumentListInput = this.searchObject;\r\n    this.criteriaToSave = criteriaToSave;\r\n  }\r\n\r\n  private resetSearchCriteria(): void {\r\n    this.bidtSalesDTO = {};\r\n    this.searchObject = {\r\n      bidtSalesDTO: this.bidtSalesDTO\r\n    };\r\n    this.criteriaName = undefined;\r\n  }\r\n\r\n  /**********************\r\n   * Result table actions\r\n   *********************/\r\n\r\n  public openSelectedResults(): void {\r\n    this.selectedResults.forEach((res) => {\r\n      if (!!res) {\r\n        this.openSalesDocument(res, ComponentOpenMode.Read);\r\n      }\r\n    });\r\n  }\r\n\r\n  public exportTable(): void {\r\n    const name = `${this.getComponentName()}.salesDocListExport`;\r\n    this.translateService.get(name).subscribe((res) => {\r\n      this.exportService.toExcel(this.exportData, res, this.componentData.componentId);\r\n    });\r\n  }\r\n\r\n  public deleteResults(): void {\r\n    const confirmMessageKey = this.selectedResults.length > 1 ? 'confirmDeleteSelectedSDs' : 'confirmDeleteSelectedSD';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(confirmMessageKey),\r\n      accept: () => {\r\n        const input: number[] = [];\r\n        this.selectedResults.forEach((res) => {\r\n          if (!!res.id) {\r\n            input.push(res.id);\r\n          }\r\n        });\r\n        this.salesDocumentSearchService.deleteSalesDoc(input).subscribe(() => {\r\n          this.search();\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteSD'));\r\n        });\r\n\r\n        this.selectedResults = [];\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtPurchaseRequestApi } from '../../../../shared/api/bidt-purchase-request.api';\r\nimport { BidtSalesRequestApi } from '../../../../shared/api/bidt-sales-request.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { SalesDocumentListInput } from '../../../../shared/types/api-input-types/bidt-sales-request/sales-document-list-input.interface';\r\nimport { SalesDocumentListOutput } from '../../../../shared/types/api-output-types/bidt-sales-request/sales-document-list-output.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class SalesDocumentSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtPurchaseRequest: BidtPurchaseRequestApi,\r\n    private readonly bidtSalesRequest: BidtSalesRequestApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  // BidtPurchaseRequest\r\n  public fetchSupplierDropDownData(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.bidtPurchaseRequest.fetchSupplierDropDownData);\r\n  }\r\n\r\n  // BidtSalesRequest\r\n  public findByCriteria(input: SalesDocumentListInput): Observable<SalesDocumentListOutput[]> {\r\n    return super.post<SalesDocumentListInput, SalesDocumentListOutput[]>(\r\n      this.bidtSalesRequest.findByCriteria,\r\n      input\r\n    );\r\n  }\r\n\r\n  public deleteSalesDoc(input: number[]): Observable<void> {\r\n    return super.post<number[], void>(this.bidtSalesRequest.delete, input);\r\n  }\r\n}\r\n","import * as FileSaver from 'file-saver';\r\n\r\nimport { NumberUtils } from './number-utils';\r\n\r\nexport class FileUtils {\r\n  public static readonly KIBIOCTET: number = 1024;\r\n  public static readonly KILOOCTET: number = 1000;\r\n\r\n  public static downloadFile(file: Uint8Array | undefined, fileName: string | undefined): void {\r\n    if (!!file && !!fileName) {\r\n      const byteCharacters = atob(file.toString());\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n\r\n      FileSaver.saveAs(new Blob([new Uint8Array(byteNumbers)]), fileName);\r\n    }\r\n  }\r\n\r\n  public static getExtension(fileName: string | undefined): string {\r\n    return !!fileName && fileName.includes('.') ? fileName.substring(fileName.lastIndexOf('.') + 1) : '';\r\n  }\r\n\r\n  public static getFileContentAsBase64(file: File | undefined, callback: (fileContent: Uint8Array) => void): void {\r\n    if (!!file) {\r\n      const reader: FileReader = new FileReader();\r\n      reader.onloadend = () => {\r\n        let fileContent: any = reader.result; // tslint:disable-line:no-any\r\n        fileContent = fileContent.substring((fileContent.indexOf(',') as number) + 1); // Remove data:*/*;base64,\r\n        callback(fileContent);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  public static getFormattedSize(size: number | undefined): string {\r\n    if (!!size) {\r\n      return size / FileUtils.KILOOCTET < FileUtils.KILOOCTET\r\n        ? `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET)} Ko`\r\n        : `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET / FileUtils.KILOOCTET)} Mo`;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n","import { LabelValue } from '../../shared/types/label-value.interface';\r\n\r\nexport class LabelValueUtils {\r\n  /*\r\n   * DEPRECATED: do not use; create an interface instead\r\n   */\r\n  public static stringValueToLabel<T>(object: T, propertyName: string, propertyList: LabelValue<string>[]): boolean {\r\n    if (!!object[propertyName]) {\r\n      const labelValue = propertyList.find((property) => property.value === object[propertyName]);\r\n      if (!!labelValue) {\r\n        object[propertyName] = labelValue.label;\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /*\r\n   * DEPRECATED: do not use; create an interface instead\r\n   */\r\n  public static labelToStringValue<T>(object: T, propertyName: string, propertyList: LabelValue<string>[]): boolean {\r\n    if (!!object[propertyName]) {\r\n      const labelValue = propertyList.find((property) => property.label === object[propertyName]);\r\n      if (!!labelValue) {\r\n        object[propertyName] = labelValue.value;\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n"],"sourceRoot":""}