{"version":3,"sources":["webpack:///./node_modules/primeng/accordion.js","webpack:///./node_modules/primeng/dialog.js","webpack:///./node_modules/primeng/keyfilter.js","webpack:///./node_modules/primeng/message.js","webpack:///./node_modules/primeng/organizationchart.js","webpack:///./node_modules/primeng/splitbutton.js","webpack:///./node_modules/primeng/treetable.js","webpack:///./src/app/main/administration/administration.module.ts","webpack:///./src/app/main/administration/background-jobs/background-jobs.component.html","webpack:///./src/app/main/administration/background-jobs/background-jobs.component.ts","webpack:///./src/app/main/administration/background-jobs/background-jobs.service.ts","webpack:///./src/app/main/administration/catalog/catalog.component.html","webpack:///./src/app/main/administration/catalog/catalog.component.ts","webpack:///./src/app/main/administration/catalog/constants/catalog-name-constants.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/e5x-mapping/e5x-mapping.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/e5x-mapping/e5x-mapping.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/e5x-mapping/e5x-mapping.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/e5x-mapping/import-popup/import-popup.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/e5x-mapping/import-popup/import-popup.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-context/event-context-form/event-context-form.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-context/event-context-form/event-context-form.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-context/event-context-form/parameters-popup/parameters-popup.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-context/event-context-form/parameters-popup/parameters-popup.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-context/event-context.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-context/event-context.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-context/event-context.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-symptom/event-symptom-form/event-symptom-form.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-symptom/event-symptom-form/event-symptom-form.component.scss","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-symptom/event-symptom-form/event-symptom-form.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-symptom/event-symptom.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-symptom/event-symptom.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-symptom/event-symptom.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-type/event-type-form-popup/event-type-form-popup.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-type/event-type-form-popup/event-type-form-popup.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-type/event-type.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-type/event-type.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/fleet/event-type/event-type.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/contract/contract.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/contract/contract.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/contract/contract.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/contract/dialog-contract/dialog-contract.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/contract/dialog-contract/dialog-contract.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/public-holiday/dialog-public-holiday/dialog-public-holiday.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/public-holiday/dialog-public-holiday/dialog-public-holiday.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/public-holiday/public-holiday.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/public-holiday/public-holiday.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/public-holiday/public-holiday.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/qualification/qualification-form-popup/qualification-form-popup.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/qualification/qualification-form-popup/qualification-form-popup.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/qualification/qualification.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/qualification/qualification.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/qualification/qualification.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/work-template/work-template-form/dialog-work-template/dialog-work-template.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/work-template/work-template-form/dialog-work-template/dialog-work-template.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/work-template/work-template-form/work-template-form.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/work-template/work-template-form/work-template-form.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/work-template/work-template.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/work-template/work-template.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/human-resource/work-template/work-template.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/folder-type/folder-type.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/folder-type/folder-type.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/folder-type/popup/dialog-folder-type.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/folder-type/popup/dialog-folder-type.component.scss","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/folder-type/popup/dialog-folder-type.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/folder-type/popup/dialog-operation.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/folder-type/popup/dialog-operation.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/folder-type/receipt-type/receipt-type.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/folder-type/shipment-type/shipment-type.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-movement-type/popup-stock-movement-type/dialog-operation-stock-movement.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-movement-type/popup-stock-movement-type/dialog-operation-stock-movement.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-movement-type/popup-stock-movement-type/dialog-stock-movement-type.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-movement-type/popup-stock-movement-type/dialog-stock-movement-type.component.scss","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-movement-type/popup-stock-movement-type/dialog-stock-movement-type.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-movement-type/stock-movement-type.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-movement-type/stock-movement-type.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-movement-type/stock-movement-type.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-type/stock-form/status-form-popup/status-form-popup.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-type/stock-form/status-form-popup/status-form-popup.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-type/stock-form/stock-type-form.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-type/stock-form/stock-type-form.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-type/stock-type.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/stock-type/stock-type.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/storage-bin-type/storage-bin-type-form-popup/storage-bin-type-form-popup.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/storage-bin-type/storage-bin-type-form-popup/storage-bin-type-form-popup.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/storage-bin-type/storage-bin-type.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/storage-bin-type/storage-bin-type.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/storage-bin-type/storage-bin-type.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/storage-condition/storage-condition-form-popup/storage-condition-form-popup.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/storage-condition/storage-condition-form-popup/storage-condition-form-popup.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/storage-condition/storage-condition.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/storage-condition/storage-condition.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/storage-condition/storage-condition.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/valuation-group/valuation-group-form-popup/valuation-group-form-popup.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/valuation-group/valuation-group-form-popup/valuation-group-form-popup.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/valuation-group/valuation-group.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/valuation-group/valuation-group.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/logistics/valuation-group/valuation-group.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/cause-for-removal/cause-for-removal.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/cause-for-removal/cause-for-removal.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/cause-for-removal/cause-for-removal.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/cause-for-removal/dialog-return-reason/dialog-return-reason.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/cause-for-removal/dialog-return-reason/dialog-return-reason.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/damage/damage.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/damage/damage.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/damage/damage.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/damage/dialog-damage/dialog-damage.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/damage/dialog-damage/dialog-damage.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/k-percent/dialog-k-percent/dialog-k-percent.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/k-percent/dialog-k-percent/dialog-k-percent.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/k-percent/k-percent.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/k-percent/k-percent.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/k-percent/k-percent.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/localisation/dialog-localisation/dialog-localisation.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/localisation/dialog-localisation/dialog-localisation.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/localisation/localisation.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/localisation/localisation.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/localisation/localisation.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/maintenance-type/dialog-maintenance-type/dialog-maintenance-type.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/maintenance-type/dialog-maintenance-type/dialog-maintenance-type.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/maintenance-type/maintenance-type.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/maintenance-type/maintenance-type.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/maintenance-type/maintenance-type.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/range/dialog-range/dialog-range.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/range/dialog-range/dialog-range.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/range/range.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/range/range.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/range/range.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/reference-measurement/dialog-reference-measurement/dialog-reference-measurement.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/reference-measurement/dialog-reference-measurement/dialog-reference-measurement.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/reference-measurement/reference-measurement.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/reference-measurement/reference-measurement.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/reference-measurement/reference-measurement.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/task-group/dialog-task-group/dialog-task-group.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/task-group/dialog-task-group/dialog-task-group.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/task-group/task-group.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/task-group/task-group.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/task-group/task-group.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/technical-intervention-level/dialog-technical-intervention-level/dialog-technical-intervention-level.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/technical-intervention-level/dialog-technical-intervention-level/dialog-technical-intervention-level.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/technical-intervention-level/technical-intervention-level.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/technical-intervention-level/technical-intervention-level.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/technical-intervention-level/technical-intervention-level.service.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/unit-of-measure/dialog-unit-of-measure/dialog-unit-of-measure.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/unit-of-measure/dialog-unit-of-measure/dialog-unit-of-measure.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/unit-of-measure/unit-of-measure.component.html","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/unit-of-measure/unit-of-measure.component.ts","webpack:///./src/app/main/administration/catalog/dynamic-catalog-components/maintenance/unit-of-measure/unit-of-measure.service.ts","webpack:///./src/app/main/administration/catalog/property-values-popup/property-values-popup.component.html","webpack:///./src/app/main/administration/catalog/property-values-popup/property-values-popup.component.ts","webpack:///./src/app/main/administration/catalog/types/dynamic-catalog.interface.ts","webpack:///./src/app/main/administration/profiles-form/profiles-form.component.html","webpack:///./src/app/main/administration/profiles-form/profiles-form.component.scss","webpack:///./src/app/main/administration/profiles-form/profiles-form.component.ts","webpack:///./src/app/main/administration/profiles-form/profiles-form.service.ts","webpack:///./src/app/main/administration/profiles-search/profiles-search.component.html","webpack:///./src/app/main/administration/profiles-search/profiles-search.component.scss","webpack:///./src/app/main/administration/profiles-search/profiles-search.component.ts","webpack:///./src/app/main/administration/profiles-search/profiles-search.service.ts","webpack:///./src/app/main/administration/users-form/popups/assign-family-popup-form/assign-family-popup-form.component.html","webpack:///./src/app/main/administration/users-form/popups/assign-family-popup-form/assign-family-popup-form.component.ts","webpack:///./src/app/main/administration/users-form/popups/assign-operator-popup-form/assign-operator-popup-form.component.html","webpack:///./src/app/main/administration/users-form/popups/assign-operator-popup-form/assign-operator-popup-form.component.ts","webpack:///./src/app/main/administration/users-form/popups/assign-profile-popup-form/assign-profile-popup-form.component.html","webpack:///./src/app/main/administration/users-form/popups/assign-profile-popup-form/assign-profile-popup-form.component.ts","webpack:///./src/app/main/administration/users-form/popups/assign-site-popup-form/assign-site-popup-form.component.html","webpack:///./src/app/main/administration/users-form/popups/assign-site-popup-form/assign-site-popup-form.component.ts","webpack:///./src/app/main/administration/users-form/popups/clients-form-popup/clients-form-popup.component.html","webpack:///./src/app/main/administration/users-form/popups/clients-form-popup/clients-form-popup.component.scss","webpack:///./src/app/main/administration/users-form/popups/clients-form-popup/clients-form-popup.component.ts","webpack:///./src/app/main/administration/users-form/popups/popup-form.component.scss","webpack:///./src/app/main/administration/users-form/users-form.component.html","webpack:///./src/app/main/administration/users-form/users-form.component.scss","webpack:///./src/app/main/administration/users-form/users-form.component.ts","webpack:///./src/app/main/administration/users-form/users-form.service.ts","webpack:///./src/app/main/administration/users-search/update-profile-rights-popup-form/update-profile-rights-popup-form.component.html","webpack:///./src/app/main/administration/users-search/update-profile-rights-popup-form/update-profile-rights-popup-form.component.ts","webpack:///./src/app/main/administration/users-search/update-profile-rights-popup-form/update-profile-rights-popup-form.scss","webpack:///./src/app/main/administration/users-search/users-search.component.html","webpack:///./src/app/main/administration/users-search/users-search.component.scss","webpack:///./src/app/main/administration/users-search/users-search.component.ts","webpack:///./src/app/main/administration/users-search/users-search.service.ts","webpack:///./src/app/shared/utils/label-value-utils.ts"],"names":[],"mappings":"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","file":"administration-administration-module.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/accordion/accordion\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dialog/dialog\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/keyfilter/keyfilter\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/message/message\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/organizationchart/organizationchart\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/splitbutton/splitbutton\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/treetable/treetable\"));","import { NgModule } from '@angular/core';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { OrganizationChartModule } from 'primeng/organizationchart';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\r\n\r\nimport { AngularCommonSharedModule } from '../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DialogSearchContactModule } from '../../shared/components/dialog-search-contact/dialog-search-contact.module';\r\nimport { DialogSearchCustomerModule } from '../../shared/components/dialog-search-customer/dialog-search-customer.module';\r\nimport { DialogTableModule } from '../../shared/components/dialog-table/dialog-table.module';\r\nimport { ModalModule } from '../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../shared/components/table/table.module';\r\nimport { DynamicComponentLoaderModule } from '../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { BackgroundJobsComponent } from './background-jobs/background-jobs.component';\r\nimport { BackgroundJobsService } from './background-jobs/background-jobs.service';\r\nimport { CatalogComponent } from './catalog/catalog.component';\r\nimport { CatalogService } from './catalog/catalog.service';\r\nimport { CatalogConstantsService } from './catalog/constants/catalog-name-constants';\r\nimport { E5xMappingComponent } from './catalog/dynamic-catalog-components/fleet/e5x-mapping/e5x-mapping.component';\r\nimport { E5xMappingService } from './catalog/dynamic-catalog-components/fleet/e5x-mapping/e5x-mapping.service';\r\nimport { ImportPopupComponent } from './catalog/dynamic-catalog-components/fleet/e5x-mapping/import-popup/import-popup.component';\r\nimport { EventContextFormComponent } from './catalog/dynamic-catalog-components/fleet/event-context/event-context-form/event-context-form.component';\r\nimport { ParametersPopupComponent } from './catalog/dynamic-catalog-components/fleet/event-context/event-context-form/parameters-popup/parameters-popup.component';\r\nimport { EventContextComponent } from './catalog/dynamic-catalog-components/fleet/event-context/event-context.component';\r\nimport { EventContextService } from './catalog/dynamic-catalog-components/fleet/event-context/event-context.service';\r\nimport { EventSymptomFormComponent } from './catalog/dynamic-catalog-components/fleet/event-symptom/event-symptom-form/event-symptom-form.component';\r\nimport { EventSymptomComponent } from './catalog/dynamic-catalog-components/fleet/event-symptom/event-symptom.component';\r\nimport { EventSymptomService } from './catalog/dynamic-catalog-components/fleet/event-symptom/event-symptom.service';\r\nimport { EventTypeFormPopupComponent } from './catalog/dynamic-catalog-components/fleet/event-type/event-type-form-popup/event-type-form-popup.component';\r\nimport { EventTypeComponent } from './catalog/dynamic-catalog-components/fleet/event-type/event-type.component';\r\nimport { EventTypeService } from './catalog/dynamic-catalog-components/fleet/event-type/event-type.service';\r\nimport { ContractComponent } from './catalog/dynamic-catalog-components/human-resource/contract/contract.component';\r\nimport { ContractService } from './catalog/dynamic-catalog-components/human-resource/contract/contract.service';\r\nimport { DialogContractComponent } from './catalog/dynamic-catalog-components/human-resource/contract/dialog-contract/dialog-contract.component';\r\nimport { DialogPublicHolidayComponent } from './catalog/dynamic-catalog-components/human-resource/public-holiday/dialog-public-holiday/dialog-public-holiday.component';\r\nimport { PublicHolidayComponent } from './catalog/dynamic-catalog-components/human-resource/public-holiday/public-holiday.component';\r\nimport { PublicHolidayService } from './catalog/dynamic-catalog-components/human-resource/public-holiday/public-holiday.service';\r\nimport { QualificationFormPopupComponent } from './catalog/dynamic-catalog-components/human-resource/qualification/qualification-form-popup/qualification-form-popup.component';\r\nimport { QualificationComponent } from './catalog/dynamic-catalog-components/human-resource/qualification/qualification.component';\r\nimport { QualificationService } from './catalog/dynamic-catalog-components/human-resource/qualification/qualification.service';\r\nimport { DialogWorkTemplateComponent } from './catalog/dynamic-catalog-components/human-resource/work-template/work-template-form/dialog-work-template/dialog-work-template.component';\r\nimport { WorkTemplateFormComponent } from './catalog/dynamic-catalog-components/human-resource/work-template/work-template-form/work-template-form.component';\r\nimport { WorkTemplateComponent } from './catalog/dynamic-catalog-components/human-resource/work-template/work-template.component';\r\nimport { WorkTemplateService } from './catalog/dynamic-catalog-components/human-resource/work-template/work-template.service';\r\nimport { DialogFolderTypeComponent } from './catalog/dynamic-catalog-components/logistics/folder-type/popup/dialog-folder-type.component';\r\nimport { DialogOperationCatalogComponent } from './catalog/dynamic-catalog-components/logistics/folder-type/popup/dialog-operation.component';\r\nimport { ReceiptTypeComponent } from './catalog/dynamic-catalog-components/logistics/folder-type/receipt-type/receipt-type.component';\r\nimport { ShipmentTypeComponent } from './catalog/dynamic-catalog-components/logistics/folder-type/shipment-type/shipment-type.component';\r\nimport { DialogOperationStockMovementComponent } from './catalog/dynamic-catalog-components/logistics/stock-movement-type/popup-stock-movement-type/dialog-operation-stock-movement.component';\r\nimport { DialogStockMovementTypeComponent } from './catalog/dynamic-catalog-components/logistics/stock-movement-type/popup-stock-movement-type/dialog-stock-movement-type.component';\r\nimport { StockMovementTypeComponent } from './catalog/dynamic-catalog-components/logistics/stock-movement-type/stock-movement-type.component';\r\nimport { StatusFormPopupComponent } from './catalog/dynamic-catalog-components/logistics/stock-type/stock-form/status-form-popup/status-form-popup.component';\r\nimport { StockTypeFormComponent } from './catalog/dynamic-catalog-components/logistics/stock-type/stock-form/stock-type-form.component';\r\nimport { StockTypeComponent } from './catalog/dynamic-catalog-components/logistics/stock-type/stock-type.component';\r\nimport { StockTypeService } from './catalog/dynamic-catalog-components/logistics/stock-type/stock-type.service';\r\nimport { StorageBinTypeFormPopupComponent } from './catalog/dynamic-catalog-components/logistics/storage-bin-type/storage-bin-type-form-popup/storage-bin-type-form-popup.component';\r\nimport { StorageBinTypeComponent } from './catalog/dynamic-catalog-components/logistics/storage-bin-type/storage-bin-type.component';\r\nimport { StorageBinTypeService } from './catalog/dynamic-catalog-components/logistics/storage-bin-type/storage-bin-type.service';\r\nimport { StorageConditionFormPopupComponent } from './catalog/dynamic-catalog-components/logistics/storage-condition/storage-condition-form-popup/storage-condition-form-popup.component';\r\nimport { StorageConditionComponent } from './catalog/dynamic-catalog-components/logistics/storage-condition/storage-condition.component';\r\nimport { StorageConditionService } from './catalog/dynamic-catalog-components/logistics/storage-condition/storage-condition.service';\r\nimport { ValuationGroupFormPopupComponent } from './catalog/dynamic-catalog-components/logistics/valuation-group/valuation-group-form-popup/valuation-group-form-popup.component';\r\nimport { ValuationGroupComponent } from './catalog/dynamic-catalog-components/logistics/valuation-group/valuation-group.component';\r\nimport { ValuationGroupService } from './catalog/dynamic-catalog-components/logistics/valuation-group/valuation-group.service';\r\nimport { CauseForRemovalComponent } from './catalog/dynamic-catalog-components/maintenance/cause-for-removal/cause-for-removal.component';\r\nimport { CauseForRemovalService } from './catalog/dynamic-catalog-components/maintenance/cause-for-removal/cause-for-removal.service';\r\nimport { DialogReturnReasonComponent } from './catalog/dynamic-catalog-components/maintenance/cause-for-removal/dialog-return-reason/dialog-return-reason.component';\r\nimport { DamageComponent } from './catalog/dynamic-catalog-components/maintenance/damage/damage.component';\r\nimport { DamageService } from './catalog/dynamic-catalog-components/maintenance/damage/damage.service';\r\nimport { DialogDamageComponent } from './catalog/dynamic-catalog-components/maintenance/damage/dialog-damage/dialog-damage.component';\r\nimport { DialogKPercentComponent } from './catalog/dynamic-catalog-components/maintenance/k-percent/dialog-k-percent/dialog-k-percent.component';\r\nimport { KPercentComponent } from './catalog/dynamic-catalog-components/maintenance/k-percent/k-percent.component';\r\nimport { KPercentService } from './catalog/dynamic-catalog-components/maintenance/k-percent/k-percent.service';\r\nimport { DialogLocalisationComponent } from './catalog/dynamic-catalog-components/maintenance/localisation/dialog-localisation/dialog-localisation.component';\r\nimport { LocalisationComponent } from './catalog/dynamic-catalog-components/maintenance/localisation/localisation.component';\r\nimport { LocalisationService } from './catalog/dynamic-catalog-components/maintenance/localisation/localisation.service';\r\nimport { DialogMaintenanceTypeComponent } from './catalog/dynamic-catalog-components/maintenance/maintenance-type/dialog-maintenance-type/dialog-maintenance-type.component';\r\nimport { MaintenanceTypeComponent } from './catalog/dynamic-catalog-components/maintenance/maintenance-type/maintenance-type.component';\r\nimport { MaintenanceTypeService } from './catalog/dynamic-catalog-components/maintenance/maintenance-type/maintenance-type.service';\r\nimport { DialogRangeComponent } from './catalog/dynamic-catalog-components/maintenance/range/dialog-range/dialog-range.component';\r\nimport { RangeComponent } from './catalog/dynamic-catalog-components/maintenance/range/range.component';\r\nimport { RangeService } from './catalog/dynamic-catalog-components/maintenance/range/range.service';\r\nimport { DialogReferenceMeasurementComponent } from './catalog/dynamic-catalog-components/maintenance/reference-measurement/dialog-reference-measurement/dialog-reference-measurement.component';\r\nimport { ReferenceMeasurementComponent } from './catalog/dynamic-catalog-components/maintenance/reference-measurement/reference-measurement.component';\r\nimport { ReferenceMeasurementService } from './catalog/dynamic-catalog-components/maintenance/reference-measurement/reference-measurement.service';\r\nimport { DialogTaskGroupComponent } from './catalog/dynamic-catalog-components/maintenance/task-group/dialog-task-group/dialog-task-group.component';\r\nimport { TaskGroupComponent } from './catalog/dynamic-catalog-components/maintenance/task-group/task-group.component';\r\nimport { TaskGroupService } from './catalog/dynamic-catalog-components/maintenance/task-group/task-group.service';\r\nimport { DialogTechnicalInterventionLevelComponent } from './catalog/dynamic-catalog-components/maintenance/technical-intervention-level/dialog-technical-intervention-level/dialog-technical-intervention-level.component';\r\nimport { TechnicalInterventionLevelComponent } from './catalog/dynamic-catalog-components/maintenance/technical-intervention-level/technical-intervention-level.component';\r\nimport { TechnicalInterventionLevelService } from './catalog/dynamic-catalog-components/maintenance/technical-intervention-level/technical-intervention-level.service';\r\nimport { DialogUnitOfMeasureComponent } from './catalog/dynamic-catalog-components/maintenance/unit-of-measure/dialog-unit-of-measure/dialog-unit-of-measure.component';\r\nimport { UnitOfMeasureComponent } from './catalog/dynamic-catalog-components/maintenance/unit-of-measure/unit-of-measure.component';\r\nimport { UnitOfMeasureService } from './catalog/dynamic-catalog-components/maintenance/unit-of-measure/unit-of-measure.service';\r\nimport { PropertyValuesPopupComponent } from './catalog/property-values-popup/property-values-popup.component';\r\nimport { ProfilesFormComponent } from './profiles-form/profiles-form.component';\r\nimport { ProfilesFormService } from './profiles-form/profiles-form.service';\r\nimport { ProfilesSearchComponent } from './profiles-search/profiles-search.component';\r\nimport { ProfilesSearchService } from './profiles-search/profiles-search.service';\r\nimport { AssignFamiliesPopupFormComponent } from './users-form/popups/assign-family-popup-form/assign-family-popup-form.component';\r\nimport { AssignOperatorsPopupFormComponent } from './users-form/popups/assign-operator-popup-form/assign-operator-popup-form.component';\r\nimport { AssignProfilesPopupFormComponent } from './users-form/popups/assign-profile-popup-form/assign-profile-popup-form.component';\r\nimport { AssignSitesPopupFormComponent } from './users-form/popups/assign-site-popup-form/assign-site-popup-form.component';\r\nimport { ClientsFormPopupComponent } from './users-form/popups/clients-form-popup/clients-form-popup.component';\r\nimport { UsersFormComponent } from './users-form/users-form.component';\r\nimport { UsersFormService } from './users-form/users-form.service';\r\nimport { UpdateProfileRightsPopupFormComponent } from './users-search/update-profile-rights-popup-form/update-profile-rights-popup-form.component';\r\nimport { UsersSearchComponent } from './users-search/users-search.component';\r\nimport { UsersSearchService } from './users-search/users-search.service';\r\n\r\nconst PRIMENG_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DialogModule,\r\n  DropdownModule,\r\n  InputTextareaModule,\r\n  RadioButtonModule,\r\n  SplitButtonModule,\r\n  TooltipModule,\r\n  TriStateCheckboxModule,\r\n  FileUploadModule,\r\n  KeyFilterModule,\r\n  OrganizationChartModule,\r\n  OverlayPanelModule,\r\n  AccordionModule,\r\n  SelectButtonModule,\r\n  TreeTableModule,\r\n  MessageModule,\r\n  PrimeNgTableModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [TableModule];\r\n\r\nconst COMPONENTS = [\r\n  PropertyValuesPopupComponent,\r\n  EventTypeFormPopupComponent,\r\n  ImportPopupComponent,\r\n  DialogReturnReasonComponent,\r\n  DialogDamageComponent,\r\n  DialogLocalisationComponent,\r\n  DialogUnitOfMeasureComponent,\r\n  DialogReferenceMeasurementComponent,\r\n  DialogTechnicalInterventionLevelComponent,\r\n  DialogKPercentComponent,\r\n  DialogMaintenanceTypeComponent,\r\n  StorageBinTypeFormPopupComponent,\r\n  StorageConditionFormPopupComponent,\r\n  ValuationGroupFormPopupComponent,\r\n  DialogTaskGroupComponent,\r\n  DialogRangeComponent,\r\n  DialogContractComponent,\r\n  DialogWorkTemplateComponent,\r\n  ParametersPopupComponent,\r\n  StorageBinTypeFormPopupComponent,\r\n  StorageConditionFormPopupComponent,\r\n  ValuationGroupFormPopupComponent,\r\n  StatusFormPopupComponent,\r\n  DialogPublicHolidayComponent,\r\n  QualificationFormPopupComponent,\r\n  AssignProfilesPopupFormComponent,\r\n  AssignFamiliesPopupFormComponent,\r\n  AssignOperatorsPopupFormComponent,\r\n  AssignSitesPopupFormComponent,\r\n  ClientsFormPopupComponent,\r\n  UpdateProfileRightsPopupFormComponent,\r\n  DialogFolderTypeComponent,\r\n  DialogStockMovementTypeComponent,\r\n  DialogOperationStockMovementComponent,\r\n  DialogOperationCatalogComponent\r\n];\r\n\r\nconst DYNAMIC_COMPONENTS = [\r\n  CatalogComponent,\r\n  EventTypeComponent,\r\n  E5xMappingComponent,\r\n  CauseForRemovalComponent,\r\n  DamageComponent,\r\n  LocalisationComponent,\r\n  UnitOfMeasureComponent,\r\n  ReferenceMeasurementComponent,\r\n  TechnicalInterventionLevelComponent,\r\n  KPercentComponent,\r\n  MaintenanceTypeComponent,\r\n  StorageBinTypeComponent,\r\n  StorageConditionComponent,\r\n  ValuationGroupComponent,\r\n  StockTypeComponent,\r\n  StockTypeFormComponent,\r\n  EventContextComponent,\r\n  TaskGroupComponent,\r\n  RangeComponent,\r\n  ContractComponent,\r\n  WorkTemplateComponent,\r\n  EventContextComponent,\r\n  EventContextFormComponent,\r\n  EventSymptomComponent,\r\n  EventSymptomFormComponent,\r\n  StockTypeFormComponent,\r\n  QualificationComponent,\r\n  WorkTemplateFormComponent,\r\n  PublicHolidayComponent,\r\n  ProfilesSearchComponent,\r\n  ProfilesFormComponent,\r\n  UsersSearchComponent,\r\n  UsersFormComponent,\r\n  BackgroundJobsComponent,\r\n  ReceiptTypeComponent,\r\n  ShipmentTypeComponent,\r\n  StockMovementTypeComponent\r\n];\r\n\r\nconst SERVICES = [\r\n  CatalogService,\r\n  EventTypeService,\r\n  E5xMappingService,\r\n  CauseForRemovalService,\r\n  DamageService,\r\n  LocalisationService,\r\n  UnitOfMeasureService,\r\n  ReferenceMeasurementService,\r\n  TechnicalInterventionLevelService,\r\n  KPercentService,\r\n  MaintenanceTypeService,\r\n  StorageBinTypeService,\r\n  StorageConditionService,\r\n  ValuationGroupService,\r\n  StockTypeService,\r\n  RangeService,\r\n  TaskGroupService,\r\n  ContractService,\r\n  WorkTemplateService,\r\n  EventContextService,\r\n  EventSymptomService,\r\n  StorageBinTypeService,\r\n  StorageConditionService,\r\n  ValuationGroupService,\r\n  StockTypeService,\r\n  QualificationService,\r\n  PublicHolidayService,\r\n  ProfilesSearchService,\r\n  ProfilesFormService,\r\n  UsersSearchService,\r\n  UsersFormService,\r\n  BackgroundJobsService,\r\n  CatalogConstantsService\r\n];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ModalModule,\r\n    ComponentSidebarModule,\r\n    DialogSearchContactModule,\r\n    DialogSearchCustomerModule,\r\n    DialogTableModule,\r\n    TableModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...PRIMENG_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class AdministrationModule {}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ \\\"page.searchPage\\\" | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"refresh()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <!-- Background jobs table -->\\r\\n\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }} ({{\\r\\n                    backgroundJobsTableDataSource ? backgroundJobsTableDataSource.dataCount : 0\\r\\n                  }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <a-table [dataSource]=\\\"backgroundJobsTableDataSource\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    *ngIf=\\\"backgroundJobsTableDataSource && backgroundJobsTableDataSource.hasData\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportTable()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../shared/components/table/table-data-source';\r\nimport { ComponentConstants } from '../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { DateService } from '../../../shared/services/date.service';\r\nimport { ExportService } from '../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\n\r\nimport { BackgroundJobsService } from './background-jobs.service';\r\n\r\ninterface BackgroundJobsRow {\r\n  Name?: string;\r\n  Author?: string;\r\n  StartTime?: string;\r\n  Parameters?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-background-jobs',\r\n  templateUrl: './background-jobs.component.html'\r\n})\r\nexport class BackgroundJobsComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  private static readonly tableExportName: string = 'Background-Jobs-list';\r\n  public filteredRowsNb: number;\r\n  public backgroundJobsTableDataSource: TableDataSource<BackgroundJobsRow>;\r\n  public isLoading: boolean;\r\n\r\n  @ViewChild('resultsContainerAnchor')\r\n  public resultsContainerAnchor: ElementRef;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly backgroundJobsService: BackgroundJobsService,\r\n    private readonly dateService: DateService,\r\n    private readonly exportService: ExportService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    this.filteredRowsNb = 0;\r\n\r\n    this.initBackgroundJobsTableDataSource();\r\n    this.isLoading = false;\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_BACKGROUND_JOBS;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    super.scrollToAnchor(this.resultsContainerAnchor);\r\n    this.getBackgroundJobs();\r\n  }\r\n\r\n  public refresh() {\r\n    this.getBackgroundJobs();\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onFilter(event: any): void {\r\n    this.filteredRowsNb = event.filteredValue.length;\r\n  }\r\n\r\n  public exportTable(): void {\r\n    if (!!this.componentData) {\r\n      this.exportService.toExcel(\r\n        this.backgroundJobsTableDataSource.dataSrc,\r\n        BackgroundJobsComponent.tableExportName,\r\n        this.componentData.componentId\r\n      );\r\n    } else {\r\n      super.throwUnboundLocalError('exportTable', 'this.componentData');\r\n    }\r\n  }\r\n\r\n  private initBackgroundJobsTableDataSource(): void {\r\n    this.backgroundJobsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'Name',\r\n          translateKey: this.getTranslateKey('Name')\r\n        },\r\n        {\r\n          field: 'Author',\r\n          translateKey: this.getTranslateKey('Author')\r\n        },\r\n        {\r\n          field: 'StartTime',\r\n          translateKey: this.getTranslateKey('StartTime')\r\n        },\r\n        {\r\n          field: 'Parameters',\r\n          translateKey: this.getTranslateKey('Parameters')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private getBackgroundJobs(): void {\r\n    let backgroundJobsRow: BackgroundJobsRow[] = [];\r\n    this.isLoading = true;\r\n    this.backgroundJobsService.getBackgroundJobs().subscribe((results) => {\r\n      backgroundJobsRow = results.map((row) => {\r\n        const jobRow: BackgroundJobsRow = {\r\n          Name: !!row.jobName ? row.jobName.substring(0, row.jobName.lastIndexOf('_')) : '',\r\n          Author: row.author,\r\n          StartTime: !!row.startTime ? this.dateService.dateWithHourMinSecToString(row.startTime) : '',\r\n          Parameters: row.parameters\r\n        };\r\n\r\n        return jobRow;\r\n      });\r\n      this.isLoading = false;\r\n      this.backgroundJobsTableDataSource.setData(backgroundJobsRow);\r\n      this.backgroundJobsTableDataSource.update();\r\n      this.filteredRowsNb = this.backgroundJobsTableDataSource.dataCount;\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserProfileManagementApi } from '../../../shared/api/user-profile-management.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { BackgroundJobDTO } from '../../../shared/types/api-types/background-job-dto.inteface';\r\n\r\n@Injectable()\r\nexport class BackgroundJobsService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly userProfileManagementApi: UserProfileManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getBackgroundJobs(): Observable<BackgroundJobDTO[]> {\r\n    return super.post<void, BackgroundJobDTO[]>(this.userProfileManagementApi.findBackgroundJobs);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ \\\"page.searchPage\\\" | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      *ngIf=\\\"(showPropertyValuesTable || showDynamicComponent) && !(showCreateButton || showImportButton)\\\"\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"savePropertyCatalog()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"showDynamicComponent && !!showCreateButton && hasUpdateAccessRight\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"createPropertyCatalog()\\\"\\r\\n    >\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"showDynamicComponent && !!showImportButton\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"exportPropertyCatalog()\\\"\\r\\n    >\\r\\n      {{ \\\"global.export\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"showDynamicComponent && !!showImportButton\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"importPropertyCatalog()\\\"\\r\\n    >\\r\\n      {{ \\\"global.import\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"refreshPropertyCatalog()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ componentData.componentId + \\\".catalogName\\\" | translate }}\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".catalogArea\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"catalogAreaValues\\\"\\r\\n                    [(ngModel)]=\\\"catalogArea\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    (onChange)=\\\"onCatalogAreaChange($event)\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".catalogName\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"catalogNameValues\\\"\\r\\n                    [(ngModel)]=\\\"catalogName\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [disabled]=\\\"!catalogArea\\\"\\r\\n                    (onChange)=\\\"onCatalogNameChange($event)\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\"></div>\\r\\n              <div class=\\\"form-group\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"showPropertyValuesTable\\\" class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ componentData.componentId + \\\".propertyValues\\\" | translate }} ({{\\r\\n                    propertyValuesTableDataSource.dataCount\\r\\n                  }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <a-table [dataSource]=\\\"propertyValuesTableDataSource\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    *ngIf=\\\"!disablePropertyTypeDeleteButton()\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteSelectedPropertyValue()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"propertyValuesTableDataSource.dataSelectionCount === 1\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"editSelectedPropertyValue()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.edit\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"!propertyValuesTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"addPropertyValue()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.add\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"isStandard\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i\\r\\n                    *ngIf=\\\"rowData.isStandard !== null && rowData.isStandard\\\"\\r\\n                    class=\\\"fa fa-fw fa-check\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  ></i>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <ng-template #node> </ng-template>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-property-values-popup\\r\\n    *ngIf=\\\"showPropertyValuePopup\\\"\\r\\n    [(display)]=\\\"showPropertyValuePopup\\\"\\r\\n    [propertyValue]=\\\"currentPropertyValue\\\"\\r\\n    [viewModePropertyValue]=\\\"viewModePropertyValue\\\"\\r\\n    [isNewPropertyValue]=\\\"isNewPropertyValue\\\"\\r\\n    (onCreate)=\\\"createPropertyValue($event)\\\"\\r\\n    (onUpdate)=\\\"updatePropertyValue($event)\\\"\\r\\n  ></aw-property-values-popup>\\r\\n</div>\\r\\n\"","import { Component, ComponentFactoryResolver, ComponentRef, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../shared/components/table/table-data-source';\r\nimport { AccessibleFunctionsConstants } from '../../../shared/constants/accessible-functions-constants';\r\nimport { AWPropertiesConstants } from '../../../shared/constants/aw-properties-constants';\r\nimport { ComponentConstants } from '../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../shared/services/session.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { CatalogPropertiesTableDTO } from '../../../shared/types/api-output-types/administration-catalog/catalog-properties-table-dto.interface';\r\nimport { BidoPropertiesDTO } from '../../../shared/types/api-types/bido-properties-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\n\r\nimport { CatalogService } from './catalog.service';\r\nimport { CatalogConstantsService } from './constants/catalog-name-constants';\r\nimport { CatalogNameInterface } from './types/catalog-name-interface';\r\n\r\ninterface ValueInterface {\r\n  value: string;\r\n  isProperty: boolean;\r\n}\r\n\r\ninterface CustomLabelValue {\r\n  label: string;\r\n  value: ValueInterface;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-catalog',\r\n  templateUrl: './catalog.component.html'\r\n})\r\nexport class CatalogComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  private static readonly WAREHOUSE_AREA_TYPE: string = 'WAREHOUSE_AREA_TYPE';\r\n  private static readonly WORKSHOP_AREA_TYPE: string = 'WORKSHOP_AREA_TYPE';\r\n\r\n  @ViewChild('node', { read: ViewContainerRef })\r\n  public node: ViewContainerRef;\r\n\r\n  public showPropertyValuesTable: boolean;\r\n  public showDynamicComponent: boolean;\r\n  public showImportButton: boolean | undefined;\r\n  public showCreateButton: boolean | undefined;\r\n\r\n  // Property values table\r\n  public propertyValuesTableDataSource: TableDataSource<CatalogPropertiesTableDTO>;\r\n  public currentPropertyValue: CatalogPropertiesTableDTO | undefined;\r\n  public currentPropertyValueIndex: number | undefined;\r\n\r\n  // Property values popup\r\n  public viewModePropertyValue: boolean;\r\n  public isNewPropertyValue: boolean;\r\n  public showPropertyValuePopup: boolean;\r\n\r\n  public catalogArea: string;\r\n  public catalogName: ValueInterface;\r\n\r\n  public catalogAreaValues: LabelValue<string>[];\r\n  public catalogNameValues: CustomLabelValue[];\r\n  public accessibleCatalogName: string[];\r\n  public catalogs: CatalogNameInterface[];\r\n\r\n  public propertyCatalogIdNameMappingList: BidoPropertiesDTO[];\r\n\r\n  public currentPropertyId: string | undefined;\r\n\r\n  private customRefreshButton: (() => void) | undefined;\r\n  private customSaveButton: (() => void) | undefined;\r\n  private customCreateButton: (() => void) | undefined;\r\n  private customImportButton: (() => void) | undefined;\r\n  private customExportButton: (() => void) | undefined;\r\n  public showSaveSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly catalogService: CatalogService,\r\n    private readonly componentFactoryResolver: ComponentFactoryResolver,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly sessionService: SessionService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly catalogConstService: CatalogConstantsService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.showPropertyValuesTable = false;\r\n    this.showDynamicComponent = false;\r\n\r\n    this.showPropertyValuePopup = false;\r\n\r\n    this.currentPropertyValue = undefined;\r\n    this.currentPropertyValueIndex = undefined;\r\n\r\n    this.catalogAreaValues = [];\r\n    this.catalogNameValues = [];\r\n\r\n    this.currentPropertyId = undefined;\r\n\r\n    this.registerMainButtonObservables();\r\n\r\n    this.resetMainButtons();\r\n  }\r\n\r\n  private resetComponentVisibility(): void {\r\n    this.showPropertyValuesTable = false;\r\n    this.showDynamicComponent = false;\r\n    this.node.clear();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_CATALOG;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    this.catalogService.getPropertyCatalogIdNameMapping().subscribe((results) => {\r\n      this.propertyCatalogIdNameMappingList = results || [];\r\n    });\r\n\r\n    this.sessionService\r\n      .getAccessibleFunctions([AccessibleFunctionsConstants.CATALOG_TRANSACTION])\r\n      .subscribe((results: { [entryComponent: string]: string[] }) => {\r\n        this.accessibleCatalogName =\r\n          results.accessibleFunctionsPerEntryComponent[AccessibleFunctionsConstants.CATALOG_TRANSACTION];\r\n        // Prepare visible area\r\n        const accessibleArea: string[] = this.accessibleCatalogName.reduce<string[]>((accumulator, current) => {\r\n          if (accumulator.indexOf(current) === -1) {\r\n            accumulator.push(current);\r\n          }\r\n\r\n          return accumulator;\r\n        }, []);\r\n\r\n        this.catalogAreaValues = this.catalogConstService.fetchCatalogAreas().filter((value) => {\r\n          const accessibleCatalogAreaValues: string[] = this.catalogConstService\r\n            .fetchCatalogNames()\r\n            .filter((catalogName) => {\r\n              if (!!catalogName.accessRightName) {\r\n                return accessibleArea.includes(catalogName.accessRightName);\r\n              } else {\r\n                return accessibleArea.includes(catalogName.catalogList.value);\r\n              }\r\n            })\r\n            .reduce<string[]>((accumulator, current) => {\r\n              if (accumulator.indexOf(current.catalogArea) === -1) {\r\n                accumulator.push(current.catalogArea);\r\n              }\r\n\r\n              return accumulator;\r\n            }, []);\r\n\r\n          return accessibleCatalogAreaValues.indexOf(value.value) !== -1;\r\n        });\r\n      });\r\n\r\n    this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public defaultRefreshForPropertyCatalog(): void {\r\n    if (!!this.propertyValuesTableDataSource) {\r\n      this.propertyValuesTableDataSource.dataSelection = [];\r\n    }\r\n    const propertyIds = this.propertyCatalogIdNameMappingList.filter(\r\n      (property) => property.propertiesName && property.propertiesName.toUpperCase() === this.catalogName.value\r\n    );\r\n\r\n    const id = propertyIds[0] && propertyIds[0].propertiesId;\r\n    if (!!id) {\r\n      this.loadPropertyValues(parseInt(id, 10));\r\n    }\r\n  }\r\n\r\n  public defaultSaveForPropertyCatalog(): void {\r\n    this.showSaveSpinner = true;\r\n    this.catalogService.savePropertyCatalog(this.propertyValuesTableDataSource.dataSrc).subscribe(\r\n      (_result) => {\r\n        this.clearPropertyValueFromCache();\r\n\r\n        this.defaultRefreshForPropertyCatalog();\r\n        this.messageService.showSuccessMessage('global.successOnSave');\r\n        this.showSaveSpinner = false;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage('global.errorOnSave');\r\n        this.showSaveSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  public refreshPropertyCatalog(): void {\r\n    if (this.customRefreshButton) {\r\n      this.customRefreshButton();\r\n    } else {\r\n      this.defaultRefreshForPropertyCatalog();\r\n    }\r\n  }\r\n\r\n  public savePropertyCatalog(): void {\r\n    if (this.customSaveButton) {\r\n      this.customSaveButton();\r\n    } else {\r\n      this.defaultSaveForPropertyCatalog();\r\n    }\r\n  }\r\n\r\n  public createPropertyCatalog(): void {\r\n    if (this.customCreateButton) {\r\n      this.customCreateButton();\r\n    }\r\n  }\r\n\r\n  public importPropertyCatalog(): void {\r\n    if (this.customImportButton) {\r\n      this.customImportButton();\r\n    }\r\n  }\r\n\r\n  public exportPropertyCatalog(): void {\r\n    if (this.customExportButton) {\r\n      this.customExportButton();\r\n    }\r\n  }\r\n\r\n  private registerMainButtonObservables(): void {\r\n    this.catalogService.refreshButton$.pipe(takeUntil(this.unsubscribe)).subscribe((f) => {\r\n      this.customRefreshButton = f;\r\n    });\r\n\r\n    this.catalogService.saveButton$.pipe(takeUntil(this.unsubscribe)).subscribe((f) => {\r\n      this.customSaveButton = f;\r\n    });\r\n\r\n    this.catalogService.createButton$.pipe(takeUntil(this.unsubscribe)).subscribe((f) => {\r\n      this.customCreateButton = f;\r\n    });\r\n\r\n    this.catalogService.importButton$.pipe(takeUntil(this.unsubscribe)).subscribe((f) => {\r\n      this.customImportButton = f;\r\n    });\r\n\r\n    this.catalogService.exportButton$.pipe(takeUntil(this.unsubscribe)).subscribe((f) => {\r\n      this.customExportButton = f;\r\n    });\r\n  }\r\n\r\n  private resetMainButtons(): void {\r\n    this.customRefreshButton = undefined;\r\n    this.customSaveButton = undefined;\r\n    this.customCreateButton = undefined;\r\n    this.customImportButton = undefined;\r\n    this.customExportButton = undefined;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onCatalogAreaChange(event: any): void {\r\n    this.resetMainButtons();\r\n    this.resetComponentVisibility();\r\n    this.catalogNameValues = [];\r\n    this.catalogs = [];\r\n\r\n    const catalogConstants: CatalogNameInterface[] = this.catalogConstService\r\n      .fetchCatalogNames()\r\n      .filter((catArea) => catArea.catalogArea === event.value);\r\n    this.catalogs = catalogConstants;\r\n    catalogConstants.forEach((c) => {\r\n      if (\r\n        this.accessibleCatalogName.includes(c.catalogList.value) ||\r\n        (!!c.accessRightName && this.accessibleCatalogName.includes(c.accessRightName))\r\n      ) {\r\n        this.catalogNameValues.push({\r\n          label: c.catalogList.label,\r\n          value: {\r\n            isProperty: c.isProperty,\r\n            value: c.catalogList.value\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    if (this.catalogNameValues.length > 1) {\r\n      this.catalogNameValues.sort((name1, name2): number => {\r\n        if (name1.label > name2.label) {\r\n          return 1;\r\n        }\r\n\r\n        if (name1.label < name2.label) {\r\n          return -1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onCatalogNameChange(event: any): void {\r\n    this.node.clear();\r\n    this.resetMainButtons();\r\n    this.resetComponentVisibility();\r\n    if (!!this.propertyValuesTableDataSource) {\r\n      this.propertyValuesTableDataSource.dataSelection = [];\r\n    }\r\n\r\n    const catalog: CatalogNameInterface = this.catalogs.filter((c) => {\r\n      return (\r\n        (c.catalogList.value === event.value.value || c.accessRightName === event.value.value) &&\r\n        c.isProperty === event.value.isProperty\r\n      );\r\n    })[0];\r\n\r\n    if (!catalog) {\r\n      return;\r\n    }\r\n\r\n    if (catalog.isProperty) {\r\n      this.showCreateButton = false;\r\n      this.showImportButton = false;\r\n      const propertyIds = this.propertyCatalogIdNameMappingList.filter(\r\n        (property) => property.propertiesName && property.propertiesName.toUpperCase() === catalog.catalogList.value\r\n      );\r\n      this.currentPropertyId = propertyIds[0] && propertyIds[0].propertiesId;\r\n      if (!!this.currentPropertyId) {\r\n        this.loadPropertyValues(parseInt(this.currentPropertyId, 10));\r\n      }\r\n    } else {\r\n      this.showDynamicComponent = true;\r\n      this.loadDynamicComponent(catalog);\r\n    }\r\n\r\n    if (catalog && catalog.catalogList.value === CatalogConstantsService.CAT_NAME_QUALIFICATION) {\r\n      // synchronize qualifications\r\n      this.catalogService.synchronizeQualifications().subscribe();\r\n    }\r\n  }\r\n\r\n  private loadPropertyValuesTableColumn(catalogs: CatalogPropertiesTableDTO[]): void {\r\n    if (catalogs.length !== 0) {\r\n      if (catalogs[0].locale) {\r\n        this.propertyValuesTableDataSource = new TableDataSource({\r\n          columns: [\r\n            { field: 'propertiesKey', translateKey: this.getTranslateKey('propertiesKey') },\r\n            {\r\n              field: 'isStandard',\r\n              translateKey: this.getTranslateKey('isStandard'),\r\n              alignment: ColumnAlignment.CENTER\r\n            },\r\n            { field: 'enPropertiesValue', translateKey: this.getTranslateKey('enPropertiesValue') },\r\n            { field: 'frPropertiesValue', translateKey: this.getTranslateKey('frPropertiesValue') }\r\n          ],\r\n          data: catalogs\r\n        });\r\n      } else {\r\n        this.propertyValuesTableDataSource = new TableDataSource({\r\n          columns: [\r\n            { field: 'propertiesKey', translateKey: this.getTranslateKey('propertiesKey') },\r\n            {\r\n              field: 'isStandard',\r\n              translateKey: this.getTranslateKey('isStandard'),\r\n              alignment: ColumnAlignment.CENTER\r\n            },\r\n            { field: 'propertiesValue', translateKey: this.getTranslateKey('propertiesValue') }\r\n          ],\r\n          data: catalogs\r\n        });\r\n      }\r\n    } else {\r\n      this.propertyValuesTableDataSource = new TableDataSource({\r\n        columns: [\r\n          { field: 'propertiesKey', translateKey: this.getTranslateKey('propertiesKey') },\r\n          {\r\n            field: 'isStandard',\r\n            translateKey: this.getTranslateKey('isStandard'),\r\n            alignment: ColumnAlignment.CENTER\r\n          },\r\n          { field: 'propertiesValue', translateKey: this.getTranslateKey('propertiesValue') }\r\n        ],\r\n        data: catalogs\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadPropertyValues(propertiesId: number): void {\r\n    this.catalogService.fetchPropertyValuesTableData(propertiesId).subscribe((results) => {\r\n      this.loadPropertyValuesTableColumn(results);\r\n      this.showPropertyValuesTable = true;\r\n    });\r\n  }\r\n\r\n  private loadDynamicComponent(catalog: CatalogNameInterface): void {\r\n    if (!!catalog.componentName) {\r\n      let componentFactory;\r\n      let data: PageComponentData;\r\n      this.node.clear();\r\n\r\n      data = {\r\n        id: 1,\r\n        componentId: catalog.componentName.toString(),\r\n        openMode: ComponentOpenMode.Create,\r\n        objectId: this.getDynamicComponentData(catalog) ? this.getDynamicComponentData(catalog) : undefined\r\n      };\r\n\r\n      componentFactory = this.componentFactoryResolver.resolveComponentFactory(catalog.component);\r\n\r\n      const componentRef: ComponentRef<PageComponent<PageComponentData>> = this.node.createComponent(componentFactory);\r\n\r\n      componentRef.instance.componentData = data;\r\n      this.showCreateButton = catalog.isCreateEnabled;\r\n      this.showImportButton = catalog.isImportEnabled;\r\n    } else {\r\n      super.throwUnboundLocalError('loadDynamicComponent', 'catalog.componentName');\r\n    }\r\n  }\r\n\r\n  /***********************\r\n   * Property Values Popup\r\n   ***********************/\r\n\r\n  private getDynamicComponentData(catalog: CatalogNameInterface): string {\r\n    let componentObjectData = '';\r\n    if (catalog.catalogList && catalog.catalogList.value === CatalogComponent.WAREHOUSE_AREA_TYPE) {\r\n      componentObjectData = AWPropertiesConstants.WAREHOUSE_CATEGORY_WAREHOUSE;\r\n    } else if (catalog.catalogList && catalog.catalogList.value === CatalogComponent.WORKSHOP_AREA_TYPE) {\r\n      componentObjectData = AWPropertiesConstants.WAREHOUSE_CATEGORY_WORKSHOP;\r\n    }\r\n\r\n    return componentObjectData;\r\n  }\r\n\r\n  public addPropertyValue(): void {\r\n    this.isNewPropertyValue = true;\r\n    this.viewModePropertyValue = false;\r\n    const propertyValueWithThreeCols = 3;\r\n    const propertyValueWithFourCols = 4;\r\n    if (!!this.currentPropertyId) {\r\n      this.currentPropertyValue = {\r\n        propertiesId: parseInt(this.currentPropertyId, 10)\r\n      };\r\n      if (this.propertyValuesTableDataSource.columns.length === propertyValueWithThreeCols) {\r\n        this.currentPropertyValue.locale = false;\r\n      } else if (this.propertyValuesTableDataSource.columns.length === propertyValueWithFourCols) {\r\n        this.currentPropertyValue.locale = true;\r\n      }\r\n      // this.currentPropertyValue = undefined;\r\n      this.showPropertyValuePopup = true;\r\n    } else {\r\n      super.throwUnboundLocalError('addPropertyValue', 'this.currentPropertyId');\r\n    }\r\n  }\r\n\r\n  public disablePropertyTypeDeleteButton(): boolean {\r\n    let result: boolean;\r\n\r\n    if (this.propertyValuesTableDataSource.dataSelectionCount === 0) {\r\n      result = true;\r\n    } else {\r\n      const catalogs: CatalogPropertiesTableDTO[] = this.propertyValuesTableDataSource.dataSelection.filter(\r\n        (value) => value.isStandard\r\n      );\r\n      result = catalogs.length !== 0;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public editSelectedPropertyValue(): void {\r\n    this.isNewPropertyValue = false;\r\n    this.viewModePropertyValue = false;\r\n    this.currentPropertyValue = { ...this.propertyValuesTableDataSource.dataSelection[0] };\r\n    this.showPropertyValuePopup = true;\r\n    this.currentPropertyValueIndex = this.propertyValuesTableDataSource.dataSrc.findIndex(\r\n      (value) => value === this.propertyValuesTableDataSource.dataSelection[0]\r\n    );\r\n  }\r\n\r\n  public deleteSelectedPropertyValue(): void {\r\n    const partialMessageKey = 'global.deleteConfirmationMsg';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: partialMessageKey,\r\n      accept: () => {\r\n        this.catalogService.deletePropertyCatalog(this.propertyValuesTableDataSource.dataSelection).subscribe(\r\n          (result) => {\r\n            this.defaultRefreshForPropertyCatalog();\r\n            this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n          },\r\n          () => {\r\n            this.messageService.showErrorMessage('global.deleteErrorMsg');\r\n          }\r\n        );\r\n        this.propertyValuesTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public createPropertyValue(event: CatalogPropertiesTableDTO) {\r\n    if (event) {\r\n      const propertyValueAlreadyExists = this.propertyValuesTableDataSource.dataSrc.filter(\r\n        (value) => value.propertiesKey === event.propertiesKey\r\n      );\r\n      if (propertyValueAlreadyExists.length === 0) {\r\n        this.propertyValuesTableDataSource.addData([event]);\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('propertyValueAlreadyExists'));\r\n      }\r\n    }\r\n  }\r\n\r\n  public updatePropertyValue(event: CatalogPropertiesTableDTO) {\r\n    if (this.currentPropertyValueIndex !== null && this.currentPropertyValueIndex !== undefined) {\r\n      this.propertyValuesTableDataSource.replaceData(\r\n        this.propertyValuesTableDataSource.dataSrc[this.currentPropertyValueIndex],\r\n        event\r\n      );\r\n      this.currentPropertyValueIndex = undefined;\r\n      this.propertyValuesTableDataSource.dataSelection = [];\r\n    } else {\r\n      super.throwUnboundLocalError('updatePropertyValue', 'this.currentPropertyValueIndex');\r\n    }\r\n  }\r\n\r\n  private clearPropertyValueFromCache(): void {\r\n    const catalog: CatalogNameInterface = this.catalogs.filter((c) => {\r\n      return c.catalogList.value === this.catalogName.value;\r\n    })[0];\r\n\r\n    if (!!catalog && catalog.isProperty && !!catalog.key) {\r\n      this.propertiesService.resetCache(catalog.key);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\nimport { E5xMappingComponent } from '../dynamic-catalog-components/fleet/e5x-mapping/e5x-mapping.component';\nimport { EventContextComponent } from '../dynamic-catalog-components/fleet/event-context/event-context.component';\nimport { EventSymptomComponent } from '../dynamic-catalog-components/fleet/event-symptom/event-symptom.component';\nimport { EventTypeComponent } from '../dynamic-catalog-components/fleet/event-type/event-type.component';\nimport { ContractComponent } from '../dynamic-catalog-components/human-resource/contract/contract.component';\nimport { PublicHolidayComponent } from '../dynamic-catalog-components/human-resource/public-holiday/public-holiday.component';\nimport { QualificationComponent } from '../dynamic-catalog-components/human-resource/qualification/qualification.component';\nimport { WorkTemplateComponent } from '../dynamic-catalog-components/human-resource/work-template/work-template.component';\nimport { ReceiptTypeComponent } from '../dynamic-catalog-components/logistics/folder-type/receipt-type/receipt-type.component';\nimport { ShipmentTypeComponent } from '../dynamic-catalog-components/logistics/folder-type/shipment-type/shipment-type.component';\nimport { StockMovementTypeComponent } from '../dynamic-catalog-components/logistics/stock-movement-type/stock-movement-type.component';\nimport { StockTypeComponent } from '../dynamic-catalog-components/logistics/stock-type/stock-type.component';\nimport { StorageBinTypeComponent } from '../dynamic-catalog-components/logistics/storage-bin-type/storage-bin-type.component';\nimport { StorageConditionComponent } from '../dynamic-catalog-components/logistics/storage-condition/storage-condition.component';\nimport { ValuationGroupComponent } from '../dynamic-catalog-components/logistics/valuation-group/valuation-group.component';\nimport { CauseForRemovalComponent } from '../dynamic-catalog-components/maintenance/cause-for-removal/cause-for-removal.component';\nimport { DamageComponent } from '../dynamic-catalog-components/maintenance/damage/damage.component';\nimport { KPercentComponent } from '../dynamic-catalog-components/maintenance/k-percent/k-percent.component';\nimport { LocalisationComponent } from '../dynamic-catalog-components/maintenance/localisation/localisation.component';\nimport { MaintenanceTypeComponent } from '../dynamic-catalog-components/maintenance/maintenance-type/maintenance-type.component';\nimport { RangeComponent } from '../dynamic-catalog-components/maintenance/range/range.component';\nimport { ReferenceMeasurementComponent } from '../dynamic-catalog-components/maintenance/reference-measurement/reference-measurement.component';\nimport { TaskGroupComponent } from '../dynamic-catalog-components/maintenance/task-group/task-group.component';\nimport { TechnicalInterventionLevelComponent } from '../dynamic-catalog-components/maintenance/technical-intervention-level/technical-intervention-level.component';\nimport { UnitOfMeasureComponent } from '../dynamic-catalog-components/maintenance/unit-of-measure/unit-of-measure.component';\nimport { CatalogNameInterface } from '../types/catalog-name-interface';\n\n@Injectable()\nexport class CatalogConstantsService {\n  private static readonly CAT_ADMIN = 'ADM';\n  private static readonly CAT_DASSAULT = 'DAV';\n  private static readonly CAT_PURCHASE_CONTRACT = 'PCT';\n  private static readonly CAT_LOGISTIC = 'LOG';\n  private static readonly CAT_HR = 'HR';\n\n  public static readonly CAT_NAME_QUALIFICATION = 'QUALIFICATION';\n\n  public constructor(private readonly translateService: TranslateService) {}\n\n  public fetchCatalogAreas(): LabelValue<string>[] {\n    return [\n      {\n        label: this.getInstantTranslation('catalogConstants.administration'),\n        value: CatalogConstantsService.CAT_ADMIN\n      },\n      { label: this.getInstantTranslation('catalogConstants.engg'), value: 'ENG' },\n      { label: this.getInstantTranslation('catalogConstants.fleet'), value: 'FLE' },\n      { label: this.getInstantTranslation('catalogConstants.maintenance'), value: 'MAI' },\n      { label: this.getInstantTranslation('catalogConstants.logistics'), value: CatalogConstantsService.CAT_LOGISTIC },\n      { label: this.getInstantTranslation('catalogConstants.hr'), value: CatalogConstantsService.CAT_HR },\n      { label: this.getInstantTranslation('catalogConstants.flightOpe'), value: 'FO' },\n      { label: this.getInstantTranslation('catalogConstants.businessPartner'), value: 'BP' },\n      { label: this.getInstantTranslation('catalogConstants.fmd'), value: 'FMD' },\n      { label: this.getInstantTranslation('catalogConstants.dav'), value: CatalogConstantsService.CAT_DASSAULT },\n      {\n        label: this.getInstantTranslation('catalogConstants.pct'),\n        value: CatalogConstantsService.CAT_PURCHASE_CONTRACT\n      }\n    ];\n  }\n\n  public fetchCatalogNames(): CatalogNameInterface[] {\n    let toReturn: CatalogNameInterface[] = [\n      /**\n       * ENGINEERING\n       */\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.alternativeType'),\n          value: 'ALTERNATIVE_TYPE'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.assetActionType'),\n          value: 'ASSET_ACTION_TYPE'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.assetActionTypeC2'),\n          value: 'ASSET_ACTION_TYPE_C2'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.compliance'), value: 'COMPLIANCE' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.evolutionLevel'), value: 'EVOLUTION_LEVEL' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.evolutionType'), value: 'EVOLUTION_TYPE' },\n        catalogArea: 'ENG',\n        key: 'getEvolutionTypeMap'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.exchangeType'), value: 'EXCHANGE_TYPE' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.funcLocationType'), value: 'FLOC_TYPE' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.itemFamilyCode'),\n          value: 'ITEM_FAMILY_CODE'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.itemType'), value: 'ITEM_TYPE' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.lifeRestricitionType'),\n          value: 'LIFE_RESTRICTION_TYPE'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.replacableUnitType'),\n          value: 'MAINTENANCE_TYPE'\n        },\n        catalogArea: 'ENG',\n        accessRightName: 'REPLACEABLE_UNIT_TYPE'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.periodicityType'),\n          value: 'PERIODICITY_TYPE'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.pnInterchangebility'),\n          value: 'PN_INTERCHANGEABILITY'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.pnProperty'), value: 'PN_PROPERTY' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.pnTraceability'), value: 'PN_TRACEABILITY' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.pnType'), value: 'PN_TYPE' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.position'), value: 'POSITION' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.refMeasureCat'),\n          value: 'REF_MEASURE_CATEGORY'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.sbClass'), value: 'SB_CLASSIFICATION' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.sbType'), value: 'SB_TYPE' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.additionalGuidelineSubType'),\n          value: 'ADDITIONAL_GUIDELINE_SUB_TYPE'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.structureType'), value: 'STRUCTURE_TYPE' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.taskApplicabilityCode'),\n          value: 'TASK_APPLICABILITY_CODE'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.taskEvolutionType'),\n          value: 'TASK_EVOLUTION_TYPE'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.taskItemType'), value: 'TASK_ITEM_TYPE' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.taskLink'), value: 'TASK_LINK' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.taskType'), value: 'TASK_TYPE' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.causeType'), value: 'CAUSE_TYPE' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.kPercent'), value: 'K_PERCENT' },\n        catalogArea: 'ENG',\n        component: KPercentComponent,\n        componentName: 'KPercentComponent'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.removalReason'), value: 'REMOVAL_REASON' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.repairability'), value: 'REPAIRABILITY' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.sparePartClassCode'),\n          value: 'SPARE_PART_CLASS_CODE'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.causeForRemoval'),\n          value: 'CAUSE_FOR_REMOVAL'\n        },\n        catalogArea: 'ENG',\n        component: CauseForRemovalComponent,\n        componentName: 'CauseForRemovalComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.damage'), value: 'DAMAGE' },\n        catalogArea: 'ENG',\n        component: DamageComponent,\n        componentName: 'DamageComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.localisation'), value: 'LOCALISATION' },\n        catalogArea: 'ENG',\n        component: LocalisationComponent,\n        componentName: 'LocalisationComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.unitOfMeasure'), value: 'UNIT_OF_MEASURE' },\n        catalogArea: 'ENG',\n        component: UnitOfMeasureComponent,\n        componentName: 'UnitOfMeasureComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.referenceMeasurement'),\n          value: 'REFERENCE_MEASUREMENT'\n        },\n        catalogArea: 'ENG',\n        component: ReferenceMeasurementComponent,\n        componentName: 'ReferenceMeasurementComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.technicalInterventionLevel'),\n          value: 'TECHNICAL_INTERVENTION_LEVEL'\n        },\n        catalogArea: 'ENG',\n        component: TechnicalInterventionLevelComponent,\n        componentName: 'TechnicalInterventionLevelComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.range'), value: 'RANGE' },\n        catalogArea: 'ENG',\n        component: RangeComponent,\n        componentName: 'RangeComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.taskGroup'), value: 'TASK_GROUP' },\n        catalogArea: 'ENG',\n        component: TaskGroupComponent,\n        componentName: 'TaskGroupComponent'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.defectLocation'), value: 'DEFECT_LOCATION' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.defectName'), value: 'DEFECT_NAME' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.maintenanceType'),\n          value: 'MAINTENANCE_TYPE'\n        },\n        catalogArea: 'ENG',\n        component: MaintenanceTypeComponent,\n        componentName: 'MaintenanceTypeComponent'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.familyFunction'), value: 'FAMILY_FUNCTION' },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.sbCounterLimitRefDate'),\n          value: 'SB_COUNTER_LIMIT_REF_DATE'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.sbCounterLimitType'),\n          value: 'SB_COUNTER_LIMIT_TYPE'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.functionCodeName'),\n          value: 'FUNCTION_CODE_NAME'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.familyConfiguration'),\n          value: 'FAMILY_CONFIGURATION'\n        },\n        catalogArea: 'ENG'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.docTaskCategory'),\n          value: 'DOC_TASK_CATEGORY'\n        },\n        key: 'getDocTaskCategoryMap',\n        catalogArea: 'ENG'\n      },\n      /**\n       * FLEET\n       */\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.documentAssetCategory'),\n          value: 'DOC_ASSET_CATEGORY'\n        },\n        catalogArea: 'FLE'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.transferReason'), value: 'TRANSFER_REASON' },\n        catalogArea: 'FLE'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.documentEventCategory'),\n          value: 'DOC_EVENT_CATEGORY'\n        },\n        catalogArea: 'FLE'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.enginePosition'), value: 'ENGINE_POSITION' },\n        catalogArea: 'FLE'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.eventCat'), value: 'EVENT_CATEGORY' },\n        catalogArea: 'FLE'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.eventCause'), value: 'EVENT_CAUSE' },\n        catalogArea: 'FLE'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.eventPriority'), value: 'EVENT_PRIORITY' },\n        catalogArea: 'FLE'\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.eventType'), value: 'EVENT_TYPE' },\n        catalogArea: 'FLE',\n        component: EventTypeComponent,\n        componentName: 'EventTypeComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.eventContext'), value: 'EVENT_CONTEXT' },\n        catalogArea: 'FLE',\n        component: EventContextComponent,\n        componentName: 'EventContextComponent',\n        isCreateEnabled: true\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.eventSymptom'), value: 'EVENT_SYMPTOM' },\n        catalogArea: 'FLE',\n        component: EventSymptomComponent,\n        componentName: 'EventSymptomComponent',\n        isCreateEnabled: true\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.e5Xmapping'), value: 'E5X_MAPPING' },\n        catalogArea: 'FLE',\n        component: E5xMappingComponent,\n        componentName: 'E5xMappingComponent',\n        isImportEnabled: true\n      },\n\n      /**\n       * MAINTENANCE\n       */\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.workOrderType'),\n          value: 'AIRM_WORK_ORDER_TYPES'\n        },\n        catalogArea: 'MAI'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.inspectionDecision'), value: 'DECISION_IS' },\n        catalogArea: 'MAI'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.workcopingDecision'),\n          value: 'DECISION_TWS'\n        },\n        catalogArea: 'MAI'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.priorityLevel'), value: 'PRIORITY_LEVEL' },\n        catalogArea: 'MAI'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.receptionInventory'),\n          value: 'RECEPTION_INVENTORY'\n        },\n        catalogArea: 'MAI'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.receptionPriority'),\n          value: 'RECEPTION_PRIORITY'\n        },\n        catalogArea: 'MAI'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.inspectionSentence'), value: 'SENTENCE_IS' },\n        catalogArea: 'MAI'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.workscopingSentence'),\n          value: 'SENTENCE_TWS'\n        },\n        catalogArea: 'MAI'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.mappingSenDec'),\n          value: 'MAPPING_SEN_DEC'\n        },\n        catalogArea: 'MAI'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.standardExchangeParameters'),\n          value: 'STD_EXCHANGE_PARAM'\n        },\n        catalogArea: 'MAI'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.workPackageType'),\n          value: 'WORK_PACKAGE_TYPE'\n        },\n        catalogArea: 'MAI'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.availabilityType'),\n          value: 'AVAILABILITY_TYPE'\n        },\n        catalogArea: 'MAI'\n      },\n      /**\n       * FLIGHT OPERATIONS\n       */\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.eventMissionType'),\n          value: 'EVENT_MISSION_TYPE'\n        },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.flightBase'), value: 'FLIGHT_BASE' },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.flightLabel'), value: 'FLIGHT_LABEL' },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.flightLoadCategory'),\n          value: 'FLIGHT_LOAD_CATEGORY'\n        },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.fuelType'), value: 'FUEL_TYPE' },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.missionPeriodicityType'),\n          value: 'MISSION_PERIODICITY_TYPE'\n        },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.operationalMissionCode'),\n          value: 'OPERATIONAL_MISSION_CODE'\n        },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.replenishmentType'),\n          value: 'REPLENISHMENT_TYPE'\n        },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.rmEngineOilType'),\n          value: 'RM_ENGINE_OIL_TYPE'\n        },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.rmOccurence'),\n          value: 'RM_OCCURRENCE'\n        },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.rmOrigin'),\n          value: 'RM_ORIGIN'\n        },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.rmSource'),\n          value: 'RM_SOURCE'\n        },\n        catalogArea: 'FO'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.area'),\n          value: 'FLIGHT_AREA'\n        },\n        catalogArea: 'FO'\n      },\n\n      /**\n       * BUSINESS PARTNER\n       */\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.customerLink'), value: 'CUSTOMER_LINK' },\n        catalogArea: 'BP'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.customerType'), value: 'CUSTOMER_TYPE' },\n        catalogArea: 'BP'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.documentPartnerCategory'),\n          value: 'DOC_PARTNER_CATEGORY'\n        },\n        catalogArea: 'BP'\n      },\n\n      /**\n       * FMD\n       */\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.fmdAuthorities'), value: 'FMD_AUTHORITIES' },\n        catalogArea: 'FMD'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.fmdCloseoutReason'),\n          value: 'FMD_CLOSEOUT_REASON'\n        },\n        catalogArea: 'FMD'\n      },\n      {\n        isProperty: true,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.fmdDOANumbers'), value: 'FMD_DOA_NUMBERS' },\n        catalogArea: 'FMD'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.fmdHighestDamage'),\n          value: 'FMD_HIGHEST_DAMAGE'\n        },\n        catalogArea: 'FMD'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.fmdInjuryLevel'),\n          value: 'FMD_INJURY_LEVEL'\n        },\n        catalogArea: 'FMD'\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.fmdProductionCertificat'),\n          value: 'FMD_PROD_CERTIFICATE'\n        },\n        catalogArea: 'FMD'\n      },\n      /**\n       * ADMIN\n       */\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.objectStatus'),\n          value: 'OBJECT_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.funcObjectStatus'),\n          value: 'FUNC_OBJECT_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.aircraftStatus'),\n          value: 'AIRCRAFT_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.operationalStatus'),\n          value: 'OPERATIONAL_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.groundEquipmentStatus'),\n          value: 'GROUND_EQUIPMENT_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.airmOperationStatus'),\n          value: 'AIRM_OPERATION_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.airmProjectStatus'),\n          value: 'AIRM_PROJECT_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.fmAttributeCategory'),\n          value: 'ATTRIBUTE_CATEGORY'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.countryZone'),\n          value: 'COUNTRY_ZONE'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.currency'),\n          value: 'CURRENCY'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.eventStatus'),\n          value: 'EVENT_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.flightStatus'),\n          value: 'FLIGHT_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.fmdStatus'),\n          value: 'FMD_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.mandant'),\n          value: 'MANDANT'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.edAttributeCategory'),\n          value: 'MCH_ATTRIBUTE_CATEGORY'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.menuSap'),\n          value: 'MENU_SAP'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.mvtStatus'),\n          value: 'MM_MVT_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.stockStatus'),\n          value: 'MM_STOCK_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.purchaseStatus'),\n          value: 'PURCHASE_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.sap'),\n          value: 'SAP'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.trendModelStatus'),\n          value: 'TREND_MODEL_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.workscopeStatus'),\n          value: 'WORKSCOPE_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.funcLocationStatus'),\n          value: 'FLOC_STATUS'\n        },\n        catalogArea: CatalogConstantsService.CAT_ADMIN\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.davMmsConfiguration'),\n          value: 'DAV_MMS_CONFIGURATION'\n        },\n        catalogArea: CatalogConstantsService.CAT_DASSAULT\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.davMmsHumsCounterCorrespondenceEqLevel'),\n          value: 'DAV_MMS_HUMS_COUNTER_CORRESPONDENCE_EQ_LEVEL'\n        },\n        catalogArea: CatalogConstantsService.CAT_DASSAULT\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.davMmsFieldParameters'),\n          value: 'DAV_MMS_FIELD_PARAMETERS'\n        },\n        catalogArea: CatalogConstantsService.CAT_DASSAULT\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.davMmsHumsCounterItemNumberCorrespondence'),\n          value: 'DAV_MMS_HUMS_COUNTER_ITEM_NUMBER_CORRESPONDENCE'\n        },\n        catalogArea: CatalogConstantsService.CAT_DASSAULT\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.davMmsCounterCorrespondenceAcLevel'),\n          value: 'DAV_MMS_HUMS_COUNTER_CORRESPONDENCE_AC_LEVEL'\n        },\n        catalogArea: CatalogConstantsService.CAT_DASSAULT\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.davMmsHumsCsnForFsc'),\n          value: 'DAV_MMS_HUMS_CSN_FOR_FSC'\n        },\n        catalogArea: CatalogConstantsService.CAT_DASSAULT\n      },\n      {\n        isProperty: true,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.unitOfIssue'),\n          value: 'UNIT_OF_ISSUE'\n        },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC\n      }\n    ];\n    toReturn = toReturn.concat(this.addToCatalogLogisitict());\n    toReturn = toReturn.concat(this.addToCatalogHumanResources());\n    toReturn = toReturn.concat(this.addToCatalogPurchaseContract());\n\n    return toReturn;\n  }\n\n  private addToCatalogPurchaseContract(): CatalogNameInterface[] {\n    const currentCatalog = CatalogConstantsService.CAT_PURCHASE_CONTRACT;\n\n    return [\n      this.createCatalogElement('pctContractStatus', 'PCT_CONTRACT_STATUS', currentCatalog),\n      this.createCatalogElement('pctContractSliceType', 'PCT_CONTRACT_SLICE_TYPE', currentCatalog),\n      this.createCatalogElement('pctContractSliceStatus', 'PCT_CONTRACT_SLICE_STATUS', currentCatalog),\n      this.createCatalogElement('pctContractItemType', 'PCT_CONTRACT_ITEM_TYPE', currentCatalog)\n    ];\n  }\n\n  private addToCatalogHumanResources(): CatalogNameInterface[] {\n    const currentCatalog = CatalogConstantsService.CAT_HR;\n\n    return [\n      this.createCatalogElement('absenceStatus', 'HR_ABSENCE_STATUS', currentCatalog),\n      this.createCatalogElement('absenceType', 'HR_ABSENCE_TYPE', currentCatalog),\n      this.createCatalogElement('categoryLevel', 'HR_CATEGORY_LEVEL', currentCatalog),\n      this.createCatalogElement('contractType', 'HR_CONTRACT_TYPE', currentCatalog),\n      this.createCatalogElement('evaluationType', 'HR_EVALUATION_TYPE', currentCatalog),\n      this.createCatalogElement('eventType', 'HR_EVENT_TYPE', currentCatalog),\n      this.createCatalogElement('expenseType', 'HR_EXPENSE_TYPE', currentCatalog),\n      this.createCatalogElement('hourlyCostDayType', 'HR_HC_DAY_TYPE', currentCatalog),\n      this.createCatalogElement('qualificationType', 'HR_QUALIFICATION_TYPE', currentCatalog),\n      this.createCatalogElement('salaryPeriod', 'HR_SALARY_PERIOD', currentCatalog),\n      this.createCatalogElement('trainingAskedBy', 'HR_TRAINING_ASKED_BY', currentCatalog),\n      this.createCatalogElement('hrCategoryType', 'HR_CATEGORY_TYPE', currentCatalog),\n      this.createCatalogElement('documentEmployeeCategory', 'HR_DOCUMENT_EMPLOYEE_CATEGORY', currentCatalog),\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.contract'), value: 'CONTRACT' },\n        catalogArea: 'HR',\n        component: ContractComponent,\n        componentName: 'ContractComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.workTemplate'), value: 'WORK_TEMPLATE' },\n        catalogArea: 'HR',\n        component: WorkTemplateComponent,\n        componentName: 'WorkTemplateComponent',\n        isCreateEnabled: true\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.qualification'),\n          value: CatalogConstantsService.CAT_NAME_QUALIFICATION\n        },\n        catalogArea: 'HR',\n        component: QualificationComponent,\n        componentName: 'QualificationComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.publicHoliday'), value: 'PUBLIC_HOLIDAY' },\n        catalogArea: 'HR',\n        component: PublicHolidayComponent,\n        componentName: 'PublicHolidayComponent'\n      }\n    ];\n  }\n\n  private addToCatalogLogisitict(): CatalogNameInterface[] {\n    const currentCatalog = CatalogConstantsService.CAT_LOGISTIC;\n\n    return [\n      this.createCatalogElement('companyType', 'MM_COMPANY_TYPE', currentCatalog),\n      this.createCatalogElement('stockOwner', 'MM_STOCK_OWNER', currentCatalog),\n      this.createCatalogElement('valuationGroupCode', 'MM_VALUATION_GROUP_CODE', currentCatalog),\n      this.createCatalogElement('warehouseType', 'MM_WAREHOUSE_TYPE', currentCatalog),\n      this.createCatalogElement('purchaseCategory', 'PURCHASE_CATEGORY', currentCatalog),\n      this.createCatalogElement('purchaseContractType', 'PURCHASE_CONTRACT_TYPE', currentCatalog),\n      this.createCatalogElement('purchaseType', 'PURCHASE_TYPE', currentCatalog),\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.storageBinType'),\n          value: 'STORAGE_BIN_TYPE'\n        },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC,\n        component: StorageBinTypeComponent,\n        componentName: 'StorageBinTypeComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.warehouseAreaType'),\n          value: 'WAREHOUSE_AREA_TYPE'\n        },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC,\n        component: StorageBinTypeComponent,\n        componentName: 'StorageBinTypeComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.workshopAreaType'),\n          value: 'WORKSHOP_AREA_TYPE'\n        },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC,\n        component: StorageBinTypeComponent,\n        componentName: 'StorageBinTypeComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.stockType'), value: 'STOCK_TYPE' },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC,\n        component: StockTypeComponent,\n        componentName: 'StockTypeComponent',\n        isCreateEnabled: true\n      },\n      {\n        isProperty: false,\n        catalogList: { label: this.getInstantTranslation('catalogConstants.valuationGroup'), value: 'VALUATION_GROUP' },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC,\n        component: ValuationGroupComponent,\n        componentName: 'ValuationGroupComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.storageCondition'),\n          value: 'STORAGE_CONDITION'\n        },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC,\n        component: StorageConditionComponent,\n        componentName: 'StorageConditionComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.receiptType'),\n          value: 'RECEIPT_TYPE'\n        },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC,\n        component: ReceiptTypeComponent,\n        componentName: 'ReceiptTypeComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.shipmentType'),\n          value: 'SHIPMENT_TYPE'\n        },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC,\n        component: ShipmentTypeComponent,\n        componentName: 'ShipmentType'\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.typesOfMovementType'),\n          value: 'TYPES_OF_MOVEMENT_TYPE'\n        },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC,\n        component: StockMovementTypeComponent,\n        componentName: 'TypesOfMovementType'\n      },\n      this.createCatalogElement('movementCategory', 'MM_MOVEMENT_CATEGORY', currentCatalog),\n      this.createCatalogElement('warehouseCategory', 'MM_WAREHOUSE_CATEGORY', currentCatalog),\n      this.createCatalogElement('workshopType', 'MM_WORKSHOP_TYPE', currentCatalog),\n      this.createCatalogElement('warehouseAreaCategory', 'MM_WAREHOUSE_AREA_CATEGORY', currentCatalog),\n      this.createCatalogElement('deliveryCategory', 'MM_DELIVERY_CATEGORY', currentCatalog),\n      this.createCatalogElement('deliveryElementType', 'MM_DELIVERY_ELEMENT_TYPE', currentCatalog),\n      this.createCatalogElement('logisticalCriticality', 'MM_LOGISTICAL_CRITICALITY', currentCatalog),\n      this.createCatalogElement('packageType', 'MM_PACKAGE_TYPE', currentCatalog),\n      this.createCatalogElement('packageStatus', 'MM_PACKAGE_STATUS', currentCatalog),\n      this.createCatalogElement('receiptFolderStatus', 'MM_RECEIPT_FOLDER_STATUS', currentCatalog),\n      this.createCatalogElement('shipmentFolderStatus', 'MM_SHIPMENT_FOLDER_STATUS', currentCatalog),\n      this.createCatalogElement('transferFolderStatus', 'MM_TRANSFER_FOLDER_STATUS', currentCatalog),\n      this.createCatalogElement('litigationFolderStatus', 'MM_LITIGATION_FOLDER_STATUS', currentCatalog),\n      this.createCatalogElement('boxEquipmentStatus', 'MM_BOX_EQUIPMENT_STATUS', currentCatalog),\n      this.createCatalogElement('batchEquipmentStatus', 'MM_BATCH_EQUIPMENT_STATUS', currentCatalog),\n      this.createCatalogElement('logisticalOperationStatus', 'MM_LOGISTICAL_OPERATION_STATUS', currentCatalog),\n      this.createCatalogElement('procurementRequestStatus', 'MM_PROCUREMENT_REQUEST_STATUS', currentCatalog),\n      this.createCatalogElement('logisticalOperation', 'MM_LOGISTICAL_OPERATION', currentCatalog),\n      this.createCatalogElement('litigationCategory', 'MM_LITIGATION_CATEGORY', currentCatalog),\n      this.createCatalogElement('litigationElementType', 'MM_LITIGATION_ELEMENT_TYPE', currentCatalog),\n      this.createCatalogElement('litigationActionStatus', 'MM_LITIGATION_ACTION_STATUS', currentCatalog),\n      this.createCatalogElement('workshopAreaCategory', 'MM_WORKSHOP_AREA_CATEGORY', currentCatalog),\n      this.createCatalogElement('serviceType', 'MM_SERVICE_TYPE', currentCatalog),\n      // TODO : find corresponding component\n      /* {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.dfReceipt'),\n          value: 'MM_DF_RECEIPT'\n        },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC,\n        component: StorageBinTypeComponent,\n        componentName: 'StorageBinTypeComponent'\n      },\n      {\n        isProperty: false,\n        catalogList: {\n          label: this.getInstantTranslation('catalogConstants.dfShipment'),\n          value: 'MM_DF_SHIPMENT'\n        },\n        catalogArea: CatalogConstantsService.CAT_LOGISTIC,\n        component: StorageBinTypeComponent,\n        componentName: 'StorageBinTypeComponent'\n      }, */\n      this.createCatalogElement('procurementRequestType', 'MM_PROCUREMENT_REQUEST_TYPE', currentCatalog)\n    ];\n  }\n\n  private createCatalogElement(name: string, value: string, area: string): CatalogNameInterface {\n    return {\n      isProperty: true,\n      catalogList: {\n        label: this.getInstantTranslation(`catalogConstants.${name}`),\n        value\n      },\n      catalogArea: area\n    };\n  }\n\n  private getInstantTranslation(label?: string): string {\n    return this.translateService.instant(label as string);\n  }\n}\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".e5xMappingList\\\" | translate }} ({{\\r\\n              e5xTableDataSource ? e5xTableDataSource.dataCount : 0\\r\\n            }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"e5xTableDataSource\\\">\\r\\n          <ng-template columnDef=\\\"defaultFieldBoolean\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.defaultFieldBoolean !== null && rowData.defaultFieldBoolean\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- FORM POPUP -->\\r\\n\\r\\n  <aw-import-popup\\r\\n    *ngIf=\\\"showImportPopup\\\"\\r\\n    [(display)]=\\\"showImportPopup\\\"\\r\\n    (refresh)=\\\"refreshOnImport($event)\\\"\\r\\n  ></aw-import-popup>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { E5XMappingRowDTO } from '../../../../../../shared/types/api-types/e5x-mapping-row-dto.interface';\r\nimport { FileContent } from '../../../../../../shared/types/api-types/file-content.interface';\r\nimport { FileUtils } from '../../../../../../shared/utils/file-utils';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { E5xMappingService } from './e5x-mapping.service';\r\n\r\n@Component({\r\n  selector: 'aw-e5x-mapping',\r\n  templateUrl: './e5x-mapping.component.html'\r\n})\r\nexport class E5xMappingComponent extends DynamicCatalog implements OnInit {\r\n  public e5xTableDataSource: TableDataSource<E5XMappingRowDTO>;\r\n  public fileToExport: FileContent;\r\n  public showImportPopup: boolean;\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    private readonly e5xMappingService: E5xMappingService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n    this.init();\r\n  }\r\n\r\n  public init(): void {\r\n    this.e5xTableDataSource = new TableDataSource({\r\n      allowMultiSelect: false,\r\n      columns: [\r\n        { field: 'e5xFieldId', translateKey: this.getTranslateKey('e5xFieldId'), alignment: ColumnAlignment.CENTER },\r\n        { field: 'e5xRefCode', translateKey: this.getTranslateKey('e5xRefCode'), alignment: ColumnAlignment.CENTER },\r\n        { field: 'e5xRefName', translateKey: this.getTranslateKey('e5xRefName'), alignment: ColumnAlignment.CENTER },\r\n        { field: 'awRefCode', translateKey: this.getTranslateKey('awRefCode'), alignment: ColumnAlignment.CENTER },\r\n        { field: 'awRefName', translateKey: this.getTranslateKey('awRefName'), alignment: ColumnAlignment.CENTER },\r\n        { field: 'awRefTable', translateKey: this.getTranslateKey('awRefTable'), alignment: ColumnAlignment.CENTER },\r\n        {\r\n          field: 'defaultFieldBoolean',\r\n          translateKey: this.getTranslateKey('defaultFieldBoolean'),\r\n          alignment: ColumnAlignment.CENTER\r\n        }\r\n      ],\r\n      data: [],\r\n      enableSelection: false\r\n    });\r\n\r\n    this.showImportPopup = false;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadE5xTableData();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'E5xMappingComponent';\r\n  }\r\n\r\n  public refresh() {\r\n    this.loadE5xTableData();\r\n  }\r\n\r\n  public export() {\r\n    this.e5xMappingService.getExcelFileOnExport().subscribe(\r\n      (result) => {\r\n        this.fileToExport = result;\r\n        if (!!this.fileToExport.fileContent && !!this.fileToExport.fileName) {\r\n          this.downLoadFiles(this.fileToExport.fileContent, this.fileToExport.fileName);\r\n        } else {\r\n          super.throwUnboundLocalError('export', '');\r\n        }\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFile'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public downLoadFiles(docFile: Uint8Array, docName: string): void {\r\n    FileUtils.downloadFile(docFile, docName);\r\n  }\r\n\r\n  public import() {\r\n    this.showImportPopup = true;\r\n  }\r\n\r\n  public loadE5xTableData(): void {\r\n    this.e5xTableDataSource.setData([]);\r\n    this.e5xMappingService.loadE5xTableData().subscribe(\r\n      (results) => {\r\n        results.forEach((e5x) => {\r\n          e5x.defaultFieldBoolean = e5x.defaultField === '1';\r\n        });\r\n        this.e5xTableDataSource.addData(results);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadingE5xTableData'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public refreshOnImport(): void {\r\n    this.refresh();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetBusinessApi } from '../../../../../../shared/api/fleet-business.api';\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { StandardImportApi } from '../../../../../../shared/api/standard-import.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { E5XMappingRowDTO } from '../../../../../../shared/types/api-types/e5x-mapping-row-dto.interface';\r\nimport { FileContent } from '../../../../../../shared/types/api-types/file-content.interface';\r\nimport { ReportDTO } from '../../../../../../shared/types/api-types/report-dto.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class E5xMappingService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly fleetBusinessApi: FleetBusinessApi,\r\n    private readonly standardImportApi: StandardImportApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public loadE5xTableData(): Observable<E5XMappingRowDTO[]> {\r\n    return super.post<void, E5XMappingRowDTO[]>(this.fleetManagementApi.findE5XMappingRowsByMandant);\r\n  }\r\n\r\n  public getExcelFileOnExport(): Observable<FileContent> {\r\n    return super.post<void, FileContent>(this.fleetBusinessApi.getImportE5xMappingReport);\r\n  }\r\n\r\n  public downloadTemplate(): Observable<Uint8Array> {\r\n    return super.post<void, Uint8Array>(this.standardImportApi.getImportE5XMappingXLS);\r\n  }\r\n\r\n  public importFile(input: FileContent): Observable<ReportDTO> {\r\n    return super.post<FileContent, ReportDTO>(this.standardImportApi.importE5XMappingFromExcel, input);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <span\\r\\n        class=\\\"form-label\\\"\\r\\n        (click)=\\\"openTemplate()\\\"\\r\\n        style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n      >\\r\\n        {{ getComponentName() + \\\".templateE5xMappingXls\\\" | translate }}\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".fileToImport\\\" | translate }} </label>\\r\\n      <div class=\\\"form-control form-control-with-btn\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"fileName\\\"\\r\\n          [disabled]=\\\"true\\\"\\r\\n          placeholder=\\\"No file selected.\\\"\\r\\n          style=\\\"width:79%\\\"\\r\\n        />\\r\\n        <p-fileUpload\\r\\n          #fileUploader\\r\\n          class=\\\"aw-fileupload aw-table-action\\\"\\r\\n          name=\\\"document[]\\\"\\r\\n          customUpload=\\\"true\\\"\\r\\n          mode=\\\"basic\\\"\\r\\n          auto=\\\"true\\\"\\r\\n          chooseLabel=\\\"{{ 'global.upload' | translate }}\\\"\\r\\n          (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n        ></p-fileUpload>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"close()\\\">{{ \\\"global.close\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"import()\\\" [disabled]=\\\"!fileName\\\">\\r\\n      {{ \\\"global.import\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FileUpload } from 'primeng/fileupload';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { BidoDocumentationDTO } from '../../../../../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { FileContent } from '../../../../../../../shared/types/api-types/file-content.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\nimport { FileUtils } from '../../../../../../../shared/utils/file-utils';\r\nimport { E5xMappingService } from '../e5x-mapping.service';\r\n\r\n@Component({\r\n  selector: 'aw-import-popup',\r\n  templateUrl: './import-popup.component.html'\r\n})\r\nexport class ImportPopupComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Output()\r\n  // tslint:disable-next-line:no-any\r\n  public refresh: EventEmitter<any>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public fileName: string;\r\n  public file: BidoDocumentationDTO;\r\n\r\n  public templateName: string;\r\n\r\n  public constructor(\r\n    private readonly e5xMappingService: E5xMappingService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'ImportPopupComponent');\r\n\r\n    this.refresh = new EventEmitter<string>();\r\n    this.templateName = 'Template_E5X_MAPPING.xls';\r\n  }\r\n\r\n  public ngOnInit() {\r\n    // todo\r\n  }\r\n\r\n  public openTemplate() {\r\n    this.e5xMappingService.downloadTemplate().subscribe((result) => {\r\n      this.downLoadFiles(result, this.templateName);\r\n    });\r\n  }\r\n\r\n  public downLoadFiles(docFile: Uint8Array, docName: string): void {\r\n    FileUtils.downloadFile(docFile, docName);\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (event.files) {\r\n      const file: File = event.files[0];\r\n      {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          this.file = {\r\n            docFile: fileContent,\r\n            docName: file.name,\r\n            docPublicationDate: new Date()\r\n          };\r\n          if (!!this.file.docName) {\r\n            this.fileName = this.file.docName;\r\n          }\r\n        });\r\n      }\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public import(): void {\r\n    const importInput: FileContent = {\r\n      fileName: this.templateName,\r\n      fileContent: this.file.docFile\r\n    };\r\n\r\n    this.e5xMappingService.importFile(importInput).subscribe(\r\n      (result) => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnImport'));\r\n        this.close();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnImport'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public close(): void {\r\n    this.display = false;\r\n    this.refresh.emit();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n\\r\\n        <i\\r\\n          class=\\\"fa fa-fw fa-info aw-icon aw-icon-with-border\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          pTooltip=\\\"{{ 'page.info' | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n        {{ serializationService.deserialize(componentData.objectId)[\\\"extensionCode\\\"] }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"reloadContext()\\\">\\r\\n      {{ \\\"global.refresh\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"editContext()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancelContext()\\\">\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveContext()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"grid-row\\\">\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".extensionCode\\\" | translate }} </label>\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"aw-input\\\"\\r\\n                      [(ngModel)]=\\\"context.extensionCode\\\"\\r\\n                      [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n                      maxlength=\\\"50\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group required\\\">\\r\\n                  <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".extensionName\\\" | translate }} </label>\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"aw-input\\\"\\r\\n                      [(ngModel)]=\\\"context.extensionName\\\"\\r\\n                      [disabled]=\\\"isReadOpenMode\\\"\\r\\n                      maxlength=\\\"100\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #mainDataAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".parameters\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content  grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">\\r\\n                  {{ componentData.componentId + \\\".parametersAssociatedToContact\\\" | translate }}\\r\\n                </h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <a-table [dataSource]=\\\"parametersTableDataSource\\\">\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && !parametersTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"addNewParameter()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && parametersTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editParameter()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && parametersTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"deleteParameters()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- POPUP ZONE -->\\r\\n\\r\\n<aw-parameters-popup\\r\\n  *ngIf=\\\"showParametersPopup\\\"\\r\\n  [(display)]=\\\"showParametersPopup\\\"\\r\\n  [parameter]=\\\"currentParameter\\\"\\r\\n  [isNewParameter]=\\\"isNewParameter\\\"\\r\\n  (onCreate)=\\\"createParameter($event)\\\"\\r\\n  (onUpdate)=\\\"updateParameter($event)\\\"\\r\\n></aw-parameters-popup>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../../../shared/services/tab.service';\r\nimport { SaveCatalogInput } from '../../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidoExtensionContextSymptomOutputDTO } from '../../../../../../../shared/types/api-output-types/catalog/bido-extension-context-symptom-output-dto.interface';\r\nimport { BidoExtensionDTOId } from '../../../../../../../shared/types/api-types/bido-extension-dto-id.interface';\r\nimport { BidoExtensionDTO } from '../../../../../../../shared/types/api-types/bido-extension-dto.interface';\r\nimport { BidoParameterDTO } from '../../../../../../../shared/types/api-types/bido-parameter-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { FormPageComponent } from '../../../../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../../../../shared/types/page-component-data.interface';\r\nimport { LabelValueUtils } from '../../../../../../../shared/utils/label-value-utils';\r\nimport { CatalogService } from '../../../../catalog.service';\r\nimport { EventContextService } from '../event-context.service';\r\n\r\n@Component({\r\n  selector: 'aw-event-context-form',\r\n  templateUrl: './event-context-form.component.html'\r\n})\r\nexport class EventContextFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public context: BidoExtensionDTO;\r\n  public parametersTableDataSource: TableDataSource<BidoParameterDTO>;\r\n\r\n  public currentParameter: BidoParameterDTO;\r\n  public currentParameterIndex: number | undefined;\r\n\r\n  public tabParametersId: string;\r\n  public currentTabId: string;\r\n\r\n  public existingContexts: string[];\r\n\r\n  public showParametersPopup: boolean;\r\n\r\n  public isNewParameter: boolean | undefined;\r\n\r\n  public eventContextAddedList: BidoExtensionContextSymptomOutputDTO;\r\n  public eventContextUpdatedList: BidoExtensionContextSymptomOutputDTO;\r\n\r\n  public units: LabelValue<string>[];\r\n\r\n  public eventContextTable: SearchResultsDTO<BidoExtensionDTO>;\r\n  public showSaveSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly eventContextService: EventContextService,\r\n    private readonly catalogService: CatalogService\r\n  ) {\r\n    super(ComponentOpenMode.Read, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.init();\r\n\r\n    this.getExistingContextCodes();\r\n\r\n    this.loadUnitDropdown();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    if (this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n\r\n      const eventContext = this.isCreateOpenMode\r\n        ? 'tab.createMode'\r\n        : !!this.componentData.objectId &&\r\n          this.serializationService.deserialize(this.componentData.objectId).extensionCode;\r\n\r\n      this.displayComponentContext(eventContext, this.isCreateOpenMode);\r\n\r\n      this.loadContext();\r\n    }\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'EventContextFormComponent';\r\n  }\r\n\r\n  public disableSave(): boolean {\r\n    const value =\r\n      this.context.extensionCode &&\r\n      this.context.extensionCode.trim().length !== 0 &&\r\n      this.context.extensionName &&\r\n      this.context.extensionName.trim().length !== 0\r\n        ? false\r\n        : true;\r\n\r\n    return value;\r\n  }\r\n\r\n  public loadUnitDropdown(): void {\r\n    this.eventContextService.loadUnitDropdown().subscribe((results) => {\r\n      results.forEach((res) => {\r\n        const unit: LabelValue<string> = {\r\n          label: '',\r\n          value: ''\r\n        };\r\n        unit.label = res.value;\r\n        unit.value = res.label;\r\n        this.units.push(unit);\r\n      });\r\n      this.parametersTableDataSource.dataSrc.forEach((element) => {\r\n        this.units.forEach((u) => {\r\n          if (element.unit === u.value) {\r\n            element.unit = u.label;\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private init(): void {\r\n    this.context = {};\r\n\r\n    this.currentTabId = this.tabParametersId;\r\n\r\n    this.parametersTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'code',\r\n          translateKey: this.getTranslateKey('code'),\r\n          alignment: ColumnAlignment.LEFT\r\n        },\r\n        {\r\n          field: 'name',\r\n          translateKey: this.getTranslateKey('name'),\r\n          alignment: ColumnAlignment.LEFT\r\n        },\r\n        {\r\n          field: 'unit',\r\n          translateKey: this.getTranslateKey('unit'),\r\n          alignment: ColumnAlignment.LEFT\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n    this.currentParameter = {};\r\n    this.currentParameterIndex = undefined;\r\n\r\n    this.existingContexts = [];\r\n\r\n    this.showParametersPopup = false;\r\n\r\n    this.isNewParameter = undefined;\r\n\r\n    this.eventContextAddedList = {};\r\n    this.eventContextUpdatedList = {};\r\n\r\n    this.units = [];\r\n\r\n    this.eventContextTable = { list: [], moreResults: false };\r\n\r\n    this.loadEventContextTableData();\r\n  }\r\n\r\n  public loadContext(): void {\r\n    if (!!this.componentData && !!this.componentData.objectId) {\r\n      const bidoExtensionDTOId: BidoExtensionDTOId = {\r\n        extensionCode: this.serializationService.deserialize(this.componentData.objectId).extensionCode\r\n      };\r\n      this.eventContextService.loadContext(bidoExtensionDTOId).subscribe((results) => {\r\n        this.eventContextService.loadUnitDropdown().subscribe((result) => {\r\n          if (!!results.bidoExtensionDTO) {\r\n            // this.units = result || [];\r\n            result.forEach((res) => {\r\n              const unit: LabelValue<string> = {\r\n                label: '',\r\n                value: ''\r\n              };\r\n              unit.label = res.value;\r\n              unit.value = res.label;\r\n              this.units.push(unit);\r\n            });\r\n\r\n            this.context = results.bidoExtensionDTO;\r\n            this.parametersTableDataSource.setData(results.bidoParameterDTO || []);\r\n            this.parametersTableDataSource.dataSrc.forEach((element) => {\r\n              this.units.forEach((u) => {\r\n                if (element.unit === u.value) {\r\n                  element.unit = u.label;\r\n                }\r\n              });\r\n            });\r\n          } else {\r\n            super.throwUnboundLocalError('loadContext', 'results.bidoExtensionDTO');\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public getExistingContextCodes(): void {\r\n    this.eventContextService.loadEventContextList().subscribe((results) => {\r\n      results.list.forEach((result) => {\r\n        if (result.extensionType === 'C' && !!result.extensionCode) {\r\n          this.existingContexts.push(result.extensionCode);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public reloadContext(): void {\r\n    this.init();\r\n    this.loadContext();\r\n  }\r\n\r\n  public editContext(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public loadEventContextTableData(): void {\r\n    this.eventContextService.loadEventContextList().subscribe((results) => {\r\n      results.list.forEach((result) => {\r\n        if (result.extensionType === 'C') {\r\n          this.eventContextTable.list.push(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveContext(): void {\r\n    if (\r\n      !this.context.extensionCode ||\r\n      !this.context.extensionName ||\r\n      this.context.extensionCode.trim().length === 0 ||\r\n      this.context.extensionName.trim().length === 0\r\n    ) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    } else {\r\n      this.eventContextService.loadEventContextList().subscribe((results) => {\r\n        results.list.forEach((result) => {\r\n          if (result.extensionType === 'C') {\r\n            this.eventContextTable.list.push(result);\r\n          }\r\n        });\r\n        const create = 0;\r\n        const update = 1;\r\n        this.context.extensionType = 'C';\r\n        this.parametersTableDataSource.dataSrc.forEach((parameter) => {\r\n          parameter.extensionCode = this.context.extensionCode;\r\n        });\r\n        if (!!this.componentData && this.componentData.openMode === create) {\r\n          if (!!this.context.extensionCode && this.existingContexts.includes(this.context.extensionCode)) {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('codeAlreadyExists'));\r\n          } else {\r\n            this.eventContextAddedList = {\r\n              bidoExtensionDTO: this.context,\r\n              bidoParameterDTO: this.parametersTableDataSource.dataSrc\r\n            };\r\n            const saveCatalogInput: SaveCatalogInput = {\r\n              bidoExtensionAddedList: this.eventContextAddedList\r\n            };\r\n\r\n            this.showSaveSpinner = true;\r\n            this.catalogService.saveCatalog(saveCatalogInput).subscribe(\r\n              (result) => {\r\n                this.eventContextTable = { list: [], moreResults: false };\r\n                this.messageService.showSuccessMessage('global.successOnSave');\r\n                if (!!this.componentData && !!this.context.extensionCode) {\r\n                  this.displayComponentContext(this.context.extensionCode, this.isCreateOpenMode);\r\n                  this.updateOpenMode(ComponentOpenMode.Write);\r\n                  this.componentData.openMode = 1;\r\n                  this.componentData.objectId = this.serializationService.serialize(this.context);\r\n                } else {\r\n                  super.throwUnboundLocalError('saveCatalog', 'this.context.extensionCode');\r\n                }\r\n                this.showSaveSpinner = false;\r\n              },\r\n              () => {\r\n                this.eventContextTable = { list: [], moreResults: false };\r\n                this.messageService.showErrorMessage('global.errorOnSave');\r\n                this.showSaveSpinner = false;\r\n              }\r\n            );\r\n          }\r\n        } else if (!!this.componentData && this.componentData.openMode === update) {\r\n          let dataInDB = false;\r\n          this.eventContextTable.list.forEach((context) => {\r\n            if (context.extensionCode === this.context.extensionCode) {\r\n              dataInDB = true;\r\n            }\r\n          });\r\n          if (dataInDB) {\r\n            this.eventContextUpdatedList = {\r\n              bidoExtensionDTO: this.context,\r\n              bidoParameterDTO: this.parametersTableDataSource.dataSrc\r\n            };\r\n\r\n            const saveCatalogInput: SaveCatalogInput = {\r\n              bidoExtensionUpdatedList: this.eventContextUpdatedList\r\n            };\r\n\r\n            this.showSaveSpinner = true;\r\n            this.catalogService.saveCatalog(saveCatalogInput).subscribe(\r\n              (result) => {\r\n                this.eventContextTable = { list: [], moreResults: false };\r\n                if (!!this.componentData) {\r\n                  this.messageService.showSuccessMessage('global.successOnSave');\r\n                  this.updateOpenMode(ComponentOpenMode.Write);\r\n                  this.componentData.objectId = this.serializationService.serialize(this.context);\r\n                } else {\r\n                  super.throwUnboundLocalError('saveCatalog', 'this.componentData');\r\n                }\r\n                this.showSaveSpinner = false;\r\n              },\r\n              () => {\r\n                this.eventContextTable = { list: [], moreResults: false };\r\n                this.messageService.showErrorMessage('global.errorOnSave');\r\n                this.showSaveSpinner = false;\r\n              }\r\n            );\r\n          } else {\r\n            this.messageService.showErrorMessage('global.internalServerError');\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public cancelContext(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n    this.reloadContext();\r\n  }\r\n\r\n  public openParametersTab(): void {\r\n    this.currentTabId = this.tabParametersId;\r\n  }\r\n\r\n  /*******\r\n   * Popup\r\n   *******/\r\n\r\n  public addNewParameter(): void {\r\n    this.showParametersPopup = true;\r\n    this.currentParameter = {};\r\n    this.isNewParameter = true;\r\n  }\r\n\r\n  public editParameter(): void {\r\n    this.showParametersPopup = true;\r\n    const parameterToUpdate = { ...this.parametersTableDataSource.dataSelection[0] };\r\n    LabelValueUtils.labelToStringValue<BidoParameterDTO>(parameterToUpdate, 'unit', this.units);\r\n    this.currentParameter = parameterToUpdate;\r\n\r\n    this.currentParameterIndex = this.parametersTableDataSource.dataSrc.findIndex(\r\n      (p) => p.code === this.currentParameter.code\r\n    );\r\n    this.isNewParameter = false;\r\n  }\r\n\r\n  public deleteParameters(): void {\r\n    this.parametersTableDataSource.deleteDataSelection();\r\n    this.parametersTableDataSource.dataSelection = [];\r\n    this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n  }\r\n\r\n  public createParameter(event: BidoParameterDTO) {\r\n    const inParameterTable = this.parametersTableDataSource.dataSrc.filter(\r\n      (parameter) => parameter.code === event.code\r\n    );\r\n    if (inParameterTable.length === 0) {\r\n      LabelValueUtils.stringValueToLabel<BidoParameterDTO>(event, 'unit', this.units);\r\n      this.parametersTableDataSource.addData([event]);\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('codeAlreadyExists'));\r\n    }\r\n  }\r\n\r\n  public updateParameter(event: BidoParameterDTO) {\r\n    if (this.currentParameterIndex !== null && this.currentParameterIndex !== undefined) {\r\n      LabelValueUtils.stringValueToLabel<BidoParameterDTO>(event, 'unit', this.units);\r\n      this.parametersTableDataSource.replaceData(\r\n        this.parametersTableDataSource.dataSrc[this.currentParameterIndex],\r\n        event\r\n      );\r\n      this.currentParameterIndex = undefined;\r\n      this.parametersTableDataSource.dataSelection = [];\r\n    } else {\r\n      super.throwUnboundLocalError('updateParameter', 'this.currentParameterInxex');\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".code\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"parameterObject.code\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"!isNewParameter\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".name\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"parameterObject.name\\\" maxlength=\\\"50\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".unit\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"units\\\"\\r\\n          [(ngModel)]=\\\"parameterObject.unit\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"associate()\\\" [disabled]=\\\"!enableAssociateButton()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { BidoParameterDTO } from '../../../../../../../../shared/types/api-types/bido-parameter-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../../shared/types/label-value.interface';\r\nimport { EventContextService } from '../../event-context.service';\r\n\r\n@Component({\r\n  selector: 'aw-parameters-popup',\r\n  templateUrl: './parameters-popup.component.html'\r\n})\r\nexport class ParametersPopupComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  public parameter: BidoParameterDTO | null;\r\n\r\n  @Input()\r\n  public isNewParameter: boolean;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<BidoParameterDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BidoParameterDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public units: LabelValue<string>[];\r\n\r\n  public parameterObject: BidoParameterDTO;\r\n\r\n  public constructor(private readonly eventContextService: EventContextService) {\r\n    super(ComponentOpenMode.Write, 'ParametersPopupComponent');\r\n\r\n    this.onCreate = new EventEmitter<BidoParameterDTO>();\r\n    this.onUpdate = new EventEmitter<BidoParameterDTO>();\r\n\r\n    this.units = [];\r\n\r\n    this.parameterObject = {};\r\n\r\n    this.loadUnitDropdown();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.parameter) {\r\n      this.parameter = {};\r\n    }\r\n  }\r\n\r\n  public loadUnitDropdown(): void {\r\n    this.eventContextService.loadUnitDropdown().subscribe((result) => {\r\n      // this.units = result || [];\r\n      result.forEach((res) => {\r\n        const unit: LabelValue<string> = {\r\n          label: '',\r\n          value: ''\r\n        };\r\n        unit.label = res.value;\r\n        unit.value = res.label;\r\n        this.units.push(unit);\r\n      });\r\n\r\n      this.units = this.units.sort((a, b) =>\r\n        !!a.label && !!b.label && a.value.toLowerCase() > b.value.toLowerCase() ? 1 : -1\r\n      );\r\n\r\n      if (this.parameter) {\r\n        this.parameterObject = this.parameter;\r\n      }\r\n    });\r\n  }\r\n\r\n  public associate(): void {\r\n    if (this.isNewParameter) {\r\n      this.onCreate.emit(this.parameterObject);\r\n      this.display = false;\r\n    } else {\r\n      this.onUpdate.emit(this.parameterObject);\r\n      this.display = false;\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public enableAssociateButton(): boolean {\r\n    if (\r\n      !!this.parameterObject.code &&\r\n      this.parameterObject.code.trim().length !== 0 &&\r\n      !!this.parameterObject.name &&\r\n      this.parameterObject.name.trim().length !== 0\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".eventContextList\\\" | translate }} ({{ eventContextTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"eventContextTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"eventContextTableDataSource.dataSelectionCount > 0\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteSelectedEventContext()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"eventContextTableDataSource.dataSelectionCount > 0\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"viewSelectedEventContext()\\\"\\r\\n            >\\r\\n              {{ \\\"global.open\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../../shared/services/tab.service';\r\nimport { BidoExtensionDTOId } from '../../../../../../shared/types/api-types/bido-extension-dto-id.interface';\r\nimport { BidoExtensionDTO } from '../../../../../../shared/types/api-types/bido-extension-dto.interface';\r\nimport { PageComponentData } from '../../../../../../shared/types/page-component-data.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { EventContextService } from './event-context.service';\r\n\r\n@Component({\r\n  selector: 'aw-event-context',\r\n  templateUrl: './event-context.component.html'\r\n})\r\nexport class EventContextComponent extends DynamicCatalog implements OnInit {\r\n  public eventContextTableDataSource: TableDataSource<BidoExtensionDTO>;\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    private readonly serializationService: SerializationService,\r\n    private readonly tabService: TabService,\r\n    // private readonly exportService: ExportService,\r\n    private readonly eventContextService: EventContextService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Write);\r\n\r\n    this.init();\r\n\r\n    this.loadEventContextTableData();\r\n  }\r\n\r\n  public init(): void {\r\n    this.eventContextTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'extensionCode',\r\n          translateKey: this.getTranslateKey('extensionCode')\r\n        },\r\n        {\r\n          field: 'extensionName',\r\n          translateKey: this.getTranslateKey('extensionName')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    // super.ngOnInit();\r\n    // this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'EventContextComponent';\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.init();\r\n    this.loadEventContextTableData();\r\n  }\r\n\r\n  public create(): void {\r\n    this.openEventContext(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  public openEventContext(object: BidoExtensionDTO | undefined, openMode: ComponentOpenMode): void {\r\n    if (!!object) {\r\n      const labelKey = 'transaction.EventContextFormComponent';\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: 'EventContextFormComponent',\r\n        objectId: this.serializationService.serialize(object),\r\n        openMode\r\n      };\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    } else {\r\n      const labelKey = 'transaction.EventContextFormComponent';\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: 'EventContextFormComponent',\r\n        objectId: undefined,\r\n        openMode\r\n      };\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    }\r\n  }\r\n\r\n  public loadEventContextTableData(): void {\r\n    this.eventContextTableDataSource.setData([]);\r\n    this.eventContextService.loadEventContextList().subscribe((results) => {\r\n      results.list.forEach((result) => {\r\n        if (result.extensionType === 'C') {\r\n          this.eventContextTableDataSource.addData([result]);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public viewSelectedEventContext(): void {\r\n    this.eventContextTableDataSource.dataSelection.forEach((context) => {\r\n      if (context) {\r\n        if (context.extensionCode && context.extensionCode.length > 0) {\r\n          this.openEventContext(context, ComponentOpenMode.Read);\r\n        } else {\r\n          this.messageService.showErrorMessage('errorOnMissingExtensionCode');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteSelectedEventContext(): void {\r\n    const partialMessageKey = 'global.deleteConfirmationMsg';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: partialMessageKey,\r\n      accept: () => {\r\n        const ids: BidoExtensionDTOId[] = [];\r\n        let id: BidoExtensionDTOId;\r\n        this.eventContextTableDataSource.dataSelection.forEach((context) => {\r\n          if (!!context.extensionCode) {\r\n            id = {\r\n              extensionCode: context.extensionCode\r\n            };\r\n            ids.push(id);\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSelectedEventContext', 'context.extensionCode');\r\n          }\r\n        });\r\n        this.eventContextService.deleteEventContexts(ids).subscribe(\r\n          (result) => {\r\n            this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n            this.refresh();\r\n          },\r\n          () => {\r\n            this.messageService.showErrorMessage('global.deleteErrorMsg');\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { BidoExtensionContextSymptomOutputDTO } from '../../../../../../shared/types/api-output-types/catalog/bido-extension-context-symptom-output-dto.interface';\r\nimport { BidoExtensionDTOId } from '../../../../../../shared/types/api-types/bido-extension-dto-id.interface';\r\nimport { BidoExtensionDTO } from '../../../../../../shared/types/api-types/bido-extension-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventContextService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public loadEventContextList(): Observable<SearchResultsDTO<BidoExtensionDTO>> {\r\n    return super.post<void, SearchResultsDTO<BidoExtensionDTO>>(\r\n      this.fleetManagementApi.findBidoExtensionsBySearchCriteria\r\n    );\r\n  }\r\n\r\n  public deleteEventContexts(input: BidoExtensionDTOId[]) {\r\n    return super.post<BidoExtensionDTOId[], void>(this.fleetManagementApi.removeBidoExtension, input);\r\n  }\r\n\r\n  public loadContext(input: BidoExtensionDTOId): Observable<BidoExtensionContextSymptomOutputDTO> {\r\n    return super.post<BidoExtensionDTOId, BidoExtensionContextSymptomOutputDTO>(\r\n      this.fleetManagementApi.findBidoExtensionParameter,\r\n      input\r\n    );\r\n  }\r\n\r\n  // Popup\r\n\r\n  public loadUnitDropdown(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.productStructureManagementApi.findAllBireUnitMeasures);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n\\r\\n        <i\\r\\n          class=\\\"fa fa-fw fa-info aw-icon aw-icon-with-border\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          pTooltip=\\\"{{ 'page.info' | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n        {{ serializationService.deserialize(componentData.objectId)[\\\"extensionCode\\\"] }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"reloadSymptom()\\\">\\r\\n      {{ \\\"global.refresh\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"editSymptom()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancelSymptom()\\\">\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveSymptom()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-row\\\">\\r\\n                  <div class=\\\"form-group required\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".extensionCode\\\" | translate }} </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"aw-input\\\"\\r\\n                        [(ngModel)]=\\\"symptom.extensionCode\\\"\\r\\n                        [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n                        maxlength=\\\"50\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group required\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".extensionName\\\" | translate }} </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"aw-input\\\"\\r\\n                        [(ngModel)]=\\\"symptom.extensionName\\\"\\r\\n                        [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        maxlength=\\\"100\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".parameters\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">\\r\\n                  {{ componentData.componentId + \\\".parametersAssociatedToContact\\\" | translate }}\\r\\n                </h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <a-table [dataSource]=\\\"parametersTableDataSource\\\">\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && !parametersTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"addNewParameter()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && parametersTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editParameter()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && parametersTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"deleteParameters()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- POPUP ZONE -->\\r\\n<aw-parameters-popup\\r\\n  *ngIf=\\\"showParametersPopup\\\"\\r\\n  [(display)]=\\\"showParametersPopup\\\"\\r\\n  [parameter]=\\\"currentParameter\\\"\\r\\n  [isNewParameter]=\\\"isNewParameter\\\"\\r\\n  (onCreate)=\\\"createParameter($event)\\\"\\r\\n  (onUpdate)=\\\"updateParameter($event)\\\"\\r\\n></aw-parameters-popup>\\r\\n\"","module.exports = \":host .criteria-checkboxes,\\n:host .form-group {\\n  margin-right: 20px;\\n  max-width: 15rem;\\n  min-width: 10rem;\\n  width: 20%; }\\n  :host .criteria-checkboxes:last-of-type,\\n  :host .form-group:last-of-type {\\n    margin-right: 0; }\\n  :host .search-criteria-primary {\\n  justify-content: flex-start; }\\n  :host .search-criteria-primary .criteria-checkboxes {\\n    display: flex;\\n    flex-direction: column; }\\n  :host .search-criteria-primary .criteria-checkboxes p-checkbox:first-of-type {\\n      margin-top: 30px; }\\n  :host .search-criteria-primary .criteria-checkboxes p-checkbox:nth-of-type(2) {\\n      margin-top: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi9jYXRhbG9nL2R5bmFtaWMtY2F0YWxvZy1jb21wb25lbnRzL2ZsZWV0L2V2ZW50LXN5bXB0b20vZXZlbnQtc3ltcHRvbS1mb3JtL2Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZ2l0aHViX3BhZ2VzL3NyY1xcYXBwXFxtYWluXFxhZG1pbmlzdHJhdGlvblxcY2F0YWxvZ1xcZHluYW1pYy1jYXRhbG9nLWNvbXBvbmVudHNcXGZsZWV0XFxldmVudC1zeW1wdG9tXFxldmVudC1zeW1wdG9tLWZvcm1cXGV2ZW50LXN5bXB0b20tZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFHSSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixVQUFVLEVBQUE7RUFOZDs7SUFTTSxlQUFlLEVBQUE7RUFUckI7RUFjSSwyQkFBMkIsRUFBQTtFQWQvQjtJQWlCTSxhQUFhO0lBQ2Isc0JBQXNCLEVBQUE7RUFsQjVCO01BcUJRLGdCQUFnQixFQUFBO0VBckJ4QjtNQXlCUSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2FkbWluaXN0cmF0aW9uL2NhdGFsb2cvZHluYW1pYy1jYXRhbG9nLWNvbXBvbmVudHMvZmxlZXQvZXZlbnQtc3ltcHRvbS9ldmVudC1zeW1wdG9tLWZvcm0vZXZlbnQtc3ltcHRvbS1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIC5jcml0ZXJpYS1jaGVja2JveGVzLFxyXG4gIC5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgIG1heC13aWR0aDogMTVyZW07XHJcbiAgICBtaW4td2lkdGg6IDEwcmVtO1xyXG4gICAgd2lkdGg6IDIwJTtcclxuXHJcbiAgICAmOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zZWFyY2gtY3JpdGVyaWEtcHJpbWFyeSB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcblxyXG4gICAgLmNyaXRlcmlhLWNoZWNrYm94ZXMge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgICAgcC1jaGVja2JveDpmaXJzdC1vZi10eXBlIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICBwLWNoZWNrYm94Om50aC1vZi10eXBlKDIpIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../../../shared/services/tab.service';\r\nimport { SaveCatalogInput } from '../../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidoExtensionContextSymptomOutputDTO } from '../../../../../../../shared/types/api-output-types/catalog/bido-extension-context-symptom-output-dto.interface';\r\nimport { BidoExtensionDTOId } from '../../../../../../../shared/types/api-types/bido-extension-dto-id.interface';\r\nimport { BidoExtensionDTO } from '../../../../../../../shared/types/api-types/bido-extension-dto.interface';\r\nimport { BidoParameterDTO } from '../../../../../../../shared/types/api-types/bido-parameter-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { FormPageComponent } from '../../../../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../../../../shared/types/page-component-data.interface';\r\nimport { LabelValueUtils } from '../../../../../../../shared/utils/label-value-utils';\r\nimport { CatalogService } from '../../../../catalog.service';\r\nimport { EventContextService } from '../../event-context/event-context.service';\r\nimport { EventSymptomService } from '../event-symptom.service';\r\n\r\n@Component({\r\n  selector: 'aw-event-symptom-form',\r\n  templateUrl: './event-symptom-form.component.html',\r\n  styleUrls: ['./event-symptom-form.component.scss']\r\n})\r\nexport class EventSymptomFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public symptom: BidoExtensionDTO;\r\n\r\n  public parametersTableDataSource: TableDataSource<BidoParameterDTO>;\r\n\r\n  public currentParameter: BidoParameterDTO;\r\n  public currentParameterIndex: number | undefined;\r\n\r\n  public tabParametersId: string;\r\n  public currentTabId: string;\r\n\r\n  public existingSymptoms: string[];\r\n\r\n  public showParametersPopup: boolean;\r\n\r\n  public isNewParameter: boolean | undefined;\r\n\r\n  public eventSymptomAddedList: BidoExtensionContextSymptomOutputDTO;\r\n  public eventSymptomUpdatedList: BidoExtensionContextSymptomOutputDTO;\r\n\r\n  public eventSymptomTable: SearchResultsDTO<BidoExtensionDTO>;\r\n\r\n  public units: LabelValue<string>[];\r\n\r\n  public showSaveSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly eventSymptomService: EventSymptomService,\r\n    private readonly catalogService: CatalogService,\r\n    private readonly eventContextService: EventContextService\r\n  ) {\r\n    super(ComponentOpenMode.Read, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    if (!this.componentData) {\r\n      this.loadUnitDropdown();\r\n    }\r\n    this.init();\r\n\r\n    this.getExistingSymptomCodes();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    if (this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n\r\n      const eventSymptom = this.isCreateOpenMode\r\n        ? 'tab.createMode'\r\n        : !!this.componentData.objectId &&\r\n          this.serializationService.deserialize(this.componentData.objectId).extensionCode;\r\n\r\n      this.displayComponentContext(eventSymptom, this.isCreateOpenMode);\r\n\r\n      this.loadSymptom();\r\n    }\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'EventSymptomFormComponent';\r\n  }\r\n\r\n  private init(): void {\r\n    this.eventSymptomTable = { list: [], moreResults: false };\r\n    this.symptom = {};\r\n\r\n    this.currentTabId = this.tabParametersId;\r\n\r\n    this.parametersTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'code',\r\n          translateKey: this.getTranslateKey('code')\r\n        },\r\n        {\r\n          field: 'name',\r\n          translateKey: this.getTranslateKey('name')\r\n        },\r\n        {\r\n          field: 'unit',\r\n          translateKey: this.getTranslateKey('unit')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.currentParameter = {};\r\n    this.currentParameterIndex = undefined;\r\n\r\n    this.showParametersPopup = false;\r\n\r\n    this.existingSymptoms = [];\r\n\r\n    this.isNewParameter = undefined;\r\n\r\n    this.eventSymptomAddedList = {\r\n      bidoExtensionDTO: {},\r\n      bidoParameterDTO: []\r\n    };\r\n    this.eventSymptomUpdatedList = {};\r\n\r\n    this.units = [];\r\n\r\n    this.loadEventSymptomTableData();\r\n  }\r\n\r\n  public loadSymptom(): void {\r\n    this.parametersTableDataSource.setData([]);\r\n    if (!!this.componentData && !!this.componentData.objectId) {\r\n      const bidoExtensionDTOId: BidoExtensionDTOId = {\r\n        extensionCode: this.serializationService.deserialize(this.componentData.objectId).extensionCode\r\n      };\r\n      this.eventSymptomService.loadSymptom(bidoExtensionDTOId).subscribe((results) => {\r\n        this.eventContextService.loadUnitDropdown().subscribe((result) => {\r\n          if (!!results.bidoExtensionDTO) {\r\n            result.forEach((res) => {\r\n              const unit: LabelValue<string> = {\r\n                label: '',\r\n                value: ''\r\n              };\r\n              unit.label = res.value;\r\n              unit.value = res.label;\r\n              this.units.push(unit);\r\n            });\r\n\r\n            this.symptom = results.bidoExtensionDTO;\r\n            if (!!results.bidoParameterDTO) {\r\n              results.bidoParameterDTO.forEach((element) => {\r\n                this.units.forEach((u) => {\r\n                  if (element.unit === u.value) {\r\n                    element.unit = u.label;\r\n                  }\r\n                });\r\n              });\r\n            }\r\n            this.parametersTableDataSource.addData(results.bidoParameterDTO || []);\r\n          } else {\r\n            super.throwUnboundLocalError('loadSymptom', 'results.bidoExtensionDTO');\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public getExistingSymptomCodes(): void {\r\n    this.eventSymptomService.loadEventSymptomList().subscribe((results) => {\r\n      results.list.forEach((result) => {\r\n        if (result.extensionType === 'S' && !!result.extensionCode) {\r\n          this.existingSymptoms.push(result.extensionCode);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public reloadSymptom(): void {\r\n    this.init();\r\n    this.loadSymptom();\r\n  }\r\n\r\n  public editSymptom(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public loadEventSymptomTableData(): void {\r\n    this.eventSymptomService.loadEventSymptomList().subscribe((results) => {\r\n      results.list.forEach((result) => {\r\n        if (result.extensionType === 'C') {\r\n          this.eventSymptomTable.list.push(result);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public saveSymptom(): void {\r\n    if (\r\n      !this.symptom.extensionCode ||\r\n      !this.symptom.extensionName ||\r\n      this.symptom.extensionCode.trim().length === 0 ||\r\n      this.symptom.extensionName.trim().length === 0\r\n    ) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    } else {\r\n      this.eventSymptomService.loadEventSymptomList().subscribe((results) => {\r\n        results.list.forEach((result) => {\r\n          if (result.extensionType === 'S') {\r\n            this.eventSymptomTable.list.push(result);\r\n          }\r\n        });\r\n        const create = 0;\r\n        const update = 1;\r\n        this.symptom.extensionType = 'S';\r\n        this.parametersTableDataSource.dataSrc.forEach((parameter) => {\r\n          parameter.extensionCode = this.symptom.extensionCode;\r\n        });\r\n        this.parametersTableDataSource.setData(this.parametersTableDataSource.dataSrc);\r\n        if (!!this.componentData && this.componentData.openMode === create) {\r\n          if (!!this.symptom.extensionCode && this.existingSymptoms.includes(this.symptom.extensionCode)) {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('codeAlreadyExists'));\r\n          } else {\r\n            this.eventSymptomAddedList = {\r\n              bidoExtensionDTO: this.symptom,\r\n              bidoParameterDTO: this.parametersTableDataSource.dataSrc\r\n            };\r\n            const saveCatalogInput: SaveCatalogInput = {\r\n              bidoExtensionAddedList: this.eventSymptomAddedList\r\n            };\r\n\r\n            this.showSaveSpinner = true;\r\n            this.catalogService.saveCatalog(saveCatalogInput).subscribe(\r\n              (_result) => {\r\n                this.eventSymptomTable = { list: [], moreResults: false };\r\n                this.messageService.showSuccessMessage('global.successOnSave');\r\n                if (!!this.componentData && !!this.symptom.extensionCode) {\r\n                  this.displayComponentContext(this.symptom.extensionCode, this.isCreateOpenMode);\r\n                  this.updateOpenMode(ComponentOpenMode.Write);\r\n                  this.componentData.openMode = 1;\r\n                  this.componentData.objectId = this.serializationService.serialize(this.symptom);\r\n                } else {\r\n                  super.throwUnboundLocalError('saveCatalog', 'this.symptom.extensionCode');\r\n                }\r\n                this.showSaveSpinner = false;\r\n              },\r\n              () => {\r\n                this.eventSymptomTable = { list: [], moreResults: false };\r\n                this.messageService.showErrorMessage('global.errorOnSave');\r\n                this.showSaveSpinner = false;\r\n              }\r\n            );\r\n          }\r\n        } else if (!!this.componentData && this.componentData.openMode === update) {\r\n          let dataInDB = false;\r\n          this.eventSymptomTable.list.forEach((symptom) => {\r\n            if (symptom.extensionCode === this.symptom.extensionCode) {\r\n              dataInDB = true;\r\n            }\r\n          });\r\n          if (dataInDB) {\r\n            this.eventSymptomUpdatedList = {\r\n              bidoExtensionDTO: this.symptom,\r\n              bidoParameterDTO: this.parametersTableDataSource.dataSrc\r\n            };\r\n\r\n            const saveCatalogInput: SaveCatalogInput = {\r\n              bidoExtensionUpdatedList: this.eventSymptomUpdatedList\r\n            };\r\n\r\n            this.showSaveSpinner = true;\r\n            this.catalogService.saveCatalog(saveCatalogInput).subscribe(\r\n              (_result) => {\r\n                this.eventSymptomTable = { list: [], moreResults: false };\r\n                if (!!this.componentData) {\r\n                  this.messageService.showSuccessMessage('global.successOnSave');\r\n                  this.updateOpenMode(ComponentOpenMode.Write);\r\n                  this.componentData.objectId = this.serializationService.serialize(this.symptom);\r\n                } else {\r\n                  super.throwUnboundLocalError('saveCatalog', 'this.componentData');\r\n                }\r\n                this.showSaveSpinner = false;\r\n              },\r\n              () => {\r\n                this.eventSymptomTable = { list: [], moreResults: false };\r\n                this.messageService.showErrorMessage('global.errorOnSave');\r\n                this.showSaveSpinner = false;\r\n              }\r\n            );\r\n          } else {\r\n            this.messageService.showErrorMessage('global.internalServerError');\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public cancelSymptom(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n    this.reloadSymptom();\r\n  }\r\n\r\n  public openParametersTab(): void {\r\n    this.currentTabId = this.tabParametersId;\r\n  }\r\n\r\n  public loadUnitDropdown(): void {\r\n    this.eventContextService.loadUnitDropdown().subscribe((result) => {\r\n      result.forEach((res) => {\r\n        const unit: LabelValue<string> = {\r\n          label: '',\r\n          value: ''\r\n        };\r\n        unit.label = res.value;\r\n        unit.value = res.label;\r\n        this.units.push(unit);\r\n      });\r\n    });\r\n  }\r\n\r\n  /*******\r\n   * Popup\r\n   *******/\r\n\r\n  public addNewParameter(): void {\r\n    this.showParametersPopup = true;\r\n    this.currentParameter = {};\r\n    this.isNewParameter = true;\r\n  }\r\n\r\n  public editParameter(): void {\r\n    this.showParametersPopup = true;\r\n    const parameterToUpdate = this.parametersTableDataSource.dataSelection[0];\r\n    LabelValueUtils.labelToStringValue<BidoParameterDTO>(parameterToUpdate, 'unit', this.units);\r\n    this.currentParameter = parameterToUpdate;\r\n    this.currentParameterIndex = this.parametersTableDataSource.dataSrc.findIndex(\r\n      (p) => p.code === this.currentParameter.code\r\n    );\r\n    this.isNewParameter = false;\r\n  }\r\n\r\n  public deleteParameters(): void {\r\n    this.parametersTableDataSource.deleteDataSelection();\r\n    this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n  }\r\n\r\n  public createParameter(event: BidoParameterDTO) {\r\n    const inParameterTable = this.parametersTableDataSource.dataSrc.filter(\r\n      (parameter) => parameter.code === event.code\r\n    );\r\n    if (inParameterTable.length === 0) {\r\n      LabelValueUtils.stringValueToLabel<BidoParameterDTO>(event, 'unit', this.units);\r\n      this.parametersTableDataSource.addData([event]);\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('codeAlreadyExists'));\r\n    }\r\n  }\r\n\r\n  public updateParameter(event: BidoParameterDTO) {\r\n    if (this.currentParameterIndex !== null && this.currentParameterIndex !== undefined) {\r\n      LabelValueUtils.stringValueToLabel<BidoParameterDTO>(event, 'unit', this.units);\r\n      this.parametersTableDataSource.replaceData(\r\n        this.parametersTableDataSource.dataSrc[this.currentParameterIndex],\r\n        event\r\n      );\r\n      this.currentParameterIndex = undefined;\r\n      this.parametersTableDataSource.dataSelection = [];\r\n    } else {\r\n      super.throwUnboundLocalError('updateParameter', 'this.currentParameterIndex');\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".eventSymptomList\\\" | translate }} ({{ eventSymptomTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"eventSymptomTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"eventSymptomTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"deleteSelectedEventSymptom()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"eventSymptomTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"viewSelectedEventSymptom()\\\"\\r\\n            >\\r\\n              {{ \\\"global.open\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../../shared/services/tab.service';\r\nimport { BidoExtensionDTOId } from '../../../../../../shared/types/api-types/bido-extension-dto-id.interface';\r\nimport { BidoExtensionDTO } from '../../../../../../shared/types/api-types/bido-extension-dto.interface';\r\nimport { PageComponentData } from '../../../../../../shared/types/page-component-data.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { EventSymptomService } from './event-symptom.service';\r\n\r\n@Component({\r\n  selector: 'aw-event-symptom',\r\n  templateUrl: './event-symptom.component.html'\r\n})\r\nexport class EventSymptomComponent extends DynamicCatalog implements OnInit {\r\n  public eventSymptomTableDataSource: TableDataSource<BidoExtensionDTO>;\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    private readonly serializationService: SerializationService,\r\n    private readonly tabService: TabService,\r\n    private readonly eventSymptomService: EventSymptomService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Write);\r\n\r\n    this.init();\r\n\r\n    this.loadEventSymptomTableData();\r\n  }\r\n\r\n  public init(): void {\r\n    this.eventSymptomTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'extensionCode',\r\n          translateKey: this.getTranslateKey('extensionCode')\r\n        },\r\n        {\r\n          field: 'extensionName',\r\n          translateKey: this.getTranslateKey('extensionName')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    // super.ngOnInit();\r\n    // this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'EventSymptomComponent';\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.init();\r\n    this.loadEventSymptomTableData();\r\n    this.eventSymptomTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  public create(): void {\r\n    this.openEventSymptom(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  public openEventSymptom(object: BidoExtensionDTO | undefined, openMode: ComponentOpenMode): void {\r\n    if (!!object) {\r\n      const labelKey = 'transaction.EventSymptomFormComponent';\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: 'EventSymptomFormComponent',\r\n        objectId: this.serializationService.serialize(object),\r\n        openMode\r\n      };\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    } else {\r\n      const labelKey = 'transaction.EventSymptomFormComponent';\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: 'EventSymptomFormComponent',\r\n        objectId: undefined,\r\n        openMode\r\n      };\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    }\r\n  }\r\n\r\n  public loadEventSymptomTableData(): void {\r\n    this.eventSymptomTableDataSource.setData([]);\r\n    this.eventSymptomService.loadEventSymptomList().subscribe((results) => {\r\n      results.list.forEach((result) => {\r\n        if (result.extensionType === 'S') {\r\n          this.eventSymptomTableDataSource.addData([result]);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public viewSelectedEventSymptom(): void {\r\n    this.eventSymptomTableDataSource.dataSelection.forEach((symptom) => {\r\n      if (symptom) {\r\n        if (symptom.extensionCode && symptom.extensionCode.length > 0) {\r\n          this.openEventSymptom(symptom, ComponentOpenMode.Read);\r\n        } else {\r\n          this.messageService.showErrorMessage('errorOnMissingExtensionCode');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteSelectedEventSymptom(): void {\r\n    const partialMessageKey = 'global.deleteConfirmationMsg';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: partialMessageKey,\r\n      accept: () => {\r\n        const ids: BidoExtensionDTOId[] = [];\r\n        let id: BidoExtensionDTOId;\r\n        this.eventSymptomTableDataSource.dataSelection.forEach((symptom) => {\r\n          if (!!symptom.extensionCode) {\r\n            id = {\r\n              extensionCode: symptom.extensionCode\r\n            };\r\n            ids.push(id);\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSelectedEventSymptom', 'symptom.extensionCode');\r\n          }\r\n        });\r\n        this.eventSymptomService.deleteEventSymptoms(ids).subscribe(\r\n          (result) => {\r\n            this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n            this.refresh();\r\n          },\r\n          () => {\r\n            this.messageService.showErrorMessage('global.deleteErrorMsg');\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { BidoExtensionContextSymptomOutputDTO } from '../../../../../../shared/types/api-output-types/catalog/bido-extension-context-symptom-output-dto.interface';\r\nimport { BidoExtensionDTOId } from '../../../../../../shared/types/api-types/bido-extension-dto-id.interface';\r\nimport { BidoExtensionDTO } from '../../../../../../shared/types/api-types/bido-extension-dto.interface';\r\nimport { BidoParameterDTOId } from '../../../../../../shared/types/api-types/bido-parameter-dto-id.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventSymptomService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public loadEventSymptomList(): Observable<SearchResultsDTO<BidoExtensionDTO>> {\r\n    return super.post<void, SearchResultsDTO<BidoExtensionDTO>>(\r\n      this.fleetManagementApi.findBidoExtensionsBySearchCriteria\r\n    );\r\n  }\r\n\r\n  public deleteEventSymptoms(input: BidoExtensionDTOId[]) {\r\n    return super.post<BidoExtensionDTOId[], void>(this.fleetManagementApi.removeBidoExtension, input);\r\n  }\r\n\r\n  public loadSymptom(input: BidoExtensionDTOId): Observable<BidoExtensionContextSymptomOutputDTO> {\r\n    return super.post<BidoExtensionDTOId, BidoExtensionContextSymptomOutputDTO>(\r\n      this.fleetManagementApi.findBidoExtensionParameter,\r\n      input\r\n    );\r\n  }\r\n\r\n  // Popup\r\n\r\n  public loadUnitDropdown(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.productStructureManagementApi.findAllBireUnitMeasures);\r\n  }\r\n\r\n  public deleteParameters(input: BidoParameterDTOId[]): Observable<boolean> {\r\n    return super.post<BidoParameterDTOId[], boolean>(this.fleetManagementApi.parameterAlreadyUsedInEvent, input);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".typeCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"eventType.typeCode\\\"\\r\\n          [disabled]=\\\"!isNewEventType\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".typeCategory\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"typeCategories\\\"\\r\\n          [(ngModel)]=\\\"eventType.typeCategory\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".criticality\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-checkbox class=\\\"aw-checkbox\\\" binary=\\\"true\\\" [(ngModel)]=\\\"eventType.criticality\\\"></p-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".typeDescription\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          pInputTextarea\\r\\n          [rows]=\\\"3\\\"\\r\\n          [(ngModel)]=\\\"eventType.typeDescription\\\"\\r\\n          maxlength=\\\"300\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"associate()\\\" [disabled]=\\\"!enableAssociateButton()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../../shared/services/properties.service';\r\nimport { BidoNotificationTypeDTO } from '../../../../../../../shared/types/api-types/bido-notification-type-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../shared/types/label-value.interface';\r\n\r\n@Component({\r\n  selector: 'aw-event-type-form-popup',\r\n  templateUrl: './event-type-form-popup.component.html'\r\n})\r\nexport class EventTypeFormPopupComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  public eventType: BidoNotificationTypeDTO;\r\n\r\n  @Input()\r\n  public isNewEventType: boolean;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<BidoNotificationTypeDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BidoNotificationTypeDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public typeCategories: LabelValue<string>[];\r\n\r\n  public displayValue: boolean;\r\n\r\n  public constructor(\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'EventTypeFormPopupComponent');\r\n\r\n    this.onCreate = new EventEmitter<BidoNotificationTypeDTO>();\r\n    this.onUpdate = new EventEmitter<BidoNotificationTypeDTO>();\r\n\r\n    this.loadEventCategoryDropdown();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.eventType) {\r\n      this.eventType = {};\r\n    }\r\n  }\r\n\r\n  public loadEventCategoryDropdown(): void {\r\n    this.propertiesService.getValue('getEventCategoryMap').subscribe(\r\n      (results) => {\r\n        this.typeCategories = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('.errorOnGetCategories'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public associate(): void {\r\n    if (!!this.eventType) {\r\n      if (this.isNewEventType) {\r\n        this.onCreate.emit(this.eventType);\r\n        this.display = false;\r\n      } else {\r\n        this.onUpdate.emit(this.eventType);\r\n        this.display = false;\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('associate', 'this.eventType');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public enableAssociateButton(): boolean {\r\n    if (!!this.eventType && !!this.eventType.typeCode && this.eventType.typeCode.trim().length !== 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".eventTypesList\\\" | translate }} ({{ eventTypesTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"eventTypesTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"!eventTypesTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addEventType()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"eventTypesTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"deleteSelectedEventType()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"eventTypesTableDataSource.dataSelectionCount === 1\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editSelectedEventType()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"criticality\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.criticality !== null && rowData.criticality\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- FORM POPUP -->\\r\\n\\r\\n  <aw-event-type-form-popup\\r\\n    *ngIf=\\\"showEventTypeForm\\\"\\r\\n    [(display)]=\\\"showEventTypeForm\\\"\\r\\n    [eventType]=\\\"currentEventType\\\"\\r\\n    [isNewEventType]=\\\"isNewEventType\\\"\\r\\n    (onCreate)=\\\"createEventType($event)\\\"\\r\\n    (onUpdate)=\\\"updateEventType($event)\\\"\\r\\n  ></aw-event-type-form-popup>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidoNotificationTypeDTO } from '../../../../../../shared/types/api-types/bido-notification-type-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { LabelValueUtils } from '../../../../../../shared/utils/label-value-utils';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { EventTypeService } from './event-type.service';\r\n\r\ninterface EventTypeDTO {\r\n  typeCode?: string;\r\n  typeDescription?: string;\r\n  typeCategory?: string;\r\n  criticality?: boolean;\r\n  isRemovedEnabled?: boolean;\r\n  isUpdateEnabled?: boolean;\r\n  isDisplayEnabled?: boolean;\r\n  bidoNotificationTypeDTO?: BidoNotificationTypeDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-event-type',\r\n  templateUrl: './event-type.component.html'\r\n})\r\nexport class EventTypeComponent extends DynamicCatalog implements OnInit {\r\n  public filteredRowsNb: number;\r\n\r\n  public eventTypesTableDataSource: TableDataSource<EventTypeDTO>;\r\n  public currentEventType: EventTypeDTO | undefined;\r\n  public currentEventTypeIndex: number | undefined;\r\n\r\n  public typeCategories: LabelValue<string>[];\r\n\r\n  // Event Type Form\r\n  public showEventTypeForm: boolean;\r\n  public isNewEventType: boolean;\r\n  public eventTypesAddedList: BidoNotificationTypeDTO[];\r\n  public eventTypesUpdatedList: BidoNotificationTypeDTO[];\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    private readonly eventTypeService: EventTypeService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly propertiesService: PropertiesService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.eventTypesTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'typeCode',\r\n          translateKey: this.getTranslateKey('typeCode')\r\n        },\r\n        {\r\n          field: 'typeCategory',\r\n          translateKey: this.getTranslateKey('typeCategory')\r\n        },\r\n        {\r\n          field: 'criticality',\r\n          translateKey: this.getTranslateKey('criticality'),\r\n          alignment: ColumnAlignment.CENTER\r\n        },\r\n        {\r\n          field: 'typeDescription',\r\n          translateKey: this.getTranslateKey('typeDescription')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.currentEventType = undefined;\r\n    this.currentEventTypeIndex = undefined;\r\n\r\n    this.typeCategories = [];\r\n\r\n    this.showEventTypeForm = false;\r\n    this.isNewEventType = false;\r\n    this.eventTypesAddedList = [];\r\n    this.eventTypesUpdatedList = [];\r\n\r\n    this.loadEventTypeTableData();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    // super.ngOnInit();\r\n    // this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'EventTypeComponent';\r\n  }\r\n\r\n  public loadEventTypeTableData(): void {\r\n    this.eventTypesTableDataSource.setData([]);\r\n    this.eventTypeService.loadEventTypeTableData().subscribe((results) => {\r\n      this.propertiesService.getValue('getEventCategoryMap').subscribe((result) => {\r\n        this.typeCategories = result || [];\r\n\r\n        results.forEach((res) => {\r\n          if (!!res.bidoNotificationTypeDTO) {\r\n            const eventType: EventTypeDTO = {\r\n              typeCode: res.bidoNotificationTypeDTO.typeCode,\r\n              typeDescription: res.bidoNotificationTypeDTO.typeDescription,\r\n              typeCategory: res.bidoNotificationTypeDTO.typeCategory,\r\n              criticality: res.bidoNotificationTypeDTO.criticality,\r\n              isRemovedEnabled: res.isRemovedEnabled,\r\n              isUpdateEnabled: res.isUpdateEnabled,\r\n              isDisplayEnabled: res.isDisplayEnabled,\r\n              bidoNotificationTypeDTO: res.bidoNotificationTypeDTO\r\n            };\r\n\r\n            this.eventTypesTableDataSource.addData([eventType]);\r\n          } else {\r\n            super.throwUnboundLocalError('loadEventTypeTableData', 'res.bidoNotificationTypeDTO');\r\n          }\r\n        });\r\n        this.eventTypesTableDataSource.dataSrc.forEach((element) => {\r\n          LabelValueUtils.stringValueToLabel<EventTypeDTO>(element, 'typeCategory', this.typeCategories);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.eventTypesTableDataSource.dataSelection = [];\r\n    this.eventTypesAddedList = [];\r\n    this.eventTypesUpdatedList = [];\r\n    this.loadEventTypeTableData();\r\n  }\r\n\r\n  public save(): void {\r\n    const input: SaveCatalogInput = {\r\n      bidoNotificationTypeDTOAddedList: this.eventTypesAddedList,\r\n      bidoNotificationTypeDTOUpdatedList: this.eventTypesUpdatedList\r\n    };\r\n    this.eventTypeService.saveCatalog(input).subscribe(\r\n      (_result) => {\r\n        this.messageService.showSuccessMessage('global.successOnSave');\r\n        this.refresh();\r\n      },\r\n      (_error) => {\r\n        this.messageService.showErrorMessage('global.errorOnSave');\r\n      }\r\n    );\r\n  }\r\n\r\n  /******************\r\n   * Event Type Popup\r\n   ******************/\r\n\r\n  public addEventType(): void {\r\n    this.showEventTypeForm = true;\r\n    this.isNewEventType = true;\r\n    this.currentEventType = {};\r\n  }\r\n\r\n  public editSelectedEventType(): void {\r\n    this.showEventTypeForm = true;\r\n    this.isNewEventType = false;\r\n    const eventType = { ...this.eventTypesTableDataSource.dataSelection[0] };\r\n    const categories = this.typeCategories.filter((c) => c.label === eventType.typeCategory);\r\n    eventType.typeCategory = categories[0].value;\r\n    this.currentEventType = eventType;\r\n    this.currentEventTypeIndex = this.eventTypesTableDataSource.dataSrc.findIndex(\r\n      (type) => type === this.eventTypesTableDataSource.dataSelection[0]\r\n    );\r\n  }\r\n\r\n  public disablePropertyTypeDeleteButton(): boolean {\r\n    let result: boolean;\r\n\r\n    if (this.eventTypesTableDataSource.hasDataSelection) {\r\n      result = true;\r\n    } else {\r\n      const eventTypes: BidoNotificationTypeDTO[] = this.eventTypesTableDataSource.dataSelection.filter(\r\n        (type) => !type.isRemovedEnabled\r\n      );\r\n      result = eventTypes.length === 0 ? false : true;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public deleteSelectedEventType(): void {\r\n    const partialMessageKey = 'global.deleteConfirmationMsg';\r\n    this.eventTypesTableDataSource.dataSelection.forEach((selectedType) => {\r\n      const inAddedList = this.eventTypesAddedList.filter((type) => type.typeCode === selectedType.typeCode);\r\n      const inUpdatedList = this.eventTypesUpdatedList.filter((type) => type.typeCode === selectedType.typeCode);\r\n\r\n      if (inUpdatedList.length !== 0) {\r\n        // in updated list\r\n        this.confirmationService.confirmDelete({\r\n          messageKey: partialMessageKey,\r\n          accept: () => {\r\n            this.eventTypesUpdatedList = this.eventTypesUpdatedList.filter(\r\n              (type) => type.typeCode !== selectedType.typeCode\r\n            );\r\n            this.eventTypeService.deleteEventType(this.eventTypesTableDataSource.dataSelection).subscribe((result) => {\r\n              this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n              this.loadEventTypeTableData();\r\n              this.eventTypesTableDataSource.dataSelection = [];\r\n            });\r\n          }\r\n        });\r\n      } else if (inAddedList.length !== 0) {\r\n        // in added list\r\n        this.confirmationService.confirmDelete({\r\n          messageKey: partialMessageKey,\r\n          accept: () => {\r\n            this.eventTypesAddedList = this.eventTypesAddedList.filter(\r\n              (element) => element.typeCode !== selectedType.typeCode\r\n            );\r\n            this.eventTypesTableDataSource.dataSelection = this.eventTypesTableDataSource.dataSelection.filter(\r\n              (type) => type.typeCode !== selectedType.typeCode\r\n            );\r\n            this.eventTypesTableDataSource.setData(\r\n              this.eventTypesTableDataSource.dataSrc.filter((type) => type.typeCode !== selectedType.typeCode)\r\n            );\r\n            this.eventTypesTableDataSource.dataSelection = [];\r\n            this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n          }\r\n        });\r\n      } else if (inAddedList.length === 0 && inUpdatedList.length === 0) {\r\n        this.confirmationService.confirmDelete({\r\n          messageKey: partialMessageKey,\r\n          accept: () => {\r\n            this.eventTypeService.deleteEventType(this.eventTypesTableDataSource.dataSelection).subscribe((result) => {\r\n              this.eventTypesTableDataSource.dataSelection = [];\r\n              this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n              this.refresh();\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.eventTypesTableDataSource.dataSelection.forEach((selectedType) => {\r\n      const inAddedList = this.eventTypesAddedList.filter((type) => type.typeCode === selectedType.typeCode);\r\n      const inUpdatedList = this.eventTypesUpdatedList.filter((type) => type.typeCode === selectedType.typeCode);\r\n\r\n      if (inUpdatedList.length !== 0) {\r\n        // in updated list\r\n        this.confirmationService.confirmDelete({\r\n          messageKey: partialMessageKey,\r\n          accept: () => {\r\n            this.eventTypesUpdatedList = this.eventTypesUpdatedList.filter(\r\n              (type) => type.typeCode !== selectedType.typeCode\r\n            );\r\n            this.eventTypeService.deleteEventType(this.eventTypesTableDataSource.dataSelection).subscribe((result) => {\r\n              this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n              this.loadEventTypeTableData();\r\n              this.eventTypesTableDataSource.dataSelection = [];\r\n            });\r\n          }\r\n        });\r\n      } else if (inAddedList.length !== 0) {\r\n        // in added list\r\n        this.confirmationService.confirmDelete({\r\n          messageKey: partialMessageKey,\r\n          accept: () => {\r\n            this.eventTypesAddedList = this.eventTypesAddedList.filter(\r\n              (element) => element.typeCode !== selectedType.typeCode\r\n            );\r\n            this.eventTypesTableDataSource.setData(\r\n              this.eventTypesTableDataSource.dataSrc.filter((type) => type.typeCode !== selectedType.typeCode)\r\n            );\r\n            this.eventTypesTableDataSource.dataSelection = [];\r\n            this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n          }\r\n        });\r\n      } else if (inAddedList.length === 0 && inUpdatedList.length === 0) {\r\n        this.confirmationService.confirmDelete({\r\n          messageKey: partialMessageKey,\r\n          accept: () => {\r\n            this.eventTypeService.deleteEventType(this.eventTypesTableDataSource.dataSelection).subscribe((result) => {\r\n              this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n              this.refresh();\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public createEventType(event: BidoNotificationTypeDTO): void {\r\n    if (event) {\r\n      const addedEventTypesExist = this.eventTypesTableDataSource.dataSrc.filter(\r\n        (type) => event.typeCode === type.typeCode\r\n      );\r\n      if (addedEventTypesExist.length === 0) {\r\n        // new event type\r\n        this.eventTypesAddedList = [...this.eventTypesAddedList, event];\r\n        const eventType: EventTypeDTO = {\r\n          typeCode: event.typeCode,\r\n          typeCategory: event.typeCategory,\r\n          typeDescription: event.typeDescription,\r\n          criticality: event.criticality\r\n        };\r\n        LabelValueUtils.stringValueToLabel<EventTypeDTO>(eventType, 'typeCategory', this.typeCategories);\r\n        this.eventTypesTableDataSource.addData([eventType]);\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('bidoNotificationTypeAlreadyExists'));\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateEventType(event: BidoNotificationTypeDTO): void {\r\n    if (this.currentEventTypeIndex !== null && this.currentEventTypeIndex !== undefined) {\r\n      const eventExistsInAddedList = this.eventTypesAddedList.filter((type) => event.typeCode === type.typeCode);\r\n      const eventExistsInUpdatedList = this.eventTypesUpdatedList.filter((type) => event.typeCode === type.typeCode);\r\n\r\n      if (eventExistsInAddedList.length !== 0) {\r\n        const indexInAddedList = this.eventTypesAddedList.findIndex((type) => type === eventExistsInAddedList[0]);\r\n        this.eventTypesAddedList[indexInAddedList] = event;\r\n      } else if (eventExistsInUpdatedList.length !== 0) {\r\n        const indexInUpdatedList = this.eventTypesUpdatedList.findIndex((type) => type === eventExistsInUpdatedList[0]);\r\n        this.eventTypesUpdatedList[indexInUpdatedList] = event;\r\n      } else if (eventExistsInAddedList.length === 0 && eventExistsInUpdatedList.length === 0) {\r\n        this.eventTypesUpdatedList = [...this.eventTypesUpdatedList, event];\r\n      }\r\n      const eventType: EventTypeDTO = {\r\n        typeCode: event.typeCode,\r\n        typeCategory: event.typeCategory,\r\n        typeDescription: event.typeDescription,\r\n        criticality: event.criticality\r\n      };\r\n      LabelValueUtils.stringValueToLabel<BidoNotificationTypeDTO>(eventType, 'typeCategory', this.typeCategories);\r\n      this.eventTypesTableDataSource.replaceData(\r\n        this.eventTypesTableDataSource.dataSrc[this.currentEventTypeIndex],\r\n        eventType\r\n      );\r\n      this.eventTypesTableDataSource.dataSelection = [];\r\n      this.currentEventTypeIndex = undefined;\r\n    } else {\r\n      super.throwUnboundLocalError('updateEventType', 'this.currentEventTypeIndex');\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { EventTypeOutputDTO } from '../../../../../../shared/types/api-output-types/catalog/event-type-output-dto.interface';\r\nimport { BidoNotificationTypeDTO } from '../../../../../../shared/types/api-types/bido-notification-type-dto.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventTypeService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public loadEventTypeTableData(): Observable<EventTypeOutputDTO[]> {\r\n    return super.post<void, EventTypeOutputDTO[]>(this.fleetManagementApi.findBidoNotificationTypesBySearchCriteria);\r\n  }\r\n\r\n  public deleteEventType(eventTypes: BidoNotificationTypeDTO[]) {\r\n    return super.post<BidoNotificationTypeDTO[], void>(this.fleetManagementApi.removeBidoNotificationType, eventTypes);\r\n  }\r\n\r\n  public saveCatalog(input: SaveCatalogInput) {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, input);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".contractList\\\" | translate }} ({{ contractTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"contractTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"!contractTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addContract()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"contractTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"deleteContract()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"contractTableDataSource.dataSelectionCount === 1\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editContract()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-contract\\r\\n    *ngIf=\\\"showContractDialog\\\"\\r\\n    [(display)]=\\\"showContractDialog\\\"\\r\\n    [data]=\\\"selectedContractDialogData\\\"\\r\\n    [openMode]=\\\"contractDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddContract($event)\\\"\\r\\n    (onUpdate)=\\\"onUpdateContract($event)\\\"\\r\\n    [contractList]=\\\"contractTableDataSource.dataSrc\\\"\\r\\n  ></aw-dialog-contract>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidtContractDTO } from '../../../../../../shared/types/api-types/bidt-contract-dto.interface';\r\nimport { SelectItemUtils } from '../../../../../../shared/utils/select-item-utils';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { ContractService } from './contract.service';\r\n\r\n@Component({\r\n  selector: 'aw-contract',\r\n  templateUrl: './contract.component.html'\r\n})\r\nexport class ContractComponent extends DynamicCatalog implements OnInit {\r\n  public contractTableDataSource: TableDataSource<BidtContractDTO>;\r\n  public selectedContractDialogData: BidtContractDTO;\r\n\r\n  public contractDialogOpenMode: ComponentOpenMode;\r\n  public showContractDialog: boolean;\r\n\r\n  private bidtContractDTOAddOrUpdateList: BidtContractDTO[];\r\n\r\n  private selectedMaintenanceCodeEdit: string | undefined;\r\n  private contractType: SelectItem[];\r\n\r\n  public constructor(\r\n    private readonly contractService: ContractService,\r\n    private readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n    this.contractDialogOpenMode = ComponentOpenMode.Read;\r\n\r\n    // Table column\r\n    this.contractTableDataSource = new TableDataSource({\r\n      columns: [\r\n        { field: 'contractName', translateKey: this.getTranslateKey('contractName') },\r\n        { field: 'contractType', translateKey: this.getTranslateKey('contractType') },\r\n        {\r\n          field: 'contractDescription',\r\n          translateKey: this.getTranslateKey('contractDescription')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n    this.showContractDialog = false;\r\n    this.bidtContractDTOAddOrUpdateList = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadContractTableData();\r\n    this.filldropdown();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'ContractComponent';\r\n  }\r\n\r\n  /**\r\n   * Render dropdown\r\n   */\r\n  private filldropdown(): void {\r\n    this.propertiesService.getValue('getHrContractTypeMap').subscribe((results) => {\r\n      this.contractType = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n      this.contractType.unshift({\r\n        label: '',\r\n        value: undefined\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load Contract table\r\n   */\r\n  private loadContractTableData() {\r\n    this.contractTableDataSource.setData([]);\r\n    this.contractService.findByCriteriaContractList().subscribe((results) => {\r\n      this.contractTableDataSource.addData(results.list);\r\n      // Load added entries if any on refresh\r\n      if (this.bidtContractDTOAddOrUpdateList) {\r\n        this.bidtContractDTOAddOrUpdateList.forEach((entry) => {\r\n          // If ID not avaialable, it signifies its a new entry\r\n          if (!entry.id) {\r\n            this.contractTableDataSource.addData([entry]);\r\n          }\r\n        });\r\n      }\r\n\r\n      // TO reenter modified entry in table\r\n      if (this.bidtContractDTOAddOrUpdateList) {\r\n        this.contractTableDataSource.dataSrc.forEach((res) => {\r\n          this.bidtContractDTOAddOrUpdateList.forEach((entry) => {\r\n            if (entry.id && res.contractName === entry.contractName) {\r\n              this.contractTableDataSource.replaceData(res, entry);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On Add button click\r\n   */\r\n  public addContract() {\r\n    this.selectedContractDialogData = {};\r\n    this.contractDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showContractDialog = true;\r\n  }\r\n\r\n  /**\r\n   * On add table row\r\n   */\r\n  public onAddContract(ev: BidtContractDTO) {\r\n    const tableObj = { ...ev };\r\n    tableObj.contractType = this.contractList('label', tableObj.contractType);\r\n    this.contractTableDataSource.addData([tableObj]);\r\n    this.bidtContractDTOAddOrUpdateList.push(ev);\r\n  }\r\n\r\n  /**\r\n   * Delete selected Maintenance\r\n   */\r\n  public deleteContract() {\r\n    const partialMessageKey =\r\n      this.contractTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedContracts'\r\n        : 'confirmDeleteSelectedContract';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const idArray: Number[] = [];\r\n        this.contractTableDataSource.dataSelection.forEach((res) => {\r\n          if (res.id !== null && res.id !== undefined) {\r\n            idArray.push(res.id);\r\n            this.contractService.deleteContract(idArray).subscribe((_results) => {\r\n              // Removing entry from added list if added\r\n              this.bidtContractDTOAddOrUpdateList.forEach((entry, index) => {\r\n                this.contractTableDataSource.dataSelection.forEach((en) => {\r\n                  if (entry.contractName === en.contractName) {\r\n                    this.bidtContractDTOAddOrUpdateList.splice(index, 1);\r\n                  }\r\n                });\r\n              });\r\n              this.refresh();\r\n            });\r\n          } else {\r\n            this.bidtContractDTOAddOrUpdateList = this.bidtContractDTOAddOrUpdateList.filter(\r\n              (contract) => contract.contractName !== res.contractName\r\n            );\r\n            this.contractTableDataSource.deleteDataSelection();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edit Selected Contract\r\n   */\r\n  public editContract() {\r\n    this.selectedMaintenanceCodeEdit = undefined;\r\n    this.contractDialogOpenMode = ComponentOpenMode.Write;\r\n    const cloneObj = { ...this.contractTableDataSource.dataSelection[0] };\r\n    this.selectedContractDialogData = cloneObj;\r\n    this.contractType.filter((res) => {\r\n      if (res.label === cloneObj.contractType) {\r\n        cloneObj.contractType = res.value;\r\n      }\r\n    });\r\n    this.showContractDialog = true;\r\n    this.selectedMaintenanceCodeEdit = cloneObj.contractName;\r\n  }\r\n\r\n  private contractList(filterType, val): string {\r\n    let value = '';\r\n    if (filterType === 'label') {\r\n      this.contractType.filter((ev) => {\r\n        if (!!ev.value && !!ev.label && ev.value === val) {\r\n          value = ev.value === val ? ev.label : '';\r\n        }\r\n      });\r\n    } else {\r\n      this.contractType.filter((ev) => {\r\n        if (ev.label === val) {\r\n          value = ev.label === val ? ev.value : '';\r\n        }\r\n      });\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * On update table row\r\n   */\r\n  public onUpdateContract(ev: BidtContractDTO) {\r\n    this.contractTableDataSource.dataSrc.forEach((res) => {\r\n      if (res.contractName === this.selectedMaintenanceCodeEdit) {\r\n        const tableObj = { ...ev };\r\n        tableObj.contractType = this.contractList('label', tableObj.contractType);\r\n        this.contractTableDataSource.replaceData(res, tableObj);\r\n      }\r\n    });\r\n\r\n    this.bidtContractDTOAddOrUpdateList.forEach((res, index) => {\r\n      if (res.contractName === ev.contractName) {\r\n        this.bidtContractDTOAddOrUpdateList.splice(index, 1);\r\n      }\r\n    });\r\n    this.bidtContractDTOAddOrUpdateList.push(ev);\r\n    this.contractTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**\r\n   * Saving Maintenance Data\r\n   */\r\n  public save() {\r\n    if (this.isSaveValid(this.bidtContractDTOAddOrUpdateList)) {\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bidtContractDTOAddOrUpdateList: this.bidtContractDTOAddOrUpdateList\r\n      };\r\n\r\n      this.contractService.saveCatalog(saveCatalogInput).subscribe(() => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n\r\n        // Clearing Added and updated List\r\n        this.bidtContractDTOAddOrUpdateList = [];\r\n        this.contractTableDataSource.dataSelection = [];\r\n      });\r\n    }\r\n  }\r\n\r\n  private isSaveValid(dtoAdd): boolean {\r\n    // if (dtoAdd.length === 0) {\r\n    //   return false;\r\n    // }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Refresh the table data\r\n   */\r\n  public refresh() {\r\n    this.bidtContractDTOAddOrUpdateList = [];\r\n    this.loadContractTableData();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtContractApi } from '../../../../../../shared/api/bidt-contract.api';\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidtContractDTO } from '../../../../../../shared/types/api-types/bidt-contract-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable()\r\nexport class ContractService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly bidtContractApi: BidtContractApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findByCriteriaContractList(): Observable<SearchResultsDTO<BidtContractDTO>> {\r\n    return super.post<void, SearchResultsDTO<BidtContractDTO>>(this.bidtContractApi.findByCriteriaContractList);\r\n  }\r\n\r\n  public deleteContract(contractId: Number[]): Observable<void> {\r\n    return super.post<Number[], void>(this.bidtContractApi.deleteContract, contractId);\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".contractName\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"contractName\\\"\\r\\n          [(ngModel)]=\\\"bidtContractDTO.contractName\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"100\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".contractType\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [options]=\\\"contractType\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          [(ngModel)]=\\\"bidtContractDTO.contractType\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".contractDescription\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [rows]=\\\"3\\\"\\r\\n          pInputTextarea\\r\\n          [(ngModel)]=\\\"bidtContractDTO.contractDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          maxlength=\\\"300\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!bidtContractDTO.contractName\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BidtContractDTO } from '../../../../../../../shared/types/api-types/bidt-contract-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\nimport { SelectItemUtils } from '../../../../../../../shared/utils/select-item-utils';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-contract',\r\n  templateUrl: './dialog-contract.component.html'\r\n})\r\nexport class DialogContractComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public contractList: BidtContractDTO[];\r\n\r\n  @Input()\r\n  public data: BidtContractDTO;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtContractDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BidtContractDTO>;\r\n\r\n  public bidtContractDTO: BidtContractDTO;\r\n  public contractType: SelectItem[];\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    public readonly sessionService: SessionService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogContractComponent');\r\n    this.onValidated = new EventEmitter<BidtContractDTO>();\r\n    this.onUpdate = new EventEmitter<BidtContractDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.data) {\r\n      this.data = {};\r\n    } else {\r\n      this.bidtContractDTO = { ...this.data };\r\n    }\r\n\r\n    this.filldropdown();\r\n  }\r\n\r\n  /**\r\n   * Render dropdown\r\n   */\r\n  private filldropdown(): void {\r\n    this.propertiesService.getValue('getHrContractTypeMap').subscribe((results) => {\r\n      this.contractType = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n      this.contractType.unshift({\r\n        label: '',\r\n        value: undefined\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * validate screen and emit data\r\n   */\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.openMode === ComponentOpenMode.Write) {\r\n        this.data = { ...this.bidtContractDTO };\r\n        this.onUpdate.emit(this.data);\r\n        this.closeDialog();\r\n      } else if (this.openMode === ComponentOpenMode.Create) {\r\n        this.data = { ...this.bidtContractDTO };\r\n        this.onValidated.emit(this.data);\r\n        this.closeDialog();\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Is fields filled\r\n   */\r\n  private isScreenValidated() {\r\n    if (!this.bidtContractDTO.contractName) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close dialog event\r\n   */\r\n  public closeDialog() {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".startDate\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"publicHoliday.compHolidayStartDate\\\"\\r\\n          [maxDate]=\\\"publicHoliday.compHolidayEndDate\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".endDate\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"publicHoliday.compHolidayEndDate\\\"\\r\\n          [minDate]=\\\"publicHoliday.compHolidayStartDate\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".name\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"contractName\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"300\\\"\\r\\n          [(ngModel)]=\\\"publicHoliday.compHolidayComment\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".status\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-checkbox class=\\\"aw-checkbox\\\" binary=\\\"true\\\" [(ngModel)]=\\\"publicHoliday.compHolidayActivated\\\"></p-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"associate()\\\" [disabled]=\\\"!enableAssociateButton()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BidtCompanyHolidayDTO } from '../../../../../../../shared/types/api-types/bidt-company-holiday-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-public-holiday',\r\n  templateUrl: './dialog-public-holiday.component.html'\r\n})\r\nexport class DialogPublicHolidayComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  public publicHoliday: BidtCompanyHolidayDTO;\r\n\r\n  @Input()\r\n  public isNewPublicHoliday: boolean;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<BidtCompanyHolidayDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BidtCompanyHolidayDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public constructor(public sessionService: SessionService) {\r\n    super(ComponentOpenMode.Write, 'DialogPublicHolidayComponent');\r\n\r\n    this.onCreate = new EventEmitter<BidtCompanyHolidayDTO>();\r\n    this.onUpdate = new EventEmitter<BidtCompanyHolidayDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.publicHoliday) {\r\n      this.publicHoliday = {};\r\n    }\r\n  }\r\n\r\n  public associate(): void {\r\n    if (!!this.publicHoliday) {\r\n      if (this.isNewPublicHoliday) {\r\n        this.onCreate.emit(this.publicHoliday);\r\n        this.display = false;\r\n      } else {\r\n        this.onUpdate.emit(this.publicHoliday);\r\n        this.display = false;\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('associate', 'this.publicHoliday');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public enableAssociateButton(): boolean {\r\n    if (!!this.publicHoliday && !!this.publicHoliday.compHolidayStartDate && !!this.publicHoliday.compHolidayEndDate) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\"> {{ \\\"PublicHolidayComponent.company\\\" | translate }} </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"selectedCompany\\\"\\r\\n              [options]=\\\"companies\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              (onChange)=\\\"loadPublicHolidayTableData()\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\"></div>\\r\\n        <div class=\\\"form-group\\\"></div>\\r\\n        <div class=\\\"form-group\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".publicHolidayList\\\" | translate }} ({{ publicHolidayTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"publicHolidayTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"!publicHolidayTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addHoliday()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"publicHolidayTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"deleteHoliday()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"publicHolidayTableDataSource.dataSelectionCount === 1\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editHoliday()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"startDateString\\\" let-rowData=\\\"rowData\\\">\\r\\n            {{ rowData?.startDateString | date: \\\"yyyy/MM/dd\\\" }}\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"endDateString\\\" let-rowData=\\\"rowData\\\">\\r\\n            {{ rowData?.endDateString | date: \\\"yyyy/MM/dd\\\" }}\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"statusBool\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.statusBool !== null && rowData.statusBool\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-dialog-public-holiday\\r\\n  *ngIf=\\\"showHolidayDialog\\\"\\r\\n  [(display)]=\\\"showHolidayDialog\\\"\\r\\n  [publicHoliday]=\\\"currentPublicHoliday\\\"\\r\\n  [isNewPublicHoliday]=\\\"isNewPublicHoliday\\\"\\r\\n  (onCreate)=\\\"createPublicHoliday($event)\\\"\\r\\n  (onUpdate)=\\\"updatePublicHoliday($event)\\\"\\r\\n></aw-dialog-public-holiday>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../../../../shared/services/date.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidtCompHolidayCompanyDTO } from '../../../../../../shared/types/api-types/bidt-comp-holiday-company-dto.interface';\r\nimport { DeletePublicHolidayDTO } from '../../../../../../shared/types/api-types/bidt-company-delete-holiday-dto.interface';\r\nimport { BidtCompanyHolidayDTO } from '../../../../../../shared/types/api-types/bidt-company-holiday-dto.interface';\r\nimport { CompanyHolidaySaveDTO } from '../../../../../../shared/types/api-types/bidt-company-holiday-save-dto.interface';\r\nimport { PublicHolidayTableDTO } from '../../../../../../shared/types/api-types/bidt-holiday-table-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { PublicHolidayService } from './public-holiday.service';\r\n\r\n@Component({\r\n  selector: 'aw-public-holiday',\r\n  templateUrl: './public-holiday.component.html'\r\n})\r\nexport class PublicHolidayComponent extends DynamicCatalog implements OnInit {\r\n  public publicHolidayTableDataSource: TableDataSource<BidtCompanyHolidayDTO>;\r\n  public resultTableDTO: PublicHolidayTableDTO[];\r\n\r\n  public searchObject: BidtCompanyHolidayDTO;\r\n\r\n  public selectedHolidayDialogData: BidtCompanyHolidayDTO;\r\n  public deleteHolidayInput: DeletePublicHolidayDTO[];\r\n  public companies: LabelValue<string>[];\r\n  public holidayDialogOpenMode: ComponentOpenMode;\r\n  public showHolidayDialog: boolean;\r\n  public currentPublicHoliday: BidtCompanyHolidayDTO | undefined;\r\n  public currentPublicHolidayIndex: number | undefined;\r\n  public isNewPublicHoliday: boolean;\r\n  public selectedCompany?: number;\r\n  public bidtCompanyHolidayAddOrUpdateList: CompanyHolidaySaveDTO[];\r\n  public deletedHolidays: BidtCompanyHolidayDTO[];\r\n\r\n  public constructor(\r\n    private readonly publicholidayService: PublicHolidayService,\r\n    private readonly messageService: MessageService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly dateService: DateService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n    this.companies = [];\r\n    this.resultTableDTO = [];\r\n    this.deletedHolidays = [];\r\n    this.holidayDialogOpenMode = ComponentOpenMode.Read;\r\n    this.publicHolidayTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'startDateString',\r\n          translateKey: this.getTranslateKey('startDateString')\r\n        },\r\n        {\r\n          field: 'endDateString',\r\n          translateKey: this.getTranslateKey('endDateString')\r\n        },\r\n        {\r\n          field: 'compHolidayComment',\r\n          translateKey: this.getTranslateKey('compHolidayComment')\r\n        },\r\n        {\r\n          field: 'statusBool',\r\n          translateKey: this.getTranslateKey('statusBool'),\r\n          alignment: ColumnAlignment.CENTER\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.searchObject = {};\r\n    this.showHolidayDialog = false;\r\n    this.currentPublicHoliday = undefined;\r\n    this.currentPublicHolidayIndex = undefined;\r\n    this.isNewPublicHoliday = false;\r\n    this.selectedCompany = undefined;\r\n    this.bidtCompanyHolidayAddOrUpdateList = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadCompany();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'PublicHolidayComponent';\r\n  }\r\n  public loadCompany(): void {\r\n    this.publicholidayService.findBidtCompanyByCriteria({}).subscribe((results) => {\r\n      this.selectedCompany = parseInt(results[0].value, 10);\r\n      this.loadPublicHolidayTableData();\r\n      this.companies = results;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load Holiday table\r\n   */\r\n  public loadPublicHolidayTableData() {\r\n    this.publicHolidayTableDataSource.setData([]);\r\n    if (this.selectedCompany != undefined) {\r\n      this.publicholidayService.findByCriteriaHolidayList(this.selectedCompany).subscribe((results) => {\r\n        results.forEach((result) => {\r\n          if (!!result.bidtCompanyHolidayDTO) {\r\n            if (\r\n              !!result.bidtCompanyHolidayDTO &&\r\n              result.bidtCompanyHolidayDTO.compHolidayStartDate !== null &&\r\n              result.bidtCompanyHolidayDTO.compHolidayStartDate !== undefined &&\r\n              result.bidtCompanyHolidayDTO.compHolidayEndDate !== null &&\r\n              result.bidtCompanyHolidayDTO.compHolidayEndDate !== undefined\r\n            ) {\r\n              result.bidtCompanyHolidayDTO.statusBool =\r\n                result.bidtCompanyHolidayDTO.compHolidayActivated === 1 ? true : false;\r\n              result.bidtCompanyHolidayDTO.startDateString = this.dateService.timestampToString(\r\n                result.bidtCompanyHolidayDTO.compHolidayStartDate\r\n              );\r\n              result.bidtCompanyHolidayDTO.endDateString = this.dateService.timestampToString(\r\n                result.bidtCompanyHolidayDTO.compHolidayEndDate\r\n              );\r\n            }\r\n          } else {\r\n            super.throwUnboundLocalError('loadPublicHolidayTableData', 'result.bidtCompanyHolidayDTO');\r\n          }\r\n        });\r\n        this.resultTableDTO = results;\r\n        results.forEach((element) => {\r\n          if (!!element.bidtCompanyHolidayDTO) {\r\n            this.publicHolidayTableDataSource.addData([element.bidtCompanyHolidayDTO]);\r\n          } else {\r\n            super.throwUnboundLocalError('loadPublicHolidayData', 'element.bidtCompanyHolidayDTO');\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadingData'));\r\n    }\r\n  }\r\n\r\n  public addHoliday(): void {\r\n    this.showHolidayDialog = true;\r\n    this.isNewPublicHoliday = true;\r\n    this.currentPublicHoliday = {};\r\n  }\r\n\r\n  public editHoliday(): void {\r\n    this.showHolidayDialog = true;\r\n    this.isNewPublicHoliday = false;\r\n    const publicHoiday = { ...this.publicHolidayTableDataSource.dataSelection[0] };\r\n    this.currentPublicHoliday = publicHoiday;\r\n    this.currentPublicHolidayIndex = this.publicHolidayTableDataSource.dataSrc.findIndex(\r\n      (type) => type === this.publicHolidayTableDataSource.dataSelection[0]\r\n    );\r\n  }\r\n\r\n  public deleteHoliday(): void {\r\n    const partialMessageKey =\r\n      this.publicHolidayTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedRows'\r\n        : 'confirmDeleteSelectedRow';\r\n    const deleteHolidayInput: BidtCompHolidayCompanyDTO[] = [];\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.publicHolidayTableDataSource.dataSelection.forEach((x) => this.deletedHolidays.push(x));\r\n        this.publicHolidayTableDataSource.deleteDataSelection();\r\n        this.publicHolidayTableDataSource.dataSelection = [];\r\n\r\n        if (this.deletedHolidays.length > 0) {\r\n          this.deletedHolidays.forEach((type) => {\r\n            const compHolidayId = this.resultTableDTO.filter(\r\n              (object) =>\r\n                !!object.bidtCompanyHolidayDTO &&\r\n                object.bidtCompanyHolidayDTO.companyHolidayId === type.companyHolidayId\r\n            )[0].bidtCompHolidayCompId;\r\n            if (compHolidayId !== null && compHolidayId !== undefined) {\r\n              const typeId: BidtCompHolidayCompanyDTO = {\r\n                bidtCompanyId: this.selectedCompany,\r\n                bidtCompanyHolidayId: type.companyHolidayId,\r\n                bidtCompHolidayCompId: compHolidayId\r\n              };\r\n              deleteHolidayInput.push(typeId);\r\n            }\r\n          });\r\n          this.publicholidayService.deleteHoliday(deleteHolidayInput).subscribe(\r\n            (_result) => {\r\n              this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeletePublicHoliday'));\r\n              if (this.publicHolidayTableDataSource.hasDataSelection) {\r\n                this.publicHolidayTableDataSource.dataSelection = [];\r\n              }\r\n            },\r\n            (_error) => {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeletePublicHoliday'));\r\n            }\r\n          );\r\n          this.publicHolidayTableDataSource.dataSelection = [];\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public createPublicHoliday(event: BidtCompanyHolidayDTO): void {\r\n    if (\r\n      !!event &&\r\n      event.compHolidayStartDate !== null &&\r\n      event.compHolidayStartDate !== undefined &&\r\n      event.compHolidayEndDate !== null &&\r\n      event.compHolidayEndDate !== undefined\r\n    ) {\r\n      // event.companyId = this.searchObject.companyId;\r\n      event.compHolidayActivated ? (event.compHolidayActivated = 1) : (event.compHolidayActivated = 0);\r\n      event.compHolidayActivated ? (event.statusBool = true) : (event.statusBool = false);\r\n      event.startDateString = event.compHolidayStartDate.toString();\r\n      event.endDateString = event.compHolidayEndDate.toString();\r\n      event.dataId = Math.random();\r\n      const publicHoliday = { ...event };\r\n      this.publicHolidayTableDataSource.addData([publicHoliday]);\r\n    }\r\n  }\r\n\r\n  public updatePublicHoliday(event: BidtCompanyHolidayDTO): void {\r\n    if (\r\n      event.compHolidayStartDate !== null &&\r\n      event.compHolidayStartDate !== undefined &&\r\n      event.compHolidayEndDate !== null &&\r\n      event.compHolidayEndDate !== undefined &&\r\n      this.currentPublicHolidayIndex !== null &&\r\n      this.currentPublicHolidayIndex !== undefined\r\n    ) {\r\n      event.compHolidayActivated ? (event.compHolidayActivated = 1) : (event.compHolidayActivated = 0);\r\n      event.compHolidayActivated ? (event.statusBool = true) : (event.statusBool = false);\r\n      event.startDateString = event.compHolidayStartDate.toString();\r\n      event.endDateString = event.compHolidayEndDate.toString();\r\n      event.dataId = Math.random();\r\n      const publicHoliday = { ...event };\r\n      this.publicHolidayTableDataSource.replaceData(\r\n        this.publicHolidayTableDataSource.dataSrc[this.currentPublicHolidayIndex],\r\n        publicHoliday\r\n      );\r\n      this.publicHolidayTableDataSource.dataSelection = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saving  Data\r\n   */\r\n  public save(): void {\r\n    this.bidtCompanyHolidayAddOrUpdateList = [];\r\n    this.publicHolidayTableDataSource.dataSrc.forEach((holiday) => {\r\n      const saveInput: CompanyHolidaySaveDTO = {\r\n        companyId: this.selectedCompany,\r\n        bidtCompanyHolidayDTO: holiday,\r\n        bidtCompHolidayCompId:\r\n          holiday != undefined\r\n            ? holiday.companyHolidayId !== null && holiday.companyHolidayId !== undefined\r\n              ? this.resultTableDTO.filter(\r\n                  (object) =>\r\n                    !!object.bidtCompanyHolidayDTO &&\r\n                    !!holiday &&\r\n                    object.bidtCompanyHolidayDTO.companyHolidayId === holiday.companyHolidayId\r\n                )[0].bidtCompHolidayCompId\r\n              : undefined\r\n            : undefined\r\n      };\r\n      this.bidtCompanyHolidayAddOrUpdateList.push(saveInput);\r\n    });\r\n    const input: SaveCatalogInput = {\r\n      bidtCompanyHolidayAddOrUpdateList: this.bidtCompanyHolidayAddOrUpdateList\r\n    };\r\n\r\n    this.publicholidayService.saveCatalog(input).subscribe(\r\n      () => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSavePublicHoliday'));\r\n        this.refresh();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnSavePublicHoliday'));\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Refresh the table data\r\n   */\r\n  public refresh() {\r\n    this.deletedHolidays = [];\r\n    this.currentPublicHoliday = undefined;\r\n    this.bidtCompanyHolidayAddOrUpdateList = [];\r\n    this.loadPublicHolidayTableData();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtCompHolidayCompanyApi } from '../../../../../../shared/api/bidt-comp-holiday-company.api';\r\nimport { BidtCompanyHolidayApi } from '../../../../../../shared/api/bidt-company-holiday.api';\r\nimport { BidtCompanyApi } from '../../../../../../shared/api/bidt-company.api';\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidtCompHolidayCompanyDTO } from '../../../../../../shared/types/api-types/bidt-comp-holiday-company-dto.interface';\r\nimport { BidtCompanyDTO } from '../../../../../../shared/types/api-types/bidt-company-dto.interface';\r\nimport { PublicHolidayTableDTO } from '../../../../../../shared/types/api-types/bidt-holiday-table-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class PublicHolidayService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly bidtCompHolidayCompanyApi: BidtCompHolidayCompanyApi,\r\n    private readonly bidtCompanyHolidayApi: BidtCompanyHolidayApi,\r\n    private readonly bidtCompanyApi: BidtCompanyApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findByCriteriaHolidayList(id: Number): Observable<PublicHolidayTableDTO[]> {\r\n    return super.post<Number, PublicHolidayTableDTO[]>(this.bidtCompHolidayCompanyApi.findByCompanyId, id);\r\n  }\r\n\r\n  public deleteHoliday(id: BidtCompHolidayCompanyDTO[]): Observable<void> {\r\n    return super.post<BidtCompHolidayCompanyDTO[], void>(this.bidtCompanyHolidayApi.delete, id);\r\n  }\r\n  public findBidtCompanyByCriteria(criteria: BidtCompanyDTO): Observable<LabelValue<string>[]> {\r\n    return super.post<BidtCompanyDTO, LabelValue<string>[]>(this.bidtCompanyApi.findByCriteria, criteria);\r\n  }\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".qualificationCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"qualification.bidtQualificationDTO.qualificationCode\\\"\\r\\n          [disabled]=\\\"viewMode || editModeIsStandard\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".qualificationDegre\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"qualification.bidtQualificationDTO.qualificationDegre\\\"\\r\\n          [disabled]=\\\"viewMode || editModeIsStandard\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".qualificationTitle\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"qualification.bidtQualificationDTO.qualificationTitle\\\"\\r\\n          [disabled]=\\\"viewMode || editModeIsStandard\\\"\\r\\n          maxlength=\\\"100\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".qualificationType\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"qualificationTypes\\\"\\r\\n          [(ngModel)]=\\\"qualification.bidtQualificationDTO.qualificationType\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [disabled]=\\\"viewMode || editModeIsStandard\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" style=\\\"width: min-content\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".averageHourRate\\\" | translate }}</label>\\r\\n      <div [ngClass]=\\\"{ disabled: viewMode }\\\" class=\\\"form-control form-control-with-btn\\\">\\r\\n        <input\\r\\n          #averageHourRate=\\\"ngModel\\\"\\r\\n          style=\\\"width: 17rem\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [pKeyFilter]=\\\"inputValidationService.validatorOfMoney()\\\"\\r\\n          [pValidateOnly]=\\\"true\\\"\\r\\n          maxlength=\\\"16\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"qualification.bidtQualificationDTO.averageHourRate\\\"\\r\\n          [disabled]=\\\"viewMode\\\"\\r\\n        />\\r\\n        &nbsp;&nbsp; <input style=\\\"width: 5rem\\\" type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"currentCurrency\\\" disabled />\\r\\n        <p-message\\r\\n          *ngIf=\\\"averageHourRate.invalid && (averageHourRate.dirty || averageHourRate.touched)\\\"\\r\\n          severity=\\\"error\\\"\\r\\n          [text]=\\\"inputValidationService.formatOfMoney()\\\"\\r\\n        ></p-message>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".qualificationDescription\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          pInputTextarea\\r\\n          [rows]=\\\"3\\\"\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [(ngModel)]=\\\"qualification.bidtQualificationDTO.qualificationDescription\\\"\\r\\n          [disabled]=\\\"viewMode\\\"\\r\\n          maxlength=\\\"300\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      *ngIf=\\\"!viewMode || viewMode === undefined\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"associate()\\\"\\r\\n      [disabled]=\\\"!enableAssociateButton()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { InputValidationService } from '../../../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../../shared/services/properties.service';\r\nimport { QualificationListTableOutputDTO } from '../../../../../../../shared/types/api-output-types/catalog/qualification-list-table-output-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../shared/types/label-value.interface';\r\nimport { QualificationService } from '../qualification.service';\r\n\r\n@Component({\r\n  selector: 'aw-qualification-form-popup',\r\n  templateUrl: './qualification-form-popup.component.html'\r\n})\r\nexport class QualificationFormPopupComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  public qualification: QualificationListTableOutputDTO;\r\n\r\n  @Input()\r\n  public isNewQualification: boolean;\r\n\r\n  @Input()\r\n  public viewMode: boolean;\r\n\r\n  @Input()\r\n  public editModeIsStandard: boolean;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<QualificationListTableOutputDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<QualificationListTableOutputDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public qualificationTypes: LabelValue<string>[];\r\n\r\n  public currentCurrency: string;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public constructor(\r\n    public inputValidationService: InputValidationService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly messageService: MessageService,\r\n    private readonly qualificationService: QualificationService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'QualificationFormPopupComponent');\r\n\r\n    this.onCreate = new EventEmitter<QualificationListTableOutputDTO>();\r\n\r\n    this.onUpdate = new EventEmitter<QualificationListTableOutputDTO>();\r\n\r\n    this.loadTypeDropdown();\r\n\r\n    this.loadCurrency();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.qualification) {\r\n      this.qualification = {\r\n        bidtQualificationDTO: {}\r\n      };\r\n    }\r\n  }\r\n\r\n  public loadTypeDropdown(): void {\r\n    this.propertiesService.getValue('getHrQualificationTypeMap').subscribe(\r\n      (results) => {\r\n        this.qualificationTypes = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('.errorOnGetTypes'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public associate(): void {\r\n    const a = 100;\r\n    const b = 2;\r\n    if (this.qualification) {\r\n      this.qualification.averageHourlyRateValue =\r\n        !!this.qualification.bidtQualificationDTO && this.qualification.bidtQualificationDTO.averageHourRate\r\n          ? `${parseFloat(\r\n              (Math.round(this.qualification.bidtQualificationDTO.averageHourRate * a) / a).toString()\r\n            ).toFixed(b)} ${this.currentCurrency}`\r\n          : '';\r\n\r\n      if (!!this.qualification.bidtQualificationDTO && !!this.qualification.bidtQualificationDTO.averageHourRate) {\r\n        const pre = this.qualification.bidtQualificationDTO.averageHourRate.toString().split('.')[0];\r\n        const post = this.qualification.bidtQualificationDTO.averageHourRate.toString().split('.')[1];\r\n        const max = 10;\r\n        const min = 5;\r\n        if (pre.length > max || (post && post.length > min)) {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnLimitExceed'));\r\n\r\n          return;\r\n        }\r\n      }\r\n      if (this.isNewQualification) {\r\n        this.onCreate.emit(this.qualification);\r\n        this.display = false;\r\n      } else {\r\n        this.onUpdate.emit(this.qualification);\r\n        this.display = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public enableAssociateButton(): boolean {\r\n    if (\r\n      !!this.qualification &&\r\n      !!this.qualification.bidtQualificationDTO &&\r\n      !!this.qualification.bidtQualificationDTO.qualificationCode &&\r\n      this.qualification.bidtQualificationDTO.qualificationCode.trim().length !== 0 &&\r\n      !!this.qualification.bidtQualificationDTO.qualificationTitle &&\r\n      this.qualification.bidtQualificationDTO.qualificationTitle.trim().length !== 0\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private loadCurrency(): void {\r\n    this.qualificationService.getLocalCurrency().subscribe((result) => {\r\n      this.currentCurrency = result;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".qualificationsList\\\" | translate }} ({{\\r\\n              qualificationTableForViewingDataSource.dataCount\\r\\n            }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"qualificationTableForViewingDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"!qualificationTableForViewingDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addQualification()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"qualificationTableForViewingDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"deleteSelectedQualification()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"qualificationTableForViewingDataSource.dataSelectionCount === 1\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editSelectedQualification()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"qualificationTableForViewingDataSource.dataSelectionCount === 1\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"viewSelectedQualification()\\\"\\r\\n            >\\r\\n              {{ \\\"global.open\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"isStandard\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.isStandard !== null && rowData.isStandard\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- FORM POPUP -->\\r\\n\\r\\n  <aw-qualification-form-popup\\r\\n    *ngIf=\\\"showQualificationForm\\\"\\r\\n    [isNewQualification]=\\\"isNewQualification\\\"\\r\\n    [editModeIsStandard]=\\\"editModeIsStandard\\\"\\r\\n    [viewMode]=\\\"viewMode\\\"\\r\\n    [(display)]=\\\"showQualificationForm\\\"\\r\\n    [qualification]=\\\"currentQualification\\\"\\r\\n    (onCreate)=\\\"createQualification($event)\\\"\\r\\n    (onUpdate)=\\\"updateQualification($event)\\\"\\r\\n  ></aw-qualification-form-popup>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { QualificationListTableOutputDTO } from '../../../../../../shared/types/api-output-types/catalog/qualification-list-table-output-dto.interface';\r\nimport { BidtQualificationDTO } from '../../../../../../shared/types/api-types/bidt-qualification-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { DTOUtils } from '../../../../../../shared/utils/dto-utils';\r\nimport { LabelValueUtils } from '../../../../../../shared/utils/label-value-utils';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { QualificationService } from './qualification.service';\r\n\r\ninterface QualificationDTO {\r\n  qualificationCode?: string;\r\n  qualificationTitle?: string;\r\n  qualificationDegre?: string;\r\n  qualificationDescription?: string;\r\n  qualificationType?: string;\r\n  statusState?: string;\r\n  statusUser?: string;\r\n  statusDate?: Date;\r\n  isStandard?: boolean;\r\n  id?: number;\r\n  averageHourRate?: number;\r\n  averageHourlyRateValue?: string;\r\n  qualificationListTableOutputDTO: QualificationListTableOutputDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-qualification',\r\n  templateUrl: './qualification.component.html'\r\n})\r\nexport class QualificationComponent extends DynamicCatalog implements OnInit {\r\n  public qualificationsTable: SearchResultsDTO<QualificationListTableOutputDTO>;\r\n  public databaseQualifications: SearchResultsDTO<QualificationListTableOutputDTO>;\r\n  public allQualifications: SearchResultsDTO<QualificationListTableOutputDTO>;\r\n\r\n  public currentQualification: QualificationListTableOutputDTO | undefined;\r\n  public currentQualificationIndex: number | undefined;\r\n\r\n  public qualificationTableForViewingDataSource: TableDataSource<QualificationDTO>;\r\n\r\n  public addedList: QualificationDTO[];\r\n\r\n  public qualificationTypes: LabelValue<string>[];\r\n\r\n  public searchObject: BidtQualificationDTO;\r\n\r\n  public showQualificationForm: boolean;\r\n  public isNewQualification: boolean | undefined;\r\n  public viewMode: boolean | undefined;\r\n  public editModeIsStandard: boolean | undefined;\r\n\r\n  public constructor(\r\n    private readonly qualificationService: QualificationService,\r\n    private readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.qualificationTableForViewingDataSource = new TableDataSource({\r\n      columns: [\r\n        { field: 'qualificationCode', translateKey: this.getTranslateKey('qualificationCode') },\r\n        { field: 'qualificationDegre', translateKey: this.getTranslateKey('qualificationDegre') },\r\n        { field: 'qualificationTitle', translateKey: this.getTranslateKey('qualificationTitle') },\r\n        { field: 'qualificationType', translateKey: this.getTranslateKey('qualificationType') },\r\n        { field: 'averageHourlyRateValue', translateKey: this.getTranslateKey('averageHourlyRateValue') },\r\n        { field: 'isStandard', translateKey: this.getTranslateKey('isStandard'), alignment: ColumnAlignment.CENTER }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.currentQualification = undefined;\r\n    this.currentQualificationIndex = undefined;\r\n\r\n    this.addedList = [];\r\n\r\n    this.qualificationTypes = [];\r\n\r\n    this.searchObject = {};\r\n\r\n    this.showQualificationForm = false;\r\n    this.isNewQualification = undefined;\r\n    this.viewMode = undefined;\r\n    this.editModeIsStandard = undefined;\r\n\r\n    this.loadTypeDropdown();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadQualificationsList();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'QualificationComponent';\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.qualificationsTable = { list: [], moreResults: false };\r\n    this.currentQualification = undefined;\r\n    this.currentQualificationIndex = undefined;\r\n    this.addedList = [];\r\n    this.searchObject = {};\r\n    this.loadQualificationsList();\r\n  }\r\n\r\n  public save(): void {\r\n    const bidtQualificationDTOs: BidtQualificationDTO[] = [];\r\n    this.qualificationsTable.list.forEach((q) => {\r\n      if (!!q.bidtQualificationDTO) {\r\n        const inAddedList = this.addedList.filter(\r\n          (element) => !!q.bidtQualificationDTO && q.bidtQualificationDTO.id === element.id\r\n        );\r\n        if (inAddedList.length !== 0) {\r\n          q.bidtQualificationDTO.id = undefined;\r\n        }\r\n        LabelValueUtils.labelToStringValue<BidtQualificationDTO>(\r\n          q.bidtQualificationDTO,\r\n          'qualificationType',\r\n          this.qualificationTypes\r\n        );\r\n        // const qual = { ...q };\r\n        bidtQualificationDTOs.push(q.bidtQualificationDTO);\r\n      }\r\n    });\r\n\r\n    const saveInput: SaveCatalogInput = {\r\n      bidtQualificationDTOAddOrUpdateList: bidtQualificationDTOs\r\n    };\r\n    this.catalogService.saveCatalog(saveInput).subscribe(\r\n      (_result) => {\r\n        this.messageService.showSuccessMessage('global.successOnSave');\r\n        this.refresh();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage('global.errorOnSave');\r\n      }\r\n    );\r\n  }\r\n\r\n  // Qualification form popup ///////////////////////\r\n\r\n  public addQualification(): void {\r\n    this.isNewQualification = true;\r\n    this.editModeIsStandard = undefined;\r\n    this.showQualificationForm = true;\r\n    this.viewMode = false;\r\n    this.currentQualification = {\r\n      bidtQualificationDTO: {}\r\n    };\r\n  }\r\n\r\n  public viewSelectedQualification(): void {\r\n    this.isNewQualification = false;\r\n    this.editModeIsStandard = undefined;\r\n    this.showQualificationForm = true;\r\n    this.viewMode = true;\r\n    const qualificationForViewing: QualificationListTableOutputDTO = {\r\n      ...this.qualificationTableForViewingDataSource.dataSelection[0].qualificationListTableOutputDTO\r\n    };\r\n    if (!!qualificationForViewing.bidtQualificationDTO) {\r\n      LabelValueUtils.labelToStringValue<BidtQualificationDTO>(\r\n        qualificationForViewing.bidtQualificationDTO,\r\n        'qualificationType',\r\n        this.qualificationTypes\r\n      );\r\n      this.currentQualification = qualificationForViewing;\r\n    } else {\r\n      super.throwUnboundLocalError('viewSelectedQualification', 'qualificationForViewing.bidtQualificationDTO');\r\n    }\r\n  }\r\n\r\n  public editSelectedQualification(): void {\r\n    this.isNewQualification = false;\r\n    this.viewMode = undefined;\r\n    this.showQualificationForm = true;\r\n    this.editModeIsStandard = this.qualificationTableForViewingDataSource.dataSelection[0].isStandard;\r\n    const qualListDTO = this.qualificationTableForViewingDataSource.dataSelection[0].qualificationListTableOutputDTO;\r\n    this.currentQualificationIndex = this.qualificationTableForViewingDataSource.dataSrc.findIndex(\r\n      (q) =>\r\n        !!q.qualificationListTableOutputDTO &&\r\n        !!qualListDTO &&\r\n        DTOUtils.equalsQualificationListTableOutputDTO(q.qualificationListTableOutputDTO, qualListDTO)\r\n    );\r\n    const qualificationForViewing: QualificationListTableOutputDTO = {\r\n      ...this.qualificationTableForViewingDataSource.dataSelection[0].qualificationListTableOutputDTO\r\n    };\r\n    if (!!qualificationForViewing.bidtQualificationDTO) {\r\n      LabelValueUtils.labelToStringValue<BidtQualificationDTO>(\r\n        qualificationForViewing.bidtQualificationDTO,\r\n        'qualificationType',\r\n        this.qualificationTypes\r\n      );\r\n      this.currentQualification = qualificationForViewing;\r\n      this.qualificationTableForViewingDataSource.dataSelection = [];\r\n    } else {\r\n      super.throwUnboundLocalError('editSelectedQualification', 'qualificationForViewing.bidtQualificationDTO');\r\n    }\r\n  }\r\n\r\n  public disablePropertyTypeDeleteButton(): boolean {\r\n    let result: boolean;\r\n\r\n    if (!this.qualificationTableForViewingDataSource.hasDataSelection) {\r\n      result = false;\r\n    } else {\r\n      let qualifications: QualificationListTableOutputDTO[];\r\n      qualifications = this.qualificationTableForViewingDataSource.dataSelection\r\n        .filter((q) => q.isStandard)\r\n        .map((qualification) => {\r\n          return qualification.qualificationListTableOutputDTO;\r\n        });\r\n\r\n      result = qualifications.length === 0;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public deleteSelectedQualification(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: 'global.deleteConfirmationMsg',\r\n      accept: () => {\r\n        const databaseQualificationsDeletionInput: number[] = [];\r\n        this.qualificationTableForViewingDataSource.dataSelection.forEach((q) => {\r\n          let addedIndex = -1;\r\n          const inAddedList = this.addedList.filter((element, index) => {\r\n            if (q.id === element.id) {\r\n              addedIndex = index;\r\n            }\r\n\r\n            return q.id === element.id;\r\n          });\r\n          const inDatabaseList = this.databaseQualifications.list.filter((element) => {\r\n            return !!element.bidtQualificationDTO && q.id === element.bidtQualificationDTO.id;\r\n          });\r\n\r\n          if (inAddedList.length !== 0) {\r\n            this.qualificationTableForViewingDataSource.deleteDataSelection();\r\n            this.qualificationsTable.list = this.qualificationsTable.list.filter(\r\n              (element) => element.bidtQualificationDTO.id !== q.id\r\n            );\r\n            this.addedList.splice(addedIndex, 1);\r\n          }\r\n          if (inDatabaseList.length !== 0) {\r\n            this.qualificationTableForViewingDataSource.deleteDataSelection();\r\n            this.qualificationsTable.list = this.qualificationsTable.list.filter(\r\n              (element) => !!element.bidtQualificationDTO && element.bidtQualificationDTO.id !== q.id\r\n            );\r\n\r\n            if (q.id !== null && q.id !== undefined) {\r\n              databaseQualificationsDeletionInput.push(q.id);\r\n            } else {\r\n              super.throwUnboundLocalError('deleteSuccessFulQualification', 'q.id');\r\n            }\r\n          }\r\n        });\r\n\r\n        if (databaseQualificationsDeletionInput.length !== 0) {\r\n          this.qualificationService.deleteQualifications(databaseQualificationsDeletionInput).subscribe();\r\n        }\r\n\r\n        this.qualificationTableForViewingDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public createQualification(event: QualificationListTableOutputDTO): void {\r\n    if (!!event && !!event.bidtQualificationDTO) {\r\n      LabelValueUtils.stringValueToLabel<BidtQualificationDTO>(\r\n        event.bidtQualificationDTO,\r\n        'qualificationType',\r\n        this.qualificationTypes\r\n      );\r\n      const qualificationForViewing: QualificationDTO = {\r\n        qualificationCode: event.bidtQualificationDTO.qualificationCode,\r\n        qualificationTitle: event.bidtQualificationDTO.qualificationTitle,\r\n        qualificationDegre: event.bidtQualificationDTO.qualificationDegre,\r\n        qualificationDescription: event.bidtQualificationDTO.qualificationDescription,\r\n        qualificationType: event.bidtQualificationDTO.qualificationType,\r\n        statusState: event.bidtQualificationDTO.statusState,\r\n        statusUser: event.bidtQualificationDTO.statusUser,\r\n        statusDate: event.bidtQualificationDTO.statusDate,\r\n        isStandard: event.bidtQualificationDTO.standard,\r\n        id: event.bidtQualificationDTO.id,\r\n        averageHourRate: event.bidtQualificationDTO.averageHourRate,\r\n        averageHourlyRateValue: event.averageHourlyRateValue,\r\n        qualificationListTableOutputDTO: event\r\n      };\r\n      qualificationForViewing.id = Math.random();\r\n      event.bidtQualificationDTO.id = qualificationForViewing.id;\r\n      this.qualificationsTable.list = [...this.qualificationsTable.list, event];\r\n      this.allQualifications.list = [...this.allQualifications.list, event];\r\n      this.qualificationTableForViewingDataSource.addData([qualificationForViewing]);\r\n      this.addedList.push(qualificationForViewing);\r\n    } else {\r\n      super.throwUnboundLocalError('createQualification', 'event.bidtQualificationDTO');\r\n    }\r\n  }\r\n\r\n  public updateQualification(event: QualificationListTableOutputDTO): void {\r\n    if (\r\n      !!event &&\r\n      !!event.bidtQualificationDTO &&\r\n      this.currentQualificationIndex !== null &&\r\n      this.currentQualificationIndex !== undefined\r\n    ) {\r\n      LabelValueUtils.stringValueToLabel<BidtQualificationDTO>(\r\n        event.bidtQualificationDTO,\r\n        'qualificationType',\r\n        this.qualificationTypes\r\n      );\r\n      this.qualificationsTable.list[this.currentQualificationIndex] = event;\r\n      this.allQualifications.list[this.currentQualificationIndex] = event;\r\n      const qualificationForViewing: QualificationDTO = {\r\n        qualificationCode: event.bidtQualificationDTO.qualificationCode,\r\n        qualificationTitle: event.bidtQualificationDTO.qualificationTitle,\r\n        qualificationDegre: event.bidtQualificationDTO.qualificationDegre,\r\n        qualificationDescription: event.bidtQualificationDTO.qualificationDescription,\r\n        qualificationType: event.bidtQualificationDTO.qualificationType,\r\n        statusState: event.bidtQualificationDTO.statusState,\r\n        statusUser: event.bidtQualificationDTO.statusUser,\r\n        statusDate: event.bidtQualificationDTO.statusDate,\r\n        isStandard: event.bidtQualificationDTO.standard,\r\n        id: event.bidtQualificationDTO.id,\r\n        averageHourRate: event.bidtQualificationDTO.averageHourRate,\r\n        averageHourlyRateValue: event.averageHourlyRateValue,\r\n        qualificationListTableOutputDTO: event\r\n      };\r\n      this.qualificationTableForViewingDataSource.replaceData(\r\n        this.qualificationTableForViewingDataSource.dataSrc[this.currentQualificationIndex],\r\n        qualificationForViewing\r\n      );\r\n      const inAddedList = this.addedList.some((qualification) => qualification.id === qualificationForViewing.id);\r\n      if (inAddedList) {\r\n        const indexInAddedList = this.addedList.findIndex(\r\n          (qualification) => qualification.id === qualificationForViewing.id\r\n        );\r\n        this.addedList[indexInAddedList] = qualificationForViewing;\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError(\r\n        'updateQualification',\r\n        'event.bidtQualificationDTO && this.currentQualificationIndex'\r\n      );\r\n    }\r\n  }\r\n\r\n  ////////////////////////////////////////////////////\r\n\r\n  public loadQualificationsList(): void {\r\n    this.qualificationsTable = { list: [], moreResults: false };\r\n    this.databaseQualifications = { list: [], moreResults: false };\r\n    this.allQualifications = { list: [], moreResults: false };\r\n    this.qualificationTableForViewingDataSource.setData([]);\r\n    this.qualificationService.loadQualificationsList().subscribe((results) => {\r\n      const qualifications = { ...results };\r\n      qualifications.list.forEach((q) => {\r\n        if (!!q.bidtQualificationDTO) {\r\n          LabelValueUtils.stringValueToLabel<BidtQualificationDTO>(\r\n            q.bidtQualificationDTO,\r\n            'qualificationType',\r\n            this.qualificationTypes\r\n          );\r\n          this.qualificationsTable.list.push(q);\r\n        } else {\r\n          super.throwUnboundLocalError('loadQualificationsList', 'q.bidtQualificationDTO');\r\n        }\r\n      });\r\n      this.qualificationsTable.moreResults = qualifications.moreResults;\r\n      this.allQualifications = { ...this.qualificationsTable };\r\n      this.allQualifications.list.forEach((q) => {\r\n        if (!!q.bidtQualificationDTO) {\r\n          const qualificationForViewing: QualificationDTO = {\r\n            qualificationCode: q.bidtQualificationDTO.qualificationCode,\r\n            qualificationTitle: q.bidtQualificationDTO.qualificationTitle,\r\n            qualificationDegre: q.bidtQualificationDTO.qualificationDegre,\r\n            qualificationDescription: q.bidtQualificationDTO.qualificationDescription,\r\n            qualificationType: q.bidtQualificationDTO.qualificationType,\r\n            statusState: q.bidtQualificationDTO.statusState,\r\n            statusUser: q.bidtQualificationDTO.statusUser,\r\n            statusDate: q.bidtQualificationDTO.statusDate,\r\n            isStandard: q.bidtQualificationDTO.standard,\r\n            id: q.bidtQualificationDTO.id,\r\n            averageHourRate: q.bidtQualificationDTO.averageHourRate,\r\n            averageHourlyRateValue: q.averageHourlyRateValue,\r\n            qualificationListTableOutputDTO: q\r\n          };\r\n          this.qualificationTableForViewingDataSource.addData([qualificationForViewing]);\r\n          this.databaseQualifications = results;\r\n        } else {\r\n          super.throwUnboundLocalError('loadQualificationsList', 'q.bidtQualificationDTO');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public loadTypeDropdown(): void {\r\n    this.propertiesService.getValue('getHrQualificationTypeMap').subscribe((results) => {\r\n      this.qualificationTypes = results || [];\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtQualificationApi } from '../../../../../../shared/api/bidt-qualification.api';\r\nimport { TaskManagementApi } from '../../../../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { QualificationListTableOutputDTO } from '../../../../../../shared/types/api-output-types/catalog/qualification-list-table-output-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QualificationService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtQualificationApi: BidtQualificationApi,\r\n    private readonly taskManagementApi: TaskManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public loadQualificationsList(): Observable<SearchResultsDTO<QualificationListTableOutputDTO>> {\r\n    return super.post<void, SearchResultsDTO<QualificationListTableOutputDTO>>(\r\n      this.bidtQualificationApi.findByCriteriaQualificationList\r\n    );\r\n  }\r\n\r\n  public getLocalCurrency(): Observable<string> {\r\n    return super.post<void, string>(this.taskManagementApi.getLocalCurrency);\r\n  }\r\n\r\n  public deleteQualifications(input: number[]): Observable<void> {\r\n    return super.post<number[], void>(this.bidtQualificationApi.delete, input);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <!-- Day -->\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\"\\r\\n        ><b>{{ getComponentName() + \\\".thDayOfWeek\\\" | translate }}</b></label\\r\\n      >\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".thDayOfWeek\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          name=\\\"status\\\"\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [options]=\\\"dayOption\\\"\\r\\n          [(ngModel)]=\\\"data.thDayOfWeek\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- START -->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\"\\r\\n        ><b>{{ getComponentName() + \\\".thHourOfBeginning\\\" | translate }}</b></label\\r\\n      >\\r\\n    </div>\\r\\n    <div class=\\\"grid-row\\\">\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".hr\\\" | translate }} </label>\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown\\r\\n            name=\\\"status\\\"\\r\\n            class=\\\"aw-dropdown aw-dropdown fixed-width\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n            placeholder=\\\"&nbsp;\\\"\\r\\n            [options]=\\\"hrOptions\\\"\\r\\n            [(ngModel)]=\\\"bHr\\\"\\r\\n          ></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".min\\\" | translate }} </label>\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown\\r\\n            name=\\\"status\\\"\\r\\n            class=\\\"aw-dropdown fixed-width\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n            placeholder=\\\"&nbsp;\\\"\\r\\n            [options]=\\\"minOptions\\\"\\r\\n            [(ngModel)]=\\\"bMin\\\"\\r\\n          ></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- END -->\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\"\\r\\n        ><b>{{ getComponentName() + \\\".thHourOfEnd\\\" | translate }}</b></label\\r\\n      >\\r\\n    </div>\\r\\n    <div class=\\\"grid-row\\\">\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".hr\\\" | translate }} </label>\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown\\r\\n            name=\\\"status\\\"\\r\\n            class=\\\"aw-dropdown fixed-width\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n            placeholder=\\\"&nbsp;\\\"\\r\\n            [options]=\\\"hrOptions\\\"\\r\\n            [(ngModel)]=\\\"eHr\\\"\\r\\n          ></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".min\\\" | translate }} </label>\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown\\r\\n            name=\\\"status\\\"\\r\\n            class=\\\"aw-dropdown fixed-width\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n            placeholder=\\\"&nbsp;\\\"\\r\\n            [options]=\\\"minOptions\\\"\\r\\n            [(ngModel)]=\\\"eMin\\\"\\r\\n          ></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"associate()\\\"\\r\\n      [disabled]=\\\"\\r\\n        data.thDayOfWeek === undefined ||\\r\\n        bHr === undefined ||\\r\\n        bMin === undefined ||\\r\\n        eHr === undefined ||\\r\\n        eMin === undefined\\r\\n      \\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../../shared/services/message.service';\r\nimport { CustomBidtLaborTemplateHoursDTO } from '../../../../../../../../shared/types/api-types/custom-bidt-labor-template-hours-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../../shared/types/dialog-component';\r\nimport { WorkTemplateService } from '../../work-template.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-work-template',\r\n  templateUrl: './dialog-work-template.component.html'\r\n})\r\nexport class DialogWorkTemplateComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public data: CustomBidtLaborTemplateHoursDTO;\r\n\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<CustomBidtLaborTemplateHoursDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<CustomBidtLaborTemplateHoursDTO>;\r\n\r\n  public readonly componentId: string;\r\n  public hrOptions: SelectItem[];\r\n  public minOptions: SelectItem[];\r\n  public dayOption: SelectItem[];\r\n  public bHr: string;\r\n  public bMin: string;\r\n  public eHr: string;\r\n  public eMin: string;\r\n\r\n  public constructor(\r\n    private readonly workTemplateService: WorkTemplateService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogWorkTemplateComponent');\r\n    this.onCreate = new EventEmitter<CustomBidtLaborTemplateHoursDTO>();\r\n    this.onUpdate = new EventEmitter<CustomBidtLaborTemplateHoursDTO>();\r\n    this.hrOptions = [];\r\n    this.dayOption = [];\r\n    this.minOptions = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.data) {\r\n      this.data = {};\r\n    } else {\r\n      if (!!this.data && !!this.data.gthHourOfBeginning && !!this.data.gthHourOfEnd) {\r\n        this.bHr = this.data.gthHourOfBeginning.split(':')[0];\r\n        this.bMin = this.data.gthHourOfBeginning.split(':')[1];\r\n        this.eHr = this.data.gthHourOfEnd.split(':')[0];\r\n        this.eMin = this.data.gthHourOfEnd.split(':')[1];\r\n      } else {\r\n        super.throwUnboundLocalError('ngOnInit', 'this.data');\r\n      }\r\n    }\r\n    this.renderTimeDropDown();\r\n  }\r\n\r\n  /**\r\n   * Rendering dropdown\r\n   */\r\n  private renderTimeDropDown() {\r\n    this.workTemplateService.getDayMap().subscribe((result) => {\r\n      this.dayOption = result.map((obj) => {\r\n        const item: SelectItem = {\r\n          label: obj.label,\r\n          value: Number(obj.value)\r\n        };\r\n\r\n        return item;\r\n      });\r\n    });\r\n\r\n    const hr = 24;\r\n    for (let i = 0; i < hr; i++) {\r\n      this.hrOptions.push({\r\n        label: i.toString(),\r\n        value: i.toString()\r\n      });\r\n    }\r\n\r\n    const min = 61;\r\n    const inc = 5;\r\n    for (let i = 0; i < min; i = i + inc) {\r\n      this.minOptions.push({\r\n        label: i.toString(),\r\n        value: i.toString()\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event called on validate click\r\n   */\r\n  public associate(): void {\r\n    if (this.isScreenValid()) {\r\n      if (this.isTimeChronological()) {\r\n        const sec = 3600;\r\n        const min = 60;\r\n\r\n        let dayOfWeek = '';\r\n        this.dayOption.forEach((res) => {\r\n          if (\r\n            this.data.thDayOfWeek !== null &&\r\n            this.data.thDayOfWeek !== undefined &&\r\n            res.value === this.data.thDayOfWeek\r\n          ) {\r\n            dayOfWeek = res.label || '';\r\n          }\r\n        });\r\n\r\n        const customBidtLaborTemplateHoursDTO: CustomBidtLaborTemplateHoursDTO = {\r\n          bidtLaborTemplateId: this.data.bidtLaborTemplateId,\r\n          gthDayOfWeek: dayOfWeek,\r\n          gthHourOfBeginning: `${this.bHr}:${this.bMin}`,\r\n          gthHourOfEnd: `${this.eHr}:${this.eMin}`,\r\n          thDayOfWeek: this.data.thDayOfWeek,\r\n          thHourOfBeginning: parseInt(this.bHr, 10) * sec + parseInt(this.bMin, 10) * min,\r\n          thHourOfEnd: parseInt(this.eHr, 10) * sec + parseInt(this.eMin, 10) * min\r\n        };\r\n\r\n        // Checking the mode of open\r\n        if (this.openMode === ComponentOpenMode.Create) {\r\n          this.createHourEntry(customBidtLaborTemplateHoursDTO);\r\n        } else {\r\n          this.updateHourEntry(customBidtLaborTemplateHoursDTO);\r\n        }\r\n\r\n        this.display = false;\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('hoursNotChronological'));\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('errorOnRequiredField'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Is entered time Valid\r\n   */\r\n  private isTimeChronological(): boolean {\r\n    if (Number(this.eHr) === Number(this.bHr)) {\r\n      if (Number(this.eMin) < Number(this.bMin)) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (Number(this.eHr) < Number(this.bHr)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private isScreenValid(): boolean {\r\n    if (\r\n      this.data.thDayOfWeek !== undefined &&\r\n      this.bHr !== undefined &&\r\n      this.bMin !== undefined &&\r\n      this.eHr !== undefined &&\r\n      this.eMin !== undefined\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private createHourEntry(dto) {\r\n    this.onCreate.emit(dto);\r\n  }\r\n\r\n  private updateHourEntry(dto) {\r\n    this.onUpdate.emit(dto);\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n\\r\\n        <i\\r\\n          class=\\\"fa fa-fw fa-info aw-icon aw-icon-with-border\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          pTooltip=\\\"{{ 'page.info' | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n        {{ serializationService.deserialize(componentData.objectId)[\\\"ltName\\\"] }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"reloadForm()\\\">\\r\\n      {{ \\\"global.refresh\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"editWorkTemplateForm()\\\"\\r\\n    >\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancelWorkTemplateForm()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveWorkTemplateForm()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"page-content\\\">\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--12\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".mainInformation\\\" | translate }}\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"grid-cell-content\\\">\\r\\n                <div class=\\\"grid-cell--12\\\">\\r\\n                  <div class=\\\"grid-row\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".ltName\\\" | translate }}</label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"workTemplateField.ltName\\\"\\r\\n                          maxlength=\\\"100\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell--12\\\">\\r\\n                  <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <h4 class=\\\"section-title\\\">\\r\\n                        {{ componentData.componentId + \\\".ltNbHourWd\\\" | translate }}\\r\\n                      </h4>\\r\\n\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"grid-row\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".hr\\\" | translate }} </label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-dropdown\\r\\n                                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                [options]=\\\"hrOptions\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                [(ngModel)]=\\\"wdHrs\\\"\\r\\n                                placeholder=\\\"&nbsp;\\\"\\r\\n                                [showClear]=\\\"true\\\"\\r\\n                              ></p-dropdown>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".min\\\" | translate }} </label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-dropdown\\r\\n                                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                [options]=\\\"minOptions\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                [(ngModel)]=\\\"wdMin\\\"\\r\\n                                placeholder=\\\"&nbsp;\\\"\\r\\n                                [showClear]=\\\"true\\\"\\r\\n                              ></p-dropdown>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">\\r\\n                              {{ componentData.componentId + \\\".ltIsMonday\\\" | translate }}\\r\\n                            </label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-checkbox\\r\\n                                class=\\\"aw-checkbox\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [(ngModel)]=\\\"workTemplateField.ltIsMonday\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                (onChange)=\\\"onChangeDay()\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">\\r\\n                              {{ componentData.componentId + \\\".ltIsTuesday\\\" | translate }}\\r\\n                            </label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-checkbox\\r\\n                                class=\\\"aw-checkbox\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [(ngModel)]=\\\"workTemplateField.ltIsTuesday\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                (onChange)=\\\"onChangeDay()\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">\\r\\n                              {{ componentData.componentId + \\\".ltIsWednesday\\\" | translate }}\\r\\n                            </label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-checkbox\\r\\n                                class=\\\"aw-checkbox\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [(ngModel)]=\\\"workTemplateField.ltIsWednesday\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                (onChange)=\\\"onChangeDay()\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">\\r\\n                              {{ componentData.componentId + \\\".ltIsThursday\\\" | translate }}\\r\\n                            </label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-checkbox\\r\\n                                class=\\\"aw-checkbox\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [(ngModel)]=\\\"workTemplateField.ltIsThursday\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                (onChange)=\\\"onChangeDay()\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">\\r\\n                              {{ componentData.componentId + \\\".ltIsFriday\\\" | translate }}\\r\\n                            </label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-checkbox\\r\\n                                class=\\\"aw-checkbox\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [(ngModel)]=\\\"workTemplateField.ltIsFriday\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                (onChange)=\\\"onChangeDay()\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell--12\\\">\\r\\n                  <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <h4 class=\\\"section-title\\\">\\r\\n                        {{ componentData.componentId + \\\".ltNbHourWe\\\" | translate }}\\r\\n                      </h4>\\r\\n\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"grid-row\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".hr\\\" | translate }} </label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-dropdown\\r\\n                                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                [options]=\\\"hrOptions\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                [(ngModel)]=\\\"weHrs\\\"\\r\\n                                placeholder=\\\"&nbsp;\\\"\\r\\n                                [showClear]=\\\"true\\\"\\r\\n                              ></p-dropdown>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".min\\\" | translate }} </label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-dropdown\\r\\n                                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                [options]=\\\"minOptions\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                [(ngModel)]=\\\"weMin\\\"\\r\\n                                placeholder=\\\"&nbsp;\\\"\\r\\n                                [showClear]=\\\"true\\\"\\r\\n                              ></p-dropdown>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{\\r\\n                              componentData.componentId + \\\".ltIsSaturday\\\" | translate\\r\\n                            }}</label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-checkbox\\r\\n                                class=\\\"aw-checkbox\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [(ngModel)]=\\\"workTemplateField.ltIsSaturday\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                (onChange)=\\\"onChangeDay()\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{\\r\\n                              componentData.componentId + \\\".ltIsSunday\\\" | translate\\r\\n                            }}</label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-checkbox\\r\\n                                class=\\\"aw-checkbox\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [(ngModel)]=\\\"workTemplateField.ltIsSunday\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                (onChange)=\\\"onChangeDay()\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\"></div>\\r\\n                          <div class=\\\"form-group\\\"></div>\\r\\n                          <div class=\\\"form-group\\\"></div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"grid-row\\\" *ngIf=\\\"isDaySelected\\\">\\r\\n          <div class=\\\"grid-cell--12\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".hoursList\\\" | translate }} ({{\\r\\n                      hoursListTableDataSource.dataCount\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"grid-cell-content\\\">\\r\\n                <a-table [dataSource]=\\\"hoursListTableDataSource\\\">\\r\\n                  <ng-template tableActionsDef>\\r\\n                    <button\\r\\n                      *ngIf=\\\"!isReadOpenMode && !hoursListTableDataSource.hasDataSelection\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"addNewHour()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.add\\\" | translate }}\\r\\n                    </button>\\r\\n\\r\\n                    <button\\r\\n                      *ngIf=\\\"!isReadOpenMode && hoursListTableDataSource.dataSelectionCount === 1\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"editHour()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.edit\\\" | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                      *ngIf=\\\"!isReadOpenMode && hoursListTableDataSource.hasDataSelection\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"deleteHours()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.delete\\\" | translate }}\\r\\n                    </button>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template columnDef=\\\"opeCode\\\" let-rowData=\\\"rowData\\\" class=\\\"page-header-links\\\">\\r\\n                    <a (click)=\\\"openOperationForm(rowData)\\\">{{ rowData.opeCode }}</a>\\r\\n                  </ng-template>\\r\\n                </a-table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-work-template\\r\\n    *ngIf=\\\"showTemplateFormPopup\\\"\\r\\n    [data]=\\\"hoursListTableDataSource.dataSelection[0]\\\"\\r\\n    [openMode]=\\\"hourDialogOpenMode\\\"\\r\\n    [(display)]=\\\"showTemplateFormPopup\\\"\\r\\n    (onCreate)=\\\"onCreateHour($event)\\\"\\r\\n    (onUpdate)=\\\"onUpdateHour($event)\\\"\\r\\n  ></aw-dialog-work-template>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { orderBy as _orderBy } from 'lodash-es';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { TableDataSource } from '../../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../../../shared/services/tab.service';\r\nimport { SaveCatalogInput } from '../../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { FindAllWorkTemplateDTO } from '../../../../../../../shared/types/api-output-types/administration-catalog/find-all-work-template-dto.interface';\r\nimport { CustomBidtLaborTemplateDTO } from '../../../../../../../shared/types/api-types/custom-bidt-labor-template-dto.interface';\r\nimport { CustomBidtLaborTemplateHoursDTO } from '../../../../../../../shared/types/api-types/custom-bidt-labor-template-hours-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { FormPageComponent } from '../../../../../../../shared/types/form-page-component';\r\nimport { PageComponentData } from '../../../../../../../shared/types/page-component-data.interface';\r\nimport { WorkTemplateService } from '../work-template.service';\r\n\r\nexport interface DaysList {\r\n  SUNDAY: '1';\r\n  MONDAY: '2';\r\n  TUESDAY: '3';\r\n  WEDNESDAY: '4';\r\n  THRUSDAY: '5';\r\n  FRIDAY: '6';\r\n  SATURDAY: '7';\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-work-template-form',\r\n  templateUrl: './work-template-form.component.html'\r\n})\r\nexport class WorkTemplateFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public workTemplateField: CustomBidtLaborTemplateDTO;\r\n\r\n  public hrOptions: SelectItem[];\r\n  public minOptions: SelectItem[];\r\n  private dayOption: SelectItem[];\r\n  public hoursListTableDataSource: TableDataSource<CustomBidtLaborTemplateHoursDTO>;\r\n  public showTemplateFormPopup: boolean;\r\n  public hourDialogOpenMode: ComponentOpenMode;\r\n\r\n  public wdHrs: string;\r\n  public wdMin: string;\r\n  public weHrs: string;\r\n  public weMin: string;\r\n  private id: number;\r\n  public isDaySelected: boolean;\r\n\r\n  public workTemplateTable: SearchResultsDTO<CustomBidtLaborTemplateDTO>;\r\n\r\n  private rowIndexToEdit: number;\r\n  public showSaveSpinner: boolean;\r\n\r\n  private readonly daysList: DaysList = {\r\n    SUNDAY: '1',\r\n    MONDAY: '2',\r\n    TUESDAY: '3',\r\n    WEDNESDAY: '4',\r\n    THRUSDAY: '5',\r\n    FRIDAY: '6',\r\n    SATURDAY: '7'\r\n  };\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly translateService: TranslateService,\r\n    private readonly workTemplateService: WorkTemplateService\r\n  ) {\r\n    super(ComponentOpenMode.Read, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.init();\r\n  }\r\n\r\n  public init(): void {\r\n    this.workTemplateField = {};\r\n    this.minOptions = [];\r\n    this.hrOptions = [];\r\n    this.dayOption = [];\r\n    this.showTemplateFormPopup = false;\r\n    this.isDaySelected = false;\r\n\r\n    this.workTemplateTable = { list: [], moreResults: false };\r\n\r\n    this.renderTimeDropDown();\r\n    this.hoursListTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'gthDayOfWeek', translateKey: this.getTranslateKey('gthDayOfWeek') },\r\n        {\r\n          field: 'gthHourOfBeginning',\r\n          translateKey: this.getTranslateKey('gthHourOfBeginning')\r\n        },\r\n        { field: 'gthHourOfEnd', translateKey: this.getTranslateKey('gthHourOfEnd') }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Rendering dropdown\r\n   */\r\n  private renderTimeDropDown() {\r\n    this.workTemplateService.getDayMap().subscribe((result) => {\r\n      this.dayOption = result;\r\n    });\r\n\r\n    const hr = 24;\r\n    for (let i = 0; i < hr; i++) {\r\n      this.hrOptions.push({\r\n        label: i.toString(),\r\n        value: i.toString()\r\n      });\r\n    }\r\n\r\n    const min = 61;\r\n    const inc = 5;\r\n    for (let i = 0; i < min; i = i + inc) {\r\n      this.minOptions.push({\r\n        label: i.toString(),\r\n        value: i.toString()\r\n      });\r\n    }\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    if (!!this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n      const context = this.isCreateOpenMode\r\n        ? 'tab.createMode'\r\n        : this.componentData.objectId && this.serializationService.deserialize(this.componentData.objectId).ltName;\r\n\r\n      this.displayComponentContext(context, this.isCreateOpenMode);\r\n\r\n      if (!!this.componentData.objectId) {\r\n        this.id = this.serializationService.deserialize(this.componentData.objectId).id;\r\n      }\r\n\r\n      this.loadWorkTemplateDate();\r\n    }\r\n  }\r\n\r\n  private loadWorkTemplateDate() {\r\n    this.init();\r\n    if (!!this.componentData.objectId) {\r\n      this.getWorkTemplateById();\r\n      this.getHoursTableData();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetching data of current work template\r\n   */\r\n  private getWorkTemplateById() {\r\n    this.workTemplateService.getWorkTemplateById(this.id).subscribe((results) => {\r\n      const cloneObj: CustomBidtLaborTemplateDTO = results;\r\n\r\n      const time = { ...cloneObj };\r\n\r\n      if (!!time) {\r\n        const wdTime =\r\n          time.ltNbHourWd !== null && time.ltNbHourWd !== undefined\r\n            ? `${parseInt(this.getHoursPartIntoHour(time.ltNbHourWd).toString(), 10)}:${parseInt(\r\n                this.getMinutePartIntoHour(time.ltNbHourWd).toString(),\r\n                10\r\n              )}`\r\n            : '0:00';\r\n        const weTime =\r\n          time.ltNbHourWe !== null && time.ltNbHourWe !== undefined\r\n            ? `${parseInt(this.getHoursPartIntoHour(time.ltNbHourWe).toString(), 10)}:${parseInt(\r\n                this.getMinutePartIntoHour(time.ltNbHourWe).toString(),\r\n                10\r\n              )}`\r\n            : '0:00';\r\n\r\n        this.wdHrs = wdTime.split(':')[0];\r\n        this.wdMin = wdTime.split(':')[1];\r\n\r\n        this.weHrs = weTime.split(':')[0];\r\n        this.weMin = weTime.split(':')[1];\r\n\r\n        this.workTemplateField = time;\r\n\r\n        this.onChangeDay();\r\n      } else {\r\n        super.throwUnboundLocalError('getWorkTemplateById', 'time');\r\n      }\r\n    });\r\n  }\r\n\r\n  public onChangeDay() {\r\n    const cloneObj = this.workTemplateField;\r\n\r\n    // Enabling hour list table\r\n    this.isDaySelected =\r\n      cloneObj.ltIsFriday ||\r\n      cloneObj.ltIsMonday ||\r\n      cloneObj.ltIsSaturday ||\r\n      cloneObj.ltIsSunday ||\r\n      cloneObj.ltIsThursday ||\r\n      cloneObj.ltIsTuesday ||\r\n      cloneObj.ltIsWednesday\r\n        ? true\r\n        : false;\r\n\r\n    // Clearing the table in case no day is selected\r\n    if (\r\n      !cloneObj.ltIsFriday &&\r\n      !cloneObj.ltIsMonday &&\r\n      !cloneObj.ltIsSaturday &&\r\n      !cloneObj.ltIsSunday &&\r\n      !cloneObj.ltIsThursday &&\r\n      !cloneObj.ltIsTuesday &&\r\n      !cloneObj.ltIsWednesday\r\n    ) {\r\n      this.hoursListTableDataSource.setData([]);\r\n    }\r\n  }\r\n\r\n  // get hours part into a duration (in hour)\r\n  private getHoursPartIntoHour(globalTime: number): number {\r\n    let toReturn: number;\r\n    const min = 60;\r\n    toReturn = globalTime != undefined ? globalTime / (min * min) : 0;\r\n\r\n    return toReturn;\r\n  }\r\n\r\n  // get minutes part into a duration (in minutes)\r\n  private getMinutePartIntoHour(globalTime: number): Number {\r\n    let toReturn: number;\r\n    const min = 60;\r\n\r\n    toReturn = globalTime != undefined ? (globalTime % (min * min)) / min : 0;\r\n\r\n    return parseInt(toReturn.toString(), 10);\r\n  }\r\n\r\n  /**\r\n   * Event to get hour table data\r\n   */\r\n  private getHoursTableData() {\r\n    this.workTemplateService.findByLaborTemplateId(this.id).subscribe((results) => {\r\n      this.hoursListTableDataSource.setData([]);\r\n      if (results && results.length > 0) {\r\n        const sortedDays = _orderBy(results, ['thDayOfWeek'], ['asc']);\r\n        sortedDays.forEach((res) => {\r\n          if (res.thHourOfBeginning !== null && res.thHourOfBeginning !== undefined && res.thHourOfEnd) {\r\n            res.gthHourOfBeginning = `${parseInt(\r\n              this.getHoursPartIntoHour(res.thHourOfBeginning).toString(),\r\n              10\r\n            )}:${parseInt(this.getMinutePartIntoHour(res.thHourOfBeginning).toString(), 10)}`;\r\n            res.gthHourOfEnd = `${parseInt(this.getHoursPartIntoHour(res.thHourOfEnd).toString(), 10)}:${parseInt(\r\n              this.getMinutePartIntoHour(res.thHourOfEnd).toString(),\r\n              10\r\n            )}`;\r\n\r\n            this.dayOption.forEach((data) => {\r\n              if (\r\n                res.thDayOfWeek !== null &&\r\n                res.thDayOfWeek !== undefined &&\r\n                res.thDayOfWeek.toString() === data.value\r\n              ) {\r\n                res.gthDayOfWeek = data.label;\r\n              }\r\n            });\r\n\r\n            this.hoursListTableDataSource.addData([res]);\r\n          } else {\r\n            super.throwUnboundLocalError('getHoursTableData', 'res');\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Event on Add button click of hour table\r\n   */\r\n  public addNewHour() {\r\n    this.hoursListTableDataSource.dataSelection = [];\r\n    this.showTemplateFormPopup = true;\r\n    this.hourDialogOpenMode = ComponentOpenMode.Create;\r\n  }\r\n\r\n  /**\r\n   * Event on addition of new hour entry in hour table\r\n   */\r\n  public onCreateHour(ev: CustomBidtLaborTemplateHoursDTO) {\r\n    this.hoursListTableDataSource.addData([ev]);\r\n  }\r\n\r\n  /**\r\n   * Event on update event called from update popup\r\n   */\r\n  public onUpdateHour(event) {\r\n    this.hoursListTableDataSource.replaceData(this.hoursListTableDataSource.dataSrc[this.rowIndexToEdit], event);\r\n    this.hoursListTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'WorkTemplateFormComponent';\r\n  }\r\n\r\n  /**\r\n   * On edit button click of hour table\r\n   */\r\n  public editWorkTemplateForm() {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n    this.componentData.openMode = ComponentOpenMode.Write;\r\n  }\r\n\r\n  /**\r\n   * Cancel event\r\n   */\r\n  public cancelWorkTemplateForm(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n    this.loadWorkTemplateDate();\r\n  }\r\n\r\n  /**\r\n   * Event on delete hour table data\r\n   */\r\n  public deleteHours() {\r\n    this.hoursListTableDataSource.deleteDataSelection();\r\n  }\r\n\r\n  /**\r\n   * Event on Edit Hour table button click\r\n   */\r\n  public editHour() {\r\n    this.hoursListTableDataSource.dataSelection.forEach((result) => {\r\n      this.hoursListTableDataSource.dataSrc.forEach((res, index) => {\r\n        if (\r\n          result.bidtLaborTemplateId === res.bidtLaborTemplateId &&\r\n          result.thDayOfWeek === res.thDayOfWeek &&\r\n          result.thHourOfBeginning === res.thHourOfBeginning &&\r\n          result.thHourOfEnd === res.thHourOfEnd\r\n        ) {\r\n          this.rowIndexToEdit = index;\r\n        }\r\n      });\r\n    });\r\n    this.showTemplateFormPopup = true;\r\n    this.hourDialogOpenMode = ComponentOpenMode.Write;\r\n  }\r\n\r\n  private returnCheckBoxResult(res) {\r\n    return res ? 1 : 0;\r\n  }\r\n\r\n  /**\r\n   * Generate Days and hours per week\r\n   */\r\n  private generateDaysAndHrsPerWeek(data) {\r\n    let dayPerWeek = 0;\r\n    let hoursPerWeek = 0;\r\n    const sec = 3600;\r\n    const workingDaysHr = parseInt(this.wdHrs, 10);\r\n    const workingDaysMin = parseInt(this.wdMin, 10);\r\n    const nbHourWD =\r\n      parseInt(this.getHoursPartInSecondIntoHour(workingDaysHr).toString(), 10) +\r\n      parseInt(this.getMinutePartInSecondIntoHour(workingDaysMin).toString(), 10);\r\n\r\n    const nbHourWE = parseInt(this.weHrs, 10) + parseInt(this.weMin, 10);\r\n\r\n    // define total hours and day per week\r\n    if (data.ltIsMonday) {\r\n      dayPerWeek = dayPerWeek + 1;\r\n      hoursPerWeek = hoursPerWeek + nbHourWD;\r\n    }\r\n    if (data.ltIsTuesday) {\r\n      dayPerWeek = dayPerWeek + 1;\r\n      hoursPerWeek = hoursPerWeek + nbHourWD;\r\n    }\r\n    if (data.ltIsWednesday) {\r\n      dayPerWeek = dayPerWeek + 1;\r\n      hoursPerWeek = hoursPerWeek + nbHourWD;\r\n    }\r\n    if (data.ltIsThursday) {\r\n      dayPerWeek = dayPerWeek + 1;\r\n      hoursPerWeek = hoursPerWeek + nbHourWD;\r\n    }\r\n    if (data.ltIsFriday) {\r\n      dayPerWeek = dayPerWeek + 1;\r\n      hoursPerWeek = hoursPerWeek + nbHourWD;\r\n    }\r\n    if (data.ltIsSaturday) {\r\n      dayPerWeek = dayPerWeek + 1;\r\n      hoursPerWeek = hoursPerWeek + nbHourWE;\r\n    }\r\n    if (data.ltIsSunday) {\r\n      dayPerWeek = dayPerWeek + 1;\r\n      hoursPerWeek = hoursPerWeek + nbHourWE;\r\n    }\r\n\r\n    this.workTemplateField.ltDayPerWeek = dayPerWeek;\r\n    this.workTemplateField.ltHourPerWeek = hoursPerWeek * sec;\r\n  }\r\n\r\n  /**\r\n   * Chekcing validity for All Hours\r\n   */\r\n  private checkValidityOfAllHours(data) {\r\n    const nbHourWD =\r\n      this.getHoursPartInSecondIntoHour(parseInt(this.wdHrs, 10)) +\r\n      this.getMinutePartInSecondIntoHour(parseInt(this.wdMin, 10));\r\n    const nbHourWE =\r\n      this.getHoursPartInSecondIntoHour(parseInt(this.weHrs, 10)) +\r\n      this.getMinutePartInSecondIntoHour(parseInt(this.weMin, 10));\r\n\r\n    const theoreticalHoursWD =\r\n      // tslint:disable-next-line:radix\r\n      parseInt(nbHourWD.toString()).toString() + ':' + parseInt(nbHourWD.toString()).toString();\r\n    const theoreticalHoursWE =\r\n      parseInt(nbHourWE.toString(), 10).toString() + ':' + parseInt(nbHourWE.toString(), 10).toString();\r\n\r\n    // MONDAY\r\n    if (data.ltIsMonday === 1 && this.isDayDefinedWithHours(this.daysList.MONDAY)) {\r\n      const calculatedHours = this.getTotalHoursPerDayInSecond(this.daysList.MONDAY);\r\n      if (!(this.getTotalHoursPerDayInSecond(this.daysList.MONDAY) === calculatedHours)) {\r\n        const calculatedHoursTxt = `${parseInt(\r\n          this.getHoursPartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(),\r\n          10\r\n        )}:${parseInt(this.getMinutePartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(), 10)}`;\r\n\r\n        // ERROR MSG\r\n        this.showHoursNotCorrectError('MONDAY', calculatedHoursTxt, theoreticalHoursWD);\r\n\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // TUESDAY\r\n    if (data.ltIsTuesday === 1 && this.isDayDefinedWithHours(this.daysList.TUESDAY)) {\r\n      const calculatedHours = this.getTotalHoursPerDayInSecond(this.daysList.TUESDAY);\r\n      if (!(this.getTotalHoursPerDayInSecond(this.daysList.TUESDAY) === calculatedHours)) {\r\n        const calculatedHoursTxt = `${parseInt(\r\n          this.getHoursPartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(),\r\n          10\r\n        )}:${parseInt(this.getMinutePartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(), 10)}`;\r\n\r\n        // ERROR MSG\r\n        this.showHoursNotCorrectError('TUESDAY', calculatedHoursTxt, theoreticalHoursWD);\r\n\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // WEDNESDAY\r\n    if (data.ltIsWednesday === 1 && this.isDayDefinedWithHours(this.daysList.WEDNESDAY)) {\r\n      const calculatedHours = this.getTotalHoursPerDayInSecond(this.daysList.WEDNESDAY);\r\n      if (!(this.getTotalHoursPerDayInSecond(this.daysList.WEDNESDAY) === calculatedHours)) {\r\n        const calculatedHoursTxt = `${parseInt(\r\n          this.getHoursPartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(),\r\n          10\r\n        )}:${parseInt(this.getMinutePartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(), 10)}`;\r\n\r\n        // ERROR MSG\r\n        this.showHoursNotCorrectError('WEDNESDAY', calculatedHoursTxt, theoreticalHoursWD);\r\n\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // THRUSDAY\r\n    if (data.ltIsThursday === 1 && this.isDayDefinedWithHours(this.daysList.THRUSDAY)) {\r\n      const calculatedHours = this.getTotalHoursPerDayInSecond(this.daysList.THRUSDAY);\r\n      if (!(this.getTotalHoursPerDayInSecond(this.daysList.THRUSDAY) === calculatedHours)) {\r\n        const calculatedHoursTxt = `${parseInt(\r\n          this.getHoursPartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(),\r\n          10\r\n        )}:${parseInt(this.getMinutePartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(), 10)}`;\r\n\r\n        // ERROR MSG\r\n        this.showHoursNotCorrectError('THURSDAY', calculatedHoursTxt, theoreticalHoursWD);\r\n\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // FRIDAY\r\n    if (data.ltIsFriday === 1 && this.isDayDefinedWithHours(this.daysList.FRIDAY)) {\r\n      const calculatedHours = this.getTotalHoursPerDayInSecond(this.daysList.FRIDAY);\r\n      if (!(this.getTotalHoursPerDayInSecond(this.daysList.FRIDAY) === calculatedHours)) {\r\n        const calculatedHoursTxt = `${parseInt(\r\n          this.getHoursPartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(),\r\n          10\r\n        )} : ${parseInt(this.getMinutePartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(), 10)}`;\r\n\r\n        // ERROR MSG\r\n        this.showHoursNotCorrectError('FRIDAY', calculatedHoursTxt, theoreticalHoursWD);\r\n\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Saturday\r\n    if (data.ltIsSaturday === 1 && this.isDayDefinedWithHours(this.daysList.SATURDAY)) {\r\n      const calculatedHours = this.getTotalHoursPerDayInSecond(this.daysList.SATURDAY);\r\n      if (!(this.getTotalHoursPerDayInSecond(this.daysList.SATURDAY) === calculatedHours)) {\r\n        const calculatedHoursTxt = `${parseInt(\r\n          this.getHoursPartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(),\r\n          10\r\n        )}:${parseInt(this.getMinutePartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(), 10)}`;\r\n\r\n        // ERROR MSG\r\n        this.showHoursNotCorrectError('SATURDAY', calculatedHoursTxt, theoreticalHoursWE);\r\n\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Sunday\r\n    if (data.ltIsSunday === 1 && this.isDayDefinedWithHours(this.daysList.SUNDAY)) {\r\n      const calculatedHours = this.getTotalHoursPerDayInSecond(this.daysList.SUNDAY);\r\n      if (!(this.getTotalHoursPerDayInSecond(this.daysList.SUNDAY) === calculatedHours)) {\r\n        const calculatedHoursTxt = `${parseInt(\r\n          this.getHoursPartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(),\r\n          10\r\n        )}:${parseInt(this.getMinutePartIntoHour(parseInt(calculatedHours.toString(), 10)).toString(), 10)}`;\r\n\r\n        // ERROR MSG\r\n        this.showHoursNotCorrectError('SUNDAY', calculatedHoursTxt, theoreticalHoursWE);\r\n\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private showHoursNotCorrectError(day: string, calculatedHoursTxt: string, theoreticalHoursWD: string) {\r\n    this.messageService.showErrorMessage(\r\n      `${this.translateService.instant(\r\n        this.getTranslateKey('hoursNotCorrect')\r\n      )}${day} : ${calculatedHoursTxt} <> ${theoreticalHoursWD}`\r\n    );\r\n  }\r\n\r\n  // get hours part into a duration (in second)\r\n  private getHoursPartInSecondIntoHour(globalTime: number): number {\r\n    let toReturn = 0;\r\n    const sec = 60;\r\n    let time: number = globalTime;\r\n    time = this.getHoursPartIntoHour(globalTime);\r\n    if (globalTime != undefined) {\r\n      toReturn = time * sec * sec;\r\n    }\r\n\r\n    return toReturn;\r\n  }\r\n\r\n  // get minutes part into a duration (in second)\r\n  private getMinutePartInSecondIntoHour(globalTime): number {\r\n    let toReturn = 0;\r\n    const sec = 0;\r\n    let time = globalTime;\r\n    time = this.getMinutePartIntoHour(globalTime);\r\n    if (globalTime !== undefined) {\r\n      toReturn = time * sec;\r\n    }\r\n\r\n    return toReturn;\r\n  }\r\n\r\n  // search if a shift has been defined for a day\r\n  private isDayDefinedWithHours(day: string): boolean {\r\n    const dayOfWeek = parseInt(day, 10);\r\n    let isFound = false;\r\n    this.hoursListTableDataSource.dataSrc.forEach((res) => {\r\n      if (res.thDayOfWeek === dayOfWeek) {\r\n        isFound = true;\r\n      }\r\n    });\r\n\r\n    return isFound ? true : false;\r\n  }\r\n\r\n  // get total hours of shifts for a day (in second)\r\n  private getTotalHoursPerDayInSecond(day: string): Number {\r\n    const dayOfWeek = parseInt(day, 10);\r\n    let toReturn = 0;\r\n\r\n    this.hoursListTableDataSource.dataSrc.forEach((res) => {\r\n      if (\r\n        res.thHourOfEnd !== null &&\r\n        res.thHourOfEnd !== undefined &&\r\n        res.thHourOfBeginning !== null &&\r\n        res.thHourOfBeginning !== undefined &&\r\n        res.thDayOfWeek === dayOfWeek\r\n      ) {\r\n        toReturn += res.thHourOfEnd - res.thHourOfBeginning;\r\n      }\r\n    });\r\n\r\n    return toReturn;\r\n  }\r\n\r\n  /**\r\n   * Save Work Template Data\r\n   */\r\n  public saveWorkTemplateForm() {\r\n    const createMode = ComponentOpenMode.Create; // 0\r\n    const editMode = ComponentOpenMode.Write; // 2\r\n    if (this.isScreenValid()) {\r\n      if (this.componentData.openMode === createMode) {\r\n        this.save();\r\n      } else if (this.componentData.openMode === editMode) {\r\n        const min = 60;\r\n        this.workTemplateService.findAll().subscribe((results) => {\r\n          results.list.forEach((res: CustomBidtLaborTemplateDTO) => {\r\n            res.gltNbHourWd =\r\n              res.ltNbHourWd !== null && res.ltNbHourWd !== undefined\r\n                ? this.getHoursPartIntoHour(res.ltNbHourWd).toString() +\r\n                  ':' +\r\n                  this.getMinutePartIntoHour(res.ltNbHourWd).toString()\r\n                : '0:00';\r\n            res.gltNbHourWe =\r\n              res.ltNbHourWe !== null && res.ltNbHourWe !== undefined\r\n                ? this.getHoursPartIntoHour(res.ltNbHourWe).toString() +\r\n                  ':' +\r\n                  this.getMinutePartIntoHour(res.ltNbHourWe).toString()\r\n                : '0:00';\r\n\r\n            res.ltHourPerWeek =\r\n              res.ltHourPerWeek !== null && res.ltHourPerWeek !== undefined ? res.ltHourPerWeek / min / min : 0;\r\n            this.workTemplateTable.list.push(res);\r\n          });\r\n          const workTemplateInDB = this.workTemplateTable.list.some((wt) => wt.id === this.workTemplateField.id);\r\n          if (workTemplateInDB) {\r\n            this.save();\r\n          } else {\r\n            this.messageService.showErrorMessage('global.internalServerError');\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  private save(): void {\r\n    const sec = 3600;\r\n    const min = 60;\r\n\r\n    // Setting up the DTO\r\n    this.workTemplateField.ltNbHourWd = parseInt(this.wdHrs, 10) * sec + parseInt(this.wdMin, 10) * min;\r\n    this.workTemplateField.ltNbHourWe = parseInt(this.weHrs, 10) * sec + parseInt(this.weMin, 10) * min;\r\n    this.workTemplateField.ltIsFriday = this.returnCheckBoxResult(this.workTemplateField.ltIsFriday);\r\n    this.workTemplateField.ltIsMonday = this.returnCheckBoxResult(this.workTemplateField.ltIsMonday);\r\n    this.workTemplateField.ltIsSaturday = this.returnCheckBoxResult(this.workTemplateField.ltIsSaturday);\r\n    this.workTemplateField.ltIsSunday = this.returnCheckBoxResult(this.workTemplateField.ltIsSunday);\r\n    this.workTemplateField.ltIsThursday = this.returnCheckBoxResult(this.workTemplateField.ltIsThursday);\r\n    this.workTemplateField.ltIsTuesday = this.returnCheckBoxResult(this.workTemplateField.ltIsTuesday);\r\n    this.workTemplateField.ltIsWednesday = this.returnCheckBoxResult(this.workTemplateField.ltIsWednesday);\r\n\r\n    if (this.checkValidityOfAllHours(this.workTemplateField)) {\r\n      this.generateDaysAndHrsPerWeek(this.workTemplateField);\r\n      const dto: FindAllWorkTemplateDTO = {\r\n        bidtLaborTemplateDTO: this.workTemplateField,\r\n        bidtLaborTemplateHoursDTO: this.hoursListTableDataSource.dataSrc\r\n      };\r\n\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bidtLaborTemplateDTOAddorUpdateList: [dto]\r\n      };\r\n\r\n      this.showSaveSpinner = true;\r\n      this.workTemplateService.saveCatalog(saveCatalogInput).subscribe((result) => {\r\n        if (!!this.workTemplateField.ltName) {\r\n          if (result && result.workTemplateId) {\r\n            this.id = result.workTemplateId;\r\n          }\r\n          this.componentData.objectId = this.serializationService.serialize(this.workTemplateField);\r\n          this.displayComponentContext(this.workTemplateField.ltName, this.isWriteOpenMode);\r\n          this.updateOpenMode(ComponentOpenMode.Write);\r\n          this.componentData.openMode = ComponentOpenMode.Write;\r\n\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n          this.loadWorkTemplateDate();\r\n          this.showSaveSpinner = false;\r\n        } else {\r\n          super.throwUnboundLocalError('saveWorkTemplateForm', 'this.workTemplateField.ltName');\r\n          this.showSaveSpinner = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Valiating screen\r\n   */\r\n  private isScreenValid(): boolean {\r\n    if (\r\n      this.workTemplateField.ltName &&\r\n      this.workTemplateField.ltName.trim().length !== 0 &&\r\n      this.wdHrs !== null &&\r\n      this.wdHrs !== undefined &&\r\n      this.wdMin !== null &&\r\n      this.wdMin !== undefined &&\r\n      this.weHrs !== null &&\r\n      this.weHrs !== undefined\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public reloadForm() {\r\n    this.loadWorkTemplateDate();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".workTemplateList\\\" | translate }} ({{ workTemplateTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"workTemplateTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"workTemplateTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"deleteWorkTemplate()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"workTemplateTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"openWorkTemplate()\\\"\\r\\n            >\\r\\n              {{ \\\"global.open\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"ltIsMondayBool\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.ltIsMondayBool !== null && rowData.ltIsMondayBool\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"ltIsTuesdayBool\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.ltIsTuesdayBool !== null && rowData.ltIsTuesdayBool\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"ltIsWednesdayBool\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.ltIsWednesdayBool !== null && rowData.ltIsWednesdayBool\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"ltIsThursdayBool\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.ltIsThursdayBool !== null && rowData.ltIsThursdayBool\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"ltIsFridayBool\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.ltIsFridayBool !== null && rowData.ltIsFridayBool\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"ltIsSaturdayBool\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.ltIsSaturdayBool !== null && rowData.ltIsSaturdayBool\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n          <ng-template columnDef=\\\"ltIsSundayBool\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.ltIsSundayBool !== null && rowData.ltIsSundayBool\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../../shared/services/tab.service';\r\nimport { CustomBidtLaborTemplateDTO } from '../../../../../../shared/types/api-types/custom-bidt-labor-template-dto.interface';\r\nimport { PageComponentData } from '../../../../../../shared/types/page-component-data.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { WorkTemplateService } from './work-template.service';\r\n\r\n@Component({\r\n  selector: 'aw-work-template',\r\n  templateUrl: './work-template.component.html'\r\n})\r\nexport class WorkTemplateComponent extends DynamicCatalog implements OnInit {\r\n  public workTemplateTableDataSource: TableDataSource<CustomBidtLaborTemplateDTO>;\r\n\r\n  public constructor(\r\n    private readonly workTemplateService: WorkTemplateService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    private readonly serializationService: SerializationService,\r\n    private readonly tabService: TabService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n    this.workTemplateTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'ltName', translateKey: this.getTranslateKey('ltName') },\r\n        { field: 'ltDayPerWeek', translateKey: this.getTranslateKey('ltDayPerWeek') },\r\n        {\r\n          field: 'ltHourPerWeek',\r\n          translateKey: this.getTranslateKey('ltHourPerWeek')\r\n        },\r\n        {\r\n          field: 'ltIsMondayBool',\r\n          translateKey: this.getTranslateKey('ltIsMondayBool')\r\n        },\r\n        {\r\n          field: 'ltIsTuesdayBool',\r\n          translateKey: this.getTranslateKey('ltIsTuesdayBool')\r\n        },\r\n        {\r\n          field: 'ltIsWednesdayBool',\r\n          translateKey: this.getTranslateKey('ltIsWednesdayBool')\r\n        },\r\n        {\r\n          field: 'ltIsThursdayBool',\r\n          translateKey: this.getTranslateKey('ltIsThursdayBool')\r\n        },\r\n        {\r\n          field: 'ltIsFridayBool',\r\n          translateKey: this.getTranslateKey('ltIsFridayBool')\r\n        },\r\n        {\r\n          field: 'ltIsSaturdayBool',\r\n          translateKey: this.getTranslateKey('ltIsSaturdayBool')\r\n        },\r\n        {\r\n          field: 'ltIsSundayBool',\r\n          translateKey: this.getTranslateKey('ltIsSundayBool')\r\n        },\r\n        { field: 'gltNbHourWd', translateKey: this.getTranslateKey('gltNbHourWd') },\r\n        { field: 'gltNbHourWe', translateKey: this.getTranslateKey('gltNbHourWe') }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadWorkTemplateTableData();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'WorkTemplateComponent';\r\n  }\r\n\r\n  /**\r\n   * Load Work Template table\r\n   */\r\n  private loadWorkTemplateTableData() {\r\n    const min = 60;\r\n    this.workTemplateTableDataSource.setData([]);\r\n    this.workTemplateService.findAll().subscribe((results) => {\r\n      const resultListCopy = results.list;\r\n      resultListCopy.forEach((res: CustomBidtLaborTemplateDTO) => {\r\n        if (\r\n          res.ltNbHourWd !== null &&\r\n          res.ltNbHourWd !== undefined &&\r\n          res.ltHourPerWeek !== null &&\r\n          res.ltHourPerWeek !== undefined\r\n        ) {\r\n          res.gltNbHourWd =\r\n            this.getHoursPartIntoHour(res.ltNbHourWd).toString() +\r\n            ':' +\r\n            this.getMinutePartIntoHour(res.ltNbHourWd).toString();\r\n          res.gltNbHourWe =\r\n            res.ltNbHourWe !== null && res.ltNbHourWe !== undefined\r\n              ? this.getHoursPartIntoHour(res.ltNbHourWe).toString() +\r\n                ':' +\r\n                this.getMinutePartIntoHour(res.ltNbHourWe).toString()\r\n              : '0:00';\r\n\r\n          res.ltHourPerWeek = res.ltHourPerWeek / min / min;\r\n        }\r\n      });\r\n      resultListCopy.forEach((wT) => {\r\n        wT.ltIsMondayBool = wT.ltIsMonday === 0 ? false : wT.ltIsMonday === 1 ? true : undefined;\r\n        wT.ltIsTuesdayBool = wT.ltIsTuesday === 0 ? false : wT.ltIsTuesday === 1 ? true : undefined;\r\n        wT.ltIsWednesdayBool = wT.ltIsWednesday === 0 ? false : wT.ltIsWednesday === 1 ? true : undefined;\r\n        wT.ltIsThursdayBool = wT.ltIsThursday === 0 ? false : wT.ltIsThursday === 1 ? true : undefined;\r\n        wT.ltIsFridayBool = wT.ltIsFriday === 0 ? false : wT.ltIsFriday === 1 ? true : undefined;\r\n        wT.ltIsSaturdayBool = wT.ltIsSaturday === 0 ? false : wT.ltIsSaturday === 1 ? true : undefined;\r\n        wT.ltIsSundayBool = wT.ltIsSunday === 0 ? false : wT.ltIsSunday === 1 ? true : undefined;\r\n      });\r\n      this.workTemplateTableDataSource.addData(resultListCopy);\r\n    });\r\n  }\r\n\r\n  // get hours part into a duration (in hour)\r\n  private getHoursPartIntoHour(globalTime: number): Number {\r\n    let toReturn: number;\r\n    const min = 60;\r\n\r\n    toReturn = globalTime ? globalTime / (min * min) : 0;\r\n\r\n    return parseInt(toReturn.toString(), 10);\r\n  }\r\n\r\n  // get minutes part into a duration (in minutes)\r\n  private getMinutePartIntoHour(globalTime: number): Number {\r\n    let toReturn: number;\r\n    const min = 60;\r\n\r\n    toReturn = globalTime ? (globalTime % (min * min)) / min : 0;\r\n\r\n    return parseInt(toReturn.toString(), 10);\r\n  }\r\n\r\n  /**\r\n   * On Add button click\r\n   */\r\n  public create() {\r\n    this.openWorkTemplateForm(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  /**\r\n   * On VIEW Button Click\r\n   */\r\n  public openWorkTemplate() {\r\n    this.workTemplateTableDataSource.dataSelection.forEach((template) => {\r\n      if (!!template) {\r\n        if (template.ltName && template.ltName.trim().length > 0) {\r\n          this.openWorkTemplateForm(template, ComponentOpenMode.Read);\r\n        } else {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingTemplate'));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Navigate to FORM\r\n   */\r\n  private openWorkTemplateForm(object: {} | undefined, openMode: ComponentOpenMode): void {\r\n    const labelKey = 'transaction.WorkTemplateFormComponent';\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: 'WorkTemplateFormComponent',\r\n      objectId: this.serializationService.serialize(object),\r\n      openMode\r\n    };\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  /**\r\n   * Delete selected Work Template\r\n   */\r\n  public deleteWorkTemplate() {\r\n    const partialMessageKey =\r\n      this.workTemplateTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedRows'\r\n        : 'confirmDeleteSelectedRow';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const id: Number[] = [];\r\n        this.workTemplateTableDataSource.dataSelection.forEach((result) => {\r\n          if (result.id !== null && result.id !== undefined) {\r\n            id.push(result.id);\r\n          } else {\r\n            super.throwUnboundLocalError('deleteWorkTemplate', 'result.id');\r\n          }\r\n        });\r\n        this.workTemplateService.deleteLabour(id).subscribe(() => {\r\n          this.refresh();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Refresh the table data\r\n   */\r\n  public refresh() {\r\n    this.loadWorkTemplateTableData();\r\n    this.workTemplateTableDataSource.dataSelection = [];\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtLaborTemplateHoursApi } from '../../../../../../shared/api/bidt-labor-template-hours.api';\r\nimport { BidtLaborTemplateApi } from '../../../../../../shared/api/bidt-labor-template.api';\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { SavedCatalogOutputDTO } from '../../../../../../shared/types/api-output-types/catalog/saved-catalog-output-dto.inerface';\r\nimport { BidtLaborTemplateDTO } from '../../../../../../shared/types/api-types/bidt-labor-template-dto.interface';\r\nimport { CustomBidtLaborTemplateDTO } from '../../../../../../shared/types/api-types/custom-bidt-labor-template-dto.interface';\r\nimport { CustomBidtLaborTemplateHoursDTO } from '../../../../../../shared/types/api-types/custom-bidt-labor-template-hours-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class WorkTemplateService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly bidtLaborTemplateApi: BidtLaborTemplateApi,\r\n    private readonly bidtLaborTemplateHoursApi: BidtLaborTemplateHoursApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findAll(): Observable<SearchResultsDTO<CustomBidtLaborTemplateDTO>> {\r\n    return super.post<void, SearchResultsDTO<CustomBidtLaborTemplateDTO>>(this.bidtLaborTemplateApi.findAll);\r\n  }\r\n\r\n  public findByLaborTemplateId(id: number): Observable<CustomBidtLaborTemplateHoursDTO[]> {\r\n    return super.post<Number, CustomBidtLaborTemplateHoursDTO[]>(\r\n      this.bidtLaborTemplateHoursApi.findByLaborTemplateId,\r\n      id\r\n    );\r\n  }\r\n\r\n  public getWorkTemplateById(id: number): Observable<BidtLaborTemplateDTO> {\r\n    return super.post<Number, BidtLaborTemplateDTO>(this.bidtLaborTemplateApi.getWorkTemplateById, id);\r\n  }\r\n\r\n  public deleteLabour(id: Number[]): Observable<void> {\r\n    return super.post<Number[], void>(this.bidtLaborTemplateApi.delete, id);\r\n  }\r\n\r\n  public getDayMap(): Observable<LabelValue<String>[]> {\r\n    return super.post<void, LabelValue<String>[]>(this.fleetManagementApi.getDayMap);\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<SavedCatalogOutputDTO> {\r\n    return super.post<SaveCatalogInput, SavedCatalogOutputDTO>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".title\\\" | translate }} ({{ categoryTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"categoryTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"!categoryTableDataSource.hasDataSelection\\\"\\r\\n              (click)=\\\"addFolderType()\\\"\\r\\n              mat-raised-button\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"openSelectedType()\\\"\\r\\n              *ngIf=\\\"categoryTableDataSource.dataSelectionCount === 1\\\"\\r\\n            >\\r\\n              {{ \\\"global.open\\\" | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              *ngIf=\\\"categoryTableDataSource.hasDataSelection\\\"\\r\\n              (click)=\\\"deleteFolderTypes(categoryTableDataSource.dataSelection)\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              *ngIf=\\\"categoryTableDataSource.dataSelectionCount === 1\\\"\\r\\n              (click)=\\\"editSelectedType()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<aw-dialog-folder-type\\r\\n  *ngIf=\\\"openDialogFolderType\\\"\\r\\n  [(display)]=\\\"openDialogFolderType\\\"\\r\\n  [openMode]=\\\"folderTypeDialogOpenMode\\\"\\r\\n  [category]=\\\"component.category\\\"\\r\\n  [popupData]=\\\"getSelectedFolderObject(categoryTableDataSource.dataSelection[0])\\\"\\r\\n  (onValidated)=\\\"refreshFolderType()\\\"\\r\\n  [docCategoryId]=\\\"docCategoryPropertyId\\\"\\r\\n></aw-dialog-folder-type>\\r\\n\"","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtDfTypeOperationApi } from '../../../../../../shared/api/bidt-df-type-operation.api';\r\nimport { BidtDfTypeApi } from '../../../../../../shared/api/bidt-df-type.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { BidtDfTypeDTO } from '../../../../../../shared/types/api-types/bidt-df-type-dto.interface';\r\nimport { BidtDfTypeIdDTO } from '../../../../../../shared/types/api-types/bidt-df-type-id-dto.interface';\r\nimport { BidtDfTypeOperationDTO } from '../../../../../../shared/types/api-types/bidt-df-type-operation-dto.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FolderTypeService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtDfTypeOperationApi: BidtDfTypeOperationApi,\r\n    private readonly bidtDfTypeApi: BidtDfTypeApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public loadReceiptType(): Observable<BidtDfTypeDTO[]> {\r\n    return super.post<void, BidtDfTypeDTO[]>(this.bidtDfTypeApi.findReceiptDfTypes);\r\n  }\r\n\r\n  public loadShipmentType(): Observable<BidtDfTypeDTO[]> {\r\n    return super.post<void, BidtDfTypeDTO[]>(this.bidtDfTypeApi.findShipmentDfTypes);\r\n  }\r\n\r\n  public findReceiptDfType(bidtDfTypeIdDTO: BidtDfTypeIdDTO): Observable<BidtDfTypeDTO> {\r\n    return super.post<BidtDfTypeIdDTO, BidtDfTypeDTO>(this.bidtDfTypeApi.findReceiptDfTypeById, bidtDfTypeIdDTO);\r\n  }\r\n\r\n  public findShipmentDfType(bidtDfTypeIdDTO: BidtDfTypeIdDTO): Observable<BidtDfTypeDTO> {\r\n    return super.post<BidtDfTypeIdDTO, BidtDfTypeDTO>(this.bidtDfTypeApi.findShipmentDfTypeById, bidtDfTypeIdDTO);\r\n  }\r\n\r\n  public removeFolderType(bidtDfTypeDTOId: BidtDfTypeIdDTO): Observable<boolean> {\r\n    return super.post<BidtDfTypeIdDTO, boolean>(this.bidtDfTypeApi.delete, bidtDfTypeDTOId);\r\n  }\r\n\r\n  public addOrUpdateDfType(input: BidtDfTypeDTO): Observable<BidtDfTypeDTO> {\r\n    return super.post<BidtDfTypeDTO, BidtDfTypeDTO>(this.bidtDfTypeApi.addOrUpdate, input);\r\n  }\r\n\r\n  public addOrUpdateOperations(input: BidtDfTypeOperationDTO[]): Observable<void> {\r\n    return super.post<BidtDfTypeOperationDTO[], void>(this.bidtDfTypeOperationApi.addOrUpdateOperations, input);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"60\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ title }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"grid-row\\\">\\r\\n      <div class=\\\"grid-cell--12\\\">\\r\\n        <div class=\\\"grid-cell-content\\\">\\r\\n          <div class=\\\"column\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: isCreateOpenMode }\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".code\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"aw-input\\\"\\r\\n                    [(ngModel)]=\\\"bidtDfTypeDTO.dftCode\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                    maxlength=\\\"50\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: isCreateOpenMode }\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".designation\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"aw-input custom-width\\\"\\r\\n                    [(ngModel)]=\\\"bidtDfTypeDTO.dftDesignation\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                    maxlength=\\\"100\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".transferType\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    appendTo=\\\"body\\\"\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [options]=\\\"transferTypeList\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    [(ngModel)]=\\\"bidtDfTypeDTO.transferType\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"grid-row\\\">\\r\\n      <div class=\\\"grid-cell--12\\\">\\r\\n        <div class=\\\"grid-cell-header\\\">\\r\\n          <div class=\\\"grid-cell-title-container\\\">\\r\\n            <h3 class=\\\"grid-cell-title\\\">\\r\\n              {{ getComponentName() + \\\".operations\\\" | translate }}\\r\\n              ({{ operationsTableDataSource ? operationsTableDataSource.dataCount : 0 }})\\r\\n            </h3>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"grid-cell-content\\\">\\r\\n          <div class=\\\"column\\\">\\r\\n            <div class=\\\"list-with-details\\\">\\r\\n              <div class=\\\"grid-row\\\">\\r\\n                <div class=\\\"grid-cell--12\\\">\\r\\n                  <div class=\\\"grid-cell--8\\\">\\r\\n                    <div class=\\\"list\\\">\\r\\n                      <div class=\\\"list-header\\\"></div>\\r\\n                      <a-table\\r\\n                        [dataSource]=\\\"operationsTableDataSource\\\"\\r\\n                        (onRowSelect)=\\\"onOperationsRowSelectUnselect()\\\"\\r\\n                        (onRowUnselect)=\\\"onOperationsRowSelectUnselect()\\\"\\r\\n                      >\\r\\n                        <ng-template tableActionsDef>\\r\\n                          <button\\r\\n                            *ngIf=\\\"\\r\\n                              !(isReadOpenMode || !isCreateOpenMode) &&\\r\\n                              operationsTableDataSource &&\\r\\n                              operationsTableDataSource.dataSrc.length > 1 &&\\r\\n                              operationsTableDataSource.hasDataSelection &&\\r\\n                              operationsTableDataSource.dataSelectionCount === 1\\r\\n                            \\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"moveDown()\\\"\\r\\n                          >\\r\\n                            {{ getComponentName() + \\\".moveDown\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            *ngIf=\\\"\\r\\n                              !(isReadOpenMode || !isCreateOpenMode) &&\\r\\n                              operationsTableDataSource &&\\r\\n                              operationsTableDataSource.dataSrc.length > 1 &&\\r\\n                              operationsTableDataSource.hasDataSelection &&\\r\\n                              operationsTableDataSource.dataSelectionCount === 1\\r\\n                            \\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"moveUp()\\\"\\r\\n                          >\\r\\n                            {{ getComponentName() + \\\".moveUp\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            *ngIf=\\\"operationsTableDataSource && !operationsTableDataSource.hasDataSelection\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"addOperation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            *ngIf=\\\"\\r\\n                              !(isReadOpenMode || !isCreateOpenMode) &&\\r\\n                              operationsTableDataSource &&\\r\\n                              operationsTableDataSource.hasDataSelection &&\\r\\n                              operationsTableDataSource.dataSelectionCount === 1\\r\\n                            \\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editOperation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            *ngIf=\\\"\\r\\n                              !(isReadOpenMode || !isCreateOpenMode) &&\\r\\n                              operationsTableDataSource &&\\r\\n                              operationsTableDataSource.hasDataSelection\\r\\n                            \\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"deleteOperations()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n                        </ng-template>\\r\\n                      </a-table>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"grid-cell--4\\\">\\r\\n                    <div class=\\\"details\\\">\\r\\n                      <div class=\\\"column\\\">\\r\\n                        <div class=\\\"section\\\">\\r\\n                          <h4 class=\\\"section-title\\\">\\r\\n                            {{ getComponentName() + \\\".materialTypes\\\" | translate }}\\r\\n                          </h4>\\r\\n\\r\\n                          <div class=\\\"section-content\\\" style=\\\"height: 18em; overflow: auto;\\\">\\r\\n                            <a-table\\r\\n                              [dataSource]=\\\"partNumberTableDataSource\\\"\\r\\n                              (onRowSelect)=\\\"onPartNumberRowSelectUnselect()\\\"\\r\\n                              (onRowUnselect)=\\\"onPartNumberRowSelectUnselect()\\\"\\r\\n                            >\\r\\n                            </a-table>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"section\\\">\\r\\n                          <h4 class=\\\"section-title\\\">\\r\\n                            {{ getComponentName() + \\\".linkedDocCategories\\\" | translate }}\\r\\n                          </h4>\\r\\n\\r\\n                          <div class=\\\"section-content\\\" style=\\\"height: 18em; overflow: auto;\\\">\\r\\n                            <a-table\\r\\n                              [dataSource]=\\\"documentCategoriesTableDataSource\\\"\\r\\n                              (onRowSelect)=\\\"onDocCategoriesRowSelectUnselect()\\\"\\r\\n                              (onRowUnselect)=\\\"onDocCategoriesRowSelectUnselect()\\\"\\r\\n                            >\\r\\n                            </a-table>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"isValidForm()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n<aw-dialog-operation-catalog\\r\\n  *ngIf=\\\"openDialogOperation\\\"\\r\\n  [(display)]=\\\"openDialogOperation\\\"\\r\\n  [data]=\\\"selectedOperation\\\"\\r\\n  [openMode]=\\\"operationDialogOpenMode\\\"\\r\\n  (onValidated)=\\\"validateOperation($event)\\\"\\r\\n></aw-dialog-operation-catalog>\\r\\n\"","module.exports = \":host .custom-width {\\n  width: 30em !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi9jYXRhbG9nL2R5bmFtaWMtY2F0YWxvZy1jb21wb25lbnRzL2xvZ2lzdGljcy9mb2xkZXItdHlwZS9wb3B1cC9kOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGdpdGh1Yl9wYWdlcy9zcmNcXGFwcFxcbWFpblxcYWRtaW5pc3RyYXRpb25cXGNhdGFsb2dcXGR5bmFtaWMtY2F0YWxvZy1jb21wb25lbnRzXFxsb2dpc3RpY3NcXGZvbGRlci10eXBlXFxwb3B1cFxcZGlhbG9nLWZvbGRlci10eXBlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksc0JBQXNCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2FkbWluaXN0cmF0aW9uL2NhdGFsb2cvZHluYW1pYy1jYXRhbG9nLWNvbXBvbmVudHMvbG9naXN0aWNzL2ZvbGRlci10eXBlL3BvcHVwL2RpYWxvZy1mb2xkZXItdHlwZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAuY3VzdG9tLXdpZHRoIHtcclxuICAgIHdpZHRoOiAzMGVtICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { TableDataSource } from '../../../../../../../shared/components/table/table-data-source';\r\nimport { AWPropertiesConstants } from '../../../../../../../shared/constants/aw-properties-constants';\r\nimport { GenericPropertyConstants } from '../../../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { FormatSelectOptionPipe } from '../../../../../../../shared/pipes/format-select-option.pipe';\r\nimport { ConfirmationService } from '../../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../../shared/services/properties.service';\r\nimport { AddOrUpdateDfTypeInputDTO } from '../../../../../../../shared/types/api-input-types/catalog/add-update-df-type-input.interface';\r\nimport { BidtDfTypeDTO } from '../../../../../../../shared/types/api-types/bidt-df-type-dto.interface';\r\nimport { BidtDfTypeOperationDTO } from '../../../../../../../shared/types/api-types/bidt-df-type-operation-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../shared/types/label-value.interface';\r\nimport { NumberUtils } from '../../../../../../../shared/utils/number-utils';\r\nimport { ObjectUtils } from '../../../../../../../shared/utils/object-utils';\r\nimport { SelectItemUtils } from '../../../../../../../shared/utils/select-item-utils';\r\nimport { StringUtils } from '../../../../../../../shared/utils/string-utils';\r\nimport { CatalogService } from '../../../../catalog.service';\r\nimport { FolderTypeService } from '../folder-type.service';\r\n\r\ninterface PartNumberRows {\r\n  value?: string;\r\n  pnType?: string;\r\n}\r\ninterface DocCategoriesRows {\r\n  value?: string;\r\n  docCategorie?: string;\r\n}\r\ninterface OperationTableRows {\r\n  idOpe?: number;\r\n  bidtDfType?: number;\r\n  dftopeKey?: string;\r\n  dftopeSequenceNumber?: string;\r\n  objectType?: string;\r\n  objectTypeName?: string;\r\n  taskTypeCode?: string;\r\n  taskTypeName?: string;\r\n  pnTypes?: PartNumberRows[];\r\n  docCategories?: DocCategoriesRows[];\r\n  _obj: BidtDfTypeOperationDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-folder-type',\r\n  templateUrl: './dialog-folder-type.component.html',\r\n  styleUrls: ['./dialog-folder-type.component.scss']\r\n})\r\nexport class DialogFolderTypeComponent extends DialogComponent implements OnInit {\r\n  private static readonly CATEOGRY_TYPE_RECEIPT: string = 'receipt';\r\n\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public set category(category: string) {\r\n    if (!!category) {\r\n      if (category === this.component.CATEOGRY_TYPE_RECEIPT) {\r\n        this.dftCategory = AWPropertiesConstants.DELIVERY_CATEGORY_RECEIPT;\r\n      } else {\r\n        this.dftCategory = AWPropertiesConstants.DELIVERY_CATEGORY_SHIPMENT;\r\n      }\r\n      this.title = this.getTranslatedValue(category);\r\n    }\r\n  }\r\n\r\n  @Output() public onValidated: EventEmitter<void>;\r\n\r\n  @Input()\r\n  public docCategoryId: string;\r\n\r\n  @Input() public popupData: AddOrUpdateDfTypeInputDTO;\r\n\r\n  private dftCategory: string;\r\n\r\n  public title: string;\r\n\r\n  public bidtDfTypeDTO: BidtDfTypeDTO;\r\n\r\n  public openDialogOperation: boolean;\r\n  public operationDialogOpenMode: ComponentOpenMode;\r\n\r\n  public component: typeof DialogFolderTypeComponent;\r\n\r\n  public operationsTableDataSource: TableDataSource<OperationTableRows>;\r\n  public partNumberTableDataSource: TableDataSource<PartNumberRows>;\r\n  public documentCategoriesTableDataSource: TableDataSource<DocCategoriesRows>;\r\n  public selectedOperation: OperationTableRows | undefined;\r\n\r\n  public elementTypes: SelectItem[];\r\n  public taskTypes: SelectItem[];\r\n  private isOneOperationSelected: boolean = false;\r\n  private partNumberList: PartNumberRows[];\r\n  private docCategoryList: DocCategoriesRows[];\r\n\r\n  public operations: LabelValue<string>[];\r\n  public transferTypeList: SelectItem[];\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    private readonly translateService: TranslateService,\r\n    private readonly folderTypeService: FolderTypeService,\r\n    public readonly confirmationService: ConfirmationService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly catalogService: CatalogService,\r\n    private readonly _formatSelectOption: FormatSelectOptionPipe\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogFolderTypeComponent');\r\n    this.component = DialogFolderTypeComponent;\r\n    this.onValidated = new EventEmitter<void>();\r\n\r\n    this.init();\r\n    this.loadDropDowns();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.LOGISTICAL_OPERATION_MAP).subscribe({\r\n      next: (operations) => {\r\n        this.operations = operations;\r\n        this.updateOpenMode(this.openMode);\r\n        this.bindOperationRelatedTables();\r\n        if (!!this.popupData && this.popupData.dfType && this.popupData.dfType.id) {\r\n          this.operationsTableDataSource.setData([]);\r\n          this.bidtDfTypeDTO = { ...this.popupData.dfType };\r\n          if (this.popupData && this.popupData.dfTypeOperations && this.popupData.dfTypeOperations.length > 0) {\r\n            this.operationsTableDataSource.setData(\r\n              this.popupData.dfTypeOperations.map((operation) => this.createOperationRow(operation))\r\n            );\r\n          }\r\n          this.operationsTableDataSource.update();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadTransferTypes(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.MM_TRASFER_TYPE_MAP).subscribe((results) => {\r\n      this.transferTypeList = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  private createOperationRow(operationDTO: BidtDfTypeOperationDTO): OperationTableRows {\r\n    const operationRow: OperationTableRows = {\r\n      idOpe: operationDTO.id,\r\n      bidtDfType: operationDTO.bidtDfTypeId,\r\n      dftopeKey: this._formatSelectOption.transform(operationDTO.dftopeKey, this.operations),\r\n      dftopeSequenceNumber: ObjectUtils.isDefined(operationDTO.dftopeSequenceNumber)\r\n        ? NumberUtils.roundNumber(NumberUtils.fromString(operationDTO.dftopeSequenceNumber as string), 0).toString()\r\n        : '',\r\n      objectType: operationDTO.objectType,\r\n      objectTypeName: !!operationDTO.objectType\r\n        ? this.elementTypes.filter((element) => element.value === operationDTO.objectType)[0] &&\r\n          this.elementTypes.filter((element) => element.value === operationDTO.objectType)[0].label\r\n        : '',\r\n      taskTypeCode: operationDTO.taskTypeCode,\r\n      taskTypeName: !!operationDTO.taskTypeCode\r\n        ? this.taskTypes.filter((taskCode) => taskCode.value === operationDTO.taskTypeCode)[0] &&\r\n          this.taskTypes.filter((taskCode) => taskCode.value === operationDTO.taskTypeCode)[0].label\r\n        : '',\r\n      pnTypes:\r\n        !!operationDTO.pnTypes && operationDTO.pnTypes.length > 0\r\n          ? operationDTO.pnTypes.map((pnType) => {\r\n              const partNumer: PartNumberRows = {\r\n                value: pnType as string\r\n              };\r\n\r\n              return partNumer;\r\n            })\r\n          : [],\r\n      docCategories:\r\n        !!operationDTO.docCategories && operationDTO.docCategories.length > 0\r\n          ? operationDTO.docCategories.map((category) => {\r\n              const docCategory: DocCategoriesRows = {\r\n                value: category as string\r\n              };\r\n\r\n              return docCategory;\r\n            })\r\n          : [],\r\n      _obj: operationDTO\r\n    };\r\n\r\n    return operationRow;\r\n  }\r\n\r\n  public moveDown(): void {\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      this.partNumberTableDataSource.dataSelection = [];\r\n      this.documentCategoriesTableDataSource.dataSelection = [];\r\n      const selectedOperation = this.operationsTableDataSource.dataSelection[0];\r\n      const selectedRowSequenceNumber = selectedOperation.dftopeSequenceNumber;\r\n      const selectedRowIndex = this.operationsTableDataSource.dataSrc.findIndex((operation) => {\r\n        return (\r\n          operation.dftopeSequenceNumber === selectedOperation.dftopeSequenceNumber &&\r\n          operation.dftopeKey === selectedOperation.dftopeKey &&\r\n          operation.objectType === selectedOperation.objectType\r\n        );\r\n      });\r\n\r\n      // shift one row down\r\n      if (this.operationsTableDataSource.dataSrc.length - 1 !== selectedRowIndex) {\r\n        const data = this.operationsTableDataSource.dataSrc[selectedRowIndex + 1];\r\n\r\n        selectedOperation.dftopeSequenceNumber = data.dftopeSequenceNumber;\r\n        this.operationsTableDataSource.dataSrc[selectedRowIndex + 1] = selectedOperation;\r\n\r\n        data.dftopeSequenceNumber = selectedRowSequenceNumber;\r\n        this.operationsTableDataSource.dataSrc[selectedRowIndex] = data;\r\n        this.operationsTableDataSource.setData(\r\n          this.operationsTableDataSource.dataSrc.map((operation) => {\r\n            return operation;\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public moveUp(): void {\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      this.partNumberTableDataSource.dataSelection = [];\r\n      this.documentCategoriesTableDataSource.dataSelection = [];\r\n      const selectedOperation = this.operationsTableDataSource.dataSelection[0];\r\n      const selectedRowSequenceNumber = selectedOperation.dftopeSequenceNumber;\r\n      const selectedRowIndex = this.operationsTableDataSource.dataSrc.findIndex((operation) => {\r\n        return (\r\n          operation.dftopeSequenceNumber === selectedOperation.dftopeSequenceNumber &&\r\n          operation.dftopeKey === selectedOperation.dftopeKey &&\r\n          operation.objectType === selectedOperation.objectType\r\n        );\r\n      });\r\n\r\n      // shift one row up\r\n      if (selectedRowIndex > 0) {\r\n        const data = this.operationsTableDataSource.dataSrc[selectedRowIndex - 1];\r\n\r\n        selectedOperation.dftopeSequenceNumber = data.dftopeSequenceNumber;\r\n        this.operationsTableDataSource.dataSrc[selectedRowIndex - 1] = selectedOperation; // shift selected row to up\r\n\r\n        data.dftopeSequenceNumber = selectedRowSequenceNumber;\r\n        this.operationsTableDataSource.dataSrc[selectedRowIndex] = data;\r\n        this.operationsTableDataSource.setData(\r\n          this.operationsTableDataSource.dataSrc.map((operation) => {\r\n            return operation;\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public onOperationsRowSelectUnselect(): void {\r\n    this.partNumberTableDataSource.dataSelection = [];\r\n    this.documentCategoriesTableDataSource.dataSelection = [];\r\n    let selectedOperationRow: OperationTableRows;\r\n    this.isOneOperationSelected = false;\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      this.isOneOperationSelected = true;\r\n      // TODO: Automatically select related document categories and part numbers\r\n      selectedOperationRow = this.operationsTableDataSource.dataSelection[0];\r\n    }\r\n    this.initPartnumberTableSource();\r\n    this.initCategoryTableSource();\r\n    this.partNumberTableDataSource.update();\r\n  }\r\n\r\n  public onPartNumberRowSelectUnselect(): void {\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      const selectedPartNumbers = this.partNumberTableDataSource.dataSelection.map((row) => {\r\n        const partNumber: PartNumberRows = {\r\n          pnType: row.pnType,\r\n          value: row.value\r\n        };\r\n\r\n        return partNumber;\r\n      });\r\n      const selectedOperationRows = this.operationsTableDataSource.dataSelection[0];\r\n      selectedOperationRows.pnTypes = selectedPartNumbers;\r\n    }\r\n  }\r\n\r\n  public onDocCategoriesRowSelectUnselect(): void {\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      const selectedCategories = this.documentCategoriesTableDataSource.dataSelection.map((row) => {\r\n        const docCategory: DocCategoriesRows = {\r\n          docCategorie: row.docCategorie,\r\n          value: row.value\r\n        };\r\n\r\n        return docCategory;\r\n      });\r\n\r\n      const selectedOperationRows = this.operationsTableDataSource.dataSelection[0];\r\n      selectedOperationRows.docCategories = selectedCategories;\r\n    }\r\n  }\r\n\r\n  // Save Operation\r\n  public validate(): void {\r\n    this.bidtDfTypeDTO.bidtDfTypeOperations = [];\r\n    this.bidtDfTypeDTO.dftCategory = this.dftCategory;\r\n\r\n    const operations: BidtDfTypeOperationDTO[] = [];\r\n\r\n    this.operationsTableDataSource.dataSrc.forEach((operation) => {\r\n      const operationRow = operation._obj;\r\n      operationRow.docCategories = undefined;\r\n      operationRow.pnTypes = undefined;\r\n      operationRow.bidtDfTypeId = this.bidtDfTypeDTO.id as number;\r\n\r\n      operations.push(operationRow);\r\n    });\r\n    this.folderTypeService.addOrUpdateOperations(operations).subscribe((result) => {\r\n      this.onValidated.emit();\r\n      this.closeDialog();\r\n      this.messageService.showSuccessMessage('global.successOnSave');\r\n    });\r\n  }\r\n\r\n  public deleteOperations(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(\r\n        this.operationsTableDataSource.dataSelection.length === 1\r\n          ? 'confirmDeleteSelectedFolderType'\r\n          : 'confirmDeleteSelectedFolderTypes'\r\n      ),\r\n      accept: () => {\r\n        const operations = this.operationsTableDataSource.dataSrc.filter((operationRow) => {\r\n          return !this.operationsTableDataSource.dataSelection.some((deletedRow) => {\r\n            return (\r\n              deletedRow.dftopeKey === operationRow.dftopeKey &&\r\n              deletedRow.dftopeSequenceNumber === operationRow.dftopeSequenceNumber\r\n            );\r\n          });\r\n        });\r\n\r\n        this.operationsTableDataSource.setData(operations);\r\n      }\r\n    });\r\n  }\r\n\r\n  public addOperation(): void {\r\n    this.openDialogOperation = true;\r\n    this.operationDialogOpenMode = ComponentOpenMode.Create;\r\n    this.selectedOperation = undefined;\r\n  }\r\n\r\n  public editOperation(): void {\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      this.openDialogOperation = true;\r\n      this.operationDialogOpenMode = ComponentOpenMode.Write;\r\n      const selectedRow = { ...this.operationsTableDataSource.dataSelection[0] };\r\n      selectedRow.dftopeKey = this.getOperationValueFromLabel(selectedRow.dftopeKey as string);\r\n      this.selectedOperation = selectedRow;\r\n    }\r\n  }\r\n\r\n  private getOperationValueFromLabel(label: string): string {\r\n    const operation = this.operations.find((optKey) => optKey.label === label);\r\n\r\n    return operation ? operation.value : '';\r\n  }\r\n\r\n  public validateOperation(operation: BidtDfTypeOperationDTO): void {\r\n    if (this.operationsTableDataSource.hasDataSelection) {\r\n      this.operationsTableDataSource.replaceData(\r\n        this.operationsTableDataSource.dataSelection[0],\r\n        this.createOperationRow(operation)\r\n      );\r\n    } else {\r\n      this.operationsTableDataSource.addData([this.createOperationRow(operation)]);\r\n    }\r\n\r\n    this.operationsTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  public isValidForm(): boolean {\r\n    return (\r\n      StringUtils.isNullOrEmpty(this.bidtDfTypeDTO.dftCode) ||\r\n      StringUtils.isNullOrEmpty(this.bidtDfTypeDTO.dftDesignation)\r\n    );\r\n  }\r\n\r\n  private bindOperationRelatedTables(): void {\r\n    this.partNumberTableDataSource.setData([]);\r\n    this.documentCategoriesTableDataSource.setData([]);\r\n    this.propertiesService.getValue('getPnTypeMap').subscribe(\r\n      (results) => {\r\n        results.forEach((pn) => {\r\n          this.partNumberList.push({ value: pn.value, pnType: pn.label });\r\n        });\r\n        this.initPartnumberTableSource();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage('errorOnLoadingMaterialType');\r\n      }\r\n    );\r\n\r\n    this.catalogService.fetchPropertyValuesTableData(parseInt(this.docCategoryId, 10)).subscribe((results) => {\r\n      results.map((category) => {\r\n        const docCategory: DocCategoriesRows = {\r\n          value: category.propertiesKey,\r\n          docCategorie: category.enPropertiesValue\r\n        };\r\n        this.docCategoryList.push(docCategory);\r\n        this.initCategoryTableSource();\r\n      });\r\n    });\r\n  }\r\n\r\n  private init() {\r\n    this.bidtDfTypeDTO = {};\r\n    this.openDialogOperation = false;\r\n    this.selectedOperation = undefined;\r\n    this.elementTypes = [];\r\n    this.taskTypes = [];\r\n    this.partNumberList = [];\r\n    this.docCategoryList = [];\r\n    this.transferTypeList = [];\r\n    this.initalizeTableColumns();\r\n  }\r\n\r\n  private initalizeTableColumns(): void {\r\n    this.operationsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'dftopeSequenceNumber', translateKey: this.getTranslateKey('code'), width: '20%' },\r\n        { field: 'dftopeKey', translateKey: this.getTranslateKey('dftopeKey'), width: '30%' },\r\n        { field: 'objectTypeName', translateKey: this.getTranslateKey('objectType'), width: '25%' },\r\n        { field: 'taskTypeName', translateKey: this.getTranslateKey('taskTypeCode'), width: '25%' }\r\n      ],\r\n      data: []\r\n    });\r\n    this.initPartnumberTableSource();\r\n    this.initCategoryTableSource();\r\n  }\r\n\r\n  private initPartnumberTableSource(): void {\r\n    this.partNumberTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      enableSelection: this.isOneOperationSelected,\r\n      columns: [{ field: 'pnType', translateKey: this.getTranslateKey('pnType') }]\r\n    });\r\n    this.partNumberTableDataSource.setData(this.partNumberList);\r\n\r\n    this.documentCategoriesTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      enableSelection: this.isOneOperationSelected,\r\n      columns: [{ field: 'docCategorie', translateKey: this.getTranslateKey('docCategorie') }]\r\n    });\r\n\r\n    this.documentCategoriesTableDataSource.setData(this.docCategoryList);\r\n  }\r\n\r\n  private initCategoryTableSource(): void {\r\n    this.documentCategoriesTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      enableSelection: this.isOneOperationSelected,\r\n      columns: [{ field: 'docCategorie', translateKey: this.getTranslateKey('docCategorie') }]\r\n    });\r\n\r\n    this.documentCategoriesTableDataSource.setData(this.docCategoryList);\r\n  }\r\n\r\n  private loadDropDowns(): void {\r\n    this.elementTypes = [\r\n      { label: this.getTranslatedValue('item'), value: AWPropertiesConstants.DELIVERY_ELEMENT_TYPE_ITEM },\r\n      { label: this.getTranslatedValue('package'), value: AWPropertiesConstants.DELIVERY_ELEMENT_TYPE_PACKAGE },\r\n      {\r\n        label: this.translateService.instant('asset') as string,\r\n        value: AWPropertiesConstants.DELIVERY_ELEMENT_TYPE_ASSET\r\n      }\r\n    ];\r\n\r\n    this.propertiesService.getValue('getTaskTypeMap').subscribe((results) => {\r\n      this.taskTypes = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n    this.loadTransferTypes();\r\n  }\r\n\r\n  private getTranslatedValue(key: string): string {\r\n    return this.translateService.instant(this.getTranslateKey(key));\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      {{ title }}\\r\\n    </div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: isCreateOpenMode }\\\">\\r\\n            <label class=\\\"form-label\\\">\\r\\n              {{ getComponentName() + \\\".code\\\" | translate }}\\r\\n            </label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <input\\r\\n                type=\\\"number\\\"\\r\\n                class=\\\"aw-input\\\"\\r\\n                [(ngModel)]=\\\"operation.dftopeSequenceNumber\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                maxlength=\\\"50\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: isCreateOpenMode }\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".operation\\\" | translate }}</label>\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                [options]=\\\"operationList\\\"\\r\\n                [(ngModel)]=\\\"operation.dftopeKey\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: isCreateOpenMode }\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".elementType\\\" | translate }}</label>\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                [options]=\\\"elementTypes\\\"\\r\\n                [(ngModel)]=\\\"operation.objectType\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskType\\\" | translate }}</label>\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                [options]=\\\"taskTypes\\\"\\r\\n                [(ngModel)]=\\\"operation.taskTypeCode\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"validate()\\\" [disabled]=\\\"isValidForm()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { AWPropertiesConstants } from '../../../../../../../shared/constants/aw-properties-constants';\r\nimport { GenericPropertyConstants } from '../../../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BidtDfTypeOperationDTO } from '../../../../../../../shared/types/api-types/bidt-df-type-operation-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\nimport { SelectItemUtils } from '../../../../../../../shared/utils/select-item-utils';\r\nimport { StringUtils } from '../../../../../../../shared/utils/string-utils';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-operation-catalog',\r\n  templateUrl: './dialog-operation.component.html'\r\n})\r\nexport class DialogOperationCatalogComponent extends DialogComponent implements OnInit {\r\n  private static readonly NEW_OPERATION: string = 'newOperation';\r\n  private static readonly EDIT_OPERATION: string = 'editOperation';\r\n\r\n  @Input('data')\r\n  public operation: BidtDfTypeOperationDTO;\r\n\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtDfTypeOperationDTO>;\r\n\r\n  public component: typeof DialogOperationCatalogComponent;\r\n\r\n  public title: string;\r\n\r\n  public elementTypes: SelectItem[];\r\n  public taskTypes: SelectItem[];\r\n  public operationList: SelectItem[];\r\n\r\n  public constructor(\r\n    public messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService,\r\n    private readonly translateService: TranslateService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogOperationCatalogComponent');\r\n    this.component = DialogOperationCatalogComponent;\r\n    this.elementTypes = [];\r\n    this.taskTypes = [];\r\n    this.onValidated = new EventEmitter<BidtDfTypeOperationDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    this.bindDropDowns();\r\n    if (!this.operation) {\r\n      this.operation = { bidtDfTypeId: 0, pnTypes: [], docCategories: [] };\r\n      this.title = this.getTranslatedValue(this.component.NEW_OPERATION);\r\n    } else {\r\n      this.title = this.getTranslatedValue(this.component.EDIT_OPERATION);\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.operation);\r\n    this.closeDialog();\r\n  }\r\n\r\n  private bindDropDowns(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.LOGISTICAL_OPERATION_MAP).subscribe((results) => {\r\n      this.operationList = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n\r\n    this.elementTypes = [\r\n      { label: this.getTranslatedValue('item'), value: AWPropertiesConstants.DELIVERY_ELEMENT_TYPE_ITEM },\r\n      { label: this.getTranslatedValue('package'), value: AWPropertiesConstants.DELIVERY_ELEMENT_TYPE_PACKAGE },\r\n      { label: this.translateService.instant('asset'), value: AWPropertiesConstants.DELIVERY_ELEMENT_TYPE_ASSET }\r\n    ];\r\n\r\n    this.propertiesService.getValue('getTaskTypeMap').subscribe((results) => {\r\n      this.taskTypes = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  private getTranslatedValue(key: string): string {\r\n    return this.translateService.instant(this.getTranslateKey(key));\r\n  }\r\n\r\n  public isValidForm(): boolean {\r\n    return StringUtils.isNullOrEmpty(this.operation.dftopeKey) || StringUtils.isNullOrEmpty(this.operation.objectType);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { TableDataSource } from '../../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ExtractTranslationPipe } from '../../../../../../../shared/pipes/extract-translation.pipe';\r\nimport { ConfirmationService } from '../../../../../../../shared/services/confirmation.service';\r\nimport { LoaderService } from '../../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { AddOrUpdateDfTypeInputDTO } from '../../../../../../../shared/types/api-input-types/catalog/add-update-df-type-input.interface';\r\nimport { BidtDfTypeDTO } from '../../../../../../../shared/types/api-types/bidt-df-type-dto.interface';\r\nimport { BidtDfTypeIdDTO } from '../../../../../../../shared/types/api-types/bidt-df-type-id-dto.interface';\r\nimport { StringUtils } from '../../../../../../../shared/utils/string-utils';\r\nimport { CatalogService } from '../../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../../types/dynamic-catalog.interface';\r\nimport { FolderTypeService } from '../folder-type.service';\r\n\r\ninterface BidtDfTypeRow extends BidtDfTypeIdDTO {\r\n  dftCategory?: string; // 50\r\n  dftCode?: string; // 50\r\n  dftDesignation?: string; // 100\r\n  noOfOperations: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-receipt-shipment-type',\r\n  templateUrl: '../folder-type.component.html'\r\n})\r\nexport class ReceiptTypeComponent extends DynamicCatalog implements OnInit {\r\n  public static readonly category: string = 'receipt';\r\n  private static readonly NO_OF_OPERATIONS: number = 0;\r\n  private static readonly DOCUMENT_CATEGORY: string = 'DOC_ASSET_CATEGORY';\r\n  public docCategoryPropertyId: string | undefined;\r\n  public openDialogFolderType: boolean;\r\n  public folderTypeDialogOpenMode: ComponentOpenMode;\r\n  private receiptTypeData: BidtDfTypeDTO[];\r\n\r\n  public categoryTableDataSource: TableDataSource<BidtDfTypeRow>;\r\n  public component: typeof ReceiptTypeComponent;\r\n\r\n  public constructor(\r\n    public readonly loaderService: LoaderService,\r\n    public readonly messageService: MessageService,\r\n    public readonly folderTypeService: FolderTypeService,\r\n    public readonly confirmationService: ConfirmationService,\r\n    private readonly extractTranslationPipe: ExtractTranslationPipe,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n    this.component = ReceiptTypeComponent;\r\n    this.openDialogFolderType = false;\r\n    this.folderTypeDialogOpenMode = ComponentOpenMode.Read;\r\n\r\n    this.categoryTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'dftCode', translateKey: this.getTranslateKey('code'), width: '15%' },\r\n        { field: 'dftDesignation', translateKey: this.getTranslateKey('designation'), width: '55%' },\r\n        { field: 'noOfOperations', translateKey: this.getTranslateKey('noOfOperations'), width: '30%' }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.getDocCategoryPropertyId();\r\n    this.loadReceiptTable();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'ReceiptTypeComponent';\r\n  }\r\n\r\n  public addFolderType() {\r\n    this.openDialogFolderType = true;\r\n    this.folderTypeDialogOpenMode = ComponentOpenMode.Create;\r\n  }\r\n\r\n  public deleteFolderTypes(receiptTypeRows: BidtDfTypeRow[]): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(\r\n        receiptTypeRows.length === 1 ? 'confirmDeleteSelectedReceiptType' : 'confirmDeleteSelectedReceiptTypes'\r\n      ),\r\n      accept: () => {\r\n        const observables = receiptTypeRows.map((receipt) =>\r\n          this.folderTypeService.removeFolderType({\r\n            id: receipt.id\r\n          })\r\n        );\r\n        forkJoin(observables).subscribe({\r\n          next: () => {\r\n            this.loadReceiptTable();\r\n\r\n            this.messageService.showSuccessMessage(\r\n              this.getTranslateKey(\r\n                receiptTypeRows.length === 1 ? 'successOnDeleteReceiptType' : 'successOnDeleteReceiptTypes'\r\n              )\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.loadReceiptTable();\r\n  }\r\n\r\n  public refreshFolderType(): void {\r\n    this.loadReceiptTable();\r\n  }\r\n\r\n  private loadReceiptTable(): void {\r\n    this.receiptTypeData = [];\r\n    this.categoryTableDataSource.setData([]);\r\n    this.folderTypeService.loadReceiptType().subscribe(\r\n      (results: BidtDfTypeDTO[]) => {\r\n        const bidtDfTypeRows: BidtDfTypeRow[] = [];\r\n        this.receiptTypeData = results && results.length ? results : [];\r\n        results.forEach((receipt) => {\r\n          const row: BidtDfTypeRow = {\r\n            id: receipt.id,\r\n            dftCategory: receipt.dftCategory,\r\n            dftCode: receipt.dftCode,\r\n            dftDesignation: StringUtils.orEmpty(this.extractTranslationPipe.transform(receipt.dftDesignation)),\r\n            noOfOperations:\r\n              !!receipt.bidtDfTypeOperations && receipt.bidtDfTypeOperations.length > 0\r\n                ? receipt.bidtDfTypeOperations.length\r\n                : this.component.NO_OF_OPERATIONS\r\n          };\r\n          bidtDfTypeRows.push(row);\r\n        });\r\n\r\n        this.categoryTableDataSource.setData(bidtDfTypeRows);\r\n        this.categoryTableDataSource.update();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetResults'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private getDocCategoryPropertyId(): void {\r\n    this.catalogService.getPropertyCatalogIdNameMapping().subscribe((results) => {\r\n      const propertyIds = results.filter(\r\n        (property) =>\r\n          property.propertiesName && property.propertiesName.toUpperCase() === this.component.DOCUMENT_CATEGORY\r\n      );\r\n      this.docCategoryPropertyId = propertyIds[0] && propertyIds[0].propertiesId;\r\n    });\r\n  }\r\n\r\n  public getSelectedFolderObject(data: BidtDfTypeRow): AddOrUpdateDfTypeInputDTO {\r\n    const selectedObject = (data && data.id && this.receiptTypeData.find((item) => item.id === data.id)) || {};\r\n    selectedObject.dftCode = data && data.dftCode;\r\n    selectedObject.dftDesignation = data && data.dftDesignation;\r\n\r\n    return {\r\n      dfType: selectedObject,\r\n      dfTypeOperations: selectedObject.bidtDfTypeOperations\r\n    };\r\n  }\r\n\r\n  public editSelectedType(): void {\r\n    this.openDialogFolderType = true;\r\n    this.folderTypeDialogOpenMode = ComponentOpenMode.Write;\r\n  }\r\n  public openSelectedType(): void {\r\n    this.openDialogFolderType = true;\r\n    this.folderTypeDialogOpenMode = ComponentOpenMode.Read;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { TableDataSource } from '../../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../../shared/services/confirmation.service';\r\nimport { LoaderService } from '../../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { AddOrUpdateDfTypeInputDTO } from '../../../../../../../shared/types/api-input-types/catalog/add-update-df-type-input.interface';\r\nimport { BidtDfTypeDTO } from '../../../../../../../shared/types/api-types/bidt-df-type-dto.interface';\r\nimport { BidtDfTypeIdDTO } from '../../../../../../../shared/types/api-types/bidt-df-type-id-dto.interface';\r\nimport { CatalogService } from '../../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../../types/dynamic-catalog.interface';\r\nimport { FolderTypeService } from '../folder-type.service';\r\n\r\ninterface BidtDfTypeRow extends BidtDfTypeIdDTO {\r\n  dftCategory?: string; // 50\r\n  dftCode?: string; // 50\r\n  dftDesignation?: string; // 100\r\n  noOfOperations: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-receipt-shipment-type',\r\n  templateUrl: '../folder-type.component.html'\r\n})\r\nexport class ShipmentTypeComponent extends DynamicCatalog implements OnInit {\r\n  public static readonly category: string = 'shipment';\r\n  private static readonly NO_OF_OPERATIONS: number = 0;\r\n  private static readonly DOCUMENT_CATEGORY: string = 'DOC_ASSET_CATEGORY';\r\n  public docCategoryPropertyId: string | undefined;\r\n  public openDialogFolderType: boolean;\r\n  public folderTypeDialogOpenMode: ComponentOpenMode;\r\n\r\n  private shipmanetTypeData: BidtDfTypeDTO[];\r\n\r\n  public categoryTableDataSource: TableDataSource<BidtDfTypeRow>;\r\n  public component: typeof ShipmentTypeComponent;\r\n\r\n  public constructor(\r\n    public readonly loaderService: LoaderService,\r\n    public readonly messageService: MessageService,\r\n    public readonly folderTypeService: FolderTypeService,\r\n    public readonly confirmationService: ConfirmationService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n    this.component = ShipmentTypeComponent;\r\n    this.openDialogFolderType = false;\r\n    this.folderTypeDialogOpenMode = ComponentOpenMode.Read;\r\n\r\n    this.categoryTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'dftCode', translateKey: this.getTranslateKey('code') },\r\n        {\r\n          field: 'dftDesignation',\r\n          translateKey: this.getTranslateKey('designation')\r\n        },\r\n        {\r\n          field: 'noOfOperations',\r\n          translateKey: this.getTranslateKey('noOfOperations')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.getDocCategoryPropertyId();\r\n    this.loadShipmentType();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'ShipmentTypeComponent';\r\n  }\r\n\r\n  public addFolderType() {\r\n    this.openDialogFolderType = true;\r\n    this.folderTypeDialogOpenMode = ComponentOpenMode.Create;\r\n  }\r\n\r\n  public deleteFolderTypes(receiptTypeRows: BidtDfTypeRow[]): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(\r\n        receiptTypeRows.length === 1 ? 'confirmDeleteSelectedShipmentType' : 'confirmDeleteSelectedShimpentTypes'\r\n      ),\r\n      accept: () => {\r\n        const observables = receiptTypeRows.map((receipt) =>\r\n          this.folderTypeService.removeFolderType({\r\n            id: receipt.id\r\n          })\r\n        );\r\n        forkJoin(observables).subscribe({\r\n          next: () => {\r\n            this.loadShipmentType();\r\n\r\n            this.messageService.showSuccessMessage(\r\n              this.getTranslateKey(\r\n                receiptTypeRows.length === 1 ? 'successOnDeleteShimpmentType' : 'successOnDeleteShimpmentTypes'\r\n              )\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.loadShipmentType();\r\n  }\r\n\r\n  public refreshFolderType(): void {\r\n    this.loadShipmentType();\r\n  }\r\n\r\n  private loadShipmentType(): void {\r\n    this.shipmanetTypeData = [];\r\n    this.categoryTableDataSource.setData([]);\r\n    this.folderTypeService.loadShipmentType().subscribe(\r\n      (results: BidtDfTypeDTO[]) => {\r\n        this.shipmanetTypeData = results && results.length ? results : [];\r\n        const bidtDfTypeRows: BidtDfTypeRow[] = [];\r\n        results.forEach((shipment) => {\r\n          const row: BidtDfTypeRow = {\r\n            id: shipment.id,\r\n            dftCategory: shipment.dftCategory,\r\n            dftCode: shipment.dftCode,\r\n            dftDesignation: shipment.dftDesignation,\r\n            noOfOperations:\r\n              !!shipment.bidtDfTypeOperations && shipment.bidtDfTypeOperations.length > 0\r\n                ? shipment.bidtDfTypeOperations.length\r\n                : this.component.NO_OF_OPERATIONS\r\n          };\r\n          bidtDfTypeRows.push(row);\r\n        });\r\n\r\n        this.categoryTableDataSource.setData(bidtDfTypeRows);\r\n        this.categoryTableDataSource.update();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetResults'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private getDocCategoryPropertyId(): void {\r\n    this.catalogService.getPropertyCatalogIdNameMapping().subscribe((results) => {\r\n      const propertyIds = results.filter(\r\n        (property) =>\r\n          property.propertiesName && property.propertiesName.toUpperCase() === this.component.DOCUMENT_CATEGORY\r\n      );\r\n      this.docCategoryPropertyId = propertyIds[0] && propertyIds[0].propertiesId;\r\n    });\r\n  }\r\n\r\n  public editSelectedType(): void {\r\n    this.openDialogFolderType = true;\r\n    this.folderTypeDialogOpenMode = ComponentOpenMode.Write;\r\n  }\r\n\r\n  public openSelectedType(): void {\r\n    this.openDialogFolderType = true;\r\n    this.folderTypeDialogOpenMode = ComponentOpenMode.Read;\r\n  }\r\n\r\n  public getSelectedFolderObject(data: BidtDfTypeRow): AddOrUpdateDfTypeInputDTO {\r\n    const selectedObject = (data && data.id && this.shipmanetTypeData.find((item) => item.id === data.id)) || {};\r\n    selectedObject.dftCode = data && data.dftCode;\r\n    selectedObject.dftDesignation = data && data.dftDesignation;\r\n\r\n    return {\r\n      dfType: selectedObject,\r\n      dfTypeOperations: selectedObject.bidtDfTypeOperations\r\n    };\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" width>\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      {{ title }}\\r\\n    </div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: isCreateOpenMode || isWriteOpenMode }\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".operation\\\" | translate }}</label>\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                [options]=\\\"operationList\\\"\\r\\n                [(ngModel)]=\\\"operation.smtoKey\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskType\\\" | translate }}</label>\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                [options]=\\\"taskTypes\\\"\\r\\n                [(ngModel)]=\\\"operation.taskTypeCode\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"validate()\\\" [disabled]=\\\"isValidForm()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { GenericPropertyConstants } from '../../../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BidtStockMvtTypeOperationDTO } from '../../../../../../../shared/types/api-types/bidt-stock-mvt-type-operation-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\nimport { SelectItemUtils } from '../../../../../../../shared/utils/select-item-utils';\r\nimport { StringUtils } from '../../../../../../../shared/utils/string-utils';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-operation-stock-movement',\r\n  templateUrl: './dialog-operation-stock-movement.component.html'\r\n})\r\nexport class DialogOperationStockMovementComponent extends DialogComponent implements OnInit {\r\n  private static readonly NEW_OPERATION: string = 'newOperation';\r\n  private static readonly EDIT_OPERATION: string = 'editOperation';\r\n\r\n  @Input('data')\r\n  public operation: BidtStockMvtTypeOperationDTO;\r\n\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtStockMvtTypeOperationDTO>;\r\n\r\n  public component: typeof DialogOperationStockMovementComponent;\r\n\r\n  public title: string;\r\n  public operationList: SelectItem[];\r\n  public taskTypes: SelectItem[];\r\n\r\n  public constructor(\r\n    public readonly messageService: MessageService,\r\n    public readonly sessionService: SessionService,\r\n    public readonly propertiesService: PropertiesService,\r\n    private readonly translateService: TranslateService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogOperationStockMovementComponent');\r\n    this.component = DialogOperationStockMovementComponent;\r\n    this.operationList = [];\r\n    this.taskTypes = [];\r\n    this.onValidated = new EventEmitter<BidtStockMvtTypeOperationDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    this.bindDropDowns();\r\n    if (!this.operation) {\r\n      this.operation = { bidtStockMvtType: '', pnTypes: [], docCategories: [] };\r\n      this.title = this.getTranslatedValue(this.component.NEW_OPERATION);\r\n    } else {\r\n      this.title = this.getTranslatedValue(this.component.EDIT_OPERATION);\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.operation);\r\n    this.closeDialog();\r\n  }\r\n\r\n  private bindDropDowns(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.LOGISTICAL_OPERATION_MAP).subscribe((results) => {\r\n      this.operationList = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n\r\n    this.propertiesService.getValue(GenericPropertyConstants.TASK_TYPE_MAP).subscribe((results) => {\r\n      this.taskTypes = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  private getTranslatedValue(key: string): string {\r\n    return this.translateService.instant(this.getTranslateKey(key));\r\n  }\r\n\r\n  public isValidForm(): boolean {\r\n    return StringUtils.isNullOrEmpty(this.operation.smtoKey);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"70\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"grid-row\\\">\\r\\n      <div class=\\\"grid-cell--12\\\">\\r\\n        <div class=\\\"grid-cell--8\\\">\\r\\n          <div class=\\\"grid-cell-content\\\">\\r\\n            <div class=\\\"column\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: isCreateOpenMode || isReadOpenMode || isWriteOpenMode }\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ getComponentName() + \\\".key\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input\\r\\n                      #id=\\\"ngModel\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"aw-input\\\"\\r\\n                      [(ngModel)]=\\\"bidtStockMvtTypeDTO.id\\\"\\r\\n                      [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n                      maxlength=\\\"50\\\"\\r\\n                      [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n                      [pValidateOnly]=\\\"true\\\"\\r\\n                    />\\r\\n                    <p-message\\r\\n                      *ngIf=\\\"id.invalid && (id.dirty || id.touched)\\\"\\r\\n                      severity=\\\"error\\\"\\r\\n                      [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n                    ></p-message>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ getComponentName() + \\\".name\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"aw-input\\\"\\r\\n                      [(ngModel)]=\\\"bidtStockMvtTypeDTO.smtName\\\"\\r\\n                      [disabled]=\\\"isReadOpenMode\\\"\\r\\n                      maxlength=\\\"100\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-margin\\\">\\r\\n                  <h3 class=\\\"grid-cell-title heading\\\">\\r\\n                    {{ getComponentName() + \\\".meaning\\\" | translate }}\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-margin-selectbox\\\">\\r\\n                  <p-selectButton\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                    [(ngModel)]=\\\"bidtStockMvtTypeDTO.smtWay\\\"\\r\\n                    [options]=\\\"changeMeaningList\\\"\\r\\n                  ></p-selectButton>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">{{ getComponentName() + \\\".enteringAreaType\\\" | translate }}</label>\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      name=\\\"status\\\"\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      appendTo=\\\"body\\\"\\r\\n                      placeholder=\\\"&nbsp;\\\"\\r\\n                      [disabled]=\\\"isReadOpenMode\\\"\\r\\n                      [options]=\\\"storageBinTypes\\\"\\r\\n                      [(ngModel)]=\\\"bidtStockMvtTypeDTO.receiptAreaType\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">{{ getComponentName() + \\\".outgoingZoneType\\\" | translate }}</label>\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      name=\\\"status\\\"\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      appendTo=\\\"body\\\"\\r\\n                      placeholder=\\\"&nbsp;\\\"\\r\\n                      [disabled]=\\\"isReadOpenMode\\\"\\r\\n                      [options]=\\\"storageBinTypes\\\"\\r\\n                      [(ngModel)]=\\\"bidtStockMvtTypeDTO.issueAreaType\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"grid-cell--4\\\">\\r\\n          <div class=\\\"details\\\">\\r\\n            <div class=\\\"column\\\">\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">\\r\\n                  {{ getComponentName() + \\\".status\\\" | translate }}\\r\\n                </h4>\\r\\n                <div class=\\\"section-content\\\" style=\\\"height: 18em; overflow: auto;\\\">\\r\\n                  <a-table [dataSource]=\\\"statusTableDataSource\\\"> </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"grid-row\\\">\\r\\n      <div class=\\\"grid-cell--12\\\">\\r\\n        <div class=\\\"grid-cell-header\\\">\\r\\n          <div class=\\\"grid-cell-title-container\\\">\\r\\n            <h3 class=\\\"grid-cell-title\\\">\\r\\n              {{ getComponentName() + \\\".operations\\\" | translate }}\\r\\n              ({{ operationsTableDataSource ? operationsTableDataSource.dataCount : 0 }})\\r\\n            </h3>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"grid-cell-content\\\">\\r\\n          <div class=\\\"column\\\">\\r\\n            <div class=\\\"list-with-details\\\">\\r\\n              <div class=\\\"grid-row\\\">\\r\\n                <div class=\\\"grid-cell--12\\\">\\r\\n                  <div class=\\\"grid-cell--8\\\">\\r\\n                    <div class=\\\"list\\\">\\r\\n                      <div class=\\\"list-header\\\"></div>\\r\\n                      <a-table\\r\\n                        [dataSource]=\\\"operationsTableDataSource\\\"\\r\\n                        (onRowSelect)=\\\"onOperationsRowSelectUnselect()\\\"\\r\\n                        (onRowUnselect)=\\\"onOperationsRowSelectUnselect()\\\"\\r\\n                      >\\r\\n                        <ng-template tableActionsDef>\\r\\n                          <button\\r\\n                            *ngIf=\\\"\\r\\n                              !isReadOpenMode &&\\r\\n                              operationsTableDataSource &&\\r\\n                              operationsTableDataSource.dataSrc.length > 1 &&\\r\\n                              operationsTableDataSource.hasDataSelection &&\\r\\n                              operationsTableDataSource.dataSelectionCount === 1\\r\\n                            \\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"moveDown()\\\"\\r\\n                          >\\r\\n                            {{ getComponentName() + \\\".moveDown\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            *ngIf=\\\"\\r\\n                              !isReadOpenMode &&\\r\\n                              operationsTableDataSource &&\\r\\n                              operationsTableDataSource.dataSrc.length > 1 &&\\r\\n                              operationsTableDataSource.hasDataSelection &&\\r\\n                              operationsTableDataSource.dataSelectionCount === 1\\r\\n                            \\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"moveUp()\\\"\\r\\n                          >\\r\\n                            {{ getComponentName() + \\\".moveUp\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            *ngIf=\\\"\\r\\n                              !isReadOpenMode &&\\r\\n                              operationsTableDataSource &&\\r\\n                              !operationsTableDataSource.hasDataSelection\\r\\n                            \\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"addOperation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            *ngIf=\\\"\\r\\n                              !isReadOpenMode &&\\r\\n                              operationsTableDataSource &&\\r\\n                              operationsTableDataSource.hasDataSelection &&\\r\\n                              operationsTableDataSource.dataSelectionCount === 1\\r\\n                            \\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editOperation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            *ngIf=\\\"\\r\\n                              !isReadOpenMode && operationsTableDataSource && operationsTableDataSource.hasDataSelection\\r\\n                            \\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"deleteOperations()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n                        </ng-template>\\r\\n                      </a-table>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"grid-cell--4\\\">\\r\\n                    <div class=\\\"details\\\">\\r\\n                      <div class=\\\"column\\\">\\r\\n                        <div class=\\\"section\\\">\\r\\n                          <h4 class=\\\"section-title\\\">\\r\\n                            {{ getComponentName() + \\\".materialTypes\\\" | translate }}\\r\\n                          </h4>\\r\\n\\r\\n                          <div class=\\\"section-content\\\" style=\\\"height: 18em; overflow: auto;\\\">\\r\\n                            <a-table\\r\\n                              [dataSource]=\\\"partNumberTableDataSource\\\"\\r\\n                              (onRowSelect)=\\\"onPartNumberRowSelectUnselect()\\\"\\r\\n                              (onRowUnselect)=\\\"onPartNumberRowSelectUnselect()\\\"\\r\\n                            >\\r\\n                            </a-table>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"section\\\">\\r\\n                          <h4 class=\\\"section-title\\\">\\r\\n                            {{ getComponentName() + \\\".linkedDocCategories\\\" | translate }}\\r\\n                          </h4>\\r\\n\\r\\n                          <div class=\\\"section-content\\\" style=\\\"height: 18em; overflow: auto;\\\">\\r\\n                            <a-table\\r\\n                              [dataSource]=\\\"documentCategoriesTableDataSource\\\"\\r\\n                              (onRowSelect)=\\\"onDocCategoriesRowSelectUnselect()\\\"\\r\\n                              (onRowUnselect)=\\\"onDocCategoriesRowSelectUnselect()\\\"\\r\\n                            >\\r\\n                            </a-table>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"disableButton()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n<aw-dialog-operation-stock-movement\\r\\n  *ngIf=\\\"openDialogOperation\\\"\\r\\n  [(display)]=\\\"openDialogOperation\\\"\\r\\n  [data]=\\\"selectedOperation\\\"\\r\\n  [openMode]=\\\"operationDialogOpenMode\\\"\\r\\n  (onValidated)=\\\"validateOperation($event)\\\"\\r\\n></aw-dialog-operation-stock-movement>\\r\\n\"","module.exports = \".heading {\\n  color: #01579b; }\\n\\n.form-margin {\\n  margin: 0 calc(8px * 2);\\n  margin-top: 10px; }\\n\\n.form-margin-selectbox {\\n  margin: 0 calc(8px * 2);\\n  margin-top: 10px;\\n  margin-bottom: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi9jYXRhbG9nL2R5bmFtaWMtY2F0YWxvZy1jb21wb25lbnRzL2xvZ2lzdGljcy9zdG9jay1tb3ZlbWVudC10eXBlL3BvcHVwLXN0b2NrLW1vdmVtZW50LXR5cGUvZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxhcHBcXG1haW5cXGFkbWluaXN0cmF0aW9uXFxjYXRhbG9nXFxkeW5hbWljLWNhdGFsb2ctY29tcG9uZW50c1xcbG9naXN0aWNzXFxzdG9jay1tb3ZlbWVudC10eXBlXFxwb3B1cC1zdG9jay1tb3ZlbWVudC10eXBlXFxkaWFsb2ctc3RvY2stbW92ZW1lbnQtdHlwZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi9jYXRhbG9nL2R5bmFtaWMtY2F0YWxvZy1jb21wb25lbnRzL2xvZ2lzdGljcy9zdG9jay1tb3ZlbWVudC10eXBlL3BvcHVwLXN0b2NrLW1vdmVtZW50LXR5cGUvZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxzdHlsZXNcXF9jb25zdGFudHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNFLGNDQW9CLEVBQUE7O0FER3RCO0VBQ0UsdUJBQXVCO0VBQ3ZCLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLHVCQUF1QjtFQUN2QixnQkFBZ0I7RUFDaEIsbUJBQW1CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2FkbWluaXN0cmF0aW9uL2NhdGFsb2cvZHluYW1pYy1jYXRhbG9nLWNvbXBvbmVudHMvbG9naXN0aWNzL3N0b2NrLW1vdmVtZW50LXR5cGUvcG9wdXAtc3RvY2stbW92ZW1lbnQtdHlwZS9kaWFsb2ctc3RvY2stbW92ZW1lbnQtdHlwZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJjb25zdGFudHNcIjtcclxuQGltcG9ydCBcIm1peGluc1wiO1xyXG5cclxuLmhlYWRpbmcge1xyXG4gIGNvbG9yOiAkYWNjZW50LWNvbG9yO1xyXG59XHJcblxyXG4uZm9ybS1tYXJnaW4ge1xyXG4gIG1hcmdpbjogMCBjYWxjKDhweCAqIDIpO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5mb3JtLW1hcmdpbi1zZWxlY3Rib3gge1xyXG4gIG1hcmdpbjogMCBjYWxjKDhweCAqIDIpO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxufVxyXG4iLCIkcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4kc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XHJcbiRwcmltYXJ5LXRleHQtY29sb3I6ICMwMDA7XHJcbiRzZWNvbmRhcnktdGV4dC1jb2xvcjogIzU5NTk1OTtcclxuJGFjY2VudC1jb2xvcjogIzAxNTc5YjtcclxuXHJcbiRib2R5LWJhY2tncm91bmQtY29sb3I6ICNlOGViZWQ7XHJcbiR0b3BiYXItY29sb3I6ICNmYWZhZmE7XHJcblxyXG4vLyAkcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjMWUxZTFlO1xyXG4vLyAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7XHJcbi8vICRwcmltYXJ5LXRleHQtY29sb3I6ICNlOGU4ZTg7XHJcbi8vICRzZWNvbmRhcnktdGV4dC1jb2xvcjogI2ZmZjtcclxuLy8gJGFjY2VudC1jb2xvcjogIzljZGNmZTtcclxuXHJcbiRib3JkZXItY29sb3I6ICRzZWNvbmRhcnktdGV4dC1jb2xvcjtcclxuJGJvcmRlci1jb2xvci0tZGlzYWJsZWQ6IHRyYW5zcGFyZW50O1xyXG4kYm9yZGVyLWNvbG9yLS1mb2N1czogJGFjY2VudC1jb2xvcjtcclxuJGJvcmRlci1jb2xvci0taG92ZXI6ICMxYTFhMWE7XHJcblxyXG4kZ3JlZW4tZGFyazE6ICMyNzYzMmE7XHJcbiRncmVlbi1saWdodDE6ICM0Y2FmNTA7XHJcbiRvcmFuZ2U6ICNmZmMxMDc7XHJcbiRyZWQtZGFyazE6ICNhODI1MjU7XHJcbiRyZWQtbGlnaHQxOiAjZjY2ODVlO1xyXG4kYmx1ZS1saWdodDE6ICNiOGQwZTg7XHJcbiRibHVlLWRhcmsxOiAjMDA2ZWE5O1xyXG4kZ3JleTE6ICNjOGQ0ZDY7XHJcbiR5ZWxsb3cxOiAjZGRkZjAwO1xyXG5cclxuJGNyaXRpY2FsLXZhbHVlLWRhcms6ICNmYmE2NDM7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG4kY3JpdGljYWwtdmFsdWUtbGlnaHQ6ICNmZWNjOGU7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG4kY2FsZW5kYXIteWVsbG93OiAjZWZlZmIwOyAvLyBUT0RPOiByZW1vdmUgaXRcclxuJGJhZC12YWx1ZS1kYXJrOiAjZmY2NzU4OyAvLyBUT0RPOiByZW1vdmUgaXRcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbiRib3JkZXItcmFkaXVzOiA0cHg7XHJcbiRib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4kYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiRmb250LWZhbWlseTogXCJMYXRvTGF0aW5XZWJcIjtcclxuJGZvbnQtc2l6ZTogMC44NzVyZW07XHJcbiRmb250LXdlaWdodDogNDAwO1xyXG4kbGluZS1oZWlnaHQ6IDEuNDI4NTcxNDI5O1xyXG4kbWFyZ2luLXZhbHVlOiA4cHg7XHJcbiRwYWdlLW1heC13aWR0aDogMTM2NnB4O1xyXG4kYXR0cmlidXRlcy1jb2x1bW4td2lkdGgtNDogNDtcclxuJGF0dHJpYnV0ZXMtY29sdW1uLXdpZHRoLTM6IDM7XHJcbiRhdHRyaWJ1dGVzLWNvbHVtbi13aWR0aC0yOiAyO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuJGxlZnQtc2lkZWJhci13aWR0aC0tY29sbGFwc2VkOiA1MHB4O1xyXG4kbGVmdC1zaWRlYmFyLXdpZHRoLS1leHBhbmRlZDogMjIwcHg7XHJcbiRyaWdodC1zaWRlYmFyLXdpZHRoLS1jb2xsYXBzZWQ6IDUwcHg7XHJcbiRyaWdodC1zaWRlYmFyLXdpZHRoLS1leHBhbmRlZDogMjIwcHg7XHJcbiR0b3BiYXItaGVpZ2h0OiA0MHB4O1xyXG4kbWFpbmJhci1ib3JkZXItY29sb3I6IGRhcmtlbigkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3IsIDUlKTtcclxuJG1haW5iYXItYm9yZGVyLXdpZHRoOiAycHg7XHJcbiRwYWdlLWhlYWRlci1oZWlnaHQ6IDUuNXJlbTtcclxuJGZvcm0tY29udHJvbC1oZWlnaHQ6IDIuNXJlbTtcclxuJGNoZWNrYm94LWhlaWdodDogMS4yNXJlbTtcclxuJHJhZGlvYnV0dG9uLWhlaWdodDogMS4yNXJlbTtcclxuIl19 */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { TableDataSource } from '../../../../../../../shared/components/table/table-data-source';\r\nimport { GenericPropertyConstants } from '../../../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ExtractTranslationPipe } from '../../../../../../../shared/pipes/extract-translation.pipe';\r\nimport { FormatSelectOptionPipe } from '../../../../../../../shared/pipes/format-select-option.pipe';\r\nimport { ConfirmationService } from '../../../../../../../shared/services/confirmation.service';\r\nimport { InputValidationService } from '../../../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../../shared/services/properties.service';\r\nimport { BidtStockMvtTypeDTO } from '../../../../../../../shared/types/api-types/bidt-stock-mvt-type-dto.interface';\r\nimport { BidtStockMvtTypeOperationDTO } from '../../../../../../../shared/types/api-types/bidt-stock-mvt-type-operation-dto.interface';\r\nimport { BidtStockMvtTypeOperationIdDTO } from '../../../../../../../shared/types/api-types/bidt-stock-mvt-type-operation-id-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../shared/types/label-value.interface';\r\nimport { NumberUtils } from '../../../../../../../shared/utils/number-utils';\r\nimport { StringUtils } from '../../../../../../../shared/utils/string-utils';\r\nimport { CatalogService } from '../../../../catalog.service';\r\nimport { StockMovementTypeService } from '../stock-movement-type.service';\r\n\r\ninterface PartNumberRows {\r\n  value?: string;\r\n  pnType?: string;\r\n}\r\ninterface DocCategoriesRows {\r\n  value?: string;\r\n  docCategorie?: string;\r\n}\r\ninterface StatusTableRows {\r\n  value?: string;\r\n  label?: string;\r\n}\r\ninterface OperationTableRows extends BidtStockMvtTypeOperationIdDTO {\r\n  bidtStockMvtTypeId?: number;\r\n  bidtStockMvtType?: string;\r\n  smtoKey?: string;\r\n  smtoSequenceNumber?: string;\r\n  taskTypeCode?: string;\r\n  taskTypeName?: string;\r\n  pnTypes?: PartNumberRows[];\r\n  docCategories?: DocCategoriesRows[];\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-stock-movement-type',\r\n  styleUrls: ['./dialog-stock-movement-type.component.scss'],\r\n  templateUrl: './dialog-stock-movement-type.component.html'\r\n})\r\nexport class DialogStockMovementTypeComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input() public popupData: number;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtStockMvtTypeDTO>;\r\n\r\n  @Input()\r\n  public docCategoryId: string;\r\n\r\n  public title: string;\r\n\r\n  public component: typeof DialogStockMovementTypeComponent;\r\n\r\n  public bidtStockMvtTypeDTO: BidtStockMvtTypeDTO;\r\n\r\n  public openDialogOperation: boolean;\r\n  public operationDialogOpenMode: ComponentOpenMode;\r\n\r\n  public addOrUpdateInputDTO: BidtStockMvtTypeDTO;\r\n  public changeMeaningList: LabelValue<string>[];\r\n  public operationsTableDataSource: TableDataSource<OperationTableRows>;\r\n  public partNumberTableDataSource: TableDataSource<PartNumberRows>;\r\n  public statusTableDataSource: TableDataSource<StatusTableRows>;\r\n  public documentCategoriesTableDataSource: TableDataSource<DocCategoriesRows>;\r\n  public selectedOperation: OperationTableRows | undefined;\r\n  public storageBinTypes: SelectItem[];\r\n  private isOneOperationSelected: boolean = false;\r\n  private partNumberList: PartNumberRows[];\r\n  private docCategoryList: DocCategoriesRows[];\r\n  public taskTypes: Map<string, string>;\r\n  public operations: LabelValue<string>[];\r\n  private sequence: string;\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    private readonly stockMovementTypeService: StockMovementTypeService,\r\n    public readonly confirmationService: ConfirmationService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly catalogService: CatalogService,\r\n    public inputValidationService: InputValidationService,\r\n    private readonly _formatSelectOption: FormatSelectOptionPipe,\r\n    private readonly extractTranslationPipe: ExtractTranslationPipe\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogStockMovementTypeComponent');\r\n    this.component = DialogStockMovementTypeComponent;\r\n    this.onValidated = new EventEmitter<BidtStockMvtTypeDTO>();\r\n\r\n    this.init();\r\n    this.loadDropDowns();\r\n    this.propertiesService.getValue(GenericPropertyConstants.LOGISTICAL_OPERATION_MAP).subscribe({\r\n      next: (operations) => {\r\n        this.operations = operations;\r\n      }\r\n    });\r\n  }\r\n  public ngOnInit(): void {\r\n    this.updateOpenMode(this.openMode);\r\n    this.bindOperationRelatedTables();\r\n    this.bindStatusTable();\r\n    this.fetchStatusTable();\r\n\r\n    if (!!this.popupData) {\r\n      this.stockMovementTypeService.findStockMvtTypeById(this.popupData).subscribe((results) => {\r\n        this.operationsTableDataSource.setData([]);\r\n        this.bidtStockMvtTypeDTO = results;\r\n        if (\r\n          this.bidtStockMvtTypeDTO &&\r\n          this.bidtStockMvtTypeDTO.bidtStockMvtTypeOperations &&\r\n          this.bidtStockMvtTypeDTO.bidtStockMvtTypeOperations.length > 0\r\n        ) {\r\n          this.operationsTableDataSource.setData(\r\n            this.bidtStockMvtTypeDTO.bidtStockMvtTypeOperations.map((operation) => this.createOperationRow(operation))\r\n          );\r\n          this.sortOperationTable();\r\n        }\r\n        this.operationsTableDataSource.update();\r\n      });\r\n    }\r\n  }\r\n\r\n  private createOperationRow(operationDTO: BidtStockMvtTypeOperationDTO): OperationTableRows {\r\n    const maxDigit = 10;\r\n    const numb = '0';\r\n    if (!!operationDTO && operationDTO.smtoSequenceNumber) {\r\n      this.sequence =\r\n        Number(operationDTO.smtoSequenceNumber) < maxDigit\r\n          ? numb.concat(\r\n              NumberUtils.roundNumber(NumberUtils.fromString(operationDTO.smtoSequenceNumber as string), 0).toString()\r\n            )\r\n          : NumberUtils.roundNumber(NumberUtils.fromString(operationDTO.smtoSequenceNumber as string), 0).toString();\r\n    }\r\n    const operationRow: OperationTableRows = {\r\n      bidtStockMvtTypeId: operationDTO.id,\r\n      bidtStockMvtType: operationDTO.bidtStockMvtType,\r\n      smtoKey: this._formatSelectOption.transform(operationDTO.smtoKey, this.operations),\r\n      smtoSequenceNumber: !!operationDTO.smtoSequenceNumber ? this.sequence : '',\r\n      taskTypeCode: operationDTO.taskTypeCode,\r\n      taskTypeName: operationDTO.taskTypeCode && this.taskTypes.get(operationDTO.taskTypeCode),\r\n      pnTypes:\r\n        !!operationDTO.pnTypes && operationDTO.pnTypes.length > 0\r\n          ? operationDTO.pnTypes.map((pnType) => {\r\n              const partNumer: PartNumberRows = {\r\n                value: pnType as string\r\n              };\r\n\r\n              return partNumer;\r\n            })\r\n          : [],\r\n      docCategories:\r\n        !!operationDTO.docCategories && operationDTO.docCategories.length > 0\r\n          ? operationDTO.docCategories.map((category) => {\r\n              const docCategory: DocCategoriesRows = {\r\n                value: category as string\r\n              };\r\n\r\n              return docCategory;\r\n            })\r\n          : []\r\n    };\r\n\r\n    return operationRow;\r\n  }\r\n\r\n  public moveDown(): void {\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      this.partNumberTableDataSource.dataSelection = [];\r\n      this.documentCategoriesTableDataSource.dataSelection = [];\r\n      const selectedOperation = this.operationsTableDataSource.dataSelection[0];\r\n      const selectedRowSequenceNumber = selectedOperation.smtoSequenceNumber;\r\n      const selectedRowIndex = this.operationsTableDataSource.dataSrc.findIndex((operation) => {\r\n        return (\r\n          operation.smtoSequenceNumber === selectedOperation.smtoSequenceNumber &&\r\n          operation.smtoKey === selectedOperation.smtoKey\r\n        );\r\n      });\r\n\r\n      // shift one row down\r\n      if (this.operationsTableDataSource.dataSrc.length - 1 !== selectedRowIndex) {\r\n        const data = this.operationsTableDataSource.dataSrc[selectedRowIndex + 1];\r\n\r\n        selectedOperation.smtoSequenceNumber = data.smtoSequenceNumber;\r\n        this.operationsTableDataSource.dataSrc[selectedRowIndex + 1] = selectedOperation;\r\n\r\n        data.smtoSequenceNumber = selectedRowSequenceNumber;\r\n        this.operationsTableDataSource.dataSrc[selectedRowIndex] = data;\r\n        this.operationsTableDataSource.setData(\r\n          this.operationsTableDataSource.dataSrc.map((operation) => {\r\n            return operation;\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public moveUp(): void {\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      this.partNumberTableDataSource.dataSelection = [];\r\n      this.documentCategoriesTableDataSource.dataSelection = [];\r\n      const selectedOperation = this.operationsTableDataSource.dataSelection[0];\r\n      const selectedRowSequenceNumber = selectedOperation.smtoSequenceNumber;\r\n      const selectedRowIndex = this.operationsTableDataSource.dataSrc.findIndex((operation) => {\r\n        return (\r\n          operation.smtoSequenceNumber === selectedOperation.smtoSequenceNumber &&\r\n          operation.smtoKey === selectedOperation.smtoKey\r\n        );\r\n      });\r\n\r\n      // shift one row up\r\n      if (selectedRowIndex > 0) {\r\n        const data = this.operationsTableDataSource.dataSrc[selectedRowIndex - 1];\r\n\r\n        selectedOperation.smtoSequenceNumber = data.smtoSequenceNumber;\r\n        this.operationsTableDataSource.dataSrc[selectedRowIndex - 1] = selectedOperation; // shift selected row to up\r\n\r\n        data.smtoSequenceNumber = selectedRowSequenceNumber;\r\n        this.operationsTableDataSource.dataSrc[selectedRowIndex] = data;\r\n        this.operationsTableDataSource.setData(\r\n          this.operationsTableDataSource.dataSrc.map((operation) => {\r\n            return operation;\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public onOperationsRowSelectUnselect(): void {\r\n    this.partNumberTableDataSource.dataSelection = [];\r\n    this.documentCategoriesTableDataSource.dataSelection = [];\r\n    let selectedOperationRow: OperationTableRows;\r\n    this.isOneOperationSelected = false;\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      this.isOneOperationSelected = true;\r\n      // TODO: Automatically select related document categories and part numbers\r\n      selectedOperationRow = this.operationsTableDataSource.dataSelection[0];\r\n    }\r\n    this.initPartnumberTableSource();\r\n    this.initCategoryTableSource();\r\n    this.partNumberTableDataSource.update();\r\n  }\r\n\r\n  public onPartNumberRowSelectUnselect(): void {\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      const selectedPartNumbers = this.partNumberTableDataSource.dataSelection.map((row) => {\r\n        const partNumber: PartNumberRows = {\r\n          pnType: row.pnType,\r\n          value: row.value\r\n        };\r\n\r\n        return partNumber;\r\n      });\r\n      const selectedOperationRows = this.operationsTableDataSource.dataSelection[0];\r\n      selectedOperationRows.pnTypes = selectedPartNumbers;\r\n    }\r\n  }\r\n\r\n  public onDocCategoriesRowSelectUnselect(): void {\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      const selectedCategories = this.documentCategoriesTableDataSource.dataSelection.map((row) => {\r\n        const docCategory: DocCategoriesRows = {\r\n          docCategorie: row.docCategorie,\r\n          value: row.value\r\n        };\r\n\r\n        return docCategory;\r\n      });\r\n\r\n      const selectedOperationRows = this.operationsTableDataSource.dataSelection[0];\r\n      selectedOperationRows.docCategories = selectedCategories;\r\n    }\r\n  }\r\n\r\n  // Save Operation\r\n  public validate(): void {\r\n    this.bidtStockMvtTypeDTO.bidtStockMvtTypeOperations = [];\r\n    const operations: BidtStockMvtTypeOperationDTO[] = [];\r\n    let statusValue = '';\r\n    this.operationsTableDataSource.dataSrc.forEach((operation) => {\r\n      const operationRow: BidtStockMvtTypeOperationDTO = {\r\n        bidtStockMvtType: '',\r\n        smtoSequenceNumber: operation.smtoSequenceNumber,\r\n        smtoKey: this.getOperationValueFromLabel(operation.smtoKey as string),\r\n        taskTypeCode: operation.taskTypeCode,\r\n        pnTypes:\r\n          !!operation.pnTypes && operation.pnTypes.length > 0\r\n            ? operation.pnTypes.map((pn) => {\r\n                return pn.value as string;\r\n              })\r\n            : [],\r\n        docCategories:\r\n          !!operation.docCategories && operation.docCategories.length > 0\r\n            ? operation.docCategories.map((category) => {\r\n                return category.value as string;\r\n              })\r\n            : []\r\n      };\r\n      operations.push(operationRow);\r\n    });\r\n\r\n    this.statusTableDataSource.dataSelection.forEach((status) => {\r\n      if (!!status && !!status.value) {\r\n        statusValue = statusValue.concat(status.value.toString(), ';');\r\n      }\r\n      this.bidtStockMvtTypeDTO.smtStatuses = statusValue.substr(0, statusValue.length - 1);\r\n    });\r\n\r\n    const input = { ...this.bidtStockMvtTypeDTO };\r\n    input.bidtStockMvtTypeOperations = operations;\r\n\r\n    this.stockMovementTypeService.addOrUpdate(input).subscribe((result) => {\r\n      if (result) {\r\n        this.onValidated.emit(result);\r\n        this.closeDialog();\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteOperations(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(\r\n        this.operationsTableDataSource.dataSelection.length === 1\r\n          ? 'confirmDeleteSelectedOperation'\r\n          : 'confirmDeleteSelectedOperations'\r\n      ),\r\n      accept: () => {\r\n        const operations = this.operationsTableDataSource.dataSrc.filter((operationRow) => {\r\n          return !this.operationsTableDataSource.dataSelection.some((deletedRow) => {\r\n            return (\r\n              deletedRow.smtoKey === operationRow.smtoKey &&\r\n              deletedRow.smtoSequenceNumber === operationRow.smtoSequenceNumber\r\n            );\r\n          });\r\n        });\r\n\r\n        // Reset the sequential number\r\n        if (!!operations && operations.length) {\r\n          let sequenceNumber = 1;\r\n          const maxDigit = 10;\r\n          operations.forEach((row) => {\r\n            row.smtoSequenceNumber = sequenceNumber < maxDigit ? `0${sequenceNumber}` : sequenceNumber.toString();\r\n            sequenceNumber += 1;\r\n          });\r\n\r\n          this.operationsTableDataSource.setData(operations);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public addOperation(): void {\r\n    this.selectedOperation = undefined;\r\n    this.openDialogOperation = true;\r\n    this.operationDialogOpenMode = ComponentOpenMode.Create;\r\n  }\r\n\r\n  public editOperation(): void {\r\n    if (this.operationsTableDataSource.dataSelectionCount === 1) {\r\n      this.openDialogOperation = true;\r\n      this.operationDialogOpenMode = ComponentOpenMode.Write;\r\n      const selectedRow = { ...this.operationsTableDataSource.dataSelection[0] };\r\n      selectedRow.smtoKey = this.getOperationValueFromLabel(selectedRow.smtoKey as string);\r\n      this.selectedOperation = selectedRow;\r\n    }\r\n  }\r\n\r\n  private getOperationValueFromLabel(label: string): string {\r\n    const operation = this.operations.find((optKey) => optKey.label === label);\r\n\r\n    return operation ? operation.value : '';\r\n  }\r\n\r\n  public validateOperation(operation: BidtStockMvtTypeOperationDTO): void {\r\n    if (this.operationsTableDataSource.hasDataSelection) {\r\n      this.operationsTableDataSource.replaceData(\r\n        this.operationsTableDataSource.dataSelection[0],\r\n        this.createOperationRow(operation)\r\n      );\r\n    } else {\r\n      const maxDigit = 10;\r\n      const num =\r\n        this.operationsTableDataSource.data.length < maxDigit\r\n          ? `0${this.operationsTableDataSource.data.length + 1}`\r\n          : (this.operationsTableDataSource.data.length + 1).toString();\r\n      operation.smtoSequenceNumber = num;\r\n      this.operationsTableDataSource.addData([this.createOperationRow(operation)]);\r\n    }\r\n    this.operationsTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  private sortOperationTable(): void {\r\n    this.operationsTableDataSource.dataSrc.sort((e1, e2) => {\r\n      if (!!e1.smtoSequenceNumber && !!e2.smtoSequenceNumber) {\r\n        const s1 = Number(e1.smtoSequenceNumber);\r\n        const s2 = Number(e2.smtoSequenceNumber);\r\n\r\n        return s1 > s2 ? 1 : -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  public disableButton(): boolean {\r\n    if (!!this.bidtStockMvtTypeDTO.id) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private bindOperationRelatedTables(): void {\r\n    this.partNumberTableDataSource.setData([]);\r\n    this.documentCategoriesTableDataSource.setData([]);\r\n    this.propertiesService.getValue('getPnTypeMap').subscribe(\r\n      (results) => {\r\n        results.forEach((pn) => {\r\n          this.partNumberList.push({ value: pn.value, pnType: pn.label });\r\n        });\r\n        this.initPartnumberTableSource();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage('errorOnLoadingMaterialType');\r\n      }\r\n    );\r\n\r\n    this.catalogService.fetchPropertyValuesTableData(parseInt(this.docCategoryId, 10)).subscribe((results) => {\r\n      results.map((category) => {\r\n        const docCategory: DocCategoriesRows = {\r\n          value: category.propertiesKey,\r\n          docCategorie: category.enPropertiesValue\r\n        };\r\n        this.docCategoryList.push(docCategory);\r\n        this.initCategoryTableSource();\r\n      });\r\n    });\r\n  }\r\n  private bindStatusTable(): void {\r\n    const status: StatusTableRows[] = [];\r\n    this.stockMovementTypeService.getMvtStatusMap().subscribe(\r\n      (results) => {\r\n        results.forEach((element) => {\r\n          status.push({ label: element.label, value: element.value });\r\n          this.statusTableDataSource.setData(status);\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetStatusTable'));\r\n      }\r\n    );\r\n  }\r\n  private init() {\r\n    this.bidtStockMvtTypeDTO = {};\r\n    this.openDialogOperation = false;\r\n    this.selectedOperation = undefined;\r\n    this.taskTypes = new Map<string, string>();\r\n    this.storageBinTypes = [];\r\n    this.partNumberList = [];\r\n    this.docCategoryList = [];\r\n    this.initalizeTableColumns();\r\n  }\r\n\r\n  private initalizeTableColumns(): void {\r\n    this.operationsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'smtoSequenceNumber',\r\n          translateKey: this.getTranslateKey('sequentialNumber')\r\n        },\r\n        {\r\n          field: 'smtoKey',\r\n          translateKey: this.getTranslateKey('operation')\r\n        },\r\n        {\r\n          field: 'taskTypeName',\r\n          translateKey: this.getTranslateKey('taskType')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n    this.initPartnumberTableSource();\r\n    this.initCategoryTableSource();\r\n    this.initStatusTableSource();\r\n  }\r\n\r\n  private initPartnumberTableSource(): void {\r\n    this.partNumberTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      enableSelection: this.isOneOperationSelected,\r\n      columns: [{ field: 'pnType', translateKey: this.getTranslateKey('pnType') }],\r\n      data: []\r\n    });\r\n    this.partNumberTableDataSource.setData(this.partNumberList);\r\n  }\r\n\r\n  private initCategoryTableSource(): void {\r\n    this.documentCategoriesTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      enableSelection: this.isOneOperationSelected,\r\n      columns: [{ field: 'docCategorie', translateKey: this.getTranslateKey('pnType') }],\r\n      data: []\r\n    });\r\n    this.documentCategoriesTableDataSource.setData(this.docCategoryList);\r\n  }\r\n\r\n  private initStatusTableSource(): void {\r\n    this.statusTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'value', translateKey: this.getTranslateKey('code') },\r\n        { field: 'label', translateKey: this.getTranslateKey('value') }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private loadDropDowns(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.MVT_STATUS_MAP).subscribe((results) => {\r\n      results.forEach((element) => {\r\n        this.taskTypes.set(element.value, element.label);\r\n      });\r\n    });\r\n\r\n    this.stockMovementTypeService.getMovementCategoryMap().subscribe((results) => {\r\n      this.bidtStockMvtTypeDTO.smtWay = results[2].value;\r\n      this.changeMeaningList = [\r\n        { value: results[2].value, label: results[2].label },\r\n        { value: results[0].value, label: results[0].label },\r\n        { value: results[1].value, label: results[1].label }\r\n      ];\r\n    });\r\n\r\n    const observables = [this.stockMovementTypeService.findAllBinType()];\r\n    forkJoin(observables).subscribe((results) => {\r\n      const binTypes: LabelValue<string>[] = results['0'];\r\n      this.storageBinTypes = binTypes.map((element) => {\r\n        return {\r\n          label: StringUtils.orEmpty(this.extractTranslationPipe.transform(element.label)),\r\n          value: element.value.toString()\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  private fetchStatusTable(): void {\r\n    // TODO Fetch Selected Rows of Status Table for each id.\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".title\\\" | translate }} ({{ categoryTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"categoryTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"!categoryTableDataSource.hasDataSelection\\\"\\r\\n              (click)=\\\"addStockMovementType()\\\"\\r\\n              mat-raised-button\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"openStockMovementType()\\\"\\r\\n              *ngIf=\\\"categoryTableDataSource.dataSelectionCount === 1\\\"\\r\\n            >\\r\\n              {{ \\\"global.open\\\" | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              *ngIf=\\\"categoryTableDataSource.hasDataSelection\\\"\\r\\n              (click)=\\\"deleteStockMovementTypes(categoryTableDataSource.dataSelection)\\\"\\r\\n              color=\\\"warn\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              *ngIf=\\\"categoryTableDataSource.dataSelectionCount === 1\\\"\\r\\n              (click)=\\\"editStockMovementType()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<aw-dialog-stock-movement-type\\r\\n  *ngIf=\\\"openDialogStockMovementType\\\"\\r\\n  [(display)]=\\\"openDialogStockMovementType\\\"\\r\\n  [openMode]=\\\"stockMovementTypeDialogOpenMode\\\"\\r\\n  (onValidated)=\\\"onValidatedMeasurementRow($event)\\\"\\r\\n  [popupData]=\\\"stockMvtDataRow\\\"\\r\\n  [docCategoryId]=\\\"docCategoryPropertyId\\\"\\r\\n></aw-dialog-stock-movement-type>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ExtractTranslationPipe } from '../../../../../../shared/pipes/extract-translation.pipe';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { LoaderService } from '../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { BidtStockMvtTypeDTO } from '../../../../../../shared/types/api-types/bidt-stock-mvt-type-dto.interface';\r\nimport { BidtStockMvtTypeIdDTO } from '../../../../../../shared/types/api-types/bidt-stock-mvt-type-id-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { StringUtils } from '../../../../../../shared/utils/string-utils';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { StockMovementTypeService } from './stock-movement-type.service';\r\n\r\ninterface BidtStockMvtTypeRow extends BidtStockMvtTypeIdDTO {\r\n  isStandard?: boolean;\r\n  noOfOperations?: number;\r\n  issueAreaType?: string; // 50\r\n  receiptAreaType?: string; // 50\r\n  smtName?: string; // 100\r\n  smtStatuses?: string; // 300\r\n  smtWay?: string; // 50\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-types-of-movement-type',\r\n  templateUrl: './stock-movement-type.component.html'\r\n})\r\nexport class StockMovementTypeComponent extends DynamicCatalog implements OnInit {\r\n  private static readonly DOCUMENT_CATEGORY: string = 'DOC_ASSET_CATEGORY';\r\n  private static readonly NO_OF_OPERATIONS: number = 0;\r\n  public docCategoryPropertyId: string | undefined;\r\n  public openDialogStockMovementType: boolean;\r\n  public stockMovementTypeDialogOpenMode: ComponentOpenMode;\r\n  public categoryTableDataSource: TableDataSource<BidtStockMvtTypeRow>;\r\n  public component: typeof StockMovementTypeComponent;\r\n  public stockMvtDataRow: number | undefined;\r\n  public storageBinTypes: SelectItem[];\r\n  public changeMeaningList: SelectItem[];\r\n  public typeMap: Map<string, string>;\r\n\r\n  public constructor(\r\n    public readonly loaderService: LoaderService,\r\n    public readonly messageService: MessageService,\r\n    public readonly stockMovementTypeService: StockMovementTypeService,\r\n    public readonly confirmationService: ConfirmationService,\r\n    public readonly catalogService: CatalogService,\r\n    private readonly extractTranslationPipe: ExtractTranslationPipe\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n    this.loadDropDowns();\r\n    this.component = StockMovementTypeComponent;\r\n    this.openDialogStockMovementType = false;\r\n    this.stockMovementTypeDialogOpenMode = ComponentOpenMode.Read;\r\n    this.typeMap = new Map<string, string>();\r\n\r\n    this.categoryTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'id', translateKey: this.getTranslateKey('key'), width: '10%' },\r\n        {\r\n          field: 'standard',\r\n          translateKey: this.getTranslateKey('standard'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'smtName',\r\n          translateKey: this.getTranslateKey('name'),\r\n          width: '25%'\r\n        },\r\n        {\r\n          field: 'smtWay',\r\n          translateKey: this.getTranslateKey('meaning'),\r\n          width: '15%'\r\n        },\r\n        {\r\n          field: 'receiptAreaType',\r\n          translateKey: this.getTranslateKey('enteringAreaType'),\r\n          width: '15%'\r\n        },\r\n        {\r\n          field: 'issueAreaType',\r\n          translateKey: this.getTranslateKey('outgoingZoneType'),\r\n          width: '15%'\r\n        },\r\n        {\r\n          field: 'noOfOperations',\r\n          translateKey: this.getTranslateKey('noOfOperations'),\r\n          width: '10%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.getDocCategoryPropertyId();\r\n    this.loadStockMovementTypeTable();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'StockMovementTypeComponent';\r\n  }\r\n\r\n  public addStockMovementType() {\r\n    this.stockMvtDataRow = undefined;\r\n    this.openDialogStockMovementType = true;\r\n    this.stockMovementTypeDialogOpenMode = ComponentOpenMode.Create;\r\n  }\r\n\r\n  public openStockMovementType(): void {\r\n    if (this.categoryTableDataSource.dataSelectionCount === 1) {\r\n      this.openDialogStockMovementType = true;\r\n      this.stockMovementTypeDialogOpenMode = ComponentOpenMode.Read;\r\n      this.stockMvtDataRow = this.categoryTableDataSource.dataSelection[0].id;\r\n    }\r\n  }\r\n\r\n  public editStockMovementType(): void {\r\n    if (this.categoryTableDataSource.dataSelectionCount === 1) {\r\n      this.openDialogStockMovementType = true;\r\n      this.stockMovementTypeDialogOpenMode = ComponentOpenMode.Write;\r\n      this.stockMvtDataRow = this.categoryTableDataSource.dataSelection[0].id;\r\n    }\r\n  }\r\n\r\n  public deleteStockMovementTypes(stockMvtTypeRows: BidtStockMvtTypeRow[]): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(\r\n        stockMvtTypeRows.length === 1 ? 'confirmDeleteSelectedStockMvtType' : 'confirmDeleteSelectedStockMvtTypes'\r\n      ),\r\n      accept: () => {\r\n        const observables = stockMvtTypeRows.map((receipt) =>\r\n          this.stockMovementTypeService.removeStockMovementType({\r\n            id: receipt.id\r\n          })\r\n        );\r\n        forkJoin(observables).subscribe({\r\n          next: () => {\r\n            this.loadStockMovementTypeTable();\r\n\r\n            this.messageService.showSuccessMessage(\r\n              this.getTranslateKey(\r\n                stockMvtTypeRows.length === 1 ? 'successOnDeleteStockMvtType' : 'successOnDeleteStockMvtTypes'\r\n              )\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.loadStockMovementTypeTable();\r\n  }\r\n\r\n  private loadStockMovementTypeTable(): void {\r\n    this.categoryTableDataSource.setData([]);\r\n    this.stockMovementTypeService.loadStockMovementType().subscribe(\r\n      (results: BidtStockMvtTypeDTO[]) => {\r\n        const bidtStockMvtTypeRows: BidtStockMvtTypeRow[] = [];\r\n        results.forEach((stockMvt) => {\r\n          const row: BidtStockMvtTypeRow = {\r\n            id: stockMvt.id,\r\n            issueAreaType: stockMvt.issueAreaType\r\n              ? this.storageBinTypes.filter((issue) => issue.value === stockMvt.issueAreaType)[0] &&\r\n                this.storageBinTypes.filter((issue) => issue.value === stockMvt.issueAreaType)[0].label\r\n              : '',\r\n            receiptAreaType: !!stockMvt.receiptAreaType\r\n              ? this.storageBinTypes.filter((receipt) => receipt.value === stockMvt.receiptAreaType)[0] &&\r\n                this.storageBinTypes.filter((receipt) => receipt.value === stockMvt.receiptAreaType)[0].label\r\n              : '',\r\n            smtName: stockMvt.smtName,\r\n            smtStatuses: stockMvt.smtStatuses,\r\n            smtWay: stockMvt.smtWay && this.typeMap.get(stockMvt.smtWay),\r\n            noOfOperations:\r\n              !!stockMvt.bidtStockMvtTypeOperations && stockMvt.bidtStockMvtTypeOperations.length > 0\r\n                ? stockMvt.bidtStockMvtTypeOperations.length\r\n                : this.component.NO_OF_OPERATIONS\r\n          };\r\n          bidtStockMvtTypeRows.push(row);\r\n        });\r\n\r\n        this.categoryTableDataSource.setData(bidtStockMvtTypeRows);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetResults'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadDropDowns(): void {\r\n    const observables = [this.stockMovementTypeService.findAllBinType()];\r\n    forkJoin(observables).subscribe((results) => {\r\n      const binTypes: LabelValue<string>[] = results['0'];\r\n      this.storageBinTypes = binTypes.map((element) => {\r\n        return {\r\n          label: StringUtils.orEmpty(this.extractTranslationPipe.transform(element.label)),\r\n          value: element.value.toString()\r\n        };\r\n      });\r\n    });\r\n\r\n    this.stockMovementTypeService.getMovementCategoryMap().subscribe((results) => {\r\n      results.forEach((element) => {\r\n        this.typeMap.set(element.value, element.label);\r\n      });\r\n    });\r\n  }\r\n\r\n  public onValidatedMeasurementRow(rowData: BidtStockMvtTypeDTO): void {\r\n    if (!!rowData) {\r\n      if (!this.hasDuplicateMeasureCode(rowData)) {\r\n        this.loadStockMovementTypeTable();\r\n        this.messageService.showSuccessMessage('global.successOnSave');\r\n        this.stockMvtDataRow = undefined;\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('duplicateKey'));\r\n      }\r\n    }\r\n  }\r\n\r\n  private hasDuplicateMeasureCode(rowData: BidtStockMvtTypeDTO): boolean {\r\n    let stockMvtTypeList = [...this.categoryTableDataSource.dataSrc];\r\n    if (this.categoryTableDataSource.hasDataSelection) {\r\n      const selectedStockMvtRow = this.categoryTableDataSource.dataSelection[0];\r\n\r\n      stockMvtTypeList = this.categoryTableDataSource.dataSrc.filter((mprow) => {\r\n        return selectedStockMvtRow.id !== mprow.id;\r\n      });\r\n    }\r\n\r\n    const hasAnyDuplicateRow = stockMvtTypeList.some((row) => {\r\n      return row.id === rowData.id;\r\n    });\r\n\r\n    return hasAnyDuplicateRow;\r\n  }\r\n\r\n  private getDocCategoryPropertyId(): void {\r\n    this.catalogService.getPropertyCatalogIdNameMapping().subscribe((results) => {\r\n      const propertyIds = results.filter(\r\n        (property) =>\r\n          property.propertiesName && property.propertiesName.toUpperCase() === this.component.DOCUMENT_CATEGORY\r\n      );\r\n      this.docCategoryPropertyId = propertyIds[0] && propertyIds[0].propertiesId;\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtStockMvtTypeApi } from '../../../../../../shared/api/bidt-stock-mvt-type.api';\r\nimport { BidtStorageBinTypeApi } from '../../../../../../shared/api/bidt-storage-bin-type.api';\r\nimport { GenericPropertyConstants } from '../../../../../../shared/constants/generic-property-constants';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { BidtStockMvtTypeDTO } from '../../../../../../shared/types/api-types/bidt-stock-mvt-type-dto.interface';\r\nimport { BidtStockMvtTypeIdDTO } from '../../../../../../shared/types/api-types/bidt-stock-mvt-type-id-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StockMovementTypeService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtStockMvtTypeApi: BidtStockMvtTypeApi,\r\n    private readonly bidtStorageBinTypeApi: BidtStorageBinTypeApi,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public loadStockMovementType(): Observable<BidtStockMvtTypeDTO[]> {\r\n    return super.post<void, BidtStockMvtTypeDTO[]>(this.bidtStockMvtTypeApi.findAll);\r\n  }\r\n\r\n  public removeStockMovementType(bidtStockMvtTypeDTOId: BidtStockMvtTypeIdDTO): Observable<boolean> {\r\n    return super.post<BidtStockMvtTypeIdDTO, boolean>(this.bidtStockMvtTypeApi.delete, bidtStockMvtTypeDTOId);\r\n  }\r\n\r\n  public findStockMvtTypeById(bidtStockMvtTypeIdDTO: number): Observable<BidtStockMvtTypeDTO> {\r\n    return super.post<number, BidtStockMvtTypeDTO>(\r\n      this.bidtStockMvtTypeApi.findStockMvtTypeById,\r\n      bidtStockMvtTypeIdDTO\r\n    );\r\n  }\r\n\r\n  public addOrUpdate(addOrUpdateStockMvtTypeInput: BidtStockMvtTypeDTO): Observable<BidtStockMvtTypeDTO> {\r\n    return super.post<BidtStockMvtTypeDTO, BidtStockMvtTypeDTO>(\r\n      this.bidtStockMvtTypeApi.addOrUpdate,\r\n      addOrUpdateStockMvtTypeInput\r\n    );\r\n  }\r\n\r\n  public findAllBinType(): Observable<LabelValue<number>[]> {\r\n    return super.post<void, LabelValue<number>[]>(this.bidtStorageBinTypeApi.findAllBinType);\r\n  }\r\n\r\n  /*************************************************************************\r\n   * PropertiesService\r\n   *************************************************************************/\r\n\r\n  public getMvtStatusMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue(GenericPropertyConstants.MVT_STATUS_MAP);\r\n  }\r\n\r\n  public getMovementCategoryMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue(GenericPropertyConstants.MOVEMENT_CATEGORY_MAP);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".status\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          name=\\\"status\\\"\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [options]=\\\"statusField\\\"\\r\\n          [(ngModel)]=\\\"statusForm.stockTypeStatusName\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"associate()\\\" [disabled]=\\\"!enableAssociateButton()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { BidtStockTypeStatusDTO } from '../../../../../../../../shared/types/api-types/bidt-stock-type-status-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../../shared/types/label-value.interface';\r\nimport { LabelValueUtils } from '../../../../../../../../shared/utils/label-value-utils';\r\nimport { StockTypeService } from '../../stock-type.service';\r\n\r\n@Component({\r\n  selector: 'aw-status-form-popup',\r\n  templateUrl: './status-form-popup.component.html'\r\n})\r\nexport class StatusFormPopupComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  public statusForm: BidtStockTypeStatusDTO;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<BidtStockTypeStatusDTO>;\r\n\r\n  public readonly componentId: string;\r\n  public statusField: LabelValue<string>[];\r\n  public displayValue: boolean;\r\n\r\n  public constructor(private readonly stockTypeService: StockTypeService) {\r\n    super(ComponentOpenMode.Write, 'StatusFormPopupComponent');\r\n\r\n    this.onCreate = new EventEmitter<BidtStockTypeStatusDTO>();\r\n    this.statusDropDown();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.statusForm) {\r\n      this.statusForm = {};\r\n    }\r\n  }\r\n\r\n  public associate(): void {\r\n    if (!!this.statusForm) {\r\n      LabelValueUtils.stringValueToLabel<BidtStockTypeStatusDTO>(\r\n        this.statusForm,\r\n        'stockTypeStatusName',\r\n        this.statusField\r\n      );\r\n      this.onCreate.emit(this.statusForm);\r\n      this.display = false;\r\n    } else {\r\n      super.throwUnboundLocalError('associate', 'this.statusForm');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public enableAssociateButton(): boolean {\r\n    if (\r\n      !!this.statusForm &&\r\n      !!this.statusForm.stockTypeStatusName &&\r\n      this.statusForm.stockTypeStatusName.trim().length !== 0\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  public statusDropDown() {\r\n    this.stockTypeService.getStatusMapping().subscribe((results) => {\r\n      this.statusField = results;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n\\r\\n        <i\\r\\n          class=\\\"fa fa-fw fa-info aw-icon aw-icon-with-border\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          pTooltip=\\\"{{ 'page.info' | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n        {{ serializationService.deserialize(componentData.objectId)[\\\"planCode\\\"] }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"reloadStockTypeForm()\\\">\\r\\n      {{ \\\"global.refresh\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"editStockTypeForm()\\\"\\r\\n    >\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancelStockTypeForm()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveStockTypeForm()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".code\\\" | translate }}</label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"aw-input\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                    [(ngModel)]=\\\"stockTypeField.stockTypeCode\\\"\\r\\n                    maxlength=\\\"50\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\"></div>\\r\\n              <div class=\\\"form-group\\\"></div>\\r\\n              <div class=\\\"form-group\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--6\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".fields\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"form-group required\\\">\\r\\n                <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".owner\\\" | translate }}</label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    name=\\\"status\\\"\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                    [options]=\\\"ownerName\\\"\\r\\n                    [(ngModel)]=\\\"stockTypeField.stockTypeOwner\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".valuated\\\" | translate }}</label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-checkbox\\r\\n                    class=\\\"aw-checkbox\\\"\\r\\n                    binary=\\\"true\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                    [(ngModel)]=\\\"stockTypeField.stockTypeIsValuated\\\"\\r\\n                  ></p-checkbox>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".description\\\" | translate }}</label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <textarea\\r\\n                    class=\\\"aw-textarea\\\"\\r\\n                    [rows]=\\\"3\\\"\\r\\n                    pInputTextarea\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                    [(ngModel)]=\\\"stockTypeField.stockTypeDescription\\\"\\r\\n                    maxlength=\\\"100\\\"\\r\\n                  ></textarea>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"grid-cell--6\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ componentData.componentId + \\\".status\\\" | translate }}({{ statusTableDataSource.dataCount }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <a-table [dataSource]=\\\"statusTableDataSource\\\">\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && !statusTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"addNewStatus()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && statusTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"deleteStatus()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template columnDef=\\\"opeCode\\\" let-rowData=\\\"rowData\\\" class=\\\"page-header-links\\\">\\r\\n                      <a\\r\\n                        (click)=\\\"openOperationForm(rowData)\\\"\\r\\n                        style=\\\"cursor: pointer; text-decoration: underline; color: blue\\\"\\r\\n                        >{{ rowData.opeCode }}\\r\\n                      </a>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- <div class=\\\"grid-row\\\">\\r\\n        \\r\\n      </div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- POPUP ZONE -->\\r\\n\\r\\n  <aw-status-form-popup\\r\\n    *ngIf=\\\"showStatusFormPopup\\\"\\r\\n    [(display)]=\\\"showStatusFormPopup\\\"\\r\\n    [statusForm]=\\\"currentStatusForm\\\"\\r\\n    (onCreate)=\\\"createStatusForm($event)\\\"\\r\\n  ></aw-status-form-popup>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../../../shared/services/tab.service';\r\nimport { SaveCatalogInput } from '../../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidtStockTypeDTO } from '../../../../../../../shared/types/api-types/bidt-stock-type-dto.interface';\r\nimport { BidtStockTypeStatusDTO } from '../../../../../../../shared/types/api-types/bidt-stock-type-status-dto.interface';\r\nimport { FormPageComponent } from '../../../../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../../../../shared/types/page-component-data.interface';\r\nimport { CatalogService } from '../../../../catalog.service';\r\nimport { StockTypeService } from '../stock-type.service';\r\n\r\n@Component({\r\n  selector: 'aw-stock-type-form',\r\n  templateUrl: './stock-type-form.component.html'\r\n})\r\nexport class StockTypeFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public stockTypeField: BidtStockTypeDTO;\r\n  public operatorName: string | undefined;\r\n  public readonly tabFieldsId: string;\r\n  public readonly tabStatusId: string;\r\n  public currentTabId: string;\r\n  public ownerName: LabelValue<string>[];\r\n\r\n  public statusTableDataSource: TableDataSource<BidtStockTypeStatusDTO>;\r\n\r\n  public currentStatusForm: BidtStockTypeStatusDTO;\r\n  public currentStatusFormIndex: number | undefined;\r\n\r\n  public showQuickSearchBusinessPartnerPopup: boolean;\r\n\r\n  public showStatusFormPopup: boolean;\r\n  public showSaveSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly stockTypeService: StockTypeService,\r\n    private readonly catalogService: CatalogService\r\n  ) {\r\n    super(ComponentOpenMode.Read, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    // this.stockData = [];\r\n    this.tabFieldsId = 'Fields';\r\n    this.tabStatusId = 'Status';\r\n    this.init();\r\n  }\r\n\r\n  public init(): void {\r\n    this.stockTypeField = {};\r\n    this.operatorName = undefined;\r\n\r\n    this.currentTabId = this.tabFieldsId;\r\n\r\n    this.statusTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'stockTypeStatusName',\r\n          translateKey: this.getTranslateKey('stockTypeStatusName')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.statusTableDataSource.dataSelection = [];\r\n    this.currentStatusForm = {};\r\n    this.currentStatusFormIndex = undefined;\r\n\r\n    this.ownerDropDown();\r\n    this.showStatusFormPopup = false;\r\n  }\r\n  public openFieldsTab(): void {\r\n    this.currentTabId = this.tabFieldsId;\r\n  }\r\n\r\n  public openStatusTab(): void {\r\n    this.currentTabId = this.tabStatusId;\r\n  }\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    if (this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n\r\n      const stockTypeContext = this.isCreateOpenMode\r\n        ? 'tab.createMode'\r\n        : !!this.componentData.objectId &&\r\n          this.serializationService.deserialize(this.componentData.objectId).stockTypeCode;\r\n\r\n      this.displayComponentContext(stockTypeContext, this.isCreateOpenMode);\r\n\r\n      this.loadStockForm();\r\n    }\r\n  }\r\n  public loadStockForm(): void {\r\n    this.statusTableDataSource.setData([]);\r\n    if (!!this.componentData && !!this.componentData.objectId) {\r\n      const stockId: number = this.serializationService.deserialize(this.componentData.objectId).id;\r\n      this.stockTypeService.findStockFormById(stockId).subscribe(\r\n        (results) => {\r\n          if (results) {\r\n            this.stockTypeField = results;\r\n            // Status tab\r\n            this.statusTableDataSource.addData(results.bidtStockTypeStatus || []);\r\n          }\r\n        },\r\n        () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadData'));\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'StockTypeFormComponent';\r\n  }\r\n\r\n  public reloadStockTypeForm(): void {\r\n    this.init();\r\n    this.loadStockForm();\r\n  }\r\n\r\n  public editStockTypeForm(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public saveStockTypeForm(): void {\r\n    if (\r\n      this.stockTypeField.stockTypeCode &&\r\n      this.stockTypeField.stockTypeCode.trim().length !== 0 &&\r\n      this.stockTypeField.stockTypeOwner\r\n    ) {\r\n      this.stockTypeField.stockTypeIsValuated = this.stockTypeField.stockTypeIsValuated ? 1 : 0;\r\n      const bidtStockTypeDTO: BidtStockTypeDTO = {\r\n        bidtStockTypeStatus: this.statusTableDataSource.dataSrc,\r\n        id: this.stockTypeField.id,\r\n        stockTypeCode: this.stockTypeField.stockTypeCode,\r\n        stockTypeIsValuated: this.stockTypeField.stockTypeIsValuated,\r\n        stockTypeOwner: this.stockTypeField.stockTypeOwner,\r\n        stockTypeDescription: this.stockTypeField.stockTypeDescription\r\n      };\r\n      const input: SaveCatalogInput = {\r\n        bidtStockTypeDTOAddorUpdateList: bidtStockTypeDTO\r\n      };\r\n\r\n      this.showSaveSpinner = true;\r\n      this.catalogService.saveCatalog(input).subscribe(\r\n        (result) => {\r\n          bidtStockTypeDTO.id = result.stockId;\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveStockType'));\r\n          if (!!bidtStockTypeDTO.stockTypeCode) {\r\n            this.displayComponentContext(bidtStockTypeDTO.stockTypeCode, this.isCreateOpenMode);\r\n          }\r\n          this.updateOpenMode(ComponentOpenMode.Write);\r\n          this.componentData.objectId = this.serializationService.serialize(bidtStockTypeDTO);\r\n          this.reloadStockTypeForm();\r\n          this.showSaveSpinner = false;\r\n        },\r\n        () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnSaveStockType'));\r\n          this.showSaveSpinner = false;\r\n        }\r\n      );\r\n    } else {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  public cancelStockTypeForm(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n    this.reloadStockTypeForm();\r\n  }\r\n\r\n  public quickSearchBusinessPartner(): void {\r\n    this.showQuickSearchBusinessPartnerPopup = true;\r\n  }\r\n\r\n  /*******\r\n   * Popup\r\n   *******/\r\n\r\n  public addNewStatus(): void {\r\n    this.showStatusFormPopup = true;\r\n    this.currentStatusForm = {};\r\n  }\r\n\r\n  public deleteStatus(): void {\r\n    this.statusTableDataSource.deleteDataSelection();\r\n    this.statusTableDataSource.dataSelection = [];\r\n    this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteStatus'));\r\n  }\r\n\r\n  public createStatusForm(event: BidtStockTypeStatusDTO): void {\r\n    this.statusTableDataSource.addData([event]);\r\n  }\r\n\r\n  public ownerDropDown() {\r\n    this.stockTypeService.getOwnerNameMap().subscribe((results) => {\r\n      this.ownerName = results;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".title\\\" | translate }} ({{ stockTypesTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"stockTypesTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"stockTypesTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"deleteSelectedStockType()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"stockTypesTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"openStockType()\\\"\\r\\n            >\\r\\n              {{ \\\"global.open\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"stockTypeIsValuatedBoolean\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i *ngIf=\\\"rowData.stockTypeIsValuatedBoolean\\\" i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../../shared/services/tab.service';\r\nimport { BidtStockTypeDTO } from '../../../../../../shared/types/api-types/bidt-stock-type-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../../../shared/types/page-component-data.interface';\r\nimport { LabelValueUtils } from '../../../../../../shared/utils/label-value-utils';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { StockTypeService } from './stock-type.service';\r\n\r\n@Component({\r\n  selector: 'aw-stock-type',\r\n  templateUrl: './stock-type.component.html'\r\n})\r\nexport class StockTypeComponent extends DynamicCatalog implements OnInit {\r\n  public filteredRowsNb: number;\r\n\r\n  public stockTypesTableDataSource: TableDataSource<BidtStockTypeDTO>;\r\n  public currentStockType: BidtStockTypeDTO | undefined;\r\n  public currentStockTypeIndex: number | undefined;\r\n  public showStockTypeForm: boolean;\r\n  public stockTypesAddedList: BidtStockTypeDTO[];\r\n  public stockTypesUpdatedList: BidtStockTypeDTO[];\r\n  public deletedStock: BidtStockTypeDTO[];\r\n  public ownerName: LabelValue<string>[];\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    private readonly serializationService: SerializationService,\r\n    private readonly tabService: TabService,\r\n    private readonly stockTypeService: StockTypeService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.stockTypesTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'stockTypeCode',\r\n          translateKey: this.getTranslateKey('stockTypeCode')\r\n        },\r\n        {\r\n          field: 'stockTypeDescription',\r\n          translateKey: this.getTranslateKey('stockTypeDescription')\r\n        },\r\n        {\r\n          field: 'stockTypeIsValuatedBoolean',\r\n          translateKey: this.getTranslateKey('stockTypeIsValuatedBoolean'),\r\n          alignment: ColumnAlignment.CENTER\r\n        },\r\n        {\r\n          field: 'stockTypeOwner',\r\n          translateKey: this.getTranslateKey('stockTypeOwner')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.currentStockType = undefined;\r\n    this.currentStockTypeIndex = undefined;\r\n    this.showStockTypeForm = false;\r\n    this.stockTypesAddedList = [];\r\n    this.stockTypesUpdatedList = [];\r\n    this.deletedStock = [];\r\n    this.loadStockTypeTableData();\r\n    this.ownerDropDown();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    // super.ngOnInit();\r\n    // this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'StockTypeComponent';\r\n  }\r\n  public ownerDropDown() {\r\n    this.stockTypeService.getOwnerNameMap().subscribe((results) => {\r\n      this.ownerName = results;\r\n    });\r\n  }\r\n\r\n  public loadStockTypeTableData(): void {\r\n    this.stockTypesTableDataSource.setData([]);\r\n    this.stockTypeService.loadStockTypeTableData().subscribe(\r\n      (results) => {\r\n        results.list.forEach((stockType) => {\r\n          stockType.stockTypeIsValuatedBoolean = stockType.stockTypeIsValuated === 0 ? false : true;\r\n          LabelValueUtils.stringValueToLabel(stockType, 'stockTypeOwner', this.ownerName);\r\n        });\r\n        this.stockTypesTableDataSource.addData(results.list);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetResults'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.loadStockTypeTableData();\r\n    this.stockTypesTableDataSource.dataSelection = [];\r\n    this.stockTypesAddedList = [];\r\n    this.stockTypesUpdatedList = [];\r\n  }\r\n\r\n  public addStockType(): void {\r\n    this.showStockTypeForm = true;\r\n    this.currentStockType = {};\r\n  }\r\n\r\n  public editSelectedStockType(): void {\r\n    this.showStockTypeForm = true;\r\n    const stockType = this.stockTypesTableDataSource.dataSelection[0];\r\n    this.currentStockType = stockType;\r\n    this.currentStockTypeIndex = this.stockTypesTableDataSource.dataSrc.findIndex(\r\n      (type) => type === this.stockTypesTableDataSource.dataSelection[0]\r\n    );\r\n  }\r\n\r\n  public deleteSelectedStockType(): void {\r\n    const partialMessageKey =\r\n      this.stockTypesTableDataSource.dataSelectionCount > 1 ? 'confirmDeleteSelectedRows' : 'confirmDeleteSelectedRow';\r\n    const stockIDs: number[] = [];\r\n    this.stockTypesTableDataSource.dataSelection.forEach((type) => {\r\n      if (!!type && !!type.id) {\r\n        stockIDs.push(type.id);\r\n        this.confirmationService.confirmDelete({\r\n          messageKey: this.getTranslateKey(partialMessageKey),\r\n          accept: () => {\r\n            this.stockTypeService.deleteStockType(stockIDs).subscribe(\r\n              (_result) => {\r\n                this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteStockType'));\r\n                this.stockTypesTableDataSource.dataSelection = [];\r\n                this.refresh();\r\n              },\r\n              (_error) => {\r\n                this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeleteStockType'));\r\n              }\r\n            );\r\n          }\r\n        });\r\n      } else if (type && type.id == undefined) {\r\n        this.confirmationService.confirmDelete({\r\n          messageKey: this.getTranslateKey(partialMessageKey),\r\n          accept: () => {\r\n            this.refresh();\r\n            this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteStockType'));\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public createStockType(event: BidtStockTypeDTO): void {\r\n    if (event) {\r\n      this.stockTypesAddedList = [...this.stockTypesAddedList, event];\r\n      if (event.stockTypeIsValuated) {\r\n        event.stockTypeIsValuated = 1;\r\n      }\r\n      const stockType = { ...event };\r\n      this.stockTypesTableDataSource.addData([stockType]);\r\n    }\r\n  }\r\n\r\n  public updateStockType(event: BidtStockTypeDTO): void {\r\n    if (!!this.currentStockTypeIndex) {\r\n      this.stockTypesUpdatedList = [...this.stockTypesUpdatedList, event];\r\n      if (event.stockTypeIsValuated) {\r\n        event.stockTypeIsValuated = 1;\r\n      }\r\n      const stockType = { ...event };\r\n      this.stockTypesTableDataSource.replaceData(\r\n        this.stockTypesTableDataSource.dataSrc[this.currentStockTypeIndex],\r\n        stockType\r\n      );\r\n      this.stockTypesTableDataSource.dataSelection = [];\r\n    } else {\r\n      super.throwUnboundLocalError('updateStockType', 'this.currentStockTypeIndex');\r\n    }\r\n  }\r\n  public openStockType(): void {\r\n    this.stockTypesTableDataSource.dataSelection.forEach((stock) => {\r\n      if (stock) {\r\n        if (stock.stockTypeCode && stock.stockTypeCode.trim().length > 0) {\r\n          this.openStockForm(stock, ComponentOpenMode.Read);\r\n        } else {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingStock'));\r\n        }\r\n      }\r\n    });\r\n  }\r\n  private openStockForm(object: BidtStockTypeDTO | undefined, openMode: ComponentOpenMode): void {\r\n    const labelKey = 'transaction.StockTypeFormComponent';\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: 'StockTypeFormComponent',\r\n      objectId: this.serializationService.serialize(object),\r\n      openMode\r\n    };\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n  public create(): void {\r\n    this.openStockForm(undefined, ComponentOpenMode.Create);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".name\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"storageBinType.sbtTypeName\\\" maxlength=\\\"100\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".description\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [rows]=\\\"3\\\"\\r\\n          pInputTextarea\\r\\n          [(ngModel)]=\\\"storageBinType.sbtTypeDescription\\\"\\r\\n          maxlength=\\\"300\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"associate()\\\" [disabled]=\\\"!enableAssociateButton()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { BidtStorageBinTypeDTO } from '../../../../../../../shared/types/api-types/bidt-storage-bin-type-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-storage-bin-type-form-popup',\r\n  templateUrl: './storage-bin-type-form-popup.component.html'\r\n})\r\nexport class StorageBinTypeFormPopupComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  public storageBinType: BidtStorageBinTypeDTO;\r\n\r\n  @Input()\r\n  public isNewStorageBinType: boolean;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<BidtStorageBinTypeDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BidtStorageBinTypeDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public constructor() {\r\n    super(ComponentOpenMode.Write, 'StorageBinTypeFormPopupComponent');\r\n\r\n    this.onCreate = new EventEmitter<BidtStorageBinTypeDTO>();\r\n    this.onUpdate = new EventEmitter<BidtStorageBinTypeDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.storageBinType) {\r\n      this.storageBinType = {};\r\n    }\r\n  }\r\n\r\n  public associate(): void {\r\n    if (!!this.storageBinType) {\r\n      if (this.isNewStorageBinType) {\r\n        this.onCreate.emit(this.storageBinType);\r\n        this.display = false;\r\n      } else {\r\n        this.onUpdate.emit(this.storageBinType);\r\n        this.display = false;\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('associate', 'this.storageBinType');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public enableAssociateButton(): boolean {\r\n    if (\r\n      !!this.storageBinType &&\r\n      !!this.storageBinType.sbtTypeName &&\r\n      this.storageBinType.sbtTypeName.trim().length !== 0\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".title\\\" | translate }} ({{ storageBinTypesTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"storageBinTypesTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"!storageBinTypesTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addStorageBinType()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"storageBinTypesTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"deleteSelectedStorageBinType()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"storageBinTypesTableDataSource.dataSelectionCount === 1\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editSelectedStorageBinType()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-storage-bin-type-form-popup\\r\\n    *ngIf=\\\"showStorageBinTypeForm\\\"\\r\\n    [(display)]=\\\"showStorageBinTypeForm\\\"\\r\\n    [storageBinType]=\\\"currentStorageBinType\\\"\\r\\n    [storageBinType]=\\\"currentStorageBinType\\\"\\r\\n    [isNewStorageBinType]=\\\"isNewStorageBinType\\\"\\r\\n    (onCreate)=\\\"createStorageBinType($event)\\\"\\r\\n    (onUpdate)=\\\"updateStorageBinType($event)\\\"\\r\\n  ></aw-storage-bin-type-form-popup>\\r\\n</div>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { LoaderService } from '../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidtStorageBinTypeDTO } from '../../../../../../shared/types/api-types/bidt-storage-bin-type-dto.interface';\r\nimport { PageComponentData } from '../../../../../../shared/types/page-component-data.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { StorageBinTypeService } from './storage-bin-type.service';\r\n\r\n@Component({\r\n  selector: 'aw-storage-bin-type',\r\n  templateUrl: './storage-bin-type.component.html'\r\n})\r\nexport class StorageBinTypeComponent extends DynamicCatalog implements OnInit {\r\n  public filteredRowsNb: number;\r\n  @Input() private readonly componentData: PageComponentData;\r\n\r\n  public storageBinTypesTableDataSource: TableDataSource<BidtStorageBinTypeDTO>;\r\n\r\n  public currentStorageBinType: BidtStorageBinTypeDTO | undefined;\r\n  public currentStorageBinTypeIndex: number | undefined;\r\n  public showStorageBinTypeForm: boolean;\r\n  public isNewStorageBinType: boolean;\r\n  public storageBinTypesAddedList: BidtStorageBinTypeDTO[];\r\n  public storageBinTypesUpdatedList: BidtStorageBinTypeDTO[];\r\n  public deletedStorage: BidtStorageBinTypeDTO[];\r\n\r\n  public constructor(\r\n    private readonly _loaderService: LoaderService,\r\n    private readonly _messageService: MessageService,\r\n    private readonly storageBinTypeService: StorageBinTypeService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.storageBinTypesTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'sbtTypeName', translateKey: this.getTranslateKey('sbtTypeName') },\r\n        {\r\n          field: 'sbtTypeDescription',\r\n          translateKey: this.getTranslateKey('sbtTypeDescription')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.currentStorageBinType = undefined;\r\n    this.currentStorageBinTypeIndex = undefined;\r\n\r\n    this.showStorageBinTypeForm = false;\r\n    this.isNewStorageBinType = false;\r\n    this.storageBinTypesAddedList = [];\r\n    this.storageBinTypesUpdatedList = [];\r\n    this.deletedStorage = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadStorageBinTypeTableData();\r\n    this._loaderService.hideModuleLoadingBar();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'StorageBinTypeComponent';\r\n  }\r\n\r\n  protected get messageService(): MessageService {\r\n    return this._messageService;\r\n  }\r\n\r\n  public loadStorageBinTypeTableData(): void {\r\n    this.storageBinTypesTableDataSource.setData([]);\r\n    const storageType = this.componentData && this.componentData.objectId ? this.componentData.objectId : undefined;\r\n    this.storageBinTypeService.loadStorageBinTypeTableData().subscribe(\r\n      (results) => {\r\n        if (results && results.list && results.list.length) {\r\n          const storageDataArray: BidtStorageBinTypeDTO[] = results.list.filter((element) => {\r\n            return element.areaCategory || storageType ? element.areaCategory === storageType : element;\r\n          });\r\n          this.storageBinTypesTableDataSource.addData(storageDataArray);\r\n        }\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetResults'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.storageBinTypesTableDataSource.dataSelection = [];\r\n    this.storageBinTypesAddedList = [];\r\n    this.storageBinTypesUpdatedList = [];\r\n    this.loadStorageBinTypeTableData();\r\n  }\r\n\r\n  public save(): void {\r\n    const input: SaveCatalogInput = {\r\n      bidtStorageBinTypeDTOList: this.storageBinTypesTableDataSource.dataSrc\r\n    };\r\n    this.storageBinTypeService.saveStorageBinType(input).subscribe(\r\n      () => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveStorageBinType'));\r\n        this.refresh();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnSaveStorageBinType'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public addStorageBinType(): void {\r\n    this.showStorageBinTypeForm = true;\r\n    this.isNewStorageBinType = true;\r\n    this.currentStorageBinType = {};\r\n  }\r\n\r\n  public editSelectedStorageBinType(): void {\r\n    this.showStorageBinTypeForm = true;\r\n    this.isNewStorageBinType = false;\r\n    const storageBinType = this.storageBinTypesTableDataSource.dataSelection[0];\r\n    this.currentStorageBinType = storageBinType;\r\n    this.currentStorageBinTypeIndex = this.storageBinTypesTableDataSource.dataSrc.findIndex(\r\n      (type) => type === this.storageBinTypesTableDataSource.dataSelection[0]\r\n    );\r\n  }\r\n\r\n  public deleteSelectedStorageBinType(): void {\r\n    const partialMessageKey =\r\n      this.storageBinTypesTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedRows'\r\n        : 'confirmDeleteSelectedRow';\r\n    const storageType: number[] = [];\r\n    this.storageBinTypesTableDataSource.dataSelection.forEach((type) => {\r\n      if (type && type.id) {\r\n        const typeId: number = type.id;\r\n        storageType.push(typeId);\r\n        this.confirmationService.confirmDelete({\r\n          messageKey: this.getTranslateKey(partialMessageKey),\r\n          accept: () => {\r\n            this.storageBinTypeService.deleteStorageBinType(storageType).subscribe(\r\n              (_result) => {\r\n                this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteStorageBinType'));\r\n                this.storageBinTypesTableDataSource.dataSelection = [];\r\n                this.refresh();\r\n              },\r\n              (_error) => {\r\n                this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeleteStorageBinType'));\r\n              }\r\n            );\r\n          }\r\n        });\r\n      } else if (type && type.id == undefined) {\r\n        this.confirmationService.confirmDelete({\r\n          messageKey: this.getTranslateKey(partialMessageKey),\r\n          accept: () => {\r\n            const inAddedList = this.storageBinTypesAddedList.filter((element, index) => {\r\n              return type.sbtTypeName === element.sbtTypeName && element.sbtTypeDescription === type.sbtTypeDescription;\r\n            });\r\n\r\n            // removing from added\r\n            if (inAddedList) {\r\n              let foundAddedIndex = -1;\r\n              this.storageBinTypesAddedList.forEach((entry, index) => {\r\n                if (entry.sbtTypeName === type.sbtTypeName && entry.sbtTypeDescription === type.sbtTypeDescription) {\r\n                  foundAddedIndex = index;\r\n                }\r\n              });\r\n              this.storageBinTypesAddedList.splice(foundAddedIndex, 1);\r\n            }\r\n\r\n            const inUpdatedList = this.storageBinTypesUpdatedList.filter((element, index) => {\r\n              return element.sbtTypeName === type.sbtTypeName && element.sbtTypeDescription === type.sbtTypeDescription;\r\n            });\r\n\r\n            // removing from updated\r\n            if (inUpdatedList) {\r\n              let foundUpdatedIndex = -1;\r\n              this.storageBinTypesUpdatedList.forEach((entry, index) => {\r\n                if (entry.sbtTypeName === type.sbtTypeName && entry.sbtTypeDescription === type.sbtTypeDescription) {\r\n                  foundUpdatedIndex = index;\r\n                }\r\n              });\r\n              this.storageBinTypesUpdatedList.splice(foundUpdatedIndex, 1);\r\n            }\r\n\r\n            // Removing from table\r\n            this.storageBinTypesTableDataSource.deleteDataSelection();\r\n\r\n            this.storageBinTypesTableDataSource.dataSelection = [];\r\n            this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteStorageBinType'));\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public createStorageBinType(event: BidtStorageBinTypeDTO): void {\r\n    if (event) {\r\n      event.areaCategory = this.componentData && this.componentData.objectId ? this.componentData.objectId : undefined;\r\n      this.storageBinTypesAddedList = [...this.storageBinTypesAddedList, event];\r\n      const storageBinType = { ...event };\r\n      this.storageBinTypesTableDataSource.addData([storageBinType]);\r\n    }\r\n  }\r\n\r\n  public updateStorageBinType(event: BidtStorageBinTypeDTO): void {\r\n    if (!!this.currentStorageBinTypeIndex) {\r\n      this.storageBinTypesUpdatedList = [...this.storageBinTypesUpdatedList, event];\r\n      const storageBinType = { ...event };\r\n      this.storageBinTypesTableDataSource.replaceData(\r\n        this.storageBinTypesTableDataSource.dataSrc[this.currentStorageBinTypeIndex],\r\n        storageBinType\r\n      );\r\n      this.storageBinTypesTableDataSource.dataSelection = [];\r\n    } else {\r\n      super.throwUnboundLocalError('updateStorageBinType', 'this.currentStorageBinTypeIndex');\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtStorageBinTypeApi } from '../../../../../../shared/api/bidt-storage-bin-type.api';\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidtStorageBinTypeDTO } from '../../../../../../shared/types/api-types/bidt-storage-bin-type-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageBinTypeService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtStorageBinTypeApi: BidtStorageBinTypeApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public loadStorageBinTypeTableData(): Observable<SearchResultsDTO<BidtStorageBinTypeDTO>> {\r\n    return super.post<void, SearchResultsDTO<BidtStorageBinTypeDTO>>(this.bidtStorageBinTypeApi.findAll);\r\n  }\r\n\r\n  public deleteStorageBinType(storageTypes: number[]) {\r\n    return super.post<number[], void>(this.bidtStorageBinTypeApi.delete, storageTypes);\r\n  }\r\n\r\n  public saveStorageBinType(input: SaveCatalogInput) {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, input);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".name\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"storageCondition.scName\\\" maxlength=\\\"100\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".containerType\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"storageCondition.scContainerType\\\" maxlength=\\\"50\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".numberInContainer\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"number\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          pattern=\\\"[0-9]+\\\"\\r\\n          min=\\\"-9223372036854775808\\\"\\r\\n          max=\\\"9223372036854775807\\\"\\r\\n          maxlength=\\\"19\\\"\\r\\n          [(ngModel)]=\\\"storageCondition.scNumberInContainer\\\"\\r\\n          (keypress)=\\\"maxLengthCheck($event, storageCondition.scNumberInContainer)\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".description\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [rows]=\\\"3\\\"\\r\\n          pInputTextarea\\r\\n          maxlength=\\\"300\\\"\\r\\n          [(ngModel)]=\\\"storageCondition.scDescription\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"associate()\\\" [disabled]=\\\"!enableAssociateButton()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { BidtStorageConditionDTO } from '../../../../../../../shared/types/api-types/bidt-storage-condition-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-storage-condition-form-popup',\r\n  templateUrl: './storage-condition-form-popup.component.html'\r\n})\r\nexport class StorageConditionFormPopupComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  public storageCondition: BidtStorageConditionDTO;\r\n\r\n  @Input()\r\n  public isNewStorageCondition: boolean;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<BidtStorageConditionDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BidtStorageConditionDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public constructor(private readonly messageService: MessageService) {\r\n    super(ComponentOpenMode.Write, 'StorageConditionFormPopupComponent');\r\n\r\n    this.onCreate = new EventEmitter<BidtStorageConditionDTO>();\r\n    this.onUpdate = new EventEmitter<BidtStorageConditionDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.storageCondition) {\r\n      this.storageCondition = {};\r\n    }\r\n  }\r\n\r\n  public associate(): void {\r\n    if (this.isRangeValid() && !!this.storageCondition) {\r\n      if (this.isNewStorageCondition) {\r\n        this.onCreate.emit(this.storageCondition);\r\n        this.display = false;\r\n      } else {\r\n        this.onUpdate.emit(this.storageCondition);\r\n        this.display = false;\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('percentRangeError'));\r\n    }\r\n  }\r\n\r\n  private isRangeValid(): boolean {\r\n    const min = -9223372036854775808;\r\n    const max = 9223372036854775807;\r\n\r\n    const percent = !!this.storageCondition && this.storageCondition.scNumberInContainer;\r\n    if (!!percent && (percent < min || percent > max)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public maxLengthCheck(event, percent) {\r\n    const min = -922337203685477580;\r\n    const max = 922337203685477580;\r\n    if (percent < min || percent > max) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  public enableAssociateButton(): boolean {\r\n    if (!!this.storageCondition && !!this.storageCondition.scName && this.storageCondition.scName.trim().length !== 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".title\\\" | translate }} ({{ storageConditionTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"storageConditionTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"!storageConditionTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addStorageCondition()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              *ngIf=\\\"storageConditionTableDataSource.hasDataSelection\\\"\\r\\n              (click)=\\\"deleteSelectedStorageCondition()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              *ngIf=\\\"storageConditionTableDataSource.dataSelectionCount === 1\\\"\\r\\n              (click)=\\\"editSelectedStorageCondition()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- FORM POPUP -->\\r\\n\\r\\n  <aw-storage-condition-form-popup\\r\\n    *ngIf=\\\"showStorageConditionForm\\\"\\r\\n    [(display)]=\\\"showStorageConditionForm\\\"\\r\\n    [storageCondition]=\\\"currentStorageCondition\\\"\\r\\n    [isNewStorageCondition]=\\\"isNewStorageCondition\\\"\\r\\n    (onCreate)=\\\"createStorageCondition($event)\\\"\\r\\n    (onUpdate)=\\\"updateStorageCondition($event)\\\"\\r\\n  ></aw-storage-condition-form-popup>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { LoaderService } from '../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidtStorageConditionDTO } from '../../../../../../shared/types/api-types/bidt-storage-condition-dto.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { StorageConditionService } from './storage-condition.service';\r\n\r\n@Component({\r\n  selector: 'aw-storage-condition',\r\n  templateUrl: './storage-condition.component.html'\r\n})\r\nexport class StorageConditionComponent extends DynamicCatalog implements OnInit {\r\n  public filteredRowsNb: number;\r\n\r\n  public storageConditionTableDataSource: TableDataSource<BidtStorageConditionDTO>;\r\n  public currentStorageCondition: BidtStorageConditionDTO | undefined;\r\n  public currentStorageConditionIndex: number | undefined;\r\n  public showStorageConditionForm: boolean;\r\n  public isNewStorageCondition: boolean;\r\n  public storageConditionAddedList: BidtStorageConditionDTO[];\r\n  public storageConditionUpdatedList: BidtStorageConditionDTO[];\r\n\r\n  public constructor(\r\n    private readonly _loaderService: LoaderService,\r\n    private readonly _messageService: MessageService,\r\n    private readonly storageConditionService: StorageConditionService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.storageConditionTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'scName', translateKey: this.getTranslateKey('scName') },\r\n        {\r\n          field: 'scContainerType',\r\n          translateKey: this.getTranslateKey('scContainerType')\r\n        },\r\n        { field: 'scDescription', translateKey: this.getTranslateKey('scDescription') }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.currentStorageCondition = undefined;\r\n    this.currentStorageConditionIndex = undefined;\r\n\r\n    this.showStorageConditionForm = false;\r\n    this.isNewStorageCondition = false;\r\n    this.storageConditionAddedList = [];\r\n    this.storageConditionUpdatedList = [];\r\n    this.loadStorageConditionTableData();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this._loaderService.hideModuleLoadingBar();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'StorageConditionComponent';\r\n  }\r\n\r\n  protected get messageService(): MessageService {\r\n    return this._messageService;\r\n  }\r\n\r\n  public loadStorageConditionTableData(): void {\r\n    this.storageConditionTableDataSource.setData([]);\r\n    this.storageConditionService.loadStorageConditionTableData().subscribe(\r\n      (results) => {\r\n        results.list.forEach((element) => {\r\n          element.dataKey = element.id;\r\n        });\r\n\r\n        this.storageConditionTableDataSource.addData(results.list);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetResults'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.storageConditionAddedList = [];\r\n    this.storageConditionUpdatedList = [];\r\n    this.loadStorageConditionTableData();\r\n  }\r\n\r\n  public save(): void {\r\n    if (this.isSaveValid()) {\r\n      const input: SaveCatalogInput = {\r\n        bidtStorageConditionAddOrUpdateList: this.storageConditionTableDataSource.dataSrc\r\n      };\r\n      this.storageConditionService.saveStorageCondition(input).subscribe(\r\n        () => {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveStorageCondition'));\r\n          this.refresh();\r\n        },\r\n        () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnSaveStorageCondition'));\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private isSaveValid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  public addStorageCondition(): void {\r\n    this.showStorageConditionForm = true;\r\n    this.isNewStorageCondition = true;\r\n    this.currentStorageCondition = {};\r\n  }\r\n\r\n  public editSelectedStorageCondition(): void {\r\n    this.showStorageConditionForm = true;\r\n    this.isNewStorageCondition = false;\r\n    const storageCondition = this.storageConditionTableDataSource.dataSelection[0];\r\n    this.currentStorageCondition = storageCondition;\r\n    this.currentStorageConditionIndex = this.storageConditionTableDataSource.dataSrc.findIndex(\r\n      (type) => type === this.storageConditionTableDataSource.dataSelection[0]\r\n    );\r\n  }\r\n\r\n  public deleteSelectedStorageCondition(): void {\r\n    const partialMessageKey =\r\n      this.storageConditionTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedRows'\r\n        : 'confirmDeleteSelectedRow';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const selectedStoragConditionList = new Array<number>();\r\n        this.storageConditionTableDataSource.dataSelection.forEach((type) => {\r\n          if (type && type.id) {\r\n            selectedStoragConditionList.push(type.id);\r\n          }\r\n\r\n          const inAddedList = this.storageConditionAddedList.filter((element, index) => {\r\n            return type.dataKey === element.dataKey;\r\n          });\r\n\r\n          // removing from added\r\n          if (inAddedList) {\r\n            let foundAddedIndex = -1;\r\n            this.storageConditionAddedList.forEach((entry, index) => {\r\n              if (entry.dataKey === type.dataKey) {\r\n                foundAddedIndex = index;\r\n              }\r\n            });\r\n            this.storageConditionAddedList.splice(foundAddedIndex, 1);\r\n          }\r\n\r\n          const inUpdatedList = this.storageConditionUpdatedList.filter((element, index) => {\r\n            return element.dataKey === type.dataKey;\r\n          });\r\n\r\n          // removing from updated\r\n          if (inUpdatedList) {\r\n            let foundUpdatedIndex = -1;\r\n            this.storageConditionUpdatedList.forEach((entry, index) => {\r\n              if (entry.dataKey === type.dataKey) {\r\n                foundUpdatedIndex = index;\r\n              }\r\n            });\r\n            this.storageConditionUpdatedList.splice(foundUpdatedIndex, 1);\r\n          }\r\n\r\n          // Removing from table\r\n          this.storageConditionTableDataSource.deleteDataSelection();\r\n        });\r\n\r\n        this.storageConditionService.deleteStorageCondition(selectedStoragConditionList).subscribe((result) => {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteStorageCondition'));\r\n          this.storageConditionTableDataSource.dataSelection = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public createStorageCondition(event: BidtStorageConditionDTO): void {\r\n    if (event) {\r\n      this.storageConditionAddedList = [...this.storageConditionAddedList, event];\r\n      const storageCondition = { ...event };\r\n      storageCondition.dataKey = Math.random();\r\n      this.storageConditionTableDataSource.addData([storageCondition]);\r\n    }\r\n  }\r\n\r\n  public updateStorageCondition(event: BidtStorageConditionDTO): void {\r\n    if (this.currentStorageConditionIndex !== null && this.currentStorageConditionIndex !== undefined) {\r\n      this.storageConditionUpdatedList = [...this.storageConditionUpdatedList, event];\r\n      const storageCondition = { ...event };\r\n      this.storageConditionTableDataSource.replaceData(\r\n        this.storageConditionTableDataSource.dataSrc[this.currentStorageConditionIndex],\r\n        storageCondition\r\n      );\r\n      this.storageConditionTableDataSource.dataSelection = [];\r\n    } else {\r\n      super.throwUnboundLocalError('updateStorageCondition', 'this.currentStorageConditionIndex');\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtStorageConditionApi } from '../../../../../../shared/api/bidt-storage-condition.api';\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidtStorageConditionDTO } from '../../../../../../shared/types/api-types/bidt-storage-condition-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageConditionService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtStorageConditionApi: BidtStorageConditionApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public loadStorageConditionTableData(): Observable<SearchResultsDTO<BidtStorageConditionDTO>> {\r\n    return super.post<void, SearchResultsDTO<BidtStorageConditionDTO>>(this.bidtStorageConditionApi.findByCriteria);\r\n  }\r\n\r\n  public deleteStorageCondition(storageTypes: number[]) {\r\n    return super.post<number[], void>(this.bidtStorageConditionApi.delete, storageTypes);\r\n  }\r\n  public saveStorageCondition(input: SaveCatalogInput) {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, input);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".codeName\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [options]=\\\"codeName\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [(ngModel)]=\\\"valuationGroup.valuationGroupCode\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".name\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"valuationGroup.valuationGroupName\\\" maxlength=\\\"100\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".minValue\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          #rangeValueMin=\\\"ngModel\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [pKeyFilter]=\\\"inputValidationService.validatorOfMoney()\\\"\\r\\n          [pValidateOnly]=\\\"true\\\"\\r\\n          maxlength=\\\"18\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"valuationGroup.rangeValueMin\\\"\\r\\n        />\\r\\n        <p-message\\r\\n          *ngIf=\\\"rangeValueMin.invalid && (rangeValueMin.dirty || rangeValueMin.touched)\\\"\\r\\n          severity=\\\"error\\\"\\r\\n          [text]=\\\"inputValidationService.formatOfMoney()\\\"\\r\\n        ></p-message>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".maxValue\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          #rangeValueMax=\\\"ngModel\\\"\\r\\n          type=\\\"text\\\"\\r\\n          [pKeyFilter]=\\\"inputValidationService.validatorOfMoney()\\\"\\r\\n          [pValidateOnly]=\\\"true\\\"\\r\\n          maxlength=\\\"18\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"valuationGroup.rangeValueMax\\\"\\r\\n        />\\r\\n        <p-message\\r\\n          *ngIf=\\\"rangeValueMax.invalid && (rangeValueMax.dirty || rangeValueMax.touched)\\\"\\r\\n          severity=\\\"error\\\"\\r\\n          [text]=\\\"inputValidationService.formatOfMoney()\\\"\\r\\n        ></p-message>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".unitCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [options]=\\\"unitCode\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [(ngModel)]=\\\"unitCodeSelected\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"associate()\\\" [disabled]=\\\"!enableAssociateButton()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { InputValidationService } from '../../../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { BidtValuationGroupDTO } from '../../../../../../../shared/types/api-types/bidt-valuation-group-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../shared/types/label-value.interface';\r\nimport { LabelValueUtils } from '../../../../../../../shared/utils/label-value-utils';\r\nimport { ValuationGroupService } from '../valuation-group.service';\r\n\r\n@Component({\r\n  selector: 'aw-valuation-group-form-popup',\r\n  templateUrl: './valuation-group-form-popup.component.html'\r\n})\r\nexport class ValuationGroupFormPopupComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  public valuationGroup: BidtValuationGroupDTO;\r\n\r\n  @Input()\r\n  public isNewValuationGroup: boolean;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<BidtValuationGroupDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BidtValuationGroupDTO>;\r\n\r\n  public readonly componentId: string;\r\n  public unitCodeSelected: string;\r\n\r\n  public displayValue: boolean;\r\n  public codeName: LabelValue<string>[];\r\n  public unitCode: LabelValue<string>[];\r\n\r\n  public constructor(\r\n    public inputValidationService: InputValidationService,\r\n    public valuationGroupService: ValuationGroupService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'ValuationGroupFormPopupComponent');\r\n\r\n    this.onCreate = new EventEmitter<BidtValuationGroupDTO>();\r\n    this.onUpdate = new EventEmitter<BidtValuationGroupDTO>();\r\n    this.unitCode = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.fillDropDown();\r\n    if (!this.valuationGroup) {\r\n      this.valuationGroup = {};\r\n\r\n      this.valuationGroup.rangeValueMin = '0';\r\n      this.valuationGroup.rangeValueMax = '0';\r\n    }\r\n  }\r\n\r\n  public associate(): void {\r\n    if (!!this.valuationGroup) {\r\n      LabelValueUtils.stringValueToLabel<BidtValuationGroupDTO>(\r\n        this.valuationGroup,\r\n        'valuationGroupCode',\r\n        this.codeName\r\n      );\r\n      if (this.isRangeValid()) {\r\n        this.valuationGroup.unitCode = this.unitCodeSelected;\r\n        if (this.isNewValuationGroup) {\r\n          this.onCreate.emit(this.valuationGroup);\r\n          this.display = false;\r\n        } else {\r\n          this.onUpdate.emit(this.valuationGroup);\r\n          this.display = false;\r\n        }\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('rangeExceed'));\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('associate', 'this.valuationGroup');\r\n    }\r\n  }\r\n\r\n  private isRangeValid(): boolean {\r\n    const maxLength = 18;\r\n    if (\r\n      !!this.valuationGroup &&\r\n      !!this.valuationGroup.rangeValueMin &&\r\n      this.valuationGroup.rangeValueMin.toString().length > maxLength\r\n    ) {\r\n      return false;\r\n    }\r\n    if (\r\n      !!this.valuationGroup &&\r\n      !!this.valuationGroup.rangeValueMax &&\r\n      this.valuationGroup.rangeValueMax.toString().length > maxLength\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public enableAssociateButton(): boolean {\r\n    if (\r\n      !!this.valuationGroup &&\r\n      !!this.valuationGroup.valuationGroupCode &&\r\n      this.valuationGroup.valuationGroupCode.trim().length !== 0 &&\r\n      !!this.valuationGroup.valuationGroupName &&\r\n      this.valuationGroup.valuationGroupName.trim().length !== 0\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public fillDropDown() {\r\n    // if (this.isNewValuationGroup) {\r\n    this.valuationGroupService.getValuationGroupCodeNameMap().subscribe((results) => {\r\n      this.codeName = results;\r\n\r\n      if (this.valuationGroup) {\r\n        this.codeName.forEach((res) => {\r\n          if (!!this.valuationGroup && this.valuationGroup.valuationGroupCode === res.label) {\r\n            this.valuationGroup.valuationGroupCode = res.value;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.valuationGroupService.getValuationGroupUnitCodeMapping().subscribe((results) => {\r\n      // this.unitCode = results;\r\n\r\n      results.forEach((res) => {\r\n        this.unitCode.push({\r\n          label: `${res.label}-${res.value}`,\r\n          value: res.value\r\n        });\r\n      });\r\n\r\n      if (!!this.valuationGroup && !!this.valuationGroup.unitCode) {\r\n        this.unitCodeSelected = this.valuationGroup.unitCode;\r\n      }\r\n    });\r\n    // }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".title\\\" | translate }} ({{ valuationGroupTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"valuationGroupTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"!valuationGroupTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addValuationGroup()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"valuationGroupTableDataSource.hasDataSelection\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"deleteSelectedValuationGroup()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              *ngIf=\\\"valuationGroupTableDataSource.dataSelectionCount === 1\\\"\\r\\n              (click)=\\\"editSelectedValuationGroup()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- FORM POPUP -->\\r\\n\\r\\n  <aw-valuation-group-form-popup\\r\\n    *ngIf=\\\"showValuationGroupForm\\\"\\r\\n    [(display)]=\\\"showValuationGroupForm\\\"\\r\\n    [valuationGroup]=\\\"currentValuationGroup\\\"\\r\\n    [isNewValuationGroup]=\\\"isNewValuationGroup\\\"\\r\\n    (onCreate)=\\\"createValuationGroup($event)\\\"\\r\\n    (onUpdate)=\\\"updateValuationGroup($event)\\\"\\r\\n  ></aw-valuation-group-form-popup>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { LoaderService } from '../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidtValuationGroupDTO } from '../../../../../../shared/types/api-types/bidt-valuation-group-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { ValuationGroupService } from './valuation-group.service';\r\n\r\n@Component({\r\n  selector: 'aw-valuation-group',\r\n  templateUrl: './valuation-group.component.html'\r\n})\r\nexport class ValuationGroupComponent extends DynamicCatalog implements OnInit {\r\n  public filteredRowsNb: number;\r\n\r\n  public valuationGroupTableDataSource: TableDataSource<BidtValuationGroupDTO>;\r\n\r\n  public currentValuationGroup: BidtValuationGroupDTO | undefined;\r\n  public currentValuationGroupIndex: number | undefined;\r\n  public showValuationGroupForm: boolean;\r\n  public isNewValuationGroup: boolean;\r\n  public valuationGroupAddedList: BidtValuationGroupDTO[];\r\n  public valuationGroupUpdatedList: BidtValuationGroupDTO[];\r\n  public codeName: LabelValue<string>[];\r\n\r\n  public constructor(\r\n    private readonly _loaderService: LoaderService,\r\n    private readonly _messageService: MessageService,\r\n    private readonly valuationGroupService: ValuationGroupService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.valuationGroupTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'valuationGroupCode',\r\n          translateKey: this.getTranslateKey('valuationGroupCode')\r\n        },\r\n        {\r\n          field: 'valuationGroupName',\r\n          translateKey: this.getTranslateKey('valuationGroupName')\r\n        },\r\n        {\r\n          field: 'rangeValueMinCsv',\r\n          translateKey: this.getTranslateKey('rangeValueMinCsv')\r\n        },\r\n        {\r\n          field: 'rangeValueMaxCsv',\r\n          translateKey: this.getTranslateKey('rangeValueMaxCsv')\r\n        },\r\n        { field: 'unitCode', translateKey: this.getTranslateKey('unitCode') }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.currentValuationGroup = undefined;\r\n    this.currentValuationGroupIndex = undefined;\r\n    this.showValuationGroupForm = false;\r\n    this.isNewValuationGroup = false;\r\n    this.valuationGroupAddedList = [];\r\n    this.valuationGroupUpdatedList = [];\r\n    this.loadValuationGroupTableData();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this._loaderService.hideModuleLoadingBar();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'ValuationGroupComponent';\r\n  }\r\n\r\n  protected get messageService(): MessageService {\r\n    return this._messageService;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onFilter(event: any): void {\r\n    this.filteredRowsNb = event.filteredValue.length;\r\n  }\r\n\r\n  public loadValuationGroupTableData(): void {\r\n    this.valuationGroupTableDataSource.setData([]);\r\n    this.valuationGroupService.loadValuationGroupTableData().subscribe(\r\n      (results) => {\r\n        results.list.forEach((res) => {\r\n          if (!!res.rangeValueMin) {\r\n            const min = parseFloat(res.rangeValueMin);\r\n            res.rangeValueMinCsv = this.numberWithCommas(min);\r\n          }\r\n          if (!!res.rangeValueMax) {\r\n            const max = parseFloat(res.rangeValueMax);\r\n            res.rangeValueMaxCsv = this.numberWithCommas(max);\r\n          }\r\n        });\r\n        this.valuationGroupTableDataSource.addData(results.list);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetResults'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private numberWithCommas(n: number): string {\r\n    const parts = n.toString().split('.');\r\n\r\n    return parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + (parts[1] ? '.' + parts[1] : '');\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.valuationGroupAddedList = [];\r\n    this.valuationGroupUpdatedList = [];\r\n    this.loadValuationGroupTableData();\r\n  }\r\n\r\n  public save(): void {\r\n    this.valuationGroupService.getValuationGroupCodeNameMap().subscribe((results) => {\r\n      this.codeName = results;\r\n    });\r\n    this.valuationGroupTableDataSource.dataSrc.forEach((element) => {\r\n      this.codeName.forEach((result) => {\r\n        if (result.label === element.valuationGroupCode) {\r\n          element.valuationGroupCode = result.value;\r\n        }\r\n      });\r\n    });\r\n    const input: SaveCatalogInput = {\r\n      bidtValuationGroupAddOrUpdateDTOList: this.valuationGroupTableDataSource.dataSrc\r\n    };\r\n    this.valuationGroupService.saveValuationGroup(input).subscribe(\r\n      () => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveValuationGroup'));\r\n        this.refresh();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnSaveValuationGroup'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public addValuationGroup(): void {\r\n    this.showValuationGroupForm = true;\r\n    this.isNewValuationGroup = true;\r\n    this.currentValuationGroup = {};\r\n  }\r\n\r\n  public editSelectedValuationGroup(): void {\r\n    this.showValuationGroupForm = true;\r\n    this.isNewValuationGroup = false;\r\n    const valuationGroup = this.valuationGroupTableDataSource.dataSelection[0];\r\n    this.currentValuationGroup = valuationGroup;\r\n    this.currentValuationGroupIndex = this.valuationGroupTableDataSource.dataSrc.findIndex(\r\n      (type) => type === this.valuationGroupTableDataSource.dataSelection[0]\r\n    );\r\n  }\r\n\r\n  public deleteSelectedValuationGroup(): void {\r\n    const partialMessageKey =\r\n      this.valuationGroupTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedRows'\r\n        : 'confirmDeleteSelectedRow';\r\n\r\n    const valuationGroup: number[] = [];\r\n    this.valuationGroupTableDataSource.dataSelection.forEach((type) => {\r\n      if (!!type && !!type.id) {\r\n        const typeId: number = type.id;\r\n        valuationGroup.push(typeId);\r\n      }\r\n    });\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.valuationGroupService.deleteValuationGroup(valuationGroup).subscribe(\r\n          (result) => {\r\n            this.valuationGroupTableDataSource.dataSelection.forEach((type) => {\r\n              const inAddedList = this.valuationGroupAddedList.filter((element, index) => {\r\n                return (\r\n                  type.valuationGroupCode === element.valuationGroupCode &&\r\n                  type.valuationGroupName === element.valuationGroupName\r\n                );\r\n              });\r\n\r\n              // removing from added\r\n              if (inAddedList) {\r\n                let foundAddedIndex = -1;\r\n                this.valuationGroupAddedList.forEach((entry, index) => {\r\n                  if (\r\n                    entry.valuationGroupCode === type.valuationGroupCode &&\r\n                    type.valuationGroupName === entry.valuationGroupName\r\n                  ) {\r\n                    foundAddedIndex = index;\r\n                  }\r\n                });\r\n                this.valuationGroupAddedList.splice(foundAddedIndex, 1);\r\n              }\r\n\r\n              const inUpdatedList = this.valuationGroupUpdatedList.filter((element, index) => {\r\n                return (\r\n                  element.valuationGroupCode === type.valuationGroupCode &&\r\n                  type.valuationGroupName === element.valuationGroupName\r\n                );\r\n              });\r\n\r\n              // removing from updated\r\n              if (inUpdatedList) {\r\n                let foundUpdatedIndex = -1;\r\n                this.valuationGroupUpdatedList.forEach((entry, index) => {\r\n                  if (\r\n                    entry.valuationGroupCode === type.valuationGroupCode &&\r\n                    type.valuationGroupName === entry.valuationGroupName\r\n                  ) {\r\n                    foundUpdatedIndex = index;\r\n                  }\r\n                });\r\n                this.valuationGroupUpdatedList.splice(foundUpdatedIndex, 1);\r\n              }\r\n\r\n              // Removing from table\r\n              this.valuationGroupTableDataSource.deleteDataSelection();\r\n            });\r\n            this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteValuationGroup'));\r\n            this.valuationGroupTableDataSource.dataSelection = [];\r\n          },\r\n          (error) => {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeleteValuationGroup'));\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  public createValuationGroup(event: BidtValuationGroupDTO): void {\r\n    if (event) {\r\n      event.rangeValueMinCsv = event.rangeValueMin && this.numberWithCommas(parseFloat(event.rangeValueMin));\r\n      event.rangeValueMaxCsv = event.rangeValueMax && this.numberWithCommas(parseFloat(event.rangeValueMax));\r\n      this.valuationGroupAddedList = [...this.valuationGroupAddedList, event];\r\n      const valuationGroup = { ...event };\r\n      this.valuationGroupTableDataSource.addData([valuationGroup]);\r\n    }\r\n  }\r\n\r\n  public updateValuationGroup(event: BidtValuationGroupDTO): void {\r\n    if (this.currentValuationGroupIndex !== undefined) {\r\n      event.rangeValueMinCsv = event.rangeValueMin && this.numberWithCommas(parseFloat(event.rangeValueMin));\r\n      event.rangeValueMaxCsv = event.rangeValueMax && this.numberWithCommas(parseFloat(event.rangeValueMax));\r\n      this.valuationGroupUpdatedList = [...this.valuationGroupUpdatedList, event];\r\n      const valuationGroup = { ...event };\r\n      this.valuationGroupTableDataSource.replaceData(\r\n        this.valuationGroupTableDataSource.dataSrc[this.currentValuationGroupIndex],\r\n        valuationGroup\r\n      );\r\n      this.valuationGroupTableDataSource.dataSelection = [];\r\n    } else {\r\n      super.throwUnboundLocalError('updateValuationGroup', 'this.currentValuationGroupIndex');\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtValuationGroupApi } from '../../../../../../shared/api/bidt-valuation-group.api';\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BidtValuationGroupDTO } from '../../../../../../shared/types/api-types/bidt-valuation-group-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValuationGroupService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly bidtValuationGroupApi: BidtValuationGroupApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public loadValuationGroupTableData(): Observable<SearchResultsDTO<BidtValuationGroupDTO>> {\r\n    return super.post<void, SearchResultsDTO<BidtValuationGroupDTO>>(this.bidtValuationGroupApi.findByCriteria);\r\n  }\r\n  public getValuationGroupCodeNameMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue('getValuationGroupCodeMap');\r\n  }\r\n  public deleteValuationGroup(valuationGroup: number[]) {\r\n    return super.post<number[], void>(this.bidtValuationGroupApi.delete, valuationGroup);\r\n  }\r\n  public getValuationGroupUnitCodeMapping(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.productStructureManagementApi.findAllBireUnitMeasures);\r\n  }\r\n  public saveValuationGroup(input: SaveCatalogInput) {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, input);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".causeOfRemovalList\\\" | translate }} ({{ returnReasonTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"returnReasonTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              *ngIf=\\\"returnReasonTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteSelectedReturnReason()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"returnReasonTableDataSource.dataSelectionCount === 1\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editSelectedReturnReason()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!returnReasonTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addReturnReason()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-return-reason\\r\\n    *ngIf=\\\"showReasonRemovalDialog\\\"\\r\\n    [(display)]=\\\"showReasonRemovalDialog\\\"\\r\\n    [data]=\\\"selectedReasonTableDialogData\\\"\\r\\n    [openMode]=\\\"reasonRemovalDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddReasonReturn($event)\\\"\\r\\n    (onUpdate)=\\\"updateReturnReason($event)\\\"\\r\\n    [removalList]=\\\"returnReasonTableDataSource.dataSrc\\\"\\r\\n  ></aw-dialog-return-reason>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { AWPropertiesConstants } from '../../../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireReturnReasonDTO } from '../../../../../../shared/types/api-output-types/administration-catalog/bire-return-reason-dto.interface';\r\nimport { BireReturnReasonDTOId } from '../../../../../../shared/types/api-types/bire-return-reason-dto-id.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { CauseForRemovalService } from './cause-for-removal.service';\r\n\r\n@Component({\r\n  selector: 'aw-cause-for-removal',\r\n  templateUrl: './cause-for-removal.component.html'\r\n})\r\nexport class CauseForRemovalComponent extends DynamicCatalog implements OnInit {\r\n  public returnReasonTableDataSource: TableDataSource<BireReturnReasonDTO>;\r\n  public selectedReasonTableDialogData: BireReturnReasonDTO;\r\n\r\n  public reasonRemovalDialogOpenMode: ComponentOpenMode;\r\n  public showReasonRemovalDialog: boolean;\r\n\r\n  private bireReturnReasonAddedList: BireReturnReasonDTO[];\r\n  private bireReturnReasonUpdatedList: BireReturnReasonDTO[];\r\n\r\n  private readonly causeTypeList: SelectItem[];\r\n  private selectedReasonCodeToEdit: string;\r\n\r\n  public constructor(\r\n    private readonly causeForRemovalService: CauseForRemovalService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.reasonRemovalDialogOpenMode = ComponentOpenMode.Read;\r\n    this.returnReasonTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'returnReasonCode',\r\n          translateKey: this.getTranslateKey('returnReasonCode')\r\n        },\r\n        {\r\n          field: 'returnReasonName',\r\n          translateKey: this.getTranslateKey('returnReasonName')\r\n        },\r\n        {\r\n          field: 'returnReasonDescription',\r\n          translateKey: this.getTranslateKey('returnReasonDescription')\r\n        },\r\n        {\r\n          field: 'causeType',\r\n          translateKey: this.getTranslateKey('causeType')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n    // Cause Dropdown\r\n    this.causeTypeList = [\r\n      { label: '', value: undefined },\r\n      { label: 'General', value: AWPropertiesConstants.CAUSE_TYPE_GENERAL_KEY },\r\n      { label: 'Systematic ', value: AWPropertiesConstants.CAUSE_TYPE_SYSTEMATIC_KEY },\r\n      { label: 'Temporary Directive', value: AWPropertiesConstants.CAUSE_TYPE_TEMPORARY_DIRECTIVE_KEY }\r\n    ];\r\n\r\n    this.showReasonRemovalDialog = false;\r\n    this.bireReturnReasonUpdatedList = [];\r\n    this.bireReturnReasonAddedList = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadReturnReasonTableData();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'CauseForRemovalComponent';\r\n  }\r\n\r\n  public refresh() {\r\n    this.bireReturnReasonAddedList = [];\r\n    this.bireReturnReasonUpdatedList = [];\r\n    this.returnReasonTableDataSource.dataSelection = [];\r\n    this.loadReturnReasonTableData(true);\r\n  }\r\n\r\n  public save() {\r\n    if (this.isSaveValid(this.bireReturnReasonAddedList, this.bireReturnReasonUpdatedList)) {\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bireReturnReasonAddedList: this.bireReturnReasonAddedList,\r\n        bireReturnReasonUpdatedList: this.bireReturnReasonUpdatedList\r\n      };\r\n\r\n      this.causeForRemovalService.saveCatalog(saveCatalogInput).subscribe(() => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n\r\n        // Clearing Added and updated List\r\n        this.bireReturnReasonAddedList = [];\r\n        this.bireReturnReasonUpdatedList = [];\r\n      });\r\n    }\r\n  }\r\n\r\n  private causeList(filterType, val): string {\r\n    let value = '';\r\n    if (filterType === 'label') {\r\n      this.causeTypeList.filter((ev) => {\r\n        if (!!ev.value && !!ev.label && ev.value === val) {\r\n          value = ev.value === val ? ev.label : '';\r\n        }\r\n      });\r\n    } else {\r\n      this.causeTypeList.filter((ev) => {\r\n        if (ev.label === val) {\r\n          value = ev.label === val ? ev.value : '';\r\n        }\r\n      });\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Loading reason removal table data\r\n   */\r\n  private loadReturnReasonTableData(isFromRefresh?: boolean) {\r\n    this.returnReasonTableDataSource.setData([]);\r\n    const flag = isFromRefresh ? true : false;\r\n    this.causeForRemovalService.findBireReturnReasonsByCriteria().subscribe((results) => {\r\n      results.forEach((res) => {\r\n        res.causeType = this.causeList('label', res.causeType);\r\n      });\r\n\r\n      this.returnReasonTableDataSource.addData(results);\r\n\r\n      if (!flag) {\r\n        // Adding added entry in table\r\n        if (this.bireReturnReasonAddedList) {\r\n          this.bireReturnReasonAddedList.forEach((entry) => {\r\n            this.returnReasonTableDataSource.addData([entry]);\r\n          });\r\n        }\r\n\r\n        // TO reenter modified entry in table\r\n        if (this.bireReturnReasonUpdatedList) {\r\n          this.returnReasonTableDataSource.dataSrc.forEach((res) => {\r\n            this.bireReturnReasonUpdatedList.forEach((entry) => {\r\n              if (res.returnReasonCode === entry.returnReasonCode) {\r\n                this.returnReasonTableDataSource.replaceData(res, entry);\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On Add button click\r\n   */\r\n  public addReturnReason() {\r\n    this.selectedReasonTableDialogData = {};\r\n    this.reasonRemovalDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showReasonRemovalDialog = true;\r\n  }\r\n\r\n  /**\r\n   * On add table row\r\n   */\r\n  public onAddReasonReturn(ev) {\r\n    const event = { ...ev };\r\n    event.causeType = this.causeList('label', event.causeType);\r\n    this.returnReasonTableDataSource.addData([event]);\r\n    this.bireReturnReasonAddedList.push(ev);\r\n  }\r\n\r\n  /**\r\n   * Delete selected reasons\r\n   */\r\n  public deleteSelectedReturnReason() {\r\n    const partialMessageKey =\r\n      this.returnReasonTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedReasons'\r\n        : 'confirmDeleteSelectedReason';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const bireReturnReasonDTOId: BireReturnReasonDTOId[] = [];\r\n        this.returnReasonTableDataSource.dataSelection.forEach((res) => {\r\n          if (!!res.returnReasonCode) {\r\n            bireReturnReasonDTOId.push({ returnReasonCode: res.returnReasonCode });\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSelectedReturnReason', 'res.returnReasonCode');\r\n          }\r\n\r\n          const inAddedList = this.bireReturnReasonAddedList.filter((element, index) => {\r\n            return res.returnReasonCode === element.returnReasonCode;\r\n          });\r\n\r\n          // removing from added\r\n          if (inAddedList) {\r\n            let foundAddedIndex = -1;\r\n            this.bireReturnReasonAddedList.forEach((entry, index) => {\r\n              if (entry.returnReasonCode === res.returnReasonCode) {\r\n                foundAddedIndex = index;\r\n              }\r\n            });\r\n            this.bireReturnReasonAddedList.splice(foundAddedIndex, 1);\r\n          }\r\n\r\n          const inUpdatedList = this.bireReturnReasonUpdatedList.filter((element, index) => {\r\n            return res.returnReasonCode === element.returnReasonCode;\r\n          });\r\n\r\n          // removing from updated\r\n          if (inUpdatedList) {\r\n            let foundUpdatedIndex = -1;\r\n            this.bireReturnReasonUpdatedList.forEach((entry, index) => {\r\n              if (entry.returnReasonCode === res.returnReasonCode) {\r\n                foundUpdatedIndex = index;\r\n              }\r\n            });\r\n            this.bireReturnReasonUpdatedList.splice(foundUpdatedIndex, 1);\r\n          }\r\n\r\n          // Removing from table\r\n          this.returnReasonTableDataSource.deleteDataSelection();\r\n        });\r\n\r\n        this.causeForRemovalService.removeBireReturnReasons(bireReturnReasonDTOId).subscribe((results) => {\r\n          this.returnReasonTableDataSource.dataSelection = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edit Selected Reason\r\n   */\r\n  public editSelectedReturnReason() {\r\n    this.selectedReasonCodeToEdit = '';\r\n    const cloneSelection = [this.returnReasonTableDataSource.dataSelection[0]];\r\n    const causeTypeCopy = this.causeList('value', cloneSelection[0].causeType);\r\n    this.selectedReasonTableDialogData = { ...cloneSelection[0] };\r\n    this.selectedReasonTableDialogData.causeType = causeTypeCopy;\r\n    this.reasonRemovalDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showReasonRemovalDialog = true;\r\n    const code = cloneSelection[0].returnReasonCode;\r\n    if (!!code) {\r\n      this.selectedReasonCodeToEdit = code;\r\n    } else {\r\n      super.throwUnboundLocalError('editSelectedReturnReason', 'code');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On update table row\r\n   */\r\n  public updateReturnReason(ev: BireReturnReasonDTO) {\r\n    this.returnReasonTableDataSource.dataSrc.forEach((res) => {\r\n      if (res.returnReasonCode === this.selectedReasonCodeToEdit) {\r\n        const evt = { ...ev };\r\n        evt.causeType = this.causeList('label', evt.causeType);\r\n        this.returnReasonTableDataSource.replaceData(res, evt);\r\n      }\r\n    });\r\n    // CHeck if updated entry was a new entry or not\r\n    let isNew = false;\r\n    this.bireReturnReasonAddedList.forEach((res, index) => {\r\n      if (res.returnReasonCode === ev.returnReasonCode) {\r\n        isNew = true;\r\n        this.bireReturnReasonAddedList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    if (!isNew) {\r\n      this.bireReturnReasonUpdatedList.forEach((res, index) => {\r\n        if (res.returnReasonCode === ev.returnReasonCode) {\r\n          this.bireReturnReasonUpdatedList.splice(index, 1);\r\n        }\r\n      });\r\n      this.bireReturnReasonUpdatedList.push(ev);\r\n    } else {\r\n      this.bireReturnReasonAddedList.push(ev);\r\n    }\r\n    this.returnReasonTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  private isSaveValid(dtoAdd, dtoUpdate): boolean {\r\n    // if (dtoAdd.length === 0 && dtoUpdate.length === 0) {\r\n    //   return false;\r\n    // }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { TaskManagementApi } from '../../../../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireReturnReasonDTO } from '../../../../../../shared/types/api-output-types/administration-catalog/bire-return-reason-dto.interface';\r\nimport { BireReturnReasonDTOId } from '../../../../../../shared/types/api-types/bire-return-reason-dto-id.interface';\r\n\r\n@Injectable()\r\nexport class CauseForRemovalService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly taskManagementApi: TaskManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBireReturnReasonsByCriteria(): Observable<BireReturnReasonDTO[]> {\r\n    return super.post<void, BireReturnReasonDTO[]>(this.taskManagementApi.findBireReturnReasonsByCriteria);\r\n  }\r\n\r\n  public removeBireReturnReasons(bireReturnReasonDTOId: BireReturnReasonDTOId[]): Observable<void> {\r\n    return super.post<BireReturnReasonDTOId[], void>(\r\n      this.taskManagementApi.removeBireReturnReasons,\r\n      bireReturnReasonDTOId\r\n    );\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".returnReasonCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"returnReasonCode\\\"\\r\\n          [(ngModel)]=\\\"bireReturnReasonDTO.returnReasonCode\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".returnReasonName\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"returnReasonName\\\"\\r\\n          [(ngModel)]=\\\"bireReturnReasonDTO.returnReasonName\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".returnReasonDescription\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [rows]=\\\"3\\\"\\r\\n          pInputTextarea\\r\\n          [(ngModel)]=\\\"bireReturnReasonDTO.returnReasonDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          maxlength=\\\"300\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".causeType\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [options]=\\\"causeTypeList\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          [(ngModel)]=\\\"bireReturnReasonDTO.causeType\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!bireReturnReasonDTO.returnReasonCode\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { AWPropertiesConstants } from '../../../../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BireReturnReasonDTO } from '../../../../../../../shared/types/api-output-types/administration-catalog/bire-return-reason-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-return-reason',\r\n  templateUrl: './dialog-return-reason.component.html'\r\n})\r\nexport class DialogReturnReasonComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public removalList: BireReturnReasonDTO[];\r\n\r\n  @Input()\r\n  public data: BireReturnReasonDTO;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BireReturnReasonDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BireReturnReasonDTO>;\r\n\r\n  public causeTypeList: SelectItem[];\r\n  public bireReturnReasonDTO: BireReturnReasonDTO;\r\n\r\n  public constructor(private readonly messageService: MessageService, public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DialogReturnReasonComponent');\r\n    this.onValidated = new EventEmitter<BireReturnReasonDTO>();\r\n    this.onUpdate = new EventEmitter<BireReturnReasonDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.data) {\r\n      this.data = {};\r\n    } else {\r\n      this.bireReturnReasonDTO = { ...this.data };\r\n    }\r\n\r\n    this.fillDropDown();\r\n  }\r\n\r\n  private fillDropDown() {\r\n    this.causeTypeList = [\r\n      { label: '', value: undefined },\r\n      { label: 'General', value: AWPropertiesConstants.CAUSE_TYPE_GENERAL_KEY },\r\n      { label: 'Systematic ', value: AWPropertiesConstants.CAUSE_TYPE_SYSTEMATIC_KEY },\r\n      { label: 'Temporary Directive', value: AWPropertiesConstants.CAUSE_TYPE_TEMPORARY_DIRECTIVE_KEY }\r\n    ];\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.openMode === ComponentOpenMode.Write) {\r\n        // Update Mode\r\n        this.data = { ...this.bireReturnReasonDTO };\r\n        this.onUpdate.emit(this.data);\r\n        this.closeDialog();\r\n      } else if (this.openMode === ComponentOpenMode.Create) {\r\n        let isFound = false;\r\n        this.removalList.forEach((res) => {\r\n          if (res.returnReasonCode === this.bireReturnReasonDTO.returnReasonCode) {\r\n            isFound = true;\r\n          }\r\n        });\r\n\r\n        if (!isFound) {\r\n          // Create Mode\r\n          this.data = { ...this.bireReturnReasonDTO };\r\n          this.onValidated.emit(this.data);\r\n          this.closeDialog();\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));\r\n        }\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  private isScreenValidated() {\r\n    if (!this.bireReturnReasonDTO.returnReasonCode || this.bireReturnReasonDTO.returnReasonCode.trim().length === 0) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public closeDialog() {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".damageList\\\" | translate }} ({{ damageTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"damageTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              *ngIf=\\\"damageTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteSelecteddamage()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"damageTableDataSource.dataSelectionCount === 1\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editSelectedDamage()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!damageTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addDamage()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-damage\\r\\n    *ngIf=\\\"showDamageDialog\\\"\\r\\n    [(display)]=\\\"showDamageDialog\\\"\\r\\n    [data]=\\\"selectedDamageDialogData\\\"\\r\\n    [openMode]=\\\"damageDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddDamage($event)\\\"\\r\\n    (onUpdate)=\\\"updateDamage($event)\\\"\\r\\n    [damageList]=\\\"damageTableDataSource.dataSrc\\\"\\r\\n  ></aw-dialog-damage>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireDamageDTO } from '../../../../../../shared/types/api-output-types/administration-catalog/bire-damage-dto.interface';\r\nimport { BireDamageDTOId } from '../../../../../../shared/types/api-types/bire-damage-dto-id.interface';\r\nimport { BireUnitMeasureDTO } from '../../../../../../shared/types/api-types/bire-unit-measure-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { DamageService } from './damage.service';\r\n\r\n@Component({\r\n  selector: 'aw-damage',\r\n  templateUrl: './damage.component.html'\r\n})\r\nexport class DamageComponent extends DynamicCatalog implements OnInit {\r\n  public damageTableDataSource: TableDataSource<BireDamageDTO>;\r\n  public damageDialogOpenMode: ComponentOpenMode;\r\n  public showDamageDialog: boolean;\r\n  private unitCodeList: SelectItem[];\r\n\r\n  public selectedDamageDialogData: BireDamageDTO;\r\n\r\n  private bidoDamageUpdatedList: BireDamageDTO[];\r\n  private bidoDamageAddedList: BireDamageDTO[];\r\n\r\n  private selectedDamageCodeToEdit: string;\r\n  public constructor(\r\n    private readonly damageService: DamageService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.bidoDamageAddedList = [];\r\n    this.bidoDamageUpdatedList = [];\r\n    this.damageDialogOpenMode = ComponentOpenMode.Read;\r\n    this.showDamageDialog = false;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.damageTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'damageCode', translateKey: this.getTranslateKey('damageCode') },\r\n        {\r\n          field: 'unitCode',\r\n          translateKey: this.getTranslateKey('unitCode')\r\n        },\r\n        {\r\n          field: 'damageDescription',\r\n          translateKey: this.getTranslateKey('damageDescription')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.unitCodeList = [];\r\n    this.loadDamageTableData();\r\n    this.fillDropDown();\r\n  }\r\n\r\n  /**\r\n   * Get dropdown data\r\n   */\r\n  private fillDropDown() {\r\n    this.damageService.findAllBireUnitMeasures().subscribe((result) => {\r\n      const labelValue: LabelValue<String>[] = [];\r\n      result.forEach((res: BireUnitMeasureDTO) => {\r\n        labelValue.push({\r\n          // tslint:disable-next-line:no-string-literal\r\n          label: res['label'],\r\n          // tslint:disable-next-line:no-string-literal\r\n          value: res['value']\r\n        });\r\n      });\r\n\r\n      this.unitCodeList = labelValue;\r\n    });\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'DamageComponent';\r\n  }\r\n\r\n  /**\r\n   * Filter to get drop down value/label\r\n   */\r\n  private filterUnitCodeList(filterType, val): string {\r\n    let value;\r\n    if (filterType === 'label') {\r\n      this.unitCodeList.filter((ev) => {\r\n        if (ev.value === val) {\r\n          value = ev.value === val ? ev.label : undefined;\r\n        }\r\n      });\r\n    } else {\r\n      this.unitCodeList.filter((ev) => {\r\n        if (ev.label === val) {\r\n          value = ev.label === val ? ev.value : undefined;\r\n        }\r\n      });\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Render damage table data\r\n   */\r\n  private loadDamageTableData(isFromRefresh?: boolean) {\r\n    const flag = isFromRefresh ? true : false;\r\n    this.damageTableDataSource.setData([]);\r\n    this.damageService.findBireDamagesByCriteria().subscribe((results) => {\r\n      this.damageTableDataSource.addData(results);\r\n      if (!flag) {\r\n        if (this.bidoDamageAddedList) {\r\n          this.bidoDamageAddedList.forEach((entry) => {\r\n            this.damageTableDataSource.addData([entry]);\r\n          });\r\n        }\r\n\r\n        // TO reenter modified entry in table\r\n        if (this.bidoDamageUpdatedList) {\r\n          this.damageTableDataSource.dataSrc.forEach((res, index) => {\r\n            this.bidoDamageUpdatedList.forEach((entry) => {\r\n              if (res.damageCode === entry.damageCode) {\r\n                this.damageTableDataSource.replaceData(res, entry);\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open Popup for damage\r\n   */\r\n  public addDamage() {\r\n    this.selectedDamageDialogData = {};\r\n    this.damageDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showDamageDialog = true;\r\n  }\r\n\r\n  /**\r\n   * edit selected damage\r\n   */\r\n  public editSelectedDamage() {\r\n    this.selectedDamageCodeToEdit = '';\r\n    const cloneObj = [...this.damageTableDataSource.dataSelection];\r\n    const unitCodeCopy = this.filterUnitCodeList('value', cloneObj[0].unitCode);\r\n    this.selectedDamageDialogData = { ...cloneObj[0] };\r\n    this.selectedDamageDialogData.unitCode = unitCodeCopy;\r\n    this.damageDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showDamageDialog = true;\r\n    const selDamageCode = cloneObj[0].damageCode;\r\n    if (!!selDamageCode) {\r\n      this.selectedDamageCodeToEdit = selDamageCode;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * delete selected damage\r\n   */\r\n  public deleteSelecteddamage() {\r\n    const partialMessageKey =\r\n      this.damageTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedDamages'\r\n        : 'confirmDeleteSelectedDamage';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const bireDamageDTOId: BireDamageDTOId[] = [];\r\n        this.damageTableDataSource.dataSelection.forEach((res) => {\r\n          if (!!res.damageCode) {\r\n            const damageId: BireDamageDTOId = { damageCode: res.damageCode };\r\n            bireDamageDTOId.push(damageId);\r\n          }\r\n\r\n          const inAddedList = this.bidoDamageAddedList.filter((element, index) => {\r\n            return res.damageCode === element.damageCode;\r\n          });\r\n\r\n          // removing from added\r\n          if (inAddedList) {\r\n            let foundAddedIndex = -1;\r\n            this.bidoDamageAddedList.forEach((entry, index) => {\r\n              if (entry.damageCode === res.damageCode) {\r\n                foundAddedIndex = index;\r\n              }\r\n            });\r\n            this.bidoDamageAddedList.splice(foundAddedIndex, 1);\r\n          }\r\n\r\n          const inUpdatedList = this.bidoDamageUpdatedList.filter((element, index) => {\r\n            return res.damageCode === element.damageCode;\r\n          });\r\n\r\n          // removing from updated\r\n          if (inUpdatedList) {\r\n            let foundUpdatedIndex = -1;\r\n            this.bidoDamageUpdatedList.forEach((entry, index) => {\r\n              if (entry.damageCode === res.damageCode) {\r\n                foundUpdatedIndex = index;\r\n              }\r\n            });\r\n            this.bidoDamageUpdatedList.splice(foundUpdatedIndex, 1);\r\n          }\r\n        });\r\n\r\n        this.damageTableDataSource.deleteDataSelection();\r\n\r\n        this.damageService.removeBireDamage(bireDamageDTOId).subscribe((results) => {\r\n          this.damageTableDataSource.dataSelection = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Event to capture added damage\r\n   */\r\n  public onAddDamage(ev: BireDamageDTO) {\r\n    const event: BireDamageDTO = { ...ev };\r\n    event.unitCode = this.filterUnitCodeList('label', event.unitCode);\r\n    this.damageTableDataSource.addData([event]);\r\n    this.bidoDamageAddedList.push(event);\r\n  }\r\n\r\n  /**\r\n   * Event to capture updated damage\r\n   */\r\n  public updateDamage(ev: BireDamageDTO) {\r\n    this.damageTableDataSource.dataSrc.forEach((res) => {\r\n      if (res.damageCode === this.selectedDamageCodeToEdit) {\r\n        const evt: BireDamageDTO = { ...ev };\r\n        evt.unitCode = this.filterUnitCodeList('label', evt.unitCode);\r\n        this.damageTableDataSource.replaceData(res, ev);\r\n      }\r\n    });\r\n    let isNew = false;\r\n    this.bidoDamageAddedList.forEach((res, index) => {\r\n      if (res.damageCode === ev.damageCode) {\r\n        isNew = true;\r\n        this.bidoDamageAddedList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    ev.unitCode = this.filterUnitCodeList('label', ev.unitCode);\r\n    if (!isNew) {\r\n      this.bidoDamageUpdatedList.forEach((res, index) => {\r\n        if (res.damageCode === ev.damageCode) {\r\n          this.bidoDamageUpdatedList.splice(index, 1);\r\n        }\r\n      });\r\n      this.bidoDamageUpdatedList.push(ev);\r\n    } else {\r\n      this.bidoDamageAddedList.push(ev);\r\n    }\r\n    this.damageTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**\r\n   * Saving Reason Return Data\r\n   */\r\n  public save() {\r\n    if (this.isSaveValid(this.bidoDamageAddedList, this.bidoDamageUpdatedList)) {\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bidoDamageAddedList: this.bidoDamageAddedList,\r\n        bidoDamageUpdatedList: this.bidoDamageUpdatedList\r\n      };\r\n\r\n      this.damageService.saveCatalog(saveCatalogInput).subscribe(() => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n\r\n        // Clearing Added and updated List\r\n        this.bidoDamageAddedList = [];\r\n        this.bidoDamageUpdatedList = [];\r\n      });\r\n    }\r\n  }\r\n\r\n  private isSaveValid(dtoAdd, dtoUpdate): boolean {\r\n    // if (dtoAdd.length === 0 && dtoUpdate.length === 0) {\r\n    //   return false;\r\n    // }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Refresh Table\r\n   */\r\n  public refresh() {\r\n    this.bidoDamageAddedList = [];\r\n    this.bidoDamageUpdatedList = [];\r\n    this.loadDamageTableData(true);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../../../shared/api/product-structure-management.api';\r\nimport { TaskManagementApi } from '../../../../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireDamageDTO } from '../../../../../../shared/types/api-output-types/administration-catalog/bire-damage-dto.interface';\r\nimport { BireDamageDTOId } from '../../../../../../shared/types/api-types/bire-damage-dto-id.interface';\r\nimport { BireUnitMeasureDTO } from '../../../../../../shared/types/api-types/bire-unit-measure-dto.interface';\r\n\r\n@Injectable()\r\nexport class DamageService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly taskManagementApi: TaskManagementApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBireDamagesByCriteria(): Observable<BireDamageDTO[]> {\r\n    return super.post<void, BireDamageDTO[]>(this.taskManagementApi.findBireDamagesByCriteria);\r\n  }\r\n\r\n  public findAllBireUnitMeasures(): Observable<BireUnitMeasureDTO[]> {\r\n    return super.post<void, BireUnitMeasureDTO[]>(this.productStructureManagementApi.findAllBireUnitMeasures);\r\n  }\r\n\r\n  public removeBireDamage(bireDamageDTOId: BireDamageDTOId[]): Observable<void> {\r\n    return super.post<BireDamageDTOId[], void>(this.taskManagementApi.removeBireDamage, bireDamageDTOId);\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".damageCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"returnReasonCode\\\"\\r\\n          [(ngModel)]=\\\"bireDamageDTO.damageCode\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".damageDescription\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [rows]=\\\"3\\\"\\r\\n          pInputTextarea\\r\\n          [(ngModel)]=\\\"bireDamageDTO.damageDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          maxlength=\\\"1000\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".unitCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [options]=\\\"unitCodeList\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          [(ngModel)]=\\\"bireDamageDTO.unitCode\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"validate()\\\" [disabled]=\\\"!bireDamageDTO.damageCode\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BireDamageDTO } from '../../../../../../../shared/types/api-output-types/administration-catalog/bire-damage-dto.interface';\r\nimport { BireUnitMeasureDTO } from '../../../../../../../shared/types/api-types/bire-unit-measure-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../shared/types/label-value.interface';\r\nimport { DamageService } from '../damage.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-damage',\r\n  templateUrl: './dialog-damage.component.html'\r\n})\r\nexport class DialogDamageComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public damageList: BireDamageDTO[];\r\n\r\n  @Input()\r\n  public data: BireDamageDTO;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BireDamageDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BireDamageDTO>;\r\n\r\n  public bireDamageDTO: BireDamageDTO;\r\n  public unitCodeList: SelectItem[];\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    public readonly sessionService: SessionService,\r\n    public readonly damageService: DamageService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogDamageComponent');\r\n    this.onValidated = new EventEmitter<BireDamageDTO>();\r\n    this.onUpdate = new EventEmitter<BireDamageDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n\r\n    if (!this.data) {\r\n      this.data = {};\r\n    } else {\r\n      this.bireDamageDTO = { ...this.data };\r\n    }\r\n    this.fillDropDown();\r\n  }\r\n\r\n  private fillDropDown() {\r\n    this.damageService.findAllBireUnitMeasures().subscribe((result) => {\r\n      const labelValue: LabelValue<String>[] = [];\r\n      result.forEach((res: BireUnitMeasureDTO) => {\r\n        labelValue.push({\r\n          // tslint:disable-next-line:no-string-literal\r\n          label: res['label'],\r\n          // tslint:disable-next-line:no-string-literal\r\n          value: res['value']\r\n        });\r\n      });\r\n\r\n      this.unitCodeList = labelValue.sort((a, b) =>\r\n        !!a.label && !!b.label && a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1\r\n      );\r\n    });\r\n  }\r\n\r\n  private isScreenValidated() {\r\n    if (!this.bireDamageDTO.damageCode || this.bireDamageDTO.damageCode.trim().length === 0) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.openMode === ComponentOpenMode.Write) {\r\n        // Update Mode\r\n        this.data = { ...this.bireDamageDTO };\r\n        this.onUpdate.emit(this.data);\r\n        this.closeDialog();\r\n      } else if (this.openMode === ComponentOpenMode.Create) {\r\n        let isFound = false;\r\n        this.damageList.forEach((res) => {\r\n          if (res.damageCode === this.bireDamageDTO.damageCode) {\r\n            isFound = true;\r\n          }\r\n        });\r\n\r\n        if (!isFound) {\r\n          // Create Mode\r\n          this.data = { ...this.bireDamageDTO };\r\n          this.onValidated.emit(this.data);\r\n          this.closeDialog();\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));\r\n        }\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".kpourcentCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"kPourcentCode\\\"\\r\\n          [(ngModel)]=\\\"bireKPourcentDTO.kpourcentCode\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".kpourcentType\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"kPourcentType\\\"\\r\\n          [(ngModel)]=\\\"bireKPourcentDTO.kpourcentType\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!bireKPourcentDTO.kpourcentCode || !bireKPourcentDTO.kpourcentType\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BireKPourcentDTO } from '../../../../../../../shared/types/api-output-types/administration-catalog/bire-k-pourcent-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-k-percent',\r\n  templateUrl: './dialog-k-percent.component.html'\r\n})\r\nexport class DialogKPercentComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public kPercentList: BireKPourcentDTO[];\r\n\r\n  @Input()\r\n  public data: BireKPourcentDTO;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BireKPourcentDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BireKPourcentDTO>;\r\n\r\n  public bireKPourcentDTO: BireKPourcentDTO;\r\n\r\n  public constructor(private readonly messageService: MessageService, public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DialogKPercentComponent');\r\n    this.onValidated = new EventEmitter<BireKPourcentDTO>();\r\n    this.onUpdate = new EventEmitter<BireKPourcentDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.data) {\r\n      this.data = {};\r\n      this.bireKPourcentDTO = {};\r\n    } else {\r\n      this.bireKPourcentDTO = { ...this.data };\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.openMode === ComponentOpenMode.Write) {\r\n        // Update Mode\r\n        this.data = { ...this.bireKPourcentDTO };\r\n        this.onUpdate.emit(this.data);\r\n        this.closeDialog();\r\n      } else if (this.openMode === ComponentOpenMode.Create) {\r\n        let isFound = false;\r\n        this.kPercentList.forEach((res) => {\r\n          if (\r\n            !!res.kpourcentCode &&\r\n            !!this.bireKPourcentDTO &&\r\n            !!this.bireKPourcentDTO.kpourcentCode &&\r\n            res.kpourcentCode.toString() === this.bireKPourcentDTO.kpourcentCode.toString()\r\n          ) {\r\n            isFound = true;\r\n          }\r\n        });\r\n\r\n        if (!isFound) {\r\n          // Create Mode\r\n          this.data = { ...this.bireKPourcentDTO };\r\n          this.onValidated.emit(this.data);\r\n          this.closeDialog();\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));\r\n        }\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  private isScreenValidated() {\r\n    if (\r\n      !this.bireKPourcentDTO.kpourcentCode ||\r\n      !this.bireKPourcentDTO.kpourcentType ||\r\n      (this.bireKPourcentDTO.kpourcentCode.trim().length === 0 ||\r\n        this.bireKPourcentDTO.kpourcentType.trim().length === 0)\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public closeDialog() {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".kPercentList\\\" | translate }} ({{ kpercentTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"kpercentTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              *ngIf=\\\"kpercentTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteKPercent()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"kpercentTableDataSource.dataSelectionCount === 1\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editKPercent()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!kpercentTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addKPercent()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <aw-dialog-k-percent\\r\\n    *ngIf=\\\"showKPercentDialog\\\"\\r\\n    [(display)]=\\\"showKPercentDialog\\\"\\r\\n    [data]=\\\"selectedKPercentDialogData\\\"\\r\\n    [openMode]=\\\"kPercentDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddKPercent($event)\\\"\\r\\n    (onUpdate)=\\\"onUpdateKPercent($event)\\\"\\r\\n    [kPercentList]=\\\"kpercentTableDataSource.dataSrc\\\"\\r\\n  ></aw-dialog-k-percent>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireKPourcentDTO } from '../../../../../../shared/types/api-output-types/administration-catalog/bire-k-pourcent-dto.interface';\r\nimport { BireKPourcentDTOId } from '../../../../../../shared/types/api-types/bire-k-pourcent-dto-id.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { KPercentService } from './k-percent.service';\r\n\r\n@Component({\r\n  selector: 'aw-k-percent',\r\n  templateUrl: './k-percent.component.html'\r\n})\r\nexport class KPercentComponent extends DynamicCatalog implements OnInit {\r\n  public kpercentTableDataSource: TableDataSource<BireKPourcentDTO>;\r\n\r\n  public selectedKPercentDialogData: BireKPourcentDTO;\r\n\r\n  public kPercentDialogOpenMode: ComponentOpenMode;\r\n  public showKPercentDialog: boolean;\r\n\r\n  private bireKPourcentDTOAddedList: BireKPourcentDTO[];\r\n  private bireKPourcentDTOUpdatedList: BireKPourcentDTO[];\r\n\r\n  private selectedKPercentCodeEdit: string;\r\n\r\n  public constructor(\r\n    private readonly kPercentService: KPercentService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.kpercentTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'kpourcentCode',\r\n          translateKey: this.getTranslateKey('kpourcentCode')\r\n        },\r\n        { field: 'kpourcentType', translateKey: this.getTranslateKey('kpourcentType') }\r\n      ],\r\n      data: []\r\n    });\r\n    this.kPercentDialogOpenMode = ComponentOpenMode.Read;\r\n    this.bireKPourcentDTOAddedList = [];\r\n    this.bireKPourcentDTOUpdatedList = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadKPercentTable();\r\n  }\r\n\r\n  /**\r\n   * Load K Percent table\r\n   */\r\n  private loadKPercentTable(isFromRefresh?: boolean) {\r\n    const flag = isFromRefresh ? true : false;\r\n    this.kpercentTableDataSource.setData([]);\r\n    this.kPercentService.findAllBireKPourcents().subscribe((results) => {\r\n      this.kpercentTableDataSource.addData(results);\r\n      if (!flag) {\r\n        if (this.bireKPourcentDTOAddedList) {\r\n          this.bireKPourcentDTOAddedList.forEach((r) => {\r\n            this.kpercentTableDataSource.addData([r]);\r\n          });\r\n        }\r\n\r\n        // TO reenter modified entry in table\r\n        if (this.bireKPourcentDTOUpdatedList) {\r\n          this.kpercentTableDataSource.dataSrc.forEach((res, index) => {\r\n            this.bireKPourcentDTOUpdatedList.forEach((entry) => {\r\n              if (res.kpourcentCode === entry.kpourcentCode) {\r\n                this.kpercentTableDataSource.replaceData(res, entry);\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'KPercentComponent';\r\n  }\r\n\r\n  /**\r\n   * On Add button click\r\n   */\r\n  public addKPercent() {\r\n    this.selectedKPercentDialogData = {};\r\n    this.kPercentDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showKPercentDialog = true;\r\n  }\r\n\r\n  /**\r\n   * On add table row\r\n   */\r\n  public onAddKPercent(ev) {\r\n    this.kpercentTableDataSource.addData([ev]);\r\n    this.bireKPourcentDTOAddedList.push(ev);\r\n  }\r\n\r\n  /**\r\n   * Delete selected Percent\r\n   */\r\n  public deleteKPercent() {\r\n    const partialMessageKey =\r\n      this.kpercentTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedPercents'\r\n        : 'confirmDeleteSelectedPercent';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const bireKPourcentDTOId: BireKPourcentDTOId[] = [];\r\n        this.kpercentTableDataSource.dataSelection.forEach((res) => {\r\n          if (!!res.kpourcentCode) {\r\n            bireKPourcentDTOId.push({ kpourcentCode: res.kpourcentCode });\r\n          }\r\n\r\n          const inAddedList = this.bireKPourcentDTOAddedList.filter((element, index) => {\r\n            return res.kpourcentCode === element.kpourcentCode;\r\n          });\r\n\r\n          // removing from added\r\n          if (inAddedList) {\r\n            let foundAddedIndex = -1;\r\n            this.bireKPourcentDTOAddedList.forEach((entry, index) => {\r\n              if (entry.kpourcentCode === res.kpourcentCode) {\r\n                foundAddedIndex = index;\r\n              }\r\n            });\r\n            this.bireKPourcentDTOAddedList.splice(foundAddedIndex, 1);\r\n          }\r\n\r\n          const inUpdatedList = this.bireKPourcentDTOUpdatedList.filter((element, index) => {\r\n            return res.kpourcentCode === element.kpourcentCode;\r\n          });\r\n\r\n          // removing from updated\r\n          if (inUpdatedList) {\r\n            let foundUpdatedIndex = -1;\r\n            this.bireKPourcentDTOUpdatedList.forEach((entry, index) => {\r\n              if (entry.kpourcentCode === res.kpourcentCode) {\r\n                foundUpdatedIndex = index;\r\n              }\r\n            });\r\n            this.bireKPourcentDTOUpdatedList.splice(foundUpdatedIndex, 1);\r\n          }\r\n\r\n          // Removing from table\r\n          this.kpercentTableDataSource.deleteDataSelection();\r\n        });\r\n\r\n        this.kPercentService.removeBireKPourcent(bireKPourcentDTOId).subscribe((results) => {\r\n          this.kpercentTableDataSource.dataSelection = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edit Selected Percent\r\n   */\r\n  public editKPercent() {\r\n    this.selectedKPercentCodeEdit = '';\r\n    this.selectedKPercentDialogData = this.kpercentTableDataSource.dataSelection[0];\r\n    this.kPercentDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showKPercentDialog = true;\r\n    const selPercentCode = this.kpercentTableDataSource.dataSelection[0].kpourcentCode;\r\n    if (!!selPercentCode) {\r\n      this.selectedKPercentCodeEdit = selPercentCode;\r\n    } else {\r\n      super.throwUnboundLocalError('editKPercent', 'selPercentCode');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On update table row\r\n   */\r\n  public onUpdateKPercent(ev: BireKPourcentDTO) {\r\n    this.kpercentTableDataSource.dataSrc.forEach((res) => {\r\n      if (res.kpourcentCode === this.selectedKPercentCodeEdit) {\r\n        this.kpercentTableDataSource.replaceData(res, ev);\r\n      }\r\n    });\r\n    // Check if new entry is edited\r\n    let isNew = false;\r\n    this.bireKPourcentDTOAddedList.forEach((res, index) => {\r\n      if (res.kpourcentCode === ev.kpourcentCode) {\r\n        isNew = true;\r\n        this.bireKPourcentDTOAddedList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    // Check if edited item is again edited\r\n    if (!isNew) {\r\n      this.bireKPourcentDTOUpdatedList.forEach((res, index) => {\r\n        if (res.kpourcentCode === ev.kpourcentCode) {\r\n          this.bireKPourcentDTOUpdatedList.splice(index, 1);\r\n        }\r\n      });\r\n      this.bireKPourcentDTOUpdatedList.push(ev);\r\n    } else {\r\n      this.bireKPourcentDTOAddedList.push(ev);\r\n    }\r\n    this.kpercentTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**\r\n   * Saving Reason Return Data\r\n   */\r\n  public save() {\r\n    if (this.isSaveValid(this.bireKPourcentDTOAddedList, this.bireKPourcentDTOUpdatedList)) {\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bireKPourcentDTOAddedList: this.bireKPourcentDTOAddedList,\r\n        bireKPourcentDTOUpdatedList: this.bireKPourcentDTOUpdatedList\r\n      };\r\n\r\n      this.kPercentService.saveCatalog(saveCatalogInput).subscribe(() => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n\r\n        // Clearing Added and updated List\r\n        this.bireKPourcentDTOAddedList = [];\r\n        this.bireKPourcentDTOUpdatedList = [];\r\n        this.kpercentTableDataSource.dataSelection = [];\r\n      });\r\n    }\r\n  }\r\n\r\n  private isSaveValid(dtoAdd, dtoUpdate): boolean {\r\n    // if (dtoAdd.length === 0 && dtoUpdate.length === 0) {\r\n    //   return false;\r\n    // }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Refresh the table data\r\n   */\r\n  public refresh() {\r\n    this.kpercentTableDataSource.dataSelection = [];\r\n    this.bireKPourcentDTOAddedList = [];\r\n    this.bireKPourcentDTOUpdatedList = [];\r\n    this.loadKPercentTable(true);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireKPourcentDTO } from '../../../../../../shared/types/api-output-types/administration-catalog/bire-k-pourcent-dto.interface';\r\nimport { BireKPourcentDTOId } from '../../../../../../shared/types/api-types/bire-k-pourcent-dto-id.interface';\r\n\r\n@Injectable()\r\nexport class KPercentService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findAllBireKPourcents(): Observable<BireKPourcentDTO[]> {\r\n    return super.post<void, BireKPourcentDTO[]>(this.productStructureManagementApi.findAllBireKPourcents);\r\n  }\r\n\r\n  public removeBireKPourcent(bireKPourcentDTOId: BireKPourcentDTOId[]): Observable<void> {\r\n    return super.post<BireKPourcentDTOId[], void>(\r\n      this.productStructureManagementApi.removeBireKPourcent,\r\n      bireKPourcentDTOId\r\n    );\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".localisationCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"returnReasonCode\\\"\\r\\n          [(ngModel)]=\\\"bireLocalisationCodeDTO.localisationCode\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!bireLocalisationCodeDTO.localisationCode\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BireLocalisationCodeDTO } from '../../../../../../../shared/types/api-output-types/administration-catalog/bire-localisation-code-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-localisation',\r\n  templateUrl: './dialog-localisation.component.html'\r\n})\r\nexport class DialogLocalisationComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public onValidated: EventEmitter<BireLocalisationCodeDTO>;\r\n\r\n  @Input()\r\n  public localisationList: BireLocalisationCodeDTO[];\r\n\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  public bireLocalisationCodeDTO: BireLocalisationCodeDTO;\r\n\r\n  public constructor(private readonly messageService: MessageService, public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DialogLocalisationComponent');\r\n    this.onValidated = new EventEmitter<BireLocalisationCodeDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.bireLocalisationCodeDTO = {};\r\n    this.updateOpenMode(this.openMode);\r\n  }\r\n\r\n  public validate() {\r\n    if (this.isScreenValidated()) {\r\n      let isFound = false;\r\n      this.localisationList.forEach((res) => {\r\n        if (res.localisationCode === this.bireLocalisationCodeDTO.localisationCode) {\r\n          isFound = true;\r\n        }\r\n      });\r\n\r\n      if (isFound) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));\r\n      } else {\r\n        this.onValidated.emit(this.bireLocalisationCodeDTO);\r\n        this.closeDialog();\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  private isScreenValidated() {\r\n    if (\r\n      !this.bireLocalisationCodeDTO.localisationCode ||\r\n      this.bireLocalisationCodeDTO.localisationCode.trim().length === 0\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public closeDialog() {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".localisationList\\\" | translate }} ({{ localisationTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"localisationTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              *ngIf=\\\"localisationTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteSelectedLocalisation()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!localisationTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addLocalisation()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <aw-dialog-localisation\\r\\n    *ngIf=\\\"showLocalisationDialog\\\"\\r\\n    [(display)]=\\\"showLocalisationDialog\\\"\\r\\n    [openMode]=\\\"localisationDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddReasonReturn($event)\\\"\\r\\n    [localisationList]=\\\"localisationTableDataSource.dataSrc\\\"\\r\\n  ></aw-dialog-localisation>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireLocalisationCodeDTO } from '../../../../../../shared/types/api-output-types/administration-catalog/bire-localisation-code-dto.interface';\r\nimport { BireLocalisationCodeDTOId } from '../../../../../../shared/types/api-types/bire-localisation-code-dto-id.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { LocalisationService } from './localisation.service';\r\n\r\n@Component({\r\n  selector: 'aw-localisation',\r\n  templateUrl: './localisation.component.html'\r\n})\r\nexport class LocalisationComponent extends DynamicCatalog implements OnInit {\r\n  public localisationTableDataSource: TableDataSource<BireLocalisationCodeDTO>;\r\n\r\n  public localisationDialogOpenMode: ComponentOpenMode;\r\n  public showLocalisationDialog: boolean;\r\n\r\n  private bireLocalisationCodeAddedList: BireLocalisationCodeDTO[];\r\n\r\n  public constructor(\r\n    private readonly localisationService: LocalisationService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n    this.bireLocalisationCodeAddedList = [];\r\n\r\n    this.localisationTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'localisationCode',\r\n          translateKey: this.getTranslateKey('localisationCode')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadLocalisationTableData();\r\n  }\r\n\r\n  /**\r\n   * Load table data on initial\r\n   */\r\n  private loadLocalisationTableData(isfromRefresh?: boolean) {\r\n    const flag = isfromRefresh ? true : false;\r\n    this.localisationTableDataSource.setData([]);\r\n    this.localisationService.findBireLocalisationCodesByCriteria().subscribe((results) => {\r\n      this.localisationTableDataSource.addData(results.list);\r\n      if (!flag) {\r\n        if (this.bireLocalisationCodeAddedList) {\r\n          this.bireLocalisationCodeAddedList.forEach((entry) => {\r\n            this.localisationTableDataSource.addData([entry]);\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'LocalisationComponent';\r\n  }\r\n\r\n  /**\r\n   * On Add button click\r\n   */\r\n  public addLocalisation() {\r\n    this.localisationDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showLocalisationDialog = true;\r\n  }\r\n\r\n  /**\r\n   * On add table row\r\n   */\r\n  public onAddReasonReturn(ev) {\r\n    this.localisationTableDataSource.addData([ev]);\r\n    this.bireLocalisationCodeAddedList.push(ev);\r\n  }\r\n\r\n  /**\r\n   * Delete selected row\r\n   */\r\n  public deleteSelectedLocalisation() {\r\n    const partialMessageKey =\r\n      this.localisationTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedLocalisations'\r\n        : 'confirmDeleteSelectedLocalisation';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const bireLocalisationCodeDTOId: BireLocalisationCodeDTOId[] = [];\r\n        this.localisationTableDataSource.dataSelection.forEach((res) => {\r\n          if (!!res.localisationCode) {\r\n            bireLocalisationCodeDTOId.push({ localisationCode: res.localisationCode });\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSelectedLocalisation', 'res.localisationCode');\r\n          }\r\n\r\n          const inAddedList = this.bireLocalisationCodeAddedList.filter((element, index) => {\r\n            return res.localisationCode === element.localisationCode;\r\n          });\r\n\r\n          // removing from added\r\n          if (inAddedList) {\r\n            let foundAddedIndex = -1;\r\n            this.bireLocalisationCodeAddedList.forEach((entry, index) => {\r\n              if (entry.localisationCode === res.localisationCode) {\r\n                foundAddedIndex = index;\r\n              }\r\n            });\r\n            this.bireLocalisationCodeAddedList.splice(foundAddedIndex, 1);\r\n          }\r\n\r\n          // Removing from table\r\n          this.localisationTableDataSource.deleteDataSelection();\r\n        });\r\n\r\n        this.localisationService.removeBireLocalisationCode(bireLocalisationCodeDTOId).subscribe((results) => {\r\n          this.localisationTableDataSource.dataSelection = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Save Functionality\r\n   */\r\n  public save() {\r\n    if (this.isSaveValid(this.bireLocalisationCodeAddedList)) {\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bireLocalisationCodeAddedList: this.bireLocalisationCodeAddedList\r\n      };\r\n\r\n      this.localisationService.saveCatalog(saveCatalogInput).subscribe(() => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveLocalisation'));\r\n\r\n        // Clearing Added and updated List\r\n        this.bireLocalisationCodeAddedList = [];\r\n      });\r\n    }\r\n  }\r\n\r\n  private isSaveValid(dtoAdd): boolean {\r\n    // if (dtoAdd.length === 0) {\r\n    //   return false;\r\n    // }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Refresh Screen\r\n   */\r\n  public refresh() {\r\n    this.bireLocalisationCodeAddedList = [];\r\n    this.loadLocalisationTableData(true);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { TaskManagementApi } from '../../../../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireLocalisationCodeDTO } from '../../../../../../shared/types/api-output-types/administration-catalog/bire-localisation-code-dto.interface';\r\nimport { BireLocalisationCodeDTOId } from '../../../../../../shared/types/api-types/bire-localisation-code-dto-id.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable()\r\nexport class LocalisationService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly taskManagementApi: TaskManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBireLocalisationCodesByCriteria(): Observable<SearchResultsDTO<BireLocalisationCodeDTO>> {\r\n    return super.post<void, SearchResultsDTO<BireLocalisationCodeDTO>>(\r\n      this.taskManagementApi.findBireLocalisationCodesByCriteria\r\n    );\r\n  }\r\n\r\n  public removeBireLocalisationCode(bireLocalisationCodeDTOId: BireLocalisationCodeDTOId[]): Observable<void> {\r\n    return super.post<BireLocalisationCodeDTOId[], void>(\r\n      this.taskManagementApi.removeBireLocalisationCode,\r\n      bireLocalisationCodeDTOId\r\n    );\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".environmentCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"environmentCode\\\"\\r\\n          [(ngModel)]=\\\"bireMaintenanceEnvironmentDTO.environmentCode\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".environmentType\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"environmentType\\\"\\r\\n          [(ngModel)]=\\\"bireMaintenanceEnvironmentDTO.environmentType\\\"\\r\\n          maxlength=\\\"255\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!bireMaintenanceEnvironmentDTO.environmentCode\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BireMaintenanceEnvironmentDTO } from '../../../../../../../shared/types/api-output-types/administration-catalog/bire-maintenance-environment-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-maintenance-type',\r\n  templateUrl: './dialog-maintenance-type.component.html'\r\n})\r\nexport class DialogMaintenanceTypeComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public maintenanceList: BireMaintenanceEnvironmentDTO[];\r\n\r\n  @Input()\r\n  public data: BireMaintenanceEnvironmentDTO;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BireMaintenanceEnvironmentDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BireMaintenanceEnvironmentDTO>;\r\n\r\n  public bireMaintenanceEnvironmentDTO: BireMaintenanceEnvironmentDTO;\r\n\r\n  public constructor(private readonly messageService: MessageService, public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DialogMaintenanceTypeComponent');\r\n    this.onValidated = new EventEmitter<BireMaintenanceEnvironmentDTO>();\r\n    this.onUpdate = new EventEmitter<BireMaintenanceEnvironmentDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.data) {\r\n      this.data = {};\r\n      this.bireMaintenanceEnvironmentDTO = {};\r\n    } else {\r\n      this.bireMaintenanceEnvironmentDTO = { ...this.data };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * validate screen and emit data\r\n   */\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.openMode === ComponentOpenMode.Write) {\r\n        // Update Mode\r\n        this.data = { ...this.bireMaintenanceEnvironmentDTO };\r\n        this.onUpdate.emit(this.data);\r\n        this.closeDialog();\r\n      } else if (this.openMode === ComponentOpenMode.Create) {\r\n        // CHeck if entry already added in table\r\n        let isFound = false;\r\n        this.maintenanceList.forEach((res) => {\r\n          if (res.environmentCode === this.bireMaintenanceEnvironmentDTO.environmentCode) {\r\n            isFound = true;\r\n          }\r\n        });\r\n\r\n        if (!isFound) {\r\n          // Create Mode\r\n          this.data = { ...this.bireMaintenanceEnvironmentDTO };\r\n          this.onValidated.emit(this.data);\r\n          this.closeDialog();\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));\r\n        }\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Is fields filled\r\n   */\r\n  private isScreenValidated() {\r\n    if (\r\n      !this.bireMaintenanceEnvironmentDTO.environmentCode ||\r\n      this.bireMaintenanceEnvironmentDTO.environmentCode.trim().length === 0\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close dialog event\r\n   */\r\n  public closeDialog() {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".maintenanceList\\\" | translate }} ({{ maintenanceTypeTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"maintenanceTypeTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              *ngIf=\\\"maintenanceTypeTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteMaintenance()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"maintenanceTypeTableDataSource.dataSelectionCount === 1\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editMaintenance()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!maintenanceTypeTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addMaintenance()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-maintenance-type\\r\\n    *ngIf=\\\"showMaintenanceTypeDialog\\\"\\r\\n    [(display)]=\\\"showMaintenanceTypeDialog\\\"\\r\\n    [data]=\\\"selectedMaintenanceTypeTableDialogData\\\"\\r\\n    [openMode]=\\\"maintenanceTypeDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddMaintenance($event)\\\"\\r\\n    (onUpdate)=\\\"onUpdateMaintenance($event)\\\"\\r\\n    [maintenanceList]=\\\"maintenanceTypeTableDataSource.dataSrc\\\"\\r\\n  ></aw-dialog-maintenance-type>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireMaintenanceEnvironmentDTO } from '../../../../../../shared/types/api-output-types/administration-catalog/bire-maintenance-environment-dto.interface';\r\nimport { BireMaintenanceEnvironmentDTOId } from '../../../../../../shared/types/api-types/bire-maintenance-environment-dto-id.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { MaintenanceTypeService } from './maintenance-type.service';\r\n\r\n@Component({\r\n  selector: 'aw-maintenance-type',\r\n  templateUrl: './maintenance-type.component.html'\r\n})\r\nexport class MaintenanceTypeComponent extends DynamicCatalog implements OnInit {\r\n  public maintenanceTypeTableDataSource: TableDataSource<BireMaintenanceEnvironmentDTO>;\r\n\r\n  public selectedMaintenanceTypeTableDialogData: BireMaintenanceEnvironmentDTO;\r\n\r\n  public maintenanceTypeDialogOpenMode: ComponentOpenMode;\r\n  public showMaintenanceTypeDialog: boolean;\r\n\r\n  private bireMaintenanceEnvironmentDTOAddedList: BireMaintenanceEnvironmentDTO[];\r\n  private bireMaintenanceEnvironmentDTOUpdatedList: BireMaintenanceEnvironmentDTO[];\r\n\r\n  private selectedMaintenanceCodeEdit: string | undefined;\r\n\r\n  public constructor(\r\n    private readonly maintenanceTypeService: MaintenanceTypeService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.maintenanceTypeDialogOpenMode = ComponentOpenMode.Read;\r\n    this.maintenanceTypeTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'environmentCode',\r\n          translateKey: this.getTranslateKey('environmentCode')\r\n        },\r\n        {\r\n          field: 'environmentType',\r\n          translateKey: this.getTranslateKey('environmentType')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n    this.showMaintenanceTypeDialog = false;\r\n    this.bireMaintenanceEnvironmentDTOUpdatedList = [];\r\n    this.bireMaintenanceEnvironmentDTOAddedList = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadMaintenanceTypeTableData();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'MaintenanceTypeComponent';\r\n  }\r\n\r\n  /**\r\n   * Load Maintenance Type table\r\n   */\r\n  private loadMaintenanceTypeTableData(isfromRefresh?: boolean) {\r\n    const flag = isfromRefresh ? true : false;\r\n    this.maintenanceTypeTableDataSource.setData([]);\r\n    this.maintenanceTypeService.findAllBireMaintenanceEnvironments().subscribe((results) => {\r\n      this.maintenanceTypeTableDataSource.addData(results.list);\r\n      if (!flag) {\r\n        if (this.bireMaintenanceEnvironmentDTOAddedList) {\r\n          this.bireMaintenanceEnvironmentDTOAddedList.forEach((entry) => {\r\n            this.maintenanceTypeTableDataSource.addData([entry]);\r\n          });\r\n        }\r\n\r\n        // TO reenter modified entry in table\r\n        if (this.bireMaintenanceEnvironmentDTOUpdatedList) {\r\n          this.maintenanceTypeTableDataSource.dataSrc.forEach((res) => {\r\n            this.bireMaintenanceEnvironmentDTOUpdatedList.forEach((entry) => {\r\n              if (res.environmentCode === entry.environmentCode) {\r\n                this.maintenanceTypeTableDataSource.replaceData(res, entry);\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On Add button click\r\n   */\r\n  public addMaintenance() {\r\n    this.selectedMaintenanceTypeTableDialogData = {};\r\n    this.maintenanceTypeDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showMaintenanceTypeDialog = true;\r\n  }\r\n\r\n  /**\r\n   * On add table row\r\n   */\r\n  public onAddMaintenance(ev) {\r\n    this.maintenanceTypeTableDataSource.addData([ev]);\r\n    this.bireMaintenanceEnvironmentDTOAddedList.push(ev);\r\n  }\r\n\r\n  /**\r\n   * Delete selected Maintenance\r\n   */\r\n  public deleteMaintenance() {\r\n    const partialMessageKey =\r\n      this.maintenanceTypeTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedMaintenances'\r\n        : 'confirmDeleteSelectedMaintenance';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const bireMaintenanceEnvironmentDTOId: BireMaintenanceEnvironmentDTOId[] = [];\r\n        this.maintenanceTypeTableDataSource.dataSelection.forEach((res) => {\r\n          if (!!res.environmentCode) {\r\n            bireMaintenanceEnvironmentDTOId.push({ environmentCode: res.environmentCode });\r\n          } else {\r\n            super.throwUnboundLocalError('deleteMaintenance', 'res.environmentCode');\r\n          }\r\n        });\r\n\r\n        this.maintenanceTypeService\r\n          .removeBireMaintenanceEnvironment(bireMaintenanceEnvironmentDTOId)\r\n          .subscribe((_results) => {\r\n            this.refresh();\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edit Selected Maintenance\r\n   */\r\n  public editMaintenance() {\r\n    this.selectedMaintenanceCodeEdit = undefined;\r\n    this.selectedMaintenanceTypeTableDialogData = this.maintenanceTypeTableDataSource.dataSelection[0];\r\n    this.maintenanceTypeDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showMaintenanceTypeDialog = true;\r\n    this.selectedMaintenanceCodeEdit = this.maintenanceTypeTableDataSource.dataSelection[0].environmentCode;\r\n  }\r\n\r\n  /**\r\n   * On update table row\r\n   */\r\n  public onUpdateMaintenance(ev: BireMaintenanceEnvironmentDTO) {\r\n    this.maintenanceTypeTableDataSource.dataSrc.forEach((res, index) => {\r\n      if (res.environmentCode === this.selectedMaintenanceCodeEdit) {\r\n        this.maintenanceTypeTableDataSource.replaceData(res, ev);\r\n      }\r\n    });\r\n    this.maintenanceTypeTableDataSource.setData(this.maintenanceTypeTableDataSource.dataSrc);\r\n    // Check if new entry is edited\r\n    let isNew = false;\r\n    this.bireMaintenanceEnvironmentDTOAddedList.forEach((res, index) => {\r\n      if (res.environmentCode === ev.environmentCode) {\r\n        isNew = true;\r\n        this.bireMaintenanceEnvironmentDTOAddedList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    // Check if edited item is again edited\r\n    if (!isNew) {\r\n      this.bireMaintenanceEnvironmentDTOUpdatedList.forEach((res, index) => {\r\n        if (res.environmentCode === ev.environmentCode) {\r\n          this.bireMaintenanceEnvironmentDTOUpdatedList.splice(index, 1);\r\n        }\r\n      });\r\n      this.bireMaintenanceEnvironmentDTOUpdatedList.push(ev);\r\n    } else {\r\n      this.bireMaintenanceEnvironmentDTOAddedList.push(ev);\r\n    }\r\n    this.maintenanceTypeTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**\r\n   * Saving Maintenance Data\r\n   */\r\n  public save() {\r\n    if (this.isSaveValid(this.bireMaintenanceEnvironmentDTOAddedList, this.bireMaintenanceEnvironmentDTOUpdatedList)) {\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bireMaintenanceEnvironmentDTOAddedList: this.bireMaintenanceEnvironmentDTOAddedList,\r\n        bireMaintenanceEnvironmentDTOUpdatedList: this.bireMaintenanceEnvironmentDTOUpdatedList\r\n      };\r\n\r\n      this.maintenanceTypeService.saveCatalog(saveCatalogInput).subscribe(\r\n        () => {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n          this.refresh();\r\n        },\r\n        () => {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('errorOnSaveMaintenanceType'));\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private isSaveValid(dtoAdd, dtoUpdate): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Refresh the table data\r\n   */\r\n  public refresh() {\r\n    this.maintenanceTypeTableDataSource.dataSelection = [];\r\n    this.bireMaintenanceEnvironmentDTOAddedList = [];\r\n    this.bireMaintenanceEnvironmentDTOUpdatedList = [];\r\n    this.loadMaintenanceTypeTableData(true);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireMaintenanceEnvironmentDTO } from '../../../../../../shared/types/api-output-types/administration-catalog/bire-maintenance-environment-dto.interface';\r\nimport { BireMaintenanceEnvironmentDTOId } from '../../../../../../shared/types/api-types/bire-maintenance-environment-dto-id.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable()\r\nexport class MaintenanceTypeService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findAllBireMaintenanceEnvironments(): Observable<SearchResultsDTO<BireMaintenanceEnvironmentDTO>> {\r\n    return super.post<void, SearchResultsDTO<BireMaintenanceEnvironmentDTO>>(\r\n      this.productStructureManagementApi.findAllBireMaintenanceEnvironments\r\n    );\r\n  }\r\n\r\n  public removeBireMaintenanceEnvironment(\r\n    bireMaintenanceEnvironmentDTOId: BireMaintenanceEnvironmentDTOId[]\r\n  ): Observable<void> {\r\n    return super.post<BireMaintenanceEnvironmentDTOId[], void>(\r\n      this.productStructureManagementApi.removeBireMaintenanceEnvironment,\r\n      bireMaintenanceEnvironmentDTOId\r\n    );\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".rangeCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"rangeCode\\\"\\r\\n          [(ngModel)]=\\\"bireRangeDTO.rangeCode\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".rangeDescription\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [rows]=\\\"3\\\"\\r\\n          pInputTextarea\\r\\n          maxlength=\\\"1000\\\"\\r\\n          [(ngModel)]=\\\"bireRangeDTO.rangeDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"validate()\\\" [disabled]=\\\"!bireRangeDTO.rangeCode\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BireRangeDTO } from '../../../../../../../shared/types/api-types/bire-range-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-range',\r\n  templateUrl: './dialog-range.component.html'\r\n})\r\nexport class DialogRangeComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public rangeList: BireRangeDTO[];\r\n\r\n  @Input()\r\n  public data: BireRangeDTO;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BireRangeDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BireRangeDTO>;\r\n\r\n  public bireRangeDTO: BireRangeDTO;\r\n\r\n  public constructor(private readonly messageService: MessageService, public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DialogRangeComponent');\r\n    this.onValidated = new EventEmitter<BireRangeDTO>();\r\n    this.onUpdate = new EventEmitter<BireRangeDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.data) {\r\n      this.data = {};\r\n    } else {\r\n      this.bireRangeDTO = { ...this.data };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Valdidate and emit data\r\n   */\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.openMode === ComponentOpenMode.Write) {\r\n        // Update Mode\r\n        this.data = { ...this.bireRangeDTO };\r\n        this.onUpdate.emit(this.data);\r\n        this.closeDialog();\r\n      } else if (this.openMode === ComponentOpenMode.Create) {\r\n        // If element already exist in table\r\n        let isFound = false;\r\n        this.rangeList.forEach((res) => {\r\n          if (res.rangeCode === this.bireRangeDTO.rangeCode) {\r\n            isFound = true;\r\n          }\r\n        });\r\n\r\n        if (!isFound) {\r\n          // Create Mode\r\n          this.data = { ...this.bireRangeDTO };\r\n          this.onValidated.emit(this.data);\r\n          this.closeDialog();\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));\r\n        }\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Is screen valid\r\n   */\r\n  private isScreenValidated() {\r\n    if (!this.bireRangeDTO.rangeCode || this.bireRangeDTO.rangeCode.trim().length === 0) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close dialog event\r\n   */\r\n  public closeDialog() {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".rangeList\\\" | translate }} ({{ rangeTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"rangeTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              *ngIf=\\\"rangeTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteSelectedRange()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"rangeTableDataSource.dataSelectionCount === 1\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editSelectedRange()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button *ngIf=\\\"!rangeTableDataSource.hasDataSelection\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"addRange()\\\">\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-range\\r\\n    *ngIf=\\\"showRangeDialog\\\"\\r\\n    [(display)]=\\\"showRangeDialog\\\"\\r\\n    [data]=\\\"selectedRangeTableDialogData\\\"\\r\\n    [openMode]=\\\"rangeDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddRange($event)\\\"\\r\\n    (onUpdate)=\\\"updateRange($event)\\\"\\r\\n    [rangeList]=\\\"rangeTableDataSource.dataSrc\\\"\\r\\n  ></aw-dialog-range>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireRangeDTOId } from '../../../../../../shared/types/api-types/bire-range-dto-id.interface';\r\nimport { BireRangeDTO } from '../../../../../../shared/types/api-types/bire-range-dto.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { RangeService } from './range.service';\r\n\r\n@Component({\r\n  selector: 'aw-range',\r\n  templateUrl: './range.component.html'\r\n})\r\nexport class RangeComponent extends DynamicCatalog implements OnInit {\r\n  public rangeTableDataSource: TableDataSource<BireRangeDTO>;\r\n\r\n  public selectedRangeTableDialogData: BireRangeDTO;\r\n\r\n  public rangeDialogOpenMode: ComponentOpenMode;\r\n  public showRangeDialog: boolean;\r\n\r\n  private bireRangeAddedList: BireRangeDTO[];\r\n  private bireRangeUpdatedList: BireRangeDTO[];\r\n\r\n  private selectedRangeCodeToEdit: string;\r\n\r\n  public constructor(\r\n    private readonly rangeService: RangeService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n    this.rangeDialogOpenMode = ComponentOpenMode.Read;\r\n    this.rangeTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'rangeCode', translateKey: this.getTranslateKey('rangeCode') },\r\n        {\r\n          field: 'rangeDescription',\r\n          translateKey: this.getTranslateKey('rangeDescription')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n    this.showRangeDialog = false;\r\n    this.bireRangeUpdatedList = [];\r\n    this.bireRangeAddedList = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadrangeTableata();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'RangeComponent';\r\n  }\r\n  /**\r\n   * Loading Range table data\r\n   */\r\n  private loadrangeTableata(isfromRefresh?: boolean) {\r\n    const flag = isfromRefresh ? true : false;\r\n    this.rangeTableDataSource.setData([]);\r\n    this.rangeService.findAllBireRanges().subscribe((results) => {\r\n      this.rangeTableDataSource.addData(results.list);\r\n\r\n      if (!flag) {\r\n        if (this.bireRangeAddedList) {\r\n          this.bireRangeAddedList.forEach((entry) => {\r\n            this.rangeTableDataSource.addData([entry]);\r\n          });\r\n        }\r\n\r\n        // TO reenter modified entry in table\r\n        if (this.bireRangeUpdatedList) {\r\n          this.rangeTableDataSource.dataSrc.forEach((res) => {\r\n            this.bireRangeUpdatedList.forEach((entry) => {\r\n              if (res.rangeCode === entry.rangeCode) {\r\n                this.rangeTableDataSource.replaceData(res, entry);\r\n              }\r\n            });\r\n          });\r\n          this.rangeTableDataSource.setData(this.rangeTableDataSource.dataSrc);\r\n          this.rangeTableDataSource.update();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On Add button click\r\n   */\r\n  public addRange() {\r\n    this.selectedRangeTableDialogData = {};\r\n    this.rangeDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showRangeDialog = true;\r\n  }\r\n\r\n  /**\r\n   * On add table row\r\n   */\r\n  public onAddRange(ev) {\r\n    this.rangeTableDataSource.addData([ev]);\r\n    this.bireRangeAddedList.push(ev);\r\n  }\r\n\r\n  /**\r\n   * Delete selected Range\r\n   */\r\n  public deleteSelectedRange() {\r\n    const partialMessageKey =\r\n      this.rangeTableDataSource.dataSelectionCount > 1 ? 'confirmDeleteSelectedRanges' : 'confirmDeleteSelectedRange';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const bireRangeDTOId: BireRangeDTOId[] = [];\r\n        this.rangeTableDataSource.dataSelection.forEach((res) => {\r\n          if (!!res.rangeCode) {\r\n            bireRangeDTOId.push({ rangeCode: res.rangeCode });\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSelectedRange', 'res.rangeCode');\r\n          }\r\n\r\n          const inAddedList = this.bireRangeAddedList.filter((element, index) => {\r\n            return res.rangeCode === element.rangeCode;\r\n          });\r\n\r\n          // removing from added\r\n          if (inAddedList) {\r\n            let foundAddedIndex = -1;\r\n            this.bireRangeAddedList.forEach((entry, index) => {\r\n              if (entry.rangeCode === res.rangeCode) {\r\n                foundAddedIndex = index;\r\n              }\r\n            });\r\n            this.bireRangeAddedList.splice(foundAddedIndex, 1);\r\n          }\r\n\r\n          const inUpdatedList = this.bireRangeUpdatedList.filter((element, index) => {\r\n            return res.rangeCode === element.rangeCode;\r\n          });\r\n\r\n          // removing from updated\r\n          if (inUpdatedList) {\r\n            let foundUpdatedIndex = -1;\r\n            this.bireRangeUpdatedList.forEach((entry, index) => {\r\n              if (entry.rangeCode === res.rangeCode) {\r\n                foundUpdatedIndex = index;\r\n              }\r\n            });\r\n            this.bireRangeUpdatedList.splice(foundUpdatedIndex, 1);\r\n          }\r\n\r\n          // Removing from table\r\n          this.rangeTableDataSource.deleteDataSelection();\r\n        });\r\n\r\n        this.rangeService.removeBireRange(bireRangeDTOId).subscribe((results) => {\r\n          this.rangeTableDataSource.dataSelection = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edit Selected Range\r\n   */\r\n  public editSelectedRange() {\r\n    this.selectedRangeCodeToEdit = '';\r\n    this.selectedRangeTableDialogData = this.rangeTableDataSource.dataSelection[0];\r\n    this.rangeDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showRangeDialog = true;\r\n    const selRangeCode = this.rangeTableDataSource.dataSelection[0].rangeCode;\r\n    if (!!selRangeCode) {\r\n      this.selectedRangeCodeToEdit = selRangeCode;\r\n    } else {\r\n      super.throwUnboundLocalError('editSelectedRange', 'selRangeCode');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On update table row\r\n   */\r\n  public updateRange(ev: BireRangeDTO) {\r\n    this.rangeTableDataSource.dataSrc.forEach((res, index) => {\r\n      if (res.rangeCode === this.selectedRangeCodeToEdit) {\r\n        this.rangeTableDataSource.replaceData(res, ev);\r\n      }\r\n    });\r\n    let isNew = false;\r\n    this.bireRangeAddedList.forEach((res, index) => {\r\n      if (res.rangeCode === ev.rangeCode) {\r\n        isNew = true;\r\n        this.bireRangeAddedList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    if (!isNew) {\r\n      this.bireRangeUpdatedList.forEach((res, index) => {\r\n        if (res.rangeCode === ev.rangeCode) {\r\n          this.bireRangeUpdatedList.splice(index, 1);\r\n        }\r\n      });\r\n      this.bireRangeUpdatedList.push(ev);\r\n    } else {\r\n      this.bireRangeAddedList.push(ev);\r\n    }\r\n    this.rangeTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**\r\n   * Saving Range Data\r\n   */\r\n  public save() {\r\n    if (this.isSaveValid(this.bireRangeAddedList, this.bireRangeUpdatedList)) {\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bireRangeAddedList: this.bireRangeAddedList,\r\n        bireRangeUpdatedList: this.bireRangeUpdatedList\r\n      };\r\n\r\n      this.rangeService.saveCatalog(saveCatalogInput).subscribe(() => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n\r\n        // Clearing Added and updated List\r\n        this.bireRangeAddedList = [];\r\n        this.bireRangeUpdatedList = [];\r\n      });\r\n    }\r\n  }\r\n\r\n  private isSaveValid(dtoAdd, dtoUpdate): boolean {\r\n    // if (dtoAdd.length === 0 && dtoUpdate.length === 0) {\r\n    //   return false;\r\n    // }\r\n\r\n    return true;\r\n  }\r\n\r\n  public refresh() {\r\n    this.rangeTableDataSource.dataSelection = [];\r\n    this.bireRangeAddedList = [];\r\n    this.bireRangeUpdatedList = [];\r\n    this.loadrangeTableata(true);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { TaskManagementApi } from '../../../../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireRangeDTOId } from '../../../../../../shared/types/api-types/bire-range-dto-id.interface';\r\nimport { BireRangeDTO } from '../../../../../../shared/types/api-types/bire-range-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable()\r\nexport class RangeService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly taskManagementApi: TaskManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findAllBireRanges(): Observable<SearchResultsDTO<BireRangeDTO>> {\r\n    return super.post<void, SearchResultsDTO<BireRangeDTO>>(this.taskManagementApi.findAllBireRanges);\r\n  }\r\n\r\n  public removeBireRange(bireRangeDTOId: BireRangeDTOId[]): Observable<void> {\r\n    return super.post<BireRangeDTOId[], void>(this.taskManagementApi.removeBireRange, bireRangeDTOId);\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".counterCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"returnReasonCode\\\"\\r\\n          [(ngModel)]=\\\"bireReturnReasonDTO.counterCode\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".unitCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [options]=\\\"unitCodeList\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          [(ngModel)]=\\\"bireReturnReasonDTO.unitCode\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".mrCategory\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [options]=\\\"mrCategoryList\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          [(ngModel)]=\\\"bireReturnReasonDTO.mrCategory\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".isCounter\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-checkbox\\r\\n          binary=\\\"true\\\"\\r\\n          class=\\\"aw-checkbox general-type-checkbox\\\"\\r\\n          [(ngModel)]=\\\"bireReturnReasonDTO.isCounter\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".propagationAllowed\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-checkbox\\r\\n          binary=\\\"true\\\"\\r\\n          class=\\\"aw-checkbox general-type-checkbox\\\"\\r\\n          [(ngModel)]=\\\"bireReturnReasonDTO.propagationAllowed\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".counterRemarks\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [rows]=\\\"3\\\"\\r\\n          pInputTextarea\\r\\n          [(ngModel)]=\\\"bireReturnReasonDTO.counterRemarks\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          maxlength=\\\"300\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".minRemainPercent\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          #minRemainPercent=\\\"ngModel\\\"\\r\\n          type=\\\"number\\\"\\r\\n          [pKeyFilter]=\\\"inputValidationService.validatorOfInteger()\\\"\\r\\n          [pValidateOnly]=\\\"true\\\"\\r\\n          name=\\\"returnReasonCode\\\"\\r\\n          [(ngModel)]=\\\"bireReturnReasonDTO.minRemainPercent\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [max]=\\\"2147483648\\\"\\r\\n          [min]=\\\"-2147483648\\\"\\r\\n          maxlength=\\\"10\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          required\\r\\n          (keypress)=\\\"maxLengthCheck($event, bireReturnReasonDTO.minRemainPercent)\\\"\\r\\n        />\\r\\n        <p-message\\r\\n          *ngIf=\\\"minRemainPercent.invalid && (minRemainPercent.dirty || minRemainPercent.touched)\\\"\\r\\n          severity=\\\"error\\\"\\r\\n          [text]=\\\"inputValidationService.formatOfInteger()\\\"\\r\\n        ></p-message>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!bireReturnReasonDTO.counterCode\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { InputValidationService } from '../../../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BireMeasureReferenceDTO } from '../../../../../../../shared/types/api-types/bire-measure-reference-dto.interface';\r\nimport { BireUnitMeasureDTO } from '../../../../../../../shared/types/api-types/bire-unit-measure-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../shared/types/label-value.interface';\r\nimport { SelectItemUtils } from '../../../../../../../shared/utils/select-item-utils';\r\nimport { ReferenceMeasurementService } from '../reference-measurement.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-reference-measurement',\r\n  templateUrl: './dialog-reference-measurement.component.html'\r\n})\r\nexport class DialogReferenceMeasurementComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public refMeasurementList: BireMeasureReferenceDTO[];\r\n\r\n  @Input()\r\n  public data: BireMeasureReferenceDTO;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BireMeasureReferenceDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BireMeasureReferenceDTO>;\r\n\r\n  public unitCodeList: SelectItem[];\r\n  public mrCategoryList: SelectItem[];\r\n  public bireReturnReasonDTO: BireMeasureReferenceDTO;\r\n\r\n  public constructor(\r\n    public inputValidationService: InputValidationService,\r\n    private readonly messageService: MessageService,\r\n    public readonly sessionService: SessionService,\r\n    private readonly referenceMeasurementService: ReferenceMeasurementService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogReferenceMeasurementComponent');\r\n    this.onValidated = new EventEmitter<BireMeasureReferenceDTO>();\r\n    this.onUpdate = new EventEmitter<BireMeasureReferenceDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    this.fillDropDown();\r\n    if (this.isEmpty(this.data)) {\r\n      this.data = {};\r\n      this.bireReturnReasonDTO = {};\r\n      this.bireReturnReasonDTO.isCounter = true;\r\n      this.bireReturnReasonDTO.minRemainPercent = 0;\r\n    } else {\r\n      this.bireReturnReasonDTO = { ...this.data };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * CHeck if object is null or not\r\n   */\r\n  private isEmpty(obj) {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n\r\n  private fillDropDown() {\r\n    // Filling Unit code list\r\n    this.referenceMeasurementService.findAllBireUnitMeasures().subscribe((result) => {\r\n      const labelValue: LabelValue<String>[] = [];\r\n      result.forEach((res: BireUnitMeasureDTO) => {\r\n        labelValue.push({\r\n          // tslint:disable-next-line:no-string-literal\r\n          label: res['label'],\r\n          // tslint:disable-next-line:no-string-literal\r\n          value: res['value']\r\n        });\r\n      });\r\n      // labelValue.unshift({ label: '', value: undefined });\r\n      this.unitCodeList = labelValue;\r\n    });\r\n\r\n    // Filling Mr Category List\r\n    this.propertiesService.getValue('getRefMeasureCategoryMap').subscribe((results) => {\r\n      this.mrCategoryList = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n\r\n      this.mrCategoryList.unshift({ label: '', value: undefined });\r\n    });\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      const min = -2147483648;\r\n      const max = 2147483648;\r\n      if (this.bireReturnReasonDTO.minRemainPercent && typeof this.bireReturnReasonDTO.minRemainPercent !== 'number') {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('percentMustBeNumeric'));\r\n\r\n        return;\r\n      }\r\n\r\n      if (\r\n        this.bireReturnReasonDTO.minRemainPercent &&\r\n        (this.bireReturnReasonDTO.minRemainPercent.toString().indexOf('.') !== -1 ||\r\n          this.bireReturnReasonDTO.minRemainPercent < min ||\r\n          this.bireReturnReasonDTO.minRemainPercent > max)\r\n      ) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('percentRangeError'));\r\n\r\n        return;\r\n      }\r\n\r\n      if (this.openMode === ComponentOpenMode.Write) {\r\n        // Update Mode\r\n        this.data = { ...this.bireReturnReasonDTO };\r\n        this.onUpdate.emit(this.data);\r\n        this.closeDialog();\r\n      } else if (this.openMode === ComponentOpenMode.Create) {\r\n        let isFound = false;\r\n        this.refMeasurementList.forEach((res) => {\r\n          if (res.counterCode === this.bireReturnReasonDTO.counterCode) {\r\n            isFound = true;\r\n          }\r\n        });\r\n\r\n        if (!isFound) {\r\n          // Create Mode\r\n          this.data = { ...this.bireReturnReasonDTO };\r\n          this.onValidated.emit(this.data);\r\n          this.closeDialog();\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));\r\n        }\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  private isScreenValidated() {\r\n    if (!this.bireReturnReasonDTO.counterCode || this.bireReturnReasonDTO.counterCode.trim().length === 0) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public maxLengthCheck(event, percent) {\r\n    const min = -21474836;\r\n    const max = 214748364;\r\n    if (percent < min || percent > max) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  public closeDialog() {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".refMeasurementList\\\" | translate }} ({{ refMeasurementTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"refMeasurementTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              *ngIf=\\\"refMeasurementTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteSelectedRefMeasurement()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"refMeasurementTableDataSource.dataSelectionCount === 1\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editSelectedRefMeasurement()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!refMeasurementTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addReferenceMeasurement()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n          <ng-template columnDef=\\\"isCounter\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i *ngIf=\\\"rowData.isCounter !== null && rowData.isCounter\\\" class=\\\"fa fa-fw fa-check\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template columnDef=\\\"propagationAllowed\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i\\r\\n              *ngIf=\\\"rowData.propagationAllowed !== null && rowData.propagationAllowed\\\"\\r\\n              class=\\\"fa fa-fw fa-check\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n            ></i>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-reference-measurement\\r\\n    *ngIf=\\\"showRefMgmtDialog\\\"\\r\\n    [(display)]=\\\"showRefMgmtDialog\\\"\\r\\n    [data]=\\\"selectedRefMgmtDialogData\\\"\\r\\n    [openMode]=\\\"refMeasurementDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddReferenceMeasurement($event)\\\"\\r\\n    (onUpdate)=\\\"onUpdateRefMeasurement($event)\\\"\\r\\n    [refMeasurementList]=\\\"refMeasurementTableDataSource.dataSrc\\\"\\r\\n  ></aw-dialog-reference-measurement>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireMeasureReferenceDTOId } from '../../../../../../shared/types/api-types/bire-measure-reference-dto-id.interface';\r\nimport { BireMeasureReferenceDTO } from '../../../../../../shared/types/api-types/bire-measure-reference-dto.interface';\r\nimport { BireUnitMeasureDTO } from '../../../../../../shared/types/api-types/bire-unit-measure-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { SelectItemUtils } from '../../../../../../shared/utils/select-item-utils';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { ReferenceMeasurementService } from './reference-measurement.service';\r\n\r\n@Component({\r\n  selector: 'aw-reference-measurement',\r\n  templateUrl: './reference-measurement.component.html'\r\n})\r\nexport class ReferenceMeasurementComponent extends DynamicCatalog implements OnInit {\r\n  public refMeasurementTableDataSource: TableDataSource<BireMeasureReferenceDTO>;\r\n\r\n  public selectedRefMgmtDialogData: BireMeasureReferenceDTO;\r\n\r\n  public refMeasurementDialogOpenMode: ComponentOpenMode;\r\n  public showRefMgmtDialog: boolean;\r\n\r\n  private bireMeasureReferenceDTOAddedList: BireMeasureReferenceDTO[];\r\n  private bireMeasureReferenceDTOUpdatedList: BireMeasureReferenceDTO[];\r\n\r\n  private selectedRefMeasurementCodeEdit: string;\r\n  private unitCodeList: SelectItem[];\r\n  private mrCategoryList: SelectItem[];\r\n\r\n  public constructor(\r\n    private readonly referenceMeasurementService: ReferenceMeasurementService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.refMeasurementTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'counterCode',\r\n          translateKey: this.getTranslateKey('counterCode'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'unitCode',\r\n          translateKey: this.getTranslateKey('unitCode'),\r\n          width: '6%'\r\n        },\r\n        {\r\n          field: 'mrCategory',\r\n          translateKey: this.getTranslateKey('mrCategory'),\r\n          width: '7%'\r\n        },\r\n        {\r\n          field: 'counterRemarks',\r\n          translateKey: this.getTranslateKey('counterRemarks'),\r\n          width: '40%'\r\n        },\r\n        {\r\n          field: 'minRemainPercent',\r\n          translateKey: this.getTranslateKey('minRemainPercent'),\r\n          width: '14%'\r\n        },\r\n        {\r\n          field: 'isCounter',\r\n          translateKey: this.getTranslateKey('isCounter'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'propagationAllowed',\r\n          translateKey: this.getTranslateKey('propagationAllowed'),\r\n          alignment: ColumnAlignment.CENTER,\r\n          width: '13%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n    this.refMeasurementDialogOpenMode = ComponentOpenMode.Read;\r\n    this.bireMeasureReferenceDTOAddedList = [];\r\n    this.bireMeasureReferenceDTOUpdatedList = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.fillDropDown();\r\n  }\r\n\r\n  /**\r\n   * Fill dropdown\r\n   */\r\n  private fillDropDown() {\r\n    // Filling Unit code list\r\n    this.referenceMeasurementService.findAllBireUnitMeasures().subscribe((result) => {\r\n      const labelValue: LabelValue<String>[] = [];\r\n      result.forEach((res: BireUnitMeasureDTO) => {\r\n        labelValue.push({\r\n          // tslint:disable-next-line:no-string-literal\r\n          label: res['label'],\r\n          // tslint:disable-next-line:no-string-literal\r\n          value: res['value']\r\n        });\r\n      });\r\n      // labelValue.unshift({ label: '', value: undefined });\r\n      this.unitCodeList = labelValue;\r\n    });\r\n\r\n    // Filling Mr Category List\r\n    this.propertiesService.getValue('getRefMeasureCategoryMap').subscribe((results) => {\r\n      this.mrCategoryList = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n\r\n      this.mrCategoryList.unshift({ label: '', value: undefined });\r\n\r\n      this.loadRefMgmtTable();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filter List by label/value\r\n   */\r\n  private unitCodeListFilter(filterType, val): string {\r\n    let value;\r\n    if (filterType === 'label') {\r\n      this.unitCodeList.filter((ev) => {\r\n        if (!!ev.label && !!ev.value && ev.value === val) {\r\n          value = ev.value === val ? ev.label : '';\r\n        }\r\n      });\r\n    } else {\r\n      this.unitCodeList.filter((ev) => {\r\n        if (ev.label === val) {\r\n          value = ev.label === val ? ev.value : '';\r\n        }\r\n      });\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Filter List by label/value\r\n   */\r\n  private mrCategoryListFilter(filterType, val): string {\r\n    let value;\r\n    if (filterType === 'label') {\r\n      if (this.mrCategoryList.length > 0) {\r\n        this.mrCategoryList.filter((ev) => {\r\n          if (!!ev.label && !!ev.value && ev.value === val) {\r\n            value = ev.value === val ? ev.label : '';\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      if (this.mrCategoryList.length > 0) {\r\n        this.mrCategoryList.filter((ev) => {\r\n          if (ev.label === val) {\r\n            value = ev.label === val ? ev.value : '';\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Load Ref Measurement Table\r\n   */\r\n  private loadRefMgmtTable(isfromRefresh?: boolean) {\r\n    const flag = isfromRefresh ? true : false;\r\n    this.refMeasurementTableDataSource.setData([]);\r\n    const bireMeasureReferenceDTO: BireMeasureReferenceDTO = {};\r\n    this.referenceMeasurementService\r\n      .findBireMeasureReferencesBySearchCriteria(bireMeasureReferenceDTO)\r\n      .subscribe((results) => {\r\n        // Convert category value to label\r\n        results.forEach((res) => {\r\n          res.mrCategory = this.mrCategoryListFilter('label', res.mrCategory);\r\n        });\r\n\r\n        this.refMeasurementTableDataSource.addData(results);\r\n\r\n        if (!flag) {\r\n          if (this.bireMeasureReferenceDTOAddedList) {\r\n            this.bireMeasureReferenceDTOAddedList.forEach((r) => {\r\n              this.refMeasurementTableDataSource.addData([r]);\r\n            });\r\n          }\r\n\r\n          // TO reenter modified entry in table\r\n          if (this.bireMeasureReferenceDTOUpdatedList) {\r\n            this.refMeasurementTableDataSource.dataSrc.forEach((res) => {\r\n              this.bireMeasureReferenceDTOUpdatedList.forEach((entry) => {\r\n                if (res.counterCode === entry.counterCode) {\r\n                  this.refMeasurementTableDataSource.replaceData(res, entry);\r\n                }\r\n              });\r\n            });\r\n          }\r\n          this.refMeasurementTableDataSource.dataSelection = [];\r\n        }\r\n      });\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'ReferenceMeasurementComponent';\r\n  }\r\n\r\n  /**\r\n   * On Add button click\r\n   */\r\n  public addReferenceMeasurement() {\r\n    this.selectedRefMgmtDialogData = {};\r\n    this.refMeasurementDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showRefMgmtDialog = true;\r\n  }\r\n\r\n  /**\r\n   * On add table row\r\n   */\r\n  public onAddReferenceMeasurement(ev: BireMeasureReferenceDTO) {\r\n    const event = { ...ev };\r\n    event.unitCode = this.unitCodeListFilter('label', event.unitCode);\r\n    event.mrCategory = this.mrCategoryListFilter('label', event.mrCategory);\r\n    this.refMeasurementTableDataSource.addData([event]);\r\n    ev.unitCode = event.unitCode;\r\n    this.bireMeasureReferenceDTOAddedList.push(ev);\r\n  }\r\n\r\n  /**\r\n   * Delete selected Measurements\r\n   */\r\n  public deleteSelectedRefMeasurement() {\r\n    const partialMessageKey =\r\n      this.refMeasurementTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedMeasurements'\r\n        : 'confirmDeleteSelectedMeasurement';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const bireMeasureReferenceDTOId: BireMeasureReferenceDTOId[] = [];\r\n        this.refMeasurementTableDataSource.dataSelection.forEach((res) => {\r\n          if (!!res.counterCode) {\r\n            bireMeasureReferenceDTOId.push({ counterCode: res.counterCode });\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSelectedRefMeasurement', 'res.counterCode');\r\n          }\r\n\r\n          const inAddedList = this.bireMeasureReferenceDTOAddedList.filter((element, index) => {\r\n            return res.counterCode === element.counterCode;\r\n          });\r\n\r\n          // removing from added\r\n          if (inAddedList) {\r\n            let foundAddedIndex = -1;\r\n            this.bireMeasureReferenceDTOAddedList.forEach((entry, index) => {\r\n              if (entry.counterCode === res.counterCode) {\r\n                foundAddedIndex = index;\r\n              }\r\n            });\r\n            this.bireMeasureReferenceDTOAddedList.splice(foundAddedIndex, 1);\r\n          }\r\n\r\n          const inUpdatedList = this.bireMeasureReferenceDTOUpdatedList.filter((element, index) => {\r\n            return res.counterCode === element.counterCode;\r\n          });\r\n\r\n          // removing from updated\r\n          if (inUpdatedList) {\r\n            let foundUpdatedIndex = -1;\r\n            this.bireMeasureReferenceDTOUpdatedList.forEach((entry, index) => {\r\n              if (entry.counterCode === res.counterCode) {\r\n                foundUpdatedIndex = index;\r\n              }\r\n            });\r\n            this.bireMeasureReferenceDTOUpdatedList.splice(foundUpdatedIndex, 1);\r\n          }\r\n        });\r\n\r\n        this.referenceMeasurementService.removeBireMeasureReference(bireMeasureReferenceDTOId).subscribe(\r\n          (results) => {\r\n            // Removing from table\r\n            this.refMeasurementTableDataSource.deleteDataSelection();\r\n            this.refMeasurementTableDataSource.dataSelection = [];\r\n          },\r\n          (err) => {\r\n            if (!!err.error) {\r\n              this.messageService.showErrorMessage(err.error.errorDetail);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edit Selected Reason\r\n   */\r\n  public editSelectedRefMeasurement() {\r\n    this.selectedRefMeasurementCodeEdit = '';\r\n    const event = this.refMeasurementTableDataSource.dataSelection[0];\r\n    event.unitCode = this.unitCodeListFilter('value', event.unitCode);\r\n    event.mrCategory = this.mrCategoryListFilter('value', event.mrCategory);\r\n    this.selectedRefMgmtDialogData = event;\r\n    this.refMeasurementDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showRefMgmtDialog = true;\r\n    const selMeasureCode = this.refMeasurementTableDataSource.dataSelection[0].counterCode;\r\n    if (!!selMeasureCode) {\r\n      this.selectedRefMeasurementCodeEdit = selMeasureCode;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On update table row\r\n   */\r\n  public onUpdateRefMeasurement(ev: BireMeasureReferenceDTO) {\r\n    this.refMeasurementTableDataSource.dataSrc.forEach((res, index) => {\r\n      if (res.counterCode === this.selectedRefMeasurementCodeEdit) {\r\n        const eventClone = { ...ev };\r\n        const cat = this.mrCategoryListFilter('label', eventClone.mrCategory);\r\n        const unit = this.unitCodeListFilter('label', eventClone.unitCode);\r\n        eventClone.mrCategory = cat;\r\n        eventClone.unitCode = unit;\r\n        this.refMeasurementTableDataSource.replaceData(res, eventClone);\r\n      }\r\n    });\r\n\r\n    ev.unitCode = this.unitCodeListFilter('label', ev.unitCode);\r\n    // Check if new entry is edited\r\n    let isNew = false;\r\n    this.bireMeasureReferenceDTOAddedList.forEach((res, index) => {\r\n      if (res.unitCode === ev.unitCode) {\r\n        isNew = true;\r\n        this.bireMeasureReferenceDTOAddedList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    // Check if edited item is again edited\r\n    if (!isNew) {\r\n      this.bireMeasureReferenceDTOUpdatedList.forEach((res, index) => {\r\n        if (res.unitCode === ev.unitCode) {\r\n          this.bireMeasureReferenceDTOUpdatedList.splice(index, 1);\r\n        }\r\n      });\r\n      this.bireMeasureReferenceDTOUpdatedList.push(ev);\r\n    } else {\r\n      this.bireMeasureReferenceDTOAddedList.push(ev);\r\n    }\r\n    this.refMeasurementTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**\r\n   * Saving Reason Return Data\r\n   */\r\n  public save() {\r\n    if (this.isSaveValid(this.bireMeasureReferenceDTOAddedList, this.bireMeasureReferenceDTOUpdatedList)) {\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bireMeasureReferenceDTOAddedList: this.bireMeasureReferenceDTOAddedList,\r\n        bireMeasureReferenceDTOUpdatedList: this.bireMeasureReferenceDTOUpdatedList\r\n      };\r\n\r\n      this.referenceMeasurementService.saveCatalog(saveCatalogInput).subscribe(() => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n\r\n        // Clearing Added and updated List\r\n        this.bireMeasureReferenceDTOAddedList = [];\r\n        this.bireMeasureReferenceDTOUpdatedList = [];\r\n        this.refMeasurementTableDataSource.dataSelection = [];\r\n      });\r\n    }\r\n  }\r\n\r\n  private isSaveValid(dtoAdd, dtoUpdate): boolean {\r\n    // if (dtoAdd.length === 0 && dtoUpdate.length === 0) {\r\n    //   return false;\r\n    // }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Refresh the table data\r\n   */\r\n  public refresh() {\r\n    this.refMeasurementTableDataSource.dataSelection = [];\r\n    this.bireMeasureReferenceDTOAddedList = [];\r\n    this.bireMeasureReferenceDTOUpdatedList = [];\r\n    this.loadRefMgmtTable(true);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireMeasureReferenceDTOId } from '../../../../../../shared/types/api-types/bire-measure-reference-dto-id.interface';\r\nimport { BireMeasureReferenceDTO } from '../../../../../../shared/types/api-types/bire-measure-reference-dto.interface';\r\nimport { BireUnitMeasureDTO } from '../../../../../../shared/types/api-types/bire-unit-measure-dto.interface';\r\n\r\n@Injectable()\r\nexport class ReferenceMeasurementService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findAllBireUnitMeasures(): Observable<BireUnitMeasureDTO[]> {\r\n    return super.post<void, BireUnitMeasureDTO[]>(this.productStructureManagementApi.findAllBireUnitMeasures);\r\n  }\r\n\r\n  public findBireMeasureReferencesBySearchCriteria(\r\n    bireMeasureReferenceDTO: BireMeasureReferenceDTO\r\n  ): Observable<BireMeasureReferenceDTO[]> {\r\n    return super.post<BireMeasureReferenceDTO, BireMeasureReferenceDTO[]>(\r\n      this.productStructureManagementApi.findBireMeasureReferencesBySearchCriteria,\r\n      bireMeasureReferenceDTO\r\n    );\r\n  }\r\n\r\n  public removeBireMeasureReference(bireMeasureReferenceDTOId: BireMeasureReferenceDTOId[]): Observable<void> {\r\n    return super.post<BireMeasureReferenceDTOId[], void>(\r\n      this.productStructureManagementApi.removeBireMeasureReference,\r\n      bireMeasureReferenceDTOId\r\n    );\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".groupCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"groupCode\\\"\\r\\n          [(ngModel)]=\\\"bireTaskGroupDTO.groupCode\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".groupName\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"groupName\\\"\\r\\n          [(ngModel)]=\\\"bireTaskGroupDTO.groupName\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"100\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!bireTaskGroupDTO.groupCode\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BireTaskGroupDTO } from '../../../../../../../shared/types/api-types/bire-task-group-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-task-group',\r\n  templateUrl: './dialog-task-group.component.html'\r\n})\r\nexport class DialogTaskGroupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public taskList: BireTaskGroupDTO[];\r\n\r\n  @Input()\r\n  public data: BireTaskGroupDTO;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BireTaskGroupDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BireTaskGroupDTO>;\r\n\r\n  public bireTaskGroupDTO: BireTaskGroupDTO;\r\n\r\n  public constructor(private readonly messageService: MessageService, public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DialogTaskGroupComponent');\r\n    this.onValidated = new EventEmitter<BireTaskGroupDTO>();\r\n    this.onUpdate = new EventEmitter<BireTaskGroupDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.data) {\r\n      this.data = {};\r\n    } else {\r\n      this.bireTaskGroupDTO = { ...this.data };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Valdidate and emit data\r\n   */\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.openMode === ComponentOpenMode.Write) {\r\n        // Update Mode\r\n        this.data = { ...this.bireTaskGroupDTO };\r\n        this.onUpdate.emit(this.data);\r\n        this.closeDialog();\r\n      } else if (this.openMode === ComponentOpenMode.Create) {\r\n        // If element already exist in table\r\n        let isFound = false;\r\n        this.taskList.forEach((res) => {\r\n          if (res.groupCode === this.bireTaskGroupDTO.groupCode) {\r\n            isFound = true;\r\n          }\r\n        });\r\n\r\n        if (!isFound) {\r\n          // Create Mode\r\n          this.data = { ...this.bireTaskGroupDTO };\r\n          this.onValidated.emit(this.data);\r\n          this.closeDialog();\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));\r\n        }\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Is screen valid\r\n   */\r\n  private isScreenValidated() {\r\n    if (!this.bireTaskGroupDTO.groupCode || this.bireTaskGroupDTO.groupCode.trim().length === 0) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close dialog event\r\n   */\r\n  public closeDialog() {\r\n    this.display = false;\r\n  }\r\n}\r\n\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".taskList\\\" | translate }} ({{ taskGroupTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"taskGroupTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              *ngIf=\\\"taskGroupTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteSelectedTask()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"taskGroupTableDataSource.dataSelectionCount === 1\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editSelectedTask()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!taskGroupTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addTask()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-task-group\\r\\n    *ngIf=\\\"showTaskGroupDialog\\\"\\r\\n    [(display)]=\\\"showTaskGroupDialog\\\"\\r\\n    [data]=\\\"selectedTaskGroupTableDialogData\\\"\\r\\n    [openMode]=\\\"taskGroupDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddTask($event)\\\"\\r\\n    (onUpdate)=\\\"updateTask($event)\\\"\\r\\n    [taskList]=\\\"taskGroupTableDataSource.dataSrc\\\"\\r\\n  ></aw-dialog-task-group>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireTaskGroupDTOId } from '../../../../../../shared/types/api-types/bire-task-group-dto-id.interface';\r\nimport { BireTaskGroupDTO } from '../../../../../../shared/types/api-types/bire-task-group-dto.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { TaskGroupService } from './task-group.service';\r\n\r\n@Component({\r\n  selector: 'aw-task-group',\r\n  templateUrl: './task-group.component.html'\r\n})\r\nexport class TaskGroupComponent extends DynamicCatalog implements OnInit {\r\n  public taskGroupTableDataSource: TableDataSource<BireTaskGroupDTO>;\r\n\r\n  public selectedTaskGroupTableDialogData: BireTaskGroupDTO;\r\n\r\n  public taskGroupDialogOpenMode: ComponentOpenMode;\r\n  public showTaskGroupDialog: boolean;\r\n\r\n  private bireTaskGroupAddedList: BireTaskGroupDTO[];\r\n  private bireTaskGroupUpdatedList: BireTaskGroupDTO[];\r\n\r\n  private selectedTaskCodeToEdit: string;\r\n\r\n  public constructor(\r\n    private readonly taskGroupService: TaskGroupService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n\r\n    this.taskGroupDialogOpenMode = ComponentOpenMode.Read;\r\n\r\n    this.taskGroupTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'groupCode', translateKey: this.getTranslateKey('groupCode'), alignment: ColumnAlignment.CENTER },\r\n        {\r\n          field: 'groupName',\r\n          translateKey: this.getTranslateKey('groupName'),\r\n          alignment: ColumnAlignment.CENTER\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.showTaskGroupDialog = false;\r\n    this.bireTaskGroupUpdatedList = [];\r\n    this.bireTaskGroupAddedList = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadTaskGroupTableata();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'TaskGroupComponent';\r\n  }\r\n\r\n  /**\r\n   * Loading Task table data\r\n   */\r\n  private loadTaskGroupTableata(isfromRefresh?: boolean) {\r\n    const flag = isfromRefresh ? true : false;\r\n    this.taskGroupTableDataSource.setData([]);\r\n    this.taskGroupService.findAllBireTaskGroupsCatalog().subscribe((results) => {\r\n      this.taskGroupTableDataSource.addData(results);\r\n      if (!flag) {\r\n        if (this.bireTaskGroupAddedList) {\r\n          this.bireTaskGroupAddedList.forEach((entry) => {\r\n            this.taskGroupTableDataSource.addData([entry]);\r\n          });\r\n        }\r\n\r\n        // TO reenter modified entry in table\r\n        if (this.bireTaskGroupUpdatedList) {\r\n          this.taskGroupTableDataSource.dataSrc.forEach((res) => {\r\n            this.bireTaskGroupUpdatedList.forEach((entry) => {\r\n              if (res.groupCode === entry.groupCode) {\r\n                this.taskGroupTableDataSource.replaceData(res, entry);\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On Add button click\r\n   */\r\n  public addTask() {\r\n    this.selectedTaskGroupTableDialogData = {};\r\n    this.taskGroupDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showTaskGroupDialog = true;\r\n  }\r\n\r\n  /**\r\n   * On add table row\r\n   */\r\n  public onAddTask(ev) {\r\n    this.taskGroupTableDataSource.addData([ev]);\r\n    this.bireTaskGroupAddedList.push(ev);\r\n  }\r\n\r\n  /**\r\n   * Delete selected Row\r\n   */\r\n  public deleteSelectedTask() {\r\n    const partialMessageKey =\r\n      this.taskGroupTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedTasks'\r\n        : 'confirmDeleteSelectedTasks';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const bireTaskGroupDTOId: BireTaskGroupDTOId[] = [];\r\n        this.taskGroupTableDataSource.dataSelection.forEach((res) => {\r\n          if (!!res.groupCode) {\r\n            bireTaskGroupDTOId.push({ groupCode: res.groupCode });\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSelectedTask', 'res.groupCode');\r\n          }\r\n\r\n          const inAddedList = this.bireTaskGroupAddedList.filter((element, index) => {\r\n            return res.groupCode === element.groupCode;\r\n          });\r\n\r\n          // removing from added\r\n          if (inAddedList) {\r\n            let foundAddedIndex = -1;\r\n            this.bireTaskGroupAddedList.forEach((entry, index) => {\r\n              if (entry.groupCode === res.groupCode) {\r\n                foundAddedIndex = index;\r\n              }\r\n            });\r\n            this.bireTaskGroupAddedList.splice(foundAddedIndex, 1);\r\n          }\r\n\r\n          const inUpdatedList = this.bireTaskGroupUpdatedList.filter((element, index) => {\r\n            return res.groupCode === element.groupCode;\r\n          });\r\n\r\n          // removing from updated\r\n          if (inUpdatedList) {\r\n            let foundUpdatedIndex = -1;\r\n            this.bireTaskGroupUpdatedList.forEach((entry, index) => {\r\n              if (entry.groupCode === res.groupCode) {\r\n                foundUpdatedIndex = index;\r\n              }\r\n            });\r\n            this.bireTaskGroupUpdatedList.splice(foundUpdatedIndex, 1);\r\n          }\r\n\r\n          // Removing from table\r\n          this.taskGroupTableDataSource.deleteDataSelection();\r\n        });\r\n\r\n        this.taskGroupService.removeBireTaskGroup(bireTaskGroupDTOId).subscribe((_results) => {\r\n          this.taskGroupTableDataSource.dataSelection = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edit Selected Row\r\n   */\r\n  public editSelectedTask() {\r\n    this.selectedTaskCodeToEdit = '';\r\n    this.selectedTaskGroupTableDialogData = this.taskGroupTableDataSource.dataSelection[0];\r\n    this.taskGroupDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showTaskGroupDialog = true;\r\n    const selTaskGroupCode = this.taskGroupTableDataSource.dataSelection[0].groupCode;\r\n    if (!!selTaskGroupCode) {\r\n      this.selectedTaskCodeToEdit = selTaskGroupCode;\r\n    } else {\r\n      super.throwUnboundLocalError('editSelectedTask', 'selTaskGroupCode');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On update table row\r\n   */\r\n  public updateTask(ev: BireTaskGroupDTO) {\r\n    this.taskGroupTableDataSource.dataSrc.forEach((res) => {\r\n      if (res.groupCode === this.selectedTaskCodeToEdit) {\r\n        this.taskGroupTableDataSource.replaceData(res, ev);\r\n      }\r\n    });\r\n    this.taskGroupTableDataSource.setData(this.taskGroupTableDataSource.dataSrc);\r\n    let isNew = false;\r\n    this.bireTaskGroupAddedList.forEach((res, index) => {\r\n      if (res.groupCode === ev.groupCode) {\r\n        isNew = true;\r\n        this.bireTaskGroupAddedList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    if (!isNew) {\r\n      this.bireTaskGroupUpdatedList.forEach((res, index) => {\r\n        if (res.groupCode === ev.groupCode) {\r\n          this.bireTaskGroupUpdatedList.splice(index, 1);\r\n        }\r\n      });\r\n      this.bireTaskGroupUpdatedList.push(ev);\r\n    } else {\r\n      this.bireTaskGroupAddedList.push(ev);\r\n    }\r\n    this.taskGroupTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**\r\n   * Saving Data\r\n   */\r\n  public save() {\r\n    if (this.isSaveValid(this.bireTaskGroupAddedList, this.bireTaskGroupUpdatedList)) {\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bireTaskGroupAddedList: this.bireTaskGroupAddedList,\r\n        bireTaskGroupUpdatedList: this.bireTaskGroupUpdatedList\r\n      };\r\n\r\n      this.taskGroupService.saveCatalog(saveCatalogInput).subscribe(() => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n\r\n        // Clearing Added and updated List\r\n        this.bireTaskGroupAddedList = [];\r\n        this.bireTaskGroupUpdatedList = [];\r\n      });\r\n    }\r\n  }\r\n\r\n  private isSaveValid(dtoAdd, dtoUpdate): boolean {\r\n    // if (dtoAdd.length === 0 && dtoUpdate.length === 0) {\r\n    //   return false;\r\n    // }\r\n\r\n    return true;\r\n  }\r\n\r\n  public refresh() {\r\n    this.taskGroupTableDataSource.dataSelection = [];\r\n    this.bireTaskGroupAddedList = [];\r\n    this.bireTaskGroupUpdatedList = [];\r\n    this.loadTaskGroupTableata(true);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { TaskManagementApi } from '../../../../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireTaskGroupDTOId } from '../../../../../../shared/types/api-types/bire-task-group-dto-id.interface';\r\nimport { BireTaskGroupDTO } from '../../../../../../shared/types/api-types/bire-task-group-dto.interface';\r\n\r\n@Injectable()\r\nexport class TaskGroupService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly taskManagementApi: TaskManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findAllBireTaskGroupsCatalog(): Observable<BireTaskGroupDTO[]> {\r\n    return super.post<void, BireTaskGroupDTO[]>(this.taskManagementApi.findAllBireTaskGroupsCatalog);\r\n  }\r\n\r\n  public removeBireTaskGroup(bireTaskGroupDTOId: BireTaskGroupDTOId[]): Observable<void> {\r\n    return super.post<BireTaskGroupDTOId[], void>(this.taskManagementApi.removeBireTaskGroup, bireTaskGroupDTOId);\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".technicalLevel\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          #technicalLevel=\\\"ngModel\\\"\\r\\n          type=\\\"number\\\"\\r\\n          [pKeyFilter]=\\\"inputValidationService.validatorOfInteger()\\\"\\r\\n          [pValidateOnly]=\\\"true\\\"\\r\\n          name=\\\"technicalLevel\\\"\\r\\n          [(ngModel)]=\\\"bireTilDTO.technicalLevel\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [max]=\\\"2147483648\\\"\\r\\n          [min]=\\\"-2147483648\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          (keypress)=\\\"maxLengthCheck($event, bireTilDTO.technicalLevel)\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n        <p-message\\r\\n          *ngIf=\\\"technicalLevel.invalid && (technicalLevel.dirty || technicalLevel.touched)\\\"\\r\\n          severity=\\\"error\\\"\\r\\n          [text]=\\\"inputValidationService.formatOfInteger()\\\"\\r\\n        ></p-message>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".tilName\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"tilName\\\"\\r\\n          [(ngModel)]=\\\"bireTilDTO.tilName\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"100\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".tilDescription\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [rows]=\\\"3\\\"\\r\\n          pInputTextarea\\r\\n          [(ngModel)]=\\\"bireTilDTO.tilDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          maxlength=\\\"1000\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"bireTilDTO.technicalLevel === undefined || bireTilDTO.technicalLevel === null\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { InputValidationService } from '../../../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BireTilDTO } from '../../../../../../../shared/types/api-types/bire-til-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-technical-intervention-level',\r\n  templateUrl: './dialog-technical-intervention-level.component.html'\r\n})\r\nexport class DialogTechnicalInterventionLevelComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public tilList: BireTilDTO[];\r\n\r\n  @Input()\r\n  public data: BireTilDTO;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BireTilDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BireTilDTO>;\r\n\r\n  public bireTilDTO: BireTilDTO;\r\n\r\n  public constructor(\r\n    public inputValidationService: InputValidationService,\r\n    private readonly messageService: MessageService,\r\n    public readonly sessionService: SessionService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogTechnicalInterventionLevelComponent');\r\n    this.onValidated = new EventEmitter<BireTilDTO>();\r\n    this.onUpdate = new EventEmitter<BireTilDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.data) {\r\n      this.data = {};\r\n      this.bireTilDTO = {};\r\n    } else {\r\n      this.bireTilDTO = { ...this.data };\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (typeof this.bireTilDTO.technicalLevel !== 'number') {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('numericRequired'));\r\n\r\n        return;\r\n      }\r\n\r\n      const min = -2147483648;\r\n      const max = 2147483648;\r\n      if (this.bireTilDTO.technicalLevel < min || this.bireTilDTO.technicalLevel > max) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('percentRangeError'));\r\n\r\n        return;\r\n      }\r\n\r\n      if (this.openMode === ComponentOpenMode.Write) {\r\n        // Update Mode\r\n        this.data = { ...this.bireTilDTO };\r\n        this.onUpdate.emit(this.data);\r\n        this.closeDialog();\r\n      } else if (this.openMode === ComponentOpenMode.Create) {\r\n        let isFound = false;\r\n        this.tilList.forEach((res) => {\r\n          if (res.technicalLevel === this.bireTilDTO.technicalLevel) {\r\n            isFound = true;\r\n          }\r\n        });\r\n\r\n        if (!isFound) {\r\n          // Create Mode\r\n          this.data = { ...this.bireTilDTO };\r\n          this.onValidated.emit(this.data);\r\n          this.closeDialog();\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));\r\n        }\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  public maxLengthCheck(event, percent) {\r\n    const min = -21474836;\r\n    const max = 214748364;\r\n    if (percent < min || percent > max) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  private isScreenValidated() {\r\n    if (\r\n      this.bireTilDTO.technicalLevel === null ||\r\n      this.bireTilDTO.technicalLevel === undefined ||\r\n      this.bireTilDTO.technicalLevel.toString().length === 0\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public closeDialog() {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".technicalInterventionList\\\" | translate }} ({{\\r\\n              techInterventionTableDataSource.dataCount\\r\\n            }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"techInterventionTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              *ngIf=\\\"techInterventionTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteSelectedTechnicalIntervention()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"techInterventionTableDataSource.dataSelectionCount === 1\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editSelectedTechinalIntervention()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!techInterventionTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addTechnicalIntervention()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-technical-intervention-level\\r\\n    *ngIf=\\\"showTechInterventionDialog\\\"\\r\\n    [(display)]=\\\"showTechInterventionDialog\\\"\\r\\n    [data]=\\\"selectedTechInterventionTableDialogData\\\"\\r\\n    [openMode]=\\\"techInterventionDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddTechIntervention($event)\\\"\\r\\n    (onUpdate)=\\\"onUpdateTechinalIntervention($event)\\\"\\r\\n    [tilList]=\\\"techInterventionTableDataSource.dataSrc\\\"\\r\\n  ></aw-dialog-technical-intervention-level>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireTilDTOId } from '../../../../../../shared/types/api-types/bire-til-dto-id.interface';\r\nimport { BireTilDTO } from '../../../../../../shared/types/api-types/bire-til-dto.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { TechnicalInterventionLevelService } from './technical-intervention-level.service';\r\n\r\n@Component({\r\n  selector: 'aw-technical-intervention-level',\r\n  templateUrl: './technical-intervention-level.component.html'\r\n})\r\nexport class TechnicalInterventionLevelComponent extends DynamicCatalog implements OnInit {\r\n  public techInterventionTableDataSource: TableDataSource<BireTilDTO>;\r\n  public selectedTechInterventionTableDialogData: BireTilDTO;\r\n\r\n  public techInterventionDialogOpenMode: ComponentOpenMode;\r\n  public showTechInterventionDialog: boolean;\r\n\r\n  private bireTilDTOAddedList: BireTilDTO[];\r\n  private bireTilDTOUpdatedList: BireTilDTO[];\r\n\r\n  private selectedTechinalInterventionLevelEdit: number | undefined;\r\n\r\n  public constructor(\r\n    private readonly technicalInterventionLevelService: TechnicalInterventionLevelService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n    this.techInterventionDialogOpenMode = ComponentOpenMode.Read;\r\n\r\n    this.techInterventionTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'technicalLevel',\r\n          translateKey: this.getTranslateKey('technicalLevel'),\r\n          alignment: ColumnAlignment.RIGHT\r\n        },\r\n        {\r\n          field: 'tilName',\r\n          translateKey: this.getTranslateKey('tilName')\r\n        },\r\n        {\r\n          field: 'tilDescription',\r\n          translateKey: this.getTranslateKey('tilDescription')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.showTechInterventionDialog = false;\r\n    this.bireTilDTOUpdatedList = [];\r\n    this.bireTilDTOAddedList = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadTechInterventionTableData();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'TechnicalInterventionLevelComponent';\r\n  }\r\n\r\n  /**\r\n   * Load Tech intervention table on load\r\n   */\r\n  private loadTechInterventionTableData(isfromRefresh?: boolean) {\r\n    const flag = isfromRefresh ? true : false;\r\n    this.techInterventionTableDataSource.setData([]);\r\n    this.technicalInterventionLevelService.findAllBireTils().subscribe((results) => {\r\n      this.techInterventionTableDataSource.addData(results);\r\n\r\n      if (!flag) {\r\n        if (this.bireTilDTOAddedList) {\r\n          this.bireTilDTOAddedList.forEach((entry) => {\r\n            this.techInterventionTableDataSource.addData([entry]);\r\n          });\r\n        }\r\n\r\n        // TO reenter modified entry in table\r\n        this.techInterventionTableDataSource.dataSrc.forEach((res) => {\r\n          this.bireTilDTOUpdatedList.forEach((entry) => {\r\n            if (res.technicalLevel === entry.technicalLevel) {\r\n              this.techInterventionTableDataSource.replaceData(res, entry);\r\n            }\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On Add button click\r\n   */\r\n  public addTechnicalIntervention() {\r\n    this.selectedTechInterventionTableDialogData = {};\r\n    this.techInterventionDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showTechInterventionDialog = true;\r\n  }\r\n\r\n  /**\r\n   * On add table row\r\n   */\r\n  public onAddTechIntervention(ev) {\r\n    this.techInterventionTableDataSource.addData([ev]);\r\n    this.bireTilDTOAddedList.push(ev);\r\n  }\r\n\r\n  /**\r\n   * Delete selected Interventions\r\n   */\r\n  public deleteSelectedTechnicalIntervention() {\r\n    const partialMessageKey =\r\n      this.techInterventionTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedInterventions'\r\n        : 'confirmDeleteSelectedInterventions';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const bireTilDTOId: BireTilDTOId[] = [];\r\n        this.techInterventionTableDataSource.dataSelection.forEach((res) => {\r\n          if (!!res.technicalLevel) {\r\n            bireTilDTOId.push({ technicalLevel: res.technicalLevel });\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSelectedTechnicalIntervention', 'res.technicalLevel');\r\n          }\r\n\r\n          const inAddedList = this.bireTilDTOAddedList.filter((element, index) => {\r\n            return res.technicalLevel === element.technicalLevel;\r\n          });\r\n\r\n          // removing from added\r\n          if (inAddedList) {\r\n            let foundAddedIndex = -1;\r\n            this.bireTilDTOAddedList.forEach((entry, index) => {\r\n              if (entry.technicalLevel === res.technicalLevel) {\r\n                foundAddedIndex = index;\r\n              }\r\n            });\r\n            this.bireTilDTOAddedList.splice(foundAddedIndex, 1);\r\n          }\r\n\r\n          const inUpdatedList = this.bireTilDTOUpdatedList.filter((element, index) => {\r\n            return res.technicalLevel === element.technicalLevel;\r\n          });\r\n\r\n          // removing from updated\r\n          if (inUpdatedList) {\r\n            let foundUpdatedIndex = -1;\r\n            this.bireTilDTOUpdatedList.forEach((entry, index) => {\r\n              if (entry.technicalLevel === res.technicalLevel) {\r\n                foundUpdatedIndex = index;\r\n              }\r\n            });\r\n            this.bireTilDTOUpdatedList.splice(foundUpdatedIndex, 1);\r\n          }\r\n\r\n          // Removing from table\r\n          this.techInterventionTableDataSource.deleteDataSelection();\r\n        });\r\n\r\n        this.technicalInterventionLevelService.removeBireTil(bireTilDTOId).subscribe((results) => {\r\n          this.techInterventionTableDataSource.dataSelection = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edit Selected Reason\r\n   */\r\n  public editSelectedTechinalIntervention() {\r\n    this.selectedTechinalInterventionLevelEdit = undefined;\r\n    this.selectedTechInterventionTableDialogData = this.techInterventionTableDataSource.dataSelection[0];\r\n    this.techInterventionDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showTechInterventionDialog = true;\r\n    this.selectedTechinalInterventionLevelEdit = this.techInterventionTableDataSource.dataSelection[0].technicalLevel;\r\n  }\r\n\r\n  /**\r\n   * On update table row\r\n   */\r\n  public onUpdateTechinalIntervention(ev: BireTilDTO) {\r\n    this.techInterventionTableDataSource.dataSelection.forEach((res) => {\r\n      if (res.technicalLevel === this.selectedTechinalInterventionLevelEdit) {\r\n        this.techInterventionTableDataSource.replaceData(res, ev);\r\n      }\r\n    });\r\n    // Check if new entry is edited\r\n    let isNew = false;\r\n    this.bireTilDTOAddedList.forEach((res, index) => {\r\n      if (res.technicalLevel === ev.technicalLevel) {\r\n        isNew = true;\r\n        this.bireTilDTOAddedList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    // Check if edited item is again edited\r\n    if (!isNew) {\r\n      this.bireTilDTOUpdatedList.forEach((res, index) => {\r\n        if (res.technicalLevel === ev.technicalLevel) {\r\n          this.bireTilDTOUpdatedList.splice(index, 1);\r\n        }\r\n      });\r\n      this.bireTilDTOUpdatedList.push(ev);\r\n    } else {\r\n      this.bireTilDTOAddedList.push(ev);\r\n    }\r\n    this.techInterventionTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**\r\n   * Saving Reason Return Data\r\n   */\r\n  public save() {\r\n    if (this.isSaveValid(this.bireTilDTOAddedList, this.bireTilDTOUpdatedList)) {\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bireTilDTOAddedList: this.bireTilDTOAddedList,\r\n        bireTilDTOUpdatedList: this.bireTilDTOUpdatedList\r\n      };\r\n\r\n      this.technicalInterventionLevelService.saveCatalog(saveCatalogInput).subscribe(() => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n\r\n        // Clearing Added and updated List\r\n        this.bireTilDTOAddedList = [];\r\n        this.bireTilDTOUpdatedList = [];\r\n        this.techInterventionTableDataSource.dataSelection = [];\r\n      });\r\n    }\r\n  }\r\n\r\n  private isSaveValid(dtoAdd, dtoUpdate): boolean {\r\n    // if (dtoAdd.length === 0 && dtoUpdate.length === 0) {\r\n    //   return false;\r\n    // }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Refresh the table data\r\n   */\r\n  public refresh() {\r\n    this.techInterventionTableDataSource.dataSelection = [];\r\n    this.bireTilDTOAddedList = [];\r\n    this.bireTilDTOUpdatedList = [];\r\n    this.loadTechInterventionTableData(true);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { TaskManagementApi } from '../../../../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireTilDTOId } from '../../../../../../shared/types/api-types/bire-til-dto-id.interface';\r\nimport { BireTilDTO } from '../../../../../../shared/types/api-types/bire-til-dto.interface';\r\n\r\n@Injectable()\r\nexport class TechnicalInterventionLevelService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly taskManagementApi: TaskManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findAllBireTils(): Observable<BireTilDTO[]> {\r\n    return super.post<void, BireTilDTO[]>(this.taskManagementApi.findAllBireTils);\r\n  }\r\n\r\n  public removeBireTil(bireTilDTOId: BireTilDTOId[]): Observable<void> {\r\n    return super.post<BireTilDTOId[], void>(this.taskManagementApi.removeBireTil, bireTilDTOId);\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".unitCode\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"unitCode\\\"\\r\\n          [(ngModel)]=\\\"bireUnitMeasureDTO.unitCode\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".unitName\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"unitName\\\"\\r\\n          [(ngModel)]=\\\"bireUnitMeasureDTO.unitName\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!bireUnitMeasureDTO.unitCode\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../../shared/services/session.service';\r\nimport { BireUnitMeasureDTO } from '../../../../../../../shared/types/api-types/bire-unit-measure-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-unit-of-measure',\r\n  templateUrl: './dialog-unit-of-measure.component.html'\r\n})\r\nexport class DialogUnitOfMeasureComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public unitOfMeasureList: BireUnitMeasureDTO[];\r\n\r\n  @Input()\r\n  public data: BireUnitMeasureDTO;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BireUnitMeasureDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<BireUnitMeasureDTO>;\r\n\r\n  public bireUnitMeasureDTO: BireUnitMeasureDTO;\r\n\r\n  public constructor(private readonly messageService: MessageService, public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DialogUnitOfMeasureComponent');\r\n    this.onValidated = new EventEmitter<BireUnitMeasureDTO>();\r\n    this.onUpdate = new EventEmitter<BireUnitMeasureDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.data) {\r\n      this.data = {};\r\n    } else {\r\n      this.bireUnitMeasureDTO = { ...this.data };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validation checks\r\n   */\r\n  private isScreenValidated() {\r\n    if (!this.bireUnitMeasureDTO.unitCode || this.bireUnitMeasureDTO.unitCode.trim().length === 0) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate data to emit\r\n   */\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.openMode === ComponentOpenMode.Write) {\r\n        // Update Mode\r\n        this.data = { ...this.bireUnitMeasureDTO };\r\n        this.onUpdate.emit(this.data);\r\n        this.closeDialog();\r\n      } else if (this.openMode === ComponentOpenMode.Create) {\r\n        let isFound = false;\r\n        this.unitOfMeasureList.forEach((res) => {\r\n          if (res.unitCode === this.bireUnitMeasureDTO.unitCode) {\r\n            isFound = true;\r\n          }\r\n        });\r\n\r\n        if (!isFound) {\r\n          // Create Mode\r\n          this.data = { ...this.bireUnitMeasureDTO };\r\n          this.onValidated.emit(this.data);\r\n          this.closeDialog();\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));\r\n        }\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  public closeDialog() {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div class=\\\"grid-cell--12\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ getComponentName() + \\\".unitOfMeasureList\\\" | translate }} ({{ unitOfMeasureTableDataSource.dataCount }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"unitOfMeasureTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <button\\r\\n              *ngIf=\\\"unitOfMeasureTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteSelectedUnitOfMeasure()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"unitOfMeasureTableDataSource.dataSelectionCount === 1\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editSelectedUnitOfMeasure()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!unitOfMeasureTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addUnitOfMeasure()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-unit-of-measure\\r\\n    *ngIf=\\\"showunitOfMeasureDialog\\\"\\r\\n    [(display)]=\\\"showunitOfMeasureDialog\\\"\\r\\n    [data]=\\\"selectedRunitOfMeasureDialogData\\\"\\r\\n    [openMode]=\\\"unitOfMeasureDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddUnitOfMeasure($event)\\\"\\r\\n    (onUpdate)=\\\"onUpdateUnitOfMeasure($event)\\\"\\r\\n    [unitOfMeasureList]=\\\"unitOfMeasureTableDataSource.dataSrc\\\"\\r\\n  ></aw-dialog-unit-of-measure>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireUnitMeasureDTOId } from '../../../../../../shared/types/api-types/bire-unit-measure-dto-id.interface';\r\nimport { BireUnitMeasureDTO } from '../../../../../../shared/types/api-types/bire-unit-measure-dto.interface';\r\nimport { CatalogService } from '../../../catalog.service';\r\nimport { DynamicCatalog } from '../../../types/dynamic-catalog.interface';\r\n\r\nimport { UnitOfMeasureService } from './unit-of-measure.service';\r\n\r\n@Component({\r\n  selector: 'aw-unit-of-measure',\r\n  templateUrl: './unit-of-measure.component.html'\r\n})\r\nexport class UnitOfMeasureComponent extends DynamicCatalog implements OnInit {\r\n  public unitOfMeasureTableDataSource: TableDataSource<BireUnitMeasureDTO>;\r\n  public selectedRunitOfMeasureDialogData: BireUnitMeasureDTO;\r\n\r\n  public unitOfMeasureDialogOpenMode: ComponentOpenMode;\r\n  public showunitOfMeasureDialog: boolean;\r\n\r\n  private bireUnitMeasureDTOAddedList: BireUnitMeasureDTO[];\r\n  private bireUnitMeasureDTOUpdatedList: BireUnitMeasureDTO[];\r\n\r\n  private selectedUnitCodeEdit: string;\r\n\r\n  public constructor(\r\n    private readonly unitOfMeasureService: UnitOfMeasureService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    catalogService: CatalogService\r\n  ) {\r\n    super(catalogService, ComponentOpenMode.Read);\r\n    this.unitOfMeasureTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'unitCode', translateKey: this.getTranslateKey('unitCode') },\r\n        {\r\n          field: 'unitName',\r\n          translateKey: this.getTranslateKey('unitName')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n    this.unitOfMeasureDialogOpenMode = ComponentOpenMode.Read;\r\n    this.bireUnitMeasureDTOAddedList = [];\r\n    this.bireUnitMeasureDTOUpdatedList = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadUnitOfMeaureTable();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'UnitOfMeasureComponent';\r\n  }\r\n\r\n  /**\r\n   * Initially load measure table\r\n   */\r\n  private loadUnitOfMeaureTable(isfromRefresh?: boolean) {\r\n    const flag = isfromRefresh ? true : false;\r\n    this.unitOfMeasureTableDataSource.setData([]);\r\n    this.unitOfMeasureService.findAllBireUnitMeasures().subscribe((results) => {\r\n      const sortedResult = results.list;\r\n      sortedResult.sort((a, b) =>\r\n        !!a.unitCode && !!b.unitCode && a.unitCode.toLowerCase() > b.unitCode.toLowerCase() ? 1 : -1\r\n      );\r\n      this.unitOfMeasureTableDataSource.setData(sortedResult);\r\n      if (!flag) {\r\n        if (this.bireUnitMeasureDTOAddedList) {\r\n          this.unitOfMeasureTableDataSource.addData(this.bireUnitMeasureDTOAddedList);\r\n        }\r\n\r\n        // TO reenter modified entry in table\r\n        if (this.bireUnitMeasureDTOUpdatedList) {\r\n          this.unitOfMeasureTableDataSource.dataSrc.forEach((res) => {\r\n            this.bireUnitMeasureDTOUpdatedList.forEach((entry) => {\r\n              if (res.unitCode === entry.unitCode) {\r\n                this.unitOfMeasureTableDataSource.replaceData(res, entry);\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On Add button click\r\n   */\r\n  public addUnitOfMeasure() {\r\n    this.selectedRunitOfMeasureDialogData = {};\r\n    this.unitOfMeasureDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showunitOfMeasureDialog = true;\r\n  }\r\n\r\n  /**\r\n   * On add table row\r\n   */\r\n  public onAddUnitOfMeasure(ev) {\r\n    this.unitOfMeasureTableDataSource.addData([ev]);\r\n    this.bireUnitMeasureDTOAddedList.push(ev);\r\n  }\r\n\r\n  /**\r\n   * Delete selected measures\r\n   */\r\n  public deleteSelectedUnitOfMeasure() {\r\n    const partialMessageKey =\r\n      this.unitOfMeasureTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedMeasures'\r\n        : 'confirmDeleteSelectedMeasure';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const bireUnitMeasureDTOId: BireUnitMeasureDTOId[] = [];\r\n        this.unitOfMeasureTableDataSource.dataSelection.forEach((res) => {\r\n          if (!!res.unitCode) {\r\n            bireUnitMeasureDTOId.push({ unitCode: res.unitCode });\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSelectedUnitOfMeasure', 'res.unitCode');\r\n          }\r\n\r\n          const inAddedList = this.bireUnitMeasureDTOAddedList.filter((element, index) => {\r\n            return res.unitCode === element.unitCode;\r\n          });\r\n\r\n          // removing from added\r\n          if (inAddedList) {\r\n            let foundAddedIndex = -1;\r\n            this.bireUnitMeasureDTOAddedList.forEach((entry, index) => {\r\n              if (entry.unitCode === res.unitCode) {\r\n                foundAddedIndex = index;\r\n              }\r\n            });\r\n            this.bireUnitMeasureDTOAddedList.splice(foundAddedIndex, 1);\r\n          }\r\n\r\n          const inUpdatedList = this.bireUnitMeasureDTOUpdatedList.filter((element, index) => {\r\n            return res.unitCode === element.unitCode;\r\n          });\r\n\r\n          // removing from updated\r\n          if (inUpdatedList) {\r\n            let foundUpdatedIndex = -1;\r\n            this.bireUnitMeasureDTOUpdatedList.forEach((entry, index) => {\r\n              if (entry.unitCode === res.unitCode) {\r\n                foundUpdatedIndex = index;\r\n              }\r\n            });\r\n            this.bireUnitMeasureDTOUpdatedList.splice(foundUpdatedIndex, 1);\r\n          }\r\n        });\r\n        this.unitOfMeasureTableDataSource.deleteDataSelection();\r\n        this.unitOfMeasureService.removeBireUnitMeasure(bireUnitMeasureDTOId).subscribe((results) => {\r\n          this.unitOfMeasureTableDataSource.dataSelection = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edit Selected Measure\r\n   */\r\n  public editSelectedUnitOfMeasure() {\r\n    this.selectedUnitCodeEdit = '';\r\n    this.selectedRunitOfMeasureDialogData = this.unitOfMeasureTableDataSource.dataSelection[0];\r\n    this.unitOfMeasureDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showunitOfMeasureDialog = true;\r\n    const selMeasureCode = this.unitOfMeasureTableDataSource.dataSelection[0].unitCode;\r\n    if (!!selMeasureCode) {\r\n      this.selectedUnitCodeEdit = selMeasureCode;\r\n    } else {\r\n      super.throwUnboundLocalError('editSelectedUnitOfMeasure', 'selMeasureCode');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On update table row\r\n   */\r\n  public onUpdateUnitOfMeasure(ev: BireUnitMeasureDTO) {\r\n    this.unitOfMeasureTableDataSource.dataSrc.forEach((res) => {\r\n      if (res.unitCode === this.selectedUnitCodeEdit) {\r\n        this.unitOfMeasureTableDataSource.replaceData(res, ev);\r\n      }\r\n    });\r\n    // Check if new entry is edited\r\n    let isNew = false;\r\n    this.bireUnitMeasureDTOAddedList.forEach((res, index) => {\r\n      if (res.unitCode === ev.unitCode) {\r\n        isNew = true;\r\n        this.bireUnitMeasureDTOAddedList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    // Check if edited item is again edited\r\n    if (!isNew) {\r\n      this.bireUnitMeasureDTOUpdatedList.forEach((res, index) => {\r\n        if (res.unitCode === ev.unitCode) {\r\n          this.bireUnitMeasureDTOUpdatedList.splice(index, 1);\r\n        }\r\n      });\r\n      this.bireUnitMeasureDTOUpdatedList.push(ev);\r\n    } else {\r\n      this.bireUnitMeasureDTOAddedList.push(ev);\r\n    }\r\n    this.unitOfMeasureTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**\r\n   * Saving Measure Data\r\n   */\r\n  public save() {\r\n    if (this.isSaveValid(this.bireUnitMeasureDTOAddedList, this.bireUnitMeasureDTOUpdatedList)) {\r\n      const saveCatalogInput: SaveCatalogInput = {\r\n        bireUnitMeasureDTOAddedList: this.bireUnitMeasureDTOAddedList,\r\n        bireUnitMeasureDTOUpdatedList: this.bireUnitMeasureDTOUpdatedList\r\n      };\r\n\r\n      this.unitOfMeasureService.saveCatalog(saveCatalogInput).subscribe(() => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n\r\n        // Clearing Added and updated List\r\n        this.bireUnitMeasureDTOAddedList = [];\r\n        this.bireUnitMeasureDTOUpdatedList = [];\r\n        this.unitOfMeasureTableDataSource.dataSelection = [];\r\n      });\r\n    }\r\n  }\r\n\r\n  private isSaveValid(dtoAdd, dtoUpdate): boolean {\r\n    // if (dtoAdd.length === 0 && dtoUpdate.length === 0) {\r\n    //   return false;\r\n    // }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Refresh the table data\r\n   */\r\n  public refresh() {\r\n    this.bireUnitMeasureDTOAddedList = [];\r\n    this.bireUnitMeasureDTOUpdatedList = [];\r\n    this.loadUnitOfMeaureTable(true);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SaveCatalogInput } from '../../../../../../shared/types/api-input-types/catalog/save-catalog-input.interface';\r\nimport { BireUnitMeasureDTOId } from '../../../../../../shared/types/api-types/bire-unit-measure-dto-id.interface';\r\nimport { BireUnitMeasureDTO } from '../../../../../../shared/types/api-types/bire-unit-measure-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable()\r\nexport class UnitOfMeasureService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findAllBireUnitMeasures(): Observable<SearchResultsDTO<BireUnitMeasureDTO>> {\r\n    return super.post<void, SearchResultsDTO<BireUnitMeasureDTO>>(\r\n      this.productStructureManagementApi.findAllBireUnitMeasureTable\r\n    );\r\n  }\r\n\r\n  public removeBireUnitMeasure(bireReturnReasonDTOId: BireUnitMeasureDTOId[]): Observable<void> {\r\n    return super.post<BireUnitMeasureDTOId[], void>(\r\n      this.productStructureManagementApi.removeBireUnitMeasure,\r\n      bireReturnReasonDTOId\r\n    );\r\n  }\r\n\r\n  public saveCatalog(saveCatalogInput: SaveCatalogInput): Observable<void> {\r\n    return super.post<SaveCatalogInput, void>(this.fleetManagementApi.saveCatalog, saveCatalogInput);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".propertiesKey\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"propertyValue.propertiesKey\\\"\\r\\n          [disabled]=\\\"!isNewPropertyValue\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" *ngIf=\\\"!isNewPropertyValue\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".isStandard\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-checkbox class=\\\"aw-checkbox\\\" binary=\\\"true\\\" [(ngModel)]=\\\"propertyValue.isStandard\\\" disabled></p-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"propertyValue.locale\\\" class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".enPropertiesValue\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"propertyValue.enPropertiesValue\\\"\\r\\n          [disabled]=\\\"viewModePropertyValue\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"propertyValue.locale\\\" class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".frPropertiesValue\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"propertyValue.frPropertiesValue\\\"\\r\\n          [disabled]=\\\"viewModePropertyValue\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!propertyValue.locale\\\" class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".propertiesValue\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"propertyValue.propertiesValue\\\"\\r\\n          [disabled]=\\\"viewModePropertyValue\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      *ngIf=\\\"!viewModePropertyValue\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"associate()\\\"\\r\\n      [disabled]=\\\"!propertyValue.propertiesKey\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { CatalogPropertiesTableDTO } from '../../../../shared/types/api-output-types/administration-catalog/catalog-properties-table-dto.interface';\r\nimport { DialogComponent } from '../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-property-values-popup',\r\n  templateUrl: './property-values-popup.component.html'\r\n})\r\nexport class PropertyValuesPopupComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  public propertyValue: CatalogPropertiesTableDTO;\r\n\r\n  @Input()\r\n  public viewModePropertyValue: boolean;\r\n\r\n  @Input()\r\n  public isNewPropertyValue: boolean;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<CatalogPropertiesTableDTO>;\r\n\r\n  @Output()\r\n  public onUpdate: EventEmitter<CatalogPropertiesTableDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public constructor() {\r\n    super(ComponentOpenMode.Write, 'PropertyValuesPopup');\r\n\r\n    this.onCreate = new EventEmitter<CatalogPropertiesTableDTO>();\r\n    this.onUpdate = new EventEmitter<CatalogPropertiesTableDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.propertyValue) {\r\n      this.propertyValue = {};\r\n    }\r\n  }\r\n\r\n  public associate(): void {\r\n    if (!!this.propertyValue) {\r\n      if (this.isNewPropertyValue) {\r\n        this.onCreate.emit(this.propertyValue);\r\n        this.display = false;\r\n      } else {\r\n        this.onUpdate.emit(this.propertyValue);\r\n        this.display = false;\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('associate', 'this.propertyValue');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public enableAssociateButton(): boolean {\r\n    if (\r\n      !!this.propertyValue &&\r\n      !!this.propertyValue.propertiesKey &&\r\n      this.propertyValue.propertiesKey.trim().length !== 0\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { GenericComponent } from '../../../../shared/types/generic-component';\r\nimport { CatalogService } from '../catalog.service';\r\n\r\nexport abstract class DynamicCatalog extends GenericComponent {\r\n  protected constructor(public catalogService: CatalogService, openMode: ComponentOpenMode) {\r\n    super(openMode);\r\n\r\n    this.registerMainButtons();\r\n  }\r\n\r\n  private registerMainButtons(): void {\r\n    this.catalogService.setRefreshButton(this.refresh.bind(this));\r\n    this.catalogService.setSaveButton(this.save.bind(this));\r\n    this.catalogService.setCreateButton(this.create.bind(this));\r\n    this.catalogService.setImportButton(this.import.bind(this));\r\n    this.catalogService.setExportButton(this.export.bind(this));\r\n  }\r\n\r\n  protected abstract refresh(): void;\r\n  protected save(): void {\r\n    return;\r\n  }\r\n  protected create(): void {\r\n    return;\r\n  }\r\n  protected import(): void {\r\n    return;\r\n  }\r\n  protected export(): void {\r\n    return;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n          - {{ serializationService.deserialize(componentData.objectId)[\\\"profileName\\\"] }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button *ngIf=\\\"showEditButton() && hasUpdateAccessRight\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"editProfile()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancelProfile()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveProfile()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"reloadProfile()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"page.mainData\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"form-group flex--2\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".profileName\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"aw-input\\\"\\r\\n                    [(ngModel)]=\\\"profileDTO.bidoProfileDTO.profileName\\\"\\r\\n                    maxlength=\\\"100\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group flex--2\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".profileComment\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"aw-input\\\"\\r\\n                    [(ngModel)]=\\\"profileDTO.bidoProfileDTO.profileComment\\\"\\r\\n                    maxlength=\\\"300\\\"\\r\\n                    [disabled]=\\\"isReadOpenMode\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Data Panel -->\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #mainDataAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ getComponentName() + \\\".rights\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell-content\\\" style=\\\"display: block\\\">\\r\\n              <p-accordion [multiple]=\\\"true\\\">\\r\\n                <p-accordionTab *ngFor=\\\"let buildingBlock of profileDTO.buildingBlocks; let blockIndex = index\\\">\\r\\n                  <p-header>\\r\\n                    {{ componentData.componentId + \\\".\\\" + buildingBlock.buildingBlockCode | translate }}\\r\\n                  </p-header>\\r\\n                  <div\\r\\n                    class=\\\"row\\\"\\r\\n                    style=\\\"width: 60%\\\"\\r\\n                    *ngFor=\\\"let usecase of buildingBlock.useCases; let caseIndex = index\\\"\\r\\n                  >\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ usecase.bidoFunctionTypeDTO.functionName }}</label>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-control\\\" style=\\\"margin: auto\\\">\\r\\n                      <p-selectButton\\r\\n                        [ngClass]=\\\"[!usecase.level ? 'noneButton' : 'defaultSelect']\\\"\\r\\n                        [options]=\\\"levelList\\\"\\r\\n                        [(ngModel)]=\\\"usecase.selectedLevelList\\\"\\r\\n                        [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        (onOptionClick)=\\\"levelChangeEvent($event, usecase, blockIndex, caseIndex)\\\"\\r\\n                        multiple=\\\"multiple\\\"\\r\\n                      ></p-selectButton>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </p-accordionTab>\\r\\n              </p-accordion>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host ::ng-deep .noneButton .ui-selectbutton .ui-button.ui-state-active {\\n  background-color: #928f8f;\\n  border-color: #928f8f; }\\n\\n:host ::ng-deep .noneButton .ui-selectbutton .ui-button.ui-state-active:not(.ui-state-disabled):hover {\\n  background-color: #616161;\\n  border-color: #616161; }\\n\\n:host ::ng-deep .defaultSelect .ui-selectbutton .ui-button.ui-state-active {\\n  background-color: #5cb85c;\\n  border-color: #fff; }\\n\\n:host ::ng-deep .defaultSelect .ui-selectbutton .ui-button.ui-state-active:not(.ui-state-disabled):hover {\\n  background-color: #4caf50;\\n  border-color: #4caf50; }\\n\\n:host ::ng-deep .defaultSelect .ui-selectbutton .ui-button {\\n  background-color: #dadada;\\n  border-color: #fff; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi9wcm9maWxlcy1mb3JtL2Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZ2l0aHViX3BhZ2VzL3NyY1xcYXBwXFxtYWluXFxhZG1pbmlzdHJhdGlvblxccHJvZmlsZXMtZm9ybVxccHJvZmlsZXMtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUlRLHlCQUF5QjtFQUN6QixxQkFBcUIsRUFBQTs7QUFMN0I7RUFTUSx5QkFBeUI7RUFDekIscUJBQXFCLEVBQUE7O0FBVjdCO0VBa0JRLHlCQUF5QjtFQUN6QixrQkFBa0IsRUFBQTs7QUFuQjFCO0VBdUJRLHlCQUF5QjtFQUN6QixxQkFBcUIsRUFBQTs7QUF4QjdCO0VBNEJRLHlCQUF5QjtFQUN6QixrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vcHJvZmlsZXMtZm9ybS9wcm9maWxlcy1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIDo6bmctZGVlcCAubm9uZUJ1dHRvbiB7XHJcbiAgICAudWktc2VsZWN0YnV0dG9uIHtcclxuICAgICAgLnVpLWJ1dHRvbi51aS1zdGF0ZS1hY3RpdmUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM5MjhmOGY7XHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjOTI4ZjhmO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAudWktYnV0dG9uLnVpLXN0YXRlLWFjdGl2ZTpub3QoLnVpLXN0YXRlLWRpc2FibGVkKTpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzYxNjE2MTtcclxuICAgICAgICBib3JkZXItY29sb3I6ICM2MTYxNjE7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIDo6bmctZGVlcCAuZGVmYXVsdFNlbGVjdCB7XHJcbiAgICAudWktc2VsZWN0YnV0dG9uIHtcclxuICAgICAgLnVpLWJ1dHRvbi51aS1zdGF0ZS1hY3RpdmUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM1Y2I4NWM7XHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAudWktYnV0dG9uLnVpLXN0YXRlLWFjdGl2ZTpub3QoLnVpLXN0YXRlLWRpc2FibGVkKTpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDtcclxuICAgICAgICBib3JkZXItY29sb3I6ICM0Y2FmNTA7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC51aS1idXR0b24ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkYWRhZGE7XHJcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { BidoProfileConstants } from '../../../shared/constants/bido-profile-constants';\r\nimport { ComponentConstants } from '../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { BidoProfileDTO } from '../../../shared/types/api-types/bido-profile-dto.interface';\r\nimport { ProfileManagementWithUseCaseDTO } from '../../../shared/types/api-types/profile-management-with-use-case-dto.interface';\r\nimport { SaveProfileManagementDTO } from '../../../shared/types/api-types/save-profile-management-dto.interface';\r\nimport { FormPageComponent } from '../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { ProfilesSearchService } from '../profiles-search/profiles-search.service';\r\n\r\nimport { ProfilesFormService } from './profiles-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-profiles-form',\r\n  templateUrl: './profiles-form.component.html',\r\n  styleUrls: ['./profiles-form.component.scss']\r\n})\r\nexport class ProfilesFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public profileDTO: ProfileManagementWithUseCaseDTO;\r\n  public levelList: LabelValue<string>[];\r\n  public selectedLevel: string;\r\n  private profilesTableList: BidoProfileDTO[];\r\n  public activeBlockIndex: number;\r\n  private id: string;\r\n\r\n  public showSaveSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly profilesFormService: ProfilesFormService,\r\n    private readonly profilesSearchService: ProfilesSearchService\r\n  ) {\r\n    super(ComponentOpenMode.Read, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.profileDTO = {\r\n      bidoProfileDTO: {},\r\n      buildingBlocks: []\r\n    };\r\n\r\n    this.profilesTableList = [];\r\n    this.activeBlockIndex = 0;\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_PROFILES_FORM;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    if (!!this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n\r\n      const context = !!this.componentData.objectId\r\n        ? this.serializationService.deserialize(this.componentData.objectId).profileName\r\n        : 'tab.createMode';\r\n      this.displayComponentContext(context, this.isCreateOpenMode);\r\n\r\n      this.fillDropDown();\r\n      // tslint:disable-next-line:no-empty\r\n      this.loadAllProfiles(() => {});\r\n\r\n      // In case view is performed from search\r\n      if (this.componentData.objectId) {\r\n        this.loadProfile();\r\n      } else {\r\n        this.loadAllBuildingBlocks();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to fill level dropdown\r\n   */\r\n  private fillDropDown() {\r\n    this.profilesFormService.getUseCasesAccessDegrees().subscribe((result) => {\r\n      this.levelList = result;\r\n\r\n      this.levelList.unshift({\r\n        label: 'None',\r\n        value: 'undefined'\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load all building block with default level selected\r\n   */\r\n  private loadAllBuildingBlocks() {\r\n    this.profilesFormService.findBuildingBlocksForProfile().subscribe((result) => {\r\n      this.profileDTO.buildingBlocks = result;\r\n      this.alterUseCase(this.profileDTO);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load Profile Data with use cases\r\n   */\r\n  private loadProfile() {\r\n    if (!!this.componentData && !!this.componentData.objectId) {\r\n      const profileName = this.serializationService.deserialize(this.componentData.objectId).profileName;\r\n      this.profilesFormService.findProfileWithUseCasesByName(profileName).subscribe((result) => {\r\n        this.alterUseCase(result);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method is responsible for converting\r\n   * use case of each profile to array form as select button takes array of selection\r\n   */\r\n  private alterUseCase(profileDTO: ProfileManagementWithUseCaseDTO) {\r\n    this.profileDTO = profileDTO;\r\n    this.profileDTO.buildingBlocks.forEach((result) => {\r\n      result.useCases.forEach((res) => {\r\n        res.selectedLevelList = this.returnLevelList(res.level);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change affected, level, selectedLevelList in case level is selected\r\n   */\r\n  public levelChangeEvent(ev, usecase, blockIndex, caseIndex) {\r\n    const uc = { ...usecase };\r\n    uc.affected = ev.option.label === 'None' ? false : true;\r\n    uc.level = ev.option.label === 'None' ? undefined : ev.option.value;\r\n    uc.selectedLevelList = [...this.returnLevelList(ev.option.value)];\r\n    this.profileDTO.buildingBlocks[blockIndex].useCases[caseIndex] = uc;\r\n  }\r\n\r\n  /**\r\n   * This method is responsible for returning sub level list selected for a particular level\r\n   */\r\n  // tslint:disable-next-line:no-any\r\n  private returnLevelList(level): any[] {\r\n    const selectedLevelList: string[] = [];\r\n\r\n    // If level is undefined, show \"none\" selecectd\r\n    if (!level) {\r\n      return [undefined];\r\n    }\r\n\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < this.levelList.length; i++) {\r\n      if (this.levelList[i].value !== level) {\r\n        selectedLevelList.push(this.levelList[i].value);\r\n      } else {\r\n        selectedLevelList.push(this.levelList[i].value);\r\n        break;\r\n      }\r\n    }\r\n\r\n    return selectedLevelList;\r\n  }\r\n\r\n  /**\r\n   * Edit Profile\r\n   */\r\n  public editProfile(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  /**\r\n   * Reload screen\r\n   */\r\n  public reloadProfile(): void {\r\n    this.loadProfile();\r\n  }\r\n\r\n  /**\r\n   * Save Profile State\r\n   */\r\n  public saveProfile() {\r\n    // Validation for blank check\r\n    if (!this.profileDTO.bidoProfileDTO.profileName) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingProfileName'));\r\n\r\n      return false;\r\n    }\r\n    if (this.profileDTO.bidoProfileDTO.profileName.trim().length === 0) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingProfileName'));\r\n\r\n      return false;\r\n    }\r\n\r\n    // Loading all profiles\r\n    this.loadAllProfiles(() => {\r\n      if (this.profileDTO.bidoProfileDTO.profileName) {\r\n        this.profileDTO.bidoProfileDTO.profileName = this.profileDTO.bidoProfileDTO.profileName.trim();\r\n      }\r\n\r\n      this.profileDTO.bidoProfileDTO.profileComment = this.profileDTO.bidoProfileDTO.profileComment\r\n        ? this.profileDTO.bidoProfileDTO.profileComment.trim()\r\n        : '';\r\n\r\n      // Validation to chk if profile already exist\r\n      if (this.validateScreen()) {\r\n        // Creating save DTO\r\n        const saveProfileManagementDTO: SaveProfileManagementDTO = {\r\n          bidoProfileDTO: this.profileDTO.bidoProfileDTO,\r\n          buildingBlocks: this.profileDTO.buildingBlocks,\r\n          isForUpdate: !!this.componentData && this.componentData.openMode === ComponentOpenMode.Create ? false : true\r\n        };\r\n\r\n        this.showSaveSpinner = true;\r\n        this.profilesFormService.saveProfile(saveProfileManagementDTO).subscribe(\r\n          () => {\r\n            if (!!this.componentData && !!this.profileDTO.bidoProfileDTO.profileName) {\r\n              this.updateOpenMode(ComponentOpenMode.Read);\r\n              // Update component object\r\n              const profileFormId: BidoProfileDTO = {\r\n                profileName: this.profileDTO.bidoProfileDTO.profileName\r\n              };\r\n              this.componentData.objectId = this.serializationService.serialize(profileFormId);\r\n\r\n              this.displayComponentContext(this.profileDTO.bidoProfileDTO.profileName, this.isCreateOpenMode);\r\n              this.profilesTableList.push(this.profileDTO.bidoProfileDTO);\r\n\r\n              // Assign id to added profile\r\n              if (!this.id) {\r\n                this.returnProfileId(this.profileDTO.bidoProfileDTO.profileName, (id) => {\r\n                  this.id = id.profileId;\r\n                });\r\n              }\r\n              this.messageService.showSuccessMessage(this.getTranslateKey('successOnCreateProfile'));\r\n            } else {\r\n              super.throwUnboundLocalError('saveProfile', 'this.profileDTO.bidoProfileDTO.profileName');\r\n            }\r\n            this.showSaveSpinner = false;\r\n          },\r\n          (error) => {\r\n            this.showSaveSpinner = false;\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Validate Screen\r\n   */\r\n  private validateScreen(): boolean {\r\n    try {\r\n      if (!!this.componentData) {\r\n        let isFound = false;\r\n\r\n        // Check if profile alreeady exist or not\r\n        const profileName = this.profileDTO.bidoProfileDTO.profileName;\r\n        this.profilesTableList.forEach((result) => {\r\n          if (!!result.profileName && result.profileName.trim() === profileName) {\r\n            isFound = true;\r\n          }\r\n        });\r\n\r\n        if (isFound) {\r\n          if (this.componentData.openMode === ComponentOpenMode.Create) {\r\n            this.messageService.showWarningMessage(this.getTranslateKey('profileAlreadyExist'));\r\n\r\n            return false;\r\n          } else {\r\n            if (this.componentData.objectId) {\r\n              if (this.serializationService.deserialize(this.componentData.objectId).profileId) {\r\n                let found = false;\r\n                this.profilesTableList.forEach((res) => {\r\n                  if (\r\n                    !!this.componentData &&\r\n                    !!this.componentData.objectId &&\r\n                    res.profileName === profileName &&\r\n                    res.profileId !== this.serializationService.deserialize(this.componentData.objectId).profileId\r\n                  ) {\r\n                    found = true;\r\n                  }\r\n                });\r\n\r\n                if (found) {\r\n                  this.messageService.showWarningMessage(this.getTranslateKey('profileAlreadyExist'));\r\n\r\n                  return false;\r\n                } else {\r\n                  // Case of update\r\n                  this.componentData.openMode = ComponentOpenMode.Write;\r\n                }\r\n              } else {\r\n                if (this.id) {\r\n                  this.profileDTO.bidoProfileDTO.profileId = this.id;\r\n                }\r\n                this.componentData.openMode = ComponentOpenMode.Write;\r\n              }\r\n            } else {\r\n              this.profileDTO.bidoProfileDTO.profileId = this.id;\r\n              this.componentData.openMode = ComponentOpenMode.Write;\r\n            }\r\n          }\r\n        } else {\r\n          // If only name is changed and profile ID exist\r\n          if (this.componentData.objectId) {\r\n            if (this.serializationService.deserialize(this.componentData.objectId).profileId) {\r\n              this.profileDTO.bidoProfileDTO.profileId = this.serializationService.deserialize(\r\n                this.componentData.objectId\r\n              ).profileId;\r\n              this.componentData.openMode = ComponentOpenMode.Write;\r\n            } else {\r\n              // loop of profile list\r\n              this.profilesTableList.forEach((res) => {\r\n                if (res.profileName === res.profileName) {\r\n                  this.profileDTO.bidoProfileDTO.profileId = res.profileId;\r\n                }\r\n              });\r\n              this.componentData.openMode = ComponentOpenMode.Write;\r\n            }\r\n          } else if (!this.componentData.objectId && this.componentData.openMode === ComponentOpenMode.Write) {\r\n            this.profilesTableList.forEach((res) => {\r\n              if (res.profileName === profileName) {\r\n                // In case of update where profile name is not same, update profile name\r\n                this.profileDTO.bidoProfileDTO.profileId = res.profileId;\r\n              }\r\n            });\r\n            this.componentData.openMode = ComponentOpenMode.Write;\r\n          }\r\n        }\r\n      }\r\n      // tslint:disable-next-line:no-empty\r\n    } catch (err) {}\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * This is responsible for returning profile id by profile name\r\n   */\r\n  private returnProfileId(name, callback) {\r\n    this.profilesSearchService.findAllBidoProfiles().subscribe((result) => {\r\n      this.profilesTableList = result;\r\n      let profile;\r\n      result.forEach((res) => {\r\n        if (res.profileName === name) {\r\n          profile = res;\r\n        }\r\n      });\r\n      callback(profile);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Service call to fetch list of all profiles\r\n   */\r\n  private loadAllProfiles(callback) {\r\n    this.profilesSearchService.findAllBidoProfiles().subscribe((result) => {\r\n      this.profilesTableList = result;\r\n      callback();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Cancel changes made to profile\r\n   */\r\n  public cancelProfile() {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n    this.reloadProfile();\r\n  }\r\n\r\n  public onTabOpen(e) {\r\n    this.activeBlockIndex = e.index;\r\n  }\r\n\r\n  public showEditButton(): boolean {\r\n    let toReturn: boolean = this.isReadOpenMode;\r\n    if (toReturn) {\r\n      if (!!this.profileDTO.bidoProfileDTO.profileId) {\r\n        toReturn = this.profileDTO.bidoProfileDTO.profileId !== BidoProfileConstants.ADMINISTRATOR_PROFILE_ID;\r\n      }\r\n    }\r\n\r\n    return toReturn;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserProfileManagementApi } from '../../../shared/api/user-profile-management.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { ProfileBuildingBlockDTO } from '../../../shared/types/api-types/profile-building-block-dto.interface';\r\nimport { ProfileManagementWithUseCaseDTO } from '../../../shared/types/api-types/profile-management-with-use-case-dto.interface';\r\nimport { SaveProfileManagementDTO } from '../../../shared/types/api-types/save-profile-management-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class ProfilesFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly userProfileManagementApi: UserProfileManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findProfileWithUseCasesByName(profileName: string): Observable<ProfileManagementWithUseCaseDTO> {\r\n    return super.post<string, ProfileManagementWithUseCaseDTO>(\r\n      this.userProfileManagementApi.findProfileWithUseCasesByName,\r\n      profileName\r\n    );\r\n  }\r\n\r\n  public findBuildingBlocksForProfile(): Observable<ProfileBuildingBlockDTO[]> {\r\n    return super.post<void, ProfileBuildingBlockDTO[]>(this.userProfileManagementApi.findBuildingBlocksForProfile);\r\n  }\r\n\r\n  public getUseCasesAccessDegrees(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.userProfileManagementApi.getUseCasesAccessDegrees);\r\n  }\r\n\r\n  public saveProfile(saveProfileManagementDTO: SaveProfileManagementDTO) {\r\n    return super.post<SaveProfileManagementDTO, void>(\r\n      this.userProfileManagementApi.saveProfile,\r\n      saveProfileManagementDTO\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ \\\"page.searchPage\\\" | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewProfile()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button type=\\\"button\\\" mat-menu-item (click)=\\\"refresh()\\\">\\r\\n        {{ \\\"global.refresh\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }} ({{ profilesTableDataSource.dataCount }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <a-table [dataSource]=\\\"profilesTableDataSource\\\">\\r\\n                <ng-template tableActionsDef let-selectedProfile=\\\"selectedData\\\">\\r\\n                  <button\\r\\n                    *ngIf=\\\"profilesTableDataSource.hasData && !profilesTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportTable()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"hasManageAccessRight && profilesTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteSelectedProfiles()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"profilesTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openSelectedProfiles()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vcHJvZmlsZXMtc2VhcmNoL3Byb2ZpbGVzLXNlYXJjaC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../shared/components/table/table-data-source';\r\nimport { ComponentConstants } from '../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { ExportService } from '../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { BidoProfileDTOId } from '../../../shared/types/api-types/bido-profile-dto-id.interface';\r\nimport { BidoProfileDTO } from '../../../shared/types/api-types/bido-profile-dto.interface';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { StringUtils } from '../../../shared/utils/string-utils';\r\n\r\nimport { ProfilesSearchService } from './profiles-search.service';\r\n\r\n@Component({\r\n  selector: 'aw-profiles-search',\r\n  templateUrl: './profiles-search.component.html',\r\n  styleUrls: ['./profiles-search.component.scss']\r\n})\r\nexport class ProfilesSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  private static readonly CUSTOMER_TABLE_EXPORT_NAME: string = 'ProfilesSearchList';\r\n\r\n  public profilesTableDataSource: TableDataSource<BidoProfileDTO>;\r\n  public isLoading: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly exportService: ExportService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly profilesSearchService: ProfilesSearchService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n\r\n    this.initProfilesTableDataSource();\r\n    this.isLoading = false;\r\n  }\r\n\r\n  private initProfilesTableDataSource(): void {\r\n    this.profilesTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns:  [\r\n        {\r\n          field: 'profileName',\r\n          translateKey: this.getTranslateKey('profileName'),\r\n          alignment: ColumnAlignment.LEFT\r\n        },\r\n        {\r\n          field: 'profileComment',\r\n          translateKey: this.getTranslateKey('profileComment'),\r\n          alignment: ColumnAlignment.LEFT\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_PROFILES_SEARCH;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.displayComponentContext('global.search', true);\r\n    this.loadAllProfiles();\r\n  }\r\n\r\n  /**\r\n   * Service call to fetch list of all profiles\r\n   */\r\n  private loadAllProfiles() {\r\n    this.isLoading = true;\r\n    this.profilesSearchService.findAllBidoProfiles().subscribe((result) => {\r\n      const sortedResult = (!!result\r\n        ? result.sort(\r\n            (n1, n2): number => {\r\n              if (n1.profileName && n2.profileName) {\r\n                if (n1.profileName > n2.profileName) {\r\n                  return 1;\r\n                }\r\n                if (n1.profileName < n2.profileName) {\r\n                  return -1;\r\n                }\r\n              }\r\n\r\n              return 0;\r\n            }\r\n          )\r\n        : result);\r\n      this.profilesTableDataSource.setData(sortedResult);\r\n      this.profilesTableDataSource.update();\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Open selected profiles\r\n   */\r\n  public openSelectedProfiles(): void {\r\n    this.profilesTableDataSource.dataSelection.forEach((profile) => {\r\n      if (!!profile) {\r\n        if (StringUtils.isNullOrEmpty(profile.profileId)) {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingCustomerCode'));\r\n        } else {\r\n          this.openProfile(profile.profileName, ComponentOpenMode.Read);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open Profiles\r\n   */\r\n  private openProfile(objectId: string | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.ADM_PROFILES_FORM,\r\n      openMode\r\n    };\r\n    if (!!objectId) {\r\n      const profileFormId: BidoProfileDTO = {\r\n        profileName: objectId\r\n      };\r\n      data.objectId = this.serializationService.serialize(profileFormId);\r\n    }\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  /**\r\n   * Export table data to excel\r\n   */\r\n  public exportTable(): void {\r\n    const list: BidoProfileDTO[] = [];\r\n    this.profilesTableDataSource.dataSrc.forEach((res) => {\r\n      list.push({\r\n        profileName: res.profileName,\r\n        profileComment: res.profileComment\r\n      });\r\n    });\r\n\r\n    if (!!this.componentData) {\r\n      this.exportService.toExcel(\r\n        list,\r\n        ProfilesSearchComponent.CUSTOMER_TABLE_EXPORT_NAME,\r\n        this.componentData.componentId\r\n      );\r\n    } else {\r\n      super.throwUnboundLocalError('exportTable', 'this.componentData');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete Selected profiles\r\n   */\r\n  public deleteSelectedProfiles(): void {\r\n    const confirmMessageKey =\r\n    this.profilesTableDataSource.dataSelectionCount > 1 ?\r\n       'confirmDeleteSelectedProfiles' : 'confirmDeleteSelectedProfile';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(confirmMessageKey),\r\n      accept: () => {\r\n        const selectedProfilesToDelete: BidoProfileDTOId[] = [];\r\n        this.profilesTableDataSource.dataSelection.forEach((profile) => {\r\n          if (!!profile && !!profile.profileId) {\r\n            const bidoProfileDTOId: BidoProfileDTOId = {\r\n              profileId: profile.profileId\r\n            };\r\n            if (!!bidoProfileDTOId) {\r\n              selectedProfilesToDelete.push(bidoProfileDTOId);\r\n            } else {\r\n              super.throwUnboundLocalError('deleteSelectedProfiles', 'bidoProfileDTOId');\r\n            }\r\n          }\r\n        });\r\n\r\n        this.profilesSearchService.removeProfile(selectedProfilesToDelete).subscribe(() => {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteProfile'));\r\n          this.loadAllProfiles();\r\n        });\r\n        this.profilesTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create new Profile\r\n   */\r\n  public openNewProfile(): void {\r\n    this.openProfile(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  /**\r\n   * Event to trigger refresh\r\n   */\r\n  public refresh(): void {\r\n    this.profilesTableDataSource.dataSelection = [];\r\n    this.loadAllProfiles();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserProfileManagementApi } from '../../../shared/api/user-profile-management.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { BidoProfileDTOId } from '../../../shared/types/api-types/bido-profile-dto-id.interface';\r\nimport { BidoProfileDTO } from '../../../shared/types/api-types/bido-profile-dto.interface';\r\n\r\n@Injectable()\r\nexport class ProfilesSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly userProfileManagementApi: UserProfileManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findAllBidoProfiles(): Observable<BidoProfileDTO[]> {\r\n    return super.post<void, BidoProfileDTO[]>(this.userProfileManagementApi.findAllBidoProfiles);\r\n  }\r\n\r\n  public removeProfile(bidoProfileDTOIdList: BidoProfileDTOId[]) {\r\n    return super.post<BidoProfileDTOId[], void>(this.userProfileManagementApi.removeProfile, bidoProfileDTOIdList);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      {{ componentData.componentId + \\\".title\\\" | translate }}({{\\r\\n        familyTableDataSource ? familyTableDataSource.dataCount : 0\\r\\n      }})\\r\\n    </div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <a-table [dataSource]=\\\"familyTableDataSource\\\"> </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"associate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidoFunctionTypeDTO } from '../../../../../shared/types/api-types/bido-function-type-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\nimport { UsersFormService } from '../../users-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-assign-family-popup-form',\r\n  templateUrl: './assign-family-popup-form.component.html',\r\n  styleUrls: ['../popup-form.component.scss']\r\n})\r\nexport class AssignFamiliesPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n  @Input('component-data')\r\n  public componentData: PopupEntry<BidoFunctionTypeDTO[]>;\r\n  @Output()\r\n  public onValidated: EventEmitter<BidoFunctionTypeDTO[]>;\r\n  public displayValue: boolean;\r\n  public isEditable: boolean;\r\n  public familyTableDataSource: TableDataSource<BidoFunctionTypeDTO>;\r\n\r\n  public constructor(\r\n    public messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService,\r\n    public usersFormService: UsersFormService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'AssignFamiliesPopupFormComponent');\r\n    this.onValidated = new EventEmitter<BidoFunctionTypeDTO[]>();\r\n    this.displayChange = new EventEmitter<boolean>();\r\n\r\n    this.initFamilyTableDataSource();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadFamilies();\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'AssignFamiliesPopupFormComponent';\r\n  }\r\n\r\n  public associate(): void {\r\n    this.onValidated.emit(this.familyTableDataSource.dataSelection);\r\n    this.closeDialog();\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private initFamilyTableDataSource(): void {\r\n    this.familyTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'functionCode',\r\n          translateKey: this.getTranslateKey('functionCode'),\r\n          alignment: ColumnAlignment.LEFT\r\n        },\r\n        {\r\n          field: 'functionName',\r\n          translateKey: this.getTranslateKey('functionName'),\r\n          alignment: ColumnAlignment.LEFT\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private loadFamilies(): void {\r\n    const input = 'FAMILY';\r\n    let families: BidoFunctionTypeDTO[] = [];\r\n    this.usersFormService.findAllBidoFunctionTypesByModule(input).subscribe((results) => {\r\n      results.forEach((element) => {\r\n        families.push(element.bidoFunctionTypeDTO);\r\n      });\r\n\r\n      if (families.length > 0) {\r\n        families = families.sort((n1, n2): number => {\r\n          if (n1.functionCode && n2.functionCode) {\r\n            if (n1.functionCode.toLowerCase().trim() > n2.functionCode.toLowerCase().trim()) {\r\n              return 1;\r\n            }\r\n            if (n1.functionCode.toLowerCase().trim() < n2.functionCode.toLowerCase().trim()) {\r\n              return -1;\r\n            }\r\n          }\r\n\r\n          return 0;\r\n        });\r\n      }\r\n      this.familyTableDataSource.setData(families);\r\n      if (!!this.componentData) {\r\n        const functionCodes = (this.componentData.object as BidoFunctionTypeDTO[]).map(\r\n          (operator) => operator.functionCode\r\n        );\r\n        this.familyTableDataSource.dataSelection = this.familyTableDataSource.dataSrc.filter((operator) =>\r\n          functionCodes.includes(operator.functionCode)\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      {{ componentData.componentId + \\\".title\\\" | translate }}({{\\r\\n        operatorTableDataSource ? operatorTableDataSource.dataCount : 0\\r\\n      }})\\r\\n    </div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <a-table [dataSource]=\\\"operatorTableDataSource\\\"> </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"associate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidoFunctionTypeDTO } from '../../../../../shared/types/api-types/bido-function-type-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\nimport { UsersFormService } from '../../users-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-assign-operator-popup-form',\r\n  templateUrl: './assign-operator-popup-form.component.html',\r\n  styleUrls: ['../popup-form.component.scss']\r\n})\r\nexport class AssignOperatorsPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n  @Output()\r\n  public onValidated: EventEmitter<BidoFunctionTypeDTO[]>;\r\n  @Input('component-data')\r\n  public componentData: PopupEntry<BidoFunctionTypeDTO[]>;\r\n  public displayValue: boolean;\r\n  public isEditable: boolean;\r\n  public operatorTableDataSource: TableDataSource<BidoFunctionTypeDTO>;\r\n\r\n  public constructor(\r\n    public messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService,\r\n    public usersFormService: UsersFormService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'AssignOperatorsPopupFormComponent');\r\n    this.onValidated = new EventEmitter<BidoFunctionTypeDTO[]>();\r\n    this.displayChange = new EventEmitter<boolean>();\r\n\r\n    this.initOperatorTableDataSource();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadOperators();\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'AssignOperatorsPopupFormComponent';\r\n  }\r\n\r\n  public associate(): void {\r\n    this.onValidated.emit(this.operatorTableDataSource.dataSelection);\r\n    this.closeDialog();\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private initOperatorTableDataSource(): void {\r\n    this.operatorTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'functionCode',\r\n          translateKey: this.getTranslateKey('functionCode'),\r\n          alignment: ColumnAlignment.LEFT\r\n        },\r\n        {\r\n          field: 'functionName',\r\n          translateKey: this.getTranslateKey('functionName'),\r\n          alignment: ColumnAlignment.LEFT\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private loadOperators(): void {\r\n    const input = 'OPERATOR';\r\n    let operators: BidoFunctionTypeDTO[] = [];\r\n    this.usersFormService.findAllBidoFunctionTypesByModule(input).subscribe((results) => {\r\n      results.forEach((element) => {\r\n        operators.push(element.bidoFunctionTypeDTO);\r\n      });\r\n\r\n      if (operators.length > 0) {\r\n        operators = operators.sort((n1, n2): number => {\r\n          if (n1.functionCode && n2.functionCode) {\r\n            if (n1.functionCode.toLowerCase().trim() > n2.functionCode.toLowerCase().trim()) {\r\n              return 1;\r\n            }\r\n            if (n1.functionCode.toLowerCase().trim() < n2.functionCode.toLowerCase().trim()) {\r\n              return -1;\r\n            }\r\n          }\r\n\r\n          return 0;\r\n        });\r\n      }\r\n      this.operatorTableDataSource.setData(operators);\r\n      if (!!this.componentData) {\r\n        const functionCodes = (this.componentData.object as BidoFunctionTypeDTO[]).map(\r\n          (operator) => operator.functionCode\r\n        );\r\n        this.operatorTableDataSource.dataSelection = this.operatorTableDataSource.dataSrc.filter((operator) =>\r\n          functionCodes.includes(operator.functionCode)\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"80\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      {{ componentData.componentId + \\\".title\\\" | translate }} ({{ tableDataSource.dataCount }})\\r\\n    </div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <a-table [dataSource]=\\\"tableDataSource\\\">\\r\\n          <ng-template columnDef=\\\"affected\\\" let-rowData=\\\"rowData\\\">\\r\\n            <i class=\\\"fa fa-fw fa-check\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"rowData.affected\\\"></i>\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"associate()\\\"\\r\\n      [disabled]=\\\"tableDataSource.dataSelectionCount === 0\\\"\\r\\n    >\\r\\n      {{ \\\"validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidoProfileDTO } from '../../../../../shared/types/api-types/bido-profile-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\nimport { UsersFormService } from '../../users-form.service';\r\n\r\ninterface Profile extends BidoProfileDTO {\r\n  affected: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-assign-profile-popup-form',\r\n  templateUrl: './assign-profile-popup-form.component.html',\r\n  styleUrls: ['../popup-form.component.scss']\r\n})\r\nexport class AssignProfilesPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public componentData: PopupEntry<BidoProfileDTO[]>;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BidoProfileDTO[]>;\r\n\r\n  public tableDataSource: TableDataSource<Profile>;\r\n\r\n  public constructor(\r\n    public messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService,\r\n    public usersFormService: UsersFormService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'AssignProfilesPopupFormComponent');\r\n\r\n    this.onValidated = new EventEmitter<BidoProfileDTO[]>();\r\n\r\n    this.tableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      itemsPerPage: 15,\r\n      columns: [\r\n        { field: 'profileName', translateKey: this.getTranslateKey('profileName'), width: '45%' },\r\n        { field: 'profileComment', translateKey: this.getTranslateKey('profileComment'), width: '45%' },\r\n        {\r\n          field: 'affected',\r\n          translateKey: this.getTranslateKey('affected'),\r\n          alignment: ColumnAlignment.CENTER,\r\n          width: '10%'\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadProfiles();\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'AssignProfilesPopupFormComponent';\r\n  }\r\n\r\n  public associate(): void {\r\n    const bidoProfilesSelection = this.tableDataSource.dataSelection.map((profile) => {\r\n      const bidoProfile: BidoProfileDTO = {\r\n        profileId: profile.profileId,\r\n        profileName: profile.profileName,\r\n        profileComment: profile.profileComment\r\n      };\r\n\r\n      return bidoProfile;\r\n    });\r\n    this.onValidated.emit(bidoProfilesSelection);\r\n\r\n    this.closeDialog();\r\n  }\r\n\r\n  private loadProfiles(): void {\r\n    this.usersFormService.findAllBidoProfiles().subscribe({\r\n      next: (bidoProfiles) => {\r\n        const currentBidoProfiles =\r\n          (this.componentData && this.componentData.object && this.componentData.object) || [];\r\n\r\n        const profiles = bidoProfiles\r\n          .map((bidoProfile) => {\r\n            const profile: Profile = {\r\n              profileId: bidoProfile.profileId,\r\n              profileName: bidoProfile.profileName,\r\n              profileComment: bidoProfile.profileComment,\r\n              affected: currentBidoProfiles.some(\r\n                (currentBidoProfile) => currentBidoProfile.profileId === bidoProfile.profileId\r\n              )\r\n            };\r\n\r\n            return profile;\r\n          })\r\n          .sort((p1, p2) => {\r\n            if (p1.profileName && p2.profileName) {\r\n              return p1.profileName.localeCompare(p2.profileName);\r\n            }\r\n\r\n            return 0;\r\n          });\r\n\r\n        this.tableDataSource.setData(profiles);\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      {{ componentData.componentId + \\\".title\\\" | translate }}({{\\r\\n        siteTableDataSource ? siteTableDataSource.dataCount : 0\\r\\n      }})\\r\\n    </div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <a-table [dataSource]=\\\"siteTableDataSource\\\"> </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"associate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ColumnAlignment, TableDataSource } from '../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidoFunctionTypeDTO } from '../../../../../shared/types/api-types/bido-function-type-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\nimport { UsersFormService } from '../../users-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-assign-site-popup-form',\r\n  templateUrl: './assign-site-popup-form.component.html',\r\n  styleUrls: ['../popup-form.component.scss']\r\n})\r\nexport class AssignSitesPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public onValidated: EventEmitter<BidoFunctionTypeDTO[]>;\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n  @Input('component-data')\r\n  public componentData: PopupEntry<BidoFunctionTypeDTO[]>;\r\n\r\n  public displayValue: boolean;\r\n  public isEditable: boolean;\r\n  public siteTableDataSource: TableDataSource<BidoFunctionTypeDTO>;\r\n  public showReportPopup: boolean;\r\n\r\n  public constructor(\r\n    public messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService,\r\n    public usersFormService: UsersFormService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'AssignSitesPopupFormComponent');\r\n    this.onValidated = new EventEmitter<BidoFunctionTypeDTO[]>();\r\n    this.displayChange = new EventEmitter<boolean>();\r\n\r\n    this.initSiteTableDataSource();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadSites();\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'AssignSitesPopupFormComponent';\r\n  }\r\n\r\n  public associate(): void {\r\n    this.onValidated.emit(this.siteTableDataSource.dataSelection);\r\n    this.closeDialog();\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private initSiteTableDataSource(): void {\r\n    this.siteTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'functionCode',\r\n          translateKey: this.getTranslateKey('functionCode'),\r\n          alignment: ColumnAlignment.LEFT\r\n        },\r\n        {\r\n          field: 'functionName',\r\n          translateKey: this.getTranslateKey('functionName'),\r\n          alignment: ColumnAlignment.LEFT\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private loadSites(): void {\r\n    const input = 'SITE';\r\n    let sites: BidoFunctionTypeDTO[] = [];\r\n    this.usersFormService.findAllBidoFunctionTypesByModule(input).subscribe((results) => {\r\n      results.forEach((element) => {\r\n        sites.push(element.bidoFunctionTypeDTO);\r\n      });\r\n\r\n      if (sites.length > 0) {\r\n        sites = sites.sort((n1, n2): number => {\r\n          if (n1.functionCode && n2.functionCode) {\r\n            if (n1.functionCode.toLowerCase().trim() > n2.functionCode.toLowerCase().trim()) {\r\n              return 1;\r\n            }\r\n            if (n1.functionCode.toLowerCase().trim() < n2.functionCode.toLowerCase().trim()) {\r\n              return -1;\r\n            }\r\n          }\r\n\r\n          return 0;\r\n        });\r\n      }\r\n      this.siteTableDataSource.setData(sites);\r\n      if (!!this.componentData) {\r\n        const functionCodes = (this.componentData.object as BidoFunctionTypeDTO[]).map(\r\n          (operator) => operator.functionCode\r\n        );\r\n        this.siteTableDataSource.dataSelection = this.siteTableDataSource.dataSrc.filter((operator) =>\r\n          functionCodes.includes(operator.functionCode)\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".client\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"clientList\\\"\\r\\n          [(ngModel)]=\\\"clients.bidMandant\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".sapUser\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" maxlength=\\\"12\\\" [(ngModel)]=\\\"clients.sapUser\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"add()\\\"\\r\\n      [ngClass]=\\\"{ inactive: !enableAssociateButton() }\\\"\\r\\n      [disabled]=\\\"!enableAssociateButton()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vdXNlcnMtZm9ybS9wb3B1cHMvY2xpZW50cy1mb3JtLXBvcHVwL2NsaWVudHMtZm9ybS1wb3B1cC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { LoginService } from '../../../../../login/login.service';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { ValidateSapUserInput } from '../../../../../shared/types/api-input-types/administration-users/bido-user-check-sap-user-input.interface';\r\nimport { BidoMandantUserDTO } from '../../../../../shared/types/api-types/bido-mandant-user-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { ListUtils } from '../../../../../shared/utils/list-utils';\r\nimport { SelectItemUtils } from '../../../../../shared/utils/select-item-utils';\r\nimport { UsersFormService } from '../../users-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-clients-form-popup',\r\n  templateUrl: './clients-form-popup.component.html',\r\n  styleUrls: ['./clients-form-popup.component.scss']\r\n})\r\nexport class ClientsFormPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public clients: BidoMandantUserDTO;\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n\r\n  @Output()\r\n  public onAdded: EventEmitter<BidoMandantUserDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public selectedClients: BidoMandantUserDTO[];\r\n  public clientList: SelectItem[];\r\n  public selectedClientValue: string;\r\n\r\n  public constructor(\r\n    private readonly loginService: LoginService,\r\n    private readonly messageService: MessageService,\r\n    private readonly usersFormService: UsersFormService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'ClientsFormPopupComponent');\r\n\r\n    this.onAdded = new EventEmitter<BidoMandantUserDTO>();\r\n    this.selectedClients = [];\r\n    this.clientList = [];\r\n    this.selectedClientValue = '';\r\n    this.loadClientList();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.clients) {\r\n      this.clients = {};\r\n    }\r\n  }\r\n\r\n  public add(): void {\r\n    if (!!this.clients && this.clients.sapUser) {\r\n      const input: ValidateSapUserInput = {\r\n        client: this.clients.bidMandant,\r\n        userName: this.clients.sapUser\r\n      };\r\n      this.usersFormService.checkSapUser(input).subscribe(\r\n        (result) => {\r\n          if (result) {\r\n            this.onAdded.emit(this.clients);\r\n            this.display = false;\r\n          } else {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnSapUser'));\r\n          }\r\n        },\r\n        (error) => {\r\n          this.display = false;\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnSapUser'));\r\n        }\r\n      );\r\n    } else {\r\n      this.onAdded.emit(this.clients);\r\n      this.display = false;\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n  private loadClientList(): void {\r\n    this.loginService.getClients().subscribe((results) => {\r\n      this.clientList = !!results ? SelectItemUtils.fromKeyValues(results) : [];\r\n      if (!!this.clients) {\r\n        this.clients.bidMandant = ListUtils.isEmpty(this.clientList) ? '' : this.clientList[0].value;\r\n      }\r\n    });\r\n  }\r\n\r\n  public enableAssociateButton(): boolean {\r\n    if (!!this.clients && !!this.clients.bidMandant && this.clients.bidMandant.trim().length !== 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \":host .item-textbox {\\n  width: 5rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi91c2Vycy1mb3JtL3BvcHVwcy9kOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGdpdGh1Yl9wYWdlcy9zcmNcXGFwcFxcbWFpblxcYWRtaW5pc3RyYXRpb25cXHVzZXJzLWZvcm1cXHBvcHVwc1xccG9wdXAtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vdXNlcnMtZm9ybS9wb3B1cHMvcG9wdXAtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAuaXRlbS10ZXh0Ym94IHtcclxuICAgIHdpZHRoOiA1cmVtO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n          - {{ serializationService.deserialize(componentData.objectId)[\\\"firstname\\\"] }}\\r\\n          {{ serializationService.deserialize(componentData.objectId)[\\\"lastname\\\"] }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"editUsers()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancelUsers()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveUsers()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"reloadUsers()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <!-- MAIN INFORMATION -->\\r\\n            <div #mainDataAnchor class=\\\"grid-cell--7\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ \\\"page.mainData\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".firstName\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"aw-input\\\"\\r\\n                        maxlength=\\\"50\\\"\\r\\n                        [(ngModel)]=\\\"generalTabFieldData.firstname\\\"\\r\\n                        [disabled]=\\\"isReadOpenMode\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".lastName\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"aw-input\\\"\\r\\n                        maxlength=\\\"50\\\"\\r\\n                        [(ngModel)]=\\\"generalTabFieldData.lastname\\\"\\r\\n                        [disabled]=\\\"isReadOpenMode\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ \\\"global.login\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"aw-input\\\"\\r\\n                        maxlength=\\\"100\\\"\\r\\n                        [(ngModel)]=\\\"generalTabFieldData.login\\\"\\r\\n                        [disabled]=\\\"isReadOpenMode\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--5\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".password\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode && isCreateOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".password\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"password\\\"\\r\\n                            maxlength=\\\"50\\\"\\r\\n                            [(ngModel)]=\\\"generalTabFieldData.password\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode && isCreateOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".confirmPassword\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"password\\\"\\r\\n                            maxlength=\\\"50\\\"\\r\\n                            [(ngModel)]=\\\"confirmPassword\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.general\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".email\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            maxlength=\\\"100\\\"\\r\\n                            [(ngModel)]=\\\"generalTabFieldData.email\\\"\\r\\n                            type=\\\"email\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".company\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"company\\\"\\r\\n                            [(ngModel)]=\\\"generalTabFieldData.company\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            (onChange)=\\\"onCompanyChanged()\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".employee\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"employee\\\"\\r\\n                            [(ngModel)]=\\\"generalTabFieldData.employee\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".isUserService\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-checkbox\\r\\n                            class=\\\"aw-checkbox\\\"\\r\\n                            binary=\\\"true\\\"\\r\\n                            [(ngModel)]=\\\"generalTabFieldData.isUserService\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-checkbox>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".isUserMobile\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-checkbox\\r\\n                            class=\\\"aw-checkbox\\\"\\r\\n                            binary=\\\"true\\\"\\r\\n                            [(ngModel)]=\\\"generalTabFieldData.isUserMobile\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-checkbox>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".endValidityDate\\\" | translate\\r\\n                        }}</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-calendar\\r\\n                            showButtonBar=\\\"true\\\"\\r\\n                            [monthNavigator]=\\\"true\\\"\\r\\n                            [yearNavigator]=\\\"true\\\"\\r\\n                            [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                            class=\\\"aw-calendar\\\"\\r\\n                            [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                            [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                            [(ngModel)]=\\\"generalTabFieldData.validityDate\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-calendar>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--2\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".comment\\\" | translate }}</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <textarea\\r\\n                            class=\\\"aw-textarea\\\"\\r\\n                            [rows]=\\\"3\\\"\\r\\n                            maxlength=\\\"300\\\"\\r\\n                            pInputTextarea\\r\\n                            [(ngModel)]=\\\"generalTabFieldData.userComment\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          >\\r\\n                          </textarea>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".profiles\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".profilesList\\\" | translate }}\\r\\n                      ({{ profileTableDataSource ? profileTableDataSource.dataCount : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\" *ngIf=\\\"!isReadOpenMode\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"aw-table2\\\">\\r\\n                      <div\\r\\n                        class=\\\"aw-table-header\\\"\\r\\n                        [ngClass]=\\\"{\\r\\n                          'rows-selected': profileTableDataSource && profileTableDataSource.hasDataSelection\\r\\n                        }\\\"\\r\\n                      >\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            *ngIf=\\\"\\r\\n                              !isReadOpenMode && profileTableDataSource && !profileTableDataSource.hasDataSelection\\r\\n                            \\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editProfile()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && profileTableDataSource && profileTableDataSource.hasDataSelection\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"disassociateProfile()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.dissociate\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"showAssigmentButtons()\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openFamilyPopup()\\\"\\r\\n                          >\\r\\n                            {{ componentData.componentId + \\\".familyAssignment\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"showAssigmentButtons()\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openOperatorPopup()\\\"\\r\\n                          >\\r\\n                            {{ componentData.componentId + \\\".operatorAssignment\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"showAssigmentButtons()\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openSitePopup()\\\"\\r\\n                          >\\r\\n                            {{ componentData.componentId + \\\".siteAssignment\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"list-with-details\\\">\\r\\n                      <div class=\\\"list\\\">\\r\\n                        <div class=\\\"list-header\\\"></div>\\r\\n                        <a-table\\r\\n                          [dataSource]=\\\"profileTableDataSource\\\"\\r\\n                          (onRowSelect)=\\\"onProfileRowSelectUnselect()\\\"\\r\\n                          (onRowUnselect)=\\\"onProfileRowSelectUnselect()\\\"\\r\\n                        >\\r\\n                          <ng-template columnDef=\\\"profileName\\\" let-rowData=\\\"rowData\\\">\\r\\n                            {{ rowData.bidoProfileDTO.profileName }}\\r\\n                          </ng-template>\\r\\n                          <ng-template columnDef=\\\"profileComment\\\" let-rowData=\\\"rowData\\\">\\r\\n                            {{ rowData.bidoProfileDTO.profileComment }}\\r\\n                          </ng-template>\\r\\n                        </a-table>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"details\\\">\\r\\n                        <div class=\\\"column\\\">\\r\\n                          <div class=\\\"section\\\">\\r\\n                            <h4 class=\\\"section-title\\\">\\r\\n                              {{ componentData.componentId + \\\".associatedFamilies\\\" | translate }}\\r\\n                              ({{ familiesTableDataSource ? familiesTableDataSource.dataCount : 0 }})\\r\\n                            </h4>\\r\\n\\r\\n                            <div class=\\\"section-content\\\">\\r\\n                              <a-table [dataSource]=\\\"familiesTableDataSource\\\"> </a-table>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"section\\\">\\r\\n                            <h4 class=\\\"section-title\\\">\\r\\n                              {{ componentData.componentId + \\\".associatedOperators\\\" | translate }}\\r\\n                              ({{ operatorsTableDataSource ? operatorsTableDataSource.dataCount : 0 }})\\r\\n                            </h4>\\r\\n\\r\\n                            <div class=\\\"section-content\\\">\\r\\n                              <a-table [dataSource]=\\\"operatorsTableDataSource\\\"> </a-table>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"section\\\">\\r\\n                            <h4 class=\\\"section-title\\\">\\r\\n                              {{ componentData.componentId + \\\".associatedSites\\\" | translate }}\\r\\n                              ({{ sitesTableDataSource ? sitesTableDataSource.dataCount : 0 }})\\r\\n                            </h4>\\r\\n\\r\\n                            <div class=\\\"section-content\\\">\\r\\n                              <a-table [dataSource]=\\\"sitesTableDataSource\\\"> </a-table>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".useCases\\\" | translate }}\\r\\n                      ({{ useCasesTableDataSource ? useCasesTableDataSource.dataCount : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"table-wrapper\\\">\\r\\n                    <a-table [dataSource]=\\\"useCasesTableDataSource\\\"> </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".clients\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".clients\\\" | translate }}\\r\\n                      ({{ clientTableDataSource ? clientTableDataSource.dataCount : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"table-wrapper\\\">\\r\\n                    <a-table [dataSource]=\\\"clientTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode && clientTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteClients()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"createClients()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.add\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n    <aw-assign-profile-popup-form\\r\\n      *ngIf=\\\"showProfilePopup\\\"\\r\\n      [(display)]=\\\"showProfilePopup\\\"\\r\\n      [componentData]=\\\"dataProfiles\\\"\\r\\n      (onValidated)=\\\"onAddProfiles($event)\\\"\\r\\n    ></aw-assign-profile-popup-form>\\r\\n    <aw-assign-family-popup-form\\r\\n      *ngIf=\\\"showFamilyPopup\\\"\\r\\n      [(display)]=\\\"showFamilyPopup\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyFamilyDialog\\\"\\r\\n      [component-data]=\\\"dataFamilies\\\"\\r\\n      (onValidated)=\\\"onEditFamilies($event)\\\"\\r\\n    ></aw-assign-family-popup-form>\\r\\n    <aw-assign-operator-popup-form\\r\\n      *ngIf=\\\"showOperatorPopup\\\"\\r\\n      [(display)]=\\\"showOperatorPopup\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyOperatorDialog\\\"\\r\\n      [component-data]=\\\"dataOperators\\\"\\r\\n      (onValidated)=\\\"onEditOperators($event)\\\"\\r\\n    ></aw-assign-operator-popup-form>\\r\\n    <aw-assign-site-popup-form\\r\\n      *ngIf=\\\"showSitePopup\\\"\\r\\n      [(display)]=\\\"showSitePopup\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlySiteDialog\\\"\\r\\n      [component-data]=\\\"dataSites\\\"\\r\\n      (onValidated)=\\\"onEditSites($event)\\\"\\r\\n    ></aw-assign-site-popup-form>\\r\\n    <aw-clients-form-popup\\r\\n      *ngIf=\\\"showClientsForm\\\"\\r\\n      [(display)]=\\\"showClientsForm\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyClientDialog\\\"\\r\\n      (onAdded)=\\\"onAddOperation($event)\\\"\\r\\n    >\\r\\n    </aw-clients-form-popup>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host .table-wrapper {\\n  width: 100%; }\\n\\n:host .table-border-left {\\n  border-left: solid 1px black !important; }\\n\\n:host ::ng-deep .text-wrap {\\n  white-space: normal !important; }\\n\\n:host .search-criteria-primary {\\n  justify-content: flex-start; }\\n\\n:host .users-fields-fields {\\n  width: 100%; }\\n\\n:host .column {\\n  flex: 33%; }\\n\\n:host .circle-icon {\\n  background: #ffffff;\\n  padding: 2px;\\n  border-radius: 50%;\\n  border-width: 2px;\\n  border-style: solid; }\\n\\n:host .compliance-icon {\\n  font-size: 2.125rem; }\\n\\n:host .red {\\n  color: #a90329; }\\n\\n:host .green {\\n  color: #50be87; }\\n\\n:host .yellow {\\n  color: #f1a827; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi91c2Vycy1mb3JtL2Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZ2l0aHViX3BhZ2VzL3NyY1xcYXBwXFxtYWluXFxhZG1pbmlzdHJhdGlvblxcdXNlcnMtZm9ybVxcdXNlcnMtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQTtFQUVJLFdBQVcsRUFBQTs7QUFGZjtFQUtJLHVDQUF1QyxFQUFBOztBQUwzQztFQVFJLDhCQUE4QixFQUFBOztBQVJsQztFQVdJLDJCQUEyQixFQUFBOztBQVgvQjtFQWNJLFdBQVcsRUFBQTs7QUFkZjtFQWlCSSxTQUFTLEVBQUE7O0FBakJiO0VBb0JJLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixtQkFBbUIsRUFBQTs7QUF4QnZCO0VBMkJJLG1CQUFtQixFQUFBOztBQTNCdkI7RUE4QkksY0FoQ2lCLEVBQUE7O0FBRXJCO0VBaUNJLGNBckNxQixFQUFBOztBQUl6QjtFQW9DSSxjQXZDc0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vdXNlcnMtZm9ybS91c2Vycy1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJGdyZWVuOiByZ2IoODAsIDE5MCwgMTM1KTtcclxuJHllbGxvdzogcmdiKDI0MSwgMTY4LCAzOSk7XHJcbiRyZWQ6IHJnYigxNjksIDMsIDQxKTtcclxuJHRvcGJhci1oZWlnaHQ6IDg1cHg7XHJcbjpob3N0IHtcclxuICAudGFibGUtd3JhcHBlciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgLnRhYmxlLWJvcmRlci1sZWZ0IHtcclxuICAgIGJvcmRlci1sZWZ0OiBzb2xpZCAxcHggYmxhY2sgIWltcG9ydGFudDtcclxuICB9XHJcbiAgOjpuZy1kZWVwIC50ZXh0LXdyYXAge1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbCAhaW1wb3J0YW50O1xyXG4gIH1cclxuICAuc2VhcmNoLWNyaXRlcmlhLXByaW1hcnkge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gIH1cclxuICAudXNlcnMtZmllbGRzLWZpZWxkcyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgLmNvbHVtbiB7XHJcbiAgICBmbGV4OiAzMyU7XHJcbiAgfVxyXG4gIC5jaXJjbGUtaWNvbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xyXG4gICAgcGFkZGluZzogMnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgYm9yZGVyLXdpZHRoOiAycHg7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gIH1cclxuICAuY29tcGxpYW5jZS1pY29uIHtcclxuICAgIGZvbnQtc2l6ZTogMi4xMjVyZW07XHJcbiAgfVxyXG4gIC5yZWQge1xyXG4gICAgY29sb3I6ICRyZWQ7XHJcbiAgfVxyXG4gIC5ncmVlbiB7XHJcbiAgICBjb2xvcjogJGdyZWVuO1xyXG4gIH1cclxuICAueWVsbG93IHtcclxuICAgIGNvbG9yOiAkeWVsbG93O1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { PageTocService } from '../../../shared/components/component-sidebar/page-toc.service';\r\nimport { PageTocEntry } from '../../../shared/components/component-sidebar/types/page-toc-entry.interface';\r\nimport { TableDataSource } from '../../../shared/components/table/table-data-source';\r\nimport { BidoProfileConstants } from '../../../shared/constants/bido-profile-constants';\r\nimport { ComponentConstants } from '../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { ExportService } from '../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../shared/services/session.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { FindEmployeeByCompany } from '../../../shared/types/api-input-types/administration-users/find-employee-by-company.interface';\r\nimport { UserProfileFunctionDTO } from '../../../shared/types/api-output-types/administration-users/bido-user-profile-function-dto.interface';\r\nimport { UserProfileMappedFunctions } from '../../../shared/types/api-output-types/administration-users/bido-user-profile-mapped-function-dto.interface';\r\nimport { BidoCompanyTypeDTO } from '../../../shared/types/api-types/bido-company-type-dto.interface';\r\nimport { BidoFunctionTypeDTO } from '../../../shared/types/api-types/bido-function-type-dto.interface';\r\nimport { BidoMandantUserDTO } from '../../../shared/types/api-types/bido-mandant-user-dto.interface';\r\nimport { BidoProfileDTO } from '../../../shared/types/api-types/bido-profile-dto.interface';\r\nimport { BidoUserDTOId } from '../../../shared/types/api-types/bido-user-dto-id.interface';\r\nimport { BidoUserDTO } from '../../../shared/types/api-types/bido-user-dto.interface';\r\nimport { BidtEmployeeDTO } from '../../../shared/types/api-types/bidt-employee-dto.interface';\r\nimport { FormPageComponent } from '../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { PopupEntry } from '../../../shared/types/popup-entry.interface';\r\n\r\nimport { UsersFormService } from './users-form.service';\r\n\r\ninterface ProfileCustomDTO {\r\n  bidoProfileDTO?: BidoProfileDTO;\r\n  families?: BidoFunctionTypeDTO[];\r\n  operators?: BidoFunctionTypeDTO[];\r\n  sites?: BidoFunctionTypeDTO[];\r\n}\r\n\r\ninterface UseCasesCustomDTO {\r\n  buildingBlockCode?: string;\r\n  level?: string;\r\n  useCase?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-users-form',\r\n  styleUrls: ['./users-form.component.scss'],\r\n  templateUrl: './users-form.component.html'\r\n})\r\nexport class UsersFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  private static readonly PROFILES_TABLE_EXPORT_NAME: string = 'profiles-list';\r\n  private static readonly CANT_DELETE_OWN_ADMIN_PROFILE: string = 'cantDeleteOwnAdminProfile';\r\n  private static readonly CANT_ASSOCIATE_MANDANT_TO_USER: string = 'cantAssociateMandantToUser';\r\n\r\n  public static readonly MAIN_DATA_ANCHOR_ID: string = 'mainDataAnchor';\r\n  public static readonly GENERAL_ANCHOR_ID: string = 'generalAnchor';\r\n  public static readonly PROFILES_ANCHOR_ID: string = 'profilesAnchor';\r\n  public static readonly USE_CASES_ANCHOR_ID: string = 'useCasesAnchor';\r\n  public static readonly CONTACT_TABLE_ANCHOR_ID: string = 'contactTableAnchor';\r\n  public static readonly CLIENTS_ANCHOR_ID: string = 'clientsAnchor';\r\n\r\n  public readonly tabUseCasesId: string;\r\n  public readonly tabClientsId: string;\r\n  public readonly tabGeneralId: string;\r\n  public readonly tabProfilesId: string;\r\n  public userProfileMappedAddedList: UserProfileMappedFunctions[];\r\n  public documentTypes: SelectItem[];\r\n  public profileFunctions: UserProfileMappedFunctions;\r\n  public currentTabId: string;\r\n  public isNavigationOverlayVisible: boolean;\r\n  public isReadOnlyProfileDialog: boolean;\r\n  public showProfilePopup: boolean;\r\n  public isReadOnlyFamilyDialog: boolean;\r\n  public showFamilyPopup: boolean;\r\n  public isReadOnlyOperatorDialog: boolean;\r\n  public showOperatorPopup: boolean;\r\n  public isReadOnlySiteDialog: boolean;\r\n  public showSitePopup: boolean;\r\n  public dataProfiles: PopupEntry<BidoProfileDTO[]>;\r\n  public dataFamilies: PopupEntry<BidoFunctionTypeDTO[]>;\r\n  public dataOperators: PopupEntry<BidoFunctionTypeDTO[]>;\r\n  public dataSites: PopupEntry<BidoFunctionTypeDTO[]>;\r\n  public profileId: BidoProfileDTO;\r\n  public company: LabelValue<string>[];\r\n  public employee: LabelValue<string>[];\r\n  public searchObject: FindEmployeeByCompany;\r\n  public companies: number | undefined;\r\n  public companyDetails: BidoCompanyTypeDTO;\r\n  public generalTabFieldData: BidoUserDTO;\r\n  public showClientsForm: boolean;\r\n  public isReadOnlyClientDialog: boolean;\r\n  public confirmPassword: string | undefined;\r\n  public levelList: LabelValue<string>[];\r\n  public enableProfileEdit: boolean;\r\n  public enableOperatorEdit: boolean;\r\n  public enableFamilyEdit: boolean;\r\n  public enableSiteEdit: boolean;\r\n  private newLocal: string;\r\n  public toc: PageTocEntry[];\r\n  public companyName: string | undefined;\r\n  public useCasesTableDataSource: TableDataSource<UseCasesCustomDTO>;\r\n  public clientTableDataSource: TableDataSource<BidoMandantUserDTO>;\r\n  public profileTableDataSource: TableDataSource<UserProfileMappedFunctions>;\r\n  public familiesTableDataSource: TableDataSource<BidoFunctionTypeDTO>;\r\n  public operatorsTableDataSource: TableDataSource<BidoFunctionTypeDTO>;\r\n  public sitesTableDataSource: TableDataSource<BidoFunctionTypeDTO>;\r\n\r\n  @ViewChild('mainDataAnchor')\r\n  public mainDataAnchor: ElementRef;\r\n\r\n  @ViewChild('generalAnchor')\r\n  public generalAnchor: ElementRef;\r\n\r\n  @ViewChild('profilesAnchor')\r\n  public profilesAnchor: ElementRef;\r\n\r\n  @ViewChild('useCasesAnchor')\r\n  public useCasesAnchor: ElementRef;\r\n\r\n  @ViewChild('clientsAnchor')\r\n  public clientsAnchor: ElementRef;\r\n\r\n  public selectedAnchor: string | undefined;\r\n  public showSaveSpinner: boolean;\r\n\r\n  public component: typeof UsersFormComponent;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public translateService: TranslateService,\r\n    public sessionService: SessionService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly usersFormService: UsersFormService,\r\n    private readonly exportService: ExportService,\r\n    pageTocService: PageTocService\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Read,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n\r\n    this.component = UsersFormComponent;\r\n    this.tabUseCasesId = 'useCases';\r\n    this.tabClientsId = 'clients';\r\n    this.tabGeneralId = 'general';\r\n    this.tabProfilesId = 'profiles';\r\n    this.isNavigationOverlayVisible = false;\r\n    this.isReadOnlyProfileDialog = true;\r\n    this.showProfilePopup = false;\r\n    this.showClientsForm = false;\r\n    this.isReadOnlyClientDialog = true;\r\n    this.enableProfileEdit = true;\r\n    this.enableOperatorEdit = true;\r\n    this.enableFamilyEdit = true;\r\n    this.enableSiteEdit = true;\r\n    this.companies = undefined;\r\n    this.confirmPassword = undefined;\r\n    this.selectedAnchor = undefined;\r\n    this.profileFunctions = {};\r\n    this.newLocal = '';\r\n    this.openGeneralTab();\r\n    this.loadCompany();\r\n    this.company = [];\r\n    this.employee = [];\r\n    this.generalTabFieldData = {};\r\n    this.init();\r\n    this.initUseCasesTableDataSource();\r\n    this.initClientTableDataSource();\r\n    this.initProfileTableDataSource();\r\n    this.initProfileFunctionsTableDataSource();\r\n\r\n    super.registerPageTocEntryObservable();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_USERS_FORM;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    if (this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n      const contextMode = this.isCreateOpenMode\r\n        ? 'tab.createMode'\r\n        : !!this.componentData.objectId &&\r\n          `${this.serializationService.deserialize(this.componentData.objectId).firstname}\r\n        ${this.serializationService.deserialize(this.componentData.objectId).lastname}`;\r\n      if (!!contextMode) {\r\n        this.displayComponentContext(contextMode, this.isCreateOpenMode);\r\n      }\r\n      this.loadUsersDetailData();\r\n      this.loadUseCasesData();\r\n      this.loadLevelList();\r\n    }\r\n\r\n    this.toc = [\r\n      {\r\n        id: this.component.MAIN_DATA_ANCHOR_ID,\r\n        anchor: this.mainDataAnchor,\r\n        label: `${this.translateService.instant('page.mainData')}`\r\n      },\r\n      {\r\n        id: this.component.GENERAL_ANCHOR_ID,\r\n        anchor: this.generalAnchor,\r\n        label: `${this.translateService.instant('page.additionalData')}`\r\n      },\r\n      {\r\n        id: this.component.PROFILES_ANCHOR_ID,\r\n        anchor: this.profilesAnchor,\r\n        label: `${this.translateService.instant(this.getTranslateKey('profilesList'))}`\r\n      },\r\n      {\r\n        id: this.component.USE_CASES_ANCHOR_ID,\r\n        anchor: this.useCasesAnchor,\r\n        label: `${this.translateService.instant(this.getTranslateKey('useCasesList'))}`\r\n      },\r\n      {\r\n        id: this.component.CLIENTS_ANCHOR_ID,\r\n        anchor: this.clientsAnchor,\r\n        label: `${this.translateService.instant(this.getTranslateKey('clientsList'))}`\r\n      }\r\n    ];\r\n\r\n    super.selectPageTocEntry('mainDataAnchor');\r\n  }\r\n\r\n  private init(): void {\r\n    this.userProfileMappedAddedList = [];\r\n  }\r\n\r\n  private initUseCasesTableDataSource(): void {\r\n    this.useCasesTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'buildingBlockCode',\r\n          translateKey: this.getTranslateKey('buildingBlockCode')\r\n        },\r\n        {\r\n          field: 'useCase',\r\n          translateKey: this.getTranslateKey('useCase')\r\n        },\r\n        {\r\n          field: 'level',\r\n          translateKey: this.getTranslateKey('level')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initClientTableDataSource(): void {\r\n    this.clientTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'bidMandant',\r\n          translateKey: this.getTranslateKey('bidMandant')\r\n        },\r\n        {\r\n          field: 'sapUser',\r\n          translateKey: this.getTranslateKey('sapUser')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initProfileTableDataSource(): void {\r\n    this.profileTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'profileName',\r\n          translateKey: this.getTranslateKey('profileName')\r\n        },\r\n        {\r\n          field: 'profileComment',\r\n          translateKey: this.getTranslateKey('profileComment')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initProfileFunctionsTableDataSource(): void {\r\n    const functionTableConfiguration = {\r\n      enableSelection: false,\r\n      columns: [\r\n        {\r\n          field: 'functionCode',\r\n          translateKey: this.getTranslateKey('functionCode')\r\n        },\r\n        {\r\n          field: 'functionName',\r\n          translateKey: this.getTranslateKey('functionName')\r\n        }\r\n      ],\r\n      data: []\r\n    };\r\n    this.familiesTableDataSource = new TableDataSource(functionTableConfiguration);\r\n    this.operatorsTableDataSource = new TableDataSource(functionTableConfiguration);\r\n    this.sitesTableDataSource = new TableDataSource(functionTableConfiguration);\r\n  }\r\n\r\n  public cancelUsers(): void {\r\n    if (this.isWriteOpenMode) {\r\n      this.updateOpenMode(ComponentOpenMode.Read);\r\n    }\r\n    this.reloadUsers();\r\n  }\r\n\r\n  public editUsers(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public reloadUsers(): void {\r\n    this.init();\r\n    this.loadUsersDetailData();\r\n    this.loadUseCasesData();\r\n  }\r\n\r\n  public showNavigationOverlay(): void {\r\n    this.isNavigationOverlayVisible = true;\r\n  }\r\n\r\n  public hideNavigationOverlay(): void {\r\n    this.isNavigationOverlayVisible = false;\r\n  }\r\n\r\n  public exportTable(): void {\r\n    this.exportService.toExcel(\r\n      this.profileTableDataSource.dataSrc,\r\n      UsersFormComponent.PROFILES_TABLE_EXPORT_NAME,\r\n      this.componentData.componentId\r\n    );\r\n  }\r\n\r\n  public onProfileRowSelectUnselect(): void {\r\n    if (this.profileTableDataSource.dataSelectionCount === 1) {\r\n      this.profileFunctions = this.profileTableDataSource.dataSelection[0];\r\n    } else {\r\n      this.profileFunctions = {};\r\n    }\r\n\r\n    this.familiesTableDataSource.setData(this.profileFunctions.families || []);\r\n    this.familiesTableDataSource.update();\r\n    this.operatorsTableDataSource.setData(this.profileFunctions.operators || []);\r\n    this.operatorsTableDataSource.update();\r\n    this.sitesTableDataSource.setData(this.profileFunctions.sites || []);\r\n    this.sitesTableDataSource.update();\r\n  }\r\n\r\n  public onRowSelect() {\r\n    if (!!this.profileTableDataSource.dataSelection) {\r\n      this.enableProfileEdit =\r\n        !this.profileTableDataSource.hasDataSelection || this.profileTableDataSource.dataSelectionCount > 1;\r\n      this.enableFamilyEdit =\r\n        !this.profileTableDataSource.hasDataSelection || this.profileTableDataSource.dataSelectionCount > 1;\r\n      this.enableOperatorEdit =\r\n        !this.profileTableDataSource.hasDataSelection || this.profileTableDataSource.dataSelectionCount > 1;\r\n      this.enableSiteEdit =\r\n        !this.profileTableDataSource.hasDataSelection || this.profileTableDataSource.dataSelectionCount > 1;\r\n    }\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Profiles tab\r\n   *************************************************************************/\r\n\r\n  public openProfilesTab(): void {\r\n    this.currentTabId = this.tabProfilesId;\r\n  }\r\n\r\n  public editProfile(): void {\r\n    const tableProfiles: BidoProfileDTO[] = [];\r\n    this.profileTableDataSource.dataSrc.forEach((profile) => {\r\n      if (!!profile.bidoProfileDTO) {\r\n        tableProfiles.push(profile.bidoProfileDTO);\r\n      }\r\n    });\r\n    this.isReadOnlyProfileDialog = false;\r\n    this.showProfilePopup = true;\r\n    this.dataProfiles = {\r\n      componentId: 'AssignProfilesPopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: tableProfiles,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n\r\n  public disassociateProfile(): void {\r\n    this.profileTableDataSource.deleteDataSelection();\r\n\r\n    this.familiesTableDataSource.setData([]);\r\n    this.operatorsTableDataSource.setData([]);\r\n    this.sitesTableDataSource.setData([]);\r\n  }\r\n\r\n  public openFamilyPopup(): void {\r\n    this.isReadOnlyFamilyDialog = false;\r\n    this.showFamilyPopup = true;\r\n    this.dataFamilies = {\r\n      componentId: 'AssignFamiliesPopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: this.profileTableDataSource.dataSelection[0].families,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n\r\n  public openOperatorPopup(): void {\r\n    this.isReadOnlyOperatorDialog = false;\r\n    this.showOperatorPopup = true;\r\n    this.dataOperators = {\r\n      componentId: 'AssignOperatorsPopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: this.profileTableDataSource.dataSelection[0].operators,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n\r\n  public openSitePopup(): void {\r\n    this.isReadOnlySiteDialog = false;\r\n    this.showSitePopup = true;\r\n    this.dataSites = {\r\n      componentId: 'AssignSitesPopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: this.profileTableDataSource.dataSelection[0].sites,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n\r\n  public loadUsersDetailData(): void {\r\n    if (this.componentData.objectId) {\r\n      const userId: BidoUserDTOId = this.serializationService.deserialize(this.componentData.objectId).userId;\r\n      if (!!userId) {\r\n        this.usersFormService.getUserDetails(userId).subscribe(\r\n          (result) => {\r\n            if (!!result && !!result.bidoUserDTO && !!result.userProfileListDTO) {\r\n              this.generalTabFieldData = result.bidoUserDTO;\r\n              if (result.bidoMandantUserDTO) {\r\n                this.clientTableDataSource.setData(result.bidoMandantUserDTO);\r\n              } else {\r\n                this.clientTableDataSource.setData([]);\r\n              }\r\n              this.clientTableDataSource.update();\r\n              this.confirmPassword = result.bidoUserDTO.password;\r\n              const data: UserProfileMappedFunctions[] = result.userProfileListDTO;\r\n              const profileTable: UserProfileMappedFunctions[] = [];\r\n              if (!!data) {\r\n                data.forEach((res) => {\r\n                  if (!!res && !!res.bidoProfileDTO) {\r\n                    const profileRow: ProfileCustomDTO = {\r\n                      bidoProfileDTO: {\r\n                        profileId: res.bidoProfileDTO.profileId,\r\n                        profileName: res.bidoProfileDTO.profileName,\r\n                        profileComment: res.bidoProfileDTO.profileComment\r\n                      },\r\n                      families: res.families,\r\n                      operators: res.operators,\r\n                      sites: res.sites\r\n                    };\r\n\r\n                    profileTable.push(profileRow);\r\n                  } else {\r\n                    super.throwUnboundLocalError('loadUsersDetailData', '!!res && !!res.bidoProfileDTO');\r\n                  }\r\n                });\r\n              }\r\n              this.profileTableDataSource.setData(profileTable);\r\n              this.profileTableDataSource.update();\r\n            }\r\n          },\r\n          () => {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadUsersData'));\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public showAssigmentButtons(): boolean {\r\n    let toReturn: boolean = !this.isReadOpenMode && this.profileTableDataSource.dataSelectionCount === 1;\r\n    if (toReturn) {\r\n      if (\r\n        this.profileTableDataSource.dataSelection[0].bidoProfileDTO &&\r\n        this.profileTableDataSource.dataSelection[0].bidoProfileDTO.profileId ===\r\n          BidoProfileConstants.ADMINISTRATOR_PROFILE_ID\r\n      ) {\r\n        toReturn = false;\r\n      }\r\n    }\r\n\r\n    return toReturn;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Use Cases tab\r\n   *************************************************************************/\r\n  public openUseCasesTab(): void {\r\n    this.currentTabId = this.tabUseCasesId;\r\n  }\r\n  private loadLevelList(): void {\r\n    this.usersFormService.getUseCaseLevel().subscribe((result) => {\r\n      this.levelList = result;\r\n\r\n      this.levelList.unshift({\r\n        label: 'None',\r\n        value: ''\r\n      });\r\n    });\r\n  }\r\n\r\n  public loadUseCasesData(): void {\r\n    const useCases: UseCasesCustomDTO[] = [];\r\n    if (!!this.componentData.objectId) {\r\n      const userId: BidoUserDTOId = this.serializationService.deserialize(this.componentData.objectId).userId;\r\n      if (!!userId) {\r\n        this.usersFormService.getBuildingBlockUseCaseLevel(userId).subscribe(\r\n          (result) => {\r\n            if (!!result) {\r\n              result.forEach((results) => {\r\n                results.buildingBlocks.forEach((element) => {\r\n                  element.useCases.forEach((res) => {\r\n                    if (this.levelList) {\r\n                      this.levelList.forEach((level) => {\r\n                        if (level.value === res.level) {\r\n                          res.level = level.label;\r\n                        }\r\n                      });\r\n                      const userRow: UseCasesCustomDTO = {\r\n                        buildingBlockCode: this.getBuildingBlockText(res.bidoFunctionTypeDTO.functionModule as string),\r\n                        level: res.level,\r\n                        useCase: res.bidoFunctionTypeDTO.functionName\r\n                      };\r\n                      useCases.push(userRow);\r\n                    }\r\n                  });\r\n                });\r\n              });\r\n              this.useCasesTableDataSource.setData(useCases);\r\n              this.useCasesTableDataSource.dataSelection = [];\r\n              this.useCasesTableDataSource.update();\r\n            }\r\n          },\r\n          () => {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadUseCaseData'));\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private getBuildingBlockText(code: string): string {\r\n    let text = '';\r\n    this.translateService.get(this.getTranslateKey(code)).subscribe((result: string) => {\r\n      text = !!result ? result : code;\r\n    });\r\n\r\n    return text;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Clients tab\r\n   *************************************************************************/\r\n  public openClientsTab(): void {\r\n    this.currentTabId = this.tabClientsId;\r\n  }\r\n\r\n  public createClients(): void {\r\n    this.showClientsForm = true;\r\n    this.isReadOnlyClientDialog = false;\r\n  }\r\n\r\n  public onAddOperation(event) {\r\n    if (!!this.componentData.objectId) {\r\n      const bidoMandantUserDTO: BidoMandantUserDTO = {\r\n        userId: this.serializationService.deserialize(this.componentData.objectId).userId,\r\n        sapUser: event.sapUser,\r\n        sapPassword: '',\r\n        mandant: '',\r\n        bidMandant: event.bidMandant\r\n      };\r\n      if (!!this.clientTableDataSource) {\r\n        if (this.clientTableDataSource.hasData) {\r\n          const client = this.clientTableDataSource.dataSrc.find(\r\n            (item) => item.bidMandant === bidoMandantUserDTO.bidMandant\r\n          );\r\n          if (!client) {\r\n            this.clientTableDataSource.addData([bidoMandantUserDTO]);\r\n          } else {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnAddingClients'));\r\n          }\r\n        } else {\r\n          this.clientTableDataSource.addData([bidoMandantUserDTO]);\r\n        }\r\n      } else {\r\n        super.throwUnboundLocalError('onAddOperation', 'this.clientTableDataSource');\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('onAddOperation', 'this.componentData.objectId');\r\n    }\r\n  }\r\n\r\n  public deleteClients() {\r\n    const partialMessageKey =\r\n      this.clientTableDataSource.dataSelectionCount > 1 ? 'confirmOnDeleteClients' : 'confirmOnDeleteClient';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.clientTableDataSource.deleteDataSelection();\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteClient'));\r\n      }\r\n    });\r\n  }\r\n\r\n  public onAddProfiles(profiles: BidoProfileDTO[]): void {\r\n    const profileData: UserProfileMappedFunctions[] = profiles.map((profile) => ({\r\n      bidoProfileDTO: profile\r\n    }));\r\n\r\n    profileData.forEach((newProfile) => {\r\n      this.profileTableDataSource.dataSrc.forEach((oldProfile) => {\r\n        if (!!newProfile.bidoProfileDTO && oldProfile.bidoProfileDTO) {\r\n          if (newProfile.bidoProfileDTO.profileId === oldProfile.bidoProfileDTO.profileId) {\r\n            newProfile.sites = oldProfile.sites;\r\n            newProfile.operators = oldProfile.operators;\r\n            newProfile.families = oldProfile.families;\r\n          }\r\n        } else {\r\n          super.throwUnboundLocalError('onAddProfiles', 'newProfile.bidoProfileDTO && oldProfile.bidoProfileDTO');\r\n        }\r\n      });\r\n    });\r\n\r\n    this.profileTableDataSource.addData(profileData);\r\n  }\r\n\r\n  public onEditSites(sites: BidoFunctionTypeDTO[]): void {\r\n    if (!!this.profileTableDataSource.dataSrc) {\r\n      const profileIndex = this.profileTableDataSource.dataSrc.findIndex(\r\n        (profiles) =>\r\n          (!!profiles.bidoProfileDTO && profiles.bidoProfileDTO.profileId) ===\r\n          (!!this.profileTableDataSource.dataSelection[0].bidoProfileDTO &&\r\n            this.profileTableDataSource.dataSelection[0].bidoProfileDTO.profileId)\r\n      );\r\n      this.profileTableDataSource.dataSrc[profileIndex].sites = [...sites];\r\n      this.profileTableDataSource.update();\r\n      this.sitesTableDataSource.setData(sites);\r\n      this.sitesTableDataSource.update();\r\n    }\r\n  }\r\n\r\n  public onEditFamilies(families: BidoFunctionTypeDTO[]): void {\r\n    if (!!this.profileTableDataSource.dataSrc) {\r\n      const profileIndex = this.profileTableDataSource.dataSrc.findIndex(\r\n        (profiles) =>\r\n          (!!profiles.bidoProfileDTO && profiles.bidoProfileDTO.profileId) ===\r\n          (!!this.profileTableDataSource.dataSelection[0].bidoProfileDTO &&\r\n            this.profileTableDataSource.dataSelection[0].bidoProfileDTO.profileId)\r\n      );\r\n      this.profileTableDataSource.dataSrc[profileIndex].families = [...families];\r\n      this.profileTableDataSource.update();\r\n      this.familiesTableDataSource.setData(families);\r\n      this.familiesTableDataSource.update();\r\n    }\r\n  }\r\n\r\n  public onEditOperators(operators: BidoFunctionTypeDTO[]): void {\r\n    if (!!this.profileTableDataSource.dataSrc) {\r\n      const profileIndex = this.profileTableDataSource.dataSrc.findIndex(\r\n        (profiles) =>\r\n          (!!profiles.bidoProfileDTO && profiles.bidoProfileDTO.profileId) ===\r\n          (!!this.profileTableDataSource.dataSelection[0].bidoProfileDTO &&\r\n            this.profileTableDataSource.dataSelection[0].bidoProfileDTO.profileId)\r\n      );\r\n      this.profileTableDataSource.dataSrc[profileIndex].operators = [...operators];\r\n      this.profileTableDataSource.update();\r\n      this.operatorsTableDataSource.setData(operators);\r\n      this.operatorsTableDataSource.update();\r\n    }\r\n  }\r\n\r\n  public saveUsers(): void {\r\n    this.userProfileMappedAddedList = [];\r\n    this.profileTableDataSource.dataSrc.forEach((profile) => {\r\n      const userProfileMapped: UserProfileMappedFunctions = {\r\n        bidoProfileDTO: profile.bidoProfileDTO,\r\n        sites: profile.sites,\r\n        operators: profile.operators,\r\n        families: profile.families\r\n      };\r\n\r\n      this.userProfileMappedAddedList.push(userProfileMapped);\r\n    });\r\n\r\n    if (\r\n      this.generalTabFieldData &&\r\n      this.generalTabFieldData.firstname &&\r\n      this.generalTabFieldData.lastname &&\r\n      this.generalTabFieldData.login &&\r\n      (!this.isCreateOpenMode || this.generalTabFieldData.password)\r\n    ) {\r\n      if (this.generalTabFieldData.password === this.confirmPassword) {\r\n        const saveId: UserProfileFunctionDTO = {\r\n          bidoUserDTO: {\r\n            userId: this.generalTabFieldData.userId,\r\n            firstname: this.generalTabFieldData.firstname,\r\n            lastname: this.generalTabFieldData.lastname,\r\n            login: this.generalTabFieldData.login,\r\n            password: this.generalTabFieldData.password,\r\n            userComment: this.generalTabFieldData.userComment,\r\n            eMail: this.generalTabFieldData.eMail,\r\n            lastLoginDate: this.generalTabFieldData.lastLoginDate,\r\n            lastLogoutDate: this.generalTabFieldData.lastLogoutDate,\r\n            lastPasswordChangeDate: this.generalTabFieldData.lastPasswordChangeDate,\r\n            validityDate: this.generalTabFieldData.validityDate,\r\n            customerCode: this.generalTabFieldData.company\r\n              ? this.generalTabFieldData.company.split('-')[1]\r\n              : this.generalTabFieldData.company,\r\n            employeeId: this.generalTabFieldData.employee,\r\n            isUserService: this.generalTabFieldData.isUserService,\r\n            isUserMobile: this.generalTabFieldData.isUserMobile,\r\n            company: this.generalTabFieldData.company,\r\n            employee: this.generalTabFieldData.employee,\r\n            email: this.generalTabFieldData.email\r\n          },\r\n          bidoCustomerDTO: this.generalTabFieldData.company\r\n            ? {\r\n                customerCode: this.generalTabFieldData.company\r\n                  ? this.generalTabFieldData.company.split('-')[1]\r\n                  : this.generalTabFieldData.company\r\n              }\r\n            : undefined,\r\n          bidtCompanyDTO: this.generalTabFieldData.company\r\n            ? {\r\n                companyCode: this.generalTabFieldData.company\r\n                  ? this.generalTabFieldData.company.split('-')[1]\r\n                  : this.generalTabFieldData.company,\r\n                companyName: this.companyName\r\n              }\r\n            : undefined,\r\n          userProfileListDTO: this.userProfileMappedAddedList,\r\n          bidoMandantUserDTO: this.clientTableDataSource.data\r\n        };\r\n\r\n        if (this.isCreateOpenMode) {\r\n          this.showSaveSpinner = true;\r\n          this.usersFormService\r\n            .addUsersForm(saveId)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.showSaveSpinner = false;\r\n              })\r\n            )\r\n            .subscribe((result) => {\r\n              if (!!this.generalTabFieldData) {\r\n                this.generalTabFieldData.userId = result;\r\n              }\r\n\r\n              const context = `${this.generalTabFieldData.firstname} ${this.generalTabFieldData.lastname}`;\r\n              this.updateOpenMode(ComponentOpenMode.Read);\r\n              this.displayComponentContext(context, this.isCreateOpenMode);\r\n              this.reloadUsers();\r\n              this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveUsers'));\r\n            });\r\n        } else {\r\n          this.showSaveSpinner = true;\r\n          this.usersFormService\r\n            .updateUsersForm(saveId)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.showSaveSpinner = false;\r\n              })\r\n            )\r\n            .subscribe(\r\n              (result) => {\r\n                const context = `${this.generalTabFieldData.firstname} ${this.generalTabFieldData.lastname}`;\r\n                this.updateOpenMode(ComponentOpenMode.Read);\r\n                this.displayComponentContext(context, this.isCreateOpenMode);\r\n                this.reloadUsers();\r\n                this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveUsers'));\r\n              },\r\n              (error) => {\r\n                const httpError = error as HttpErrorResponse;\r\n                if (!!httpError.error && !!httpError.error.errorDesc) {\r\n                  const errorMessage: string = httpError.error.errorDesc as string;\r\n                  if (errorMessage.startsWith(UsersFormComponent.CANT_DELETE_OWN_ADMIN_PROFILE)) {\r\n                    this.messageService.showErrorMessage(\r\n                      this.getTranslateKey(UsersFormComponent.CANT_DELETE_OWN_ADMIN_PROFILE)\r\n                    );\r\n                  } else if (errorMessage.startsWith(UsersFormComponent.CANT_ASSOCIATE_MANDANT_TO_USER)) {\r\n                    this.messageService.showErrorMessage(\r\n                      this.getTranslateKey(UsersFormComponent.CANT_ASSOCIATE_MANDANT_TO_USER)\r\n                    );\r\n                  } else {\r\n                    this.messageService.showErrorMessage(this.getTranslateKey('errorOnSaveUsers'));\r\n                  }\r\n                }\r\n              }\r\n            );\r\n        }\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnPassword'));\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.missingFields');\r\n    }\r\n    this.userProfileMappedAddedList = [];\r\n    this.profileTableDataSource.dataSelection = [];\r\n    this.profileFunctions = {};\r\n    this.enableProfileEdit = false;\r\n    this.enableFamilyEdit = false;\r\n    this.enableOperatorEdit = false;\r\n    this.enableSiteEdit = false;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * General tab\r\n   *************************************************************************/\r\n\r\n  public openGeneralTab(): void {\r\n    this.currentTabId = this.tabGeneralId;\r\n  }\r\n  private loadCompany(): void {\r\n    this.usersFormService.companyMapping().subscribe((result) => {\r\n      if (!!result && !!result.companyTextMap) {\r\n        for (const property in result.companyTextMap) {\r\n          if (result.companyTextMap.hasOwnProperty(property)) {\r\n            const companyLabelValue: LabelValue<string> = {\r\n              label: result.companyTextMap[property],\r\n              value: property\r\n            };\r\n            this.company.push(companyLabelValue);\r\n          }\r\n        }\r\n        this.companyDetails = result;\r\n        if (\r\n          !!this.componentData.objectId &&\r\n          this.serializationService.deserialize(this.componentData.objectId).company\r\n        ) {\r\n          this.loadEmployee();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  public loadEmployee(): void {\r\n    if (!!this.companyDetails.bidtCompanyData) {\r\n      if (!!this.generalTabFieldData && !!this.generalTabFieldData.company) {\r\n        this.newLocal = this.generalTabFieldData.company;\r\n      } else if (!!this.generalTabFieldData && this.generalTabFieldData.company === null) {\r\n        this.generalTabFieldData.employee = undefined;\r\n        this.newLocal = '';\r\n        this.employee = [];\r\n      } else {\r\n        if (!!this.componentData.objectId) {\r\n          this.newLocal = this.serializationService.deserialize(this.componentData.objectId).company;\r\n          this.newLocal = this.newLocal.split('-')[0];\r\n          this.newLocal = this.newLocal.replace(/[\\[\\]]+/g, '').replace(/\\s+/g, '-');\r\n        } else {\r\n          super.throwUnboundLocalError('loadEmployee', 'this.componentData.objectId');\r\n        }\r\n      }\r\n      this.companyName = undefined;\r\n      const searchInput = this.companyDetails.bidtCompanyData[this.newLocal];\r\n      if (!!searchInput) {\r\n        this.searchObject = {\r\n          companyId: searchInput.id,\r\n          mandant: searchInput.mandant\r\n        };\r\n        this.companyName = searchInput.companyName;\r\n\r\n        this.usersFormService.findEmployeeByCompany(this.searchObject).subscribe((result: BidtEmployeeDTO[]) => {\r\n          if (!!result) {\r\n            this.employee = [];\r\n            result.forEach((element) => {\r\n              if (!!element.id) {\r\n                const employeeLabelValue: LabelValue<string> = {\r\n                  label:\r\n                    (element.employeeFirstName != undefined ? element.employeeFirstName : '') +\r\n                    (element.employeeLastName != undefined ? ' ' + element.employeeLastName : ''),\r\n                  value: element.id.toString()\r\n                };\r\n                this.employee.push(employeeLabelValue);\r\n                if (!!this.generalTabFieldData) {\r\n                  this.generalTabFieldData.employeeId = this.generalTabFieldData.employee;\r\n                }\r\n              } else {\r\n                super.throwUnboundLocalError('loadEmployee', 'element.id');\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('loadEmployee', 'this.companyDetails.bidtCompanyData');\r\n    }\r\n  }\r\n  public onCompanyChanged() {\r\n    if (!!this.generalTabFieldData) {\r\n      this.generalTabFieldData.employee = undefined;\r\n    }\r\n    this.loadEmployee();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtEmployeeApi } from '../../../shared/api/bidt-employee.api';\r\nimport { UserProfileManagementApi } from '../../../shared/api/user-profile-management.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { ValidateSapUserInput } from '../../../shared/types/api-input-types/administration-users/bido-user-check-sap-user-input.interface';\r\nimport { FindEmployeeByCompany } from '../../../shared/types/api-input-types/administration-users/find-employee-by-company.interface';\r\nimport { UserProfileFunctionDTO } from '../../../shared/types/api-output-types/administration-users/bido-user-profile-function-dto.interface';\r\nimport { BidoCompanyTypeDTO } from '../../../shared/types/api-types/bido-company-type-dto.interface';\r\nimport { BidoFunctionTypePopUpDTO } from '../../../shared/types/api-types/bido-function-type-popup-dto.interface';\r\nimport { BidoProfileDTO } from '../../../shared/types/api-types/bido-profile-dto.interface';\r\nimport { BidoUserDTOId } from '../../../shared/types/api-types/bido-user-dto-id.interface';\r\nimport { BidtEmployeeDTO } from '../../../shared/types/api-types/bidt-employee-dto.interface';\r\nimport { ProfileManagementWithUseCaseDTO } from '../../../shared/types/api-types/profile-management-with-use-case-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class UsersFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtEmployeeApi: BidtEmployeeApi,\r\n    private readonly userProfileManagementApi: UserProfileManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getUserDetails(input: BidoUserDTOId): Observable<UserProfileFunctionDTO> {\r\n    return super.post<BidoUserDTOId, UserProfileFunctionDTO>(this.userProfileManagementApi.getuserdetail, input);\r\n  }\r\n  /**************************************************************************\r\n   * profile management api\r\n   *************************************************************************/\r\n\r\n  public findAllBidoProfiles(): Observable<BidoProfileDTO[]> {\r\n    return super.post<void, BidoProfileDTO[]>(this.userProfileManagementApi.findAllBidoProfiles);\r\n  }\r\n\r\n  public findAllBidoFunctionTypesByModule(input: string): Observable<BidoFunctionTypePopUpDTO[]> {\r\n    return super.post<string, BidoFunctionTypePopUpDTO[]>(\r\n      this.userProfileManagementApi.findAllBidoFunctionTypesByModule,\r\n      input\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *use cases tab api\r\n   *************************************************************************/\r\n  public getBuildingBlockUseCaseLevel(input: BidoUserDTOId): Observable<ProfileManagementWithUseCaseDTO[]> {\r\n    return super.post<BidoUserDTOId, ProfileManagementWithUseCaseDTO[]>(\r\n      this.userProfileManagementApi.getBuildingBlockUseCaseLevel,\r\n      input\r\n    );\r\n  }\r\n\r\n  public getUseCaseLevel(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.userProfileManagementApi.getUseCasesAccessDegrees);\r\n  }\r\n  /**************************************************************************\r\n   * clients tab api\r\n   *************************************************************************/\r\n\r\n  public checkSapUser(input: ValidateSapUserInput): Observable<boolean> {\r\n    return super.post<ValidateSapUserInput, boolean>(this.userProfileManagementApi.checkSapUser, input);\r\n  }\r\n\r\n  /**************************************************************************\r\n   *genral tab api\r\n   *************************************************************************/\r\n  public companyMapping(): Observable<BidoCompanyTypeDTO> {\r\n    return super.post<void, BidoCompanyTypeDTO>(this.userProfileManagementApi.companyMap);\r\n  }\r\n  public findEmployeeByCompany(criteria: FindEmployeeByCompany): Observable<BidtEmployeeDTO[]> {\r\n    return super.post<FindEmployeeByCompany, BidtEmployeeDTO[]>(this.bidtEmployeeApi.findEmployeeByCompany, criteria);\r\n  }\r\n\r\n  public addUsersForm(input: UserProfileFunctionDTO): Observable<string> {\r\n    return super.post<UserProfileFunctionDTO, string>(this.userProfileManagementApi.addUser, input);\r\n  }\r\n  public updateUsersForm(input: UserProfileFunctionDTO): Observable<void> {\r\n    return super.post<UserProfileFunctionDTO, void>(this.userProfileManagementApi.updateUserDetails, input);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".userToBeCopied\\\" | translate }}</label>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [filter]=\\\"true\\\"\\r\\n          [options]=\\\"usersToBeCopied\\\"\\r\\n          [(ngModel)]=\\\"userId\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"associate()\\\"\\r\\n      [disabled]=\\\"enableAssociateButton()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\nimport { BidoUserDTO } from '../../../../shared/types/api-types/bido-user-dto.interface';\nimport { CopyProfileDTO } from '../../../../shared/types/api-types/copy-profile-dto.interface';\nimport { DialogComponent } from '../../../../shared/types/dialog-component';\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\n\nimport { UsersSearchService } from './../users-search.service';\n\n@Component({\n  selector: 'aw-update-profile-rights-popup-form',\n  templateUrl: './update-profile-rights-popup-form.component.html',\n  styleUrls: ['./update-profile-rights-popup-form.scss']\n})\nexport class UpdateProfileRightsPopupFormComponent extends DialogComponent implements OnInit {\n  @Output()\n  public displayChange: EventEmitter<boolean>;\n\n  @Input()\n  public selectedUsers: BidoUserDTO[];\n\n  @Output()\n  public onCreate: EventEmitter<BidoUserDTO>;\n\n  public readonly componentId: string;\n\n  public displayValue: boolean;\n  public usersToBeCopied: LabelValue<string>[] | null;\n  public userId: string;\n\n  public constructor(private readonly usersSearchService: UsersSearchService) {\n    super(ComponentOpenMode.Write, 'UpdateProfileRightsPopupFormComponent');\n    // tslint:disable-next-line:no-any\n    this.onCreate = new EventEmitter<any>();\n    this.usersToBeCopied = [];\n  }\n\n  public ngOnInit() {\n    if (!this.selectedUsers) {\n      this.selectedUsers = [];\n    }\n    this.loadDropDown();\n  }\n\n  public associate(): void {\n    if (!!this.selectedUsers) {\n      const copyUserProfile$ = this.selectedUsers.map((selectedUser) => {\n        if (!!selectedUser.userId) {\n          const copyObject: CopyProfileDTO = {\n            fromUserId: this.userId,\n            toUserId: selectedUser.userId\n          };\n\n          return this.usersSearchService.copyUserProfile(copyObject);\n        }\n      });\n      forkJoin(copyUserProfile$).subscribe((results) => (this.display = false));\n    } else {\n      super.throwUnboundLocalError('associate', 'this.selectedUser');\n    }\n  }\n\n  public cancel(): void {\n    this.display = false;\n  }\n  public loadDropDown() {\n    this.usersSearchService\n      .findUsersBySearchCriteria({ bidoUserDTO: {} })\n      .pipe(\n        map((results) => {\n          const dropdown: LabelValue<string>[] = [];\n          results.forEach((res) => {\n            if (!!res && !!res.userId) {\n              const usersLabelValue: LabelValue<string> = {\n                label:\n                  (res.firstname != undefined ? res.firstname : '') +\n                  (res.lastname != undefined ? ' ' + res.lastname : ''),\n                value: res.userId.toString()\n              };\n              dropdown.push(usersLabelValue);\n            } else {\n              super.throwUnboundLocalError(\n                'loadUserTableData',\n                'res && res.userId && res.lastname && res.firstname && res.login'\n              );\n            }\n          });\n\n          return dropdown;\n        })\n      )\n      .subscribe((results) => {\n        this.usersToBeCopied = results.filter((x) => !this.selectedUsers.map((user) => user.userId).includes(x.value));\n      });\n  }\n\n  public enableAssociateButton(): boolean {\n    return !!!this.userId;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vdXNlcnMtc2VhcmNoL3VwZGF0ZS1wcm9maWxlLXJpZ2h0cy1wb3B1cC1mb3JtL3VwZGF0ZS1wcm9maWxlLXJpZ2h0cy1wb3B1cC1mb3JtLnNjc3MifQ== */\"","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ \\\"page.searchPage\\\" | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewUser()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row search-criteria-header\\\">\\r\\n                  <i\\r\\n                    class=\\\"fa fa-fw fa-undo aw-icon aw-icon-with-border search-criteria-action\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    pTooltip=\\\"{{ 'global.reset' | translate }}\\\"\\r\\n                    tooltipPosition=\\\"top\\\"\\r\\n                    (click)=\\\"resetSearchCriteria()\\\"\\r\\n                  ></i>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".lastname\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.bidoUserDTO.lastname\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".firstname\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.bidoUserDTO.firstname\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".login\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.bidoUserDTO.login\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".company\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"company\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.companyName\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        (keyup.enter)=\\\"search()\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      class=\\\"btn-with-spinner\\\"\\r\\n                      color=\\\"primary\\\"\\r\\n                      appKeyPress\\r\\n                      [keyCode]=\\\"'Enter'\\\"\\r\\n                      (keyPress)=\\\"search()\\\"\\r\\n                      (click)=\\\"search()\\\"\\r\\n                    >\\r\\n                      <span *ngIf=\\\"isLoading\\\" class=\\\"lds-hourglass\\\"></span>\\r\\n                      {{ \\\"global.toSearch\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }} ({{ userTableDataSource ? userTableDataSource.dataCount : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content users-program-list-table\\\">\\r\\n              <a-table [dataSource]=\\\"userTableDataSource\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    *ngIf=\\\"userTableDataSource.hasData && !userTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportTable()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"hasManageAccessRight && userTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteSelectedUsers()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n                  <button\\r\\n                    *ngIf=\\\"userTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    pTooltip=\\\"{{ componentData.componentId + '.updateUsers' | translate }}\\\"\\r\\n                    tooltipPosition=\\\"top\\\"\\r\\n                    (click)=\\\"updateProfileRights()\\\"\\r\\n                  >\\r\\n                    {{ componentData.componentId + \\\".updateProfiles\\\" | translate }}\\r\\n                  </button>\\r\\n                  <button\\r\\n                    *ngIf=\\\"userTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openSelectedUsers()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"isUserService\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i\\r\\n                    class=\\\"fa fa-check compliance-icon green\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    *ngIf=\\\"rowData.isUserService !== null && rowData.isUserService\\\"\\r\\n                  ></i>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"company\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <span pTooltip=\\\"{{ rowData.company && rowData.company.length > 30 ? rowData.company : '' }}\\\">\\r\\n                    {{ rowData.company }}\\r\\n                  </span>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"isUserMobile\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i\\r\\n                    class=\\\"fa fa-check compliance-icon green\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    *ngIf=\\\"rowData.isUserMobile !== null && rowData.isUserMobile\\\"\\r\\n                  ></i>\\r\\n                </ng-template>\\r\\n                <ng-template columnDef=\\\"validityDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                  {{ rowData.validityDate | date: \\\"yyyy/MM/dd\\\" }}\\r\\n                </ng-template>\\r\\n                <ng-template columnDef=\\\"lastLoginDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                  {{ rowData.lastLoginDate | date: \\\"yyyy/MM/dd HH:mm:ss\\\" }}\\r\\n                </ng-template>\\r\\n                <ng-template columnDef=\\\"logIN\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i\\r\\n                    class=\\\"fa fa-circle amp-status-icon red\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    *ngIf=\\\"rowData.logIN !== null && rowData.logIN === 'red'\\\"\\r\\n                  ></i>\\r\\n                  <i\\r\\n                    class=\\\"fa fa-circle amp-status-icon green\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    *ngIf=\\\"rowData.logIN !== null && rowData.logIN === 'green'\\\"\\r\\n                  ></i>\\r\\n                </ng-template>\\r\\n                <ng-template rowExpansionDef let-rowData=\\\"rowData\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".employee\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.employee\\\" [disabled]=\\\"true\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ getComponentName() + \\\".userComment\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <span\\r\\n                          pTooltip=\\\"{{\\r\\n                            rowData.userComment && rowData.userComment.length > 30 ? rowData.userComment : ''\\r\\n                          }}\\\"\\r\\n                        >\\r\\n                          <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.userComment\\\" [disabled]=\\\"true\\\" />\\r\\n                        </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ getComponentName() + \\\".lastLogoutDate\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.lastLogoutDate\\\" [disabled]=\\\"true\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ getComponentName() + \\\".lastPasswordChangeDate\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          [(ngModel)]=\\\"rowData.lastPasswordChangeDate\\\"\\r\\n                          [disabled]=\\\"true\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<aw-update-profile-rights-popup-form\\r\\n  *ngIf=\\\"showUserProfileForm\\\"\\r\\n  [(display)]=\\\"showUserProfileForm\\\"\\r\\n  [selectedUsers]=\\\"editSelectedUsers\\\"\\r\\n>\\r\\n</aw-update-profile-rights-popup-form>\\r\\n\"","module.exports = \":host .form-group {\\n  margin-right: 20px;\\n  max-width: 15rem;\\n  min-width: 10rem;\\n  width: 20%; }\\n  :host .form-group:last-of-type {\\n    margin-right: 0; }\\n  :host .table-wrapper {\\n  width: 100%; }\\n  :host .users-program-list-table .red {\\n  color: #a90329; }\\n  :host .users-program-list-table .green {\\n  color: #50be87; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi91c2Vycy1zZWFyY2gvZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxhcHBcXG1haW5cXGFkbWluaXN0cmF0aW9uXFx1c2Vycy1zZWFyY2hcXHVzZXJzLXNlYXJjaC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUVJLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFVBQVUsRUFBQTtFQUxkO0lBUU0sZUFBZSxFQUFBO0VBUnJCO0VBYUksV0FBVyxFQUFBO0VBYmY7RUFrQk0sY0FwQmUsRUFBQTtFQUVyQjtFQXNCTSxjQXpCbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vdXNlcnMtc2VhcmNoL3VzZXJzLXNlYXJjaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiRncmVlbjogcmdiKDgwLCAxOTAsIDEzNSk7XHJcbiRyZWQ6IHJnYigxNjksIDMsIDQxKTtcclxuXHJcbjpob3N0IHtcclxuICAuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDE1cmVtO1xyXG4gICAgbWluLXdpZHRoOiAxMHJlbTtcclxuICAgIHdpZHRoOiAyMCU7XHJcblxyXG4gICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAudGFibGUtd3JhcHBlciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gIC51c2Vycy1wcm9ncmFtLWxpc3QtdGFibGUge1xyXG4gICAgLnJlZCB7XHJcbiAgICAgIGNvbG9yOiAkcmVkO1xyXG4gICAgfVxyXG5cclxuICAgIC5ncmVlbiB7XHJcbiAgICAgIGNvbG9yOiAkZ3JlZW47XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { ColumnAlignment, TableDataSource } from '../../../shared/components/table/table-data-source';\nimport { ComponentConstants } from '../../../shared/constants/component-constants';\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\nimport { DateService } from '../../../shared/services/date.service';\nimport { ExportService } from '../../../shared/services/export.service';\nimport { FavoriteService } from '../../../shared/services/favorite.service';\nimport { LoaderService } from '../../../shared/services/loader.service';\nimport { MessageService } from '../../../shared/services/message.service';\nimport { SerializationService } from '../../../shared/services/serialization.service';\nimport { TabService } from '../../../shared/services/tab.service';\nimport { BidoUserSearchInput } from '../../../shared/types/api-input-types/administration-users/bido-user-search-input.interface';\nimport { BidoCompanyTypeDTO } from '../../../shared/types/api-types/bido-company-type-dto.interface';\nimport { BidoUserDTOId } from '../../../shared/types/api-types/bido-user-dto-id.interface';\nimport { LabelValue } from '../../../shared/types/label-value.interface';\nimport { PageComponent } from '../../../shared/types/page-component';\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\nimport { StringUtils } from '../../../shared/utils/string-utils';\nimport { UsersFormService } from '../users-form/users-form.service';\n\nimport { UsersSearchService } from './users-search.service';\n\ninterface UserCustomExport {\n  lastname: string;\n  firstname: string;\n  login: string;\n  company?: string;\n  employee?: string;\n  userComment?: string;\n  validityDate?: string;\n  lastLoginDate?: string;\n  logIN?: string;\n  lastLogoutDate?: string;\n  lastPasswordChangeDate?: string;\n  isUserService?: boolean;\n  isUserMobile?: boolean;\n}\ninterface UsersCustomDTO extends UserCustomExport {\n  userId: string;\n  _expand?: boolean | false;\n  _id: string;\n}\n\n@Component({\n  selector: 'aw-users-search',\n  styleUrls: ['./users-search.component.scss'],\n  templateUrl: './users-search.component.html'\n})\nexport class UsersSearchComponent extends PageComponent<PageComponentData> implements OnInit {\n  private static readonly USERS_TABLE_EXPORT_NAME: string = 'users-list';\n\n  private static readonly CANT_DELETE_OWN_ACCOUNT: string = 'cantDeleteOwnAccount';\n  public searchObject: BidoUserSearchInput;\n  public showAdvancedCriteria: boolean;\n  public company: LabelValue<string>[];\n  public companyName?: string | undefined;\n  public userTableDataSource: TableDataSource<UsersCustomDTO>;\n  public isNavigationOverlayVisible: boolean;\n  public enableUserOpen: boolean;\n  public enableUserUpdate: boolean;\n  public enableUserDelete: boolean;\n  public showUserProfileForm: boolean;\n  public userNameDropDown: LabelValue<string>[];\n  public editSelectedUsers: UsersCustomDTO[];\n  private newLocal: string;\n  public companyDetails: BidoCompanyTypeDTO;\n  public isLoading: boolean;\n\n  /* HTML references ***********************************************************/\n\n  @ViewChild('resultsContainerAnchor')\n  public resultsContainerAnchor: ElementRef;\n\n  public constructor(\n    favoriteService: FavoriteService,\n    loaderService: LoaderService,\n    messageService: MessageService,\n    serializationService: SerializationService,\n    tabService: TabService,\n    private readonly usersSearchService: UsersSearchService,\n    private readonly usersFormService: UsersFormService,\n    private readonly confirmationService: ConfirmationService,\n    private readonly exportService: ExportService,\n    private readonly dateService: DateService\n  ) {\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\n    this.companyName = undefined;\n    this.company = [];\n    this.userNameDropDown = [];\n    this.newLocal = '';\n    this.showAdvancedCriteria = false;\n    this.isNavigationOverlayVisible = false;\n    this.showUserProfileForm = false;\n    this.enableUserOpen = true;\n    this.enableUserUpdate = true;\n    this.enableUserDelete = true;\n    this.isLoading = false;\n    this.resetSearchCriteria();\n    this.initUserTableDataSource();\n    this.searchObject = { bidoUserDTO: {}, companyName: undefined };\n  }\n\n  public getComponentName(): string {\n    return ComponentConstants.ADM_USERS_SEARCH;\n  }\n  public ngOnInit(): void {\n    super.ngOnInit();\n    this.loadCompany();\n    this.displayComponentContext('global.search', true);\n  }\n\n  public showNavigationOverlay(): void {\n    this.isNavigationOverlayVisible = true;\n  }\n\n  public hideNavigationOverlay(): void {\n    this.isNavigationOverlayVisible = false;\n  }\n\n  public onRowSelect() {\n    this.enableUserDelete = !this.userTableDataSource.hasData;\n    this.enableUserOpen = !this.userTableDataSource.hasData;\n    this.enableUserUpdate = !this.userTableDataSource.hasData || this.userTableDataSource.dataCount > 1;\n  }\n\n  public updateProfileRights(): void {\n    this.showUserProfileForm = true;\n    this.editSelectedUsers = this.userTableDataSource.dataSelection;\n  }\n\n  public deleteSelectedUsers(): void {\n    const confirmMessageKey =\n      this.userTableDataSource.dataCount > 1 ? 'confirmDeleteSelectedUsers' : 'confirmDeleteSelectedUser';\n\n    const bidoUserDTOId: BidoUserDTOId[] = [];\n    this.userTableDataSource.dataSelection.forEach((users) => {\n      if (users && users.userId) {\n        const userId: BidoUserDTOId = {\n          userId: users.userId\n        };\n        bidoUserDTOId.push(userId);\n      }\n    });\n    this.confirmationService.confirmDelete({\n      messageKey: this.getTranslateKey(confirmMessageKey),\n      accept: () => {\n        this.usersSearchService.removeUser(bidoUserDTOId).subscribe(\n          () => {\n            this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteUser'));\n            this.userTableDataSource.dataSelection = [];\n            this.loadUsersData();\n          },\n          (error) => {\n            const httpError = error as HttpErrorResponse;\n            if (!!httpError.error && !!httpError.error.errorDesc) {\n              const errorMessage: string = httpError.error.errorDesc as string;\n              if (errorMessage.startsWith(UsersSearchComponent.CANT_DELETE_OWN_ACCOUNT)) {\n                this.messageService.showErrorMessage(\n                  this.getTranslateKey(UsersSearchComponent.CANT_DELETE_OWN_ACCOUNT)\n                );\n              } else {\n                this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeleteUser'));\n              }\n            }\n          }\n        );\n      }\n    });\n  }\n\n  public exportTable(): void {\n    const usersExportData: (UserCustomExport | undefined)[] = this.userTableDataSource.dataSrc.map((user) => {\n      if (!!user) {\n        const usersRowExport: UserCustomExport = {\n          firstname: user.firstname,\n          lastname: user.lastname,\n          login: user.login,\n          company: user.company,\n\n          employee: user.employee,\n          userComment: user.userComment,\n          validityDate: user.validityDate,\n          lastLoginDate: user.lastLoginDate,\n          logIN: user.logIN,\n          lastLogoutDate: user.lastLogoutDate,\n          lastPasswordChangeDate: user.lastPasswordChangeDate,\n          isUserService: user.isUserService,\n          isUserMobile: user.isUserMobile\n        };\n\n        return usersRowExport;\n      } else {\n        super.throwUnboundLocalError('exportTable', 'user');\n      }\n    });\n    if (!!this.componentData) {\n      this.exportService.toExcel(\n        usersExportData,\n        UsersSearchComponent.USERS_TABLE_EXPORT_NAME,\n        this.componentData.componentId\n      );\n    } else {\n      super.throwUnboundLocalError('exportTable', 'this.componentData');\n    }\n  }\n\n  public openNewUser(): void {\n    this.openUser(undefined, ComponentOpenMode.Create);\n  }\n\n  public openSelectedUsers(): void {\n    this.userTableDataSource.dataSelection.forEach((user) => {\n      if (!!user) {\n        if (StringUtils.isNullOrEmpty(user.login)) {\n          this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingCode'));\n        } else {\n          this.openUser(user, ComponentOpenMode.Read);\n        }\n      }\n    });\n  }\n\n  public resetSearchCriteria(): void {\n    this.searchObject = {\n      bidoUserDTO: {},\n      companyName: undefined\n    };\n  }\n\n  public search(): void {\n    this.loadUsersData();\n  }\n\n  public toggleUserRowExpand(row: UsersCustomDTO): void {\n    row._expand = !row._expand;\n  }\n\n  private loadUsersData(): void {\n    if (this.searchObject.bidoUserDTO) {\n      if (!!this.companyDetails && !!this.companyDetails.companyTextMap && !!this.searchObject.companyName) {\n        this.newLocal = this.searchObject.companyName;\n        const searchInput = this.companyDetails.companyTextMap[this.newLocal];\n        this.companyName = searchInput.split('-')[1];\n      }\n      this.isLoading = true;\n      const searchObject: BidoUserSearchInput = {\n        bidoUserDTO: {\n          firstname: this.searchObject.bidoUserDTO.firstname,\n          lastname: this.searchObject.bidoUserDTO.lastname,\n          login: this.searchObject.bidoUserDTO.login\n        },\n        companyName: this.companyName\n      };\n      this.usersSearchService.findUsersBySearchCriteria(searchObject).subscribe((results) => {\n        this.isLoading = false;\n        const usersTable = results.map((res, i) => {\n          const logIn = res.lastLoginDate != undefined ? new Date(res.lastLoginDate).getTime() : 0;\n          const logOut = res.lastLogoutDate != undefined ? new Date(res.lastLogoutDate).getTime() : 0;\n          const userRow: UsersCustomDTO = {\n            userId: res.userId || '',\n            lastname: res.lastname || '',\n            firstname: res.firstname || '',\n            login: res.login || '',\n            company: res.company,\n            employee: res.employee,\n            userComment: res.userComment,\n            validityDate: this.dateService.dateToString(res.validityDate),\n            lastLoginDate: this.dateService.dateWithHourMinSecToString(res.lastLoginDate),\n            logIN: logIn > logOut ? 'green' : 'red',\n            lastLogoutDate: this.dateService.dateWithHourMinSecToString(res.lastLogoutDate),\n            lastPasswordChangeDate: this.dateService.dateWithHourMinSecToString(res.lastPasswordChangeDate),\n            isUserService: res.isUserService,\n            isUserMobile: res.isUserMobile,\n            _id: i.toString()\n          };\n\n          return userRow;\n        });\n        this.userTableDataSource.setData(usersTable);\n        this.userTableDataSource.dataSelection = [];\n        this.userTableDataSource.update();\n        this.companyName = undefined;\n      });\n    } else {\n      super.throwUnboundLocalError(\n        'search',\n        'this.searchObject.companyName && this.companyDetails.companyTextMap && this.searchObject.bidoUserDTO'\n      );\n    }\n  }\n\n  private loadCompany(): void {\n    this.usersFormService.companyMapping().subscribe((result) => {\n      if (!!result && !!result.companyTextMap) {\n        for (const property in result.companyTextMap) {\n          if (result.companyTextMap.hasOwnProperty(property)) {\n            const companyLabelValue: LabelValue<string> = {\n              label: result.companyTextMap[property],\n              value: property\n            };\n            this.company.push(companyLabelValue);\n          }\n        }\n        this.companyDetails = result;\n      }\n    });\n  }\n\n  private openUser(objectId: UsersCustomDTO | undefined, openMode: ComponentOpenMode): void {\n    const data: PageComponentData = {\n      id: this.tabService.generateId(),\n      componentId: ComponentConstants.ADM_USERS_FORM,\n      openMode\n    };\n    if (!!objectId) {\n      data.objectId = this.serializationService.serialize(objectId);\n    }\n    const labelKey = 'transaction.' + data.componentId;\n\n    this.tabService.open(this.tabService.create(data, labelKey, true));\n  }\n\n  private initUserTableDataSource(): void {\n    this.userTableDataSource = new TableDataSource({\n      allowMultiSelect: true,\n      columns: [\n        {\n          field: 'lastname',\n          translateKey: this.getTranslateKey('lastname'),\n          width: '10%'\n        },\n        { field: 'firstname', translateKey: this.getTranslateKey('firstname'), width: '10%' },\n        {\n          field: 'login',\n          translateKey: this.getTranslateKey('login'),\n          alignment: ColumnAlignment.CENTER,\n          width: '10%'\n        },\n        {\n          field: 'company',\n          translateKey: this.getTranslateKey('company'),\n          alignment: ColumnAlignment.CENTER,\n          width: '25%'\n        },\n        { field: 'validityDate', translateKey: this.getTranslateKey('validityDate'), width: '12%' },\n        { field: 'lastLoginDate', translateKey: this.getTranslateKey('lastLoginDate'), width: '15%' },\n        { field: 'logIN', translateKey: this.getTranslateKey('logIN'), alignment: ColumnAlignment.CENTER, width: '8%' },\n        { field: 'isUserService', translateKey: this.getTranslateKey('isUserService'), width: '5%' },\n        { field: 'isUserMobile', translateKey: this.getTranslateKey('isUserMobile'), width: '5%' }\n      ],\n      data: []\n    });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserProfileManagementApi } from '../../../shared/api/user-profile-management.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { BidoUserSearchInput } from '../../../shared/types/api-input-types/administration-users/bido-user-search-input.interface';\r\nimport { BidoUserDTOId } from '../../../shared/types/api-types/bido-user-dto-id.interface';\r\nimport { BidoUserDTO } from '../../../shared/types/api-types/bido-user-dto.interface';\r\nimport { CopyProfileDTO } from '../../../shared/types/api-types/copy-profile-dto.interface';\r\n\r\n@Injectable()\r\nexport class UsersSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly userProfileManagementApi: UserProfileManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findUsersBySearchCriteria(input: BidoUserSearchInput): Observable<BidoUserDTO[]> {\r\n    return super.post<BidoUserSearchInput, BidoUserDTO[]>(\r\n      this.userProfileManagementApi.findUsersBySearchCriteria,\r\n      input\r\n    );\r\n  }\r\n  public findAllBidoUsers(): Observable<BidoUserDTO[]> {\r\n    return super.post<void, BidoUserDTO[]>(this.userProfileManagementApi.findAllBidoUsers);\r\n  }\r\n\r\n  public removeUser(bidoUserDTOId: BidoUserDTOId[]): Observable<boolean> {\r\n    return super.post<BidoUserDTOId[], boolean>(this.userProfileManagementApi.removeUser, bidoUserDTOId);\r\n  }\r\n\r\n  public copyUserProfile(copyProfileDTO: CopyProfileDTO): Observable<boolean> {\r\n    return super.post<CopyProfileDTO, boolean>(this.userProfileManagementApi.copyUserProfile, copyProfileDTO);\r\n  }\r\n}\r\n","import { LabelValue } from '../../shared/types/label-value.interface';\r\n\r\nexport class LabelValueUtils {\r\n  /*\r\n   * DEPRECATED: do not use; create an interface instead\r\n   */\r\n  public static stringValueToLabel<T>(object: T, propertyName: string, propertyList: LabelValue<string>[]): boolean {\r\n    if (!!object[propertyName]) {\r\n      const labelValue = propertyList.find((property) => property.value === object[propertyName]);\r\n      if (!!labelValue) {\r\n        object[propertyName] = labelValue.label;\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /*\r\n   * DEPRECATED: do not use; create an interface instead\r\n   */\r\n  public static labelToStringValue<T>(object: T, propertyName: string, propertyList: LabelValue<string>[]): boolean {\r\n    if (!!object[propertyName]) {\r\n      const labelValue = propertyList.find((property) => property.label === object[propertyName]);\r\n      if (!!labelValue) {\r\n        object[propertyName] = labelValue.value;\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n"],"sourceRoot":""}