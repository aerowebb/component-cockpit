(window['webpackJsonp'] = window['webpackJsonp'] || []).push([
  ['fleet-management-fleet-management-module'],
  {
    /***/ './node_modules/primeng/inputswitch.js':
      /*!*********************************************!*\
  !*** ./node_modules/primeng/inputswitch.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /* Shorthand */

        function __export(m) {
          for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
        }
        Object.defineProperty(exports, '__esModule', { value: true });
        __export(
          __webpack_require__(
            /*! ./components/inputswitch/inputswitch */ './node_modules/primeng/components/inputswitch/inputswitch.js'
          )
        );

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-log/form/asset-log-form.component.html':
      /*!************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-log/form/asset-log-form.component.html ***!
  \************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div *ngIf="!isCreateOpenMode && componentData && componentData.objectId" class="page-subtitle">\r\n          - {{ serializationService.deserialize(componentData.objectId)["pnCode"] }} |\r\n          {{ serializationService.deserialize(componentData.objectId)["sn"] }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="page-actions">\r\n    <button\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show all actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n    <mat-menu #actions="matMenu">\r\n      <button mat-menu-item (click)="updateFavoriteState()">\r\n        {{ "page." + (isFavoriteEntry ? "removeFromFavorites" : "addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <mat-tab-group animationDuration="0ms" dynamicHeight>\r\n        <mat-tab>\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".historic" | translate }}\r\n          </ng-template>\r\n          <div class="grid-row">\r\n            <div #historicAnchor class="grid-cell--12" (click)="setSelectedAnchor(\'historicAnchor\')">\r\n              <div class="grid-cell grid-cell--container" [ngClass]="{ active: isSelectedAnchor(\'historicAnchor\') }">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".historic" | translate }} ({{\r\n                        historicTable1 ? historicTable1.length : 0\r\n                      }})\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <div class="table-wrapper">\r\n                    <p-table\r\n                      [resizableColumns]="true"\r\n                      #ptableHistoric\r\n                      class="aw-table2"\r\n                      [columns]="historicTableCols1"\r\n                      [value]="historicTable1"\r\n                      dataKey="dataId"\r\n                      [scrollable]="true"\r\n                    >\r\n                      <ng-template pTemplate="emptymessage">\r\n                        <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n                        <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                          <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                          <div class="lds-hourglass"></div>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template pTemplate="caption">\r\n                        <div class="aw-table-header">\r\n                          <div class="aw-table-global-filter">\r\n                            <label class="aw-table-global-filter-label">\r\n                              <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                            </label>\r\n\r\n                            <input\r\n                              #ptableHistoricGlobalFilter\r\n                              class="aw-table-global-filter-input"\r\n                              type="text"\r\n                              placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                              (input)="ptableHistoric.filterGlobal($event.target.value, \'contains\')"\r\n                            />\r\n                          </div>\r\n\r\n                          <div class="aw-table-actions"></div>\r\n                          <!-- <div class="aw-table-icon-actions">\r\n                          <i\r\n                            class="fa fa-fw fa-arrows-alt aw-icon aw-icon-with-border"\r\n                            aria-hidden="true"\r\n                            pTooltip="{{ \'global.showTableFullScreen\' | translate }}"\r\n                            tooltipPosition="top"\r\n                            (click)="loadHistoricDetailTableData()"\r\n                          ></i>\r\n                        </div> -->\r\n                        </div>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="colgroup" let-columns>\r\n                        <colgroup>\r\n                          <col class="aw-table-checkbox-wrapper" />\r\n                          <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                        </colgroup>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n                          <th></th>\r\n\r\n                          <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                            {{ componentData.componentId + "." + col.field | translate }}\r\n                          </th>\r\n                        </tr>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                        <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                          <td></td>\r\n\r\n                          <td\r\n                            *ngFor="let col of columns"\r\n                            [ngSwitch]="col.field"\r\n                            [ngStyle]="{ \'text-align\': col.alignment }"\r\n                          >\r\n                            <span *ngSwitchCase="\'statusDateField\'">\r\n                              {{ rowData["statusDate"] | date: "yyyy/MM/dd HH:mm":"":translateService.currentLang }}\r\n                            </span>\r\n                            <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\r\n                          </td>\r\n                        </tr>\r\n                      </ng-template>\r\n                    </p-table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- ********************************************************************** -->\r\n          <!-- Dialog: full screen Historic -->\r\n          <!-- ********************************************************************** -->\r\n\r\n          <!-- <a-modal class="aw-table-fullscreen" [(visible)]="displayHistoricFullScreen" [fullScreen]="true">\r\n          <a-header>\r\n            <div class="modal__title-container">\r\n              <div class="modal__title">Historic ({{ historicTable2 ? historicTable2.length : 0 }})</div>\r\n            </div>\r\n  \r\n            <div class="close"><i class="material-icons" (click)="closeHistoricDialog()">close</i></div>\r\n          </a-header>\r\n  \r\n          <a-content>\r\n            <p-table [resizableColumns]="true"\r\n              #ptableHistoricFull\r\n              class="aw-table2"\r\n              [columns]="historicTableCols2"\r\n              [value]="historicTable2"\r\n              [scrollable]="true"\r\n            >\r\n              <ng-template pTemplate="emptymessage">\r\n                <span *ngIf="!isLoading"> &nbsp;</span>\r\n  \r\n                <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                  <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                  <div class="lds-hourglass"></div>\r\n                </div>\r\n              </ng-template>\r\n  \r\n              <ng-template pTemplate="caption">\r\n                <div class="aw-table-header">\r\n                  <div class="aw-table-global-filter">\r\n                    <label class="aw-table-global-filter-label">\r\n                      <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                    </label>\r\n  \r\n                    <input\r\n                      #ptableHistoricFullGlobalFilter\r\n                      class="aw-table-global-filter-input"\r\n                      type="text"\r\n                      placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                      (input)="ptableHistoricFull.filterGlobal($event.target.value, \'contains\')"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n  \r\n              <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                  <col class="aw-table-checkbox-wrapper" />\r\n                  <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                  <col class="row-expand-wrapper" />\r\n                </colgroup>\r\n              </ng-template>\r\n  \r\n              <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                  <th></th>\r\n  \r\n                  <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                    {{ componentData.componentId + "." + col.field | translate }}\r\n                  </th>\r\n  \r\n                  <th class="row-expand-wrapper"></th>\r\n                </tr>\r\n              </ng-template>\r\n  \r\n              <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                  <td></td>\r\n                  <td *ngFor="let col of columns" [ngSwitch]="col.field" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                    <span *ngSwitchCase="\'dateOfChange\'">\r\n                      <td>{{ rowData[col.field] | date: "yyyy/MM/dd HH:mm":"":translateService.currentLang }}</td>\r\n                    </span>\r\n                    <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n            </p-table>\r\n          </a-content>\r\n        </a-modal> -->\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".update" | translate }}\r\n          </ng-template>\r\n          <div class="grid-row">\r\n            <div #updatesAnchor class="grid-cell--12" (click)="setSelectedAnchor(\'updatesAnchor\')">\r\n              <div class="grid-cell grid-cell--container" [ngClass]="{ active: isSelectedAnchor(\'updatesAnchor\') }">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".update" | translate }} ({{\r\n                        updateTable ? updateTable.length : 0\r\n                      }})\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <div class="table-wrapper">\r\n                    <p-table\r\n                      [resizableColumns]="true"\r\n                      #ptableUpdate\r\n                      class="aw-table2"\r\n                      [columns]="updateTableCols1"\r\n                      [value]="updateTable"\r\n                      [scrollable]="true"\r\n                      dataKey="rowId"\r\n                    >\r\n                      <ng-template pTemplate="emptymessage">\r\n                        <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n                        <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                          <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                          <div class="lds-hourglass"></div>\r\n                        </div>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="caption">\r\n                        <div class="aw-table-header">\r\n                          <div class="aw-table-global-filter">\r\n                            <label class="aw-table-global-filter-label">\r\n                              <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                            </label>\r\n\r\n                            <input\r\n                              #ptableUpdateGlobalFilter\r\n                              class="aw-table-global-filter-input"\r\n                              type="text"\r\n                              placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                              (input)="ptableUpdate.filterGlobal($event.target.value, \'contains\')"\r\n                            />\r\n                          </div>\r\n                          <div class="aw-table-actions"></div>\r\n                          <!-- <div class="aw-table-icon-actions">\r\n                            <i\r\n                              class="fa fa-fw fa-arrows-alt aw-icon aw-icon-with-border"\r\n                              aria-hidden="true"\r\n                              pTooltip="{{ \'global.showTableFullScreen\' | translate }}"\r\n                              tooltipPosition="top"\r\n                              (click)="displayUpdateFullScreen = true"\r\n                            ></i>\r\n                          </div> -->\r\n                        </div>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="colgroup" let-columns>\r\n                        <colgroup>\r\n                          <col class="aw-table-checkbox-wrapper" />\r\n                          <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          <col class="row-expand-wrapper" />\r\n                          <col class="row-action-wrapper" />\r\n                        </colgroup>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n                          <th></th>\r\n\r\n                          <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                            {{ componentData.componentId + "." + col.field | translate }}\r\n                          </th>\r\n                          <th class="row-expand-wrapper"></th>\r\n                          <th class="row-action-wrapper"></th>\r\n                        </tr>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n                          <th></th>\r\n\r\n                          <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                            {{ componentData.componentId + "." + col.field | translate }}\r\n                          </th>\r\n                        </tr>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                        <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                          <td></td>\r\n\r\n                          <td\r\n                            *ngFor="let col of columns"\r\n                            [ngSwitch]="col.field"\r\n                            [ngStyle]="{ \'text-align\': col.alignment }"\r\n                          >\r\n                            <span *ngSwitchCase="\'timestamp\'">\r\n                              {{ rowData[col.field] | date: "yyyy/MM/dd HH:mm":"":translateService.currentLang }}\r\n                            </span>\r\n                            <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\r\n                          </td>\r\n                          <td class="row-expand-wrapper" [pRowToggler]="rowData">\r\n                            <i\r\n                              class="fa fa-fw aw-icon aw-icon-with-border"\r\n                              [ngClass]="rowData._expand ? \'fa-minus\' : \'fa-plus\'"\r\n                              aria-hidden="true"\r\n                              pTooltip="{{ \'global.showTableRowDetails\' | translate }}"\r\n                              tooltipPosition="top"\r\n                              (click)="toggleDefectsExpand(rowData)"\r\n                            ></i>\r\n                          </td>\r\n                        </tr>\r\n                      </ng-template>\r\n                      <ng-template pTemplate="rowexpansion" let-rowData let-columns="columns">\r\n                        <tr class="row-expanded" *ngIf="rowData._expand">\r\n                          <td [attr.colspan]="columns.length + 2">\r\n                            <aw-asset-log-table-remaining-values\r\n                              [row]="rowData"\r\n                              [remainingTable]="remainingTable"\r\n                              [secondTable]="secondTable"\r\n                              [secondTableCols]="secondTableCols"\r\n                              [remainingTableCols]="remainingTableCols"\r\n                            ></aw-asset-log-table-remaining-values>\r\n                          </td>\r\n                        </tr>\r\n                      </ng-template>\r\n                    </p-table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- ********************************************************************** -->\r\n          <!-- Dialog: full screen Updates-->\r\n          <!-- ********************************************************************** -->\r\n          <!-- \r\n          <a-modal class="aw-table-fullscreen" [(visible)]="displayUpdateFullScreen" [fullScreen]="true">\r\n            <a-header>\r\n              <div class="modal__title-container">\r\n                <div class="modal__title">Update ({{ updateTable ? updateTable.length : 0 }})</div>\r\n              </div>\r\n    \r\n              <div class="close"><i class="material-icons" (click)="closeUpdateDialog()">close</i></div>\r\n            </a-header>\r\n    \r\n            <a-content>\r\n              <p-table [resizableColumns]="true"\r\n                #ptableUpdateFull\r\n                class="aw-table2"\r\n                [columns]="updateTableCols2"\r\n                [value]="updateTable"\r\n                [scrollable]="true"\r\n              >\r\n                <ng-template pTemplate="emptymessage">\r\n                  <span *ngIf="!isLoading"> &nbsp;</span>\r\n    \r\n                  <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                    <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                    <div class="lds-hourglass"></div>\r\n                  </div>\r\n                </ng-template>\r\n    \r\n                <ng-template pTemplate="caption">\r\n                  <div class="aw-table-header">\r\n                    <div class="aw-table-global-filter">\r\n                      <label class="aw-table-global-filter-label">\r\n                        <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                      </label>\r\n    \r\n                      <input\r\n                        #ptableUpdateFullGlobalFilter\r\n                        class="aw-table-global-filter-input"\r\n                        type="text"\r\n                        placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                        (input)="ptableUpdateFull.filterGlobal($event.target.value, \'contains\')"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </ng-template>\r\n    \r\n                <ng-template pTemplate="colgroup" let-columns>\r\n                  <colgroup>\r\n                    <col class="aw-table-checkbox-wrapper" />\r\n                    <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                    <col class="row-expand-wrapper" />\r\n                  </colgroup>\r\n                </ng-template>\r\n    \r\n                <ng-template pTemplate="header" let-columns>\r\n                  <tr>\r\n                    <th></th>\r\n    \r\n                    <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                      {{ componentData.componentId + "." + col.field | translate }}\r\n                    </th>\r\n    \r\n                    <th class="row-expand-wrapper"></th>\r\n                  </tr>\r\n                </ng-template>\r\n    \r\n                <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                  <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                    <td></td>\r\n    \r\n                    <td *ngFor="let col of columns" [ngSwitch]="col.field" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                      <div *ngSwitchCase="\'timestamp\'">\r\n                        <span> {{ rowData[col.field] | date: "yyyy/MM/dd HH:mm":"":translateService.currentLang }} </span>\r\n                      </div>\r\n                      <div *ngSwitchDefault>{{ rowData[col.field] }}</div>\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n              </p-table>\r\n            </a-content>\r\n          </a-modal> -->\r\n        </mat-tab>\r\n        <mat-tab>\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".reports" | translate }}\r\n          </ng-template>\r\n          <div class="grid-row">\r\n            <div #reportAnchor class="grid-cell--12" (click)="setSelectedAnchor(\'reportAnchor\')">\r\n              <div class="grid-cell grid-cell--container" [ngClass]="{ active: isSelectedAnchor(\'reportAnchor\') }">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".reports" | translate }} ({{\r\n                        reportTable ? reportTable.length : 0\r\n                      }})\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <p-table\r\n                    [resizableColumns]="true"\r\n                    #ptableReport\r\n                    class="aw-table2"\r\n                    [columns]="reportTableCols"\r\n                    [value]="reportTable"\r\n                    [(selection)]="selectedReports"\r\n                    [scrollable]="true"\r\n                  >\r\n                    <ng-template pTemplate="emptymessage">\r\n                      <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n                      <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                        <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                        <div class="lds-hourglass"></div>\r\n                      </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="caption">\r\n                      <div class="aw-table-header" [ngClass]="{ \'rows-selected\': selectedReports.length > 0 }">\r\n                        <div class="aw-table-global-filter">\r\n                          <label class="aw-table-global-filter-label">\r\n                            <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                          </label>\r\n\r\n                          <input\r\n                            #ptableReportGlobalFilter\r\n                            class="aw-table-global-filter-input"\r\n                            type="text"\r\n                            placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                            (input)="ptableReport.filterGlobal($event.target.value, \'contains\')"\r\n                          />\r\n                        </div>\r\n\r\n                        <div class="aw-table-actions">\r\n                          <button\r\n                            *ngIf="selectedReports.length > 0"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            color="warn"\r\n                            (click)="deleteReports()"\r\n                          >\r\n                            {{ "global.delete" | translate }}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="colgroup" let-columns>\r\n                      <colgroup>\r\n                        <col class="aw-table-checkbox-wrapper" />\r\n                        <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                      </colgroup>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="header" let-columns>\r\n                      <tr>\r\n                        <th class="aw-table-checkbox-wrapper">\r\n                          <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                        </th>\r\n\r\n                        <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                          {{ componentData.componentId + "." + col.field | translate }}\r\n                        </th>\r\n                      </tr>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                      <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                        <td class="aw-table-checkbox-wrapper">\r\n                          <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n                        </td>\r\n\r\n                        <td\r\n                          *ngFor="let col of columns"\r\n                          [ngSwitch]="col.field"\r\n                          [ngStyle]="{ \'text-align\': col.alignment }"\r\n                        >\r\n                          <div *ngSwitchCase="\'reportName\'">\r\n                            <span\r\n                              (click)="openReportDetail(rowData)"\r\n                              style="cursor: pointer; text-decoration: underline; color: blue"\r\n                            >\r\n                              {{ rowData[col.field] }}\r\n                            </span>\r\n                          </div>\r\n                          <div *ngSwitchCase="\'statusDate\'">\r\n                            <span>\r\n                              {{ rowData[col.field] | date: "yyyy/MM/dd HH:mm":"":translateService.currentLang }}\r\n                            </span>\r\n                          </div>\r\n                          <div *ngSwitchDefault>{{ rowData[col.field] }}</div>\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </p-table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </div>\r\n</div>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-log/form/asset-log-form.component.ts':
      /*!**********************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-log/form/asset-log-form.component.ts ***!
  \**********************************************************************************/
      /*! exports provided: AssetLogFormComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'AssetLogFormComponent', function() {
          return AssetLogFormComponent;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs */ './node_modules/rxjs/_esm5/index.js'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../shared/services/confirmation.service */ './src/app/shared/services/confirmation.service.ts'
        );
        /* harmony import */ var _shared_services_date_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../../shared/services/date.service */ './src/app/shared/services/date.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_input_validation_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../../shared/services/input-validation.service */ './src/app/shared/services/input-validation.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../../shared/types/form-page-component */ './src/app/shared/types/form-page-component.ts'
        );
        /* harmony import */ var _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../../shared/utils/file-utils */ './src/app/shared/utils/file-utils.ts'
        );
        /* harmony import */ var _shared_utils_label_value_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../../shared/utils/label-value-utils */ './src/app/shared/utils/label-value-utils.ts'
        );
        /* harmony import */ var _asset_log_form_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ./asset-log-form.service */ './src/app/main/fleet-management/asset-log/form/asset-log-form.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var AssetLogFormComponent = /** @class */ (function(_super) {
          __extends(AssetLogFormComponent, _super);
          function AssetLogFormComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService,
            inputValidationService,
            translateService,
            assetLogFormService,
            confirmationService,
            dateService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_5__['ComponentOpenMode'].Read,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService
              ) || this;
            _this.inputValidationService = inputValidationService;
            _this.translateService = translateService;
            _this.assetLogFormService = assetLogFormService;
            _this.confirmationService = confirmationService;
            _this.dateService = dateService;
            _this.setTableCols();
            _this.resultsTable = {
              list: [],
              moreResults: false
            };
            _this.selectedAnchor = undefined;
            _this.init();
            return _this;
          }
          AssetLogFormComponent.prototype.getComponentName = function() {
            return _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_4__['ComponentConstants']
              .FLE_ASSET_LOG_FORM;
          };
          AssetLogFormComponent.prototype.ngOnInit = function() {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            if (this.componentData) {
              this.updateOpenMode(this.componentData.openMode);
              var contextMode = this.isCreateOpenMode
                ? 'tab.createMode'
                : !!this.componentData.objectId &&
                  ' P/N ' +
                    this.serializationService.deserialize(this.componentData.objectId).pnCode +
                    '\n        | S/N ' +
                    this.serializationService.deserialize(this.componentData.objectId).sn;
              if (!!contextMode) {
                this.displayComponentContext(contextMode, this.isCreateOpenMode);
              }
              var isAircraft =
                this.componentData.objectId &&
                this.serializationService.deserialize(this.componentData.objectId).equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_3__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_AIRCRAFT_KEY;
              Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['forkJoin'])({
                customers: this.assetLogFormService.findBidoCustomersBySearchCriteria({}),
                equipmentFunctionList: this.assetLogFormService.getEquipmentFunctionList(),
                objectStatuses: this.assetLogFormService.getObjectStatusMap(),
                operationalStatuses: isAircraft
                  ? this.assetLogFormService.getOperationalStatusMapForAircraft()
                  : this.assetLogFormService.getOperationalStatusMap()
              }).subscribe(function(result) {
                _this.propertyFunction = result.equipmentFunctionList;
                _this.propertyOperationalStatus = result.operationalStatuses;
                _this.propertyStatus = result.objectStatuses;
                if (result.customers) {
                  _this.resultsTable = result.customers;
                  _this.loadHistoricTableData();
                  _this.loadUpdateTableData();
                  _this.loadReportTableData();
                }
              });
            }
            this.toc = [
              {
                id: 'historicAnchor',
                anchor: this.historicAnchor,
                label: this.translateService.instant('historic')
              },
              {
                id: 'updatesAnchor',
                anchor: this.updatesAnchor,
                label: this.translateService.instant('updates')
              },
              {
                id: 'reportAnchor',
                anchor: this.reportAnchor,
                label: this.translateService.instant('reports')
              }
            ];
          };
          AssetLogFormComponent.prototype.init = function() {
            this.propertyStatus = [];
            this.propertyOperationalStatus = [];
            this.propertyFunction = [];
            this.familyVariant = undefined;
            this.historicTable1 = [];
            this.updateTable = [];
            this.reportTable = [];
            this.selectedReports = [];
            this.displayHistoricFullScreen = false;
            this.displayUpdateFullScreen = false;
            this.remainingTable = [];
            this.remainingTableCols = [];
            this.secondTable = [];
            this.secondTableCols = [];
          };
          AssetLogFormComponent.prototype.isSelectedAnchor = function(anchorId) {
            return anchorId === this.selectedAnchor;
          };
          AssetLogFormComponent.prototype.setSelectedAnchor = function(anchorId) {
            this.selectedAnchor = anchorId;
          };
          AssetLogFormComponent.prototype.setTableCols = function() {
            this.reportTableCols = [
              { field: 'reportName', alignment: 'left' },
              { field: 'statusUser', alignment: 'left' },
              { field: 'statusDate', alignment: 'left' }
            ];
            this.updateTableCols1 = [
              { field: 'timestamp', alignment: 'left' },
              { field: 'statusUser', alignment: 'left' },
              { field: 'statusState', alignment: 'left' },
              { field: 'action', alignment: 'left' },
              { field: 'familyVariantCode', alignment: 'left' },
              { field: 'equEquipmentCodeUpdate', alignment: 'left' },
              { field: 'pnCode', alignment: 'left' },
              { field: 'sn', alignment: 'left' }
            ];
            this.updateTableCols2 = [
              { field: 'timestamp', alignment: 'left' },
              { field: 'statusUser', alignment: 'left' },
              { field: 'statusState', alignment: 'left' },
              { field: 'action', alignment: 'left' },
              { field: 'familyVariantCode', alignment: 'left' },
              { field: 'equEquipmentCodeUpdate', alignment: 'left' },
              { field: 'pnCode', alignment: 'left' },
              { field: 'sn', alignment: 'left' },
              { field: 'equipmentFunction', alignment: 'left' },
              { field: 'ownerCustomerCode', alignment: 'left' },
              { field: 'operatorCustomerCode', alignment: 'left' },
              { field: 'modelCode', alignment: 'left' }
            ];
            this.historicTableCols1 = [
              { field: 'statusDateField', alignment: 'left' },
              { field: 'statusUser', alignment: 'left' },
              { field: 'fieldName', alignment: 'left' },
              { field: 'fieldOldValue', alignment: 'left' },
              { field: 'fieldNewValue', alignment: 'left' }
            ];
            this.historicTableCols2 = [
              { field: 'dateOfChange', alignment: 'left' },
              { field: 'statusUser', alignment: 'left' },
              { field: 'familyVariantCode', alignment: 'left' },
              { field: 'equEquipmentCode', alignment: 'left' },
              { field: 'pn', alignment: 'left' },
              { field: 'sn', alignment: 'left' },
              { field: 'owner', alignment: 'left' },
              { field: 'operator', alignment: 'left' },
              { field: 'modelCode', alignment: 'left' },
              { field: 'operationalStatus', alignment: 'left' },
              { field: 'zone', alignment: 'left' },
              { field: 'country', alignment: 'left' }
            ];
          };
          AssetLogFormComponent.prototype.closeHistoricDialog = function() {
            this.displayHistoricFullScreen = false;
          };
          AssetLogFormComponent.prototype.closeUpdateDialog = function() {
            this.displayUpdateFullScreen = false;
          };
          AssetLogFormComponent.prototype.loadHistoricTableData = function() {
            var _this = this;
            if (!!this.componentData.objectId) {
              var equipCode = this.serializationService.deserialize(
                this.serializationService.deserialize(this.componentData.objectId).equipmentCode
              ).equipmentCode;
              var userId = {
                equipmentCode: equipCode
              };
              if (!!userId) {
                this.assetLogFormService.getHistoricTableData(userId).subscribe(
                  function(result) {
                    if (result !== null && result !== undefined) {
                      _this.historicTable1 = [];
                      _this.historicTable1 = result.map(function(historic) {
                        if (historic.fieldName === 'OPERATIONAL_STATUS') {
                          _this.labelValueMap(historic);
                        }
                        if (historic.fieldName === 'OPERATOR' || historic.fieldName === 'OWNER') {
                          _this.labelValueOwnerOperatorMap(historic);
                        }
                        var historicRow = {
                          statusDateField: _this.dateService.dateWithHourToString(historic.statusDate),
                          statusDate: _this.dateService.dateWithHourToString(historic.statusDate),
                          fieldName: historic.fieldName,
                          fieldOldValue: historic.fieldOldValue,
                          fieldNewValue: historic.fieldNewValue,
                          statusUser: historic.statusUser
                        };
                        return historicRow;
                      });
                    } else {
                      _super.prototype.throwUnboundLocalError.call(_this, 'loadHistoricTableData', 'result');
                    }
                  },
                  function() {
                    _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnLoadHistoricData'));
                  }
                );
              }
            }
          };
          AssetLogFormComponent.prototype.labelValueMap = function(element) {
            if (!!element.fieldOldValue) {
              _shared_utils_label_value_utils__WEBPACK_IMPORTED_MODULE_16__['LabelValueUtils'].stringValueToLabel(
                element,
                'fieldOldValue',
                this.propertyOperationalStatus
              );
            }
            if (!!element.fieldNewValue) {
              _shared_utils_label_value_utils__WEBPACK_IMPORTED_MODULE_16__['LabelValueUtils'].stringValueToLabel(
                element,
                'fieldNewValue',
                this.propertyOperationalStatus
              );
            }
          };
          AssetLogFormComponent.prototype.labelValueOwnerOperatorMap = function(element) {
            this.resultsTable.list.forEach(function(res) {
              if (!!element.fieldOldValue && res.customerCode === element.fieldOldValue) {
                element.fieldOldValue = res.customerName + ' (' + res.customerCode + ')';
              } else if (!!element.fieldNewValue && res.customerCode === element.fieldNewValue) {
                element.fieldNewValue = res.customerName + ' (' + res.customerCode + ')';
              }
            });
          };
          AssetLogFormComponent.prototype.loadUpdateTableData = function() {
            var _this = this;
            if (!!this.componentData.objectId) {
              var equipCode = this.serializationService.deserialize(
                this.serializationService.deserialize(this.componentData.objectId).equipmentCode
              ).equipmentCode;
              var userId = {
                equipmentCode: equipCode
              };
              if (!!userId) {
                this.assetLogFormService.getUpdateTableData(userId).subscribe(
                  function(result) {
                    if (result !== null && result !== undefined) {
                      result.forEach(function(element) {
                        if (element.equipmentFunction) {
                          element.equipmentFunction = _this.propertyFunction.filter(function(action) {
                            return action.value === element.equipmentFunction;
                          })[0].label;
                        }
                        if (element.statusState) {
                          element.statusState = _this.propertyStatus.filter(function(action) {
                            return action.value === element.statusState;
                          })[0].label;
                        }
                        if (element.operationalStatus) {
                          element.operationalStatus = _this.propertyOperationalStatus.filter(function(action) {
                            return action.value === element.operationalStatus;
                          })[0].label;
                        }
                      });
                      _this.updateTable = [];
                      _this.updateTable = result.map(function(update) {
                        var updateFRow = {
                          timestamp: _this.dateService.timestampWithHourToString(update.timestamp),
                          statusUser: update.statusUser,
                          statusState: update.statusState,
                          action: update.action,
                          familyVariantCode: update.familyVariantCode,
                          equEquipmentCodeUpdate: update.equEquipmentCode,
                          pnCode: update.pnCode,
                          sn: update.sn,
                          equipmentFunction: update.equipmentFunction,
                          ownerCustomerCode: update.ownerCustomerCode,
                          operatorCustomerCode: update.operatorCustomerCode,
                          modelCode: update.modelCode,
                          operationalStatus: update.operationalStatus,
                          functionCode: update.functionCode,
                          equiPosition: update.equiPosition,
                          chapter: update.chapter,
                          section: update.section,
                          subject: update.subject,
                          sheet: update.sheet,
                          marks: update.marks,
                          equipmentDesignation: update.equipmentDesignation,
                          snManufacturer: update.snManufacturer,
                          manufacturingDate: update.manufacturingDate,
                          manufacturingConfiguration: update.manufacturingConfiguration,
                          zone: update.zone,
                          country: update.country,
                          rowId: Math.random()
                        };
                        return updateFRow;
                      });
                    } else {
                      _super.prototype.throwUnboundLocalError.call(_this, 'loadUpdateTableData', 'result');
                    }
                  },
                  function() {
                    _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnLoadUpdateData'));
                  }
                );
              }
            }
          };
          AssetLogFormComponent.prototype.loadReportTableData = function() {
            var _this = this;
            if (!!this.componentData.objectId) {
              var equipCode = this.serializationService.deserialize(
                this.serializationService.deserialize(this.componentData.objectId).equipmentCode
              ).equipmentCode;
              var userId = {
                equipmentCode: equipCode
              };
              if (!!userId) {
                this.assetLogFormService.getReportTableData(userId).subscribe(
                  function(result) {
                    if (result !== null && result !== undefined) {
                      _this.reportTable = [];
                      _this.reportTable = result.map(function(report) {
                        var reportRow = {
                          statusDate: _this.dateService.dateWithHourToString(report.statusDate),
                          reportName: report.reportName,
                          statusUser: report.statusUser,
                          reportId: report.reportId
                        };
                        return reportRow;
                      });
                    } else {
                      _super.prototype.throwUnboundLocalError.call(_this, 'loadReportTableData', 'result');
                    }
                  },
                  function() {
                    _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnLoadReportData'));
                  }
                );
              }
            }
          };
          AssetLogFormComponent.prototype.loadHistoricDetailTableData = function() {
            var _this = this;
            this.displayHistoricFullScreen = true;
            if (!!this.componentData.objectId) {
              var equipCode = this.serializationService.deserialize(
                this.serializationService.deserialize(this.componentData.objectId).equipmentCode
              ).equipmentCode;
              if (!!equipCode) {
                this.assetLogFormService.getHistoricDetailTableData(equipCode).subscribe(
                  function(result) {
                    if (result !== null && result !== undefined) {
                      result.forEach(function(element) {
                        if (element.operationalStatus) {
                          element.operationalStatus = _this.propertyOperationalStatus.filter(function(action) {
                            return action.value === element.operationalStatus;
                          })[0].label;
                        }
                      });
                      _this.historicTable2 = [];
                      _this.historicTable2 = result.map(function(historic) {
                        var historicFRow = {
                          dateOfChange: _this.dateService.dateWithHourToString(historic.dateOfChange),
                          statusUser: historic.statusUser,
                          familyVariantCode: historic.familyVariantCode,
                          equEquipmentCode: historic.equEquipmentCode,
                          pn: historic.pn,
                          sn: historic.sn,
                          owner:
                            !!historic.owner && !!historic.owner.customerName && !!historic.owner.customerCode
                              ? historic.owner.customerName + '(' + historic.owner.customerCode + ')'
                              : !!historic.owner &&
                                !!historic.owner.customerName &&
                                (historic.owner.customerCode === null || undefined)
                              ? '' + historic.owner.customerName
                              : !!historic.owner &&
                                !!historic.owner.customerCode &&
                                (historic.owner.customerName === null || undefined)
                              ? '' + historic.owner.customerCode
                              : undefined,
                          operator:
                            !!historic.operator && !!historic.operator.customerName && !!historic.operator.customerCode
                              ? historic.operator.customerCode + '(' + historic.operator.customerName + ')'
                              : !!historic.operator &&
                                !!historic.operator.customerName &&
                                (historic.operator.customerCode === null || undefined)
                              ? '' + historic.operator.customerName
                              : !!historic.operator &&
                                !!historic.operator.customerCode &&
                                (historic.operator.customerName === null || undefined)
                              ? '' + historic.operator.customerCode
                              : undefined,
                          modelCode: historic.modelCode,
                          operationalStatus: historic.operationalStatus,
                          zone: historic.zone,
                          country: historic.country
                        };
                        return historicFRow;
                      });
                    } else {
                      _super.prototype.throwUnboundLocalError.call(_this, 'loadHistoricDetailTableData', 'result');
                    }
                  },
                  function() {
                    _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnLoadHistoricFullData'));
                  }
                );
              }
            }
          };
          AssetLogFormComponent.prototype.downLoadFiles = function(docFile, docName) {
            _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_15__['FileUtils'].downloadFile(docFile, docName);
          };
          AssetLogFormComponent.prototype.openReportDetail = function(object) {
            var _this = this;
            var partialMessageKey = this.getTranslateKey('openReport');
            this.confirmationService.confirm({
              interpolateParams: { 'openReport.reportName': object.reportName },
              messageKey: partialMessageKey,
              accept: function() {
                if (!!object.reportId) {
                  var bidoReportDTOId = {
                    reportId: object.reportId
                  };
                  _this.assetLogFormService
                    .findBidoReportContentOfBidoReport(bidoReportDTOId)
                    .subscribe(function(result) {
                      if (!!object.reportName) {
                        _this.downLoadFiles(result, object.reportName);
                      } else {
                        _super.prototype.throwUnboundLocalError.call(_this, 'openReportDetail', 'object.reportName');
                      }
                    });
                } else {
                  _super.prototype.throwUnboundLocalError.call(_this, 'openReportDetail', 'object.reportId');
                }
              }
            });
          };
          // Event to delete report entry
          AssetLogFormComponent.prototype.deleteReports = function() {
            var _this = this;
            if (this.selectedReports !== []) {
              var partialMessageKey_1 =
                this.selectedReports.length > 1 ? 'confirmDeleteSelectedReports' : 'confirmDeleteSelectedReport';
              var reports_1 = new Array();
              this.selectedReports.forEach(function(report) {
                if (report && report.reportId) {
                  var reportId = {
                    reportId: report.reportId
                  };
                  reports_1.push(reportId);
                }
              });
              this.confirmationService.confirmDelete({
                messageKey: this.getTranslateKey(partialMessageKey_1),
                accept: function() {
                  _this.assetLogFormService.deleteReportEntry(reports_1).subscribe(
                    function(results) {
                      var messageKey =
                        partialMessageKey_1 === 'confirmDeleteSelectedReports'
                          ? _this.getTranslateKey('successOnDeleteReports')
                          : _this.getTranslateKey('successOnDeleteReport');
                      _this.messageService.showSuccessMessage(messageKey);
                      _this.loadReportTableData();
                      _this.selectedReports = [];
                    },
                    function() {
                      var messageKey =
                        partialMessageKey_1 === 'confirmDeleteSelectedReports'
                          ? _this.getTranslateKey('errorOnDeleteReports')
                          : _this.getTranslateKey('errorOnDeleteReport');
                      _this.messageService.showErrorMessage(messageKey);
                    }
                  );
                }
              });
            }
          };
          AssetLogFormComponent.prototype.toggleDefectsExpand = function(row) {
            row._expand = !row._expand;
            this.remainingTable = [];
            this.secondTable = [];
            this.remainingTableCols = [
              { field: 'equipmentFunction', alignment: 'left' },
              { field: 'ownerCustomerCode', alignment: 'left' },
              { field: 'operatorCustomerCode', alignment: 'left' },
              { field: 'modelCode', alignment: 'left' },
              { field: 'operationalStatus', alignment: 'left' },
              { field: 'functionCode', alignment: 'left' },
              { field: 'equiPosition', alignment: 'left' },
              { field: 'chapter', alignment: 'left' },
              { field: 'section', alignment: 'left' }
            ];
            this.secondTableCols = [
              { field: 'subject', alignment: 'left' },
              { field: 'sheet', alignment: 'left' },
              { field: 'marks', alignment: 'left' },
              { field: 'equipmentDesignation', alignment: 'left' },
              { field: 'snManufacturer', alignment: 'left' },
              { field: 'manufacturingDate', alignment: 'left' },
              { field: 'manufacturingConfiguration', alignment: 'left' },
              { field: 'zone', alignment: 'left' },
              { field: 'country', alignment: 'left' }
            ];
            var remainingRow = {};
            var secondRow = {};
            var def = this.updateTable;
            remainingRow.equipmentFunction = def[0].equipmentFunction;
            remainingRow.ownerCustomerCode = def[0].ownerCustomerCode;
            remainingRow.operatorCustomerCode = def[0].operatorCustomerCode;
            remainingRow.modelCode = def[0].modelCode;
            remainingRow.operationalStatus = def[0].operationalStatus;
            remainingRow.functionCode = def[0].functionCode;
            remainingRow.equiPosition = def[0].equiPosition;
            remainingRow.chapter = def[0].chapter;
            remainingRow.section = def[0].section;
            secondRow.subject = def[0].subject;
            secondRow.sheet = def[0].sheet;
            secondRow.marks = def[0].marks;
            secondRow.equipmentDesignation = def[0].equipmentDesignation;
            secondRow.snManufacturer = def[0].snManufacturer;
            secondRow.manufacturingDate = def[0].manufacturingDate;
            secondRow.manufacturingConfiguration = def[0].manufacturingConfiguration;
            secondRow.zone = def[0].zone;
            secondRow.country = def[0].country;
            this.remainingTable.push(remainingRow);
            this.secondTable.push(secondRow);
          };
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('historicAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            AssetLogFormComponent.prototype,
            'historicAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('updatesAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            AssetLogFormComponent.prototype,
            'updatesAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('reportAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            AssetLogFormComponent.prototype,
            'reportAnchor',
            void 0
          );
          AssetLogFormComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-asset-log-form',
                template: __webpack_require__(
                  /*! ./asset-log-form.component.html */ './src/app/main/fleet-management/asset-log/form/asset-log-form.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_8__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_10__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_11__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_12__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_13__['TabService'],
                _shared_services_input_validation_service__WEBPACK_IMPORTED_MODULE_9__['InputValidationService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService'],
                _asset_log_form_service__WEBPACK_IMPORTED_MODULE_17__['AssetLogFormService'],
                _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_6__['ConfirmationService'],
                _shared_services_date_service__WEBPACK_IMPORTED_MODULE_7__['DateService']
              ])
            ],
            AssetLogFormComponent
          );
          return AssetLogFormComponent;
        })(_shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_14__['FormPageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-log/form/asset-log-form.service.ts':
      /*!********************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-log/form/asset-log-form.service.ts ***!
  \********************************************************************************/
      /*! exports provided: AssetLogFormService */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'AssetLogFormService', function() {
          return AssetLogFormService;
        });
        /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */ './node_modules/@angular/common/fesm5/http.js'
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_api_fleet_history_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../shared/api/fleet-history.api */ './src/app/shared/api/fleet-history.api.ts'
        );
        /* harmony import */ var _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../shared/api/fleet-management.api */ './src/app/shared/api/fleet-management.api.ts'
        );
        /* harmony import */ var _shared_api_product_structure_management_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../shared/api/product-structure-management.api */ './src/app/shared/api/product-structure-management.api.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../shared/http/abstract-aw-http */ './src/app/shared/http/abstract-aw-http.ts'
        );
        /* harmony import */ var _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../../shared/services/app-config.service */ './src/app/shared/services/app-config.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var AssetLogFormService = /** @class */ (function(_super) {
          __extends(AssetLogFormService, _super);
          function AssetLogFormService(
            http,
            appConfigService,
            fleetHistorApi,
            propertiesService,
            fleetManagementApi,
            productStructureManagementApi
          ) {
            var _this = _super.call(this, http, appConfigService) || this;
            _this.fleetHistorApi = fleetHistorApi;
            _this.propertiesService = propertiesService;
            _this.fleetManagementApi = fleetManagementApi;
            _this.productStructureManagementApi = productStructureManagementApi;
            return _this;
          }
          AssetLogFormService.prototype.getHistoricTableData = function(input) {
            return _super.prototype.post.call(this, this.fleetHistorApi.findBidoFhEquipments, input);
          };
          AssetLogFormService.prototype.getHistoricDetailTableData = function(input) {
            return _super.prototype.post.call(this, this.fleetHistorApi.findHFBidoEquipmentsByEquipmentCode, input);
          };
          AssetLogFormService.prototype.getUpdateTableData = function(input) {
            return _super.prototype.post.call(this, this.fleetHistorApi.findHBidoEquipments, input);
          };
          AssetLogFormService.prototype.getReportTableData = function(input) {
            return _super.prototype.post.call(this, this.fleetHistorApi.initilizeBidoEquipmentReportTable, input);
          };
          AssetLogFormService.prototype.findBidoReportContentOfBidoReport = function(input) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findBidoReportContentOfBidoReport, input);
          };
          AssetLogFormService.prototype.deleteReportEntry = function(reportId) {
            return _super.prototype.post.call(this, this.fleetManagementApi.removeBidoReport, reportId);
          };
          AssetLogFormService.prototype.getEquipmentFunctionList = function() {
            return this.propertiesService.getValue(
              _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_5__['GenericPropertyConstants']
                .ITEM_FAMILY_CODE_MAP
            );
          };
          AssetLogFormService.prototype.getOperationalStatusMap = function() {
            return this.propertiesService.getValue(
              _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_5__['GenericPropertyConstants']
                .OPERATIONAL_STATUS_MAP
            );
          };
          AssetLogFormService.prototype.getOperationalStatusMapForAircraft = function() {
            return this.propertiesService.getValue(
              _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_5__['GenericPropertyConstants']
                .AIRCRAFT_STATUS_MAP
            );
          };
          AssetLogFormService.prototype.getFamilyVariant = function(input) {
            return _super.prototype.post.call(
              this,
              this.productStructureManagementApi.initializeFamilyVariantList,
              input
            );
          };
          AssetLogFormService.prototype.getObjectStatusMap = function() {
            return this.propertiesService.getValue('getObjectStatusMap');
          };
          AssetLogFormService.prototype.findBidoCustomersBySearchCriteria = function(criteria) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoCustomersBySearchCriteria,
              criteria
            );
          };
          AssetLogFormService = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])(),
              __metadata('design:paramtypes', [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClient'],
                _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_7__['AppConfigService'],
                _shared_api_fleet_history_api__WEBPACK_IMPORTED_MODULE_2__['FleetHistoryApi'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_8__['PropertiesService'],
                _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_3__['FleetManagementApi'],
                _shared_api_product_structure_management_api__WEBPACK_IMPORTED_MODULE_4__[
                  'ProductStructureManagementApi'
                ]
              ])
            ],
            AssetLogFormService
          );
          return AssetLogFormService;
        })(_shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_6__['AbstractAwHttpService']);

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-log/form/asset-log-table-remaining-values/aseet-log-table-remaining-values.component.ts':
      /*!*************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-log/form/asset-log-table-remaining-values/aseet-log-table-remaining-values.component.ts ***!
  \*************************************************************************************************************************************/
      /*! exports provided: AssetLogTableRemainingValuesComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'AssetLogTableRemainingValuesComponent',
          function() {
            return AssetLogTableRemainingValuesComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/constants/control-config-constants */ './src/app/shared/constants/control-config-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_types_generic_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../../shared/types/generic-component */ './src/app/shared/types/generic-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var AssetLogTableRemainingValuesComponent = /** @class */ (function(_super) {
          __extends(AssetLogTableRemainingValuesComponent, _super);
          function AssetLogTableRemainingValuesComponent() {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Write
              ) || this;
            _this.controlConfigConstants =
              _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_1__['ControlConfigConstants'];
            _this.init();
            return _this;
          }
          Object.defineProperty(AssetLogTableRemainingValuesComponent.prototype, 'row', {
            get: function() {
              return this._row;
            },
            // tslint:disable-next-line:no-any
            set: function(value) {
              this._row = value;
              this.remainingTableLoading = true;
              this.secondTableLoading = true;
              if (!!this._row) {
                this.load();
              }
            },
            enumerable: true,
            configurable: true
          });
          AssetLogTableRemainingValuesComponent.prototype.getComponentName = function() {
            return 'AssetLogTableRemainingValuesComponent';
          };
          AssetLogTableRemainingValuesComponent.prototype.ngOnInit = function() {
            this.setRemainingTableColumnList();
          };
          AssetLogTableRemainingValuesComponent.prototype.init = function() {
            this.remainingTableLoading = true;
            this.secondTableLoading = true;
          };
          AssetLogTableRemainingValuesComponent.prototype.load = function() {
            this.table = this.remainingTable;
            this.tableSecond = this.secondTable;
            this.remainingTableLoading = false;
            this.secondTableLoading = false;
          };
          AssetLogTableRemainingValuesComponent.prototype.setRemainingTableColumnList = function() {
            this.tableCols = this.remainingTableCols;
            this.tableSecondCols = this.secondTableCols;
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            AssetLogTableRemainingValuesComponent.prototype,
            'remainingTable',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            AssetLogTableRemainingValuesComponent.prototype,
            'remainingTableCols',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            AssetLogTableRemainingValuesComponent.prototype,
            'secondTable',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            AssetLogTableRemainingValuesComponent.prototype,
            'secondTableCols',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(),
              __metadata('design:type', Object),
              __metadata('design:paramtypes', [Object])
            ],
            AssetLogTableRemainingValuesComponent.prototype,
            'row',
            null
          );
          AssetLogTableRemainingValuesComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-asset-log-table-remaining-values',
                template: __webpack_require__(
                  /*! ./asset-log-table-remaining-values.component.html */ './src/app/main/fleet-management/asset-log/form/asset-log-table-remaining-values/asset-log-table-remaining-values.component.html'
                )
              }),
              __metadata('design:paramtypes', [])
            ],
            AssetLogTableRemainingValuesComponent
          );
          return AssetLogTableRemainingValuesComponent;
        })(_shared_types_generic_component__WEBPACK_IMPORTED_MODULE_3__['GenericComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-log/form/asset-log-table-remaining-values/asset-log-table-remaining-values.component.html':
      /*!***************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-log/form/asset-log-table-remaining-values/asset-log-table-remaining-values.component.html ***!
  \***************************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="column">\r\n  <div class="row">\r\n    <p-table [resizableColumns]="true" #ptable class="aw-table2" [columns]="tableCols" [value]="table" [scrollable]="true">\r\n      <ng-template pTemplate="emptymessage">\r\n        <span *ngIf="!remainingTableLoading"> &nbsp;</span>\r\n\r\n        <div *ngIf="remainingTableLoading" class="aw-table-loading-indicator">\r\n          <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n          <div class="lds-hourglass"></div>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="colgroup" let-columns>\r\n        <colgroup>\r\n          <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n        </colgroup>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n          <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n            {{ getComponentName() + "." + col.field | translate }}\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n        <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n          <td *ngFor="let col of columns" [ngSwitch]="col.field" [ngStyle]="{ \'text-align\': col.alignment }">\r\n            <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <p-table [resizableColumns]="true" #pSecondTable class="aw-table2" [columns]="tableSecondCols" [value]="tableSecond" [scrollable]="true">\r\n      <ng-template pTemplate="emptymessage">\r\n        <span *ngIf="!secondTableLoading"> &nbsp;</span>\r\n\r\n        <div *ngIf="secondTableLoading" class="aw-table-loading-indicator">\r\n          <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n          <div class="lds-hourglass"></div>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="colgroup" let-columns>\r\n        <colgroup>\r\n          <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n        </colgroup>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n          <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n            {{ getComponentName() + "." + col.field | translate }}\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n        <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n          <td *ngFor="let col of columns" [ngSwitch]="col.field" [ngStyle]="{ \'text-align\': col.alignment }">\r\n            <span *ngSwitchCase="\'manufacturingConfiguration\'">\r\n              <span *ngIf="rowData[col.field] !== null && rowData[col.field] === true">\r\n                <i class="fa fa-fw fa-check" aria-hidden="true"></i>\r\n              </span>\r\n            </span>\r\n            <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/asset-dialog-task-counters/asset-dialog-task-counters.component.html':
      /*!***********************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/asset-dialog-task-counters/asset-dialog-task-counters.component.html ***!
  \***********************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display" [width]="50">\r\n  <a-header>\r\n    <div class="modal-title">\r\n      {{ getComponentName() + ".title" | translate }} ({{ taskCountersTable ? taskCountersTable.length : 0 }})\r\n    </div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="column">\r\n      <div *ngIf="isWriteOpenMode && showPanel" class="row object-details">\r\n        <div class="column">\r\n          <div class="row">\r\n            <div class="form-group required" *ngIf="taskCountersTableSelectedList.length === 0">\r\n              <label class="form-label"> {{ getComponentName() + ".reference" | translate }} </label>\r\n\r\n              <div class="form-control">\r\n                <p-dropdown\r\n                  class="aw-dropdown fixed-width"\r\n                  [options]="referencesList"\r\n                  [(ngModel)]="taskCounter.reference"\r\n                  [showClear]="true"\r\n                  placeholder="&nbsp;"\r\n                  (onChange)="setControlsVisibility()"\r\n                ></p-dropdown>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="form-group required" *ngIf="taskCountersTableSelectedList.length > 0">\r\n              <label class="form-label"> {{ getComponentName() + ".reference" | translate }} </label>\r\n\r\n              <div class="form-control">\r\n                <p-dropdown\r\n                  class="aw-dropdown fixed-width"\r\n                  [options]="referencesList"\r\n                  [(ngModel)]="taskCounter.reference"\r\n                  [showClear]="true"\r\n                  placeholder="&nbsp;"\r\n                  (onChange)="setControlsVisibility()"\r\n                  [disabled]="true"\r\n                ></p-dropdown>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="form-group">\r\n              <label class="form-label"> {{ getComponentName() + ".nextTerm" | translate }} </label>\r\n\r\n              <div *ngIf="isCalendarUnit(taskCounter)" class="form-control">\r\n                <p-calendar\r\n                  showButtonBar="true"\r\n                  [monthNavigator]="true"\r\n                  [yearNavigator]="true"\r\n                  [yearRange]="sessionService.calendarYearRange"\r\n                  class="aw-calendar"\r\n                  [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                  [locale]="sessionService.calendarFormat"\r\n                  [(ngModel)]="taskCounter.nextTermDate"\r\n                  appendTo="body"\r\n                  [disabled]="isCounterDisable"\r\n                ></p-calendar>\r\n              </div>\r\n\r\n              <div *ngIf="!isCalendarUnit(taskCounter)" class="form-control">\r\n                <div class="aw-input-group">\r\n                  <input\r\n                    type="text"\r\n                    class="aw-input"\r\n                    #nextTerm="ngModel"\r\n                    [(ngModel)]="taskCounter.nextTermDouble"\r\n                    [pKeyFilter]="inputValidationService.validatorOfNumber()"\r\n                    [pValidateOnly]="true"\r\n                    maxlength="37"\r\n                    [disabled]="isCounterDisable"\r\n                  />\r\n                  <p-message\r\n                    *ngIf="nextTerm.invalid && (nextTerm.dirty || nextTerm.touched)"\r\n                    severity="error"\r\n                    [text]="inputValidationService.formatOfNumber()"\r\n                  ></p-message>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="form-group">\r\n              <label class="form-label"> {{ getComponentName() + ".periodicity" | translate }} </label>\r\n\r\n              <div class="form-control">\r\n                <div class="aw-input-group">\r\n                  <input\r\n                    type="text"\r\n                    #periodicity="ngModel"\r\n                    class="aw-input"\r\n                    [(ngModel)]="taskCounter.periodicity"\r\n                    [pKeyFilter]="inputValidationService.validatorOfNumber()"\r\n                    [pValidateOnly]="true"\r\n                    maxlength="37"\r\n                    [disabled]="isCounterDisable"\r\n                  />\r\n                  <p-message\r\n                    *ngIf="periodicity.invalid && (periodicity.dirty || periodicity.touched)"\r\n                    severity="error"\r\n                    [text]="inputValidationService.formatOfNumber()"\r\n                  ></p-message>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="form-group flex--2"></div>\r\n          </div>\r\n\r\n          <div class="row actions-bar">\r\n            <button\r\n              type="button"\r\n              color="primary"\r\n              mat-raised-button\r\n              (click)="saveTaskCounter()"\r\n              [disabled]="!taskCounter.reference"\r\n            >\r\n              {{ getComponentName() + ".validate" | translate }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row">\r\n        <p-table\r\n          [resizableColumns]="true"\r\n          #ptableTaskCounters\r\n          class="aw-table2"\r\n          [columns]="taskCountersTableColList"\r\n          [value]="taskCountersTable"\r\n          [(selection)]="taskCountersTableSelectedList"\r\n          [scrollable]="true"\r\n          (onRowSelect)="onRowSelect()"\r\n          (onRowUnselect)="onRowSelect()"\r\n          (onHeaderCheckboxToggle)="onRowSelect()"\r\n        >\r\n          <ng-template pTemplate="emptymessage">\r\n            <span *ngIf="!taskCountersTableLoading"> &nbsp;</span>\r\n\r\n            <div *ngIf="taskCountersTableLoading" class="aw-table-loading-indicator">\r\n              <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n              <div class="lds-hourglass"></div>\r\n            </div>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate="caption">\r\n            <div class="aw-table-header" [ngClass]="{ \'rows-selected\': taskCountersTableSelectedList.length > 0 }">\r\n              <div class="aw-table-global-filter">\r\n                <label class="aw-table-global-filter-label">\r\n                  <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                </label>\r\n\r\n                <input\r\n                  #ptableTaskCountersGlobalFilter\r\n                  class="aw-table-global-filter-input"\r\n                  type="text"\r\n                  placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                  (input)="ptableTaskCounters.filterGlobal($event.target.value, \'contains\')"\r\n                />\r\n              </div>\r\n\r\n              <div class="aw-table-actions">\r\n                <button\r\n                  *ngIf="!showPanel && isDeleteEnabled && taskCountersTableSelectedList.length > 0"\r\n                  type="button"\r\n                  mat-raised-button\r\n                  color="warn"\r\n                  (click)="deleteCounter()"\r\n                >\r\n                  {{ "global.delete" | translate }}\r\n                </button>\r\n                <button\r\n                  *ngIf="taskCountersTableSelectedList.length === 1"\r\n                  type="button"\r\n                  mat-raised-button\r\n                  [ngClass]="{ active: isWriteOpenMode }"\r\n                  (click)="toggleWriteOpenMode()"\r\n                >\r\n                  {{ "global.edit" | translate }}\r\n                </button>\r\n                <button\r\n                  *ngIf="taskCountersTableSelectedList.length === 0"\r\n                  type="button"\r\n                  mat-raised-button\r\n                  [ngClass]="{ active: isWriteOpenMode }"\r\n                  (click)="toggleWriteOpenMode()"\r\n                >\r\n                  {{ "global.add" | translate }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n              <col class="aw-table-checkbox-wrapper" />\r\n              <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n            </colgroup>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n              <th class="aw-table-checkbox-wrapper">\r\n                <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n              </th>\r\n\r\n              <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                {{ getComponentName() + "." + col.field | translate }}\r\n              </th>\r\n            </tr>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n            <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n              <td class="aw-table-checkbox-wrapper">\r\n                <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n              </td>\r\n\r\n              <td *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                {{ rowData[col.field] }}\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.close" | translate }}</span>\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/asset-dialog-task-counters/asset-dialog-task-counters.component.ts':
      /*!*********************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/asset-dialog-task-counters/asset-dialog-task-counters.component.ts ***!
  \*********************************************************************************************************************************/
      /*! exports provided: AssetDialogTaskCountersComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'AssetDialogTaskCountersComponent',
          function() {
            return AssetDialogTaskCountersComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_constants_bire_measure_reference_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../shared/constants/bire-measure-reference-constants */ './src/app/shared/constants/bire-measure-reference-constants.ts'
        );
        /* harmony import */ var _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../shared/constants/bire-unit-measure-constants */ './src/app/shared/constants/bire-unit-measure-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../shared/services/confirmation.service */ './src/app/shared/services/confirmation.service.ts'
        );
        /* harmony import */ var _shared_services_date_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../shared/services/date.service */ './src/app/shared/services/date.service.ts'
        );
        /* harmony import */ var _shared_services_input_validation_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../shared/services/input-validation.service */ './src/app/shared/services/input-validation.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        /* harmony import */ var _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../../shared/utils/list-utils */ './src/app/shared/utils/list-utils.ts'
        );
        /* harmony import */ var _shared_utils_object_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../../shared/utils/object-utils */ './src/app/shared/utils/object-utils.ts'
        );
        /* harmony import */ var _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../../shared/utils/string-utils */ './src/app/shared/utils/string-utils.ts'
        );
        /* harmony import */ var _asset_maintenance_plan_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../asset-maintenance-plan.service */ './src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __assign =
          (undefined && undefined.__assign) ||
          function() {
            __assign =
              Object.assign ||
              function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                  s = arguments[i];
                  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
              };
            return __assign.apply(this, arguments);
          };
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var AssetDialogTaskCountersComponent = /** @class */ (function(_super) {
          __extends(AssetDialogTaskCountersComponent, _super);
          function AssetDialogTaskCountersComponent(
            assetMaintenancePlanService,
            sessionService,
            dateService,
            messageService,
            inputValidationService,
            confirmationService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__['ComponentOpenMode'].Read,
                'AssetDialogTaskCountersComponent'
              ) || this;
            _this.assetMaintenancePlanService = assetMaintenancePlanService;
            _this.sessionService = sessionService;
            _this.dateService = dateService;
            _this.messageService = messageService;
            _this.inputValidationService = inputValidationService;
            _this.confirmationService = confirmationService;
            _this.onClose = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.init();
            _this.clearTaskCounter();
            _this.initTaskCountersTableColList();
            return _this;
          }
          AssetDialogTaskCountersComponent.prototype.ngOnInit = function() {
            this.loadReferencesDropDown();
            this.load();
          };
          AssetDialogTaskCountersComponent.prototype.loadReferencesDropDown = function() {
            var _this = this;
            this.assetMaintenancePlanService.findReferencesForPeriodicity().subscribe(function(results) {
              _this.referencesList = results;
            });
          };
          AssetDialogTaskCountersComponent.prototype.isCalendarUnit = function(element) {
            return (
              element.unit ===
                _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_2__['BireUnitMeasureConstants']
                  .DAY ||
              element.unit ===
                _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_2__['BireUnitMeasureConstants']
                  .WEEK ||
              element.unit ===
                _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_2__['BireUnitMeasureConstants']
                  .MONTH ||
              element.unit ===
                _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_2__['BireUnitMeasureConstants']
                  .YEAR
            );
          };
          AssetDialogTaskCountersComponent.prototype.onRowSelect = function() {
            this.clearTaskCounter();
            _super.prototype.updateOpenMode.call(
              this,
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__['ComponentOpenMode'].Read
            );
            this.isDeleteEnabled = this.taskCountersTableSelectedList.every(function(selectedObj) {
              if (!selectedObj.hasCounterCode) {
                return true;
              }
              return false;
            });
          };
          AssetDialogTaskCountersComponent.prototype.toggleWriteOpenMode = function() {
            _super.prototype.updateOpenMode.call(
              this,
              this.isWriteOpenMode
                ? _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__['ComponentOpenMode'].Read
                : _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__['ComponentOpenMode'].Write
            );
            this.toggleOpenMode();
          };
          AssetDialogTaskCountersComponent.prototype.saveTaskCounter = function() {
            var _this = this;
            var element = __assign({}, this.taskCounter);
            this.clearTaskCounter();
            if (this.taskCountersTableSelectedList.length === 1) {
              var input = {
                equipmentCode: this.selectedRow.equipmentCode,
                taskCode: this.selectedRow.taskCode,
                taskVersion: this.selectedRow.taskVersion,
                taskCounter: element,
                isNew: false
              };
              this.assetMaintenancePlanService.saveTaskCounterBaseMp(input).subscribe(function(_) {
                _this.init();
                _this.load();
                _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnSaveTaskCounter'));
              });
            } else {
              var checkDuplicateRef = this.taskCountersTable.filter(function(obj) {
                return obj._obj.reference === element.reference;
              })[0];
              if (checkDuplicateRef) {
                this.messageService.showErrorMessage(this.getTranslateKey('duplicateCounter'));
                return;
              }
              if (element.reference) {
                var referenceObj = this.referencesList.filter(function(obj) {
                  return obj.value === element.reference;
                })[0];
                element.referenceText = referenceObj.label;
                var input = {
                  equipmentCode: this.selectedRow.equipmentCode,
                  taskCode: this.selectedRow.taskCode,
                  taskVersion: this.selectedRow.taskVersion,
                  taskCounter: element,
                  isNew: true
                };
                this.assetMaintenancePlanService.saveTaskCounterBaseMp(input).subscribe(function(_) {
                  _this.init();
                  _this.load();
                  _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnSaveTaskCounter'));
                });
              }
            }
          };
          AssetDialogTaskCountersComponent.prototype.clearTaskCounter = function() {
            this.taskCounter = {};
          };
          AssetDialogTaskCountersComponent.prototype.createTaskCountersRow = function(element) {
            var row = {
              nextTerm: this.formatNextTerm(element),
              periodicity: this.formatPeriodicity(element),
              periodicityType: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_12__['StringUtils'].orEmpty(
                element.periodicityType
              ),
              reference: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_12__['StringUtils'].orEmpty(
                element.referenceText
              ),
              unit: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_12__['StringUtils'].orEmpty(element.unit),
              _obj: element,
              hasCounterCode: element.hasCounterCode || false
            };
            return row;
          };
          AssetDialogTaskCountersComponent.prototype.formatNextTerm = function(element) {
            var nextTerm = '';
            if (!!element.unit) {
              if (this.isCalendarUnit(element)) {
                nextTerm = this.dateService.dateToString(element.nextTermDate);
              } else if (
                _shared_utils_object_utils__WEBPACK_IMPORTED_MODULE_11__['ObjectUtils'].isDefined(
                  element.nextTermDouble
                )
              ) {
                nextTerm = _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_12__['StringUtils'].orEmpty(
                  element.nextTermDouble.toString()
                );
              }
            }
            return nextTerm;
          };
          AssetDialogTaskCountersComponent.prototype.formatPeriodicity = function(element) {
            return _shared_utils_object_utils__WEBPACK_IMPORTED_MODULE_11__['ObjectUtils'].isDefined(
              element.periodicity
            )
              ? element.periodicity.toString()
              : '';
          };
          AssetDialogTaskCountersComponent.prototype.init = function() {
            this.taskCountersTable = [];
            this.taskCountersTableLoading = false;
            this.taskCountersTableSelectedList = [];
            this.showPanel = false;
            this.isCounterDisable = false;
            this.isDeleteEnabled = false;
          };
          AssetDialogTaskCountersComponent.prototype.initTaskCountersTableColList = function() {
            this.taskCountersTableColList = [
              { field: 'reference', alignment: 'left', width: '40%' },
              { field: 'nextTerm', alignment: 'left', width: '15%' },
              { field: 'periodicity', alignment: 'left', width: '15%' },
              { field: 'unit', alignment: 'left', width: '10%' },
              { field: 'periodicityType', alignment: 'left', width: '20%' }
            ];
          };
          AssetDialogTaskCountersComponent.prototype.load = function() {
            var _this = this;
            this.taskCountersTableLoading = true;
            this.taskCountersTable = [];
            var input = this.selectedRow;
            this.assetMaintenancePlanService.getAllCountersBaseMp(input).subscribe(function(result) {
              _this.taskCountersTableLoading = false;
              _this.taskCountersTable = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_10__['ListUtils']
                .orEmpty(result)
                .map(function(element) {
                  return _this.createTaskCountersRow(element);
                });
            });
          };
          AssetDialogTaskCountersComponent.prototype.toggleOpenMode = function() {
            this.showPanel = true;
            if (this.isWriteOpenMode) {
              this.clearTaskCounter();
              if (this.taskCountersTableSelectedList.length === 1) {
                var periodicity = _shared_utils_object_utils__WEBPACK_IMPORTED_MODULE_11__['ObjectUtils'].isDefined(
                  this.taskCountersTableSelectedList[0].periodicity
                )
                  ? Number(this.taskCountersTableSelectedList[0].periodicity)
                  : undefined;
                this.taskCounter = {
                  periodicity: periodicity,
                  nextTermDate: this.taskCountersTableSelectedList[0]._obj.nextTermDate,
                  nextTermDouble: this.taskCountersTableSelectedList[0]._obj.nextTermDouble,
                  periodicityType: this.taskCountersTableSelectedList[0].periodicityType,
                  reference: this.taskCountersTableSelectedList[0]._obj.reference,
                  referenceText: this.taskCountersTableSelectedList[0].reference,
                  unit: this.taskCountersTableSelectedList[0].unit
                };
              }
            }
          };
          AssetDialogTaskCountersComponent.prototype.deleteCounter = function() {
            var _this = this;
            this.confirmationService.confirmDelete({
              messageKey: 'global.confirmSelectedDataDelete',
              accept: function() {
                var objList = [];
                _this.taskCountersTableSelectedList.forEach(function(selectedObj) {
                  // Delete only if periodicity is null
                  if (!selectedObj.hasCounterCode) {
                    var referenceObj = _this.referencesList.filter(function(obj) {
                      return obj.label === selectedObj.reference;
                    })[0];
                    var input = {
                      counterCode: referenceObj && referenceObj.value,
                      equipmentCode: _this.selectedRow.equipmentCode,
                      taskCode: _this.selectedRow.taskCode,
                      taskVersion: _this.selectedRow.taskVersion
                    };
                    objList.push(input);
                  }
                });
                if (objList.length > 0) {
                  _this.taskCountersTableLoading = true;
                  _this.taskCountersTable = [];
                  _this.taskCountersTableSelectedList = [];
                  _this.assetMaintenancePlanService.deleteTaskCounterBaseMp(objList).subscribe(function(result) {
                    _this.taskCountersTableLoading = false;
                    _this.clearTaskCounter();
                    _this.load();
                  });
                }
              }
            });
          };
          AssetDialogTaskCountersComponent.prototype.setControlsVisibility = function() {
            this.isCounterDisable =
              _shared_constants_bire_measure_reference_constants__WEBPACK_IMPORTED_MODULE_1__[
                'BireMeasureReferenceConstants'
              ].BIRE_MEASURE_REFERENCE_COUNTER_CODE_POST_FLIGHT === this.taskCounter.reference ||
              _shared_constants_bire_measure_reference_constants__WEBPACK_IMPORTED_MODULE_1__[
                'BireMeasureReferenceConstants'
              ].BIRE_MEASURE_REFERENCE_COUNTER_CODE_PRE_FLIGHT === this.taskCounter.reference ||
              _shared_constants_bire_measure_reference_constants__WEBPACK_IMPORTED_MODULE_1__[
                'BireMeasureReferenceConstants'
              ].BIRE_MEASURE_REFERENCE_COUNTER_CODE_DAILY === this.taskCounter.reference;
          };
          AssetDialogTaskCountersComponent.prototype.closeDialog = function() {
            _super.prototype.closeDialog.call(this);
            this.onClose.emit(true);
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            AssetDialogTaskCountersComponent.prototype,
            'selectedRow',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            AssetDialogTaskCountersComponent.prototype,
            'onClose',
            void 0
          );
          AssetDialogTaskCountersComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-asset-dialog-task-counters',
                template: __webpack_require__(
                  /*! ./asset-dialog-task-counters.component.html */ './src/app/main/fleet-management/asset-maintenance-plan/asset-dialog-task-counters/asset-dialog-task-counters.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ../asset-maintenance-plan.component.scss */ './src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _asset_maintenance_plan_service__WEBPACK_IMPORTED_MODULE_13__['AssetMaintenancePlanService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_8__['SessionService'],
                _shared_services_date_service__WEBPACK_IMPORTED_MODULE_5__['DateService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_7__['MessageService'],
                _shared_services_input_validation_service__WEBPACK_IMPORTED_MODULE_6__['InputValidationService'],
                _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_4__['ConfirmationService']
              ])
            ],
            AssetDialogTaskCountersComponent
          );
          return AssetDialogTaskCountersComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_9__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.component.html':
      /*!****************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.component.html ***!
  \****************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div *ngIf="componentData && componentData.objectId" class="page-subtitle">\r\n          - {{ assetMaintenanceData.assetText }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-actions">\r\n    <!-- <p-splitButton\r\n      *ngIf="!isLoadingTaskTable && selectedTasks.length === 0"\r\n      class="aw-split-btn"\r\n      label="{{ getComponentName() + \'.potentialUnit\' | translate }} {{\r\n        potentialUnitSelected ? \'(\' + potentialUnitSelected + \')\' : potentialUnitSelected\r\n      }}"\r\n      [model]="potentialUnitList"\r\n    ></p-splitButton> -->\r\n\r\n    <button\r\n      *ngIf="!isLoadingTaskTable && selectedTasks.length === 0 && !!assetMaintenanceData.ampCode"\r\n      type="button"\r\n      mat-raised-button\r\n      (click)="compare()"\r\n    >\r\n      {{ getComponentName() + ".compare" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="!isLoadingTaskTable && selectedTasks.length === 0 && assetMaintenanceData.isPlanApproved === true"\r\n      type="button"\r\n      mat-raised-button\r\n      (click)="approvePlan(false)"\r\n    >\r\n      {{ getComponentName() + ".disapprove" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="!isLoadingTaskTable && selectedTasks.length === 0 && assetMaintenanceData.isPlanApproved === false"\r\n      type="button"\r\n      mat-raised-button\r\n      (click)="approvePlan(true)"\r\n    >\r\n      {{ getComponentName() + ".approve" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      id="actions"\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show all actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n\r\n    <mat-menu #actions="matMenu">\r\n      <button type="button" mat-menu-item (click)="refresh()">{{ "global.refresh" | translate }}</button>\r\n      <button id="favorites" mat-menu-item (click)="updateFavoriteState()">\r\n        {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <div class="grid-row">\r\n        <div class="grid-cell--12">\r\n          <div class="grid-cell grid-cell--container">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container loading-indicator">\r\n                <div class="grid-cell-title"><div *ngIf="isAssetLoading" class="lds-hourglass"></div></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <div class="column">\r\n                <div class="row">\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ "global.asset" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <a (click)="openEquipment()" style="cursor: pointer;"> {{ assetMaintenanceData.assetText }} </a>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".flightHour" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <input\r\n                        type="text"\r\n                        class="aw-input"\r\n                        maxlength="100"\r\n                        [(ngModel)]="assetMaintenanceData.assetTSN"\r\n                        [disabled]="true"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".customisationStatus" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <div class="form-control-generic">\r\n                        <span *ngIf="assetMaintenanceData.customisationStatusIcon === \'green\'" class="alert alert--ok">\r\n                          {{ "global.alertOk" | translate }}\r\n                        </span>\r\n\r\n                        <span *ngIf="assetMaintenanceData.customisationStatusIcon === \'red\'" class="alert alert--nok">\r\n                          {{ "global.alertNok" | translate }}\r\n                        </span>\r\n\r\n                        <span\r\n                          *ngIf="assetMaintenanceData.customisationStatusIcon === \'yellow\'"\r\n                          class="alert alert--warning"\r\n                        >\r\n                          {{ "global.alertWarning" | translate }}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="row">\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ "global.registration" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <input\r\n                        type="text"\r\n                        class="aw-input"\r\n                        maxlength="10"\r\n                        [(ngModel)]="assetMaintenanceData.assetRegistration"\r\n                        [disabled]="true"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".flightCycle" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <input\r\n                        type="text"\r\n                        class="aw-input"\r\n                        maxlength="10"\r\n                        [(ngModel)]="assetMaintenanceData.assetCSN"\r\n                        [disabled]="true"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ "global.eisDate" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <p-calendar\r\n                        showButtonBar="true"\r\n                        [monthNavigator]="true"\r\n                        [yearNavigator]="true"\r\n                        [yearRange]="sessionService.calendarYearRange"\r\n                        class="aw-calendar"\r\n                        [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                        [locale]="sessionService.calendarFormat"\r\n                        [(ngModel)]="assetMaintenanceData.assetEisDate"\r\n                        [disabled]="true"\r\n                      ></p-calendar>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="row">\r\n                  <div class="form-group">\r\n                    <label class="form-label">\r\n                      {{ getComponentName() + ".asociatedMaintenancePlan" | translate }}\r\n                    </label>\r\n\r\n                    <div class="form-control">\r\n                      <a (click)="openMaintenanceProgram(assetMaintenanceData.ampCode)" style="cursor: pointer;">\r\n                        {{ assetMaintenanceData.ampName }}\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".revisionNumber" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <input\r\n                        type="text"\r\n                        class="aw-input"\r\n                        maxlength="10"\r\n                        [(ngModel)]="assetMaintenanceData.ampRevision"\r\n                        [disabled]="true"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group" *ngIf="!remainingEquivalentPotential"></div>\r\n                  <div class="form-group" *ngIf="remainingEquivalentPotential">\r\n                    <label class="form-label">\r\n                      {{ getComponentName() + ".remainingEquivalentPotential" | translate }}\r\n                    </label>\r\n\r\n                    <div class="form-control">\r\n                      <span\r\n                        [ngClass]="{\r\n                          red: remainingEquivalentPotentialColor === \'red\',\r\n                          green: remainingEquivalentPotentialColor === \'green\'\r\n                        }"\r\n                        >{{ remainingEquivalentPotential }}</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="grid-row">\r\n        <div class="grid-cell--12">\r\n          <div class="grid-cell grid-cell--container">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 class="grid-cell-title">\r\n                  {{ getComponentName() + ".taskHeading" | translate }} ({{ tasks ? tasks.length : 0 }})\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content grid-cell-content-with-section">\r\n              <div class="section">\r\n                <div class="section-content">\r\n                  <div class="row">\r\n                    <div class="form-group">\r\n                      <div class="form-control">\r\n                        <p-dropdown\r\n                          class="aw-dropdown fixed-width"\r\n                          [options]="referencesList"\r\n                          [(ngModel)]="referenceSelected"\r\n                        ></p-dropdown>\r\n                      </div>\r\n                    </div>\r\n                    <div class="form-group"></div>\r\n                    <div class="form-group"></div>\r\n                  </div>\r\n                  <div class="row">\r\n                    <p-table\r\n                      [resizableColumns]="true"\r\n                      #ptableTask\r\n                      class="aw-table2"\r\n                      [columns]="taskTableCols"\r\n                      [value]="tasks"\r\n                      [(selection)]="selectedTasks"\r\n                      [scrollable]="true"\r\n                      dataKey="dataKey"\r\n                      (onRowSelect)="setActions()"\r\n                      (onRowUnselect)="setActions()"\r\n                      (onHeaderCheckboxToggle)="setActions()"\r\n                      [paginator]="true"\r\n                      [rows]="TABLE_PAGINATION_DEFAULT_ROWS"\r\n                    >\r\n                      <ng-template pTemplate="emptymessage">\r\n                        <span *ngIf="!isLoadingTaskTable"> &nbsp;</span>\r\n\r\n                        <div *ngIf="isLoadingTaskTable" class="aw-table-loading-indicator">\r\n                          <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                          <div class="lds-hourglass"></div>\r\n                        </div>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="caption">\r\n                        <div class="aw-table-header" [ngClass]="{ \'rows-selected\': selectedTasks.length > 0 }">\r\n                          <div class="aw-table-global-filter">\r\n                            <label class="aw-table-global-filter-label">\r\n                              <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                            </label>\r\n\r\n                            <input\r\n                              #ptableTaskGlobalFilter\r\n                              class="aw-table-global-filter-input"\r\n                              type="text"\r\n                              placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                              (input)="ptableTask.filterGlobal($event.target.value, \'contains\')"\r\n                            />\r\n                          </div>\r\n\r\n                          <div class="aw-table-actions">\r\n                            <p-splitButton\r\n                              *ngIf="showTaskConfigurationList()"\r\n                              class="aw-split-btn task-configuration"\r\n                              label="{{ getComponentName() + \'.taskConfiguration\' | translate }}"\r\n                              [model]="taskConfigurationList"\r\n                            ></p-splitButton>\r\n\r\n                            <p-splitButton\r\n                              *ngIf="!isLoadingTaskTable"\r\n                              class="aw-split-btn"\r\n                              label="{{ getComponentName() + \'.navigate\' | translate }}"\r\n                              [model]="navigationLinkList"\r\n                            ></p-splitButton>\r\n\r\n                            <button\r\n                              *ngIf="tasks.length > 0 && selectedTasks.length === 0"\r\n                              type="button"\r\n                              mat-raised-button\r\n                              (click)="exportTable()"\r\n                              title="Export due list"\r\n                            >\r\n                              {{ "global.export" | translate }}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="colgroup" let-columns>\r\n                        <colgroup>\r\n                          <col class="aw-table-checkbox-wrapper" [ngStyle]="{ width: \'2.5rem\' }" />\r\n                          <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          <col [ngStyle]="{ width: \'5%\', \'text-align\': \'left\' }" />\r\n                        </colgroup>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n                          <th class="aw-table-checkbox-wrapper" [ngStyle]="{ width: \'2.5rem\' }">\r\n                            <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                          </th>\r\n\r\n                          <th\r\n                            pResizableColumn\r\n                            *ngFor="let col of columns"\r\n                            [ngStyle]="{ \'text-align\': col.alignment, width: col.width }"\r\n                          >\r\n                            {{ componentData.componentId + "." + col.field | translate }}\r\n                          </th>\r\n                          <th [ngStyle]="{ width: \'5%\', \'text-align\': \'left\' }"></th>\r\n                        </tr>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                        <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex" *ngIf="rowData.conf !== \'red\'">\r\n                          <td class="aw-table-checkbox-wrapper" [ngStyle]="{ width: \'2.5rem\' }">\r\n                            <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n                          </td>\r\n\r\n                          <ng-container *ngFor="let col of columns">\r\n                            <td\r\n                              *ngIf="col.field === \'taskCode\'"\r\n                              [attr.rowspan]="rowData[\'rowSpan\']"\r\n                              [ngStyle]="{ \'text-align\': col.alignment, width: col.width }"\r\n                            >\r\n                              <a (click)="openTaskCode(rowData)">\r\n                                <span *ngIf="!rowData.conf">{{ rowData[col.field] }}</span>\r\n                                <span *ngIf="rowData.conf === \'green\'" class="green">{{ rowData[col.field] }}</span>\r\n                              </a>\r\n                            </td>\r\n\r\n                            <td\r\n                              *ngIf="col.field === \'version\'"\r\n                              [attr.rowspan]="rowData[\'rowSpan\']"\r\n                              [ngStyle]="{ \'text-align\': col.alignment, width: col.width }"\r\n                            >\r\n                              {{ rowData[col.field] }}\r\n                            </td>\r\n\r\n                            <td\r\n                              *ngIf="col.field === \'designation\'"\r\n                              [attr.rowspan]="rowData[\'rowSpan\']"\r\n                              [ngStyle]="{ \'text-align\': col.alignment, width: col.width }"\r\n                            >\r\n                              {{ rowData[col.field] }}\r\n                            </td>\r\n\r\n                            <td\r\n                              *ngIf="col.field !== \'taskCode\' && col.field !== \'version\' && col.field !== \'designation\'"\r\n                              [ngStyle]="{ \'text-align\': col.alignment, width: col.width }"\r\n                            >\r\n                              {{ rowData[col.field] }}\r\n                            </td>\r\n                          </ng-container>\r\n                          <td\r\n                            class="row-expand-wrapper"\r\n                            [pRowToggler]="rowData"\r\n                            [ngStyle]="{ width: \'5%\', \'text-align\': \'left\' }"\r\n                          >\r\n                            <i\r\n                              class="fa fa-fw aw-icon aw-icon-with-border"\r\n                              [ngClass]="rowData.expand ? \'fa-minus\' : \'fa-plus\'"\r\n                              aria-hidden="true"\r\n                              pTooltip="{{ \'global.showTableRowDetails\' | translate }}"\r\n                              tooltipPosition="top"\r\n                              (click)="toggleRowDetailsVisibility(rowData)"\r\n                            ></i>\r\n                          </td>\r\n                        </tr>\r\n                        <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex" *ngIf="rowData.conf === \'red\'">\r\n                          <td class="aw-table-checkbox-wrapper" [ngStyle]="{ width: \'2.5rem\' }">\r\n                            <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n                          </td>\r\n\r\n                          <td [attr.rowspan]="rowData[\'rowSpan\']" [ngStyle]="{ \'text-align\': \'left\', width: \'10%\' }">\r\n                            <span class="red">{{ rowData.groupCode }}</span>\r\n                          </td>\r\n\r\n                          <td\r\n                            [attr.colspan]="columns.length"\r\n                            [attr.rowspan]="rowData[\'rowSpan\']"\r\n                            [ngStyle]="{ \'text-align\': \'left\' }"\r\n                          >\r\n                            {{ getComponentName() + "." + "msgSelectTask" | translate }}\r\n                          </td>\r\n                        </tr>\r\n                      </ng-template>\r\n                      <ng-template pTemplate="rowexpansion" let-rowData let-columns="columns">\r\n                        <tr class="row-expanded">\r\n                          <td [attr.colspan]="columns.length + 2">\r\n                            <div class="column forced-backgroung">\r\n                              <div class="row">\r\n                                <div class="form-group flex--1" [ngClass]="{ required: !isReadOpenMode }">\r\n                                  <label class="form-label">\r\n                                    {{ getComponentName() + "." + "taskType" | translate }}\r\n                                  </label>\r\n\r\n                                  <div class="form-control">\r\n                                    <input\r\n                                      type="text"\r\n                                      class="aw-input"\r\n                                      maxlength="50"\r\n                                      [(ngModel)]="rowData.taskType"\r\n                                      [disabled]="true"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div class="form-group flex--1" [ngClass]="{ required: !isReadOpenMode }">\r\n                                  <label class="form-label">\r\n                                    {{ getComponentName() + "." + "groupCode" | translate }}\r\n                                  </label>\r\n\r\n                                  <div class="form-control">\r\n                                    <input\r\n                                      type="text"\r\n                                      class="aw-input"\r\n                                      maxlength="50"\r\n                                      [(ngModel)]="rowData.groupCode"\r\n                                      [disabled]="true"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                                <div class="form-group flex--1" [ngClass]="{ required: !isReadOpenMode }">\r\n                                  <label class="form-label">\r\n                                    {{ getComponentName() + "." + "firstPeriodicity" | translate }}\r\n                                  </label>\r\n\r\n                                  <div class="form-control">\r\n                                    <input\r\n                                      type="text"\r\n                                      class="aw-input"\r\n                                      maxlength="50"\r\n                                      [(ngModel)]="rowData.firstPeriodicity"\r\n                                      [disabled]="true"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                                <div class="form-group flex--1" [ngClass]="{ required: !isReadOpenMode }">\r\n                                  <label class="form-label">\r\n                                    {{ getComponentName() + "." + "periodicityType" | translate }}\r\n                                  </label>\r\n\r\n                                  <div class="form-control">\r\n                                    <input\r\n                                      type="text"\r\n                                      class="aw-input"\r\n                                      maxlength="50"\r\n                                      [(ngModel)]="rowData.periodicityType"\r\n                                      [disabled]="true"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div class="row">\r\n                                <div class="form-group flex--1" [ngClass]="{ required: !isReadOpenMode }">\r\n                                  <label class="form-label">\r\n                                    {{ getComponentName() + "." + "tolerance" | translate }}\r\n                                  </label>\r\n\r\n                                  <div class="form-control">\r\n                                    <input\r\n                                      type="text"\r\n                                      class="aw-input"\r\n                                      maxlength="50"\r\n                                      [(ngModel)]="rowData.tolerance"\r\n                                      [disabled]="true"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div class="form-group flex--1" [ngClass]="{ required: !isReadOpenMode }">\r\n                                  <label class="form-label">\r\n                                    {{ getComponentName() + "." + "alertThreshold" | translate }}\r\n                                  </label>\r\n\r\n                                  <div class="form-control">\r\n                                    <input\r\n                                      type="text"\r\n                                      class="aw-input"\r\n                                      maxlength="50"\r\n                                      [(ngModel)]="rowData.alertThreshold"\r\n                                      [disabled]="true"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div class="form-group flex--1" [ngClass]="{ required: !isReadOpenMode }">\r\n                                  <label class="form-label">\r\n                                    {{ getComponentName() + "." + "comments" | translate }}\r\n                                  </label>\r\n\r\n                                  <div class="form-control">\r\n                                    <input\r\n                                      type="text"\r\n                                      class="aw-input"\r\n                                      maxlength="50"\r\n                                      [(ngModel)]="rowData.comments"\r\n                                      [disabled]="true"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                                <div class="form-group flex--1"></div>\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      </ng-template>\r\n                    </p-table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<aw-asset-mp-report-popup-form\r\n  *ngIf="showReportPopup"\r\n  [reportContent]="reportText"\r\n  [(display)]="showReportPopup"\r\n></aw-asset-mp-report-popup-form>\r\n\r\n<!-- <aw-dialog-table\r\n  *ngIf="showItemTaskSearchPopup"\r\n  [keyMap]="taskKeyMap"\r\n  [(display)]="showItemTaskSearchPopup"\r\n  [data]="dialogTaskSearchTableData"\r\n  (onSelected)="addTask($event)"\r\n></aw-dialog-table> -->\r\n\r\n<aw-dialog-search-task\r\n  *ngIf="showItemTaskSearchPopup"\r\n  [(display)]="showItemTaskSearchPopup"\r\n  (onSelected)="addTask($event)"\r\n></aw-dialog-search-task>\r\n\r\n<aw-asset-dialog-task-counters\r\n  *ngIf="taskCountersVisible"\r\n  [(display)]="taskCountersVisible"\r\n  [selectedRow]="selectedBaseMpRowInput"\r\n  (onClose)="refreshTasks()"\r\n></aw-asset-dialog-task-counters>\r\n\r\n<aw-task-report-popup-form\r\n  *ngIf="showTaskReportPopup"\r\n  [reportContent]="taskReportText"\r\n  [(display)]="showTaskReportPopup"\r\n></aw-task-report-popup-form>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.component.scss':
      /*!****************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.component.scss ***!
  \****************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '.red {\n  color: #f6685e; }\n\n.green {\n  color: #4caf50; }\n\n.yellow {\n  color: #ffc107; }\n\n.action-list {\n  justify-content: flex-end; }\n\n.action-list .aw-btn {\n    margin-left: 8px; }\n\n.action-list .aw-btn:first-of-type {\n      margin-left: 0; }\n\n.filter-list {\n  display: none;\n  padding: 8px; }\n\n.filter-list.visible {\n    display: block; }\n\n.object-details {\n  border: 1px solid #01579b;\n  border-radius: 4px;\n  padding: 8px;\n  margin-bottom: calc(8px * 5); }\n\n.object-details .actions-bar {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end; }\n\n.task-configuration {\n  margin-right: 0.5rem; }\n\n/*# sourceMappingURL=data:application/json;base64, */';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.component.ts':
      /*!**************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.component.ts ***!
  \**************************************************************************************************/
      /*! exports provided: AssetMaintenancePlanComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'AssetMaintenancePlanComponent',
          function() {
            return AssetMaintenancePlanComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var _shared_constants_app_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/constants/app-constants */ './src/app/shared/constants/app-constants.ts'
        );
        /* harmony import */ var _shared_constants_bire_measure_reference_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/constants/bire-measure-reference-constants */ './src/app/shared/constants/bire-measure-reference-constants.ts'
        );
        /* harmony import */ var _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/constants/bire-unit-measure-constants */ './src/app/shared/constants/bire-unit-measure-constants.ts'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/enums/table-column-filter-mode.enum */ './src/app/shared/enums/table-column-filter-mode.enum.ts'
        );
        /* harmony import */ var _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/enums/table-selection-mode.enum */ './src/app/shared/enums/table-selection-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_export_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../shared/services/export.service */ './src/app/shared/services/export.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_page_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ../../../shared/types/page-component */ './src/app/shared/types/page-component.ts'
        );
        /* harmony import */ var _asset_maintenance_plan_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ./asset-maintenance-plan.service */ './src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };
        var __read =
          (undefined && undefined.__read) ||
          function(o, n) {
            var m = typeof Symbol === 'function' && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
              r,
              ar = [],
              e;
            try {
              while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
              e = { error: error };
            } finally {
              try {
                if (r && !r.done && (m = i['return'])) m.call(i);
              } finally {
                if (e) throw e.error;
              }
            }
            return ar;
          };
        var __spread =
          (undefined && undefined.__spread) ||
          function() {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
          };

        var AssetMaintenancePlanComponent = /** @class */ (function(_super) {
          __extends(AssetMaintenancePlanComponent, _super);
          function AssetMaintenancePlanComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService,
            sessionService,
            assetMaintenancePlanService,
            propertiesService,
            translateService,
            exportService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Write,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService
              ) || this;
            _this.sessionService = sessionService;
            _this.assetMaintenancePlanService = assetMaintenancePlanService;
            _this.propertiesService = propertiesService;
            _this.translateService = translateService;
            _this.exportService = exportService;
            _this.TABLE_PAGINATION_DEFAULT_ROWS =
              _shared_constants_app_constants__WEBPACK_IMPORTED_MODULE_2__[
                'AppConstants'
              ].TABLE_PAGINATION_DEFAULT_ROWS;
            _this.taskTypeMap = new Map();
            _this.referencesMap = new Map();
            _this.periodicityTypeMap = new Map();
            _this.taskGroupMap = new Map();
            _this.taskKeyMap = new Map();
            _this.unitCodeMap = new Map();
            _this.tasks = [];
            _this.referencesList = [];
            _this.potentialUnitList = [];
            _this.assetMaintenanceData = {};
            _this.loadTaskTypeMap();
            _this.loadPeriodicityTypeMap();
            _this.loadTaskGroups();
            _this.loadReferencesDropDown();
            _this.loadUnitCodeMap();
            return _this;
          }
          AssetMaintenancePlanComponent_1 = AssetMaintenancePlanComponent;
          AssetMaintenancePlanComponent.prototype.loadTaskTypeMap = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_6__['GenericPropertyConstants']
                  .TASK_TYPE_MAP
              )
              .subscribe(function(results) {
                results.forEach(function(element) {
                  _this.taskTypeMap.set(element.value, element.label);
                });
              });
          };
          AssetMaintenancePlanComponent.prototype.loadPeriodicityTypeMap = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_6__['GenericPropertyConstants']
                  .PERIODICITY_TYPE_MAP
              )
              .subscribe(function(results) {
                results.forEach(function(element) {
                  _this.periodicityTypeMap.set(element.value, element.label);
                });
              });
          };
          AssetMaintenancePlanComponent.prototype.loadTaskGroups = function() {
            var _this = this;
            this.assetMaintenancePlanService.findAllBireTaskGroups().subscribe(function(results) {
              results.forEach(function(element) {
                _this.taskGroupMap.set(element.value, element.label);
              });
            });
          };
          AssetMaintenancePlanComponent.prototype.loadReferencesDropDown = function() {
            var _this = this;
            this.assetMaintenancePlanService.findReferencesForAssetMp().subscribe(function(results) {
              _this.referencesList = results;
              _this.referenceSelected =
                _shared_constants_bire_measure_reference_constants__WEBPACK_IMPORTED_MODULE_3__[
                  'BireMeasureReferenceConstants'
                ].BIRE_MEASURE_REFERENCE_COUNTER_CODE_TSN;
              results.forEach(function(element) {
                if (!!element.value) {
                  _this.referencesMap.set(element.value, element.label);
                }
              });
            });
          };
          AssetMaintenancePlanComponent.prototype.loadUnitCodeMap = function() {
            var _this = this;
            this.assetMaintenancePlanService
              .findAllBireMeasureReferencesMaintenanceProgram()
              .subscribe(function(results) {
                results.forEach(function(element) {
                  if (!!element.counterCode && !!element.unitCode) {
                    _this.unitCodeMap.set(element.counterCode, element.unitCode);
                  }
                });
              });
          };
          AssetMaintenancePlanComponent.prototype.getComponentName = function() {
            return 'AssetMaintenancePlanComponent';
          };
          AssetMaintenancePlanComponent.prototype.setTableCols = function() {
            this.taskTableCols = [
              { field: 'taskCode', alignment: 'left', width: '10%' },
              { field: 'version', alignment: 'left', width: '5%' },
              { field: 'designation', alignment: 'left', width: '24%' },
              // { field: 'asset', alignment: 'left', width: '20%' },
              // { field: 'conf', alignment: 'left' },
              { field: 'taskGroup', alignment: 'left', width: '10%' },
              { field: 'reference', alignment: 'left' },
              { field: 'visit', alignment: 'left' },
              { field: 'periodicity', alignment: 'left' },
              { field: 'unit', alignment: 'left' }
              // { field: 'groupCode', alignment: 'left' },
            ];
            if (!!this.potentialUnitSelected) {
              // this.taskTableCols.push({ field: 'remainingEquivalent', alignment: 'left' });
            }
            // this.taskTableCols.push({ field: 'missingCounter', alignment: 'left' });
            // this.taskTableCols.push({ field: 'status', alignment: 'left' });
          };
          AssetMaintenancePlanComponent.prototype.toggleRowDetailsVisibility = function(row) {
            row.showMore = false;
            row.expand = !row.expand;
          };
          AssetMaintenancePlanComponent.prototype.toggleShowMoreRowDetailsVisibility = function(row) {
            row.expand = false;
            row.showMore = !row.showMore;
          };
          AssetMaintenancePlanComponent.prototype.init = function() {
            this.complianceColor = '';
            this.selectedTasks = [];
            this.isAssetLoading = false;
            this.isLoadingTaskTable = false;
            this.areDeletedTasksHidden = true;
            this.remainingEquivalentPotential = '';
            this.remainingEquivalentPotentialColor = undefined;
            this.potentialUnitSelected = '';
            this.taskCountersVisible = false;
          };
          AssetMaintenancePlanComponent.prototype.ngOnInit = function() {
            _super.prototype.ngOnInit.call(this);
            if (!!this.componentData) {
              this.updateOpenMode(this.componentData.openMode);
              this.loadOnInit();
            }
          };
          AssetMaintenancePlanComponent.prototype.loadOnInit = function() {
            if (!!this.componentData.objectId) {
              this.bidoEquipmentDTOId = this.serializationService.deserialize(this.componentData.objectId);
              this.init();
              this.setPotentialUnitList();
              this.loadEquipmentData();
            }
          };
          AssetMaintenancePlanComponent.prototype.loadEquipmentData = function() {
            var _this = this;
            if (!!this.componentData && !!this.componentData.objectId) {
              this.mpInput = {
                topEquipmentCode: this.bidoEquipmentDTOId.equipmentCode || ''
              };
              if (this.bidoEquipmentDTOId.equipmentCode) {
                // Load top data
                this.isAssetLoading = true;
                this.assetMaintenancePlanService
                  .loadAssetMaintenancePlan(this.bidoEquipmentDTOId)
                  .subscribe(function(result) {
                    _this.isAssetLoading = false;
                    if (result && result.assetText) {
                      _this.assetMaintenanceData = result;
                      _this.displayComponentContext(result.assetText, _this.isCreateOpenMode);
                    }
                  });
                this.loadTasksAndVisits();
              }
            }
          };
          AssetMaintenancePlanComponent.prototype.loadTasksAndVisits = function() {
            var _this = this;
            this.setTableCols();
            this.tasks = [];
            this.selectedTasks = [];
            this.isLoadingTaskTable = true;
            if (this.bidoEquipmentDTOId.equipmentCode) {
              // Load tasks and visits of equipment
              this.mpInput.topEquipmentCode = this.bidoEquipmentDTOId.equipmentCode;
              this.mpInput.areDeletedTasksHidden = this.areDeletedTasksHidden;
              this.mpInput.filterActivated = false;
              this.mpInput.modeScheduleWPVisibility = false;
              this.mpInput.unitCodeEquivalentSelected = this.potentialUnitSelected || undefined;
            }
            this.assetMaintenancePlanService
              .getBaseAssetMaintenancePlanStructure(this.mpInput)
              .subscribe(function(results) {
                _this.loadTasksRows(results);
                _this.calculateEquivalentPotential();
                _this.setNavigationLinkList();
                _this.isLoadingTaskTable = false;
              });
          };
          AssetMaintenancePlanComponent.prototype.calculateEquivalentPotential = function() {
            if (this.potentialUnitSelected) {
              var potentials_1 = [];
              this.tasks.forEach(function(obj) {
                if (obj.remainingEquivalent) {
                  potentials_1.push(Number(obj.remainingEquivalent.split(' ')[0]));
                }
              });
              if (potentials_1.length > 0) {
                this.remainingEquivalentPotential =
                  Math.min.apply(Math, __spread(potentials_1)).toString() + ' ' + this.potentialUnitSelected;
                this.remainingEquivalentPotentialColor = this.remainingEquivalentPotential.startsWith('-')
                  ? 'red'
                  : 'green';
              } else {
                this.remainingEquivalentPotential = '';
                this.remainingEquivalentPotentialColor = '';
              }
            } else {
              this.remainingEquivalentPotential = '';
              this.remainingEquivalentPotentialColor = '';
            }
          };
          AssetMaintenancePlanComponent.prototype.loadTasksRows = function(results) {
            var _this = this;
            this.tasks = [];
            if (!!results) {
              results.forEach(function(element, index) {
                var temp = _this.convertPlanTaskCounterTableDTOToRow(element, index);
                if (!!temp) {
                  _this.tasks.push(temp);
                }
              });
            }
          };
          AssetMaintenancePlanComponent.prototype.refresh = function() {
            this.loadOnInit();
          };
          AssetMaintenancePlanComponent.prototype.convertPlanTaskCounterTableDTOToRow = function(element, rowIndex) {
            var tempReference;
            var unitStr;
            var periodicityFrst;
            var periodicityStr;
            var toleranceStr;
            var alertThresholdStr;
            var commentsStr;
            if (!!element.birePlanTaskCounterDTO && !!element.birePlanTaskCounterDTO.counterCode) {
              tempReference = this.referencesMap.get(element.birePlanTaskCounterDTO.counterCode);
              unitStr = this.unitCodeMap.get(element.birePlanTaskCounterDTO.counterCode);
              periodicityFrst = element.birePlanTaskCounterDTO.periodicityFirst;
              periodicityStr = element.birePlanTaskCounterDTO.periodicity;
              toleranceStr = element.birePlanTaskCounterDTO.tolerance;
              alertThresholdStr = element.birePlanTaskCounterDTO.threshold;
              commentsStr = element.birePlanTaskCounterDTO.comments;
            }
            if (!element.bireTaskDTO) {
              element.bireTaskDTO = {};
            }
            var itemObj = {
              asset: element.assetText || '',
              taskCode: element.bireTaskDTO.taskCode || '',
              visit: element.visitCode || '',
              version: element.bireTaskDTO.taskVersion || '',
              designation: element.bireTaskDTO.taskDesignation,
              taskGroup: element.bireTaskDTO.groupCode && this.taskGroupMap.get(element.bireTaskDTO.groupCode),
              taskType: element.bireTaskDTO.taskTypeCode && this.taskTypeMap.get(element.bireTaskDTO.taskTypeCode),
              groupCode: element.birePlanTaskCounterDTO && element.birePlanTaskCounterDTO.groupCode,
              reference:
                element.birePlanTaskCounterDTO && ((element.birePlanTaskCounterDTO.counterCode && tempReference) || ''),
              unit: unitStr,
              firstPeriodicity: periodicityFrst,
              periodicity: periodicityStr,
              periodicityType:
                element.birePlanTaskCounterDTO &&
                element.birePlanTaskCounterDTO.periodicityType &&
                this.periodicityTypeMap.get(element.birePlanTaskCounterDTO.periodicityType),
              tolerance: toleranceStr,
              alertThreshold: alertThresholdStr,
              comments: commentsStr,
              remainingEquivalent: element.remainingEquivalent,
              conf: element.conf,
              missingCounter: element.missingCounter,
              status: element.status,
              equipmentCode: element.bidoEquipmentDTOId.equipmentCode,
              dataKey: rowIndex,
              showMore: false,
              expand: false,
              isGroup: false,
              children: []
            };
            if (element.groupingCode) {
              itemObj.isGroup = true;
              itemObj.children = element.children;
              itemObj.groupCode = element.groupingCode;
            }
            return itemObj;
          };
          AssetMaintenancePlanComponent.prototype.openMaintenanceProgram = function(planCode) {
            if (!!planCode) {
              var data = {
                id: this.tabService.generateId(),
                componentId:
                  _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__['ComponentConstants']
                    .ENG_MAINTENANCE_PROGRAM_FORM,
                openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Read
              };
              var birePlanDTOId = {
                planCode: planCode
              };
              data.objectId = this.serializationService.serialize(birePlanDTOId);
              var labelKey = 'transaction.' + data.componentId;
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          AssetMaintenancePlanComponent.prototype.openEquipment = function() {
            var labelKey = 'transaction.EquipmentFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'EquipmentFormComponent',
              objectId: this.bidoEquipmentDTOId.equipmentCode,
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Read
            };
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          AssetMaintenancePlanComponent.prototype.compare = function() {
            var _this = this;
            if (this.bidoEquipmentDTOId.equipmentCode && this.assetMaintenanceData.ampCode) {
              this.assetMaintenancePlanService.compareAmpWithOmp(this.bidoEquipmentDTOId).subscribe(function(result) {
                if (result) {
                  _this.showReportPopup = true;
                  _this.reportText = result;
                }
              });
            }
          };
          AssetMaintenancePlanComponent.prototype.setNavigationLinkList = function() {
            var _this = this;
            var addTaskKey = this.getTranslateKey('addTask');
            var deleteTaskKey = this.getTranslateKey('deleteTask');
            var hideDeletedTaskKey = this.getTranslateKey('hideDeletedTask');
            var showDeletedTaskKey = this.getTranslateKey('showDeletedTask');
            var setTaskInactiveKey = this.getTranslateKey('setTaskInactive');
            var setTaskActiveKey = this.getTranslateKey('setTaskActive');
            var setTaskAutomaticallyKey = this.getTranslateKey('setTaskAutomatically');
            var showPeriodicityKey = this.getTranslateKey('showPeriodicity');
            this.translateService
              .get([
                addTaskKey,
                deleteTaskKey,
                hideDeletedTaskKey,
                showDeletedTaskKey,
                setTaskInactiveKey,
                setTaskActiveKey,
                setTaskAutomaticallyKey,
                showPeriodicityKey
              ])
              .subscribe(function(results) {
                var addTaskLabel = results ? results[addTaskKey] : 'Add Task';
                var deleteTaskLabel = results ? results[deleteTaskKey] : 'Delete Task';
                var hideDeletedTaskLabel = results ? results[hideDeletedTaskKey] : 'Hide Deleted Task';
                var showDeletedTaskLabel = results ? results[showDeletedTaskKey] : 'Show Deleted Task';
                var taskInactiveLabel = results ? results[setTaskInactiveKey] : 'Set Task Inactive';
                var setTaskActiveLabel = results ? results[setTaskActiveKey] : 'Set Task Active';
                var setTaskAutomaticallyLabel = results
                  ? results[setTaskAutomaticallyKey]
                  : 'Select Automatically task within their Alternative';
                var showPeriodicityLabel = results ? results[showPeriodicityKey] : 'Show Periodicity';
                _this.navigationLinkList = [];
                if (_this.selectedTasks.length === 0) {
                  _this.navigationLinkList.push({
                    label: addTaskLabel,
                    command: function() {
                      _this.taskSearchCode();
                    }
                  });
                }
                if (_this.selectedTasks.length > 0) {
                  _this.navigationLinkList.push({
                    label: deleteTaskLabel,
                    command: function() {
                      _this.removeTasks();
                    }
                  });
                }
                if (_this.selectedTasks.length === 0) {
                  if (_this.areDeletedTasksHidden) {
                    _this.navigationLinkList.push({
                      label: showDeletedTaskLabel,
                      command: function() {
                        _this.areDeletedTasksHidden = false;
                        _this.loadTasksAndVisits();
                      }
                    });
                  } else {
                    _this.navigationLinkList.push({
                      label: hideDeletedTaskLabel,
                      command: function() {
                        _this.areDeletedTasksHidden = true;
                        _this.loadTasksAndVisits();
                      }
                    });
                  }
                }
                if (_this.selectedTasks.length > 0) {
                  _this.navigationLinkList.push({
                    label: taskInactiveLabel,
                    command: function() {
                      _this.deactivateTasks();
                    }
                  });
                  _this.navigationLinkList.push({
                    label: setTaskActiveLabel,
                    command: function() {
                      _this.activateTasks();
                    }
                  });
                }
                _this.navigationLinkList.push({
                  label: setTaskAutomaticallyLabel,
                  command: function() {
                    _this.autoSelectMaintenancePlanTasks();
                  }
                });
                if (_this.selectedTasks.length === 1 && _this.selectedTasks[0].status !== 'Deleted Task') {
                  _this.navigationLinkList.push({
                    label: showPeriodicityLabel,
                    command: function() {
                      _this.showTaskCounters();
                    }
                  });
                }
              });
          };
          AssetMaintenancePlanComponent.prototype.removeTasks = function() {
            var _this = this;
            var removeTaskList = [];
            this.selectedTasks.forEach(function(task) {
              var taskObj = {
                equipmentCode: task.equipmentCode,
                taskCode: task.taskCode,
                taskVersion: task.version
              };
              removeTaskList.push(taskObj);
            });
            this.tasks = [];
            this.selectedTasks = [];
            this.isLoadingTaskTable = true;
            this.assetMaintenancePlanService.removeTaskBaseMp(removeTaskList).subscribe(function(result) {
              if (result) {
                _this.messageService.showErrorMessage(result);
              }
              _this.loadTasksAndVisits();
            });
          };
          AssetMaintenancePlanComponent.prototype.activateTasks = function() {
            var _this = this;
            var activateTaskList = [];
            this.selectedTasks.forEach(function(task) {
              var taskObj = {
                equipmentCode: task.equipmentCode,
                taskCode: task.taskCode,
                taskVersion: task.version
              };
              activateTaskList.push(taskObj);
            });
            this.tasks = [];
            this.selectedTasks = [];
            this.isLoadingTaskTable = true;
            this.assetMaintenancePlanService.activateTaskBaseMp(activateTaskList).subscribe(function(result) {
              _this.loadTasksAndVisits();
            });
          };
          AssetMaintenancePlanComponent.prototype.deactivateTasks = function() {
            var _this = this;
            var deactivateTaskList = [];
            this.selectedTasks.forEach(function(task) {
              var taskObj = {
                equipmentCode: task.equipmentCode,
                taskCode: task.taskCode,
                taskVersion: task.version
              };
              deactivateTaskList.push(taskObj);
            });
            this.tasks = [];
            this.selectedTasks = [];
            this.isLoadingTaskTable = true;
            this.assetMaintenancePlanService.deactivateTaskBaseMp(deactivateTaskList).subscribe(function(result) {
              _this.loadTasksAndVisits();
            });
          };
          AssetMaintenancePlanComponent.prototype.setPotentialUnitList = function() {
            var _this = this;
            this.potentialUnitList = [
              {
                label:
                  _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_4__['BireUnitMeasureConstants']
                    .CYCLE,
                command: function() {
                  _this.updatePotentialUnit(
                    _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_4__[
                      'BireUnitMeasureConstants'
                    ].CYCLE
                  );
                }
              },
              {
                label:
                  _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_4__['BireUnitMeasureConstants']
                    .DAY,
                command: function() {
                  _this.updatePotentialUnit(
                    _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_4__[
                      'BireUnitMeasureConstants'
                    ].DAY
                  );
                }
              },
              {
                label:
                  _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_4__['BireUnitMeasureConstants']
                    .HOUR,
                command: function() {
                  _this.updatePotentialUnit(
                    _shared_constants_bire_unit_measure_constants__WEBPACK_IMPORTED_MODULE_4__[
                      'BireUnitMeasureConstants'
                    ].HOUR
                  );
                }
              }
            ];
          };
          AssetMaintenancePlanComponent.prototype.updatePotentialUnit = function(unit) {
            this.potentialUnitSelected = unit;
            this.mpInput.unitCodeEquivalentSelected = unit || undefined;
            this.loadTasksAndVisits();
          };
          AssetMaintenancePlanComponent.prototype.taskSearchCode = function() {
            var taskTemp = {
              bireTaskDTO: {}
            };
            var taskSearch = [
              {
                field: 'taskCode',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskVersion',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskDesignation',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskChapter',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskSection',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskSubject',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskTask',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskSubTask',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskStatus',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskApplicabilityDate',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskApplicabilityCode',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'repairCenterCode',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskGroup',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'taskTypeCode',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'overhaul',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_8__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              }
            ];
            this.dialogTaskSearchTableData = {
              componentId: 'taskSearchPopup',
              tableCols: taskSearch,
              tableRows: this.assetMaintenancePlanService.findBireTasksByCriteria(taskTemp),
              dataKey: undefined,
              selectionMode:
                _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_9__['TableSelectionMode'].Single,
              globalFilter: true
            };
            this.showItemTaskSearchPopup = true;
          };
          AssetMaintenancePlanComponent.prototype.addTask = function(task) {
            var _this = this;
            if (!this.assetMaintenanceData.ampCode) {
              this.messageService.showErrorMessage(this.getTranslateKey('noAssociatedPlan'));
              return;
            }
            this.tasks = [];
            this.selectedTasks = [];
            this.isLoadingTaskTable = true;
            this.showItemTaskSearchPopup = false;
            if (task) {
              var taskObj = {
                equipmentCode: this.bidoEquipmentDTOId.equipmentCode,
                taskCode: task.taskCode,
                taskVersion: task.taskVersion,
                counterCode: this.referenceSelected
              };
              this.assetMaintenancePlanService.addTaskBaseMp(taskObj).subscribe(
                function(result) {
                  _this.loadTasksAndVisits();
                },
                function(error) {
                  _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnaddTask'));
                }
              );
            }
          };
          AssetMaintenancePlanComponent.prototype.approvePlan = function(flag) {
            var _this = this;
            if (this.bidoEquipmentDTOId.equipmentCode) {
              var input = {
                equipmentCode: this.bidoEquipmentDTOId.equipmentCode,
                actionFlag: flag
              };
              this.assetMaintenancePlanService.approveCustomizeBaseMp(input).subscribe(
                function(result) {
                  _this.loadEquipmentData();
                },
                function(error) {
                  _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnapprovePlan'));
                }
              );
            }
          };
          AssetMaintenancePlanComponent.prototype.setActions = function() {
            var _this = this;
            this.setNavigationLinkList();
            this.taskConfigurationList = [];
            if (this.selectedTasks.length === 1 && this.selectedTasks[0].isGroup) {
              if (!this.selectedTasks[0].children) {
                return;
              }
              this.taskConfigurationList.push({
                label: '',
                command: function() {
                  _this.selectTaskConfiguration(undefined);
                }
              });
              this.selectedTasks[0].children.forEach(function(elem) {
                _this.taskConfigurationList.push({
                  label: elem.bireTaskDTO.taskCode,
                  command: function() {
                    _this.selectTaskConfiguration(elem);
                  }
                });
              });
            }
          };
          AssetMaintenancePlanComponent.prototype.selectTaskConfiguration = function(task) {
            var _this = this;
            var param = {
              taskGroupCode: this.selectedTasks[0].groupCode,
              equipmentCode: this.bidoEquipmentDTOId.equipmentCode
            };
            if (!!task) {
              param.taskCode = task.bireTaskDTO.taskCode;
            }
            this.assetMaintenancePlanService.selectMaintenancePlanTask(param).subscribe(function(data) {
              _this.loadEquipmentData();
            });
          };
          AssetMaintenancePlanComponent.prototype.exportTable = function() {
            if (!!this.componentData) {
              var list = __spread(this.tasks);
              list.forEach(function(row) {
                delete row.equipmentCode;
              });
              this.exportService.toExcel(
                list,
                AssetMaintenancePlanComponent_1.TABLE_EXPORT_NAME,
                this.componentData.componentId
              );
            } else {
              _super.prototype.throwUnboundLocalError.call(this, 'exportTable', 'this.componentData');
            }
          };
          AssetMaintenancePlanComponent.prototype.showTaskCounters = function() {
            this.selectedBaseMpRowInput = {
              equipmentCode: this.selectedTasks[0].equipmentCode,
              taskCode: this.selectedTasks[0].taskCode,
              taskVersion: this.selectedTasks[0].version
            };
            this.taskCountersVisible = true;
          };
          AssetMaintenancePlanComponent.prototype.openTaskCode = function(object) {
            if (object && object.taskCode && object.version !== null && object.version !== undefined) {
              var bireTaskDTO = {
                taskCode: object.taskCode,
                taskVersion: object.version
              };
              var labelKey = 'transaction.TaskFormComponent';
              var data = {
                id: this.tabService.generateId(),
                componentId: 'TaskFormComponent',
                objectId: this.serializationService.serialize(bireTaskDTO),
                openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Read
              };
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          AssetMaintenancePlanComponent.prototype.refreshTasks = function() {
            this.tasks = [];
            this.selectedTasks = [];
            this.isLoadingTaskTable = true;
            this.loadTasksAndVisits();
          };
          AssetMaintenancePlanComponent.prototype.autoSelectMaintenancePlanTasks = function() {
            var _this = this;
            this.isLoadingTaskTable = true;
            if (this.bidoEquipmentDTOId.equipmentCode) {
              this.assetMaintenancePlanService
                .autoSelectMaintenancePlanTasks(this.bidoEquipmentDTOId.equipmentCode)
                .subscribe(function(result) {
                  _this.taskReportText = '';
                  _this.showTaskReportPopup = true;
                  _this.taskReportText = result;
                  _this.loadTasksAndVisits();
                });
            }
          };
          AssetMaintenancePlanComponent.prototype.showTaskConfigurationList = function() {
            return this.selectedTasks.length === 1 && this.selectedTasks[0].isGroup;
          };
          var AssetMaintenancePlanComponent_1;
          AssetMaintenancePlanComponent.TABLE_EXPORT_NAME = 'asset-mp-list';
          AssetMaintenancePlanComponent = AssetMaintenancePlanComponent_1 = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-asset-maintenance-plan',
                template: __webpack_require__(
                  /*! ./asset-maintenance-plan.component.html */ './src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./asset-maintenance-plan.component.scss */ './src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_11__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_12__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_13__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_15__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_17__['TabService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_16__['SessionService'],
                _asset_maintenance_plan_service__WEBPACK_IMPORTED_MODULE_19__['AssetMaintenancePlanService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_14__['PropertiesService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService'],
                _shared_services_export_service__WEBPACK_IMPORTED_MODULE_10__['ExportService']
              ])
            ],
            AssetMaintenancePlanComponent
          );
          return AssetMaintenancePlanComponent;
        })(_shared_types_page_component__WEBPACK_IMPORTED_MODULE_18__['PageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.service.ts':
      /*!************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.service.ts ***!
  \************************************************************************************************/
      /*! exports provided: AssetMaintenancePlanService */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'AssetMaintenancePlanService',
          function() {
            return AssetMaintenancePlanService;
          }
        );
        /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */ './node_modules/@angular/common/fesm5/http.js'
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_api_airworthiness_management_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/api/airworthiness-management.api */ './src/app/shared/api/airworthiness-management.api.ts'
        );
        /* harmony import */ var _shared_api_maintenance_plan_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/api/maintenance-plan.api */ './src/app/shared/api/maintenance-plan.api.ts'
        );
        /* harmony import */ var _shared_api_product_structure_management_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/api/product-structure-management.api */ './src/app/shared/api/product-structure-management.api.ts'
        );
        /* harmony import */ var _shared_api_task_management_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/api/task-management.api */ './src/app/shared/api/task-management.api.ts'
        );
        /* harmony import */ var _shared_api_user_profile_business_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/api/user-profile-business.api */ './src/app/shared/api/user-profile-business.api.ts'
        );
        /* harmony import */ var _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/constants/bido-function-type-constants */ './src/app/shared/constants/bido-function-type-constants.ts'
        );
        /* harmony import */ var _shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/http/abstract-aw-http */ './src/app/shared/http/abstract-aw-http.ts'
        );
        /* harmony import */ var _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/services/app-config.service */ './src/app/shared/services/app-config.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var AssetMaintenancePlanService = /** @class */ (function(_super) {
          __extends(AssetMaintenancePlanService, _super);
          function AssetMaintenancePlanService(
            http,
            appConfigService,
            taskManagementApi,
            productStructureManagementApi,
            userProfileBusinessApi,
            maintenancePlanApi,
            airworthinessManagementApi
          ) {
            var _this = _super.call(this, http, appConfigService) || this;
            _this.taskManagementApi = taskManagementApi;
            _this.productStructureManagementApi = productStructureManagementApi;
            _this.userProfileBusinessApi = userProfileBusinessApi;
            _this.maintenancePlanApi = maintenancePlanApi;
            _this.airworthinessManagementApi = airworthinessManagementApi;
            return _this;
          }
          AssetMaintenancePlanService.prototype.loadAssetMaintenancePlan = function(bidoEquipmentDTOId) {
            return _super.prototype.post.call(
              this,
              this.maintenancePlanApi.loadAssetBaseMaintenancePlan,
              bidoEquipmentDTOId
            );
          };
          AssetMaintenancePlanService.prototype.getBaseAssetMaintenancePlanStructure = function(input) {
            return _super.prototype.post.call(
              this,
              this.maintenancePlanApi.getBaseAssetMaintenancePlanStructure,
              input
            );
          };
          AssetMaintenancePlanService.prototype.compareAmpWithOmp = function(bidoEquipmentDTOId) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.compareAmpWithOmp, bidoEquipmentDTOId);
          };
          AssetMaintenancePlanService.prototype.findAllBireTaskGroups = function() {
            return _super.prototype.post.call(this, this.taskManagementApi.findAllBireTaskGroups);
          };
          AssetMaintenancePlanService.prototype.findReferencesForAssetMp = function() {
            return _super.prototype.post.call(this, this.maintenancePlanApi.findReferencesForAssetMp);
          };
          AssetMaintenancePlanService.prototype.findAllBireMeasureReferencesMaintenanceProgram = function() {
            return _super.prototype.post.call(
              this,
              this.productStructureManagementApi.findAllBireMeasureReferencesMaintenanceProgram
            );
          };
          AssetMaintenancePlanService.prototype.findReferencesForPeriodicity = function() {
            return _super.prototype.post.call(this, this.maintenancePlanApi.findReferencesForPeriodicity);
          };
          AssetMaintenancePlanService.prototype.findMROCenter = function() {
            return _super.prototype.post.call(this, this.productStructureManagementApi.findAllBireSite);
          };
          AssetMaintenancePlanService.prototype.getTaskGroups = function() {
            return _super.prototype.post.call(this, this.taskManagementApi.findAllBireTaskGroups);
          };
          AssetMaintenancePlanService.prototype.findBireTasksByCriteria = function(criteria) {
            return _super.prototype.post.call(this, this.taskManagementApi.findBireTasksByCriteria, criteria);
          };
          AssetMaintenancePlanService.prototype.selectMaintenancePlanTask = function(criteria) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.selectMaintenancePlanTask, criteria);
          };
          AssetMaintenancePlanService.prototype.hasUpdateRights = function() {
            var accessRightQueryDTO = {
              useCaseCode:
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_7__['BidoFunctionTypeConstants']
                  .UC_MCH_TASK,
              functionCode: undefined
            };
            return _super.prototype.post.call(this, this.userProfileBusinessApi.hasUpdateRights, accessRightQueryDTO);
          };
          AssetMaintenancePlanService.prototype.hasDisplayRights = function(useCaseCode) {
            var accessRightQueryDTO = {
              useCaseCode:
                useCaseCode ||
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_7__['BidoFunctionTypeConstants']
                  .UC_MCH_TASK,
              functionCode: undefined
            };
            return _super.prototype.post.call(this, this.userProfileBusinessApi.hasDisplayRights, accessRightQueryDTO);
          };
          AssetMaintenancePlanService.prototype.hasManageRights = function() {
            var accessRightQueryDTO = {
              useCaseCode:
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_7__['BidoFunctionTypeConstants']
                  .UC_MCH_TASK,
              functionCode: undefined
            };
            return _super.prototype.post.call(this, this.userProfileBusinessApi.hasManageRights, accessRightQueryDTO);
          };
          AssetMaintenancePlanService.prototype.approveCustomizeBaseMp = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.approveCustomizeBaseMp, input);
          };
          AssetMaintenancePlanService.prototype.addTaskBaseMp = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.addTaskBaseMp, input);
          };
          AssetMaintenancePlanService.prototype.removeTaskBaseMp = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.removeTaskBaseMp, input);
          };
          AssetMaintenancePlanService.prototype.deactivateTaskBaseMp = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.deactivateTaskBaseMp, input);
          };
          AssetMaintenancePlanService.prototype.activateTaskBaseMp = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.activateTaskBaseMp, input);
          };
          AssetMaintenancePlanService.prototype.saveTaskCounterBaseMp = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.saveTaskCounterBaseMp, input);
          };
          AssetMaintenancePlanService.prototype.getAllCountersBaseMp = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.getAllCountersBaseMp, input);
          };
          AssetMaintenancePlanService.prototype.deleteTaskCounterBaseMp = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.deleteTaskCounterBaseMp, input);
          };
          AssetMaintenancePlanService.prototype.autoSelectMaintenancePlanTasks = function(equipmentCode) {
            return _super.prototype.post.call(
              this,
              this.airworthinessManagementApi.autoSelectMaintenancePlanTasks,
              equipmentCode
            );
          };
          AssetMaintenancePlanService = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])(),
              __metadata('design:paramtypes', [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClient'],
                _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_9__['AppConfigService'],
                _shared_api_task_management_api__WEBPACK_IMPORTED_MODULE_5__['TaskManagementApi'],
                _shared_api_product_structure_management_api__WEBPACK_IMPORTED_MODULE_4__[
                  'ProductStructureManagementApi'
                ],
                _shared_api_user_profile_business_api__WEBPACK_IMPORTED_MODULE_6__['UserProfileBusinessApi'],
                _shared_api_maintenance_plan_api__WEBPACK_IMPORTED_MODULE_3__['MaintenancePlanApi'],
                _shared_api_airworthiness_management_api__WEBPACK_IMPORTED_MODULE_2__['AirworthinessManagementApi']
              ])
            ],
            AssetMaintenancePlanService
          );
          return AssetMaintenancePlanService;
        })(_shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_8__['AbstractAwHttpService']);

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/asset-mp-report-popup-form/asset-mp-report-popup-form.component.html':
      /*!***********************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/asset-mp-report-popup-form/asset-mp-report-popup-form.component.html ***!
  \***********************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group">\r\n      <div class="form-control">\r\n        <textarea\r\n          class="aw-textarea"\r\n          [rows]="20"\r\n          [cols]="100"\r\n          pInputTextarea\r\n          [(ngModel)]="reportContent.text"\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">{{ "global.close" | translate }}</button>\r\n\r\n    <button type="button" mat-raised-button (click)="exportToTxt()">\r\n      {{ getComponentName() + ".exportTxt" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/asset-mp-report-popup-form/asset-mp-report-popup-form.component.scss':
      /*!***********************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/asset-mp-report-popup-form/asset-mp-report-popup-form.component.scss ***!
  \***********************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          ':host textarea {\n  background-color: transparent;\n  border: 0;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: 1.42857143;\n  min-height: 50vh;\n  outline: none;\n  padding: 8px 0;\n  width: 100%; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2Fzc2V0LW1haW50ZW5hbmNlLXBsYW4vYXNzZXQtbXAtcmVwb3J0LXBvcHVwLWZvcm0vZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxhcHBcXG1haW5cXGZsZWV0LW1hbmFnZW1lbnRcXGFzc2V0LW1haW50ZW5hbmNlLXBsYW5cXGFzc2V0LW1wLXJlcG9ydC1wb3B1cC1mb3JtXFxhc3NldC1tcC1yZXBvcnQtcG9wdXAtZm9ybS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2Fzc2V0LW1haW50ZW5hbmNlLXBsYW4vYXNzZXQtbXAtcmVwb3J0LXBvcHVwLWZvcm0vZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxzdHlsZXNcXF9jb25zdGFudHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUVJLDZCQUE2QjtFQUM3QixTQUFTO0VBQ1QsY0FBYztFQUNkLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsb0JBQW9CO0VBQ3BCLHVCQ2lDcUI7RURoQ3JCLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsY0FBd0I7RUFDeEIsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2Fzc2V0LW1haW50ZW5hbmNlLXBsYW4vYXNzZXQtbXAtcmVwb3J0LXBvcHVwLWZvcm0vYXNzZXQtbXAtcmVwb3J0LXBvcHVwLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiY29uc3RhbnRzXCI7XHJcblxyXG46aG9zdCB7XHJcbiAgdGV4dGFyZWEge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xyXG4gICAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XHJcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0O1xyXG4gICAgbWluLWhlaWdodDogNTB2aDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiAkbWFyZ2luLXZhbHVlIDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuIiwiJHByaW1hcnktYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4kcHJpbWFyeS10ZXh0LWNvbG9yOiAjMDAwO1xyXG4kc2Vjb25kYXJ5LXRleHQtY29sb3I6ICM1OTU5NTk7XHJcbiRhY2NlbnQtY29sb3I6ICMwMTU3OWI7XHJcblxyXG4kYm9keS1iYWNrZ3JvdW5kLWNvbG9yOiAjZThlYmVkO1xyXG4kdG9wYmFyLWNvbG9yOiAjZmFmYWZhO1xyXG5cclxuLy8gJHByaW1hcnktYmFja2dyb3VuZC1jb2xvcjogIzFlMWUxZTtcclxuLy8gJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMzMzO1xyXG4vLyAkcHJpbWFyeS10ZXh0LWNvbG9yOiAjZThlOGU4O1xyXG4vLyAkc2Vjb25kYXJ5LXRleHQtY29sb3I6ICNmZmY7XHJcbi8vICRhY2NlbnQtY29sb3I6ICM5Y2RjZmU7XHJcblxyXG4kYm9yZGVyLWNvbG9yOiAkc2Vjb25kYXJ5LXRleHQtY29sb3I7XHJcbiRib3JkZXItY29sb3ItLWRpc2FibGVkOiB0cmFuc3BhcmVudDtcclxuJGJvcmRlci1jb2xvci0tZm9jdXM6ICRhY2NlbnQtY29sb3I7XHJcbiRib3JkZXItY29sb3ItLWhvdmVyOiAjMWExYTFhO1xyXG5cclxuJGdyZWVuLWRhcmsxOiAjMjc2MzJhO1xyXG4kZ3JlZW4tbGlnaHQxOiAjNGNhZjUwO1xyXG4kb3JhbmdlOiAjZmZjMTA3O1xyXG4kcmVkLWRhcmsxOiAjYTgyNTI1O1xyXG4kcmVkLWxpZ2h0MTogI2Y2Njg1ZTtcclxuJGJsdWUtbGlnaHQxOiAjYjhkMGU4O1xyXG4kYmx1ZS1kYXJrMTogIzAwNmVhOTtcclxuJGdyZXkxOiAjYzhkNGQ2O1xyXG4keWVsbG93MTogI2RkZGYwMDtcclxuXHJcbiRjcml0aWNhbC12YWx1ZS1kYXJrOiAjZmJhNjQzOyAvLyBUT0RPOiByZW1vdmUgaXRcclxuJGNyaXRpY2FsLXZhbHVlLWxpZ2h0OiAjZmVjYzhlOyAvLyBUT0RPOiByZW1vdmUgaXRcclxuJGNhbGVuZGFyLXllbGxvdzogI2VmZWZiMDsgLy8gVE9ETzogcmVtb3ZlIGl0XHJcbiRiYWQtdmFsdWUtZGFyazogI2ZmNjc1ODsgLy8gVE9ETzogcmVtb3ZlIGl0XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcblxyXG4kYm9yZGVyLXJhZGl1czogNHB4O1xyXG4kYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuJGJvcmRlci13aWR0aDogMXB4O1xyXG4kZm9udC1mYW1pbHk6IFwiTGF0b0xhdGluV2ViXCI7XHJcbiRmb250LXNpemU6IDAuODc1cmVtO1xyXG4kZm9udC13ZWlnaHQ6IDQwMDtcclxuJGxpbmUtaGVpZ2h0OiAxLjQyODU3MTQyOTtcclxuJG1hcmdpbi12YWx1ZTogOHB4O1xyXG4kcGFnZS1tYXgtd2lkdGg6IDEzNjZweDtcclxuJGF0dHJpYnV0ZXMtY29sdW1uLXdpZHRoLTQ6IDQ7XHJcbiRhdHRyaWJ1dGVzLWNvbHVtbi13aWR0aC0zOiAzO1xyXG4kYXR0cmlidXRlcy1jb2x1bW4td2lkdGgtMjogMjtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbiRsZWZ0LXNpZGViYXItd2lkdGgtLWNvbGxhcHNlZDogNTBweDtcclxuJGxlZnQtc2lkZWJhci13aWR0aC0tZXhwYW5kZWQ6IDIyMHB4O1xyXG4kcmlnaHQtc2lkZWJhci13aWR0aC0tY29sbGFwc2VkOiA1MHB4O1xyXG4kcmlnaHQtc2lkZWJhci13aWR0aC0tZXhwYW5kZWQ6IDIyMHB4O1xyXG4kdG9wYmFyLWhlaWdodDogNDBweDtcclxuJG1haW5iYXItYm9yZGVyLWNvbG9yOiBkYXJrZW4oJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yLCA1JSk7XHJcbiRtYWluYmFyLWJvcmRlci13aWR0aDogMnB4O1xyXG4kcGFnZS1oZWFkZXItaGVpZ2h0OiA1LjVyZW07XHJcbiRmb3JtLWNvbnRyb2wtaGVpZ2h0OiAyLjVyZW07XHJcbiRjaGVja2JveC1oZWlnaHQ6IDEuMjVyZW07XHJcbiRyYWRpb2J1dHRvbi1oZWlnaHQ6IDEuMjVyZW07XHJcbiJdfQ== */';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/asset-mp-report-popup-form/asset-mp-report-popup-form.component.ts':
      /*!*********************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/asset-mp-report-popup-form/asset-mp-report-popup-form.component.ts ***!
  \*********************************************************************************************************************************/
      /*! exports provided: AssetMpReportPopupFormComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'AssetMpReportPopupFormComponent',
          function() {
            return AssetMpReportPopupFormComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        /* harmony import */ var _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../shared/utils/file-utils */ './src/app/shared/utils/file-utils.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var AssetMpReportPopupFormComponent = /** @class */ (function(_super) {
          __extends(AssetMpReportPopupFormComponent, _super);
          function AssetMpReportPopupFormComponent() {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Read,
                'AssetMpReportPopupFormComponent'
              ) || this;
            _this.reportContent = {};
            return _this;
          }
          AssetMpReportPopupFormComponent.prototype.ngOnInit = function() {
            return;
          };
          AssetMpReportPopupFormComponent.prototype.exportToTxt = function() {
            _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_3__['FileUtils'].downloadFile(
              this.reportContent.bytes,
              'Report_' +
                new Date().toDateString() +
                '_' +
                new Date().getHours() +
                'h' +
                new Date().getSeconds() +
                '.txt'
            );
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            AssetMpReportPopupFormComponent.prototype,
            'reportContent',
            void 0
          );
          AssetMpReportPopupFormComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-asset-mp-report-popup-form',
                template: __webpack_require__(
                  /*! ./asset-mp-report-popup-form.component.html */ './src/app/main/fleet-management/asset-maintenance-plan/asset-mp-report-popup-form/asset-mp-report-popup-form.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./asset-mp-report-popup-form.component.scss */ './src/app/main/fleet-management/asset-maintenance-plan/asset-mp-report-popup-form/asset-mp-report-popup-form.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [])
            ],
            AssetMpReportPopupFormComponent
          );
          return AssetMpReportPopupFormComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/task-report-popup-form/task-report-popup-form.component.html':
      /*!***************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/task-report-popup-form/task-report-popup-form.component.html ***!
  \***************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group">\r\n      <div class="form-control">\r\n        <textarea class="aw-textarea" [rows]="10" [cols]="60" pInputTextarea [(ngModel)]="reportContent"></textarea>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">{{ "global.close" | translate }}</button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/task-report-popup-form/task-report-popup-form.component.scss':
      /*!***************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/task-report-popup-form/task-report-popup-form.component.scss ***!
  \***************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          ':host textarea {\n  background-color: transparent;\n  border: 0;\n  color: inherit;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  line-height: 1.42857143;\n  min-height: 50vh;\n  outline: none;\n  padding: 8px 0;\n  width: 100%; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2Fzc2V0LW1haW50ZW5hbmNlLXBsYW4vdGFzay1yZXBvcnQtcG9wdXAtZm9ybS9kOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGdpdGh1Yl9wYWdlcy9zcmNcXGFwcFxcbWFpblxcZmxlZXQtbWFuYWdlbWVudFxcYXNzZXQtbWFpbnRlbmFuY2UtcGxhblxcdGFzay1yZXBvcnQtcG9wdXAtZm9ybVxcdGFzay1yZXBvcnQtcG9wdXAtZm9ybS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2Fzc2V0LW1haW50ZW5hbmNlLXBsYW4vdGFzay1yZXBvcnQtcG9wdXAtZm9ybS9kOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGdpdGh1Yl9wYWdlcy9zcmNcXHN0eWxlc1xcX2NvbnN0YW50cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBRUksNkJBQTZCO0VBQzdCLFNBQVM7RUFDVCxjQUFjO0VBQ2Qsb0JBQW9CO0VBQ3BCLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsdUJDaUNxQjtFRGhDckIsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixjQUF3QjtFQUN4QixXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2ZsZWV0LW1hbmFnZW1lbnQvYXNzZXQtbWFpbnRlbmFuY2UtcGxhbi90YXNrLXJlcG9ydC1wb3B1cC1mb3JtL3Rhc2stcmVwb3J0LXBvcHVwLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiY29uc3RhbnRzXCI7XHJcblxyXG46aG9zdCB7XHJcbiAgdGV4dGFyZWEge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xyXG4gICAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XHJcbiAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0O1xyXG4gICAgbWluLWhlaWdodDogNTB2aDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiAkbWFyZ2luLXZhbHVlIDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuIiwiJHByaW1hcnktYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4kcHJpbWFyeS10ZXh0LWNvbG9yOiAjMDAwO1xyXG4kc2Vjb25kYXJ5LXRleHQtY29sb3I6ICM1OTU5NTk7XHJcbiRhY2NlbnQtY29sb3I6ICMwMTU3OWI7XHJcblxyXG4kYm9keS1iYWNrZ3JvdW5kLWNvbG9yOiAjZThlYmVkO1xyXG4kdG9wYmFyLWNvbG9yOiAjZmFmYWZhO1xyXG5cclxuLy8gJHByaW1hcnktYmFja2dyb3VuZC1jb2xvcjogIzFlMWUxZTtcclxuLy8gJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMzMzO1xyXG4vLyAkcHJpbWFyeS10ZXh0LWNvbG9yOiAjZThlOGU4O1xyXG4vLyAkc2Vjb25kYXJ5LXRleHQtY29sb3I6ICNmZmY7XHJcbi8vICRhY2NlbnQtY29sb3I6ICM5Y2RjZmU7XHJcblxyXG4kYm9yZGVyLWNvbG9yOiAkc2Vjb25kYXJ5LXRleHQtY29sb3I7XHJcbiRib3JkZXItY29sb3ItLWRpc2FibGVkOiB0cmFuc3BhcmVudDtcclxuJGJvcmRlci1jb2xvci0tZm9jdXM6ICRhY2NlbnQtY29sb3I7XHJcbiRib3JkZXItY29sb3ItLWhvdmVyOiAjMWExYTFhO1xyXG5cclxuJGdyZWVuLWRhcmsxOiAjMjc2MzJhO1xyXG4kZ3JlZW4tbGlnaHQxOiAjNGNhZjUwO1xyXG4kb3JhbmdlOiAjZmZjMTA3O1xyXG4kcmVkLWRhcmsxOiAjYTgyNTI1O1xyXG4kcmVkLWxpZ2h0MTogI2Y2Njg1ZTtcclxuJGJsdWUtbGlnaHQxOiAjYjhkMGU4O1xyXG4kYmx1ZS1kYXJrMTogIzAwNmVhOTtcclxuJGdyZXkxOiAjYzhkNGQ2O1xyXG4keWVsbG93MTogI2RkZGYwMDtcclxuXHJcbiRjcml0aWNhbC12YWx1ZS1kYXJrOiAjZmJhNjQzOyAvLyBUT0RPOiByZW1vdmUgaXRcclxuJGNyaXRpY2FsLXZhbHVlLWxpZ2h0OiAjZmVjYzhlOyAvLyBUT0RPOiByZW1vdmUgaXRcclxuJGNhbGVuZGFyLXllbGxvdzogI2VmZWZiMDsgLy8gVE9ETzogcmVtb3ZlIGl0XHJcbiRiYWQtdmFsdWUtZGFyazogI2ZmNjc1ODsgLy8gVE9ETzogcmVtb3ZlIGl0XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcblxyXG4kYm9yZGVyLXJhZGl1czogNHB4O1xyXG4kYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuJGJvcmRlci13aWR0aDogMXB4O1xyXG4kZm9udC1mYW1pbHk6IFwiTGF0b0xhdGluV2ViXCI7XHJcbiRmb250LXNpemU6IDAuODc1cmVtO1xyXG4kZm9udC13ZWlnaHQ6IDQwMDtcclxuJGxpbmUtaGVpZ2h0OiAxLjQyODU3MTQyOTtcclxuJG1hcmdpbi12YWx1ZTogOHB4O1xyXG4kcGFnZS1tYXgtd2lkdGg6IDEzNjZweDtcclxuJGF0dHJpYnV0ZXMtY29sdW1uLXdpZHRoLTQ6IDQ7XHJcbiRhdHRyaWJ1dGVzLWNvbHVtbi13aWR0aC0zOiAzO1xyXG4kYXR0cmlidXRlcy1jb2x1bW4td2lkdGgtMjogMjtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbiRsZWZ0LXNpZGViYXItd2lkdGgtLWNvbGxhcHNlZDogNTBweDtcclxuJGxlZnQtc2lkZWJhci13aWR0aC0tZXhwYW5kZWQ6IDIyMHB4O1xyXG4kcmlnaHQtc2lkZWJhci13aWR0aC0tY29sbGFwc2VkOiA1MHB4O1xyXG4kcmlnaHQtc2lkZWJhci13aWR0aC0tZXhwYW5kZWQ6IDIyMHB4O1xyXG4kdG9wYmFyLWhlaWdodDogNDBweDtcclxuJG1haW5iYXItYm9yZGVyLWNvbG9yOiBkYXJrZW4oJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yLCA1JSk7XHJcbiRtYWluYmFyLWJvcmRlci13aWR0aDogMnB4O1xyXG4kcGFnZS1oZWFkZXItaGVpZ2h0OiA1LjVyZW07XHJcbiRmb3JtLWNvbnRyb2wtaGVpZ2h0OiAyLjVyZW07XHJcbiRjaGVja2JveC1oZWlnaHQ6IDEuMjVyZW07XHJcbiRyYWRpb2J1dHRvbi1oZWlnaHQ6IDEuMjVyZW07XHJcbiJdfQ== */';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-maintenance-plan/task-report-popup-form/task-report-popup-form.component.ts':
      /*!*************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-maintenance-plan/task-report-popup-form/task-report-popup-form.component.ts ***!
  \*************************************************************************************************************************/
      /*! exports provided: TaskReportPopupFormComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'TaskReportPopupFormComponent',
          function() {
            return TaskReportPopupFormComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var TaskReportPopupFormComponent = /** @class */ (function(_super) {
          __extends(TaskReportPopupFormComponent, _super);
          function TaskReportPopupFormComponent() {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Read,
                'TaskReportPopupFormComponent'
              ) || this;
            _this.reportContent = '';
            return _this;
          }
          TaskReportPopupFormComponent.prototype.ngOnInit = function() {
            return;
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', String)],
            TaskReportPopupFormComponent.prototype,
            'reportContent',
            void 0
          );
          TaskReportPopupFormComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-task-report-popup-form',
                template: __webpack_require__(
                  /*! ./task-report-popup-form.component.html */ './src/app/main/fleet-management/asset-maintenance-plan/task-report-popup-form/task-report-popup-form.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./task-report-popup-form.component.scss */ './src/app/main/fleet-management/asset-maintenance-plan/task-report-popup-form/task-report-popup-form.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [])
            ],
            TaskReportPopupFormComponent
          );
          return TaskReportPopupFormComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.component.html':
      /*!****************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.component.html ***!
  \****************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div *ngIf="!isCreateOpenMode && componentData && componentData.objectId" class="page-subtitle">\r\n          - {{ headerValue }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-actions">\r\n    <button\r\n      id="actions"\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show all actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n    <mat-menu #actions="matMenu">\r\n      <button id="refresh" mat-menu-item (click)="reload()">{{ "global.refresh" | translate }}</button>\r\n      <button id="favorites" mat-menu-item (click)="updateFavoriteState()">\r\n        {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <div class="grid-row">\r\n        <div #measureAnchor class="grid-cell--12" (click)="setSelectedAnchor(\'measureAnchor\')">\r\n          <div class="grid-cell grid-cell--container" [ngClass]="{ active: isSelectedAnchor(\'measureAnchor\') }">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 class="grid-cell-title">\r\n                  <span\r\n                    >{{ componentData.componentId + ".measureEvolution" | translate }} ({{\r\n                      measureEvolutionTable ? measureEvolutionTable.length : 0\r\n                    }})</span\r\n                  >\r\n                  <span\r\n                    *ngIf="measureLoading && !isCreateOpenMode"\r\n                    class="lds-hourglass"\r\n                    style="position: absolute"\r\n                  ></span>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <div class="grid-cell--12">\r\n                <div class="grid-cell-chart">\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container loading-indicator"></div>\r\n                    <div class="row">\r\n                      <div class="form-group flex--1">\r\n                        <label class="form-label"> {{ measureCounterCode }} </label>\r\n\r\n                        <div class="form-control">\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [(ngModel)]="code"\r\n                            [disabled]="isReadOpenMode || !isCreateOpenMode"\r\n                            style="color: #D3C632;"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group flex--3"></div>\r\n                      <div class="form-group flex--1">\r\n                        <label class="form-label">{{ componentData.componentId + ".from" | translate }}</label>\r\n\r\n                        <div class="form-control">\r\n                          <p-calendar\r\n                            showButtonBar="true"\r\n                            [monthNavigator]="true"\r\n                            [yearNavigator]="true"\r\n                            [yearRange]="sessionService.calendarYearRange"\r\n                            class="aw-calendar"\r\n                            [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                            [locale]="sessionService.calendarFormat"\r\n                            [(ngModel)]="startDate"\r\n                            (onSelect)="setChartData(true, false)"\r\n                            (onInput)="setChartData(true, false)"\r\n                          ></p-calendar>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group flex--1">\r\n                        <label class="form-label">{{ componentData.componentId + ".to" | translate }}</label>\r\n\r\n                        <div class="form-control">\r\n                          <p-calendar\r\n                            showButtonBar="true"\r\n                            [monthNavigator]="true"\r\n                            [yearNavigator]="true"\r\n                            [yearRange]="sessionService.calendarYearRange"\r\n                            class="aw-calendar"\r\n                            [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                            [locale]="sessionService.calendarFormat"\r\n                            [(ngModel)]="endDate"\r\n                            (onSelect)="setChartData(false, true)"\r\n                            (onInput)="setChartData(false, true)"\r\n                          ></p-calendar>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class="grid-cell-content">\r\n                    <div class="row flex-row--justify-center">\r\n                      <div *ngIf="chartContentReady" class="chart-container flex--1">\r\n                        <div class="chart-wrapper flex--1">\r\n                          <p-chart\r\n                            type="line"\r\n                            [data]="measureVariationData"\r\n                            [options]="measureChartOptions"\r\n                            width="100%"\r\n                            height="100%"\r\n                          ></p-chart>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class="grid-cell-content">\r\n                <div class="table-wrapper">\r\n                  <p-table\r\n                    [resizableColumns]="true"\r\n                    #ptableMeasureEvolution\r\n                    class="aw-table2"\r\n                    [columns]="measureEvolutionTableCols1"\r\n                    [value]="measureEvolutionTable"\r\n                    [(selection)]="selectedMeasures"\r\n                    dataKey="measureId"\r\n                    [scrollable]="true"\r\n                  >\r\n                    <ng-template pTemplate="emptymessage">\r\n                      <span *ngIf="!isMeasureLoading"> &nbsp;</span>\r\n\r\n                      <div *ngIf="isMeasureLoading" class="aw-table-loading-indicator">\r\n                        <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                        <div class="lds-hourglass"></div>\r\n                      </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="caption">\r\n                      <div class="aw-table-header" [ngClass]="{ \'rows-selected\': selectedMeasures.length > 0 }">\r\n                        <div class="aw-table-global-filter">\r\n                          <label class="aw-table-global-filter-label">\r\n                            <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                          </label>\r\n\r\n                          <input\r\n                            #ptableMeasureEvolutionGlobalFilter\r\n                            class="aw-table-global-filter-input"\r\n                            type="text"\r\n                            placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                            (input)="ptableMeasureEvolution.filterGlobal($event.target.value, \'contains\')"\r\n                          />\r\n                        </div>\r\n                        <div class="aw-table-actions">\r\n                          <button\r\n                            *ngIf="showButtonCorrectMeasure(selectedMeasures[0])"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="onClickCorrect()"\r\n                          >\r\n                            {{ componentData.componentId + ".correct" | translate }}\r\n                          </button>\r\n                          <button\r\n                            *ngIf="showButtonCancelMeasure(selectedMeasures[0])"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="onClickCancel()"\r\n                          >\r\n                            {{ componentData.componentId + ".cancel" | translate }}\r\n                          </button>\r\n                          <button\r\n                            *ngIf="showButtonPropagateMeasure(selectedMeasures[0])"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="onClickPropogate()"\r\n                          >\r\n                            {{ componentData.componentId + ".propogate" | translate }}\r\n                          </button>\r\n                          <button\r\n                            *ngIf="selectedMeasures.length === 0"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="exportMeasureTable()"\r\n                          >\r\n                            {{ "global.export" | translate }}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="colgroup" let-columns>\r\n                      <colgroup>\r\n                        <col class="aw-table-checkbox-wrapper" />\r\n                        <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                        <col class="row-expand-wrapper" />\r\n                      </colgroup>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="header" let-columns>\r\n                      <tr>\r\n                        <th class="aw-table-checkbox-wrapper">\r\n                          <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                        </th>\r\n\r\n                        <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                          {{ componentData.componentId + "." + col.field | translate }}\r\n                        </th>\r\n                        <th class="row-expand-wrapper"></th>\r\n                      </tr>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                      <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                        <td class="aw-table-checkbox-wrapper">\r\n                          <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n                        </td>\r\n\r\n                        <td\r\n                          *ngFor="let col of columns"\r\n                          [ngSwitch]="col.field"\r\n                          [ngStyle]="{ \'text-align\': col.alignment }"\r\n                        >\r\n                          <span *ngSwitchCase="\'isDiff\'">\r\n                            <span *ngIf="rowData[col.field] !== null && rowData[col.field] === true">\r\n                              <i class="fa fa-fw fa-check" aria-hidden="true"></i>\r\n                            </span>\r\n                          </span>\r\n                          <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\r\n                        </td>\r\n                        <td class="row-expand-wrapper" [pRowToggler]="rowData">\r\n                          <i\r\n                            class="fa fa-fw aw-icon aw-icon-with-border"\r\n                            [ngClass]="rowData._expand ? \'fa-minus\' : \'fa-plus\'"\r\n                            aria-hidden="true"\r\n                            pTooltip="{{ \'global.showTableRowDetails\' | translate }}"\r\n                            tooltipPosition="top"\r\n                            (click)="toggleRowDetailsVisibilityVisit(rowData)"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="rowexpansion" let-rowData let-columns="columns">\r\n                      <tr class="row-expanded" *ngIf="rowData._expand">\r\n                        <td [attr.colspan]="columns.length + component.COLSPAN_CONSTANT_VALUE">\r\n                          <div class="row">\r\n                            <div class="form-group">\r\n                              <label class="form-label">\r\n                                {{ getComponentName() + ".source" | translate }}\r\n                              </label>\r\n                              <div class="form-control">\r\n                                <input class="aw-input" type="text" [(ngModel)]="rowData.source" [disabled]="true" />\r\n                              </div>\r\n                            </div>\r\n                            <div class="form-group">\r\n                              <label class="form-label">\r\n                                {{ getComponentName() + ".status" | translate }}\r\n                              </label>\r\n\r\n                              <div class="form-control">\r\n                                <input class="aw-input" type="text" [(ngModel)]="rowData.status" [disabled]="true" />\r\n                              </div>\r\n                            </div>\r\n                            <div class="form-group">\r\n                              <label class="form-label">\r\n                                {{ getComponentName() + ".statusDate" | translate }}\r\n                              </label>\r\n                              <div class="form-control">\r\n                                <p-calendar\r\n                                  class="aw-calendar"\r\n                                  [monthNavigator]="true"\r\n                                  [yearNavigator]="true"\r\n                                  [yearRange]="sessionService.calendarYearRange"\r\n                                  [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                                  [locale]="sessionService.calendarFormat"\r\n                                  [(ngModel)]="rowData.statusDate"\r\n                                  [disabled]="true"\r\n                                ></p-calendar>\r\n                              </div>\r\n                            </div>\r\n                            <div class="form-group">\r\n                              <label class="form-label">\r\n                                {{ getComponentName() + ".statusUser" | translate }}\r\n                              </label>\r\n\r\n                              <div class="form-control">\r\n                                <input\r\n                                  class="aw-input"\r\n                                  type="text"\r\n                                  [(ngModel)]="rowData.statusUser"\r\n                                  [disabled]="true"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div class="form-group">\r\n                              <label class="form-label">\r\n                                {{ getComponentName() + ".statusState" | translate }}\r\n                              </label>\r\n\r\n                              <div class="form-control">\r\n                                <input\r\n                                  class="aw-input"\r\n                                  type="text"\r\n                                  [(ngModel)]="rowData.statusState"\r\n                                  [disabled]="true"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </p-table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="grid-row">\r\n        <div #structureAnchor class="grid-cell--12" (click)="setSelectedAnchor(\'structureAnchor\')">\r\n          <div class="grid-cell grid-cell--container" [ngClass]="{ active: isSelectedAnchor(\'structureAnchor\') }">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 class="grid-cell-title">\r\n                  {{ componentData.componentId + ".structureDetails" | translate }} ({{\r\n                    structureDetailsTable ? structureDetailsTable.length : 0\r\n                  }})\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <div class="table-wrapper">\r\n                <p-table\r\n                  [resizableColumns]="true"\r\n                  #ptableStructureDetails\r\n                  class="aw-table2"\r\n                  [columns]="structureDetailsTableCols1"\r\n                  [value]="structureDetailsTable"\r\n                  [scrollable]="true"\r\n                  dataKey="equipmentRepresentation"\r\n                >\r\n                  <ng-template pTemplate="emptymessage">\r\n                    <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n                    <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                      <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                      <div class="lds-hourglass"></div>\r\n                    </div>\r\n                  </ng-template>\r\n\r\n                  <ng-template pTemplate="caption">\r\n                    <div class="aw-table-header">\r\n                      <div class="aw-table-global-filter">\r\n                        <label class="aw-table-global-filter-label">\r\n                          <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                        </label>\r\n\r\n                        <input\r\n                          #ptableStructureDetailsGlobalFilter\r\n                          class="aw-table-global-filter-input"\r\n                          type="text"\r\n                          placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                          (input)="ptableStructureDetails.filterGlobal($event.target.value, \'contains\')"\r\n                        />\r\n                      </div>\r\n                      <div class="aw-table-actions">\r\n                        <button type="button" mat-raised-button (click)="exportStructureTable()">\r\n                          {{ "global.export" | translate }}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n\r\n                  <ng-template pTemplate="colgroup" let-columns>\r\n                    <colgroup>\r\n                      <col class="aw-table-checkbox-wrapper" />\r\n                      <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                      <col class="row-expand-wrapper" />\r\n                    </colgroup>\r\n                  </ng-template>\r\n                  <ng-template pTemplate="header" let-columns>\r\n                    <tr>\r\n                      <th></th>\r\n\r\n                      <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                        {{ componentData.componentId + "." + col.field | translate }}\r\n                      </th>\r\n                      <th class="row-expand-wrapper"></th>\r\n                    </tr>\r\n                  </ng-template>\r\n\r\n                  <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                    <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                      <td></td>\r\n\r\n                      <td\r\n                        *ngFor="let col of columns"\r\n                        [ngSwitch]="col.field"\r\n                        [ngStyle]="{ \'text-align\': col.alignment }"\r\n                        [ngClass]="{\r\n                          \'value-none\':\r\n                            col.field === \'formattedRemainingValue\' && rowData.alertIcon === \'ICON_NONE_LIGHT\',\r\n                          \'value-red\':\r\n                            col.field === \'formattedRemainingValue\' && rowData.alertIcon === \'ICON_RED_LIGHT\',\r\n                          \'value-green\':\r\n                            col.field === \'formattedRemainingValue\' && rowData.alertIcon === \'ICON_GREEN_LIGHT\',\r\n                          \'value-yellow\':\r\n                            col.field === \'formattedRemainingValue\' && rowData.alertIcon === \'ICON_YELLOW_LIGHT\'\r\n                        }"\r\n                      >\r\n                        <span *ngSwitchCase="\'formattedRemainingValue\'"\r\n                          ><span *ngIf="showTooltip === true" title="{{ tooltip }}">{{ rowData[col.field] }}</span>\r\n                        </span>\r\n                        <a *ngSwitchCase="\'equipmentRepresentation\'" (click)="openEquipmentForm(rowData)">\r\n                          {{ rowData[col.field] }}\r\n                        </a>\r\n                        <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\r\n                      </td>\r\n                      <td class="row-expand-wrapper" [pRowToggler]="rowData">\r\n                        <i\r\n                          class="fa fa-fw aw-icon aw-icon-with-border"\r\n                          [ngClass]="rowData._expand ? \'fa-minus\' : \'fa-plus\'"\r\n                          aria-hidden="true"\r\n                          pTooltip="{{ \'global.showTableRowDetails\' | translate }}"\r\n                          tooltipPosition="top"\r\n                          (click)="toggleRowDetailsVisibilityVisit(rowData)"\r\n                        ></i>\r\n                      </td>\r\n                    </tr>\r\n                  </ng-template>\r\n                  <ng-template pTemplate="rowexpansion" let-rowData let-columns="columns">\r\n                    <tr class="row-expanded" *ngIf="rowData._expand">\r\n                      <td [attr.colspan]="columns.length + component.COLSPAN_CONSTANT_VALUE">\r\n                        <div class="row">\r\n                          <div class="form-group">\r\n                            <label class="form-label">\r\n                              {{ getComponentName() + ".source" | translate }}\r\n                            </label>\r\n                            <div class="form-control">\r\n                              <input class="aw-input" type="text" [(ngModel)]="rowData.source" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                          <div class="form-group">\r\n                            <label class="form-label">\r\n                              {{ getComponentName() + ".status" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input class="aw-input" type="text" [(ngModel)]="rowData.status" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                          <div class="form-group">\r\n                            <label class="form-label">\r\n                              {{ getComponentName() + ".statusDate" | translate }}\r\n                            </label>\r\n                            <div class="form-control">\r\n                              <input class="aw-input" type="text" [(ngModel)]="rowData.statusDate" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                          <div class="form-group">\r\n                            <label class="form-label">\r\n                              {{ getComponentName() + ".statusUser" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input class="aw-input" type="text" [(ngModel)]="rowData.statusUser" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                          <div class="form-group">\r\n                            <label class="form-label">\r\n                              {{ getComponentName() + ".statusState" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input class="aw-input" type="text" [(ngModel)]="rowData.statusState" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </ng-template>\r\n                </p-table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<aw-value-form-popup\r\n  *ngIf="showValueForm"\r\n  [(display)]="showValueForm"\r\n  [isReadOnlyForm]="isReadOnlyValueDialog"\r\n  (onAdded)="onAddOperation($event)"\r\n  [measureDetail]="editSelectedMeasure"\r\n>\r\n</aw-value-form-popup>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.component.scss':
      /*!****************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.component.scss ***!
  \****************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '.display--flex-column {\n  display: flex !important;\n  flex-direction: column !important; }\n\n.display--flex-row {\n  display: flex !important;\n  flex-direction: row !important; }\n\n.display--none {\n  display: none !important; }\n\n.height--100 {\n  height: 100%; }\n\n.min-width--fit-content {\n  min-width: -webkit-fit-content !important;\n  min-width: -moz-fit-content !important;\n  min-width: fit-content !important; }\n\n.position--relative {\n  position: relative !important; }\n\n.scroll-y--none {\n  overflow-y: hidden !important; }\n\n.text--unselectable {\n  -webkit-user-select: none !important;\n     -moz-user-select: none !important;\n      -ms-user-select: none !important;\n          user-select: none !important; }\n\n.visibility--hidden {\n  visibility: hidden !important; }\n\n.width--10 {\n  width: 10%; }\n\n.width--20 {\n  width: 20%; }\n\n.width--30 {\n  width: 30%; }\n\n.width--40 {\n  width: 50%; }\n\n.width--50 {\n  width: 50%; }\n\n.width--60 {\n  width: 60%; }\n\n.width--70 {\n  width: 70%; }\n\n.width--80 {\n  width: 80%; }\n\n.width--90 {\n  width: 90%; }\n\n.width--100 {\n  width: 100%; }\n\n.flex--1 {\n  flex: 1 !important; }\n\n.flex--2 {\n  flex: 2 !important; }\n\n.flex--3 {\n  flex: 3 !important; }\n\n.flex--4 {\n  flex: 4 !important; }\n\n.flex--5 {\n  flex: 5 !important; }\n\n.flex--auto {\n  flex: auto !important; }\n\n.flex-row--align-center {\n  align-items: center !important; }\n\n.flex-row--align-end {\n  align-items: flex-end !important; }\n\n.flex-row--align-start {\n  align-items: flex-start !important; }\n\n.flex-row--justify-center {\n  justify-content: center !important; }\n\n.flex-row--justify-end {\n  justify-content: flex-end !important; }\n\n.flex-row--justify-start {\n  justify-content: flex-start !important; }\n\n:host .value-none {\n  background-color: #fff !important; }\n\n:host .value-red {\n  background-color: #a82525 !important; }\n\n:host .value-yellow {\n  background-color: #efefb0 !important; }\n\n:host .value-green {\n  background-color: #4caf50 !important; }\n\n:host .grid-cell-chart .chart-container {\n  display: flex;\n  flex-direction: row; }\n\n@media screen and (max-width: 1280px) {\n    :host .grid-cell-chart .chart-container {\n      flex-direction: column; } }\n\n:host .grid-cell-chart .chart-container .chart-legend {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-left: 8px; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-legend-label {\n      display: flex;\n      flex-direction: row;\n      align-items: center; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-legend-label .chart-legend-label-color {\n        height: 0.75rem;\n        margin-right: 8px;\n        width: 2rem; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-legend-label .chart-legend-label-color.quantity {\n          background-color: #0d3fc2; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-legend-label .chart-legend-label-color.amount {\n          background-color: #d3c632; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-legend-label .chart-legend-label-color.not-airworthy {\n          background-color: #f6685e; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-value {\n      font-weight: 700;\n      margin-left: 8px; }\n\n:host .grid-cell-chart .chart-container .chart-wrapper {\n    position: relative;\n    height: 18rem;\n    width: 100%; }\n\n/*# sourceMappingURL=data:application/json;base64, */';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.component.ts':
      /*!**************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.component.ts ***!
  \**************************************************************************************************/
      /*! exports provided: AssetMeasureLogFormComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'AssetMeasureLogFormComponent',
          function() {
            return AssetMeasureLogFormComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var _shared_constants_app_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../shared/constants/app-constants */ './src/app/shared/constants/app-constants.ts'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_constants_dassaut_bido_measure_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../shared/constants/dassaut/bido-measure-constants */ './src/app/shared/constants/dassaut/bido-measure-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../shared/services/confirmation.service */ './src/app/shared/services/confirmation.service.ts'
        );
        /* harmony import */ var _shared_services_date_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../../shared/services/date.service */ './src/app/shared/services/date.service.ts'
        );
        /* harmony import */ var _shared_services_export_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../../shared/services/export.service */ './src/app/shared/services/export.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_input_validation_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../../shared/services/input-validation.service */ './src/app/shared/services/input-validation.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../../shared/types/form-page-component */ './src/app/shared/types/form-page-component.ts'
        );
        /* harmony import */ var _asset_measure_log_form_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ./asset-measure-log-form.service */ './src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __assign =
          (undefined && undefined.__assign) ||
          function() {
            __assign =
              Object.assign ||
              function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                  s = arguments[i];
                  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
              };
            return __assign.apply(this, arguments);
          };
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var AssetMeasureLogFormComponent = /** @class */ (function(_super) {
          __extends(AssetMeasureLogFormComponent, _super);
          function AssetMeasureLogFormComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService,
            inputValidationService,
            translateService,
            assetMeasureLogFormService,
            dateService,
            exportService,
            confirmationService,
            sessionService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_5__['ComponentOpenMode'].Read,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService
              ) || this;
            _this.inputValidationService = inputValidationService;
            _this.translateService = translateService;
            _this.assetMeasureLogFormService = assetMeasureLogFormService;
            _this.dateService = dateService;
            _this.exportService = exportService;
            _this.confirmationService = confirmationService;
            _this.sessionService = sessionService;
            _this.component = AssetMeasureLogFormComponent_1;
            _this.setTableCols();
            _this.init();
            _this.initChart();
            _this.getTooltipTranslation();
            _this.selectedAnchor = undefined;
            _this.measureCounterCode = '';
            return _this;
          }
          AssetMeasureLogFormComponent_1 = AssetMeasureLogFormComponent;
          AssetMeasureLogFormComponent.prototype.getComponentName = function() {
            return _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_3__['ComponentConstants']
              .FLE_ASSET_MEASURE_LOG_FORM;
          };
          AssetMeasureLogFormComponent.prototype.ngOnInit = function() {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            if (this.componentData) {
              this.updateOpenMode(this.componentData.openMode);
              var objectId = this.componentData.objectId
                ? this.serializationService.deserialize(this.componentData.objectId)
                : {};
              if (objectId.bidoEquipmentCounterDto && objectId.bidoEquipmentCounterDto.counterCode) {
                this.headerValue = objectId.bidoEquipmentCounterDto.counterCode;
                this.measureCounterCode = this.headerValue;
              }
              if (objectId.bidoEquipmentCounterDto && objectId.bidoEquipmentCounterDto.equipmentCode) {
                this.assetMeasureLogFormService
                  .getEquipmentName({ equipmentCode: objectId.bidoEquipmentCounterDto.equipmentCode })
                  .subscribe(function(res) {
                    _this.headerValue = _this.headerValue + (' | ' + res);
                  });
              }
              var contextMode = this.isCreateOpenMode
                ? 'tab.createMode'
                : !!this.componentData.objectId && this.headerValue;
              if (!!contextMode) {
                this.displayComponentContext(contextMode, this.isCreateOpenMode);
              }
              this.loadMeasureTableData();
              this.loadStructureDetailTableData();
            }
            this.toc = [
              {
                id: 'measureAnchor',
                anchor: this.measureAnchor,
                label: 'Measure Evolution'
              },
              {
                id: 'structureAnchor',
                anchor: this.structureAnchor,
                label: 'Structure Detail'
              }
            ];
          };
          AssetMeasureLogFormComponent.prototype.init = function() {
            this.propertyStatus = [];
            this.propertyOperationalStatus = [];
            this.propertyFunction = [];
            this.familyVariant = undefined;
            this.measureEvolutionTable = [];
            this.structureDetailsTable = [];
            this.selectedMeasures = [];
            this.displayMeasureEvolutionFullScreen = false;
            this.displayStructureDetailsFullScreen = false;
            this.showTooltip = false;
            this.counterRemaningTooltipText = '';
            this.tooltip = '';
            this.showValueForm = false;
            this.isReadOnlyValueDialog = true;
            this.chartContentReady = true;
            this.code = '';
          };
          AssetMeasureLogFormComponent.prototype.isSelectedAnchor = function(anchorId) {
            return anchorId === this.selectedAnchor;
          };
          AssetMeasureLogFormComponent.prototype.setSelectedAnchor = function(anchorId) {
            this.selectedAnchor = anchorId;
          };
          AssetMeasureLogFormComponent.prototype.setTableCols = function() {
            this.reportTableCols = [
              { field: 'reportName', alignment: 'left' },
              { field: 'statusUser', alignment: 'left' },
              { field: 'statusDate', alignment: 'left' }
            ];
            this.structureDetailsTableCols1 = [
              { field: 'equipmentRepresentation', alignment: 'left' },
              { field: 'counterCode', alignment: 'left' },
              { field: 'value', alignment: 'left' },
              { field: 'unitCode', alignment: 'left' },
              { field: 'formattedRemainingValue', alignment: 'left' },
              { field: 'limit', alignment: 'left' },
              { field: 'readingDate', alignment: 'left' }
            ];
            this.measureEvolutionTableCols1 = [
              { field: 'counterCode', alignment: 'left', width: '8rem' },
              { field: 'cumulatedCounterValue', alignment: 'left', width: '8rem' },
              { field: 'isDiff', alignment: 'left', width: '5rem' },
              { field: 'delta', alignment: 'left', width: '8rem' },
              { field: 'unitCode', alignment: 'left', width: '5rem' },
              { field: 'readingDate', alignment: 'left', width: '10rem' },
              { field: 'measureDescription', alignment: 'left' },
              { field: 'coefficient', alignment: 'left', width: '5rem' }
            ];
          };
          AssetMeasureLogFormComponent.prototype.closeMeasureEvolutionDialog = function() {
            this.displayMeasureEvolutionFullScreen = false;
          };
          AssetMeasureLogFormComponent.prototype.closeStructureDetailsDialog = function() {
            this.displayStructureDetailsFullScreen = false;
          };
          AssetMeasureLogFormComponent.prototype.loadMeasureTableData = function() {
            var _this = this;
            if (!!this.componentData.objectId) {
              this.measureLoading = true;
              var measureCounter_1 = this.serializationService.deserialize(this.componentData.objectId);
              var bidoEquipmentCounterDTOId = {
                equipmentCode: measureCounter_1.bidoEquipmentCounterDto.equipmentCode,
                counterCode: measureCounter_1.bidoEquipmentCounterDto.counterCode,
                ratingCode: measureCounter_1.bidoEquipmentCounterDto.ratingCode
                  ? measureCounter_1.bidoEquipmentCounterDto.ratingCode
                  : '_',
                familyCode: measureCounter_1.bidoEquipmentCounterDto.familyCode
              };
              if (!!bidoEquipmentCounterDTOId) {
                this.assetMeasureLogFormService.getMeasureDetailTableData(bidoEquipmentCounterDTOId).subscribe(
                  function(result) {
                    if (result !== null && result !== undefined) {
                      _this.initDateValues(result);
                      _this.measureEvolutionTable = [];
                      _this.measureEvolutionTable = result.map(function(measure) {
                        var measureFRow = {
                          counterCode: measure.counterCode,
                          readingDate: _this.dateService.dateWithHourToString(measure.readingDate),
                          readingDateDate: measure.readingDate,
                          source: measure.source,
                          unitCode: measureCounter_1.counterUnit,
                          isDiff: measure.isDiff,
                          cumulatedCounterValue: measure.cumulatedCounterValue,
                          delta: measure.delta,
                          status: measure.status,
                          coefficient: measure.coefficient ? measure.coefficient.toString() : '',
                          measureDescription: measure.measureDescription,
                          statusState: measure.statusState,
                          statusUser: measure.statusUser,
                          correctMeasureEnable: measure.correctMeasureEnable,
                          propagateMeasureEnabled: measure.propagateMeasureEnabled,
                          cancelMeasureEnabled: measure.cancelMeasureEnabled,
                          equipmentRepresentation: measure.equipmentRepresentation,
                          measureId: measure.measureId,
                          equipmentCode: measure.equipmentCode,
                          familyCode: measure.familyCode,
                          ratingCode: measure.ratingCode,
                          ratingText: measure.ratingText,
                          counterUnit: measure.counterUnit,
                          value: measure.value,
                          bidMeasureId: measure.bidMeasureId,
                          statusDate: _this.dateService.dateWithHourToString(measure.statusDate),
                          valueInterRating: measure.valueInterRating
                        };
                        return measureFRow;
                      });
                      _this.measureVariationData.datasets[0].data = [];
                      _this.measureVariationData.labels = [];
                      _this.setChartData();
                      _this.measureLoading = false;
                    } else {
                      _this.measureLoading = false;
                      _super.prototype.throwUnboundLocalError.call(_this, 'loadMeasureTableData', 'result');
                    }
                  },
                  function() {
                    _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnLoadMeasureEvolutionData'));
                  }
                );
              }
            }
          };
          AssetMeasureLogFormComponent.prototype.loadStructureDetailTableData = function() {
            var _this = this;
            if (!!this.componentData.objectId) {
              var measureCounter = this.serializationService.deserialize(this.componentData.objectId);
              var bidoEquipmentCounterDTOId = {
                equipmentCode: measureCounter.bidoEquipmentCounterDto.equipmentCode,
                counterCode: measureCounter.bidoEquipmentCounterDto.counterCode,
                ratingCode: measureCounter.bidoEquipmentCounterDto.ratingCode
                  ? measureCounter.bidoEquipmentCounterDto.ratingCode
                  : '_',
                familyCode: measureCounter.bidoEquipmentCounterDto.familyCode
              };
              if (!!bidoEquipmentCounterDTOId) {
                this.isLoading = true;
                this.assetMeasureLogFormService.getStructureDetailTableData(bidoEquipmentCounterDTOId).subscribe(
                  function(result) {
                    if (result !== null && result !== undefined) {
                      _this.structureDetailsTable = [];
                      _this.structureDetailsTable = result.map(function(structure) {
                        var structureFRow = {
                          equipmentRepresentation: structure.equipmentRepresentation,
                          counterCode: structure.counterCode,
                          value: structure.value,
                          unitCode: structure.unitCode,
                          formattedRemainingValue: structure.formattedRemainingValue,
                          limit: structure.limit,
                          readingDate: _this.dateService.dateWithHourToString(structure.readingDate),
                          source: structure.source,
                          status: structure.status,
                          statusDate: structure.statusDate,
                          statusUser: structure.statusUser,
                          statusState: structure.statusState,
                          alertIcon: structure.alertIcon,
                          alertTooltipCode: structure.alertTooltipCode,
                          alertTooltipPercent: structure.alertTooltipPercent
                        };
                        if (!!structure.alertTooltipCode && !!structure.alertTooltipPercent) {
                          _this.showTooltip = true;
                          _this.tooltip = _this.counterRemaningTooltipText + ' : ' + structure.alertTooltipPercent;
                        }
                        return structureFRow;
                      });
                      _this.isLoading = false;
                    } else {
                      _this.isLoading = false;
                      _super.prototype.throwUnboundLocalError.call(_this, 'loadStructureDetailTableData', 'result');
                    }
                  },
                  function() {
                    _this.isLoading = false;
                    _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnLoadSructureDetailData'));
                  }
                );
              }
            }
          };
          AssetMeasureLogFormComponent.prototype.getTooltipTranslation = function() {
            var _this = this;
            var tooltip = this.getComponentName() + '.counterRemaining';
            this.translateService.get([tooltip]).subscribe(function(results) {
              _this.counterRemaningTooltipText = results[tooltip];
            });
          };
          AssetMeasureLogFormComponent.prototype.exportMeasureTable = function() {
            var _this = this;
            if (!!this.componentData.objectId) {
              var measureExportData = this.measureEvolutionTable.map(function(measure) {
                if (!!measure) {
                  var measuresRowExport = {
                    counterCode: measure.counterCode,
                    readingDate: measure.readingDate,
                    source: measure.source,
                    unitCode: measure.unitCode,
                    isDiff: measure.isDiff,
                    cumulatedCounterValue: measure.cumulatedCounterValue,
                    delta: measure.delta,
                    status: measure.status,
                    coefficient: measure.coefficient,
                    measureDescription: measure.measureDescription,
                    statusState: measure.statusState,
                    statusUser: measure.statusUser,
                    statusDate: measure.statusDate
                  };
                  return measuresRowExport;
                } else {
                  _super.prototype.throwUnboundLocalError.call(_this, 'exportMeasureTable', 'measure');
                }
              });
              this.exportService.toExcel(
                measureExportData,
                AssetMeasureLogFormComponent_1.MEASURES_TABLE_EXPORT_NAME,
                this.componentData.componentId
              );
            } else {
              _super.prototype.throwUnboundLocalError.call(this, 'exportMeasureTable', 'this.componentData.objectId');
            }
          };
          AssetMeasureLogFormComponent.prototype.exportStructureTable = function() {
            var _this = this;
            var structureExportData = this.structureDetailsTable.map(function(structure) {
              if (!!structure) {
                var structureRowExport = {
                  equipmentRepresentation: structure.equipmentRepresentation,
                  counterCode: structure.counterCode,
                  value: structure.value,
                  unitCode: structure.unitCode,
                  formattedRemainingValue: structure.formattedRemainingValue,
                  limit: structure.limit,
                  readingDate: structure.readingDate,
                  source: structure.source,
                  status: structure.status,
                  statusDate: structure.statusDate,
                  statusUser: structure.statusUser,
                  statusState: structure.statusState
                };
                return structureRowExport;
              } else {
                _super.prototype.throwUnboundLocalError.call(_this, 'exportStructureTable', 'structure');
              }
            });
            if (!!this.componentData) {
              this.exportService.toExcel(
                structureExportData,
                AssetMeasureLogFormComponent_1.STRUCTURE_TABLE_EXPORT_NAME,
                this.componentData.componentId
              );
            } else {
              _super.prototype.throwUnboundLocalError.call(this, 'exportStructureTable', 'this.componentData');
            }
          };
          AssetMeasureLogFormComponent.prototype.onClickCancel = function() {
            var _this = this;
            if (this.selectedMeasures !== []) {
              var partialMessageKey = 'confirmCancelSelectedMeasure';
              this.confirmationService.confirmDelete({
                messageKey: this.getTranslateKey(partialMessageKey),
                accept: function() {
                  var measureId = {
                    equipmentRepresentation: _this.selectedMeasures[0].equipmentRepresentation,
                    measureId: _this.selectedMeasures[0].measureId,
                    equipmentCode: _this.selectedMeasures[0].equipmentCode,
                    familyCode: _this.selectedMeasures[0].familyCode,
                    ratingCode: _this.selectedMeasures[0].ratingCode,
                    ratingText: _this.selectedMeasures[0].ratingText,
                    counterCode: _this.selectedMeasures[0].counterCode,
                    readingDate: _this.selectedMeasures[0].readingDate
                      ? new Date(_this.selectedMeasures[0].readingDate)
                      : undefined,
                    source: _this.selectedMeasures[0].source,
                    isDiff: _this.selectedMeasures[0].isDiff,
                    counterUnit: _this.selectedMeasures[0].counterUnit,
                    value: _this.selectedMeasures[0].value,
                    cumulatedCounterValue: _this.selectedMeasures[0].cumulatedCounterValue,
                    delta: _this.selectedMeasures[0].delta,
                    // tslint:disable-next-line:radix
                    bidMeasureId: parseInt(_this.selectedMeasures[0].measureId),
                    status: _this.selectedMeasures[0].status,
                    coefficient: _this.selectedMeasures[0].coefficient,
                    measureDescription: _this.selectedMeasures[0].measureDescription,
                    statusState: _this.selectedMeasures[0].statusState,
                    statusUser: _this.selectedMeasures[0].statusUser,
                    statusDate: _this.selectedMeasures[0].statusDate
                      ? new Date(_this.selectedMeasures[0].statusDate)
                      : undefined,
                    valueInterRating: _this.selectedMeasures[0].valueInterRating
                  };
                  _this.assetMeasureLogFormService.cancelSelectedMeasure(measureId).subscribe(
                    function() {
                      _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnCancelMeasure'));
                      _this.selectedMeasures = [];
                      _this.loadMeasureTableData();
                      _this.loadStructureDetailTableData();
                    },
                    function(error) {
                      _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnCancelMeasure'));
                    }
                  );
                }
              });
            }
          };
          AssetMeasureLogFormComponent.prototype.onClickPropogate = function() {
            var _this = this;
            if (this.selectedMeasures !== []) {
              var measureId = {
                equipmentRepresentation: this.selectedMeasures[0].equipmentRepresentation,
                measureId: this.selectedMeasures[0].measureId,
                equipmentCode: this.selectedMeasures[0].equipmentCode,
                familyCode: this.selectedMeasures[0].familyCode,
                ratingCode: this.selectedMeasures[0].ratingCode,
                ratingText: this.selectedMeasures[0].ratingText,
                counterCode: this.selectedMeasures[0].counterCode,
                readingDate: this.selectedMeasures[0].readingDate
                  ? new Date(this.selectedMeasures[0].readingDate)
                  : undefined,
                source: this.selectedMeasures[0].source,
                isDiff: this.selectedMeasures[0].isDiff,
                counterUnit: this.selectedMeasures[0].counterUnit,
                value: this.selectedMeasures[0].value,
                cumulatedCounterValue: this.selectedMeasures[0].cumulatedCounterValue,
                delta: this.selectedMeasures[0].delta,
                // tslint:disable-next-line:radix
                bidMeasureId: parseInt(this.selectedMeasures[0].measureId),
                status: this.selectedMeasures[0].status,
                coefficient: this.selectedMeasures[0].coefficient,
                measureDescription: this.selectedMeasures[0].measureDescription,
                statusState: this.selectedMeasures[0].statusState,
                statusUser: this.selectedMeasures[0].statusUser,
                statusDate: this.selectedMeasures[0].statusDate
                  ? new Date(this.selectedMeasures[0].statusDate)
                  : undefined,
                valueInterRating: this.selectedMeasures[0].valueInterRating
              };
              this.assetMeasureLogFormService.propogateSelectedMeasure(measureId).subscribe(
                function(result) {
                  if (result === 'MSG_SUCCESS_MEASURE_PROPAGATE') {
                    _this.messageService.showSuccessMessage(_this.getTranslateKey('measurePropagated'));
                    _this.selectedMeasures = [];
                    _this.loadMeasureTableData();
                    _this.loadStructureDetailTableData();
                  }
                },
                function(error) {
                  _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnPropagation'));
                }
              );
            }
          };
          AssetMeasureLogFormComponent.prototype.onClickCorrect = function() {
            this.showValueForm = true;
            this.isReadOnlyValueDialog = false;
            this.editSelectedMeasure = JSON.parse(JSON.stringify(this.selectedMeasures[0]));
          };
          AssetMeasureLogFormComponent.prototype.onAddOperation = function(event) {
            var _this = this;
            if (this.selectedMeasures !== []) {
              var measureId = {
                equipmentRepresentation: this.selectedMeasures[0].equipmentRepresentation,
                measureId: this.selectedMeasures[0].measureId,
                equipmentCode: this.selectedMeasures[0].equipmentCode,
                familyCode: this.selectedMeasures[0].familyCode,
                ratingCode: this.selectedMeasures[0].ratingCode,
                ratingText: this.selectedMeasures[0].ratingText,
                counterCode: this.selectedMeasures[0].counterCode,
                readingDate: this.selectedMeasures[0].readingDate
                  ? new Date(this.selectedMeasures[0].readingDate)
                  : undefined,
                source: this.selectedMeasures[0].source,
                isDiff: this.selectedMeasures[0].isDiff,
                counterUnit: this.selectedMeasures[0].counterUnit,
                value: event.value,
                cumulatedCounterValue: event.value,
                delta: this.selectedMeasures[0].delta,
                bidMeasureId: this.selectedMeasures[0].bidMeasureId,
                status: this.selectedMeasures[0].status,
                coefficient: this.selectedMeasures[0].coefficient,
                measureDescription: event.measureDescription
                  ? event.measureDescription
                  : this.selectedMeasures[0].measureDescription,
                statusState: this.selectedMeasures[0].statusState,
                statusUser: this.selectedMeasures[0].statusUser,
                statusDate: this.selectedMeasures[0].statusDate
                  ? new Date(this.selectedMeasures[0].statusDate)
                  : undefined,
                valueInterRating: event.valueInterRating
              };
              this.assetMeasureLogFormService.coorectSelectedMeasure(measureId).subscribe(
                function(result) {
                  if (!!_this.measureEvolutionTable) {
                    if (!!result) {
                      _this.selectedMeasures[0].cumulatedCounterValue = result.value;
                    }
                  } else {
                    _super.prototype.throwUnboundLocalError.call(_this, 'onAddOperation', 'this.measureEvolutionTable');
                  }
                  _this.selectedMeasures = [];
                  _this.loadMeasureTableData();
                  _this.loadStructureDetailTableData();
                  _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnCorrectMeasure'));
                },
                function(error) {
                  _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnCorrect'));
                }
              );
            }
          };
          AssetMeasureLogFormComponent.prototype.initDateValues = function(measure) {
            var _this = this;
            var measures = measure;
            var dateArray = [];
            if (!!measures) {
              measures.forEach(function(st) {
                dateArray.push(_this.dateService.dateWithHourToString(st.readingDate));
              });
            }
            this.startDate = dateArray[0];
            this.endDate = dateArray[0];
            // iterate over array values and update min & max
            dateArray.forEach(function(v) {
              _this.endDate = new Date(v) > new Date(_this.endDate) ? v : _this.endDate;
              _this.startDate = new Date(v) < new Date(_this.startDate) ? v : _this.startDate;
            });
            var codeValue = measure.find(function(res) {
              return _this.dateService.dateWithHourToString(res.readingDate) === _this.endDate;
            });
            if (this.componentData.objectId) {
              var measureCounter = this.serializationService.deserialize(this.componentData.objectId);
              this.code = !!codeValue ? codeValue.cumulatedCounterValue + ' ' + measureCounter.counterUnit : '';
            }
          };
          AssetMeasureLogFormComponent.prototype.setChartData = function(startDate, endDate) {
            var _this = this;
            if (startDate) {
              var startDateValue = this.startDate;
              this.startDate = this.dateService.dateWithHourToString(startDateValue);
              this.measureVariationData.datasets[0].data = [];
              this.measureVariationData.labels = [];
            }
            if (endDate) {
              var endDateValue = this.endDate;
              this.endDate = this.dateService.dateWithHourToString(endDateValue);
              this.measureVariationData.datasets[0].data = [];
              this.measureVariationData.labels = [];
            }
            if (this.measureEvolutionTable.length !== 0) {
              var filterTable = this.measureEvolutionTable.filter(function(res) {
                return res.cumulatedCounterValue !== null && res.cumulatedCounterValue !== undefined;
              });
              filterTable.forEach(function(st) {
                if (
                  !!_this.startDate &&
                  !!_this.endDate &&
                  !!st.readingDate &&
                  st.readingDate >= _this.startDate &&
                  st.readingDate <= _this.endDate
                ) {
                  _this.measureVariationData.labels.push(
                    _this.dateService.dateWithHourToStringWithoutHour(st.readingDateDate)
                  );
                  if (st.cumulatedCounterValue !== null && st.cumulatedCounterValue !== undefined) {
                    _this.measureVariationData.datasets[0].data.push(parseInt(st.cumulatedCounterValue, 10));
                  }
                }
              });
              this.measureVariationData.labels.reverse();
              this.measureVariationData.datasets[0].data.reverse();
            }
            this.measureVariationData = __assign({}, this.measureVariationData);
            this.chartContentReady = true;
          };
          AssetMeasureLogFormComponent.prototype.initChart = function() {
            this.measureVariationData = {
              datasets: [
                {
                  data: [],
                  label: 'Value',
                  borderColor: '#D3C632',
                  backgroundColor: '#D3C632',
                  hoverBackgroundColor: '#D3C632',
                  fill: false
                }
              ],
              labels: []
            };
            this.setMeasureChartOptions();
          };
          AssetMeasureLogFormComponent.prototype.setMeasureChartOptions = function() {
            this.measureChartOptions = {
              scales: {
                yAxes: [
                  {
                    ticks: {
                      beginAtZero: true
                    }
                  }
                ]
              },
              legend: {
                display: false
              },
              tooltips: {
                bodyFontColor:
                  _shared_constants_app_constants__WEBPACK_IMPORTED_MODULE_2__['AppConstants'].COLOR_BACKGROUND_PRIMARY
              }
            };
          };
          AssetMeasureLogFormComponent.prototype.openEquipmentForm = function(objectId) {
            this.openEquipment(
              objectId,
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_5__['ComponentOpenMode'].Read
            );
          };
          AssetMeasureLogFormComponent.prototype.openEquipment = function(objectId, openMode) {
            var labelKey = 'transaction.EquipmentFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'EquipmentFormComponent',
              objectId: objectId,
              openMode: openMode
            };
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          AssetMeasureLogFormComponent.prototype.reload = function() {
            this.loadMeasureTableData();
            this.loadStructureDetailTableData();
          };
          AssetMeasureLogFormComponent.prototype.showButtonCorrectMeasure = function(aMeasure) {
            if (this.selectedMeasures.length > 1 || !aMeasure) {
              return false;
            }
            if (
              this.sessionService.isSpecificDassault &&
              _shared_constants_dassaut_bido_measure_constants__WEBPACK_IMPORTED_MODULE_4__[
                'BidoMeasureConsants'
              ].isFromExternalSources(aMeasure.source)
            ) {
              return false;
            }
            return aMeasure.correctMeasureEnable;
          };
          AssetMeasureLogFormComponent.prototype.showButtonCancelMeasure = function(aMeasure) {
            if (this.selectedMeasures.length > 1 || !aMeasure) {
              return false;
            }
            if (
              this.sessionService.isSpecificDassault &&
              _shared_constants_dassaut_bido_measure_constants__WEBPACK_IMPORTED_MODULE_4__[
                'BidoMeasureConsants'
              ].isFromExternalSources(aMeasure.source)
            ) {
              return false;
            }
            return aMeasure.cancelMeasureEnabled;
          };
          AssetMeasureLogFormComponent.prototype.showButtonPropagateMeasure = function(aMeasure) {
            if (this.selectedMeasures.length > 1 || !aMeasure) {
              return false;
            }
            if (
              this.sessionService.isSpecificDassault &&
              _shared_constants_dassaut_bido_measure_constants__WEBPACK_IMPORTED_MODULE_4__[
                'BidoMeasureConsants'
              ].isFromExternalSources(aMeasure.source)
            ) {
              return false;
            }
            return aMeasure.propagateMeasureEnabled;
          };
          AssetMeasureLogFormComponent.prototype.toggleRowDetailsVisibilityVisit = function(rowData) {
            rowData._expand = !rowData._expand;
          };
          var AssetMeasureLogFormComponent_1;
          AssetMeasureLogFormComponent.MEASURES_TABLE_EXPORT_NAME = 'measure-list';
          AssetMeasureLogFormComponent.STRUCTURE_TABLE_EXPORT_NAME = 'structure-list';
          AssetMeasureLogFormComponent.COLSPAN_CONSTANT_VALUE = 2;
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('measureAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            AssetMeasureLogFormComponent.prototype,
            'measureAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('structureAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            AssetMeasureLogFormComponent.prototype,
            'structureAnchor',
            void 0
          );
          AssetMeasureLogFormComponent = AssetMeasureLogFormComponent_1 = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-asset-measure-log-form',
                template: __webpack_require__(
                  /*! ./asset-measure-log-form.component.html */ './src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./asset-measure-log-form.component.scss */ './src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_9__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_11__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_12__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_13__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_15__['TabService'],
                _shared_services_input_validation_service__WEBPACK_IMPORTED_MODULE_10__['InputValidationService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService'],
                _asset_measure_log_form_service__WEBPACK_IMPORTED_MODULE_17__['AssetMeasureLogFormService'],
                _shared_services_date_service__WEBPACK_IMPORTED_MODULE_7__['DateService'],
                _shared_services_export_service__WEBPACK_IMPORTED_MODULE_8__['ExportService'],
                _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_6__['ConfirmationService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_14__['SessionService']
              ])
            ],
            AssetMeasureLogFormComponent
          );
          return AssetMeasureLogFormComponent;
        })(_shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_16__['FormPageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.service.ts':
      /*!************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.service.ts ***!
  \************************************************************************************************/
      /*! exports provided: AssetMeasureLogFormService */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'AssetMeasureLogFormService',
          function() {
            return AssetMeasureLogFormService;
          }
        );
        /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */ './node_modules/@angular/common/fesm5/http.js'
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../shared/api/fleet-business.api */ './src/app/shared/api/fleet-business.api.ts'
        );
        /* harmony import */ var _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../shared/api/fleet-management.api */ './src/app/shared/api/fleet-management.api.ts'
        );
        /* harmony import */ var _shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../shared/http/abstract-aw-http */ './src/app/shared/http/abstract-aw-http.ts'
        );
        /* harmony import */ var _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../shared/services/app-config.service */ './src/app/shared/services/app-config.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var AssetMeasureLogFormService = /** @class */ (function(_super) {
          __extends(AssetMeasureLogFormService, _super);
          function AssetMeasureLogFormService(http, appConfigService, fleetBusinessApi, fleetManagementApi) {
            var _this = _super.call(this, http, appConfigService) || this;
            _this.fleetBusinessApi = fleetBusinessApi;
            _this.fleetManagementApi = fleetManagementApi;
            return _this;
          }
          AssetMeasureLogFormService.prototype.getStructureDetailTableData = function(bidoEquipmentCounterDTOId) {
            return _super.prototype.post.call(
              this,
              this.fleetBusinessApi.calculatePotentialAlertsByCounterAndRating,
              bidoEquipmentCounterDTOId
            );
          };
          AssetMeasureLogFormService.prototype.getMeasureDetailTableData = function(bidoEquipmentCounterDTOId) {
            return _super.prototype.post.call(
              this,
              this.fleetBusinessApi.findBidoMeasuresByEquipmentAndCounterCodes,
              bidoEquipmentCounterDTOId
            );
          };
          AssetMeasureLogFormService.prototype.cancelSelectedMeasure = function(measureId) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.cancelBidoMeasure, measureId);
          };
          AssetMeasureLogFormService.prototype.propogateSelectedMeasure = function(measureId) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.propagateBidoMeasure, measureId);
          };
          AssetMeasureLogFormService.prototype.coorectSelectedMeasure = function(measureId) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.correctBidoMeasure, measureId);
          };
          AssetMeasureLogFormService.prototype.getEquipmentName = function(bidoEquipmentDTOId) {
            return _super.prototype.post.call(this, this.fleetManagementApi.getEquipmentName, bidoEquipmentDTOId);
          };
          AssetMeasureLogFormService = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])(),
              __metadata('design:paramtypes', [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClient'],
                _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_5__['AppConfigService'],
                _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_2__['FleetBusinessApi'],
                _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_3__['FleetManagementApi']
              ])
            ],
            AssetMeasureLogFormService
          );
          return AssetMeasureLogFormService;
        })(_shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_4__['AbstractAwHttpService']);

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-measure-log/form/popups/value-form-popup/value-form-popup.component.html':
      /*!**********************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-measure-log/form/popups/value-form-popup/value-form-popup.component.html ***!
  \**********************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n      <label class="form-label">{{ getComponentName() + ".value" | translate }}</label>\r\n\r\n      <div class="form-control">\r\n        <input\r\n          #value="ngModel"\r\n          type="text"\r\n          class="aw-input"\r\n          [pKeyFilter]="inputValidationService.validatorOfNumber()"\r\n          [pValidateOnly]="true"\r\n          maxlength="30"\r\n          [(ngModel)]="measureDetail.value"\r\n        />\r\n        <p-message\r\n          *ngIf="value.invalid && (value.dirty || value.touched)"\r\n          severity="error"\r\n          [text]="inputValidationService.formatOfNumber()"\r\n        ></p-message>\r\n      </div>\r\n    </div>\r\n    <div class="form-group">\r\n      <label class="form-label">{{ getComponentName() + ".comment" | translate }}</label>\r\n\r\n      <div class="form-control">\r\n        <input type="text" class="aw-input" maxlength="300" [(ngModel)]="measureDetail.measureDescription" />\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button *ngIf="!isReadOpenMode" type="button" mat-raised-button (click)="cancel()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="!isReadOpenMode"\r\n      type="button"\r\n      mat-raised-button\r\n      color="primary"\r\n      (click)="add()"\r\n      [ngClass]="{ inactive: !enableAssociateButton() }"\r\n      [disabled]="(value.invalid && (value.dirty || value.touched)) || !enableAssociateButton()"\r\n    >\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-measure-log/form/popups/value-form-popup/value-form-popup.component.scss':
      /*!**********************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-measure-log/form/popups/value-form-popup/value-form-popup.component.scss ***!
  \**********************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vZmxlZXQtbWFuYWdlbWVudC9hc3NldC1tZWFzdXJlLWxvZy9mb3JtL3BvcHVwcy92YWx1ZS1mb3JtLXBvcHVwL3ZhbHVlLWZvcm0tcG9wdXAuY29tcG9uZW50LnNjc3MifQ== */';

        /***/
      },

    /***/ './src/app/main/fleet-management/asset-measure-log/form/popups/value-form-popup/value-form-popup.component.ts':
      /*!********************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/asset-measure-log/form/popups/value-form-popup/value-form-popup.component.ts ***!
  \********************************************************************************************************************/
      /*! exports provided: MeasureValueFormPopupComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'MeasureValueFormPopupComponent',
          function() {
            return MeasureValueFormPopupComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_input_validation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../../shared/services/input-validation.service */ './src/app/shared/services/input-validation.service.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var MeasureValueFormPopupComponent = /** @class */ (function(_super) {
          __extends(MeasureValueFormPopupComponent, _super);
          function MeasureValueFormPopupComponent(inputValidationService) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Write,
                'MeasureValueFormPopupComponent'
              ) || this;
            _this.inputValidationService = inputValidationService;
            _this.onAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            return _this;
          }
          MeasureValueFormPopupComponent.prototype.ngOnInit = function() {
            if (!this.measureDetail) {
              this.measureDetail = {};
            }
          };
          MeasureValueFormPopupComponent.prototype.add = function() {
            this.onAdded.emit(this.measureDetail);
            this.display = false;
          };
          MeasureValueFormPopupComponent.prototype.cancel = function() {
            this.display = false;
          };
          MeasureValueFormPopupComponent.prototype.enableAssociateButton = function() {
            if (!!this.measureDetail && !!this.measureDetail.value && this.measureDetail.value.trim().length !== 0) {
              return true;
            } else {
              return false;
            }
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            MeasureValueFormPopupComponent.prototype,
            'measures',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Boolean)],
            MeasureValueFormPopupComponent.prototype,
            'isReadOnlyForm',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            MeasureValueFormPopupComponent.prototype,
            'onAdded',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            MeasureValueFormPopupComponent.prototype,
            'measureDetail',
            void 0
          );
          MeasureValueFormPopupComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-value-form-popup',
                template: __webpack_require__(
                  /*! ./value-form-popup.component.html */ './src/app/main/fleet-management/asset-measure-log/form/popups/value-form-popup/value-form-popup.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./value-form-popup.component.scss */ './src/app/main/fleet-management/asset-measure-log/form/popups/value-form-popup/value-form-popup.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_input_validation_service__WEBPACK_IMPORTED_MODULE_2__['InputValidationService']
              ])
            ],
            MeasureValueFormPopupComponent
          );
          return MeasureValueFormPopupComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_3__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/defect-form/defect-form.component.html':
      /*!************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/defect-form/defect-form.component.html ***!
  \************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div #page *ngIf="loadedWorkflow">\r\n  <div class="page-header">\r\n    <div class="page-info">\r\n      <div>\r\n        <div class="page-title">\r\n          {{ "transaction." + componentData.componentId | translate }}\r\n        </div>\r\n\r\n        <div class="page-subtitle">\r\n          <div *ngIf="!isCreateOpenMode && componentSubtitle" class="page-subtitle">- {{ componentSubtitle }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="object-status" *ngIf="defect.status" (click)="showStatus()">\r\n        {{ defect.status | formatSelectOption: statusList }}\r\n      </div>\r\n    </div>\r\n\r\n    <div class="page-actions">\r\n      <button\r\n        id="edit"\r\n        *ngIf="isReadOpenMode && hasUpdateAccessRight"\r\n        type="button"\r\n        mat-raised-button\r\n        (click)="editDefect()"\r\n      >\r\n        {{ "global.edit" | translate }}\r\n      </button>\r\n\r\n      <button\r\n        id="cancel"\r\n        *ngIf="!isReadOpenMode && !isCreateOpenMode"\r\n        type="button"\r\n        color="warn"\r\n        mat-raised-button\r\n        (click)="cancelDefect()"\r\n      >\r\n        {{ "global.cancel" | translate }}\r\n      </button>\r\n\r\n      <button\r\n        id="save"\r\n        *ngIf="!isReadOpenMode"\r\n        class="btn-with-spinner"\r\n        color="primary"\r\n        type="button"\r\n        mat-raised-button\r\n        (click)="saveDefect()"\r\n      >\r\n        <span class="lds-hourglass" *ngIf="showSaveSpinner"></span>\r\n        {{ "global.save" | translate }}\r\n      </button>\r\n\r\n      <button\r\n        id="actions"\r\n        mat-icon-button\r\n        class="mat-elevation-z1"\r\n        matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n        matTooltipPosition="above"\r\n        aria-label="Show all actions"\r\n        [matMenuTriggerFor]="actions"\r\n      >\r\n        <mat-icon>more_horiz</mat-icon>\r\n      </button>\r\n      <mat-menu #actions="matMenu">\r\n        <button id="report" type="button" mat-menu-item (click)="opWorkPackageToShow.toggle($event)">\r\n          {{ componentData.componentId + ".report" | translate }}\r\n        </button>\r\n        <button id="updates" *ngIf="isReadOpenMode" mat-menu-item (click)="openStatusUpdatesPopup()">\r\n          {{ "updates" | translate }}\r\n        </button>\r\n        <button id="refresh" mat-menu-item (click)="reloadDefect()">{{ "global.refresh" | translate }}</button>\r\n        <button id="favorites" mat-menu-item (click)="updateFavoriteState()">\r\n          {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n        </button>\r\n      </mat-menu>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-wrapper">\r\n    <div class="page-container search-page-container">\r\n      <mat-tab-group animationDuration="0ms" dynamicHeight>\r\n        <mat-tab id="homeTab">\r\n          <ng-template mat-tab-label>\r\n            {{ "home" | translate }}\r\n          </ng-template>\r\n          <div class="grid-row">\r\n            <div id="mainDataPanel" class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">{{ "page.mainData" | translate }}</h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="row">\r\n                    <div id="notificationCode" class="form-group">\r\n                      <label class="form-label"> {{ componentData.componentId + ".code" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <input type="text" class="aw-input" [(ngModel)]="defect.notificationCode" [disabled]="true" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="typeCode" class="form-group">\r\n                      <label class="form-label"> {{ "global.type" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-dropdown\r\n                          class="aw-dropdown fixed-width"\r\n                          [options]="typeList"\r\n                          [(ngModel)]="defect.typeCode"\r\n                          [disabled]="isReadOpenMode || isWriteOpenMode"\r\n                          [showClear]="true"\r\n                          placeholder="&nbsp;"\r\n                        ></p-dropdown>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="notificationAsset" class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n                      <label class="form-label">{{ "global.asset" | translate }}</label>\r\n                      <div class="form-control form-control-with-btn">\r\n                        <input\r\n                          type="text"\r\n                          class="aw-input"\r\n                          [(ngModel)]="notificationAsset"\r\n                          [ngModelOptions]="{ standalone: true }"\r\n                          disabled="true"\r\n                        />\r\n\r\n                        <i\r\n                          class="fa fa-fw fa-external-link aw-icon"\r\n                          aria-hidden="true"\r\n                          tooltipPosition="top"\r\n                          (click)="openLinkAssetEquipment($event)"\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="operatorCode" class="form-group">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".operator" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <input type="text" class="aw-input" [(ngModel)]="defect.operatorCode" [disabled]="true" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="reportingPeriodStartDate" class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n                      <label class="form-label"> {{ "global.eventDate" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-calendar\r\n                          appendTo="body"\r\n                          showButtonBar="true"\r\n                          [monthNavigator]="true"\r\n                          [yearNavigator]="true"\r\n                          [yearRange]="sessionService.calendarYearRange"\r\n                          class="aw-calendar"\r\n                          [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                          [locale]="sessionService.calendarFormat"\r\n                          [showTime]="true"\r\n                          [(ngModel)]="defect.reportingPeriodStartDate"\r\n                          [disabled]="isReadOpenMode"\r\n                        ></p-calendar>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class="row">\r\n                    <div id="defectIsCritical" class="form-group">\r\n                      <label class="form-label">{{ componentData.componentId + ".isCritical" | translate }}</label>\r\n\r\n                      <div class="form-control">\r\n                        <p-checkbox\r\n                          binary="true"\r\n                          class="aw-checkbox"\r\n                          [(ngModel)]="defectIsCritical"\r\n                          [disabled]="isReadOpenMode"\r\n                        ></p-checkbox>\r\n                      </div>\r\n                    </div>\r\n                    <div id="defectAuthor" class="form-group">\r\n                      <label class="form-label">{{ "global.author" | translate }}</label>\r\n\r\n                      <div class="form-control">\r\n                        <input type="text" class="aw-input" [disabled]="true" [(ngModel)]="author" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="defectLastAuthor" class="form-group">\r\n                      <label class="form-label">{{ "global.lastAuthor" | translate }}</label>\r\n\r\n                      <div class="form-control">\r\n                        <input type="text" class="aw-input" disabled="true" [(ngModel)]="lastAuthor" />\r\n                      </div>\r\n                    </div>\r\n                    <div id="filler" class="form-group"></div>\r\n                    <div id="reportingPeriodEndDate" class="form-group">\r\n                      <label class="form-label"> {{ "global.closureDate" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-calendar\r\n                          appendTo="body"\r\n                          showButtonBar="true"\r\n                          [monthNavigator]="true"\r\n                          [yearNavigator]="true"\r\n                          [yearRange]="sessionService.calendarYearRange"\r\n                          class="aw-calendar"\r\n                          [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                          [locale]="sessionService.calendarFormat"\r\n                          [showTime]="true"\r\n                          [(ngModel)]="defect.reportingPeriodEndDate"\r\n                          [disabled]="isReadOpenMode"\r\n                        ></p-calendar>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class="grid-row">\r\n            <div id="rootCausePanel" class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">{{ componentData.componentId + ".rootCause" | translate }}</h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="column">\r\n                    <div class="row">\r\n                      <div id="selectedRootCause" class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".rootCause" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            [options]="rootCauseList"\r\n                            [disabled]="isReadOpenMode || !defectBlockVisibility"\r\n                            [(ngModel)]="selectedRootCause"\r\n                            [showClear]="true"\r\n                            placeholder="&nbsp;"\r\n                            (onChange)="onChangeDefectRootCause($event.value)"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div id="defectAtaCode" *ngIf="displayDefectAtaBlock" class="form-group flex--2">\r\n                        <label class="form-label">{{ "global.ataCode" | translate }}</label>\r\n                        <aw-ata-code-input\r\n                          [userWorkflow]="userWorkflow"\r\n                          [ataCode]="defectAtaCode"\r\n                          (ataCodeChange)="addATACode($event)"\r\n                          [familyVariantCode]="masterFamilyVariantCode"\r\n                        ></aw-ata-code-input>\r\n                      </div>\r\n\r\n                      <!-- <div *ngIf="!displayDefectAtaBlock" class="form-group flex--2"></div> -->\r\n\r\n                      <!-- <div *ngIf="displayDefectAtaBlock" class="form-group flex--1"></div> -->\r\n\r\n                      <div id="defectEquipmentAssetCode" *ngIf="displayDefectEquipmentBlock" class="form-group">\r\n                        <label class="form-label">{{ "global.assetCode" | translate }}</label>\r\n\r\n                        <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n                          <div class="form-control-data" (click)="openDefectEquipmentAssetCode($event)">\r\n                            {{ defectEquipmentAssetCode }}\r\n                          </div>\r\n\r\n                          <div *ngIf="defectEquipmentAssetCode" class="btn-clear-wrapper">\r\n                            <i class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear" aria-hidden="true"></i>\r\n                          </div>\r\n                          <div class="btn-search-wrapper">\r\n                            <i\r\n                              class="fa fa-fw fa-search aw-icon btn-search"\r\n                              aria-hidden="true"\r\n                              (click)="openDefectEquipmentAssetCode($event)"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div id="defectEquipmentPn" *ngIf="displayDefectEquipmentBlock" class="form-group">\r\n                        <label class="form-label">{{ "global.pn" | translate }}</label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" disabled="true" [(ngModel)]="defectEquipmentPn" />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div id="defectEquipmentSn" *ngIf="displayDefectEquipmentBlock" class="form-group">\r\n                        <label class="form-label">{{ "global.sn" | translate }}</label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" disabled="true" [(ngModel)]="defectEquipmentSn" />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div id="defectEquipmentName" *ngIf="displayDefectEquipmentBlock" class="form-group flex--2">\r\n                        <label class="form-label">{{ "global.name" | translate }}</label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" disabled="true" [(ngModel)]="defectEquipmentName" />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div id="rootCauseFlCode" *ngIf="displayDefectFunctionalLocationBlock" class="form-group">\r\n                        <label class="form-label">{{ componentData.componentId + ".flCode" | translate }}</label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            [options]="flCodeList"\r\n                            [(ngModel)]="rootCauseFlCode"\r\n                            [showClear]="true"\r\n                            placeholder="&nbsp;"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div id="rootCausePn" *ngIf="displayDefectPartBlock" class="form-group">\r\n                        <label class="form-label">{{ "global.part" | translate }}</label>\r\n\r\n                        <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n                          <div class="form-control-data" (click)="openDefectPart($event)">{{ rootCausePn }}</div>\r\n\r\n                          <div *ngIf="rootCausePn" class="btn-clear-wrapper">\r\n                            <i class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear" aria-hidden="true"></i>\r\n                          </div>\r\n                          <div class="btn-search-wrapper">\r\n                            <i\r\n                              class="fa fa-fw fa-search aw-icon btn-search"\r\n                              aria-hidden="true"\r\n                              (click)="openDefectPart($event)"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div id="rootCauseQuantity" *ngIf="displayDefectPartBlock" class="form-group">\r\n                        <label class="form-label">{{ "global.quantity" | translate }}</label>\r\n\r\n                        <div class="form-control">\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [(ngModel)]="rootCauseQuantity"\r\n                            [disabled]="isReadOpenMode"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class="grid-row">\r\n            <!-- DEFECT -->\r\n            <div id="defectDetailPanel" class="grid-cell--equally">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">{{ componentData.componentId + ".defectDetail" | translate }}</h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="row flex-row--justify-end action-list">\r\n                    <button\r\n                      id="askForDeferralDefectDetailPanel"\r\n                      *ngIf="defectAskForDeferralVisibility"\r\n                      type="button"\r\n                      mat-raised-button\r\n                      (click)="askForDeferral()"\r\n                    >\r\n                      {{ componentData.componentId + ".askForDeferral" | translate }}\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div id="defectLogNumber" class="form-group">\r\n                          <label class="form-label">{{ "global.logNumber" | translate }}</label>\r\n\r\n                          <div class="form-control ">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="isReadOpenMode || !defectBlockVisibility"\r\n                              [(ngModel)]="defectLogNumber"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div id="notificationSubject" class="form-group">\r\n                          <label class="form-label">{{ "global.title" | translate }}</label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="isReadOpenMode || !defectBlockVisibility"\r\n                              [(ngModel)]="defect.notificationSubject"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div id="rootCauseDefectName" class="form-group">\r\n                          <label class="form-label">{{ "global.name" | translate }}</label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="defectNameList"\r\n                              [(ngModel)]="rootCauseDefectName"\r\n                              [disabled]="isReadOpenMode || !defectBlockVisibility"\r\n                              [showClear]="true"\r\n                              placeholder="&nbsp;"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="row">\r\n                        <div id="rootCauseDefectLocation" class="form-group">\r\n                          <label class="form-label">{{ "global.location" | translate }}</label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="defectLocationList"\r\n                              [(ngModel)]="rootCauseDefectLocation"\r\n                              [disabled]="isReadOpenMode || !defectBlockVisibility"\r\n                              [showClear]="true"\r\n                              placeholder="&nbsp;"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                        <div id="selectedFaultCode" class="form-group">\r\n                          <label class="form-label">{{ componentData.componentId + ".faultCode" | translate }}</label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="faultCodeList"\r\n                              [(ngModel)]="selectedFaultCode"\r\n                              [disabled]="isReadOpenMode || !defectBlockVisibility"\r\n                              placeholder="&nbsp;"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                        <div id="selectedInspectionMean" class="form-group">\r\n                          <label class="form-label">{{\r\n                            componentData.componentId + ".inspectionMean" | translate\r\n                          }}</label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="inspectionMeanList"\r\n                              [(ngModel)]="selectedInspectionMean"\r\n                              [disabled]="isReadOpenMode || !defectBlockVisibility"\r\n                              placeholder="&nbsp;"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="row">\r\n                        <div id="defectSrmReference" class="form-group">\r\n                          <label class="form-label">{{\r\n                            componentData.componentId + ".srmReference" | translate\r\n                          }}</label>\r\n\r\n                          <div\r\n                            class="form-control form-control-with-btn"\r\n                            [ngClass]="{ disabled: isReadOpenMode || !defectBlockVisibility }"\r\n                          >\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="isReadOpenMode || !defectBlockVisibility"\r\n                              [(ngModel)]="defectSrmReference"\r\n                            />\r\n\r\n                            <i\r\n                              *ngIf="showOpenField()"\r\n                              (click)="openField()"\r\n                              class="fa fa-fw fa-external-link aw-icon"\r\n                              aria-hidden="true"\r\n                              pTooltip="{{ componentData.componentId + \'.openFIELD\' | translate }}"\r\n                              tooltipPosition="top"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div id="defectDetectionContext" class="form-group">\r\n                          <label class="form-label">{{ "global.context" | translate }}</label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="isReadOpenMode || !defectBlockVisibility"\r\n                              [(ngModel)]="defectDetectionContext"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div id="isMELAlertObject" *ngIf="isMELAlertVisible" class="form-group">\r\n                          <label class="form-label">{{ componentData.componentId + ".melAlert" | translate }}</label>\r\n                          <div\r\n                            class="form-control form-control-with-modal"\r\n                            style="border: none"\r\n                            [ngClass]="{ disabled: isReadOpenMode }"\r\n                          >\r\n                            <div class="form-control-data" (click)="openFunctionLocationUC()">\r\n                              {{ isMELAlertObject }}\r\n                            </div>\r\n\r\n                            <div class="btn-clear-wrapper">\r\n                              <i\r\n                                class="fa fa-fw fa-external-link aw-icon"\r\n                                aria-hidden="true"\r\n                                (click)="openFunctionLocationUC()"\r\n                                tooltipPosition="top"\r\n                              ></i>\r\n                            </div>\r\n                            <div class="btn-search-wrapper">\r\n                              <i class="fa fa-exclamation-triangle" style="color: #F4C604" aria-hidden="true"></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div *ngIf="!isMELAlertVisible" class="form-group"></div>\r\n                      </div>\r\n                      <div class="row">\r\n                        <div id="rootCauseComment" class="form-group flex--2">\r\n                          <label class="form-label">{{ "global.description" | translate }}</label>\r\n\r\n                          <div class="form-control">\r\n                            <textarea\r\n                              class="aw-textarea"\r\n                              [rows]="3"\r\n                              [(ngModel)]="rootCauseComment"\r\n                              pInputTextarea\r\n                              [disabled]="isReadOpenMode || !defectBlockVisibility"\r\n                            ></textarea>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- CORRECTIVE -->\r\n            <div id="correctiveActionPanel" class="grid-cell--equally">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ "global.correctiveAction" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="row">\r\n                    <div id="defectProposedTask" class="form-group flex--2">\r\n                      <label class="form-label">{{ "global.task" | translate }}</label>\r\n\r\n                      <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n                        <div class="form-control-data" (click)="openCorrectiveActionTask($event)">\r\n                          {{ defectProposedTask }}\r\n                        </div>\r\n\r\n                        <div *ngIf="defectProposedTask" class="btn-clear-wrapper">\r\n                          <i\r\n                            class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                            aria-hidden="true"\r\n                            (click)="defectProposedTask = undefined"\r\n                          ></i>\r\n                          <i class="fa fa-fw fa-external-link aw-icon" aria-hidden="true" (click)="openTaskCode()"></i>\r\n                        </div>\r\n                        <div class="btn-search-wrapper">\r\n                          <i\r\n                            class="fa fa-fw fa-search aw-icon btn-search"\r\n                            aria-hidden="true"\r\n                            (click)="openCorrectiveActionTask($event)"\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="correctiveActionDescription" class="form-group flex--2">\r\n                      <label class="form-label">{{ "global.description" | translate }}</label>\r\n\r\n                      <div class="form-control">\r\n                        <textarea\r\n                          class="aw-textarea"\r\n                          [rows]="3"\r\n                          [(ngModel)]="correctiveActionDescription"\r\n                          pInputTextarea\r\n                          [disabled]="isReadOpenMode"\r\n                        ></textarea>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="section-actions" *ngIf="!isReadOpenMode">\r\n                      <div\r\n                        *ngIf="\r\n                          (defectProposedTask !== undefined &&\r\n                            defectProposedTask !== null &&\r\n                            defectProposedTask.trim().length > 0 &&\r\n                            !defectTargetWorkOrder) ||\r\n                          (defectTargetWorkOrder !== undefined && defectTargetWorkOrder !== null)\r\n                        "\r\n                        class="section-actions"\r\n                        style="margin-top: 2em"\r\n                      >\r\n                        <button\r\n                          id="createWPCorrectiveActionPanel"\r\n                          *ngIf="\r\n                            defectProposedTask !== undefined &&\r\n                            defectProposedTask !== null &&\r\n                            defectProposedTask.trim().length > 0 &&\r\n                            !defectTargetWorkOrder &&\r\n                            !isReadOpenMode\r\n                          "\r\n                          type="button"\r\n                          mat-raised-button\r\n                          (click)="openCorrectiveActionWorkPackage()"\r\n                        >\r\n                          <span>{{ componentData.componentId + ".createWP" | translate }}</span>\r\n                        </button>\r\n\r\n                        <button\r\n                          id="prepareWPCorrectiveActionPanel"\r\n                          *ngIf="defectTargetWorkOrder !== undefined && defectTargetWorkOrder !== null"\r\n                          type="button"\r\n                          mat-raised-button\r\n                          (click)="prepareWorkPackage()"\r\n                        >\r\n                          <span>{{ componentData.componentId + ".prepareWP" | translate }}</span>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="row">\r\n                    <div class="section">\r\n                      <h4 id="correctiveActionComponentTableTitle" class="section-title">\r\n                        {{ "global.components" | translate }}\r\n                        ({{ correctiveActionComponentTable ? correctiveActionComponentTable.length : 0 }})\r\n                      </h4>\r\n\r\n                      <div class="section-content">\r\n                        <p-table\r\n                          id="correctiveActionComponentTable"\r\n                          [resizableColumns]="true"\r\n                          #ptableCorrectiveActionComponents\r\n                          class="aw-table2"\r\n                          [columns]="correctiveActionComponentTableColList"\r\n                          [value]="correctiveActionComponentTable"\r\n                          [(selection)]="selectedCorrectiveActionComponentList"\r\n                          [scrollable]="true"\r\n                        >\r\n                          <ng-template pTemplate="emptymessage">\r\n                            <span *ngIf="!isLoadingCorrectiveActionComponentTable"> &nbsp;</span>\r\n\r\n                            <div *ngIf="isLoadingCorrectiveActionComponentTable" class="aw-table-loading-indicator">\r\n                              <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                              <div class="lds-hourglass"></div>\r\n                            </div>\r\n                          </ng-template>\r\n\r\n                          <ng-template pTemplate="caption">\r\n                            <div\r\n                              class="aw-table-header"\r\n                              [ngClass]="{ \'rows-selected\': selectedCorrectiveActionComponentList.length > 0 }"\r\n                            >\r\n                              <div class="aw-table-global-filter">\r\n                                <label class="aw-table-global-filter-label">\r\n                                  <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                                </label>\r\n\r\n                                <input\r\n                                  #ptableCorrectiveActionComponentsGlobalFilter\r\n                                  class="aw-table-global-filter-input"\r\n                                  type="text"\r\n                                  placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                  (input)="\r\n                                    ptableCorrectiveActionComponents.filterGlobal($event.target.value, \'contains\')\r\n                                  "\r\n                                />\r\n                              </div>\r\n\r\n                              <div class="aw-table-actions">\r\n                                <button\r\n                                  id="deleteCorrectiveActionComponentTable"\r\n                                  *ngIf="!isReadOpenMode && selectedCorrectiveActionComponentList.length > 0"\r\n                                  type="button"\r\n                                  mat-raised-button\r\n                                  (click)="deleteCorrectiveActionComponent()"\r\n                                >\r\n                                  {{ "global.delete" | translate }}\r\n                                </button>\r\n\r\n                                <button\r\n                                  id="editCorrectiveActionComponentTable"\r\n                                  *ngIf="!isReadOpenMode && selectedCorrectiveActionComponentList.length === 1"\r\n                                  type="button"\r\n                                  mat-raised-button\r\n                                  (click)="editCorrectiveActionComponent()"\r\n                                >\r\n                                  {{ "global.edit" | translate }}\r\n                                </button>\r\n\r\n                                <button\r\n                                  id="openCorrectiveActionComponentTable"\r\n                                  *ngIf="selectedCorrectiveActionComponentList.length === 1"\r\n                                  type="button"\r\n                                  mat-raised-button\r\n                                  (click)="openCorrectiveActionComponent()"\r\n                                >\r\n                                  {{ "global.open" | translate }}\r\n                                </button>\r\n\r\n                                <button\r\n                                  id="addCorrectiveActionComponentTable"\r\n                                  *ngIf="\r\n                                    !isReadOpenMode &&\r\n                                    selectedCorrectiveActionComponentList.length === 0 &&\r\n                                    !defectTargetWorkOrder\r\n                                  "\r\n                                  type="button"\r\n                                  mat-raised-button\r\n                                  (click)="createCorrectiveActionComponent()"\r\n                                >\r\n                                  {{ "global.add" | translate }}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </ng-template>\r\n\r\n                          <ng-template pTemplate="colgroup" let-columns>\r\n                            <colgroup>\r\n                              <col class="aw-table-checkbox-wrapper" />\r\n                              <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                            </colgroup>\r\n                          </ng-template>\r\n\r\n                          <ng-template pTemplate="header" let-columns>\r\n                            <tr>\r\n                              <th class="aw-table-checkbox-wrapper">\r\n                                <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                              </th>\r\n\r\n                              <th\r\n                                pResizableColumn\r\n                                *ngFor="let col of columns"\r\n                                [ngStyle]="{ \'text-align\': col.alignment }"\r\n                              >\r\n                                {{ componentData.componentId + "." + col.field | translate }}\r\n                              </th>\r\n                            </tr>\r\n                          </ng-template>\r\n\r\n                          <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                            <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                              <td class="aw-table-checkbox-wrapper">\r\n                                <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n                              </td>\r\n\r\n                              <td\r\n                                *ngFor="let col of columns"\r\n                                [ngSwitch]="col.field"\r\n                                [ngStyle]="{ \'text-align\': col.alignment }"\r\n                              >\r\n                                <span *ngSwitchCase="\'isRequestForPart\'">\r\n                                  <i\r\n                                    *ngIf="rowData[col.field] !== null && rowData[col.field]"\r\n                                    class="fa fa-fw fa-check"\r\n                                    aria-hidden="true"\r\n                                  ></i>\r\n                                </span>\r\n\r\n                                <span *ngSwitchDefault>\r\n                                  {{ rowData[col.field] }}\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                        </p-table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div\r\n                          id="defectCAWPDescription"\r\n                          class="form-group"\r\n                          *ngIf="\r\n                            (defectCAWPDescription !== undefined && defectCAWPDescription !== null) ||\r\n                            (defectCAWODescription !== undefined && defectCAWODescription !== null)\r\n                          "\r\n                        >\r\n                          <label\r\n                            *ngIf="defectCAWPDescription !== undefined && defectCAWPDescription !== null"\r\n                            class="form-label"\r\n                            >WP</label\r\n                          >\r\n\r\n                          <div class="form-control form-control-with-btn">\r\n                            <input\r\n                              *ngIf="defectCAWPDescription !== undefined && defectCAWPDescription !== null"\r\n                              type="text"\r\n                              class="aw-input"\r\n                              disabled="true"\r\n                              [(ngModel)]="defectCAWPDescription"\r\n                            />\r\n\r\n                            <i\r\n                              class="fa fa-fw fa-external-link aw-icon"\r\n                              aria-hidden="true"\r\n                              (click)="openWorkPackage()"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          id="defectCAWODescription"\r\n                          class="form-group"\r\n                          *ngIf="\r\n                            (defectCAWPDescription !== undefined && defectCAWPDescription !== null) ||\r\n                            (defectCAWODescription !== undefined && defectCAWODescription !== null)\r\n                          "\r\n                        >\r\n                          <label\r\n                            *ngIf="defectCAWPDescription !== undefined && defectCAWPDescription !== null"\r\n                            class="form-label"\r\n                            >WO</label\r\n                          >\r\n\r\n                          <div class="form-control form-control-with-btn">\r\n                            <input\r\n                              *ngIf="defectCAWODescription !== undefined && defectCAWODescription !== null"\r\n                              type="text"\r\n                              class="aw-input"\r\n                              disabled="true"\r\n                              [(ngModel)]="defectCAWODescription"\r\n                            />\r\n\r\n                            <i\r\n                              class="fa fa-fw fa-external-link aw-icon"\r\n                              aria-hidden="true"\r\n                              (click)="openWO(defectTargetWorkOrder)"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <!-- <div\r\n                        *ngIf="\r\n                          !(defectCAWPDescription !== undefined && defectCAWPDescription !== null) ||\r\n                          (defectCAWODescription !== undefined && defectCAWODescription !== null)\r\n                        "\r\n                        class="form-group flex--4"\r\n                      ></div> -->\r\n                        <div id="filler11" *ngIf="!defectCAWPDescription" class="form-group"></div>\r\n                        <div id="filler12" *ngIf="!defectCAWPDescription" class="form-group"></div>\r\n                        <div id="filler13" *ngIf="!defectCAWPDescription" class="form-group"></div>\r\n                      </div>\r\n\r\n                      <div class="row">\r\n                        <div id="filler14" class="form-group"></div>\r\n                        <div id="filler15" class="form-group"></div>\r\n                        <div id="filler16" class="form-group"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- <div class="row">\r\n          <div class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n            <label class="form-label">\r\n              {{ componentData.componentId + ".location" | translate }}\r\n            </label>\r\n            <div class="form-control">\r\n              <p-dropdown\r\n                class="aw-dropdown fixed-width"\r\n                [options]="eventLocationMap"\r\n                [disabled]="isReadOpenMode"\r\n                [(ngModel)]="location"\r\n                [showClear]="true"\r\n                placeholder="&nbsp;"\r\n              ></p-dropdown>\r\n            </div>\r\n          </div>\r\n          <div class="form-group"></div>\r\n          <div class="form-group"></div>\r\n          <div class="form-group"></div>\r\n        </div> -->\r\n        </mat-tab>\r\n\r\n        <mat-tab id="circumstancesTab">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".circumstances" | translate }}\r\n          </ng-template>\r\n          <!-- CIRCUMSTANCE -->\r\n          <div class="grid-row">\r\n            <div id="contextPanel" class="grid-cell--equally">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".context" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <!-- Context -->\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div id="symptomCode" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".context" | translate }}\r\n                          </label>\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [disabled]="isReadOpenMode"\r\n                              [showClear]="true"\r\n                              [options]="contextNameMap"\r\n                              [(ngModel)]="contextTabData.symptomCode"\r\n                              placeholder="&nbsp;"\r\n                              (onChange)="onChangeContext()"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                        <div id="missionType" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".missionType" | translate }}\r\n                          </label>\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [disabled]="isReadOpenMode"\r\n                              [showClear]="true"\r\n                              [options]="contextMissionMap"\r\n                              [(ngModel)]="contextTabData.missionType"\r\n                              placeholder="&nbsp;"\r\n                              (onChange)="onChangeMissionType()"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                        <div id="symptomComment" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".comment" | translate }}\r\n                          </label>\r\n                          <div class="form-control">\r\n                            <textarea\r\n                              class="aw-textarea"\r\n                              [rows]="3"\r\n                              pInputTextarea\r\n                              [(ngModel)]="contextTabData.symptomComment"\r\n                              [disabled]="isReadOpenMode"\r\n                              maxlength="300"\r\n                            ></textarea>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class="row">\r\n                      <div class="section">\r\n                        <h4 id="contextTableDataTitle" class="section-title">\r\n                          {{ componentData.componentId + ".parameterAssociated" | translate }}\r\n                          ({{ contextTableData ? contextTableData.length : 0 }})\r\n                        </h4>\r\n                        <div class="section-content">\r\n                          <p-table\r\n                            id="contextTableData"\r\n                            [resizableColumns]="true"\r\n                            #contextTable\r\n                            class="aw-table2"\r\n                            [columns]="symptomContextCols"\r\n                            [value]="contextTableData"\r\n                            [(selection)]="selectedContext"\r\n                            selectionMode="single"\r\n                            [scrollable]="true"\r\n                            scrollHeight="200px"\r\n                            (onRowSelect)="onContextRowSelect($event)"\r\n                            (onRowUnselect)="onContextRowUnselect()"\r\n                          >\r\n                            <ng-template pTemplate="emptymessage">\r\n                              <span *ngIf="!isLoadingMaintenanceProgramTable"> &nbsp;</span>\r\n                              <div *ngIf="isLoadingMaintenanceProgramTable" class="aw-table-loading-indicator">\r\n                                <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                                <div class="lds-hourglass"></div>\r\n                              </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="caption">\r\n                              <div\r\n                                class="aw-table-header"\r\n                                [ngClass]="{ \'rows-selected\': !isReadOpenMode && showContextHeader }"\r\n                              >\r\n                                <div class="aw-table-global-filter">\r\n                                  <label class="aw-table-global-filter-label">\r\n                                    <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                                  </label>\r\n\r\n                                  <input\r\n                                    #ptableCusCustomerGlobalFilter\r\n                                    class="aw-table-global-filter-input"\r\n                                    type="text"\r\n                                    placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                    (input)="contextTable.filterGlobal($event.target.value, \'contains\')"\r\n                                  />\r\n                                </div>\r\n                                <div class="aw-table-actions">\r\n                                  <button\r\n                                    id="editContextTableData"\r\n                                    *ngIf="!isReadOpenMode && showContextHeader"\r\n                                    type="button"\r\n                                    mat-raised-button\r\n                                    color="warn"\r\n                                    (click)="editSelectedContextParam()"\r\n                                  >\r\n                                    {{ "global.edit" | translate }}\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                              <colgroup>\r\n                                <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                              </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                              <tr>\r\n                                <th\r\n                                  pResizableColumn\r\n                                  *ngFor="let col of columns"\r\n                                  [ngStyle]="{ \'text-align\': col.alignment }"\r\n                                >\r\n                                  {{ componentData.componentId + "." + col.field | translate }}\r\n                                </th>\r\n                              </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                              <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                                <td *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                                  {{ rowData[col.field] }}\r\n                                </td>\r\n                              </tr>\r\n                            </ng-template>\r\n                          </p-table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div id="symptomManagementPanel" class="grid-cell--equally">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".symptomManagement" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <!-- Symptom -->\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div class="list-with-details">\r\n                          <div class="list">\r\n                            <div class="section">\r\n                              <h4 id="symptomRowDataTitle" class="section-title">\r\n                                {{ componentData.componentId + ".symptoms" | translate }}\r\n                                ({{ symptomRowData ? symptomRowData.length : 0 }})\r\n                              </h4>\r\n                              <p-table\r\n                                id="symptomRowData"\r\n                                [resizableColumns]="true"\r\n                                #symptomTable\r\n                                class="aw-table2"\r\n                                [columns]="symptomRowCols"\r\n                                [value]="symptomRowData"\r\n                                [(selection)]="selectedSymptom"\r\n                                selectionMode="single"\r\n                                [scrollable]="true"\r\n                                scrollHeight="200px"\r\n                                (onRowSelect)="onSymptomRowSelect($event)"\r\n                                (onRowUnselect)="onSymptomRowUnselect()"\r\n                              >\r\n                                <ng-template pTemplate="emptymessage">\r\n                                  <span *ngIf="!isLoadingMaintenanceProgramTable"> &nbsp;</span>\r\n                                  <div *ngIf="isLoadingMaintenanceProgramTable" class="aw-table-loading-indicator">\r\n                                    <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                                    <div class="lds-hourglass"></div>\r\n                                  </div>\r\n                                </ng-template>\r\n                                <ng-template pTemplate="caption">\r\n                                  <div\r\n                                    class="aw-table-header"\r\n                                    [ngClass]="{\r\n                                      \'rows-selected\': !isReadOpenMode && showSymptomHeader\r\n                                    }"\r\n                                  >\r\n                                    <div class="aw-table-global-filter">\r\n                                      <label class="aw-table-global-filter-label">\r\n                                        <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                                      </label>\r\n\r\n                                      <input\r\n                                        #ptableCusCustomerGlobalFilter\r\n                                        class="aw-table-global-filter-input"\r\n                                        type="text"\r\n                                        placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                        (input)="symptomTable.filterGlobal($event.target.value, \'contains\')"\r\n                                      />\r\n                                    </div>\r\n                                    <div class="aw-table-actions" *ngIf="defect.status !== \'4-clo\'">\r\n                                      <button\r\n                                        id="deleteSymptomRowData"\r\n                                        *ngIf="!isReadOpenMode && showSymptomHeader"\r\n                                        type="button"\r\n                                        mat-raised-button\r\n                                        color="warn"\r\n                                        (click)="deleteSelectedSymptom()"\r\n                                      >\r\n                                        {{ "global.delete" | translate }}\r\n                                      </button>\r\n\r\n                                      <button\r\n                                        id="editSymptomRowData"\r\n                                        *ngIf="!isReadOpenMode && showSymptomHeader"\r\n                                        type="button"\r\n                                        mat-raised-button\r\n                                        (click)="editSymptom()"\r\n                                      >\r\n                                        {{ "global.edit" | translate }}\r\n                                      </button>\r\n\r\n                                      <button\r\n                                        id="addSymptomRowData"\r\n                                        *ngIf="!isReadOpenMode && !showSymptomHeader"\r\n                                        type="button"\r\n                                        mat-raised-button\r\n                                        (click)="addSymptom()"\r\n                                      >\r\n                                        {{ "global.add" | translate }}\r\n                                      </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </ng-template>\r\n                                <ng-template pTemplate="colgroup" let-columns>\r\n                                  <colgroup>\r\n                                    <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                                  </colgroup>\r\n                                </ng-template>\r\n                                <ng-template pTemplate="header" let-columns>\r\n                                  <tr>\r\n                                    <th\r\n                                      pResizableColumn\r\n                                      *ngFor="let col of columns"\r\n                                      [ngStyle]="{ \'text-align\': col.alignment }"\r\n                                    >\r\n                                      {{ componentData.componentId + "." + col.field | translate }}\r\n                                    </th>\r\n                                  </tr>\r\n                                </ng-template>\r\n                                <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                  <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                                    <td *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                                      {{ rowData[col.field] }}\r\n                                    </td>\r\n                                  </tr>\r\n                                </ng-template>\r\n                              </p-table>\r\n                            </div>\r\n                          </div>\r\n                          <div class="details">\r\n                            <div class="section">\r\n                              <h4 id="symptomParameterTableDataTitle" class="section-title">\r\n                                {{ componentData.componentId + ".parameterAssociatedToSymptoms" | translate }}\r\n                                ({{ symptomParameterTableData ? symptomParameterTableData.length : 0 }})\r\n                              </h4>\r\n                              <div class="section-content">\r\n                                <p-table\r\n                                  id="symptomParameterTableData"\r\n                                  [resizableColumns]="true"\r\n                                  #symptomParamTable\r\n                                  class="aw-table2"\r\n                                  [columns]="symptomContextCols"\r\n                                  [value]="symptomParameterTableData"\r\n                                  [(selection)]="selectedSymptomParam"\r\n                                  selectionMode="single"\r\n                                  [scrollable]="true"\r\n                                  scrollHeight="200px"\r\n                                  (onRowSelect)="onSymptomParamRowSelect($event)"\r\n                                  (onRowUnselect)="onSymptomParamRowUnselect()"\r\n                                >\r\n                                  <ng-template pTemplate="emptymessage">\r\n                                    <span *ngIf="!isLoadingMaintenanceProgramTable"> &nbsp;</span>\r\n                                    <div *ngIf="isLoadingMaintenanceProgramTable" class="aw-table-loading-indicator">\r\n                                      <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                                      <div class="lds-hourglass"></div>\r\n                                    </div>\r\n                                  </ng-template>\r\n                                  <ng-template pTemplate="caption">\r\n                                    <div\r\n                                      class="aw-table-header"\r\n                                      [ngClass]="{ \'rows-selected\': !isReadOpenMode && showSymptomParamHeader }"\r\n                                    >\r\n                                      <div class="aw-table-global-filter">\r\n                                        <label class="aw-table-global-filter-label">\r\n                                          <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                                        </label>\r\n\r\n                                        <input\r\n                                          #ptableCusCustomerGlobalFilter\r\n                                          class="aw-table-global-filter-input"\r\n                                          type="text"\r\n                                          placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                          (input)="symptomParamTable.filterGlobal($event.target.value, \'contains\')"\r\n                                        />\r\n                                      </div>\r\n                                      <div class="aw-table-actions" *ngIf="defect.status !== \'4-clo\'">\r\n                                        <button\r\n                                          id="editSymptomParameterTableData"\r\n                                          *ngIf="!isReadOpenMode && showSymptomParamHeader"\r\n                                          type="button"\r\n                                          mat-raised-button\r\n                                          color="warn"\r\n                                          (click)="editSelectedSymptomParam()"\r\n                                        >\r\n                                          {{ "global.edit" | translate }}\r\n                                        </button>\r\n                                      </div>\r\n                                    </div>\r\n                                  </ng-template>\r\n                                  <ng-template pTemplate="colgroup" let-columns>\r\n                                    <colgroup>\r\n                                      <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                                    </colgroup>\r\n                                  </ng-template>\r\n                                  <ng-template pTemplate="header" let-columns>\r\n                                    <tr>\r\n                                      <th\r\n                                        pResizableColumn\r\n                                        *ngFor="let col of columns"\r\n                                        [ngStyle]="{ \'text-align\': col.alignment }"\r\n                                      >\r\n                                        {{ componentData.componentId + "." + col.field | translate }}\r\n                                      </th>\r\n                                    </tr>\r\n                                  </ng-template>\r\n                                  <ng-template\r\n                                    pTemplate="body"\r\n                                    let-rowData\r\n                                    let-columns="columns"\r\n                                    let-rowIndex="rowIndex"\r\n                                  >\r\n                                    <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                                      <td *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                                        {{ rowData[col.field] }}\r\n                                      </td>\r\n                                    </tr>\r\n                                  </ng-template>\r\n                                </p-table>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab id="attributesTab">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".attributes" | translate }}\r\n          </ng-template>\r\n          <!-- ATTRIBUTES -->\r\n          <div class="grid-row">\r\n            <div id="attributesPanel" class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".attributes" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="grid-cell--12">\r\n                        <div class="row">\r\n                          <aw-dynamic-attributes\r\n                            id="dynamicAttributes"\r\n                            [workflowControls]="userWorkflow ? userWorkflow.listControlByIdentifier : []"\r\n                            [attributes]="dynamicAttributes"\r\n                            [isReadOpenMode]="isReadOpenMode"\r\n                          ></aw-dynamic-attributes>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab id="deferralTab">\r\n          <ng-template mat-tab-label>\r\n            {{ "global.deferral" | translate }}\r\n          </ng-template>\r\n          <!-- DEFERRAL -->\r\n          <div class="grid-row">\r\n            <div id="deferralPanel" class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ "global.deferral" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div id="deferralAuthor" class="form-group">\r\n                          <label class="form-label">{{ "global.author" | translate }}</label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="isReadOpenMode || !deferralBlockVisibility"\r\n                              [(ngModel)]="deferralAuthor"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div id="deferralLastAuthor" class="form-group">\r\n                          <label class="form-label">{{ "global.lastAuthor" | translate }}</label>\r\n\r\n                          <div class="form-control">\r\n                            <input type="text" class="aw-input" disabled="true" [(ngModel)]="deferralLastAuthor" />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="section-actions flex--3" *ngIf="!isReadOpenMode && deferralBlockVisibility">\r\n                          <button\r\n                            id="acceptDeferralDeferralPanel"\r\n                            *ngIf="deferralAcceptDeferralVisibility"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            [disabled]="isReadOpenMode"\r\n                            (click)="acceptDeferral()"\r\n                          >\r\n                            {{ componentData.componentId + ".acceptDeferral" | translate }}\r\n                          </button>\r\n\r\n                          <button\r\n                            id="refuseDeferralDeferralPanel"\r\n                            *ngIf="deferralRefuseDeferralVisibility"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="cancelDeferral()"\r\n                          >\r\n                            {{ componentData.componentId + ".refuseDeferral" | translate }}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="column">\r\n                        <div class="row">\r\n                          <div id="deferralDelayCategory" class="form-group">\r\n                            <label class="form-label">{{\r\n                              componentData.componentId + ".delayCategory" | translate\r\n                            }}</label>\r\n\r\n                            <div class="form-control">\r\n                              <p-dropdown\r\n                                class="aw-dropdown fixed-width"\r\n                                [options]="delayCategoryList"\r\n                                [(ngModel)]="deferralDelayCategory"\r\n                                [disabled]="isReadOpenMode || !deferralBlockVisibility"\r\n                                [showClear]="true"\r\n                                (onChange)="onChangeDelayCategory()"\r\n                                placeholder="&nbsp;"\r\n                                appendTo="body"\r\n                              ></p-dropdown>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="deferralDelayAuthorizedValue" class="form-group">\r\n                            <label class="form-label">{{\r\n                              componentData.componentId + ".authorizedDelay" | translate\r\n                            }}</label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [disabled]="isReadOpenMode || !deferralBlockVisibility"\r\n                                [(ngModel)]="deferralDelayAuthorizedValue"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="deferralDelayAuthorizedUnit" class="form-group">\r\n                            <label class="form-label">{{\r\n                              componentData.componentId + ".authorizedDelayUnit" | translate\r\n                            }}</label>\r\n\r\n                            <div class="form-control">\r\n                              <p-dropdown\r\n                                class="aw-dropdown fixed-width"\r\n                                [options]="delayAuthorizedUnitList"\r\n                                [(ngModel)]="deferralDelayAuthorizedUnit"\r\n                                [disabled]="isReadOpenMode || !deferralBlockVisibility"\r\n                                [showClear]="true"\r\n                                placeholder="&nbsp;"\r\n                                appendTo="body"\r\n                              ></p-dropdown>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="deferralDelayAuthorizationNumber" class="form-group">\r\n                            <label class="form-label">{{\r\n                              componentData.componentId + ".authorizationNumber" | translate\r\n                            }}</label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [disabled]="isReadOpenMode || !deferralBlockVisibility"\r\n                                [(ngModel)]="deferralDelayAuthorizationNumber"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="defectExtensionNumber" class="form-group">\r\n                            <label class="form-label">{{\r\n                              componentData.componentId + ".extensionNumber" | translate\r\n                            }}</label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [disabled]="isReadOpenMode || !deferralBlockVisibility"\r\n                                [(ngModel)]="defectExtensionNumber"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="row">\r\n                          <div id="deferralFlightRestriction" class="form-group flex--3">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".flightRestriction" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <textarea\r\n                                class="aw-textarea"\r\n                                [rows]="3"\r\n                                [(ngModel)]="deferralFlightRestriction"\r\n                                pInputTextarea\r\n                                [disabled]="isReadOpenMode || !deferralBlockVisibility"\r\n                              ></textarea>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="filler17" class="form-group"></div>\r\n                          <div id="filler18" class="form-group"></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab id="arisingEventsTab">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".arisingEvents" | translate }}\r\n          </ng-template>\r\n          <!-- ARISING EVENTS -->\r\n          <div class="grid-row">\r\n            <div id="arisingEventsPanel" class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 id="arisingEventTableDataTitle" class="grid-cell-title">\r\n                      {{ componentData.componentId + ".arisingEvents" | translate }}({{\r\n                        arisingEventTableData ? arisingEventTableData.length : 0\r\n                      }})\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        id="arisingEventTableData"\r\n                        [resizableColumns]="true"\r\n                        #ptableEvents\r\n                        class="aw-table2"\r\n                        [columns]="arisingEventTableCols"\r\n                        [value]="arisingEventTableData"\r\n                        [(selection)]="selectedArisingEvents"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingEventsTable"> &nbsp;</span>\r\n\r\n                          <div *ngIf="isLoadingEventsTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="caption">\r\n                          <div\r\n                            class="aw-table-header"\r\n                            [ngClass]="{ \'rows-selected\': selectedArisingEvents.length > 0 }"\r\n                          >\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableMeasuresGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="ptableEvents.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                            <div class="aw-table-actions" *ngIf="defect.status !== \'4-clo\'">\r\n                              <p-splitButton\r\n                                *ngIf="!isReadOpenMode && selectedArisingEvents.length === 0"\r\n                                class="aw-split-btn aw-table-action"\r\n                                label="{{ getComponentName() + \'.createEvent\' | translate }}"\r\n                                [model]="navigationLinkList"\r\n                              ></p-splitButton>\r\n                              <button\r\n                                id="deleteArisingEventTableData"\r\n                                *ngIf="!isReadOpenMode && selectedArisingEvents.length > 0"\r\n                                type="button"\r\n                                mat-raised-button\r\n                                color="warn"\r\n                                (click)="deleteEvents()"\r\n                              >\r\n                                {{ "global.delete" | translate }}\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col class="aw-table-checkbox-wrapper" />\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th class="aw-table-checkbox-wrapper">\r\n                              <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                            </th>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              {{ componentData.componentId + "." + col.field | translate }}\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td class="aw-table-checkbox-wrapper">\r\n                              <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n                            </td>\r\n                            <td\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <a *ngSwitchCase="\'asset\'" (click)="openArisingEventAsset(rowData)">\r\n                                {{ rowData[col.field] }}\r\n                              </a>\r\n                              <a *ngSwitchCase="\'notificationCode\'" (click)="openEvent(rowData)">\r\n                                {{ rowData[col.field] }}\r\n                              </a>\r\n                              <span\r\n                                *ngSwitchCase="\'notificationSubject\'"\r\n                                pTooltip="{{ rowData[col.field] }}"\r\n                                tooltipPosition="bottom"\r\n                              >\r\n                                {{ rowData[col.field] }}\r\n                              </span>\r\n                              <span *ngSwitchCase="\'isDeduced\'">\r\n                                <i *ngIf="rowData[col.field]" class="fa fa-fw fa-check" aria-hidden="true"></i>\r\n                              </span>\r\n                              <span *ngSwitchDefault>\r\n                                {{ rowData[col.field] }}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab id="assetAtDateTab">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".assetAtDate" | translate }}\r\n          </ng-template>\r\n          <!-- ASSET AT DATE TAB -->\r\n          <div class="grid-row">\r\n            <div id="assetPanel" class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".asset" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div id="pnCode" class="form-group" *ngIf="!!masterEquipment && !isAircraft()">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".pn" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="masterEquipment.pnCode"\r\n                              [disabled]="true"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div id="registration" class="form-group" *ngIf="!!masterEquipment && isAircraft()">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".registration" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="masterEquipment.registration"\r\n                              [disabled]="true"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div id="sn" class="form-group" *ngIf="!!masterEquipment && !isAircraft() && !isEngine()">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".sn" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input type="text" class="aw-input" [(ngModel)]="masterEquipment.sn" [disabled]="true" />\r\n                          </div>\r\n                        </div>\r\n                        <div id="sn2" class="form-group" *ngIf="!!masterEquipment && isAircraft() && !isEngine()">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".msn" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input type="text" class="aw-input" [(ngModel)]="masterEquipment.sn" [disabled]="true" />\r\n                          </div>\r\n                        </div>\r\n                        <div id="sn3" class="form-group" *ngIf="!!masterEquipment && isEngine() && !isAircraft()">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".esn" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input type="text" class="aw-input" [(ngModel)]="masterEquipment.sn" [disabled]="true" />\r\n                          </div>\r\n                        </div>\r\n                        <div id="familyVariantCode" *ngIf="!!masterEquipment" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".familyVariant" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="masterEquipment.familyVariantCode"\r\n                              [disabled]="true"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div id="operationalStatus" *ngIf="!!masterEquipment" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".assetStatus" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="masterEquipment.operationalStatus"\r\n                              [disabled]="true"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="row">\r\n                        <div id="functionLocationStr" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".functionLocation" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input type="text" class="aw-input" [disabled]="true" [(ngModel)]="functionLocationStr" />\r\n                          </div>\r\n                        </div>\r\n                        <div id="ownerCustomerCode" class="form-group" *ngIf="!!masterEquipment">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".owner" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="masterEquipment.ownerCustomerCode"\r\n                              [disabled]="true"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div id="operatorCustomerCode" class="form-group" *ngIf="!!masterEquipment">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".operator" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="masterEquipment.operatorCustomerCode"\r\n                              [disabled]="true"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div id="filler19" class="form-group"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class="grid-row">\r\n            <div id="countersPanel" class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 id="bidoMeasuresDisplayedTitle" class="grid-cell-title">\r\n                      {{ componentData.componentId + ".counters" | translate }} ({{\r\n                        !!bidoMeasuresDisplayed ? bidoMeasuresDisplayed.length : 0\r\n                      }})\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="grid-cell-content grid-cell-content-with-section">\r\n                        <div class="section">\r\n                          <div class="section-content">\r\n                            <p-table\r\n                              id="bidoMeasuresDisplayed"\r\n                              [resizableColumns]="true"\r\n                              #ptableMeasures\r\n                              class="aw-table2"\r\n                              [columns]="measuresTableCols"\r\n                              [value]="bidoMeasuresDisplayed"\r\n                              [(selection)]="selectedMeasure"\r\n                              [scrollable]="true"\r\n                            >\r\n                              <ng-template pTemplate="emptymessage">\r\n                                <span *ngIf="!isLoadingMeasureTable"> &nbsp;</span>\r\n\r\n                                <div *ngIf="isLoadingMeasureTable" class="aw-table-loading-indicator">\r\n                                  <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                                  <div class="lds-hourglass"></div>\r\n                                </div>\r\n                              </ng-template>\r\n\r\n                              <ng-template pTemplate="caption">\r\n                                <div\r\n                                  class="aw-table-header"\r\n                                  [ngClass]="{ \'rows-selected\': selectedMeasure.length > 0 }"\r\n                                >\r\n                                  <div class="aw-table-global-filter">\r\n                                    <label class="aw-table-global-filter-label">\r\n                                      <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                                    </label>\r\n\r\n                                    <input\r\n                                      #ptableMeasuresGlobalFilter\r\n                                      class="aw-table-global-filter-input"\r\n                                      type="text"\r\n                                      placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                      (input)="ptableMeasures.filterGlobal($event.target.value, \'contains\')"\r\n                                    />\r\n                                  </div>\r\n\r\n                                  <div class="aw-table-actions" *ngIf="defect.status !== \'4-clo\'">\r\n                                    <button\r\n                                      id="updateMeasureBidoMeasuresDisplayed"\r\n                                      *ngIf="!isReadOpenMode"\r\n                                      type="button"\r\n                                      mat-raised-button\r\n                                      (click)="updateMeasure()"\r\n                                    >\r\n                                      {{ componentData.componentId + ".updateMeasure" | translate }}\r\n                                    </button>\r\n\r\n                                    <button\r\n                                      id="estimateCounterBidoMeasuresDisplayed"\r\n                                      *ngIf="!isReadOpenMode && isEstimateCounterVisible()"\r\n                                      type="button"\r\n                                      mat-raised-button\r\n                                      (click)="estimateCounter()"\r\n                                    >\r\n                                      {{ componentData.componentId + ".estimateCounter" | translate }}\r\n                                    </button>\r\n                                  </div>\r\n                                </div>\r\n                              </ng-template>\r\n\r\n                              <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                  <!-- <col class="aw-table-checkbox-wrapper" /> -->\r\n                                  <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                                </colgroup>\r\n                              </ng-template>\r\n\r\n                              <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                  <!-- <th class="aw-table-checkbox-wrapper">\r\n                          <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                        </th> -->\r\n\r\n                                  <th\r\n                                    pResizableColumn\r\n                                    *ngFor="let col of columns"\r\n                                    [ngStyle]="{ \'text-align\': col.alignment }"\r\n                                  >\r\n                                    {{ componentData.componentId + "." + col.field | translate }}\r\n                                  </th>\r\n                                </tr>\r\n                              </ng-template>\r\n                              <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                                  <!-- <td class="aw-table-checkbox-wrapper">\r\n                                <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n                              </td> -->\r\n\r\n                                  <td\r\n                                    *ngFor="let col of columns"\r\n                                    [ngSwitch]="col.field"\r\n                                    [ngStyle]="{ \'text-align\': col.alignment }"\r\n                                    [ngClass]="{\r\n                                      \'value-none\': col.field === \'remainingValue\' && getAlertIcon(rowData) === \'\',\r\n                                      \'value-red\': col.field === \'remainingValue\' && getAlertIcon(rowData) === \'red\',\r\n                                      \'value-green\':\r\n                                        col.field === \'remainingValue\' && getAlertIcon(rowData) === \'green\',\r\n                                      \'value-yellow\':\r\n                                        col.field === \'remainingValue\' && getAlertIcon(rowData) === \'yellow\'\r\n                                    }"\r\n                                  >\r\n                                    <span *ngSwitchCase="\'counterCode\'">\r\n                                      <span>\r\n                                        {{ rowData[col.field] }}\r\n                                        <i\r\n                                          *ngIf="getMonthGapToolTip(rowData) !== \'\'"\r\n                                          style="color:#ff9800"\r\n                                          class="fa fa-fw fa-exclamation-triangle"\r\n                                          aria-hidden="true"\r\n                                          pTooltip="{{ getMonthGapToolTip(rowData) }}"\r\n                                        ></i>\r\n                                      </span>\r\n                                    </span>\r\n                                    <span\r\n                                      *ngSwitchCase="\'remainingValue\'"\r\n                                      pTooltip="{{ getAlertIconTooltip(rowData) }}"\r\n                                    >\r\n                                      {{ rowData[col.field] }}\r\n                                    </span>\r\n                                    <span *ngSwitchDefault>\r\n                                      {{ rowData[col.field] }}\r\n                                    </span>\r\n                                  </td>\r\n                                </tr>\r\n                              </ng-template>\r\n                            </p-table>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab id="documentsTab">\r\n          <ng-template mat-tab-label>\r\n            {{ "global.documents" | translate }}\r\n          </ng-template>\r\n          <!-- DOCUMENTS -->\r\n          <div class="grid-row">\r\n            <div id="documentsPanel" class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 id="documentTableTitle" class="grid-cell-title">\r\n                      {{ "global.documents" | translate }} ({{ documentTable ? documentTable.length : 0 }})\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <p-table\r\n                    id="documentTable"\r\n                    [resizableColumns]="true"\r\n                    #ptableDocument\r\n                    class="aw-table2"\r\n                    [columns]="documentTableColList"\r\n                    [value]="documentTable"\r\n                    [(selection)]="selectedDocumentList"\r\n                    dataKey="docName"\r\n                    [scrollable]="true"\r\n                  >\r\n                    <ng-template pTemplate="emptymessage">\r\n                      <span *ngIf="!isLoadingDocumentTable"> &nbsp;</span>\r\n\r\n                      <div *ngIf="isLoadingDocumentTable" class="aw-table-loading-indicator">\r\n                        <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                        <div class="lds-hourglass"></div>\r\n                      </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="caption">\r\n                      <div class="aw-table-header" [ngClass]="{ \'rows-selected\': selectedDocumentList.length > 0 }">\r\n                        <div class="aw-table-global-filter">\r\n                          <label class="aw-table-global-filter-label">\r\n                            <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                          </label>\r\n\r\n                          <input\r\n                            #ptableDocumentGlobalFilter\r\n                            class="aw-table-global-filter-input"\r\n                            type="text"\r\n                            placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                            (input)="ptableDocument.filterGlobal($event.target.value, \'contains\')"\r\n                          />\r\n                        </div>\r\n\r\n                        <div class="aw-table-actions" *ngIf="defect.status !== \'4-clo\'">\r\n                          <button\r\n                            id="downloadDocumentTable"\r\n                            *ngIf="selectedDocumentList.length > 0"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="downloadFiles()"\r\n                          >\r\n                            {{ "global.download" | translate }}\r\n                          </button>\r\n\r\n                          <button\r\n                            id="deleteDocumentTable"\r\n                            *ngIf="!isReadOpenMode && selectedDocumentList.length > 0"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            color="warn"\r\n                            (click)="deleteSelectedDocumentList()"\r\n                          >\r\n                            {{ "global.delete" | translate }}\r\n                          </button>\r\n\r\n                          <button\r\n                            id="editDocumentTable"\r\n                            *ngIf="!isReadOpenMode && selectedDocumentList.length === 1"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="editDocument()"\r\n                          >\r\n                            {{ "global.edit" | translate }}\r\n                          </button>\r\n\r\n                          <button\r\n                            id="openDocumentTable"\r\n                            *ngIf="selectedDocumentList.length === 1"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="openDocument()"\r\n                          >\r\n                            {{ "global.open" | translate }}\r\n                          </button>\r\n                          <p-fileUpload\r\n                            id="uploadDocumentTable"\r\n                            #fileUploader\r\n                            *ngIf="!isReadOpenMode && selectedDocumentList.length === 0"\r\n                            chooseLabel="{{ \'global.upload\' | translate }}"\r\n                            name="document[]"\r\n                            customUpload="true"\r\n                            mode="basic"\r\n                            auto="true"\r\n                            (uploadHandler)="uploadDocument($event, fileUploader)"\r\n                          ></p-fileUpload>\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="colgroup" let-columns>\r\n                      <colgroup>\r\n                        <col class="aw-table-checkbox-wrapper" />\r\n                        <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                      </colgroup>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="header" let-columns>\r\n                      <tr>\r\n                        <th class="aw-table-checkbox-wrapper">\r\n                          <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                        </th>\r\n\r\n                        <th\r\n                          pResizableColumn\r\n                          *ngFor="let col of columns"\r\n                          [ngSwitch]="col.field"\r\n                          [ngStyle]="{ \'text-align\': col.alignment }"\r\n                        >\r\n                          <span *ngSwitchCase="\'isChecked\'">\r\n                            <i class="fa fa-fw fa-envelope" aria-hidden="true"></i>\r\n                          </span>\r\n\r\n                          <span *ngSwitchDefault> {{ componentData.componentId + "." + col.field | translate }} </span>\r\n                        </th>\r\n                      </tr>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                      <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                        <td class="aw-table-checkbox-wrapper">\r\n                          <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n                        </td>\r\n\r\n                        <td\r\n                          *ngFor="let col of columns"\r\n                          [ngSwitch]="col.field"\r\n                          [ngStyle]="{ \'text-align\': col.alignment }"\r\n                        >\r\n                          <span *ngSwitchCase="\'isChecked\'">\r\n                            <i\r\n                              *ngIf="rowData[col.field] !== null && rowData[col.field]"\r\n                              class="fa fa-fw fa-check"\r\n                              aria-hidden="true"\r\n                            ></i>\r\n                          </span>\r\n\r\n                          <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </p-table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab id="diffusionTab">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".diffusion" | translate }}\r\n          </ng-template>\r\n          <!-- DIFFUSION -->\r\n          <div class="grid-row">\r\n            <div id="diffusionPanel" class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 id="diffusionTableDataTitle" class="grid-cell-title">\r\n                      {{ componentData.componentId + ".diffusion" | translate }} ({{\r\n                        diffusionTableData ? diffusionTableData.length : 0\r\n                      }})\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        id="diffusionTableData"\r\n                        [resizableColumns]="true"\r\n                        #ptableDiffusion\r\n                        class="aw-table2"\r\n                        [columns]="diffusionTableCols"\r\n                        [value]="diffusionTableData"\r\n                        [(selection)]="selectedDiffusion"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingDiffusionTable"> &nbsp;</span>\r\n\r\n                          <div *ngIf="isLoadingDiffusionTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header" [ngClass]="{ \'rows-selected\': selectedDiffusion.length > 0 }">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableMeasuresGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="ptableDiffusion.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                            <div class="aw-table-actions" *ngIf="defect.status !== \'4-clo\'">\r\n                              <button\r\n                                id="sendDiffusionTableData"\r\n                                *ngIf="!isReadOpenMode && selectedDiffusion.length > 0"\r\n                                type="button"\r\n                                mat-raised-button\r\n                                color="warn"\r\n                                (click)="sendDiffusionMail()"\r\n                              >\r\n                                {{ componentData.componentId + ".send" | translate }}\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col class="aw-table-checkbox-wrapper" />\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th class="aw-table-checkbox-wrapper">\r\n                              <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                            </th>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              {{ componentData.componentId + "." + col.field | translate }}\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td class="aw-table-checkbox-wrapper">\r\n                              <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n                            </td>\r\n                            <td\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngSwitchDefault>\r\n                                {{ rowData[col.field] }}\r\n                              </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n\r\n    <aw-dialog-defect-bido-document\r\n      *ngIf="showDocumentDialog"\r\n      [(display)]="showDocumentDialog"\r\n      [document]="currentDocument"\r\n      [openMode]="documentDialogOpenMode"\r\n      [types]="documentTypeList"\r\n      (onValidated)="onAddDocument($event)"\r\n    ></aw-dialog-defect-bido-document>\r\n\r\n    <aw-dialog-defect-component\r\n      *ngIf="showCorrectiveActionComponentDialog"\r\n      [(display)]="showCorrectiveActionComponentDialog"\r\n      [component]="currentCorrectiveActionComponent"\r\n      [decisionList]="correctiveActionComponentDecisionList"\r\n      [masterEquipment]="masterEquipment"\r\n      [openMode]="correctiveActionComponentDialogOpenMode"\r\n      [pnTypeList]="pnTypeList"\r\n      (onValidated)="onAddCorrectiveActionComponent($event)"\r\n    ></aw-dialog-defect-component>\r\n\r\n    <aw-dialog-defect-task\r\n      *ngIf="showCorrectiveActionTaskDialog"\r\n      [(display)]="showCorrectiveActionTaskDialog"\r\n      [familyVariantCode]="masterEquipment.familyVariantCode"\r\n      (onValidated)="onAddCorrectiveActionTask($event)"\r\n    ></aw-dialog-defect-task>\r\n\r\n    <aw-dialog-search-equipment\r\n      *ngIf="showDefectEquipmentAssetCodeDialog"\r\n      [(display)]="showDefectEquipmentAssetCodeDialog"\r\n      [selectionMultiple]="false"\r\n      [family-variant]="masterEquipment.familyVariantCode"\r\n      (onSelected)="onSelectDefectEquipmentAssetCode($event)"\r\n    ></aw-dialog-search-equipment>\r\n\r\n    <aw-dialog-search-pn\r\n      *ngIf="showDefectPartDialog"\r\n      [(display)]="showDefectPartDialog"\r\n      (onSelected)="onSelectDefectPart($event)"\r\n      [familyVariant]="partSearchInput.familyVariantSelected"\r\n      [pnType]="partSearchInput.type"\r\n      [toolSearch]="partSearchInput.toolSearch"\r\n      [showFamilyVariantSelection]="false"\r\n    ></aw-dialog-search-pn>\r\n\r\n    <aw-dialog-work-package\r\n      *ngIf="showCorrectiveActionWorkPackageDialog"\r\n      [(display)]="showCorrectiveActionWorkPackageDialog"\r\n      [displayDescription]="false"\r\n      [displayOperation]="false"\r\n      [displayStatus]="false"\r\n      [displayWorkCenter]="false"\r\n      (onValidated)="onCreateWorkPackage($event)"\r\n    ></aw-dialog-work-package>\r\n\r\n    <p-overlayPanel\r\n      #opWorkPackageToShow\r\n      [appendTo]="\'body\'"\r\n      (onShow)="reportListToShowVisible = true"\r\n      (onHide)="reportListToShowVisible = false"\r\n    >\r\n      <div style="width: 60vw;">\r\n        <div *ngIf="isReportDataLoading" class="lds-hourglass"></div>\r\n        <p-table\r\n          id="reportTable"\r\n          [resizableColumns]="true"\r\n          #tableAssets\r\n          class="aw-table2"\r\n          [columns]="reportTableCols"\r\n          [value]="reportTable"\r\n          [scrollable]="true"\r\n        >\r\n          <ng-template pTemplate="emptymessage">\r\n            <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n            <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n              <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n              <div class="lds-hourglass"></div>\r\n            </div>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n              <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n            </colgroup>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n              <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                {{ getComponentName() + "." + col.field | translate }}\r\n              </th>\r\n            </tr>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n            <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n              <td *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }" [ngSwitch]="col.field">\r\n                <button\r\n                  id="generateReportTable"\r\n                  *ngSwitchCase="\'action\'"\r\n                  type="button"\r\n                  mat-raised-button\r\n                  (click)="generateReport(rowData[\'id\'])"\r\n                >\r\n                  {{ getComponentName() + ".generate" | translate }}\r\n                </button>\r\n\r\n                <span *ngSwitchCase="\'fileName\'" pTooltip="{{ rowData[\'fileDesc\'] }}" tooltipPosition="bottom">{{\r\n                  rowData[col.field]\r\n                }}</span>\r\n\r\n                <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </p-overlayPanel>\r\n  </div>\r\n</div>\r\n\r\n<aw-status-update-history\r\n  *ngIf="showStatusUpdatesPopup"\r\n  [object]="defect"\r\n  [data]="tableStatusUpdatesData"\r\n  [deleteApi]="deleteApi"\r\n  [(display)]="showStatusUpdatesPopup"\r\n  [keyMap]="updatesKeyMap"\r\n></aw-status-update-history>\r\n\r\n<aw-dialog-add-symptom\r\n  *ngIf="showSymptomTableDialog"\r\n  [(display)]="showSymptomTableDialog"\r\n  [symptomMap]="symptomNameMap"\r\n  [data]="dataSymptom"\r\n  (onValidated)="onUpdateSymptom($event)"\r\n  (onAdded)="onAddSymptom($event)"\r\n></aw-dialog-add-symptom>\r\n\r\n<aw-dialog-add-param-value\r\n  *ngIf="showContextTableDialog"\r\n  [(display)]="showContextTableDialog"\r\n  [data]="dataContext"\r\n  (onAdded)="onAddContextParam($event)"\r\n></aw-dialog-add-param-value>\r\n\r\n<aw-dialog-add-param-value\r\n  *ngIf="showSymptomParamDialog"\r\n  [(display)]="showSymptomParamDialog"\r\n  [data]="dataContext"\r\n  (onAdded)="onAddSymptomParamParam($event)"\r\n></aw-dialog-add-param-value>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/defect-form/defect-form.component.scss':
      /*!************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/defect-form/defect-form.component.scss ***!
  \************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          ':host #defect-form-component .form-group {\n  min-width: 15rem;\n  width: 16rem; }\n\n:host #defect-form-component .main-data .operator-wrapper {\n  display: flex;\n  flex-direction: row; }\n\n:host #defect-form-component .main-data .operator-wrapper > .aw-input:first-of-type {\n    min-width: 3.5rem;\n    width: 3.5rem; }\n\n:host #defect-form-component .main-data .operator-wrapper > .aw-input:last-of-type {\n    flex-grow: 1;\n    margin-left: 5px;\n    width: 1rem; }\n\n:host #defect-form-component .defect-tab {\n  flex-direction: column;\n  width: 100%; }\n\n:host #defect-form-component .defect-tab .authors-data {\n    flex-grow: 1;\n    justify-content: flex-end; }\n\n:host #defect-form-component .defect-tab .corrective-action-section > div:first-of-type,\n  :host #defect-form-component .defect-tab .defect-section > div:first-of-type,\n  :host #defect-form-component .defect-tab .deferral-section > div:first-of-type {\n    width: 100%; }\n\n:host #defect-form-component .defect-tab .defect-section .last-row {\n    justify-content: space-between; }\n\n:host #defect-form-component .defect-tab .defect-section .last-row > div {\n      width: 50%; }\n\n:host #defect-form-component .defect-tab .defect-section .last-row > div:last-of-type {\n      border: 1px solid #ddd;\n      border-radius: 2px;\n      padding: 20px; }\n\n:host #defect-form-component .defect-tab .corrective-action-section .task-row {\n    align-items: flex-end; }\n\n:host #defect-form-component .defect-tab .corrective-action-section .task-row .wp-button-container {\n      padding-left: 20px; }\n\n:host #defect-form-component .defect-tab .corrective-action-section .task-row .wp-button-container > button {\n        padding: 6px 10px; }\n\n:host #defect-form-component .defect-tab .corrective-action-section .description,\n  :host #defect-form-component .defect-tab .corrective-action-section .wp-button-container {\n    margin-bottom: 1rem; }\n\n:host #defect-form-component .defect-tab .corrective-action-section .description {\n    display: flex;\n    flex-direction: column; }\n\n:host #defect-form-component .defect-tab .corrective-action-section .description .wo-description span:first-of-type,\n    :host #defect-form-component .defect-tab .corrective-action-section .description .wp-description span:first-of-type {\n      margin-right: 20px;\n      font-style: italic;\n      font-weight: 600; }\n\n:host #defect-form-component .defect-tab .corrective-action-section .description .wp-description {\n      margin-bottom: 0.5rem; }\n\n:host #defect-form-component .defect-tab .corrective-action-section .table-wrapper {\n    padding-left: 20px; }\n\n:host #defect-form-component .defect-tab .deferral-section .authorized-delay-wrapper {\n    display: flex;\n    flex-direction: row; }\n\n:host #defect-form-component .defect-tab .deferral-section .authorized-delay-wrapper > .aw-input {\n      min-width: 3.5rem;\n      width: 3.5rem; }\n\n:host #defect-form-component .defect-tab .deferral-section .authorized-delay-wrapper > .aw-dropdown {\n      flex-grow: 1;\n      margin-left: 5px;\n      min-width: auto;\n      width: auto; }\n\n:host #defect-form-component .defect-tab .deferral-section .delay-category > .aw-dropdown {\n    max-width: 3.5rem;\n    min-width: 3.5rem; }\n\n:host .list {\n  max-width: 40%;\n  min-width: 40%; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2V2ZW50L2RlZmVjdC1mb3JtL2Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZ2l0aHViX3BhZ2VzL3NyY1xcYXBwXFxtYWluXFxmbGVldC1tYW5hZ2VtZW50XFxldmVudFxcZGVmZWN0LWZvcm1cXGRlZmVjdC1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBR00sZ0JBQWdCO0VBQ2hCLFlBQVksRUFBQTs7QUFKbEI7RUFTUSxhQUFhO0VBQ2IsbUJBQW1CLEVBQUE7O0FBVjNCO0lBY1ksaUJBQWlCO0lBQ2pCLGFBQWEsRUFBQTs7QUFmekI7SUFtQlksWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixXQUFXLEVBQUE7O0FBckJ2QjtFQTRCTSxzQkFBc0I7RUFDdEIsV0FBVyxFQUFBOztBQTdCakI7SUFnQ1EsWUFBWTtJQUNaLHlCQUF5QixFQUFBOztBQWpDakM7OztJQXdDVSxXQUFXLEVBQUE7O0FBeENyQjtJQThDVSw4QkFBOEIsRUFBQTs7QUE5Q3hDO01BaURZLFVBQVUsRUFBQTs7QUFqRHRCO01BcURZLHNCQUFzQjtNQUN0QixrQkFBa0I7TUFDbEIsYUFBYSxFQUFBOztBQXZEekI7SUE4RFUscUJBQXFCLEVBQUE7O0FBOUQvQjtNQWlFWSxrQkFBa0IsRUFBQTs7QUFqRTlCO1FBb0VjLGlCQUFpQixFQUFBOztBQXBFL0I7O0lBMkVVLG1CQUFtQixFQUFBOztBQTNFN0I7SUErRVUsYUFBYTtJQUNiLHNCQUFzQixFQUFBOztBQWhGaEM7O01BcUZjLGtCQUFrQjtNQUNsQixrQkFBa0I7TUFDbEIsZ0JBQWdCLEVBQUE7O0FBdkY5QjtNQTRGWSxxQkFBcUIsRUFBQTs7QUE1RmpDO0lBaUdVLGtCQUFrQixFQUFBOztBQWpHNUI7SUF1R1UsYUFBYTtJQUNiLG1CQUFtQixFQUFBOztBQXhHN0I7TUEyR1ksaUJBQWlCO01BQ2pCLGFBQWEsRUFBQTs7QUE1R3pCO01BZ0hZLFlBQVk7TUFDWixnQkFBZ0I7TUFDaEIsZUFBZTtNQUNmLFdBQVcsRUFBQTs7QUFuSHZCO0lBd0hVLGlCQUFpQjtJQUNqQixpQkFBaUIsRUFBQTs7QUF6SDNCO0VBZ0lJLGNBQWM7RUFDZCxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2ZsZWV0LW1hbmFnZW1lbnQvZXZlbnQvZGVmZWN0LWZvcm0vZGVmZWN0LWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgI2RlZmVjdC1mb3JtLWNvbXBvbmVudCB7XHJcbiAgICAuZm9ybS1ncm91cCB7XHJcbiAgICAgIG1pbi13aWR0aDogMTVyZW07XHJcbiAgICAgIHdpZHRoOiAxNnJlbTtcclxuICAgIH1cclxuXHJcbiAgICAubWFpbi1kYXRhIHtcclxuICAgICAgLm9wZXJhdG9yLXdyYXBwZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuXHJcbiAgICAgICAgJiA+IC5hdy1pbnB1dCB7XHJcbiAgICAgICAgICAmOmZpcnN0LW9mLXR5cGUge1xyXG4gICAgICAgICAgICBtaW4td2lkdGg6IDMuNXJlbTtcclxuICAgICAgICAgICAgd2lkdGg6IDMuNXJlbTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMTtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDVweDtcclxuICAgICAgICAgICAgd2lkdGg6IDFyZW07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmRlZmVjdC10YWIge1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAgIC5hdXRob3JzLWRhdGEge1xyXG4gICAgICAgIGZsZXgtZ3JvdzogMTtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAuY29ycmVjdGl2ZS1hY3Rpb24tc2VjdGlvbixcclxuICAgICAgLmRlZmVjdC1zZWN0aW9uLFxyXG4gICAgICAuZGVmZXJyYWwtc2VjdGlvbiB7XHJcbiAgICAgICAgJiA+IGRpdjpmaXJzdC1vZi10eXBlIHtcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLmRlZmVjdC1zZWN0aW9uIHtcclxuICAgICAgICAubGFzdC1yb3cge1xyXG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG5cclxuICAgICAgICAgICYgPiBkaXYge1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICYgPiBkaXY6bGFzdC1vZi10eXBlIHtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLmNvcnJlY3RpdmUtYWN0aW9uLXNlY3Rpb24ge1xyXG4gICAgICAgIC50YXNrLXJvdyB7XHJcbiAgICAgICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcblxyXG4gICAgICAgICAgLndwLWJ1dHRvbi1jb250YWluZXIge1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcblxyXG4gICAgICAgICAgICAmID4gYnV0dG9uIHtcclxuICAgICAgICAgICAgICBwYWRkaW5nOiA2cHggMTBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmRlc2NyaXB0aW9uLFxyXG4gICAgICAgIC53cC1idXR0b24tY29udGFpbmVyIHtcclxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZGVzY3JpcHRpb24ge1xyXG4gICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgICAgICAgLndvLWRlc2NyaXB0aW9uLFxyXG4gICAgICAgICAgLndwLWRlc2NyaXB0aW9uIHtcclxuICAgICAgICAgICAgc3BhbjpmaXJzdC1vZi10eXBlIHtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAud3AtZGVzY3JpcHRpb24ge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAudGFibGUtd3JhcHBlciB7XHJcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAuZGVmZXJyYWwtc2VjdGlvbiB7XHJcbiAgICAgICAgLmF1dGhvcml6ZWQtZGVsYXktd3JhcHBlciB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuXHJcbiAgICAgICAgICAmID4gLmF3LWlucHV0IHtcclxuICAgICAgICAgICAgbWluLXdpZHRoOiAzLjVyZW07XHJcbiAgICAgICAgICAgIHdpZHRoOiAzLjVyZW07XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJiA+IC5hdy1kcm9wZG93biB7XHJcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMTtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDVweDtcclxuICAgICAgICAgICAgbWluLXdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5kZWxheS1jYXRlZ29yeSA+IC5hdy1kcm9wZG93biB7XHJcbiAgICAgICAgICBtYXgtd2lkdGg6IDMuNXJlbTtcclxuICAgICAgICAgIG1pbi13aWR0aDogMy41cmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmxpc3Qge1xyXG4gICAgbWF4LXdpZHRoOiA0MCU7XHJcbiAgICBtaW4td2lkdGg6IDQwJTtcclxuICB9XHJcbn1cclxuIl19 */';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/defect-form/defect-form.component.ts':
      /*!**********************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/defect-form/defect-form.component.ts ***!
  \**********************************************************************************/
      /*! exports provided: DefectFormComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'DefectFormComponent', function() {
          return DefectFormComponent;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! lodash-es */ './node_modules/lodash-es/lodash.js'
        );
        /* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! rxjs */ './node_modules/rxjs/_esm5/index.js'
        );
        /* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! rxjs/operators */ './node_modules/rxjs/_esm5/operators/index.js'
        );
        /* harmony import */ var _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../shared/components/component-sidebar/page-toc.service */ './src/app/shared/components/component-sidebar/page-toc.service.ts'
        );
        /* harmony import */ var _shared_components_dynamic_attributes_dynamic_attributes_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../shared/components/dynamic-attributes/dynamic-attributes.service */ './src/app/shared/components/dynamic-attributes/dynamic-attributes.service.ts'
        );
        /* harmony import */ var _shared_constants_app_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../../shared/constants/app-constants */ './src/app/shared/constants/app-constants.ts'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../../shared/constants/bido-attribute-constants */ './src/app/shared/constants/bido-attribute-constants.ts'
        );
        /* harmony import */ var _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../../shared/constants/bido-function-type-constants */ './src/app/shared/constants/bido-function-type-constants.ts'
        );
        /* harmony import */ var _shared_constants_bidt_stock_mvt_constants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../../shared/constants/bidt-stock-mvt-constants */ './src/app/shared/constants/bidt-stock-mvt-constants.ts'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../../shared/constants/control-config-constants */ './src/app/shared/constants/control-config-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../../shared/constants/lang-constants */ './src/app/shared/constants/lang-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ../../../../shared/enums/table-column-filter-mode.enum */ './src/app/shared/enums/table-column-filter-mode.enum.ts'
        );
        /* harmony import */ var _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ../../../../shared/enums/table-selection-mode.enum */ './src/app/shared/enums/table-selection-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ../../../../shared/services/confirmation.service */ './src/app/shared/services/confirmation.service.ts'
        );
        /* harmony import */ var _shared_services_dassault_field_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
          /*! ../../../../shared/services/dassault/field.service */ './src/app/shared/services/dassault/field.service.ts'
        );
        /* harmony import */ var _shared_services_date_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
          /*! ../../../../shared/services/date.service */ './src/app/shared/services/date.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
          /*! ../../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
          /*! ../../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
          /*! ../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
          /*! ../../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
          /*! ../../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
          /*! ../../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
          /*! ../../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
          /*! ../../../../shared/types/form-page-component */ './src/app/shared/types/form-page-component.ts'
        );
        /* harmony import */ var _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
          /*! ../../../../shared/utils/bido-family-variant-utils */ './src/app/shared/utils/bido-family-variant-utils.ts'
        );
        /* harmony import */ var _shared_utils_bire_attribute_value_utils__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
          /*! ../../../../shared/utils/bire-attribute-value-utils */ './src/app/shared/utils/bire-attribute-value-utils.ts'
        );
        /* harmony import */ var _shared_utils_bire_family_variant_utils__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
          /*! ../../../../shared/utils/bire-family-variant-utils */ './src/app/shared/utils/bire-family-variant-utils.ts'
        );
        /* harmony import */ var _shared_utils_dom_utils__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
          /*! ../../../../shared/utils/dom-utils */ './src/app/shared/utils/dom-utils.ts'
        );
        /* harmony import */ var _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
          /*! ../../../../shared/utils/file-utils */ './src/app/shared/utils/file-utils.ts'
        );
        /* harmony import */ var _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
          /*! ../../../../shared/utils/list-utils */ './src/app/shared/utils/list-utils.ts'
        );
        /* harmony import */ var _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
          /*! ../../../../shared/utils/select-item-utils */ './src/app/shared/utils/select-item-utils.ts'
        );
        /* harmony import */ var _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
          /*! ../../../../shared/utils/string-utils */ './src/app/shared/utils/string-utils.ts'
        );
        /* harmony import */ var _shared_utils_workflow_utils__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
          /*! ../../../../shared/utils/workflow-utils */ './src/app/shared/utils/workflow-utils.ts'
        );
        /* harmony import */ var _overlay_overlay_service__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
          /*! ../../../overlay/overlay.service */ './src/app/main/overlay/overlay.service.ts'
        );
        /* harmony import */ var _event_create_event_create_service__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
          /*! ../event-create/event-create.service */ './src/app/main/fleet-management/event/event-create/event-create.service.ts'
        );
        /* harmony import */ var _event_service__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
          /*! ../event.service */ './src/app/main/fleet-management/event/event.service.ts'
        );
        /* harmony import */ var _status_status_defect_status_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
          /*! ./status/status/defect-status.component */ './src/app/main/fleet-management/event/defect-form/status/status/defect-status.component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __assign =
          (undefined && undefined.__assign) ||
          function() {
            __assign =
              Object.assign ||
              function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                  s = arguments[i];
                  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
              };
            return __assign.apply(this, arguments);
          };
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };
        var __read =
          (undefined && undefined.__read) ||
          function(o, n) {
            var m = typeof Symbol === 'function' && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
              r,
              ar = [],
              e;
            try {
              while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
              e = { error: error };
            } finally {
              try {
                if (r && !r.done && (m = i['return'])) m.call(i);
              } finally {
                if (e) throw e.error;
              }
            }
            return ar;
          };
        var __spread =
          (undefined && undefined.__spread) ||
          function() {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
          };

        var TSN_COLOR = '#D3C632';
        var CSN_COLOR = '#42A5F5';
        var DefectFormComponent = /** @class */ (function(_super) {
          __extends(DefectFormComponent, _super);
          function DefectFormComponent(
            favoriteService,
            loaderService,
            messageService,
            pageTocService,
            serializationService,
            tabService,
            sessionService,
            confirmationService,
            dateService,
            dynamicAttributesService,
            eventService,
            propertiesService,
            translateService,
            davFieldService,
            _overlayService,
            eventCreateService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService,
                pageTocService
              ) || this;
            _this.sessionService = sessionService;
            _this.confirmationService = confirmationService;
            _this.dateService = dateService;
            _this.dynamicAttributesService = dynamicAttributesService;
            _this.eventService = eventService;
            _this.propertiesService = propertiesService;
            _this.translateService = translateService;
            _this.davFieldService = davFieldService;
            _this._overlayService = _overlayService;
            _this.eventCreateService = eventCreateService;
            _this.defectIsCritical = true;
            _this.dbDefectIsCritical = true;
            _this.bireTaskDTO = {};
            _this.deletedCorrectiveActionComponent = [];
            _this.isFromNewAWToAccessDefectMode = true; // TODO handle this case
            _this.melAlertObject = {};
            _this.isReportDataLoading = false;
            _this.tabAttributesId = 'attributes';
            _this.tabDefectId = 'defect';
            _this.tabDocumentsId = 'documents';
            _this.selectedAnchor = undefined;
            _this.registerPageTocEntrySelectedObservable();
            _this.openDefectTab();
            _this.setConstants();
            _this.setCorrectiveActionComponentsTableColList();
            _this.setDocumentTableColList();
            _this.showMeasureChart = false;
            _this.initChart();
            _this.initMeasureChart();
            _this.loadMeasureTablesHeader();
            _this.setNavigationLinkList();
            _this.userWorkflowSubject.subscribe(function(userWorkflow) {
              _this.updateWorkflowStatusList();
            });
            _this.init();
            return _this;
          }
          DefectFormComponent.prototype.getComponentName = function() {
            return _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_12__['ComponentConstants']
              .FLE_DEFECT_FORM;
          };
          DefectFormComponent.prototype.ngOnInit = function() {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            this.updateOpenMode(this.componentData.openMode);
            if (!this.componentData.objectId) {
              this.displayComponentContext('tab.createMode', this.isCreateOpenMode);
            }
            this.loadDefect();
            this.toc = [
              {
                id: 'mainAnchor',
                anchor: this.mainAnchor,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__['LangConstants'].ENGLISH_CODE
                    ? 'Main Information'
                    : 'Informations principales'
              },
              {
                id: 'defectAnchor',
                anchor: this.defectAnchor,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__['LangConstants'].ENGLISH_CODE
                    ? 'Defect'
                    : 'Défaut'
              },
              {
                id: 'circumstances',
                anchor: this.cirumstances,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__['LangConstants'].ENGLISH_CODE
                    ? 'Circumstances'
                    : 'Circonstances'
              },
              {
                id: 'correctiveActionAnchor',
                anchor: this.correctiveActionAnchor,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__['LangConstants'].ENGLISH_CODE
                    ? 'Corrective Action'
                    : 'Action corrective'
              },
              {
                id: 'attributeAnchor',
                anchor: this.attributeAnchor,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__['LangConstants'].ENGLISH_CODE
                    ? 'Attributes'
                    : 'Attributs'
              },
              {
                id: 'deferralAnchor',
                anchor: this.deferralAnchor,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__['LangConstants'].ENGLISH_CODE
                    ? 'Deferral'
                    : 'Déferrement'
              },
              {
                id: 'assetAtDate',
                anchor: this.assetAtDate,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__['LangConstants'].ENGLISH_CODE
                    ? 'Asset At Date'
                    : 'Individu à date'
              },
              {
                id: 'arisingEvents',
                anchor: this.arisingEvents,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__['LangConstants'].ENGLISH_CODE
                    ? 'Arising Events'
                    : 'Evènements induits'
              },
              {
                id: 'documentAnchor',
                anchor: this.documentAnchor,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__['LangConstants'].ENGLISH_CODE
                    ? 'Documents'
                    : 'Documents'
              },
              {
                id: 'diffusion',
                anchor: this.diffusion,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__['LangConstants'].ENGLISH_CODE
                    ? 'Diffusion'
                    : 'Diffusion'
              }
            ];
            setTimeout(function() {
              _this.setSelectedAnchor('mainAnchor');
            });
          };
          DefectFormComponent.prototype.loadMeasureTablesHeader = function() {
            this.measuresTableCols = [
              { field: 'counterCode', alignment: 'left' },
              { field: 'cumulatedCounterValue', alignment: 'left' },
              { field: 'counterUnit', alignment: 'left' },
              // { field: 'ratingText', alignment: 'left' },
              // { field: 'ratingCounterValue', alignment: 'left' },
              { field: 'remainingValue', alignment: 'left' },
              { field: 'referenceValue', alignment: 'left' },
              { field: 'source', alignment: 'left' }
            ];
            this.arisingEventTableCols = [
              { field: 'notificationCode', alignment: 'left' },
              { field: 'asset', alignment: 'left' },
              { field: 'eventType', alignment: 'left' },
              { field: 'notificationSubject', alignment: 'left' },
              { field: 'reportingPeriodStartDate', alignment: 'left' },
              { field: 'reportingDate', alignment: 'left' },
              { field: 'reportingPeriodEndDate', alignment: 'left' }
            ];
            this.diffusionTableCols = [
              { field: 'customerCode', alignment: 'left' },
              { field: 'customerName', alignment: 'left' },
              { field: 'contactName', alignment: 'left' },
              { field: 'email', alignment: 'left' }
            ];
            this.symptomContextCols = [
              // { field: 'code', alignment: 'left' },
              { field: 'name', alignment: 'left' },
              { field: 'unit', alignment: 'left' },
              { field: 'value', alignment: 'left' }
            ];
            this.symptomRowCols = [
              { field: 'symptomName', alignment: 'left' },
              { field: 'symptomComment', alignment: 'left' }
            ];
          };
          DefectFormComponent.prototype.isSelectedAnchor = function(anchorId) {
            return anchorId === this.selectedAnchor;
          };
          DefectFormComponent.prototype.setSelectedAnchor = function(anchorId) {
            this.pageTocService.setAnchorSelected(anchorId);
            this.selectedAnchor = anchorId;
          };
          DefectFormComponent.prototype.registerPageTocEntrySelectedObservable = function() {
            var _this = this;
            this.pageTocService.pageTocEntrySelected$
              .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['takeUntil'])(this.unsubscribe))
              .subscribe(function(pageTocEntrySelected) {
                _this.selectedAnchor = pageTocEntrySelected;
              });
          };
          DefectFormComponent.prototype.cancelDefect = function() {
            this.updateOpenMode(
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read
            );
            this.clearErrors();
            this.reloadDefect();
          };
          DefectFormComponent.prototype.editDefect = function() {
            this.updateOpenMode(
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Write
            );
          };
          DefectFormComponent.prototype.openAttributesTab = function() {
            this.currentTabId = this.tabAttributesId;
          };
          DefectFormComponent.prototype.openDefectTab = function() {
            this.currentTabId = this.tabDefectId;
          };
          DefectFormComponent.prototype.openDocumentsTab = function() {
            this.currentTabId = this.tabDocumentsId;
          };
          DefectFormComponent.prototype.reloadDefect = function() {
            this.init();
            this.loadDefect();
          };
          DefectFormComponent.prototype.isFromNewAWToAccessDefect = function() {
            // if (this.getIsNewAW()) {
            var isNew = true;
            if (isNew) {
              this.isFromNewAWToAccessDefectMode = true;
            }
          };
          DefectFormComponent.prototype.saveDefect = function() {
            var _this = this;
            var saved = this.validateWorkflowMissingFields();
            if (!saved) {
              this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');
              return saved;
            }
            if (!!this.sessionService.loggedUser) {
              this.defect.statusUser = this.sessionService.loggedUser.login;
            }
            var bidoNotification = {
              notificationCode: this.defect.notificationCode,
              typeCode: this.defect.typeCode,
              reportingPeriodStartDate: this.defect.reportingPeriodStartDate,
              reportingPeriodEndDate: this.defect.reportingPeriodEndDate,
              operatorCode: this.defect.operatorCode,
              equipmentCode: this.masterEquipment.equipmentCode,
              status: this.defect.status,
              statusUser: this.defect.statusUser,
              notificationSubject: this.defect.notificationSubject,
              eventSequenceCode: this.defect.eventSequenceCode,
              bidoNotificationTypeDTO: {}
            };
            var docRemoved = [];
            var docUpdated = [];
            this.setDocumentTabData(docRemoved, docUpdated);
            // Attributes
            this.bireNotificationAttributes = this.dynamicAttributesService.toBireEventAttributeId(
              this.defect.notificationCode,
              this.dynamicAttributes
            );
            this.setAttributeArray();
            bidoNotification.bidoRootCauseDTO = this.setRootCauseTabData();
            // TODO: need to check the purpose of below code.
            // this.modifyStatus(bidoNotification);
            var saveEventInput = {
              bidoNotificationDTO: bidoNotification,
              bireNotificationAttributes: this.bireNotificationAttributes,
              bidoDocumentAddedList: this.documentAddedList,
              bidoDocumentRemovedList: docRemoved,
              bidoDocumentUpdatedList: docUpdated,
              deletedCorrectiveActionComponent: this.deletedCorrectiveActionComponent
            };
            var circumstancesDTO = this.setCircumstanceTabData();
            if (Object.keys(circumstancesDTO).length > 0) {
              saveEventInput.saveBidoEventExtensionCustomDTO = circumstancesDTO;
            }
            this.isChangeInStatus(bidoNotification); // Check whether defect tab is changed
            this.showSaveSpinner = true;
            this.eventCreateService.saveEvent(saveEventInput).subscribe(
              function(res) {
                _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnUpdateDefect'));
                _this.calculateMELAlert();
                _this.saveCorrectiveAction();
                _this.deletedCorrectiveActionComponent = [];
                _this.reloadDefect();
                _this.updateOpenMode(
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read
                );
                _this.showSaveSpinner = false;
              },
              function(error) {
                _this.showSaveSpinner = false;
              }
            );
            return saved;
          };
          DefectFormComponent.prototype.validateWorkflowMissingFields = function() {
            var missingFields = this.checkMandatoryFields(
              __assign(
                {},
                this.defect,
                { contextTableDataTitle: this.contextTableData },
                this.contextTabData,
                {
                  defectDetectionContext: this.defectDetectionContext,
                  defectIsCritical: this.defectIsCritical,
                  defectAuthor: this.defectAuthor,
                  defectLastAuthor: this.defectLastAuthor
                },
                this.masterEquipment,
                {
                  sn2: this.masterEquipment.sn,
                  sn3: this.masterEquipment.sn,
                  defectAtaCode: this.defectAtaCode.chapter,
                  notificationCode: this.defect.notificationCode,
                  deferralFlightRestriction: this.deferralFlightRestriction,
                  bidoMeasuresDisplayedTitle: this.bidoMeasuresDisplayed,
                  deferralDelayAuthorizedValue: this.deferralDelayAuthorizedValue,
                  defectCAWPDescription: this.defectCAWPDescription,
                  defectProposedTask: this.defectProposedTask,
                  functionLocationStr: this.functionLocationStr,
                  arisingEventTableDataTitle: this.arisingEventTableData,
                  deferralDelayAuthorizationNumber: this.deferralDelayAuthorizationNumber,
                  isMELAlertObject: this.isMELAlertObject,
                  documentTableTitle: this.documentTable,
                  deferralDelayAuthorizedUnit: this.deferralDelayAuthorizedUnit,
                  selectedInspectionMean: this.selectedInspectionMean,
                  defectLogNumber: this.defectLogNumber,
                  defectExtensionNumber: this.defectExtensionNumber,
                  defectEquipmentAssetCode: this.defectEquipmentAssetCode,
                  rootCauseQuantity: this.rootCauseQuantity,
                  diffusionTableDataTitle: this.diffusionTableData,
                  deferralDelayCategory: this.deferralDelayCategory,
                  defectEquipmentName: this.defectEquipmentName,
                  selectedFaultCode: this.selectedFaultCode,
                  rootCauseDefectLocation: this.rootCauseDefectLocation,
                  reportTable: this.reportTable,
                  symptomRowDataTitle: this.symptomRowData,
                  symptomParameterTableDataTitle: this.symptomParameterTableData,
                  correctiveActionComponentTableTitle: this.correctiveActionComponentTable,
                  correctiveActionDescription: this.correctiveActionDescription,
                  deferralLastAuthor: this.deferralLastAuthor,
                  defectEquipmentPn: this.defectEquipmentPn,
                  rootCausePn: this.rootCausePn,
                  defectSrmReference: this.defectSrmReference,
                  defectCAWODescription: this.defectCAWODescription,
                  deferralAuthor: this.deferralAuthor,
                  notificationAsset: this.notificationAsset,
                  rootCauseDefectName: this.rootCauseDefectName,
                  rootCauseComment: this.rootCauseComment,
                  defectEquipmentSn: this.defectEquipmentSn,
                  rootCauseFlCode: this.rootCauseFlCode,
                  selectedRootCause: this.selectedRootCause,
                  dynamicAttributes: this.dynamicAttributes
                }
              )
            );
            return missingFields.length === 0;
          };
          DefectFormComponent.prototype.calculateMELAlert = function() {
            var _this = this;
            if (!!this.defect.bidoRootCauseDTO) {
              this.eventCreateService.calculateMELAlert(this.defect.bidoRootCauseDTO).subscribe(function(res) {
                if (!!res && !!res.message) {
                  _this.isMELAlertVisible = true;
                  _this.isMELAlertObject = res.message;
                  _this.melAlertObject = res;
                } else {
                  _this.isMELAlertVisible = false;
                }
              });
            }
          };
          // private modifyStatus(bidoNotificationDTO: BidoNotificationDTO) {
          //   if (
          //     !!this.defectAuthor ||
          //     !!this.defectLastAuthor ||
          //     !!this.defectIsCritical ||
          //     !!this.defectLogNumber ||
          //     !!this.defect.notificationSubject ||
          //     !!this.rootCauseDefectName ||
          //     !!this.rootCauseDefectLocation ||
          //     !!this.selectedInspectionMean ||
          //     !!this.defectSrmReference ||
          //     !!this.defectDetectionContext ||
          //     !!this.rootCauseComment ||
          //     !!this.defectEquipmentAssetCode ||
          //     !!this.rootCauseFlCode ||
          //     !!this.rootCausePn ||
          //     !!this.rootCauseQuantity
          //   ) {
          //     this.defect.status = AWPropertiesConstants.EVENT_STATUS_OPENED_KEY;
          //     bidoNotificationDTO.status = AWPropertiesConstants.EVENT_STATUS_OPENED_KEY;
          //   }
          // }
          DefectFormComponent.prototype.generateOrUpdateWorkOrder = function(bireTaskId) {
            var _this = this;
            if (
              this.defectContextWP &&
              this.defectContextWO &&
              this.defect.notificationCode &&
              this.defectProposedTask
            ) {
              var createOrUpdateDefectTargetWorkOrderInput = {
                bireTaskDTOId: bireTaskId,
                defectOriginWorkPackageData: this.defectContextWP,
                defectOriginWorkOrderData: this.defectContextWO,
                woSource: this.defect.notificationCode,
                correctiveActionDescription: this.correctiveActionDescription,
                defectProposedTask: this.defectProposedTask
              };
              this.eventService
                .createOrUpdateDefectTargetWorkOrder(createOrUpdateDefectTargetWorkOrderInput)
                .subscribe(function(defectTargetWorkOrder) {
                  if (defectTargetWorkOrder) {
                    _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnCreateOrUpdate'));
                  }
                });
            }
          };
          DefectFormComponent.prototype.saveCorrectiveAction = function() {
            var _this = this;
            if (this.bireTaskDTO.taskCode && this.bireTaskDTO.taskVersion) {
              var bireTaskDtoId = {
                taskCode: this.bireTaskDTO.taskCode,
                taskVersion: this.bireTaskDTO.taskVersion
              };
              this.generateOrUpdateWorkOrder(bireTaskDtoId);
            }
            var bidtStockMvtDTOList = [];
            this.correctiveActionComponentTable.forEach(function(row) {
              var mvtWay;
              var status;
              // if (AWPropertiesConstants.DECISION_BBIS_INSTALL_KEY === row.decision) {
              if (row.decision === 'Install') {
                mvtWay =
                  _shared_constants_bidt_stock_mvt_constants__WEBPACK_IMPORTED_MODULE_11__['BidtStockMvtConstants']
                    .MVT_WAY_DEBIT;
                if (row.isRequestForPart) {
                  if (!status) {
                    status =
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .MM_MVT_STATUS_PLANNED_KEY;
                  }
                } else {
                  status = undefined;
                }
              } else {
                mvtWay =
                  _shared_constants_bidt_stock_mvt_constants__WEBPACK_IMPORTED_MODULE_11__['BidtStockMvtConstants']
                    .MVT_WAY_CREDIT;
                if (!status) {
                  status =
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .MM_MVT_STATUS_PLANNED_KEY;
                }
              }
              var dto = {
                birePnPnCode: row.birePnPnCode,
                stockMvtSn: row.stockMvtSn,
                stockMvtQuantity: row.stockMvtQuantity,
                mvtStatus: status,
                stockMvtWay: mvtWay,
                bidoNotificationNotificationCode: _this.defect.notificationCode,
                bidmWorkOrderProjectId: !!_this.defectTargetWorkOrder
                  ? _this.defectTargetWorkOrder.projectId
                  : undefined,
                bidmWorkOrderWoId: !!_this.defectTargetWorkOrder ? _this.defectTargetWorkOrder.woId : undefined,
                id: row.id
              };
              bidtStockMvtDTOList.push(dto);
            });
            bidtStockMvtDTOList.forEach(function(dto) {
              _this.eventCreateService.addOrUpdate(dto).subscribe(function(res) {
                // TODO
              });
            });
          };
          DefectFormComponent.prototype.setDocumentTabData = function(docRemoved, docUpdated) {
            var _this = this;
            this.documentRemovedList.forEach(function(document) {
              var doc = {
                docCode: document.docCode
              };
              docRemoved.push(doc);
            });
            this.documentUpdatedList.forEach(function(document) {
              if (!!document) {
                var doc = {
                  bidoDocumentationDTO: document,
                  docCategory: document.docType,
                  docDescription: document.docDescription,
                  docLanguage: document.docLanguage,
                  docName: document.docName,
                  docVersion: document.docVersion,
                  endOfValidityDate: document.docEndOfValidityDate,
                  publicationDate: document.docPublicationDate
                };
                docUpdated.push(doc);
              }
            });
            this.documentAddedList.forEach(function(doc) {
              doc.notificationCode = _this.defect.notificationCode;
            });
          };
          DefectFormComponent.prototype.setRootCauseTabData = function() {
            // Setting asset block
            if (!!this.defectEquipmentAssetCode) {
              if (!this.defect.bidoRootCauseDTO) {
                this.defect.bidoRootCauseDTO = {};
                this.defect.bidoRootCauseDTO.rootCauseAssetCode = this.defectEquipmentAssetCode;
              } else {
                this.defect.bidoRootCauseDTO.rootCauseAssetCode = this.defectEquipmentAssetCode;
              }
            }
            if (!!this.rootCausePn) {
              if (!this.defect.bidoRootCauseDTO) {
                this.defect.bidoRootCauseDTO = {};
                this.defect.bidoRootCauseDTO.rootCausePn = this.rootCausePn;
              } else {
                this.defect.bidoRootCauseDTO.rootCausePn = this.rootCausePn;
              }
            }
            if (!!this.rootCauseQuantity) {
              if (!this.defect.bidoRootCauseDTO) {
                this.defect.bidoRootCauseDTO = {};
                this.defect.bidoRootCauseDTO.rootCauseQuantity = this.rootCauseQuantity;
              } else {
                this.defect.bidoRootCauseDTO.rootCauseQuantity = this.rootCauseQuantity;
              }
            }
            if (!!this.defectAtaCode) {
              if (!this.defect.bidoRootCauseDTO) {
                this.defect.bidoRootCauseDTO = {};
              }
              this.defect.bidoRootCauseDTO.rootCauseChapter = this.defectAtaCode.chapter;
              this.defect.bidoRootCauseDTO.rootCauseSection = this.defectAtaCode.section;
              this.defect.bidoRootCauseDTO.rootCauseSubject = this.defectAtaCode.subject;
              this.defect.bidoRootCauseDTO.rootCauseSheet = this.defectAtaCode.sheet;
              this.defect.bidoRootCauseDTO.rootCauseMark = this.defectAtaCode.marks;
            }
            if (!!this.rootCauseFlCode) {
              if (!this.defect.bidoRootCauseDTO) {
                this.defect.bidoRootCauseDTO = {};
                this.defect.bidoRootCauseDTO.rootCauseFlCode = this.rootCauseFlCode;
              } else {
                this.defect.bidoRootCauseDTO.rootCauseFlCode = this.rootCauseFlCode;
              }
            }
            // Setting defect block
            if (!!this.defect.bidoRootCauseDTO) {
              this.defect.bidoRootCauseDTO.defectLocation = this.rootCauseDefectLocation;
              this.defect.bidoRootCauseDTO.defectName = this.rootCauseDefectName;
              this.defect.bidoRootCauseDTO.rootCauseComment = this.rootCauseComment;
            }
            return this.defect.bidoRootCauseDTO || {};
          };
          DefectFormComponent.prototype.addATACode = function(ev) {
            this.defectAtaCode = ev;
          };
          DefectFormComponent.prototype.setAttributeArray = function() {
            var attribute1 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DEFECT_AUTHOR.toString(),
              attributeValue: this.defectAuthor
            };
            var attribute2 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DEFECT_IS_CRITICAL.toString(),
              attributeValue: this.defectIsCritical.toString()
            };
            var attribute3 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DEFECT_LOG_NUMBER.toString(),
              attributeValue: this.defectLogNumber
            };
            var attribute4 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DEFECT_INSPECTION_MEAN.toString(),
              attributeValue: this.selectedInspectionMean
            };
            var attribute5 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_FAULT_CODE.toString(),
              attributeValue: this.selectedFaultCode
            };
            var defectContextVal =
              !!this.defectContext && !!this.defectContext.defectDetectionContext
                ? this.defectContext.defectDetectionContext
                : this.defectDetectionContext;
            var attribute6 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DEFECT_DETECTION_CONTEXT.toString(),
              attributeValue: defectContextVal
            };
            var attribute7 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DEFECT_CORRECTIVE_ACTION_AUTHOR.toString(),
              attributeValue: this.correctiveActionAuthor
            };
            var attribute8 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DD_TASK_PROPOSED_TO_PROCESS.toString(),
              attributeValue: this.defectProposedTask
            };
            var attribute9 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DEFECT_CORRECTIVE_ACTION_DESCRIPTION.toString(),
              attributeValue: this.correctiveActionDescription
            };
            var attribute10 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DEFECT_SRM_REFERENCE.toString(),
              attributeValue: this.defectSrmReference
            };
            var attribute11 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DD_DELAY_CATEGORY.toString(),
              attributeValue: this.deferralDelayCategory
            };
            var attribute12 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DD_DELAY_AUTHORIZED_VALUE.toString(),
              attributeValue: this.deferralDelayAuthorizedValue
            };
            var attribute13 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DD_DELAY_AUTHORIZATION_NUMBER.toString(),
              attributeValue: this.deferralDelayAuthorizationNumber
            };
            var attribute14 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DEFECT_EXTENSION.toString(),
              attributeValue: this.defectExtensionNumber
            };
            var attribute15 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DEFECT_FLIGHT_RESTRICTIONS.toString(),
              attributeValue: this.deferralFlightRestriction
            };
            var attribute16 = {
              notificationCode: this.defect.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_DD_DELAY_AUTHORIZED_UNIT.toString(),
              attributeValue: this.deferralDelayAuthorizedUnit
            };
            this.bireNotificationAttributes.push(attribute1);
            this.bireNotificationAttributes.push(attribute2);
            this.bireNotificationAttributes.push(attribute3);
            this.bireNotificationAttributes.push(attribute4);
            this.bireNotificationAttributes.push(attribute5);
            this.bireNotificationAttributes.push(attribute6);
            this.bireNotificationAttributes.push(attribute7);
            this.bireNotificationAttributes.push(attribute8);
            this.bireNotificationAttributes.push(attribute9);
            this.bireNotificationAttributes.push(attribute10);
            this.bireNotificationAttributes.push(attribute11);
            this.bireNotificationAttributes.push(attribute12);
            this.bireNotificationAttributes.push(attribute13);
            this.bireNotificationAttributes.push(attribute14);
            this.bireNotificationAttributes.push(attribute15);
            this.bireNotificationAttributes.push(attribute16);
          };
          DefectFormComponent.prototype.createComponentRow = function(component) {
            var formattedDecision = '';
            var isRequestForPart = false;
            if (!!component.stockMvtWay) {
              var selectedDecision = void 0;
              if (
                component.stockMvtWay ===
                _shared_constants_bidt_stock_mvt_constants__WEBPACK_IMPORTED_MODULE_11__['BidtStockMvtConstants']
                  .MVT_WAY_DEBIT
              ) {
                selectedDecision = this.correctiveActionComponentDecisionList.find(function(decision) {
                  return (
                    decision.value ===
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .DECISION_BBIS_INSTALL_KEY
                  );
                });
                isRequestForPart = !!component.mvtStatus;
              } else {
                selectedDecision = this.correctiveActionComponentDecisionList.find(function(decision) {
                  return (
                    decision.value ===
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .DECISION_BBTWS_REMOVE_KEY
                  );
                });
              }
              formattedDecision = !!selectedDecision
                ? _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].orEmpty(
                    selectedDecision.label
                  )
                : '';
            }
            var componentRow = {
              isRequestForPart: isRequestForPart,
              birePnPnCode: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].orEmpty(
                component.birePnPnCode
              ),
              decision: formattedDecision,
              stockMvtQuantity: !!component.stockMvtQuantity
                ? _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].orEmpty(
                    component.stockMvtQuantity
                  )
                : '1',
              stockMvtSn: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].orEmpty(
                component.stockMvtSn
              ),
              id: component.id
            };
            return componentRow;
          };
          DefectFormComponent.prototype.createDocumentRow = function(document) {
            var selectedDocumentType = this.documentTypeList.find(function(documentType) {
              return !!document.docCategory && documentType.value === document.docCategory;
            });
            var documentRow = {
              docExtension: this.formatDocExtension(document),
              docName: document.docName,
              docPublicationDate: this.dateService.dateToString(document.docPublicationDate),
              docSize: this.formatDocSize(document),
              docType: !!selectedDocumentType
                ? _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].orEmpty(
                    selectedDocumentType.label
                  )
                : '',
              isChecked: false
            };
            return documentRow;
          };
          DefectFormComponent.prototype.displayComponents = function(defectTargetWorkOrderData) {
            var _this = this;
            this.eventService
              .isBuildingBlockInstalled(
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_10__[
                  'BidoFunctionTypeConstants'
                ].MODULE_MM
              )
              .subscribe(function(isBuildingBlockInstalled) {
                if (!!isBuildingBlockInstalled && isBuildingBlockInstalled) {
                  var findAllBidtStockMvtByCriteriaInput = {
                    bidtStockMvtDTO: {}
                  };
                  if (
                    !!defectTargetWorkOrderData &&
                    !!defectTargetWorkOrderData.projectId &&
                    !!defectTargetWorkOrderData.woId
                  ) {
                    var workOrderDTOId = {
                      projectId: defectTargetWorkOrderData.projectId,
                      woId: defectTargetWorkOrderData.woId
                    };
                    findAllBidtStockMvtByCriteriaInput.bidmWorkOrderDTOId = workOrderDTOId;
                  } else if (!!_this.defect && !!_this.defect.notificationCode) {
                    var notificationDTOId = {
                      notificationCode: _this.defect.notificationCode
                    };
                    findAllBidtStockMvtByCriteriaInput.bidoNotificationDTOId = notificationDTOId;
                  }
                  _this.eventService
                    .findAllDefectPartsByCriteria(findAllBidtStockMvtByCriteriaInput)
                    .subscribe(function(bidtStockMvts) {
                      _this.correctiveActionComponentList = !!bidtStockMvts ? bidtStockMvts : [];
                      _this.correctiveActionComponentTable = _this.correctiveActionComponentList.map(function(
                        component
                      ) {
                        return _this.createComponentRow(component);
                      });
                    });
                }
              });
          };
          DefectFormComponent.prototype.formatDocExtension = function(document) {
            return _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils']
              .getExtension(document.docName)
              .toUpperCase();
          };
          DefectFormComponent.prototype.formatDocSize = function(document) {
            return !!document.docFile
              ? _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].getFormattedSize(
                  document.docFile.length
                )
              : '';
          };
          DefectFormComponent.prototype.getDynamicAttributesObservable = function(attributeCategory) {
            return this.eventService.findAllBidoAttributeByAttributeCategory(attributeCategory);
          };
          DefectFormComponent.prototype.init = function() {
            this.componentSubtitle = '';
            this.customerOperatorName = '';
            this.defect = {
              bidoNotificationTypeDTO: {}
            };
            this.dbDefect = {
              bidoNotificationTypeDTO: {}
            };
            this.defectAttributeList = [];
            this.notificationAsset = '';
            this.pnTypeList = [];
            this.statusList = [];
            this.typeList = [];
            this.correctiveActionAuthor = undefined;
            this.correctiveActionBlockVisibility = false;
            this.correctiveActionComponentTable = [];
            this.correctiveActionComponentList = [];
            this.correctiveActionLastAuthor = undefined;
            this.correctiveActionDescription = undefined;
            this.defectAtaCode = {};
            this.defectAskForDeferralVisibility = false;
            this.defectAuthor = undefined;
            this.defectBlockVisibility = false;
            this.defectCAWODescription = undefined;
            this.defectCAWPDescription = undefined;
            this.defectDetectionContext = undefined;
            this.defectEquipmentAssetCode = undefined;
            this.defectEquipmentName = undefined;
            this.defectEquipmentPn = undefined;
            this.defectEquipmentSn = undefined;
            this.defectExtensionNumber = undefined;
            this.defectIsCritical = true;
            this.defectLastAuthor = undefined;
            this.defectLocationList = [];
            this.defectLogNumber = undefined;
            this.defectNameList = [];
            this.defectProposedTask = undefined;
            this.defectTargetWorkOrder = undefined;
            this.defectTargetWorkPackage = undefined;
            this.deferralAuthor = undefined;
            this.defectBlockVisibility = false;
            this.deferralDelayAuthorizationNumber = undefined;
            this.deferralDelayAuthorizedUnit = undefined;
            this.deferralDelayAuthorizedValue = undefined;
            this.deferralDelayCategory = undefined;
            this.deferralFlightRestriction = undefined;
            this.deferralLastAuthor = undefined;
            this.deferralAcceptDeferralVisibility = false;
            this.deferralRefuseDeferralVisibility = false;
            this.delayAuthorizedUnitList = [];
            this.delayCategoryList = [];
            this.displayDefectAtaBlock = false;
            this.displayDefectEquipmentBlock = false;
            this.displayDefectFunctionalLocationBlock = false;
            this.displayDefectPartBlock = false;
            this.masterFamilyVariantCode = '';
            this.dynamicAttributes = [];
            this.flCodeList = [];
            this.inspectionMeanList = [];
            this.faultCodeList = [];
            this.isDefectAtachecked = false;
            this.isDefectEquipmentchecked = false;
            this.isDefectFunctionalLocationchecked = false;
            this.isDefectPartchecked = false;
            this.rootCauseComment = undefined;
            this.rootCauseDefectLocation = undefined;
            this.rootCauseDefectName = undefined;
            this.rootCauseFlCode = undefined;
            this.rootCausePn = undefined;
            this.rootCauseQuantity = undefined;
            this.selectedCorrectiveActionComponentList = [];
            this.selectedInspectionMean = undefined;
            this.selectedFaultCode = undefined;
            this.documentAddedList = [];
            this.propertyOperationalStatus = [];
            this.documentList = [];
            this.documentRemovedList = [];
            this.documentUpdatedList = [];
            this.documentTable = [];
            this.documentTypeList = [];
            this.selectedDocumentList = [];
            this.addedContextParam = [];
            this.addedContextParam = [];
            this.addedSymptomParam = [];
            this.currentCorrectiveActionComponent = undefined;
            this.currentCorrectiveActionComponentIndex = -1;
            this.correctiveActionComponentDialogOpenMode =
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read;
            this.showCorrectiveActionComponentDialog = false;
            this.updatesKeyMap = new Map();
            this.showCorrectiveActionTaskDialog = false;
            this.showCorrectiveActionWorkPackageDialog = false;
            this.showDefectEquipmentAssetCodeDialog = false;
            this.selectedDiffusion = [];
            this.diffusionTableData = [];
            this.partSearchInput = {};
            this.showDefectPartDialog = false;
            this.currentDocument = undefined;
            this.currentDocumentIndex = -1;
            this.documentDialogOpenMode =
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read;
            this.showDocumentDialog = false;
            this.reportListToShowVisible = false;
            this.bireNotificationAttributes = [];
            this.bidoMeasuresDisplayed = [];
            this.selectedMeasure = [];
            this.reportTableCols = [
              { field: 'fileName', width: '60%', alignment: 'left' },
              // { field: 'fileDesc', width: '60%', alignment: 'left' },
              { field: 'fileFormat', width: '20%', alignment: 'left' },
              { field: 'action', width: '20%', alignment: 'center' }
            ];
            this.reportTable = [];
            this.arisingEventTableData = [];
            this.selectedArisingEvents = [];
            this.symptomRowData = [];
            this.selectedSymptom = {};
            this.contextTableData = [];
            this.selectedSymptomParam = {};
            this.selectedContext = {};
            this.contextTabData = {};
            this.loadCorrectiveActionComponentDecisionList();
            this.loadDocumentTypeList();
            this.loadPnTypeList();
            this.loadReportTable();
            this.loadCircumstancesDropdown();
          };
          DefectFormComponent.prototype.loadReportTable = function() {
            this.reportTable = [
              {
                fileName: 'Defect Card',
                fileDesc: 'Defect Card',
                fileFormat: 'PDF',
                id: 'defectCard'
              }
            ];
          };
          DefectFormComponent.prototype.generateReport = function(data) {
            var _this = this;
            if (data === 'defectCard') {
              this.isReportDataLoading = true;
              this.eventCreateService.generateDefectCard(this.defect).subscribe(
                function(result) {
                  _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].downloadFile(
                    result.fileContent,
                    result.fileName
                  );
                  _this.isReportDataLoading = false;
                },
                function(err) {
                  _this.isReportDataLoading = false;
                }
              );
            }
          };
          DefectFormComponent.prototype.setSelectedDefect = function() {
            if (!!this.defect.bidoRootCauseDTO) {
              if (!!this.defect.bidoRootCauseDTO.rootCauseAssetCode) {
                this.selectedRootCause = 'defectEquipment';
              } else if (!!this.defect.bidoRootCauseDTO.rootCausePn) {
                this.selectedRootCause = 'defectPart';
              } else if (!!this.defect.bidoRootCauseDTO.rootCauseFlCode) {
                this.selectedRootCause = 'defectFunctionalLocation';
              } else if (!!this.defect.bidoRootCauseDTO.rootCauseChapter) {
                this.selectedRootCause = 'defectAta';
              } else {
                this.selectedRootCause = undefined;
              }
            }
          };
          DefectFormComponent.prototype.openLinkAssetEquipment = function(ev) {
            var _this = this;
            if (!!this.defect && !!this.defect.equipmentCode) {
              var bidoEquipmentDTOId = {
                equipmentCode: this.defect.equipmentCode
              };
              this.eventCreateService.findBidoEquipment(bidoEquipmentDTOId).subscribe(function(res) {
                _this.openAssetUC(
                  res.equipmentCode,
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read,
                  res.equipmentFunction
                );
              });
              ev.stopPropagation();
            }
          };
          DefectFormComponent.prototype.loadDefect = function() {
            var _this = this;
            this.loadDynamicAttributeList();
            if (!!this.componentData.objectId) {
              Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['forkJoin'])({
                eventCategoryList: this.propertiesService.getValue(
                  _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_14__['GenericPropertyConstants']
                    .EVENT_CATEGORY_MAP
                ),
                eventStatusList: this.propertiesService.getValue(
                  _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_14__['GenericPropertyConstants']
                    .EVENT_STATUS_MAP
                ),
                operationalStatusList: this.eventCreateService.getOperationalStatusMap(),
                notification: this.eventService.findBidoNotification(
                  this.serializationService.deserialize(this.componentData.objectId)
                )
              }).subscribe(function(result) {
                if (!!result.notification) {
                  _this.defect = result.notification;
                  _this.dbDefect = Object(lodash_es__WEBPACK_IMPORTED_MODULE_2__['cloneDeep'])(_this.defect);
                  _this.propertyOperationalStatus = result.operationalStatusList;
                  _this.setSelectedDefect();
                  _this.loadUserWorkflow(_this.defect.status);
                  if (!!_this.defect.bidoRootCauseDTO) {
                    if (
                      !!_this.defect.bidoRootCauseDTO.rootCauseSubject ||
                      !!_this.defect.bidoRootCauseDTO.rootCauseChapter ||
                      !!_this.defect.bidoRootCauseDTO.rootCauseSection ||
                      !!_this.defect.bidoRootCauseDTO.rootCauseMark ||
                      !!_this.defect.bidoRootCauseDTO.rootCauseSheet
                    ) {
                      _this.defectAtaCode = {
                        chapter: !!_this.defect.bidoRootCauseDTO.rootCauseChapter
                          ? _this.defect.bidoRootCauseDTO.rootCauseChapter
                          : '_',
                        marks: !!_this.defect.bidoRootCauseDTO.rootCauseMark
                          ? _this.defect.bidoRootCauseDTO.rootCauseMark
                          : '_',
                        section: !!_this.defect.bidoRootCauseDTO.rootCauseSection
                          ? _this.defect.bidoRootCauseDTO.rootCauseSection
                          : '_',
                        sheet: !!_this.defect.bidoRootCauseDTO.rootCauseSheet
                          ? _this.defect.bidoRootCauseDTO.rootCauseSheet
                          : '_',
                        subject: !!_this.defect.bidoRootCauseDTO.rootCauseSubject
                          ? _this.defect.bidoRootCauseDTO.rootCauseSubject
                          : '_'
                      };
                    }
                    _this.rootCauseComment = _this.defect.bidoRootCauseDTO.rootCauseComment;
                    _this.dbRootCauseComment = _this.rootCauseComment;
                    _this.rootCauseDefectLocation = _this.defect.bidoRootCauseDTO.defectLocation;
                    _this.dbRootCauseDefectLocation = _this.rootCauseDefectLocation;
                    _this.rootCauseDefectName = _this.defect.bidoRootCauseDTO.defectName;
                    _this.dbRootCauseDefectName = _this.rootCauseDefectName;
                    _this.rootCauseFlCode = _this.defect.bidoRootCauseDTO.rootCauseFlCode;
                    _this.rootCausePn = _this.defect.bidoRootCauseDTO.rootCausePn;
                    _this.rootCauseQuantity = _this.defect.bidoRootCauseDTO.rootCauseQuantity;
                    _this.defectEquipmentAssetCode = _this.defect.bidoRootCauseDTO.rootCauseAssetCode;
                    if (!!_this.defectEquipmentAssetCode) {
                      var dto = {
                        equipmentCode: _this.defectEquipmentAssetCode
                      };
                      _this.eventService.findBidoEquipment(dto).subscribe(function(equipment) {
                        _this.eventService
                          .getEquipmentRepresentation(equipment)
                          .subscribe(function(equipmentRepresentationResult) {
                            _this.defectEquipmentName = _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                              'StringUtils'
                            ].orEmpty(equipmentRepresentationResult);
                          });
                        _this.defectEquipmentPn = equipment.pnCode;
                        _this.defectEquipmentSn = equipment.sn;
                      });
                    }
                    _this.displayDefectAtaBlock =
                      !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                        _this.defect.bidoRootCauseDTO.rootCauseChapter
                      ) ||
                      !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                        _this.defect.bidoRootCauseDTO.rootCauseMark
                      ) ||
                      !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                        _this.defect.bidoRootCauseDTO.rootCauseSection
                      ) ||
                      !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                        _this.defect.bidoRootCauseDTO.rootCauseSheet
                      ) ||
                      !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                        _this.defect.bidoRootCauseDTO.rootCauseSubject
                      );
                    _this.displayDefectEquipmentBlock = !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                      'StringUtils'
                    ].isNullOrEmpty(_this.defect.bidoRootCauseDTO.rootCauseAssetCode);
                    _this.displayDefectFunctionalLocationBlock = !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                      'StringUtils'
                    ].isNullOrEmpty(_this.defect.bidoRootCauseDTO.rootCauseFlCode);
                    _this.displayDefectPartBlock = !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                      'StringUtils'
                    ].isNullOrEmpty(_this.defect.bidoRootCauseDTO.rootCausePn);
                    _this.calculateMELAlert();
                  }
                  Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['forkJoin'])([
                    _this.loadAttributeListByNotificationCode(_this.defect.notificationCode),
                    _this.loadTypeList(result.eventCategoryList)
                  ]).subscribe(function(_a) {
                    var _b = __read(_a, 2),
                      attributeList = _b[0],
                      typeList = _b[1];
                    _this.setAttributeListByNotificationCode(attributeList);
                    _this.setTypeList(typeList);
                    _this.setComponentSubtitle();
                  });
                  _this.loadAuthorAndLastAuthor(_this.defect.notificationCode);
                  _this.loadAttributeList();
                  if (!!_this.defect.equipmentCode) {
                    _this.loadEquipmentObject(_this.defect.equipmentCode);
                  }
                  if (!!_this.defect.notificationCode) {
                    _this.loadDocumentList(_this.defect.notificationCode);
                  }
                  if (
                    !_shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_35__['ListUtils'].isNullOrEmpty(
                      result.eventStatusList
                    )
                  ) {
                    _this.statusList = result.eventStatusList;
                  }
                  // Check if defect is into a work package
                  if (!!_this.defect.equipmentCode && !!_this.defect.notificationCode) {
                    var findDefectTargetWorkPackageInput = {
                      notificationCode: _this.defect.notificationCode
                    };
                    _this.eventService
                      .findDefectTargetWorkPackage(findDefectTargetWorkPackageInput)
                      .subscribe(function(workPackage) {
                        _this.defectTargetWorkPackage = workPackage;
                        if (
                          !!_this.defectTargetWorkPackage &&
                          !!_this.defect.equipmentCode &&
                          !!_this.defect.notificationCode
                        ) {
                          var findDefectTargetWorkOrderInput = {
                            equipmentCode: workPackage.assetCode,
                            notificationCode: _this.defect.notificationCode,
                            defectTargetWorkPackageDTO: workPackage
                          };
                          _this.eventService
                            .findDefectTargetWorkOrder(findDefectTargetWorkOrderInput)
                            .subscribe(function(workOrder) {
                              _this.defectTargetWorkOrder = workOrder;
                              _this.displayComponents(_this.defectTargetWorkOrder);
                              _this.setWorkPackageAndWorkOrderDescriptions(workPackage, workOrder);
                            });
                        } else {
                          _this.displayComponents({});
                        }
                      });
                    _this.eventCreateService.getDefectContextInfo(_this.defect).subscribe(function(defectContext) {
                      _this.defectContext = defectContext;
                      _this.defectContextWP = defectContext.defectOriginWorkPackageData;
                      _this.defectContextWO = defectContext.defectOriginWorkOrderData;
                      if (!!_this.defectContextWP) {
                        _this.defectDetectionContext =
                          defectContext.defectDetectionContextVisibility && !!defectContext.defectDetectionContext
                            ? defectContext.defectDetectionContext
                            : undefined;
                      }
                      _this.defectWPDescription =
                        defectContext.defectWPDescriptionVisibility && !!defectContext.defectWPDescription
                          ? defectContext.defectWPDescription
                          : undefined;
                      _this.defectWODescription =
                        defectContext.defectWODescriptionVisibility && !!defectContext.defectWODescription
                          ? defectContext.defectWODescription
                          : undefined;
                    });
                  }
                  // Blocks & buttons visibility
                  _this.updateComponentsVisibility();
                  _this.isFromNewAWToAccessDefect();
                }
              });
            }
          };
          DefectFormComponent.prototype.updateWorkflowStatusList = function() {
            this.workflowStatus = _shared_utils_workflow_utils__WEBPACK_IMPORTED_MODULE_38__[
              'WorkflowUtils'
            ].filterWorkflowStatusList(
              this.userWorkflow,
              this.statusList,
              this.defect ? this.defect.status : undefined
            );
          };
          DefectFormComponent.prototype.computeBidoAttributeLabel = function(attributeValue) {
            return this.translateService.currentLang ===
              _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_15__['LangConstants'].FRENCH_CODE
              ? attributeValue.textFr
              : attributeValue.textEn;
          };
          DefectFormComponent.prototype.loadDynamicAttributeList = function() {
            var _this = this;
            var observables = [
              // this.getDynamicAttributesObservable(AWPropertiesConstants.FM_ATTRIBUTE_CATEGORY_ALL_KEY)
            ];
            // TODO: this condition needs to be checked
            if (this.isFromNewAWToAccessDefectMode) {
              observables.unshift(
                this.getDynamicAttributesObservable(
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .FM_ATTRIBUTE_CATEGORY_DEFECT_KEY
                )
              );
            }
            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['forkJoin'])(observables).subscribe(function(_a) {
              var _b = __read(_a, 2),
                allAttribute = _b[0],
                customerAttribute = _b[1];
              var attributes = [];
              attributes = !!allAttribute ? __spread(attributes, allAttribute) : attributes;
              attributes = !!customerAttribute ? __spread(attributes, customerAttribute) : attributes;
              var dynamicAttributes = [];
              attributes.forEach(function(attribute) {
                var attributeId = attribute.attributeId;
                if (
                  attributeId ===
                  _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                    'BidoAttributeConstants'
                  ].EVENT_DEFECT_INSPECTION_MEAN.toString()
                ) {
                  if (!!attribute.bidoAttributeValueDatas) {
                    _this.inspectionMeanList = attribute.bidoAttributeValueDatas.map(function(attributeValue) {
                      return {
                        label: _this.computeBidoAttributeLabel(attributeValue),
                        value: _this.computeBidoAttributeLabel(attributeValue)
                      };
                    });
                  }
                } else if (
                  attributeId ===
                  _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                    'BidoAttributeConstants'
                  ].EVENT_FAULT_CODE.toString()
                ) {
                  if (!!attribute.bidoAttributeValueDatas) {
                    _this.faultCodeList = attribute.bidoAttributeValueDatas.map(function(attributeValue) {
                      return {
                        label: _this.computeBidoAttributeLabel(attributeValue),
                        value: _this.computeBidoAttributeLabel(attributeValue)
                      };
                    });
                    _this.faultCodeList = _this.faultCodeList.sort(function(a, b) {
                      return _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils']
                        .orEmpty(a.label)
                        .localeCompare(
                          _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].orEmpty(b.label)
                        );
                    });
                  }
                } else if (
                  attributeId ===
                  _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                    'BidoAttributeConstants'
                  ].EVENT_LOCATION.toString()
                ) {
                  // TODO
                } else if (
                  attributeId ===
                  _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                    'BidoAttributeConstants'
                  ].EVENT_SYSTEM_SOURCE_ID.toString()
                ) {
                  // TODO
                } else if (
                  attributeId ===
                  _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                    'BidoAttributeConstants'
                  ].EVENT_DD_DELAY_CATEGORY.toString()
                ) {
                  // TODO
                } else if (
                  attributeId ===
                  _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                    'BidoAttributeConstants'
                  ].EVENT_DD_DELAY_AUTHORIZED_UNIT.toString()
                ) {
                  // TODO
                } else if (
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_AUTHOR.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_CORRECTIVE_ACTION_AUTHOR.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_CORRECTIVE_ACTION_DESCRIPTION.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_CORRECTIVE_ACTION_LAST_AUTHOR.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_DEFERRAL_LAST_AUTHOR.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_DETECTION_CONTEXT.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_EXTENSION.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_FLIGHT_RESTRICTIONS.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_LAST_AUTHOR.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_LOG_NUMBER.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DD_DELAY_AUTHORIZATION_NUMBER.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DD_DELAY_AUTHORIZED_VALUE.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DD_TASK_PROPOSED_TO_PROCESS.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_IS_DEFERRED_DEFECT.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_SYSTEM_SOURCE_REFERENCE.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_WORK_POSTPONEMENT_REQUEST_AUTHOR.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_WORK_POSTPONEMENT_REQUEST_AUTHORIZATION_NUMBER.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_WORK_POSTPONEMENT_REQUEST_DECISION_LAST_AUTHOR.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_WORK_POSTPONEMENT_REQUEST_FLIGHT_RESTRICTIONS.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_WORK_POSTPONEMENT_REQUEST_LIMIT_DATE.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_WORK_POSTPONEMENT_REQUEST_REFUSAL_REASON.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_WORK_POSTPONEMENT_REQUEST_WO_CONTEXT.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].FUNCTIONAL_LOCATION.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].IGNORE_INITIAL_DEADLINE_NEXT_OCCURRENCE_CALCULATION.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].MAINTENANCE_PLAN_ORIGINAL_DEADLINES.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_IS_CRITICAL.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_DEFERRAL_AUTHOR.toString() &&
                  attributeId !==
                    _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                      'BidoAttributeConstants'
                    ].EVENT_DEFECT_SRM_REFERENCE.toString()
                ) {
                  dynamicAttributes = __spread(dynamicAttributes, [attribute]);
                }
              });
              _this.dynamicAttributes = _this.dynamicAttributesService.from(dynamicAttributes);
            });
          };
          DefectFormComponent.prototype.loadAttributeList = function() {
            var _this = this;
            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['forkJoin'])({
              defectLocationList: this.propertiesService.getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_14__['GenericPropertyConstants']
                  .DEFECT_LOCATION_MAP
              ),
              defectNameList: this.propertiesService.getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_14__['GenericPropertyConstants']
                  .DEFECT_NAME_MAP
              ),
              delayAuthorizedUnitList: this.eventService.findAllDelayAuthorizedUnit(),
              delayCategoryList: this.eventService.findAllDelayCategory()
            }).subscribe(function(_a) {
              var defectLocationList = _a.defectLocationList,
                defectNameList = _a.defectNameList,
                delayAuthorizedUnitList = _a.delayAuthorizedUnitList,
                delayCategoryList = _a.delayCategoryList;
              _this.defectLocationList = !!defectLocationList
                ? _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_36__['SelectItemUtils'].fromLabelValues(
                    defectLocationList
                  )
                : [];
              _this.defectNameList = !!defectNameList
                ? _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_36__['SelectItemUtils'].fromLabelValues(
                    defectNameList
                  )
                : [];
              _this.delayAuthorizedUnitList = !!delayAuthorizedUnitList
                ? _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_36__['SelectItemUtils'].fromLabelValues(
                    delayAuthorizedUnitList
                  )
                : [];
              _this.delayCategoryList = !!delayCategoryList
                ? _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_36__['SelectItemUtils'].fromLabelValues(
                    delayCategoryList
                  )
                : [];
            });
          };
          DefectFormComponent.prototype.onChangeDelayCategory = function() {
            if (!this.delayAuthorizedUnitList || this.delayAuthorizedUnitList.length === 0) {
              return;
            }
            if (!!this.deferralDelayCategory) {
              if (
                this.deferralDelayCategory ===
                _shared_utils_bire_attribute_value_utils__WEBPACK_IMPORTED_MODULE_31__['BireAttributeValueUtils']
                  .DD_DELAY_CATEGORY_A
              ) {
                this.deferralDelayAuthorizedUnit = this.translateService.instant(this.getTranslateKey('hours'));
                this.deferralDelayAuthorizedValue = !this.deferralDelayAuthorizedValue
                  ? undefined
                  : this.deferralDelayAuthorizedValue;
              }
              if (
                this.deferralDelayCategory ===
                _shared_utils_bire_attribute_value_utils__WEBPACK_IMPORTED_MODULE_31__['BireAttributeValueUtils']
                  .DD_DELAY_CATEGORY_B
              ) {
                this.deferralDelayAuthorizedUnit = this.translateService.instant(this.getTranslateKey('days'));
                this.deferralDelayAuthorizedValue = !this.deferralDelayAuthorizedValue
                  ? _shared_utils_bire_attribute_value_utils__WEBPACK_IMPORTED_MODULE_31__['BireAttributeValueUtils']
                      .DD_DELAY_VALUE_IN_DAYS_FOR_CATEGORY_B
                  : this.deferralDelayAuthorizedValue;
              }
              if (
                this.deferralDelayCategory ===
                _shared_utils_bire_attribute_value_utils__WEBPACK_IMPORTED_MODULE_31__['BireAttributeValueUtils']
                  .DD_DELAY_CATEGORY_C
              ) {
                this.deferralDelayAuthorizedUnit = this.translateService.instant(this.getTranslateKey('days'));
                this.deferralDelayAuthorizedValue = !this.deferralDelayAuthorizedValue
                  ? _shared_utils_bire_attribute_value_utils__WEBPACK_IMPORTED_MODULE_31__['BireAttributeValueUtils']
                      .DD_DELAY_VALUE_IN_DAYS_FOR_CATEGORY_C
                  : this.deferralDelayAuthorizedValue;
              }
              if (
                this.deferralDelayCategory ===
                _shared_utils_bire_attribute_value_utils__WEBPACK_IMPORTED_MODULE_31__['BireAttributeValueUtils']
                  .DD_DELAY_CATEGORY_D
              ) {
                this.deferralDelayAuthorizedUnit = this.translateService.instant(this.getTranslateKey('days'));
                this.deferralDelayAuthorizedValue = !this.deferralDelayAuthorizedValue
                  ? _shared_utils_bire_attribute_value_utils__WEBPACK_IMPORTED_MODULE_31__['BireAttributeValueUtils']
                      .DD_DELAY_VALUE_IN_DAYS_FOR_CATEGORY_D
                  : this.deferralDelayAuthorizedValue;
              }
            }
          };
          DefectFormComponent.prototype.loadAttributeListByNotificationCode = function(notificationCode) {
            return notificationCode
              ? this.eventService.findAllBidoNotificationAttributeByNotificationCode({
                  notificationCode: notificationCode
                })
              : Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['of'])([]);
          };
          DefectFormComponent.prototype.setAttributeListByNotificationCode = function(attributeList) {
            var _this = this;
            this.defectAttributeList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_35__['ListUtils'].orEmpty(
              attributeList
            );
            this.defectAttributeList.forEach(function(attribute) {
              switch (attribute.attributeId) {
                // Corrective action author
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_CORRECTIVE_ACTION_AUTHOR.toString():
                  _this.correctiveActionAuthor = attribute.attributeValue;
                  break;
                // Corrective action last author
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_CORRECTIVE_ACTION_LAST_AUTHOR.toString():
                  _this.correctiveActionLastAuthor = attribute.attributeValue;
                  break;
                // Corrective action description
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_CORRECTIVE_ACTION_DESCRIPTION.toString():
                  _this.correctiveActionDescription = attribute.attributeValue;
                  break;
                // Defect author
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_AUTHOR.toString():
                  _this.defectAuthor = attribute.attributeValue;
                  _this.dbdefectAuthor = _this.defectAuthor;
                  break;
                // Defect author
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_DETECTION_CONTEXT.toString():
                  _this.defectDetectionContext = attribute.attributeValue;
                  _this.dbDefectDetectionContext = _this.defectDetectionContext;
                  break;
                // Defect extension number
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_EXTENSION.toString():
                  _this.defectExtensionNumber = attribute.attributeValue;
                  break;
                // Defect flight restriction
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_FLIGHT_RESTRICTIONS.toString():
                  _this.deferralFlightRestriction = attribute.attributeValue;
                  break;
                // Defect inspection mean
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_INSPECTION_MEAN.toString():
                  var selectedInspectionMean = _this.inspectionMeanList.find(function(inspectionMean) {
                    return inspectionMean.value === attribute.attributeValue;
                  });
                  if (!!selectedInspectionMean) {
                    _this.selectedInspectionMean = selectedInspectionMean.label;
                  }
                  _this.dbSelectedInspectionMean = _this.selectedInspectionMean;
                  break;
                // Fault code
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_FAULT_CODE.toString():
                  var selectedFaultCode = _this.faultCodeList.find(function(faultCode) {
                    return faultCode.value === attribute.attributeValue;
                  });
                  if (!!selectedFaultCode) {
                    _this.selectedFaultCode = selectedFaultCode.label;
                  }
                  _this.dbSelectedFaultCode = _this.selectedFaultCode;
                  break;
                // Defect is critical
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_IS_CRITICAL.toString():
                  _this.defectIsCritical = !!attribute.attributeValue && attribute.attributeValue === 'true';
                  _this.dbDefectIsCritical = _this.defectIsCritical;
                  break;
                // Defect last author
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_LAST_AUTHOR.toString():
                  _this.defectLastAuthor = attribute.attributeValue;
                  break;
                // Defect log number
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_LOG_NUMBER.toString():
                  _this.defectLogNumber = attribute.attributeValue;
                  _this.dbDefectLogNumber = _this.defectLogNumber;
                  break;
                // Defect proposed task
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DD_TASK_PROPOSED_TO_PROCESS.toString():
                  _this.defectProposedTask = attribute.attributeValue;
                  break;
                // Deferral author
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_DEFERRAL_AUTHOR.toString():
                  _this.deferralAuthor = attribute.attributeValue;
                  break;
                // Deferral delay authorization number
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DD_DELAY_AUTHORIZATION_NUMBER.toString():
                  _this.deferralDelayAuthorizationNumber = attribute.attributeValue;
                  break;
                // Deferral delay authorized unit
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DD_DELAY_AUTHORIZED_UNIT.toString():
                  _this.deferralDelayAuthorizedUnit = attribute.attributeValue;
                  break;
                // Deferral delay authorized value
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DD_DELAY_AUTHORIZED_VALUE.toString():
                  _this.deferralDelayAuthorizedValue = attribute.attributeValue;
                  break;
                // Deferral delay category
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DD_DELAY_CATEGORY.toString():
                  _this.deferralDelayCategory = attribute.attributeValue;
                  break;
                // Deferral flight restriction
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_WORK_POSTPONEMENT_REQUEST_FLIGHT_RESTRICTIONS.toString():
                  _this.deferralFlightRestriction = attribute.attributeValue;
                  break;
                // Deferral last author
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_DEFERRAL_LAST_AUTHOR.toString():
                  _this.deferralLastAuthor = attribute.attributeValue;
                  break;
                // SRM EVENT_DEFECT_SRM_REFERENCE
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_DEFECT_SRM_REFERENCE.toString():
                  _this.defectSrmReference = attribute.attributeValue;
                  _this.dbDefectSrmReference = _this.defectSrmReference;
                  break;
                case _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                  'BidoAttributeConstants'
                ].EVENT_LOCATION.toString():
                  _this.location = attribute.attributeValue;
                  break;
                default:
                  break;
              }
            });
            this.dynamicAttributesService.setValues(this.dynamicAttributes, this.defectAttributeList);
          };
          DefectFormComponent.prototype.loadCorrectiveActionComponentDecisionList = function() {
            var _this = this;
            var installKey = this.getComponentName() + '.install';
            var removeKey = this.getComponentName() + '.remove';
            this.translateService.get([installKey, removeKey]).subscribe(function(results) {
              if (!!results) {
                _this.correctiveActionComponentDecisionList = [
                  {
                    label: results[installKey],
                    value:
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .DECISION_BBIS_INSTALL_KEY
                  },
                  {
                    label: results[removeKey],
                    value:
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .DECISION_BBTWS_REMOVE_KEY
                  }
                ];
              }
            });
          };
          DefectFormComponent.prototype.loadDocumentTypeList = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_14__['GenericPropertyConstants']
                  .DOC_EVENT_CATEGORY_MAP
              )
              .subscribe(function(results) {
                _this.documentTypeList = !!results
                  ? _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_36__['SelectItemUtils'].fromLabelValues(
                      results
                    )
                  : [];
              });
          };
          DefectFormComponent.prototype.loadDocumentList = function(notificationCode) {
            var _this = this;
            this.eventService.findAllBidoDocumentationByNotificationCode(notificationCode).subscribe(function(results) {
              _this.documentList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_35__['ListUtils']
                .orEmpty(results)
                .filter(function(document) {
                  return !!document.docName;
                });
              _this.documentTable = _this.documentList.map(function(document) {
                return _this.createDocumentRow(document);
              });
            });
          };
          DefectFormComponent.prototype.loadEquipmentObject = function(equipmentCode) {
            var _this = this;
            this.eventService.findBidoEquipment({ equipmentCode: equipmentCode }).subscribe(function(equipment) {
              if (!!equipment.operationalStatus) {
                equipment.operationalStatus = _this.propertyOperationalStatus.filter(function(resp) {
                  return resp.value === equipment.operationalStatus;
                })[0].label;
              }
              _this.masterEquipment = equipment;
              if (!!_this.masterEquipment) {
                _this.eventService
                  .getEquipmentRepresentation(_this.masterEquipment)
                  .subscribe(function(equipmentRepresentationResult) {
                    _this.notificationAsset = _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                      'StringUtils'
                    ].orEmpty(equipmentRepresentationResult);
                  });
                if (!!_this.masterEquipment.equipmentCode) {
                  _this.eventService
                    .findAllFlInStructureByEquipmentCodeForDefect(_this.masterEquipment.equipmentCode)
                    .subscribe(function(results) {
                      _this.flCodeList = !!results
                        ? _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_36__[
                            'SelectItemUtils'
                          ].fromLabelValues(results)
                        : [];
                    });
                }
                if (!!_this.masterEquipment && !!_this.masterEquipment.familyVariantCode) {
                  _this.masterFamilyVariantCode = _this.masterEquipment.familyVariantCode;
                  _this.eventCreateService
                    .haspropertyByFamilyCode(
                      _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_30__[
                        'BidoFamilyVariantUtils'
                      ].getFamilyCodeFromFamilyVariantCode(_this.masterEquipment.familyVariantCode)
                    )
                    .subscribe(function(resp) {
                      _this.hasPropertyByCode = !!resp ? resp : false;
                    });
                }
                _this.isAircraft();
                _this.fillAttibuteDropdown();
                _this.loadCustomerOperatorOwnerName();
                // Measure Tab
                _this.loadMeasureTableData();
                _this.loadArisingEventData();
                _this.loadDiffusionTableData();
                _this.loadContextTable();
                _this.loadSymptomTable();
                _this.eventCreateService.getFunctionLocationLabel(_this.defect).subscribe(function(res) {
                  _this.functionLocationStr = res;
                });
              }
            });
          };
          DefectFormComponent.prototype.loadPnTypeList = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_14__['GenericPropertyConstants']
                  .PN_TYPE_MAP
              )
              .subscribe(function(results) {
                _this.pnTypeList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_35__['ListUtils'].orEmpty(results);
              });
          };
          DefectFormComponent.prototype.loadTypeList = function(categoryList) {
            if (_shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_35__['ListUtils'].isNullOrEmpty(categoryList)) {
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['of'])([]);
            } else {
              var selectedCategory = categoryList.find(function(category) {
                return (
                  category.value ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_CATEGORY_DEFECT_KEY
                );
              });
              return selectedCategory
                ? this.eventService.findAllBidoNotificationTypeByTypeCategory(selectedCategory.value)
                : Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['of'])([]);
            }
          };
          DefectFormComponent.prototype.setTypeList = function(typeList) {
            this.typeList = typeList
              .filter(function(type) {
                return !!type && !!type.typeCode && !!type.typeDescription;
              })
              .map(function(type) {
                return {
                  label: type.typeDescription,
                  value: type.typeCode
                };
              });
          };
          DefectFormComponent.prototype.setComponentSubtitle = function() {
            var _this = this;
            if (
              !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                this.defectLogNumber
              )
            ) {
              this.componentSubtitle = this.defectLogNumber;
            } else if (
              !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                this.defect.notificationSubject
              )
            ) {
              this.componentSubtitle = this.defect.notificationSubject;
            } else if (
              !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                this.defect.typeCode
              )
            ) {
              var selectedType = this.typeList.find(function(type) {
                return type.value === _this.defect.typeCode;
              });
              if (
                !!selectedType &&
                !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                  selectedType.label
                )
              ) {
                this.componentSubtitle = selectedType.label;
              }
            }
            this.displayComponentContext(this.componentSubtitle, this.isCreateOpenMode);
          };
          DefectFormComponent.prototype.setConstants = function() {
            var _this = this;
            var defectAta = 'global.item';
            var defectEquipment = 'global.equipment';
            var defectFunctionalLocation = 'global.functionalLocation';
            var defectPart = 'global.part';
            this.translateService
              .get([defectAta, defectEquipment, defectFunctionalLocation, defectPart])
              .subscribe(function(results) {
                if (!!results) {
                  _this.rootCauseList = [
                    {
                      label: results[defectAta],
                      value: 'defectAta'
                    },
                    {
                      label: results[defectEquipment],
                      value: 'defectEquipment'
                    },
                    {
                      label: results[defectFunctionalLocation],
                      value: 'defectFunctionalLocation'
                    },
                    {
                      label: results[defectPart],
                      value: 'defectPart'
                    }
                  ];
                }
              });
          };
          DefectFormComponent.prototype.setCorrectiveActionComponentsTableColList = function() {
            this.correctiveActionComponentTableColList = [
              { field: 'birePnPnCode', alignment: 'left' },
              { field: 'stockMvtSn', alignment: 'left' },
              { field: 'stockMvtQuantity', alignment: 'right', width: '6rem' },
              { field: 'decision', alignment: 'left', width: '6rem' },
              { field: 'isRequestForPart', alignment: 'center', width: '9rem' }
            ];
          };
          DefectFormComponent.prototype.setDefectStatus = function(key) {
            var selectedStatus = this.statusList.find(function(status) {
              return status.value === key;
            });
            if (!!selectedStatus) {
              this.defect.status = selectedStatus.value;
              this.updateComponentsVisibility();
            }
          };
          DefectFormComponent.prototype.setDocumentTableColList = function() {
            this.documentTableColList = [
              { field: 'docName', alignment: 'left', width: '30%' },
              { field: 'docType', alignment: 'left', width: '30%' },
              { field: 'docExtension', alignment: 'left', width: '12.5%' },
              { field: 'docSize', alignment: 'left', width: '12.5%' },
              { field: 'isChecked', alignment: 'center', width: '5%' },
              { field: 'docPublicationDate', alignment: 'left', width: '10%' }
            ];
          };
          DefectFormComponent.prototype.setWorkPackageAndWorkOrderDescriptions = function(workPackage, workOrder) {
            if (!!workPackage && workPackage.projectNumber !== undefined && workPackage.projectNumber !== null) {
              var defectCAWPDescription = workPackage.projectNumber.toString();
              if (
                !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                  workPackage.projectName
                )
              ) {
                defectCAWPDescription += ' (' + workPackage.projectName + ')';
              }
              this.defectCAWPDescription = defectCAWPDescription;
              if (
                !!workOrder &&
                !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(workOrder.woCode)
              ) {
                var defectCAWODescription = workOrder.woCode;
                if (
                  !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                    workOrder.woDescription
                  )
                ) {
                  defectCAWODescription += ' (' + workOrder.woDescription + ')';
                }
                this.defectCAWODescription = defectCAWODescription;
              }
            }
          };
          DefectFormComponent.prototype.updateComponentsVisibility = function() {
            this.setCorrectiveActionBlockVisibility();
            this.setDefectAskForDeferralVisibility();
            this.setDefectBlockVisibility();
            this.setDeferralBlockVisibility();
            this.setDeferralAcceptDeferralVisibility();
            this.setDeferralRefuseDeferralVisibility();
          };
          /**************************************************************************
           * Defect tab
           *************************************************************************/
          DefectFormComponent.prototype.acceptDeferral = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_14__['GenericPropertyConstants']
                  .AEROWEBB_CONFIGURATION_MAP
              )
              .subscribe(function(awConfiguration) {
                if (
                  !!_this.defect.status &&
                  _this.defect.status ===
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_STATUS_UNDER_ANALYSIS_KEY
                ) {
                  var derogationAgreementExists = _this.documentList.some(function(document) {
                    return (
                      !!document.docCategory &&
                      document.docCategory ===
                        _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                          .DOC_EVENT_CATEG_DEROGATION_AGREEMENT
                    );
                  });
                  var authorizationNumberExists = !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                    'StringUtils'
                  ].isNullOrEmpty(_this.deferralDelayAuthorizationNumber);
                  var selectedProperty = awConfiguration.find(function(property) {
                    return (
                      property.value ===
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .DEFECT_AGREEMENT_NEEDED_FOR_DEFERRAL
                    );
                  });
                  var noControlForDeferralNeeded =
                    !!selectedProperty &&
                    !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                      selectedProperty.label
                    ) &&
                    (selectedProperty.label.trim().toUpperCase() === 'X' ||
                      selectedProperty.label === '1' ||
                      selectedProperty.label.trim().toUpperCase() === 'TRUE');
                  if (noControlForDeferralNeeded || derogationAgreementExists || authorizationNumberExists) {
                    _this.setDefectStatus(
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_STATUS_DEFERRED_KEY
                    );
                  } else {
                    _this.messageService.showWarningMessage('');
                  }
                }
                _this.saveDefect();
              });
          };
          DefectFormComponent.prototype.askForDeferral = function() {
            if (this.isMELAlertVisible && this.selectedRootCause === 'defectFunctionalLocation') {
              this.setDefectStatus(
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_INVESTIGATION_KEY
              );
            } else {
              this.setDefectStatus(
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_ANALYSIS_KEY
              );
            }
            this.saveDefect();
            var sendEventNotificationToContactsDTO = {
              bidoNotificationDTOId: {
                notificationCode: this.defect.notificationCode
              },
              isRootCauseNewOrDefect: true,
              documentList: [],
              sendGlobalMail: false
            };
            this.eventCreateService
              .sendEventNotificationToContactsAlternate(sendEventNotificationToContactsDTO)
              .subscribe(function(res) {
                // this.messageService.showSuccessMessage(this.getTranslateKey('notificationSent'));
              });
          };
          DefectFormComponent.prototype.cancelDeferral = function() {
            this.setDefectStatus(
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                .EVENT_STATUS_OPENED_KEY
            );
            this.saveDefect();
          };
          DefectFormComponent.prototype.createCorrectiveActionComponent = function() {
            this.currentCorrectiveActionComponent = undefined;
            this.correctiveActionComponentDialogOpenMode =
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Create;
            this.showCorrectiveActionComponentDialog = true;
          };
          DefectFormComponent.prototype.deleteCorrectiveActionComponent = function() {
            var _this = this;
            var partialMessageKey =
              this.selectedCorrectiveActionComponentList.length > 1
                ? 'confirmDeleteSelectedComponents'
                : 'confirmDeleteSelectedComponent';
            this.confirmationService.confirmDelete({
              messageKey: this.getTranslateKey(partialMessageKey),
              accept: function() {
                _this.selectedCorrectiveActionComponentList.forEach(function(res) {
                  if (!!res.id) {
                    _this.deletedCorrectiveActionComponent.push(res.id);
                  }
                });
                _this.correctiveActionComponentList = _this.correctiveActionComponentList.filter(function(
                  correctiveActionComponent
                ) {
                  return !_this.selectedCorrectiveActionComponentList.some(function(selectedRow) {
                    return selectedRow === correctiveActionComponent;
                  });
                });
                _this.correctiveActionComponentTable = _this.correctiveActionComponentTable.filter(function(
                  correctiveActionComponent
                ) {
                  return !_this.selectedCorrectiveActionComponentList.some(function(selectedRow) {
                    return selectedRow === correctiveActionComponent;
                  });
                });
                _this.selectedCorrectiveActionComponentList = [];
              }
            });
          };
          DefectFormComponent.prototype.editCorrectiveActionComponent = function() {
            var _this = this;
            if (this.selectedCorrectiveActionComponentList.length === 1) {
              var rowIndex_1 = -1;
              this.correctiveActionComponentList.filter(function(row, i) {
                if (
                  row.birePnPnCode === _this.selectedCorrectiveActionComponentList[0].birePnPnCode &&
                  // row.stockMvtSn === this.selectedCorrectiveActionComponentList[0].stockMvtSn &&
                  row.stockMvtQuantity === _this.selectedCorrectiveActionComponentList[0].stockMvtQuantity
                ) {
                  rowIndex_1 = i;
                }
              });
              this.currentCorrectiveActionComponent = __assign({}, this.correctiveActionComponentList[rowIndex_1]);
              this.currentCorrectiveActionComponentIndex = rowIndex_1;
              this.correctiveActionComponentDialogOpenMode =
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Write;
              this.showCorrectiveActionComponentDialog = true;
            }
          };
          DefectFormComponent.prototype.onChangeDefectRootCause = function(newRootCause) {
            this.displayDefectAtaBlock = newRootCause === 'defectAta';
            this.displayDefectEquipmentBlock = newRootCause === 'defectEquipment';
            this.displayDefectFunctionalLocationBlock = newRootCause === 'defectFunctionalLocation';
            this.displayDefectPartBlock = newRootCause === 'defectPart';
            this.resetRootCauseFields();
          };
          DefectFormComponent.prototype.resetRootCauseFields = function() {
            this.defectEquipmentAssetCode = undefined;
            this.defectEquipmentSn = undefined;
            this.defectEquipmentPn = undefined;
            this.defectEquipmentName = undefined;
            this.rootCausePn = undefined;
            this.rootCauseQuantity = undefined;
            this.defectAtaCode = {};
            this.rootCauseFlCode = undefined;
            this.defect.bidoRootCauseDTO = {};
          };
          DefectFormComponent.prototype.openCorrectiveActionComponent = function() {
            this.currentCorrectiveActionComponent = this.selectedCorrectiveActionComponentList[0];
            this.correctiveActionComponentDialogOpenMode =
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read;
            this.showCorrectiveActionComponentDialog = true;
          };
          DefectFormComponent.prototype.openCorrectiveActionTask = function(event) {
            if (
              !this.isReadOpenMode &&
              !_shared_utils_dom_utils__WEBPACK_IMPORTED_MODULE_33__['DomUtils'].isTargetDisabled(event.target)
            ) {
              this.showCorrectiveActionTaskDialog = true;
            }
          };
          DefectFormComponent.prototype.openCorrectiveActionWorkPackage = function() {
            if (!this.isReadOpenMode) {
              this.showCorrectiveActionWorkPackageDialog = true;
            }
          };
          DefectFormComponent.prototype.openDefectEquipmentAssetCode = function(event) {
            if (
              !this.isReadOpenMode &&
              !_shared_utils_dom_utils__WEBPACK_IMPORTED_MODULE_33__['DomUtils'].isTargetDisabled(event.target)
            ) {
              this.showDefectEquipmentAssetCodeDialog = true;
            }
          };
          DefectFormComponent.prototype.openDefectPart = function(event) {
            if (
              !this.isReadOpenMode &&
              !_shared_utils_dom_utils__WEBPACK_IMPORTED_MODULE_33__['DomUtils'].isTargetDisabled(event.target)
            ) {
              var familyVariantSelected = void 0;
              if (!!this.masterEquipment) {
                var familyCode = _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_30__[
                  'BidoFamilyVariantUtils'
                ].getFamilyCodeFromFamilyVariantCode(this.masterEquipment.familyVariantCode);
                var variantCode = _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_30__[
                  'BidoFamilyVariantUtils'
                ].getVariantCodeFromFamilyVariantCode(this.masterEquipment.familyVariantCode);
                familyVariantSelected = _shared_utils_bire_family_variant_utils__WEBPACK_IMPORTED_MODULE_32__[
                  'BireFamilyVariantUtil'
                ].buildFamilyVariantCodeWithStructureType(
                  familyCode,
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .STRUCTURE_TYPE_IPC_KEY,
                  variantCode
                );
              }
              this.partSearchInput = {
                familyVariantSelected: familyVariantSelected,
                type:
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .PN_TYPE_PART_KEY,
                toolSearch: false
              };
              this.showDefectPartDialog = true;
            }
          };
          DefectFormComponent.prototype.prepareWorkPackage = function() {
            this.openSelectedWorkPackages();
          };
          DefectFormComponent.prototype.openSelectedWorkPackages = function() {
            if (!!this.defectCAWPDescription) {
              if (!!this.defectTargetWorkPackage) {
                var data = {
                  id: this.tabService.generateId(),
                  componentId:
                    _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_12__['ComponentConstants']
                      .MAI_WORK_PACKAGE_FORM,
                  openMode:
                    _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Write,
                  objectId: this.serializationService.serialize({ wpId: this.defectTargetWorkPackage.projectId })
                };
                var labelKey = 'transaction.' + data.componentId;
                this.tabService.open(this.tabService.create(data, labelKey, true));
              }
            }
          };
          DefectFormComponent.prototype.toggleDefectAta = function() {
            if (this.isDefectAtachecked) {
              this.isDefectEquipmentchecked = false;
              this.isDefectFunctionalLocationchecked = false;
              this.isDefectPartchecked = false;
            }
          };
          DefectFormComponent.prototype.toggleDefectEquipment = function() {
            if (this.isDefectEquipmentchecked) {
              this.isDefectAtachecked = false;
              this.isDefectFunctionalLocationchecked = false;
              this.isDefectPartchecked = false;
            }
          };
          DefectFormComponent.prototype.toggleDefectFunctionalLocation = function() {
            if (this.isDefectFunctionalLocationchecked) {
              this.isDefectAtachecked = false;
              this.isDefectEquipmentchecked = false;
              this.isDefectPartchecked = false;
            }
          };
          DefectFormComponent.prototype.toggleDefectPart = function() {
            if (this.isDefectPartchecked) {
              this.isDefectAtachecked = false;
              this.isDefectEquipmentchecked = false;
              this.isDefectFunctionalLocationchecked = false;
            }
          };
          DefectFormComponent.prototype.setCorrectiveActionBlockVisibility = function() {
            this.correctiveActionBlockVisibility = true;
          };
          DefectFormComponent.prototype.setDefectAskForDeferralVisibility = function() {
            this.defectAskForDeferralVisibility =
              !!this.defect.status &&
              this.defect.status ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_OPENED_KEY;
          };
          DefectFormComponent.prototype.setDefectBlockVisibility = function() {
            this.defectBlockVisibility = true;
          };
          DefectFormComponent.prototype.setDeferralBlockVisibility = function() {
            this.deferralBlockVisibility =
              !!this.defect.status &&
              (this.defect.status ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_ANALYSIS_KEY ||
                this.defect.status ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_STATUS_DEFERRED_KEY ||
                this.defect.status ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_STATUS_UNDER_INVESTIGATION_KEY);
          };
          DefectFormComponent.prototype.setDeferralAcceptDeferralVisibility = function() {
            this.deferralAcceptDeferralVisibility =
              !!this.defect.status &&
              (this.defect.status ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_ANALYSIS_KEY ||
                this.defect.status ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_STATUS_UNDER_INVESTIGATION_KEY);
          };
          DefectFormComponent.prototype.setDeferralRefuseDeferralVisibility = function() {
            this.deferralRefuseDeferralVisibility =
              !!this.defect.status &&
              (this.defect.status ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_ANALYSIS_KEY ||
                this.defect.status ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_STATUS_UNDER_INVESTIGATION_KEY);
          };
          /**************************************************************************
           * Documents tab
           *************************************************************************/
          DefectFormComponent.prototype.deleteSelectedDocumentList = function() {
            var _this = this;
            var partialMessageKey =
              this.selectedDocumentList.length > 1 ? 'confirmDeleteSelectedDocuments' : 'confirmDeleteSelectedDocument';
            this.confirmationService.confirmDelete({
              messageKey: 'global.' + partialMessageKey,
              accept: function() {
                _this.selectedDocumentList.forEach(function(selectedRow) {
                  var selectedDocument = _this.findMatchingDocument(selectedRow);
                  if (!!selectedDocument) {
                    var documentsAddedWithoutSelection = _this.documentAddedList.filter(function(document) {
                      return !_this.areSameDocument(document, selectedDocument);
                    });
                    // list of added objects contains the selection
                    if (_this.documentAddedList.length !== documentsAddedWithoutSelection.length) {
                      // Remove selection from added objects
                      _this.documentAddedList = documentsAddedWithoutSelection;
                    } else {
                      var documentsUpdatedWithoutSelection = _this.documentUpdatedList.filter(function(document) {
                        return !_this.areSameDocument(document, selectedDocument);
                      });
                      // list of updated objects contains the selection
                      if (_this.documentUpdatedList.length !== documentsUpdatedWithoutSelection.length) {
                        // Remove selection from added objects
                        _this.documentUpdatedList = documentsUpdatedWithoutSelection;
                      }
                      _this.documentRemovedList = __spread(_this.documentRemovedList, [selectedDocument]);
                    }
                    var docIndex_1 = -1;
                    _this.documentTable.filter(function(doc, index) {
                      if (doc.docName === selectedDocument.docName) {
                        docIndex_1 = index;
                      }
                    });
                    _this.documentTable.splice(docIndex_1, 1);
                  }
                });
                _this.documentList = _this.documentList.filter(function(document) {
                  return !_this.selectedDocumentList.some(function(selectedRow) {
                    return _this.areSameDocument(document, _this.findMatchingDocument(selectedRow));
                  });
                });
                // this.documentTable = this.documentTable.filter((documentRow) => {
                //   return !this.selectedDocumentList.some((selectedRow) => {
                //     return this.areSameDocument(this.findMatchingDocument(documentRow), this.findMatchingDocument(selectedRow));
                //   });
                // });
                _this.selectedDocumentList = [];
              }
            });
          };
          DefectFormComponent.prototype.downloadFiles = function() {
            var _this = this;
            this.selectedDocumentList.forEach(function(documentRow) {
              var document = _this.findMatchingDocument(documentRow);
              if (!!document) {
                _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].downloadFile(
                  document.docFile,
                  document.docName
                );
              }
            });
          };
          DefectFormComponent.prototype.editDocument = function() {
            var _this = this;
            if (this.selectedDocumentList.length === 1) {
              var selectedDocument_1 = this.findMatchingDocument(this.selectedDocumentList[0]);
              if (!!selectedDocument_1) {
                this.currentDocumentIndex = this.documentList.findIndex(function(document) {
                  return _this.areSameDocument(document, selectedDocument_1);
                });
                selectedDocument_1.docType = selectedDocument_1.docCategory;
                this.currentDocument = __assign({}, selectedDocument_1);
                this.documentDialogOpenMode =
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Write;
                this.showDocumentDialog = true;
              }
            }
          };
          DefectFormComponent.prototype.openDocument = function() {
            if (this.selectedDocumentList.length === 1) {
              var selectedDocument = this.findMatchingDocument(this.selectedDocumentList[0]);
              if (!!selectedDocument) {
                this.currentDocument = selectedDocument;
                this.currentDocumentIndex = -1;
                this.documentDialogOpenMode =
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read;
                this.showDocumentDialog = true;
              }
            }
          };
          DefectFormComponent.prototype.uploadDocument = function(event, fileUploader) {
            var _this = this;
            if (!!event.files) {
              var file_1 = event.files[0];
              // Check if the file already exists
              var fileExists = this.documentList.some(function(document) {
                return document.docName === file_1.name;
              });
              if (fileExists) {
                this.messageService.showWarningMessage('global.warningOnFileExists');
              } else {
                _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].getFileContentAsBase64(
                  file_1,
                  function(fileContent) {
                    if (!!fileContent) {
                      var document_1 = {
                        docFile: fileContent,
                        docName: file_1.name,
                        docPublicationDate: new Date()
                      };
                      _this.documentList = __spread(_this.documentList, [document_1]);
                      _this.documentAddedList = __spread(_this.documentAddedList, [document_1]);
                      _this.documentTable = __spread(_this.documentTable, [_this.createDocumentRow(document_1)]);
                    }
                  }
                );
              }
              fileUploader.clear();
            }
          };
          DefectFormComponent.prototype.areSameDocument = function(obj1, obj2) {
            if (!obj1 || !obj2) {
              return false;
            } else {
              return !!obj1.docName && !!obj2.docName && obj1.docName === obj2.docName;
            }
          };
          DefectFormComponent.prototype.findMatchingDocument = function(row) {
            if (!!row) {
              return this.documentList.find(function(document) {
                return !!document.docName && document.docName === row.docName;
              });
            } else {
              return undefined;
            }
          };
          /**************************************************************************
           * Corrective action component dialog
           *************************************************************************/
          DefectFormComponent.prototype.onAddCorrectiveActionComponent = function(component) {
            if (this.selectedCorrectiveActionComponentList.length === 0) {
              this.currentCorrectiveActionComponentIndex = -1;
            }
            if (!!component) {
              if (this.currentCorrectiveActionComponentIndex !== -1) {
                this.correctiveActionComponentList[this.currentCorrectiveActionComponentIndex] = component;
                this.correctiveActionComponentTable[
                  this.currentCorrectiveActionComponentIndex
                ] = this.createComponentRow(component);
              } else {
                this.correctiveActionComponentList = __spread(this.correctiveActionComponentList, [component]);
                this.correctiveActionComponentTable = __spread(this.correctiveActionComponentTable, [
                  this.createComponentRow(component)
                ]);
              }
            }
            this.selectedCorrectiveActionComponentList = [];
          };
          /**************************************************************************
           * Corrective action work package dialog
           *************************************************************************/
          DefectFormComponent.prototype.onCreateWorkPackage = function(data) {
            var _this = this;
            this.saveDefect();
            var input = {
              bidoEquipmentDTO: this.masterEquipment,
              bidoNotificationDTO: this.defect,
              bidmProjectDTO: data.workPackage,
              bidoNotificationAttributeDTOList: this.bireNotificationAttributes
            };
            this.eventService.createWorkPackageFromEvent(input).subscribe(function(result) {
              _this.defectTargetWorkPackage = result.defectTargetWorkPackageData;
              _this.defectTargetWorkOrder = result.defectTargetWorkOrderData;
              _this.displayComponents(result.defectTargetWorkOrderData);
              _this.setWorkPackageAndWorkOrderDescriptions(
                result.defectTargetWorkPackageData,
                result.defectTargetWorkOrderData
              );
            });
          };
          /**************************************************************************
           * Corrective action task dialog
           *************************************************************************/
          DefectFormComponent.prototype.onAddCorrectiveActionTask = function(task) {
            this.defectProposedTask = _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils']
              .orEmpty(task.taskCode)
              .trim();
            this.bireTaskDTO = task;
            if (
              !!task.taskVersion &&
              !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isEmpty(task.taskVersion)
            ) {
              this.defectProposedTask += '-' + task.taskVersion.trim();
              if (
                _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].isNullOrEmpty(
                  this.correctiveActionDescription
                )
              ) {
                this.correctiveActionDescription = task.taskDesignation;
              }
            }
          };
          /**************************************************************************
           * Defect part dialog
           *************************************************************************/
          DefectFormComponent.prototype.onSelectDefectEquipmentAssetCode = function(equipment) {
            var _this = this;
            this.defectEquipmentAssetCode = equipment.equipmentCode;
            this.fetchEquipmentName(equipment.equipmentCode, function(name) {
              _this.defectEquipmentName = !!name ? name : undefined;
            });
            this.defectEquipmentPn = equipment.pnCode;
            this.defectEquipmentSn = equipment.sn;
          };
          DefectFormComponent.prototype.fetchEquipmentName = function(assetCode, callback) {
            var equipmentId = {
              equipmentCode: assetCode
            };
            this.eventCreateService.getEquipmentName(equipmentId).subscribe(function(res) {
              callback(res);
            });
          };
          /**************************************************************************
           * Defect part dialog
           *************************************************************************/
          DefectFormComponent.prototype.onSelectDefectPart = function(pn) {
            this.rootCausePn = pn.pnCode;
            if (this.rootCauseQuantity === undefined || this.rootCauseQuantity === null) {
              this.rootCauseQuantity = 0;
            }
          };
          /**************************************************************************
           * Document dialog
           *************************************************************************/
          DefectFormComponent.prototype.onAddDocument = function(document) {
            var _this = this;
            if (!!document) {
              if (this.currentDocumentIndex !== -1) {
                document.docCategory = document.docType;
                this.documentList[this.currentDocumentIndex] = document;
                this.documentTable[this.currentDocumentIndex] = this.createDocumentRow(document);
                var updatedDocumentIndex = this.documentUpdatedList.findIndex(function(documentUpdated) {
                  return _this.areSameDocument(documentUpdated, document);
                });
                if (!!this.documentList[this.currentDocumentIndex].docCode) {
                  document.docCategory = document.docType;
                  if (updatedDocumentIndex !== -1) {
                    this.documentUpdatedList[updatedDocumentIndex] = document;
                  } else {
                    this.documentUpdatedList = __spread(this.documentUpdatedList, [document]);
                  }
                } else {
                  var addedIndex = this.documentAddedList.findIndex(function(documentAdded) {
                    return _this.areSameDocument(documentAdded, document);
                  });
                  document.docCategory = document.docType;
                  this.documentAddedList[addedIndex] = document;
                }
              } else {
                var isAdded = this.documentAddedList.some(function(documentAdded) {
                  return _this.areSameDocument(documentAdded, document);
                });
                if (isAdded) {
                  this.messageService.showWarningMessage('global.warningOnDocumentExists');
                } else {
                  document.docCategory = document.docType;
                  this.documentList = __spread(this.documentList, [document]);
                  this.documentAddedList = __spread(this.documentAddedList, [document]);
                  this.documentTable = __spread(this.documentTable, [this.createDocumentRow(document)]);
                }
              }
            }
            this.selectedDocumentList = [];
          };
          DefectFormComponent.prototype.openTaskCode = function() {
            if (!!this.bireTaskDTO) {
              this.openTask(
                this.bireTaskDTO,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read
              );
            }
          };
          DefectFormComponent.prototype.openTask = function(object, openMode) {
            if (object != undefined) {
              var labelKey = 'transaction.TaskFormComponent';
              var data = {
                id: this.tabService.generateId(),
                componentId: 'TaskFormComponent',
                objectId: this.serializationService.serialize(object),
                openMode: openMode
              };
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          DefectFormComponent.prototype.openWorkPackage = function() {
            if (!!this.defectTargetWorkPackage) {
              var data = {
                id: this.tabService.generateId(),
                componentId:
                  _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_12__['ComponentConstants']
                    .MAI_WORK_PACKAGE_FORM,
                openMode:
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Write,
                objectId: this.serializationService.serialize({ wpId: this.defectTargetWorkPackage.projectId })
              };
              var labelKey = 'transaction.' + data.componentId;
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          DefectFormComponent.prototype.openWorkOrderUC = function(id) {
            // TODo
          };
          /*************************************************************************
           * Status Update History Popup Operations
           *************************************************************************/
          DefectFormComponent.prototype.openStatusUpdatesPopup = function() {
            var bidoNotificationDTOId = {
              notificationCode: this.defect.notificationCode
            };
            this.showStatusUpdatesPopup = true;
            this.eventStatus = __assign({}, this.defect);
            var columns = [
              {
                field: 'timestamp',
                width: '200px',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__['TableColumnFilterMode']
                    .Input,
                isDate: true,
                alignment: 'left'
              },
              {
                field: 'statusUser',
                width: '200px',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'statusState',
                width: '250px',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'action',
                width: '200px',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'type',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'subject',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'status',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'cause',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'priority',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'owner',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'operator',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_17__['TableColumnFilterMode']
                    .Input
              }
            ];
            this.updatesKeyMap.set('statusState', this.propertiesService.getValue('getFuncObjectStatusMap'));
            this.tableStatusUpdatesData = {
              componentId: 'EventCreateComponent.historicPopup',
              tableCols: columns,
              tableRows: this.eventCreateService.findHBidoNotifications(bidoNotificationDTOId),
              dataKey: undefined,
              selectionMode:
                _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableSelectionMode'].Multiple,
              globalFilter: false
            };
          };
          // tslint:disable-next-line:no-string-literal
          DefectFormComponent.prototype.openFunctionLocationUC = function() {
            if (
              !!this.melAlertObject &&
              !!this.melAlertObject.defectMELAlertObject &&
              // tslint:disable-next-line:no-string-literal
              !!this.melAlertObject.defectMELAlertObject['fl_CODE']
            ) {
              var objectId = {
                // tslint:disable-next-line:no-string-literal
                flCode: this.melAlertObject.defectMELAlertObject['fl_CODE'],
                // tslint:disable-next-line:no-string-literal
                flDescription: this.melAlertObject.defectMELAlertObject['fl_DESCRIPTION']
              };
              var labelKey = 'transaction.FunctionalLocationFormComponent';
              var data = {
                id: this.tabService.generateId(),
                componentId: 'FunctionalLocationFormComponent',
                objectId: objectId != undefined ? this.serializationService.serialize(objectId) : undefined,
                openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read
              };
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          /*************************************************************************
           * Asset At Date Tab Operations
           *************************************************************************/
          DefectFormComponent.prototype.downloadACRSForm = function() {
            this.eventCreateService.generateAPRSCertificateForACRSEvent(this.defect).subscribe(function(result) {
              _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].downloadFile(
                result.fileContent,
                result.fileName
              );
            });
          };
          DefectFormComponent.prototype.downloadEASAForm = function() {
            this.eventCreateService.generateEASACertificateFromACRSEvent(this.defect).subscribe(function(result) {
              _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].downloadFile(
                result.fileContent,
                result.fileName
              );
            });
          };
          DefectFormComponent.prototype.updateACRS = function() {
            var _this = this;
            var partialMessageKey = this.getTranslateKey('closeACRSEvent');
            if (this.showForm1()) {
              partialMessageKey = this.getTranslateKey('closeForm1Event');
            }
            this.confirmationService.confirm({
              messageKey: partialMessageKey,
              accept: function() {
                _this.eventCreateService.updateBidoNotificationACRS(_this.defect).subscribe(function(res) {
                  // this.getBidoNotificationData();
                  // this.disableStatus = true;
                });
              }
            });
          };
          DefectFormComponent.prototype.showForm1 = function() {
            return (
              !!this.masterEquipment &&
              (this.masterEquipment.equipmentFunction ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .ITEM_FAMILY_CODE_ENGINE_KEY ||
                this.masterEquipment.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .ITEM_FAMILY_CODE_MAJOR_EQUIPMENT_KEY)
            );
          };
          /*************************************************************************
           * Measure Tab Operations
           *************************************************************************/
          DefectFormComponent.prototype.loadMeasureTableData = function() {
            var _this = this;
            this.isLoadingMeasureTable = true;
            var assetAtDateInput = {
              equipmentCode: this.masterEquipment.equipmentCode || '',
              fromDate: this.defect.reportingPeriodStartDate
            };
            this.eventCreateService.assetAtDateForMeasureTab(assetAtDateInput).subscribe(function(res) {
              _this.isLoadingMeasureTable = false;
              _this.bidoMeasuresDisplayed = _this.transformMeasures(res || []);
              _this.loadMeasureChartData();
            });
          };
          DefectFormComponent.prototype.loadCustomerOperatorOwnerName = function() {
            var _this = this;
            if (!!this.masterEquipment) {
              if (!!this.masterEquipment.ownerCustomerCode) {
                this.eventService
                  .findBidoCustomer({ customerCode: this.masterEquipment.ownerCustomerCode })
                  .subscribe(function(customer) {
                    _this.masterEquipment.ownerCustomerCode =
                      _this.masterEquipment.ownerCustomerCode +
                      ' (' +
                      _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].orEmpty(
                        customer.customerName
                      ) +
                      ')';
                  });
              }
              if (!!this.masterEquipment.operatorCustomerCode) {
                this.eventService
                  .findBidoCustomer({ customerCode: this.masterEquipment.operatorCustomerCode })
                  .subscribe(function(customer) {
                    _this.masterEquipment.operatorCustomerCode =
                      _this.masterEquipment.operatorCustomerCode +
                      ' (' +
                      _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].orEmpty(
                        customer.customerName
                      ) +
                      ')';
                  });
              }
            }
          };
          DefectFormComponent.prototype.isAircraft = function() {
            if (
              !!this.masterEquipment &&
              this.masterEquipment.equipmentFunction ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_AIRCRAFT_KEY
            ) {
              return true;
            }
            return false;
          };
          DefectFormComponent.prototype.isEstimateCounterVisible = function() {
            if (!!this.defect && !!this.defect.bidoNotificationTypeDTO) {
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_OPERATIONAL_KEY === this.defect.bidoNotificationTypeDTO.typeCategory &&
                !this.hasPropertyByCode
              ) {
                return true;
              }
            }
            return false;
          };
          DefectFormComponent.prototype.estimateCounter = function() {
            var _this = this;
            this.eventCreateService.generateEstimatedMeasures(this.defect).subscribe(function(res) {
              _this.loadMeasureTableData();
            });
          };
          DefectFormComponent.prototype.updateMeasure = function() {
            this.openEquipment(
              this.masterEquipment.equipmentCode,
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read
            );
          };
          DefectFormComponent.prototype.initMeasureChart = function() {
            this.measureVariationData = {
              datasets: [],
              labels: []
            };
            this.setMeasureChartOptions();
          };
          DefectFormComponent.prototype.initChart = function() {
            this.chartType = 'line';
            this.usageChartOptions = {
              scales: {
                yAxes: [
                  {
                    ticks: {
                      beginAtZero: true
                    }
                  }
                ]
              }
            };
            this.usageGraphData = {
              datasets: [
                {
                  // tslint:disable-next-line:no-magic-numbers
                  data: [],
                  label: 'Hours',
                  borderColor: '#D3C632',
                  backgroundColor: '#D3C632',
                  hoverBackgroundColor: '#D3C632',
                  fill: false
                },
                {
                  // tslint:disable-next-line:no-magic-numbers
                  data: [],
                  label: 'Cycle',
                  borderColor: '#42A5F5',
                  backgroundColor: '#42A5F5',
                  hoverBackgroundColor: '#42A5F5',
                  fill: false
                }
              ],
              labels: [] // To do
            };
          };
          DefectFormComponent.prototype.transformMeasures = function(listMeasures) {
            var _this = this;
            return listMeasures.map(function(obj) {
              var measureDataRow = {
                _obj: obj,
                counterCode: obj.counterCode,
                counterUnit: obj.counterUnit,
                cumulatedCounterValue: obj.cumulatedCounterValue,
                // ratingCounterValue: obj.ratingCounterValue,
                // ratingText: obj.ratingText,
                readingDate: _this.dateService.dateWithHourToString(obj.counterDate),
                referenceValue: obj.referenceValue,
                remainingValue: obj.remainingValue,
                dateLimit: _this.dateService.dateToString(obj.dateLimit),
                source: obj.source
              };
              return measureDataRow;
            });
          };
          DefectFormComponent.prototype.loadMeasureChartData = function() {
            var _this = this;
            this.showMeasureChart = false;
            var observables = [];
            if (this.bidoMeasuresDisplayed.length !== 0) {
              var setUpCounters_1 = [];
              this.bidoMeasuresDisplayed
                .filter(function(res) {
                  return res.counterCode === _this.tsnLabel || res.counterCode === _this.csnLabel;
                })
                .forEach(function(res) {
                  if (res && res._obj && res._obj.bidoEquipmentCounterDto) {
                    var counterCode = res.counterCode || '';
                    if (setUpCounters_1.indexOf(counterCode) < 0) {
                      var bidoEquipmentCounterDTOId = {
                        equipmentCode: res._obj.bidoEquipmentCounterDto.equipmentCode,
                        counterCode: res._obj.bidoEquipmentCounterDto.counterCode,
                        ratingCode: res._obj.bidoEquipmentCounterDto.ratingCode
                          ? res._obj.bidoEquipmentCounterDto.ratingCode
                          : '_',
                        familyCode: res._obj.bidoEquipmentCounterDto.familyCode
                      };
                      if (counterCode === _this.tsnLabel) {
                        _this.tsn = !!res.cumulatedCounterValue
                          ? res.cumulatedCounterValue + ' ' + res.counterUnit
                          : '';
                      }
                      if (counterCode === _this.csnLabel) {
                        _this.csn = !!res.cumulatedCounterValue
                          ? res.cumulatedCounterValue + ' ' + res.counterUnit
                          : '';
                      }
                      observables.push(_this.eventCreateService.getMeasureDetailTableData(bidoEquipmentCounterDTOId));
                      setUpCounters_1.push(counterCode || '');
                    }
                  }
                });
              if (observables.length > 0) {
                Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['forkJoin'])(observables).subscribe(function(results) {
                  _this.showMeasureChart = true;
                  _this.measureChartDataObj = results;
                  _this.measureChartDataObj.forEach(function(element) {
                    _this.initDateValues(element);
                  });
                  _this.setMeasureChartData();
                });
              }
            }
          };
          DefectFormComponent.prototype.initDateValues = function(measures) {
            var _this = this;
            var dateArray = [];
            if (!!measures) {
              measures.forEach(function(st) {
                if (st.readingDate !== null && st.readingDate !== undefined) {
                  dateArray.push(st.readingDate);
                }
              });
            }
            this.startDate = dateArray[0];
            this.endDate = dateArray[0];
            // iterate over array values and update min & max
            dateArray.forEach(function(v) {
              _this.endDate = v > _this.endDate ? v : _this.endDate;
              _this.startDate = v < _this.startDate ? v : _this.startDate;
            });
          };
          DefectFormComponent.prototype.setMeasureChartData = function() {
            var _this = this;
            if (
              this.measureChartDataObj !== null &&
              this.measureChartDataObj !== undefined &&
              this.measureChartDataObj.length > 0
            ) {
              this.measureVariationData.datasets = [];
              this.measureVariationData.labels = [];
              var dateLabels_1 = [];
              this.measureChartDataObj
                .filter(function(obj) {
                  if (_this.selectedMeasureType && obj && obj.length > 0) {
                    if (_this.selectedMeasureType === 'ALL') {
                      return true;
                    }
                    var getFirstElement = obj[0];
                    return getFirstElement.counterCode === _this.selectedMeasureType;
                  }
                  return true;
                })
                .forEach(function(element) {
                  var getFirstElement = element[0];
                  if (getFirstElement) {
                    var data = [];
                    var datasetObj_1 = {
                      data: data,
                      label: getFirstElement.counterCode === _this.tsnLabel ? 'Hours' : 'Cycle',
                      borderColor: getFirstElement.counterCode === _this.tsnLabel ? TSN_COLOR : CSN_COLOR,
                      backgroundColor: getFirstElement.counterCode === _this.tsnLabel ? TSN_COLOR : CSN_COLOR,
                      hoverBackgroundColor: getFirstElement.counterCode === _this.tsnLabel ? TSN_COLOR : CSN_COLOR,
                      fill: false
                    };
                    _this.measureVariationData.datasets.push(datasetObj_1);
                    element.forEach(function(st) {
                      if (
                        !!_this.startDate &&
                        !!_this.endDate &&
                        !!st.readingDate &&
                        st.readingDate >= _this.startDate &&
                        st.readingDate <= _this.endDate
                      ) {
                        if (st.cumulatedCounterValue !== null && st.cumulatedCounterValue !== undefined) {
                          dateLabels_1.push(st.readingDate);
                          datasetObj_1.data.push(parseInt(st.cumulatedCounterValue, 10));
                        }
                      }
                    });
                    datasetObj_1.data.reverse();
                  }
                });
              dateLabels_1.sort(function(a, b) {
                return b.getTime() - a.getTime();
              });
              dateLabels_1.reverse();
              dateLabels_1.forEach(function(label) {
                if (
                  _this.measureVariationData.labels.indexOf(_this.dateService.dateWithHourToStringWithoutHour(label)) <
                  0
                ) {
                  _this.measureVariationData.labels.push(_this.dateService.dateWithHourToStringWithoutHour(label));
                }
              });
              this.measureVariationData = __assign({}, this.measureVariationData);
            }
          };
          DefectFormComponent.prototype.setMeasureChartOptions = function() {
            this.measureChartOptions = {
              scales: {
                yAxes: [
                  {
                    ticks: {
                      beginAtZero: true
                    }
                  }
                ]
              },
              legend: {
                display: false
              },
              tooltips: {
                bodyFontColor:
                  _shared_constants_app_constants__WEBPACK_IMPORTED_MODULE_7__['AppConstants'].COLOR_BACKGROUND_PRIMARY
              }
            };
          };
          DefectFormComponent.prototype.getMonthGapToolTip = function(row) {
            if (row && row.aPotentialAlertData && row.aPotentialAlertData.monthGapToolTip) {
              return row.aPotentialAlertData.monthGapToolTip;
            }
            return '';
          };
          DefectFormComponent.prototype.getAlertIcon = function(row) {
            if (
              row &&
              row.aPotentialAlertData &&
              row.aPotentialAlertData.potentialAlertLevelInt !== null &&
              row.aPotentialAlertData.potentialAlertLevelInt !== undefined
            ) {
              return this.getColorByIconCode(row.aPotentialAlertData.potentialAlertLevelInt);
            }
            return '';
          };
          DefectFormComponent.prototype.getColorByIconCode = function(iconCode) {
            switch (iconCode.toString()) {
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_13__['ControlConfigConstants']
                .ICON_GREEN_LIGHT_CODE:
                return 'green';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_13__['ControlConfigConstants']
                .ICON_YELLOW_LIGHT_CODE:
                return 'yellow';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_13__['ControlConfigConstants']
                .ICON_RED_LIGHT_CODE:
                return 'red';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_13__['ControlConfigConstants']
                .ICON_NONE_LIGHT_CODE:
                return '';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_13__['ControlConfigConstants']
                .ICON_GREEN_LED_CODE:
                return 'green';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_13__['ControlConfigConstants']
                .ICON_YELLOW_LED_CODE:
                return 'yellow';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_13__['ControlConfigConstants']
                .ICON_RED_LED_CODE:
                return 'red';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_13__['ControlConfigConstants']
                .ICON_NONE_LED_CODE:
                return '';
              default:
                return '';
            }
          };
          DefectFormComponent.prototype.getAlertIconTooltip = function(row) {
            if (row && row.aPotentialAlertData && row.aPotentialAlertData.alertTooltip) {
              return row.aPotentialAlertData.alertTooltip;
            }
            return '';
          };
          DefectFormComponent.prototype.openEquipment = function(objectId, openMode) {
            if (!!this.masterEquipment) {
              var labelNm = void 0;
              var componentName = void 0;
              var functionNm = this.masterEquipment.equipmentFunction;
              if (
                !functionNm ||
                functionNm ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_MAJOR_EQUIPMENT_KEY
              ) {
                labelNm = 'transaction.EquipmentFormComponent';
                componentName = 'EquipmentFormComponent';
              } else {
                if (
                  functionNm ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_ENGINE_KEY
                ) {
                  labelNm = 'transaction.EngineFormComponent';
                  componentName = 'EngineFormComponent';
                } else if (
                  functionNm ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_AIRCRAFT_KEY
                ) {
                  labelNm = 'transaction.AircraftFormComponent';
                  componentName = 'AircraftFormComponent';
                } else {
                  labelNm = 'transaction.EquipmentFormComponent';
                  componentName = 'EquipmentFormComponent';
                }
              }
              var labelKey = labelNm;
              var data = {
                id: this.tabService.generateId(),
                componentId: componentName,
                openMode: openMode
              };
              if (!!objectId) {
                var equipmentId = {
                  equipmentCode: objectId
                };
                data.objectId = this.serializationService.serialize(equipmentId);
              }
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          DefectFormComponent.prototype.isEngine = function() {
            if (
              !!this.masterEquipment &&
              this.masterEquipment.equipmentFunction ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_ENGINE_KEY
            ) {
              return true;
            }
            return false;
          };
          /*************************************************************************
           * Arising Event Tab Operations
           *************************************************************************/
          DefectFormComponent.prototype.loadArisingEventData = function() {
            var _this = this;
            this.isLoadingEventsTable = true;
            var eventCriteriaInputDTO = {
              notNotificationCode: this.defect.notificationCode
            };
            this.eventCreateService.findLinkingEventData(eventCriteriaInputDTO).subscribe(function(res) {
              _this.isLoadingEventsTable = false;
              _this.arisingEventTableData = [];
              res.list.forEach(function(row) {
                var tableArr = {
                  notificationCode: row.notificationCode,
                  typeCode: row.typeCode,
                  asset: row.asset,
                  closureDate: row.reportingDate,
                  eventType: row.typeCode,
                  notificationSubject: row.notificationSubject,
                  reportingDate: row.reportingDate,
                  reportingPeriodEndDate: row.reportingPeriodEndDate,
                  reportingPeriodStartDate: row.reportingPeriodStartDate,
                  equipmentCode: row.equipmentCode,
                  equipmentFunction: row.equipmentFunction
                };
                _this.arisingEventTableData.push(tableArr);
              });
            });
          };
          DefectFormComponent.prototype.setNavigationLinkList = function() {
            var _this = this;
            var operational = this.getTranslateKey('operational');
            var maintenance = this.getTranslateKey('maintenance');
            var configuration = this.getTranslateKey('configuration');
            this.translateService.get([operational, maintenance, configuration]).subscribe(function(results) {
              var operationalLabel = results ? results[operational] : 'Asset Maintenance Plan';
              var maintenanceLabel = results ? results[maintenance] : 'Asset Review';
              var configurationLabel = results ? results[configuration] : 'Airworthiness Control';
              _this.navigationLinkList = [
                {
                  label: operationalLabel,
                  command: function() {
                    _this.openCreateEvent(
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_CATEGORY_OPERATIONAL_KEY
                    );
                  }
                },
                {
                  label: maintenanceLabel,
                  command: function() {
                    _this.openCreateEvent(
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_CATEGORY_MAINTENANCE_KEY
                    );
                  }
                },
                {
                  label: configurationLabel,
                  command: function() {
                    _this.openCreateEvent(
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_CATEGORY_CONFIGURATION_KEY
                    );
                  }
                }
              ];
            });
          };
          DefectFormComponent.prototype.openCreateEvent = function(code) {
            var bidoNotificationDTO = {
              bidoNotificationTypeDTO: {
                typeCategory: code
              },
              equipmentCode: this.masterEquipment.equipmentCode,
              bidoEquipmentDTO: this.masterEquipment,
              notNotificationCode: this.defect.notificationCode
            };
            this.openLinkedCreateEventUC(
              bidoNotificationDTO,
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Create
            );
          };
          DefectFormComponent.prototype.openLinkedCreateEventUC = function(objectId, openMode) {
            var data = {
              id: this.tabService.generateId(),
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_12__['ComponentConstants']
                  .FLE_EVENT_CREATE,
              openMode: openMode
            };
            if (!!objectId) {
              data.objectId = this.serializationService.serialize(objectId);
            }
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          DefectFormComponent.prototype.deleteEvents = function() {
            var _this = this;
            var confirmMessageKey =
              this.selectedArisingEvents.length > 1 ? 'confirmDeleteSelectedEvents' : 'confirmDeleteSelectedEvent';
            this.confirmationService.confirmDelete({
              messageKey: this.getTranslateKey(confirmMessageKey),
              accept: function() {
                var eventIds = [];
                _this.selectedArisingEvents.map(function(event) {
                  if (!!event && !!event.notificationCode) {
                    var dto = {
                      notificationCode: event.notificationCode
                    };
                    eventIds.push(dto);
                  }
                });
                _this.eventService.removeBidoNotification(eventIds).subscribe(function() {
                  var successMessageKey =
                    _this.selectedArisingEvents.length > 1 ? 'successOnDeleteEvents' : 'successOnDeleteEvent';
                  _this.messageService.showSuccessMessage(_this.getTranslateKey(successMessageKey));
                  _this.selectedArisingEvents = [];
                });
              }
            });
          };
          DefectFormComponent.prototype.openArisingEventAsset = function(row) {
            if (!!row) {
              this.openAssetUC(
                row.equipmentCode,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read,
                row.equipmentFunction || undefined
              );
            }
          };
          DefectFormComponent.prototype.openAssetUC = function(objectId, openMode, functionNm) {
            var labelNm;
            var componentName;
            if (
              functionNm &&
              functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_AIRCRAFT_KEY
            ) {
              labelNm = 'transaction.AircraftFormComponent';
              componentName = 'AircraftFormComponent';
            } else if (
              functionNm &&
              functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_ENGINE_KEY
            ) {
              labelNm = 'transaction.EngineFormComponent';
              componentName = 'EngineFormComponent';
            } else if (
              functionNm &&
              functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_TOOL_KEY
            ) {
              labelNm = 'transaction.ToolFormComponent';
              componentName = 'ToolFormComponent';
            } else {
              labelNm = 'transaction.EquipmentFormComponent';
              componentName = 'EquipmentFormComponent';
            }
            var labelKey = labelNm;
            var data = {
              id: this.tabService.generateId(),
              componentId: componentName,
              openMode: openMode
            };
            if (!!objectId) {
              var equipmentId = {
                equipmentCode: objectId
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          DefectFormComponent.prototype.openEvent = function(rowData) {
            var bidoNotificationDTO = {
              bidoNotificationTypeDTO: {
                typeCode: rowData.typeCode
              },
              notificationCode: rowData.notificationCode,
              typeCode: rowData.typeCode
            };
            this.openEventUC(
              bidoNotificationDTO,
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Read
            );
          };
          DefectFormComponent.prototype.openEventUC = function(objectId, openMode) {
            var data = {
              id: this.tabService.generateId(),
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_12__['ComponentConstants']
                  .FLE_EVENT_CREATE,
              openMode: openMode
            };
            if (!!objectId) {
              var eventId = {
                notificationCode: objectId.notificationCode
              };
              data.objectId = this.serializationService.serialize(eventId);
            }
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          /*************************************************************************
           * Diffusion Tab Operations
           *************************************************************************/
          DefectFormComponent.prototype.loadDiffusionTableData = function() {
            var _this = this;
            if (!!this.defect.notificationCode) {
              this.isLoadingDiffusionTable = true;
              this.eventCreateService
                .findBidoNotificationContactsByNotificationCode(this.defect.notificationCode)
                .subscribe(function(res) {
                  res.forEach(function(data) {
                    if (!!data && !!data.bidoContactDTO) {
                      _this.diffusionTableData.push({
                        customerCode: data.bidoContactDTO.customerCode,
                        customerName: data.bidoContactDTO.customerName,
                        contactName: data.bidoContactDTO.contactName,
                        // tslint:disable-next-line:no-string-literal
                        email: data.bidoContactDTO['email']
                      });
                    }
                  });
                  _this.isLoadingDiffusionTable = false;
                });
            }
          };
          DefectFormComponent.prototype.sendDiffusionMail = function() {
            var _this = this;
            var contactsList = [];
            this.selectedDiffusion.forEach(function(res) {
              if (!!res && !!res.email) {
                contactsList.push({
                  eMail: res.email,
                  contactName: res.contactName,
                  customerCode: res.customerCode,
                  customerName: res.customerName,
                  firstName: res.firstName,
                  lastName: res.lastName
                });
              }
            });
            var sendEventNotificationToContactsDTO = {
              bidoNotificationDTOId: {
                notificationCode: this.defect.notificationCode
              },
              contactList: contactsList
            };
            this.eventCreateService
              .sendEventNotificationToContacts(sendEventNotificationToContactsDTO)
              .subscribe(function(res) {
                _this.messageService.showSuccessMessage(_this.getTranslateKey('notificationSent'));
              });
          };
          /*************************************************************************
           * Symptom and Context Operations
           *************************************************************************/
          DefectFormComponent.prototype.onChangeContext = function(dto) {
            var _this = this;
            this.showContextHeader = false;
            var bidoEventExtensionDTO = {};
            if (!dto) {
              bidoEventExtensionDTO = {
                contextMissionType: this.contextTabData.missionType,
                extensionCode: this.contextTabData.symptomCode,
                notificationCode: this.defect.notificationCode
              };
            } else {
              bidoEventExtensionDTO = dto;
            }
            this.eventCreateService.getAddedSymptomParameterList(bidoEventExtensionDTO).subscribe(function(result) {
              if (!!result) {
                if (!dto) {
                  _this.contextTableData = [];
                } else {
                  _this.symptomParameterTableData = [];
                }
                result.forEach(function(res) {
                  if (!dto) {
                    _this.contextTableData.push({
                      code: res.code,
                      extensionCode: res.extensionCode,
                      unit: res.unit,
                      name: res.name
                    });
                  } else {
                    _this.symptomParameterTableData.push({
                      code: res.code,
                      extensionCode: res.extensionCode,
                      name: res.name,
                      unit: res.unit
                    });
                  }
                });
              }
            });
            if (!this.contextTabData.symptomCode) {
              this.contextTabData.missionType = undefined;
              this.contextTabData.symptomComment = undefined;
            }
          };
          DefectFormComponent.prototype.loadContextTable = function() {
            var _this = this;
            this.eventCreateService
              .findBidoEventExtensionsTypedContextByNotificationCode(this.defect.notificationCode)
              .subscribe(function(result) {
                if (!!result) {
                  _this.contextTabData = result;
                  _this.contextTableData = !!result.bidoParameterCustomTableDTOList
                    ? result.bidoParameterCustomTableDTOList
                    : [];
                }
              });
          };
          DefectFormComponent.prototype.loadSymptomTable = function() {
            var _this = this;
            this.eventCreateService
              .findBidoEventExtensionsTypedSymptomByNotificationCode(this.defect.notificationCode)
              .subscribe(function(result) {
                _this.symptomRowData = [];
                _this.symptomTabData = result;
                result.forEach(function(data) {
                  _this.symptomRowData.push({
                    symptomComment: data.symptomComment,
                    symptomName: data.symptomName,
                    symptomCode: data.symptomCode,
                    rowId: Math.random()
                  });
                });
              });
          };
          DefectFormComponent.prototype.hideSymptomParamheader = function() {
            this.selectedSymptomParam = {};
            this.showSymptomParamHeader = false;
          };
          DefectFormComponent.prototype.onSymptomRowSelect = function(event) {
            this.showSymptomHeader = true;
            this.hideSymptomParamheader();
            var data = event.data;
            this.symptomParameterTableData = [];
            var dtoArr = [];
            dtoArr = this.symptomTabData.filter(function(res) {
              return res.symptomName === data.symptomName && res.symptomCode === data.symptomCode;
            });
            if (dtoArr.length > 0) {
              this.symptomParameterTableData = !!dtoArr[0].bidoParameterCustomTableDTOList
                ? dtoArr[0].bidoParameterCustomTableDTOList
                : [];
            } else {
              var bidoEventExtensionDTO = {
                extensionCode: this.selectedSymptom.symptomCode,
                notificationCode: this.defect.notificationCode
              };
              this.onChangeContext(bidoEventExtensionDTO);
            }
          };
          DefectFormComponent.prototype.hideSymptomRowHeader = function() {
            this.showSymptomHeader = false;
          };
          DefectFormComponent.prototype.onSymptomRowUnselect = function() {
            this.hideSymptomParamheader();
            this.hideSymptomRowHeader();
            this.symptomParameterTableData = [];
            this.showSymptomParamHeader = false;
          };
          DefectFormComponent.prototype.onChangeMissionType = function() {
            this.showContextHeader = false;
          };
          DefectFormComponent.prototype.onContextRowSelect = function(event) {
            this.showContextHeader = true;
          };
          DefectFormComponent.prototype.onContextRowUnselect = function() {
            this.showContextHeader = false;
          };
          DefectFormComponent.prototype.onSymptomParamRowSelect = function(event) {
            this.showSymptomParamHeader = true;
          };
          DefectFormComponent.prototype.onSymptomParamRowUnselect = function() {
            this.showSymptomParamHeader = false;
          };
          DefectFormComponent.prototype.editSelectedContextParam = function() {
            this.dataContext = {
              componentId: 'DialogAddSymptomComponent',
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Write,
              object: this.selectedContext.value,
              selectedRow: undefined
            };
            this.showContextTableDialog = true;
          };
          DefectFormComponent.prototype.onAddContextParam = function(event) {
            this.selectedContext.value = event;
            this.addedContextParam.push(this.selectedContext);
            this.selectedContext = {};
            this.showContextHeader = false;
          };
          DefectFormComponent.prototype.onAddSymptomParamParam = function(event) {
            this.selectedSymptomParam.value = event;
            this.addedSymptomParam.push(this.selectedSymptomParam);
            this.selectedSymptomParam = {};
            this.showSymptomParamHeader = false;
          };
          DefectFormComponent.prototype.editSelectedSymptomParam = function() {
            this.dataContext = {
              componentId: 'DialogAddParamValueComponent',
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Write,
              object: this.selectedSymptomParam.value,
              selectedRow: undefined
            };
            this.showSymptomParamDialog = true;
          };
          DefectFormComponent.prototype.editSymptom = function() {
            var _this = this;
            this.symptomRowData.filter(function(data, index) {
              if (data.symptomCode === _this.selectedSymptom.symptomCode) {
                _this.editedSymptomIndex = index;
              }
            });
            this.dataSymptom = {
              componentId: 'DialogAddSymptomComponent',
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Write,
              object: this.selectedSymptom,
              selectedRow: undefined
            };
            this.showSymptomTableDialog = true;
          };
          DefectFormComponent.prototype.addSymptom = function() {
            this.dataSymptom = {
              componentId: 'DialogAddSymptomComponent',
              openMode:
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Create,
              object: {},
              selectedRow: undefined
            };
            this.showSymptomTableDialog = true;
          };
          DefectFormComponent.prototype.deleteSelectedSymptom = function() {
            var _this = this;
            var index = -1;
            this.symptomRowData.filter(function(res, ind) {
              if (_this.selectedSymptom.rowId === res.rowId) {
                index = ind;
              }
            });
            this.symptomRowData.splice(index, 1);
            this.showSymptomHeader = false;
          };
          DefectFormComponent.prototype.onUpdateSymptom = function(event) {
            this.symptomRowData[this.editedSymptomIndex] = {
              symptomCode: event.symptomCode,
              symptomName: this.getLabel(event.symptomCode, this.symptomNameMap),
              symptomComment: event.symptomComment,
              rowId: event.rowId
            };
            var addedIndex = -1;
            this.symptomAdded.forEach(function(data, index) {
              if (data.rowId === event.rowId) {
                addedIndex = index;
              }
            });
            if (addedIndex !== -1) {
              this.symptomAdded[addedIndex] = this.symptomRowData[this.editedSymptomIndex];
            }
            this.selectedSymptom = {};
            this.showSymptomHeader = false;
            this.symptomParameterTableData = [];
          };
          DefectFormComponent.prototype.onAddSymptom = function(event) {
            var isFound = false;
            this.symptomRowData.forEach(function(data) {
              if (data.symptomCode === event.symptomCode) {
                isFound = true;
              }
            });
            if (!isFound) {
              var id = Math.random();
              this.symptomRowData.push({
                symptomCode: event.symptomCode,
                symptomName: this.getLabel(event.symptomCode, this.symptomNameMap),
                symptomComment: event.symptomComment,
                rowId: id
              });
              this.symptomAdded.push({
                symptomCode: event.symptomCode,
                symptomName: this.getLabel(event.symptomCode, this.symptomNameMap),
                symptomComment: event.symptomComment,
                rowId: id
              });
            } else {
              this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));
            }
          };
          DefectFormComponent.prototype.getLabel = function(val, itemList) {
            var value;
            value = itemList.filter(function(res) {
              return res.value === val;
            });
            return value.length > 0 ? value[0].label : val;
          };
          /*************************************************************************
           * Fetch Attribute data and operations related
           *************************************************************************/
          DefectFormComponent.prototype.fillAttibuteDropdown = function() {
            var _this = this;
            var attribute = {
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_LOCATION.toString()
            };
            this.eventService.findBidoAttribute(attribute).subscribe(function(res) {
              _this.eventLocationMap = [];
              if (!!res && !!res.bidoAttributeValueDatas) {
                res.bidoAttributeValueDatas.forEach(function(resp) {
                  _this.eventLocationMap.push({
                    label: resp.textEn,
                    value: resp.attributeValue
                  });
                });
              }
            });
          };
          DefectFormComponent.prototype.setCircumstanceTabData = function() {
            var _this = this;
            var symptomArr = [];
            // if (this.addedSymptomParam.length > 0 && this.symptomAdded.length === 0) {
            this.symptomRowData.forEach(function(res) {
              symptomArr.push({
                notificationCode: _this.defect.notificationCode,
                extensionCode: res.symptomCode,
                extensionComment: res.symptomComment
              });
            });
            // } else {
            //   this.symptomAdded.forEach((res) => {
            //     symptomArr.push({
            //       notificationCode: this.bidoNotificationDTO.notificationCode,
            //       extensionCode: res.symptomCode,
            //       extensionComment: res.symptomComment
            //     });
            //   });
            // }
            var eventExtensionDTO;
            if (!!this.contextTabData.symptomCode) {
              eventExtensionDTO = {
                contextMissionType: this.contextTabData.missionType,
                extensionCode: this.contextTabData.symptomCode,
                extensionComment: this.contextTabData.symptomComment,
                notificationCode: this.defect.notificationCode
              };
            } else {
              eventExtensionDTO = {};
            }
            var saveBidoEventExtensionCustomDTO = {};
            if (!!eventExtensionDTO && Object.keys(eventExtensionDTO).length > 0) {
              if (this.addedContextParam.length > 0) {
                var paramDTO_1 = [];
                this.addedContextParam.forEach(function(row) {
                  paramDTO_1.push({
                    extensionCode: _this.contextTabData.symptomCode,
                    notificationCode: _this.defect.notificationCode,
                    parameterCode: row.code,
                    parameterValue: !!row.value ? row.value : undefined
                  });
                });
                eventExtensionDTO.bidoEventParameterDTOList = paramDTO_1;
              }
              saveBidoEventExtensionCustomDTO.bidoEventExtensionDTO = eventExtensionDTO;
              saveBidoEventExtensionCustomDTO.notificationCode = this.defect.notificationCode;
            }
            if (symptomArr.length > 0) {
              // TODO to save symptom param
              this.addedSymptomParam.forEach(function(param) {
                symptomArr.forEach(function(symptom) {
                  if (param.extensionCode === symptom.extensionCode) {
                    var paramDTO = {};
                    paramDTO = {
                      extensionCode: symptom.extensionCode,
                      notificationCode: _this.defect.notificationCode,
                      parameterCode: param.code,
                      parameterValue: !!param.value ? param.value : undefined
                    };
                    if (!!symptom) {
                      if (symptom.bidoEventParameterDTOList !== undefined) {
                        symptom.bidoEventParameterDTOList.push(paramDTO);
                      } else {
                        symptom.bidoEventParameterDTOList = [];
                        symptom.bidoEventParameterDTOList.push(paramDTO);
                      }
                    }
                  }
                });
              });
              saveBidoEventExtensionCustomDTO.bidoEventExtensionDTOList = symptomArr;
              saveBidoEventExtensionCustomDTO.notificationCode = this.defect.notificationCode;
            }
            return saveBidoEventExtensionCustomDTO;
          };
          DefectFormComponent.prototype.loadCircumstancesDropdown = function() {
            var _this = this;
            // Load dropdowns
            var observables = [
              this.eventCreateService.findAllBidoExtensionList('C'),
              this.eventCreateService.findAllBidoExtensionList('S'),
              this.propertiesService.getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_14__['GenericPropertyConstants']
                  .EVENT_MISSION_TYPE_MAP
              )
            ];
            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['forkJoin'])(observables).subscribe(function(_a) {
              var _b = __read(_a, 3),
                contextMap = _b[0],
                symptomMap = _b[1],
                missionMap = _b[2];
              _this.contextNameMap = contextMap;
              _this.symptomNameMap = symptomMap;
              _this.contextMissionMap = missionMap;
            });
          };
          DefectFormComponent.prototype.fillDelayAuthorizedWithUnit = function() {
            var DAYS = 'Days';
            var B_DELAY_VAL = '3';
            var C_DELAY_VAL = '10';
            var D_DELAY_VAL = '120';
            switch (this.deferralDelayCategory) {
              case 'A':
                this.deferralDelayAuthorizedValue = !this.deferralDelayAuthorizedValue
                  ? undefined
                  : this.deferralDelayAuthorizedValue;
                this.deferralDelayAuthorizedUnit = DAYS;
                break;
              case 'B':
                this.deferralDelayAuthorizedValue = !this.deferralDelayAuthorizedValue
                  ? B_DELAY_VAL
                  : this.deferralDelayAuthorizedValue;
                this.deferralDelayAuthorizedUnit = DAYS;
                break;
              case 'C':
                this.deferralDelayAuthorizedValue = !this.deferralDelayAuthorizedValue
                  ? C_DELAY_VAL
                  : this.deferralDelayAuthorizedValue;
                this.deferralDelayAuthorizedUnit = DAYS;
                break;
              case 'D':
                this.deferralDelayAuthorizedValue = !this.deferralDelayAuthorizedValue
                  ? D_DELAY_VAL
                  : this.deferralDelayAuthorizedValue;
                this.deferralDelayAuthorizedUnit = DAYS;
                break;
              default:
                break;
            }
          };
          /**
           * In Case any field from defect tab is altered, status changes to OPEN
           */
          DefectFormComponent.prototype.isChangeInStatus = function(bidoNotification) {
            var defectDetection =
              !!this.defectContext && !!this.defectContext.defectDetectionContext
                ? this.defectContext.defectDetectionContext
                : this.defectDetectionContext;
            if (
              this.dbDefect.notificationSubject !== this.defect.notificationSubject ||
              this.dbdefectAuthor !== this.defectAuthor ||
              this.dbDefectIsCritical !== this.defectIsCritical ||
              this.dbDefectLogNumber !== this.defectLogNumber ||
              this.dbSelectedInspectionMean !== this.selectedInspectionMean ||
              this.dbSelectedFaultCode !== this.selectedFaultCode ||
              this.dbDefectSrmReference !== this.defectSrmReference ||
              this.dbDefectDetectionContext !== defectDetection ||
              this.dbRootCauseDefectLocation !== this.rootCauseDefectLocation ||
              this.dbRootCauseDefectName !== this.rootCauseDefectName ||
              this.dbRootCauseComment !== this.rootCauseComment
            ) {
              bidoNotification.status =
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__[
                  'AWPropertiesConstants'
                ].EVENT_STATUS_OPENED_KEY;
              this.setDefectStatus(
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_OPENED_KEY
              );
            }
            if (!!this.defect.bidoRootCauseDTO) {
              if (!this.dbDefect.bidoRootCauseDTO) {
                this.dbDefect.bidoRootCauseDTO = {};
              }
              var dbVal = this.dbDefect.bidoRootCauseDTO;
              var currentVal = this.defect.bidoRootCauseDTO;
              if (
                dbVal.defectLocation !== currentVal.defectLocation ||
                dbVal.defectName !== currentVal.defectName ||
                dbVal.rootCauseAssetCode !== currentVal.rootCauseAssetCode ||
                ((!!dbVal.rootCauseChapter || !!currentVal.rootCauseChapter) &&
                  dbVal.rootCauseChapter !== currentVal.rootCauseChapter) ||
                dbVal.rootCauseComment !== currentVal.rootCauseComment ||
                dbVal.rootCauseFlCode !== currentVal.rootCauseFlCode ||
                dbVal.rootCauseId !== currentVal.rootCauseId ||
                ((!!dbVal.rootCauseMark || !!currentVal.rootCauseMark) &&
                  dbVal.rootCauseMark !== currentVal.rootCauseMark) ||
                dbVal.rootCausePn !== currentVal.rootCausePn ||
                dbVal.rootCauseQuantity !== currentVal.rootCauseQuantity ||
                ((!!dbVal.rootCauseSection || !!currentVal.rootCauseSection) &&
                  dbVal.rootCauseSection !== currentVal.rootCauseSection) ||
                ((!!dbVal.rootCauseSheet || !!currentVal.rootCauseSheet) &&
                  dbVal.rootCauseSheet !== currentVal.rootCauseSubject) ||
                ((!!dbVal.rootCauseSubject || !!currentVal.rootCauseSubject) &&
                  dbVal.rootCauseSubject !== currentVal.rootCauseSubject)
              ) {
                bidoNotification.status =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__[
                    'AWPropertiesConstants'
                  ].EVENT_STATUS_OPENED_KEY;
                this.setDefectStatus(
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_STATUS_OPENED_KEY
                );
              }
            }
          };
          DefectFormComponent.prototype.showOpenField = function() {
            return this.sessionService.isSpecificDassault;
          };
          DefectFormComponent.prototype.openField = function() {
            if (!!this.defectSrmReference) {
              this.davFieldService
                .buildTaskFieldLink({
                  taskDmc: this.defectSrmReference,
                  familyVariantCode: this.masterFamilyVariantCode
                })
                .subscribe(function(data) {
                  window.open(data);
                });
            }
          };
          DefectFormComponent.prototype.openContextWP = function() {
            if (!!this.defectContextWP) {
              var data = {
                id: this.tabService.generateId(),
                componentId:
                  _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_12__['ComponentConstants']
                    .MAI_WORK_PACKAGE_FORM,
                openMode:
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Write,
                objectId: this.serializationService.serialize({ wpId: this.defectContextWP.projectId })
              };
              var labelKey = 'transaction.' + data.componentId;
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          DefectFormComponent.prototype.openWO = function(bidmWorkOrderDTO) {
            if (!!bidmWorkOrderDTO) {
              var objectId = {
                projectId: bidmWorkOrderDTO.projectId,
                woId: bidmWorkOrderDTO.woId
              };
              var data = {
                id: this.tabService.generateId(),
                componentId:
                  _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_12__['ComponentConstants']
                    .MAI_WORK_ORDER_FORM,
                openMode:
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_16__['ComponentOpenMode'].Write,
                objectId: this.serializationService.serialize(objectId)
              };
              var labelKey = 'transaction.' + data.componentId;
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          DefectFormComponent.prototype.showStatus = function() {
            var _this = this;
            var overlayRef = this._overlayService.openWithPositionCenter({
              content: _status_status_defect_status_component__WEBPACK_IMPORTED_MODULE_42__['DefectStatusComponent'],
              data: this.defect
            });
            overlayRef.afterClosed$.subscribe({
              next: function(event) {
                if (event.data) {
                  var currentState = _this.defect.status;
                  _this.defect.status = event.data;
                  var saved = _this.saveDefect();
                  if (!saved) {
                    // Revert status change if save not launched
                    _this.defect.status = currentState;
                  }
                }
              }
            });
          };
          DefectFormComponent.prototype.loadAuthorAndLastAuthor = function(defectNotificationCode) {
            var _this = this;
            var bidoNotificationDTOId = {
              notificationCode: defectNotificationCode
            };
            this.eventCreateService.findHBidoNotifications(bidoNotificationDTOId).subscribe(function(results) {
              if (!!results.list[0].statusUser) {
                _this.lastAuthor = results.list[0].statusUser;
              }
              if (!!results.list[results.list.length - 1].statusUser) {
                _this.author = results.list[results.list.length - 1].statusUser;
              }
            });
          };
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('mainAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            DefectFormComponent.prototype,
            'mainAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('defectAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            DefectFormComponent.prototype,
            'defectAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('correctiveActionAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            DefectFormComponent.prototype,
            'correctiveActionAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('deferralAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            DefectFormComponent.prototype,
            'deferralAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('documentAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            DefectFormComponent.prototype,
            'documentAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('attributeAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            DefectFormComponent.prototype,
            'attributeAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('assetAtDate'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            DefectFormComponent.prototype,
            'assetAtDate',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('arisingEvents'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            DefectFormComponent.prototype,
            'arisingEvents',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('diffusion'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            DefectFormComponent.prototype,
            'diffusion',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('cirumstances'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            DefectFormComponent.prototype,
            'cirumstances',
            void 0
          );
          DefectFormComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-defect-form',
                template: __webpack_require__(
                  /*! ./defect-form.component.html */ './src/app/main/fleet-management/event/defect-form/defect-form.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./defect-form.component.scss */ './src/app/main/fleet-management/event/defect-form/defect-form.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_22__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_23__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_24__['MessageService'],
                _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_5__['PageTocService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_26__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_28__['TabService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_27__['SessionService'],
                _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_19__['ConfirmationService'],
                _shared_services_date_service__WEBPACK_IMPORTED_MODULE_21__['DateService'],
                _shared_components_dynamic_attributes_dynamic_attributes_service__WEBPACK_IMPORTED_MODULE_6__[
                  'DynamicAttributesService'
                ],
                _event_service__WEBPACK_IMPORTED_MODULE_41__['EventService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_25__['PropertiesService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService'],
                _shared_services_dassault_field_service__WEBPACK_IMPORTED_MODULE_20__['DavFieldService'],
                _overlay_overlay_service__WEBPACK_IMPORTED_MODULE_39__['OverlayService'],
                _event_create_event_create_service__WEBPACK_IMPORTED_MODULE_40__['EventCreateService']
              ])
            ],
            DefectFormComponent
          );
          return DefectFormComponent;
        })(_shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_29__['FormPageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/defect-form/dialog-defect-bido-document/dialog-defect-bido-document.component.html':
      /*!********************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/defect-form/dialog-defect-bido-document/dialog-defect-bido-document.component.html ***!
  \********************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="row">\r\n      <div class="form-group">\r\n        <label class="form-label">{{ getComponentName() + ".docName" | translate }}</label>\r\n\r\n        <div class="form-control">\r\n          <input\r\n            type="text"\r\n            name="docName"\r\n            class="aw-input"\r\n            [(ngModel)]="document.docName"\r\n            [disabled]="isReadOpenMode"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="form-group">\r\n      <label class="form-label">{{ getComponentName() + ".docType" | translate }}</label>\r\n\r\n      <div class="form-control">\r\n        <p-dropdown\r\n          class="aw-dropdown fixed-width"\r\n          [options]="types"\r\n          [(ngModel)]="document.docType"\r\n          [disabled]="isReadOpenMode"\r\n          [showClear]="true"\r\n          placeholder="&nbsp;"\r\n          appendTo="body"\r\n        ></p-dropdown>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="row">\r\n      <div class="form-group">\r\n        <label class="form-label">{{ getComponentName() + ".docDescription" | translate }}</label>\r\n\r\n        <div class="form-control">\r\n          <textarea\r\n            name="docDescription"\r\n            class="aw-textarea"\r\n            [rows]="3"\r\n            pInputTextarea\r\n            [(ngModel)]="document.docDescription"\r\n            [disabled]="isReadOpenMode"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">{{ "global.cancel" | translate }}</button>\r\n    <button\r\n      *ngIf="!isReadOpenMode"\r\n      type="button"\r\n      mat-raised-button\r\n      (click)="validate()"\r\n      color="primary"\r\n      [disabled]="!document.docFile && !document.docSource"\r\n    >\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/defect-form/dialog-defect-bido-document/dialog-defect-bido-document.component.ts':
      /*!******************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/defect-form/dialog-defect-bido-document/dialog-defect-bido-document.component.ts ***!
  \******************************************************************************************************************************/
      /*! exports provided: DialogDefectBidoDocumentComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogDefectBidoDocumentComponent',
          function() {
            return DialogDefectBidoDocumentComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var DialogDefectBidoDocumentComponent = /** @class */ (function(_super) {
          __extends(DialogDefectBidoDocumentComponent, _super);
          function DialogDefectBidoDocumentComponent() {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Read,
                'DialogDefectBidoDocumentComponent'
              ) || this;
            _this.displayChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.onValidated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            return _this;
          }
          DialogDefectBidoDocumentComponent.prototype.ngOnInit = function() {
            this.updateOpenMode(this.openMode);
            if (!this.document) {
              this.document = {};
            }
            if (!this.types) {
              this.types = [];
            }
          };
          DialogDefectBidoDocumentComponent.prototype.validate = function() {
            this.onValidated.emit(this.document);
            this.closeDialog();
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogDefectBidoDocumentComponent.prototype,
            'document',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Number)],
            DialogDefectBidoDocumentComponent.prototype,
            'openMode',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            DialogDefectBidoDocumentComponent.prototype,
            'types',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            DialogDefectBidoDocumentComponent.prototype,
            'onValidated',
            void 0
          );
          DialogDefectBidoDocumentComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-dialog-defect-bido-document',
                template: __webpack_require__(
                  /*! ./dialog-defect-bido-document.component.html */ './src/app/main/fleet-management/event/defect-form/dialog-defect-bido-document/dialog-defect-bido-document.component.html'
                )
              }),
              __metadata('design:paramtypes', [])
            ],
            DialogDefectBidoDocumentComponent
          );
          return DialogDefectBidoDocumentComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/defect-form/dialog-defect-component/dialog-defect-component.component.html':
      /*!************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/defect-form/dialog-defect-component/dialog-defect-component.component.html ***!
  \************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n      <label class="form-label">{{ "global.pn" | translate }}</label>\r\n\r\n      <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n        <div class="form-control-data" (click)="openPart()">\r\n          {{ component.birePnPnCode }}\r\n        </div>\r\n\r\n        <div *ngIf="component.birePnPnCode" class="btn-clear-wrapper">\r\n          <i\r\n            class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n            aria-hidden="true"\r\n            (click)="component.birePnPnCode = undefined"\r\n          ></i>\r\n        </div>\r\n        <div class="btn-search-wrapper">\r\n          <i class="fa fa-fw fa-search aw-icon btn-search" aria-hidden="true" (click)="openPart()"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="form-group">\r\n      <label class="form-label">{{ "global.sn" | translate }}</label>\r\n      <div class="form-control">\r\n        <input type="text" class="aw-input" [(ngModel)]="component.stockMvtSn" [disabled]="isReadOpenMode" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class="form-group">\r\n      <label class="form-label">{{ "global.quantity" | translate }}</label>\r\n      <div class="form-control">\r\n        <input\r\n          #stockMvtQuantity="ngModel"\r\n          type="text"\r\n          [pKeyFilter]="inputValidationService.validatorOfPositiveInteger()"\r\n          [pValidateOnly]="true"\r\n          class="aw-input"\r\n          [(ngModel)]="component.stockMvtQuantity"\r\n          [disabled]="isReadOpenMode"\r\n        />\r\n        <p-message\r\n          *ngIf="stockMvtQuantity.invalid && (stockMvtQuantity.dirty || stockMvtQuantity.touched)"\r\n          severity="error"\r\n          [text]="inputValidationService.formatOfPositiveInteger()"\r\n        ></p-message>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="form-group">\r\n      <label class="form-label">{{ "global.decision" | translate }}</label>\r\n      <div class="form-control">\r\n        <p-dropdown\r\n          class="aw-dropdown fixed-width"\r\n          [options]="decisionList"\r\n          [(ngModel)]="decision"\r\n          [disabled]="isReadOpenMode"\r\n          [showClear]="true"\r\n          placeholder="&nbsp;"\r\n          appendTo="body"\r\n          (onChange)="changeRequestForPart()"\r\n        ></p-dropdown>\r\n      </div>\r\n    </div>\r\n    <div class="form-group">\r\n      <label class="form-label">{{ getComponentName() + ".requestForPart" | translate }}</label>\r\n      <div class="form-control">\r\n        <p-checkbox\r\n          binary="true"\r\n          class="aw-checkbox general-type-checkbox"\r\n          [(ngModel)]="isRequestForPart"\r\n          [disabled]="isReadOpenMode || decision !== \'7-ins\'"\r\n        ></p-checkbox>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n\r\n    <button *ngIf="!isReadOpenMode" color="primary" type="button" mat-raised-button (click)="validate()">\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n\r\n<aw-dialog-table\r\n  *ngIf="showPartDialog"\r\n  [(display)]="showPartDialog"\r\n  [data]="partTableData"\r\n  (onSelected)="onSelectPart($event)"\r\n></aw-dialog-table>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/defect-form/dialog-defect-component/dialog-defect-component.component.ts':
      /*!**********************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/defect-form/dialog-defect-component/dialog-defect-component.component.ts ***!
  \**********************************************************************************************************************/
      /*! exports provided: DialogDefectComponentComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogDefectComponentComponent',
          function() {
            return DialogDefectComponentComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_bidt_stock_mvt_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/constants/bidt-stock-mvt-constants */ './src/app/shared/constants/bidt-stock-mvt-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../../shared/enums/table-column-filter-mode.enum */ './src/app/shared/enums/table-column-filter-mode.enum.ts'
        );
        /* harmony import */ var _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../../shared/enums/table-selection-mode.enum */ './src/app/shared/enums/table-selection-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_input_validation_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../../shared/services/input-validation.service */ './src/app/shared/services/input-validation.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        /* harmony import */ var _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../../../shared/utils/bido-family-variant-utils */ './src/app/shared/utils/bido-family-variant-utils.ts'
        );
        /* harmony import */ var _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../../../shared/utils/string-utils */ './src/app/shared/utils/string-utils.ts'
        );
        /* harmony import */ var _event_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../event.service */ './src/app/main/fleet-management/event/event.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var DialogDefectComponentComponent = /** @class */ (function(_super) {
          __extends(DialogDefectComponentComponent, _super);
          function DialogDefectComponentComponent(inputValidationService, eventService, messageService) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__['ComponentOpenMode'].Read,
                'DialogDefectComponentComponent'
              ) || this;
            _this.inputValidationService = inputValidationService;
            _this.eventService = eventService;
            _this.messageService = messageService;
            _this.onValidated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.decision = undefined;
            _this.decisionList = [];
            _this.isRequestForPart = false;
            _this.masterEquipment = undefined;
            _this.pnTypeList = [];
            _this.showPartDialog = false;
            return _this;
          }
          DialogDefectComponentComponent.prototype.ngOnInit = function() {
            var _this = this;
            this.updateOpenMode(this.openMode);
            if (!this.component) {
              this.component = {};
            }
            // tslint:disable-next-line:no-string-literal
            if (!!this.component['decision']) {
              this.decisionList.filter(function(res) {
                // tslint:disable-next-line:no-string-literal
                if (res.label === _this.component['decision']) {
                  _this.decision = res.value;
                }
              });
            } else {
              if (
                this.component.stockMvtWay ===
                _shared_constants_bidt_stock_mvt_constants__WEBPACK_IMPORTED_MODULE_2__['BidtStockMvtConstants']
                  .MVT_WAY_DEBIT
              ) {
                this.decision =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_1__[
                    'AWPropertiesConstants'
                  ].DECISION_BBIS_INSTALL_KEY;
              } else if (
                this.component.stockMvtWay ===
                _shared_constants_bidt_stock_mvt_constants__WEBPACK_IMPORTED_MODULE_2__['BidtStockMvtConstants']
                  .MVT_WAY_CREDIT
              ) {
                this.decision =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_1__[
                    'AWPropertiesConstants'
                  ].DECISION_BBTWS_REMOVE_KEY;
              }
            }
          };
          DialogDefectComponentComponent.prototype.onSelectPart = function(pn) {
            this.component.birePnPnCode = pn.pnCode;
          };
          DialogDefectComponentComponent.prototype.openPart = function() {
            var partTableCols = [
              {
                field: 'pnCode',
                alignment: 'left',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_4__['TableColumnFilterMode']
                    .Input,
                width: '10rem'
              },
              {
                field: 'articleDesignation',
                alignment: 'left',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_4__['TableColumnFilterMode']
                    .Input,
                width: '20rem'
              }
            ];
            var criteria = {};
            if (!!this.masterEquipment) {
              criteria.familyCode = _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_9__[
                'BidoFamilyVariantUtils'
              ].getFamilyCodeFromFamilyVariantCode(this.masterEquipment.familyVariantCode);
              criteria.variantCode = _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_9__[
                'BidoFamilyVariantUtils'
              ].getVariantCodeFromFamilyVariantCode(this.masterEquipment.familyVariantCode);
            }
            var selectedPnType = this.pnTypeList.find(function(pnType) {
              return pnType.label.toLowerCase() === 'part';
            });
            if (!!selectedPnType) {
              criteria.birePnDTO = {};
              criteria.birePnDTO.pnType = selectedPnType.value;
            }
            this.partTableData = {
              componentId: this.getComponentName() + '.partDialog',
              tableCols: partTableCols,
              tableRows: this.eventService.findAllBirePnByCriteria(criteria),
              dataKey: 'pnCode',
              selectionMode:
                _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_5__['TableSelectionMode'].Single,
              globalFilter: true
            };
            this.showPartDialog = true;
          };
          DialogDefectComponentComponent.prototype.validate = function() {
            if (
              _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__['StringUtils'].isNullOrEmpty(
                this.component.birePnPnCode
              )
            ) {
              this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');
            } else {
              this.component.stockMvtQuantity = !!this.component.stockMvtQuantity
                ? this.component.stockMvtQuantity
                : '0';
              this.component.mvtStatus = this.isRequestForPart
                ? _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_1__['AWPropertiesConstants']
                    .MM_MVT_STATUS_PLANNED_KEY
                : undefined;
              if (!!this.decision) {
                this.component.stockMvtWay =
                  this.decision ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_1__['AWPropertiesConstants']
                    .DECISION_BBIS_INSTALL_KEY
                    ? _shared_constants_bidt_stock_mvt_constants__WEBPACK_IMPORTED_MODULE_2__['BidtStockMvtConstants']
                        .MVT_WAY_DEBIT
                    : _shared_constants_bidt_stock_mvt_constants__WEBPACK_IMPORTED_MODULE_2__['BidtStockMvtConstants']
                        .MVT_WAY_CREDIT;
              }
              this.onValidated.emit(this.component);
              this.closeDialog();
            }
          };
          DialogDefectComponentComponent.prototype.changeRequestForPart = function() {
            if (this.decision !== '7-ins') {
              this.isRequestForPart = false;
            }
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogDefectComponentComponent.prototype,
            'component',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            DialogDefectComponentComponent.prototype,
            'decisionList',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogDefectComponentComponent.prototype,
            'masterEquipment',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Number)],
            DialogDefectComponentComponent.prototype,
            'openMode',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            DialogDefectComponentComponent.prototype,
            'pnTypeList',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            DialogDefectComponentComponent.prototype,
            'onValidated',
            void 0
          );
          DialogDefectComponentComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-dialog-defect-component',
                template: __webpack_require__(
                  /*! ./dialog-defect-component.component.html */ './src/app/main/fleet-management/event/defect-form/dialog-defect-component/dialog-defect-component.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _shared_services_input_validation_service__WEBPACK_IMPORTED_MODULE_6__['InputValidationService'],
                _event_service__WEBPACK_IMPORTED_MODULE_11__['EventService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_7__['MessageService']
              ])
            ],
            DialogDefectComponentComponent
          );
          return DialogDefectComponentComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_8__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/defect-form/dialog-defect-task/dialog-defect-task.component.html':
      /*!**************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/defect-form/dialog-defect-task/dialog-defect-task.component.html ***!
  \**************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="search-dialog-container">\r\n      <div class="section search-criteria-section">\r\n        <h4 class="section-title">{{ "global.search" | translate }}</h4>\r\n\r\n        <div class="section-content">\r\n          <div class="column">\r\n            <div class="row">\r\n              <div class="form-group">\r\n                <label class="form-label"> {{ "global.taskCode" | translate }} </label>\r\n\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObject.taskCode" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group">\r\n                <label class="form-label"> {{ "global.taskVersion" | translate }} </label>\r\n\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObject.taskVersion" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group">\r\n                <label class="form-label"> {{ "global.designation" | translate }} </label>\r\n\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObject.taskDesignation" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group"></div>\r\n            </div>\r\n\r\n            <div class="row search-criteria-footer">\r\n              <div class="search-actions">\r\n                <button type="button" mat-raised-button color="primary" (click)="search()">\r\n                  <span>{{ "global.toSearch" | translate }}</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="section results-section">\r\n        <h4 class="section-title">\r\n          {{ "global.results" | translate }} ({{ taskTable.list ? taskTable.list.length : 0 }})\r\n        </h4>\r\n\r\n        <div class="section-content">\r\n          <p-table\r\n            [resizableColumns]="true"\r\n            #ptableTask\r\n            class="aw-table2"\r\n            [columns]="taskTableCols"\r\n            [value]="taskTable.list"\r\n            selectionMode="single"\r\n            [scrollable]="true"\r\n            (onRowSelect)="selectTask($event.index)"\r\n            scrollHeight="30vh"\r\n          >\r\n            <ng-template pTemplate="emptymessage">\r\n              <span *ngIf="!isLoadingTaskTable"> &nbsp;</span>\r\n\r\n              <div *ngIf="isLoadingTaskTable" class="aw-table-loading-indicator">\r\n                <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                <div class="lds-hourglass"></div>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="caption">\r\n              <div class="aw-table-header">\r\n                <div class="aw-table-global-filter">\r\n                  <label class="aw-table-global-filter-label">\r\n                    <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                  </label>\r\n\r\n                  <input\r\n                    #ptableTaskGlobalFilter\r\n                    class="aw-table-global-filter-input"\r\n                    type="text"\r\n                    placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                    (input)="ptableTask.filterGlobal($event.target.value, \'contains\')"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n              <colgroup>\r\n                <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n              </colgroup>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="header" let-columns>\r\n              <tr>\r\n                <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                  {{ getComponentName() + "." + col.field | translate }}\r\n                </th>\r\n              </tr>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n              <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                <td *ngFor="let col of columns" [ngSwitch]="col.field" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                  <span *ngSwitchCase="\'overhaul\'">\r\n                    <i\r\n                      *ngIf="rowData[col.field] !== null && rowData[col.field]"\r\n                      class="fa fa-fw fa-check"\r\n                      aria-hidden="true"\r\n                    ></i>\r\n                  </span>\r\n\r\n                  <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n\r\n    <button type="button" color="primary" mat-raised-button (click)="validate()">\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/defect-form/dialog-defect-task/dialog-defect-task.component.scss':
      /*!**************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/defect-form/dialog-defect-task/dialog-defect-task.component.scss ***!
  \**************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          ':host .search-panel-container {\n  align-items: center;\n  border-bottom: 1px dashed #bdbdbd;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px; }\n  :host .search-panel-container .search-criteria-container {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    flex-wrap: wrap;\n    padding-right: 40px; }\n  :host .search-panel-container .search-criteria-container .form-group {\n      margin-right: 20px;\n      min-width: 15rem;\n      width: 15rem; }\n  :host .search-panel-container .search-criteria-container .form-group:last-of-type {\n        margin-right: 0; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2V2ZW50L2RlZmVjdC1mb3JtL2RpYWxvZy1kZWZlY3QtdGFzay9kOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGdpdGh1Yl9wYWdlcy9zcmNcXGFwcFxcbWFpblxcZmxlZXQtbWFuYWdlbWVudFxcZXZlbnRcXGRlZmVjdC1mb3JtXFxkaWFsb2ctZGVmZWN0LXRhc2tcXGRpYWxvZy1kZWZlY3QtdGFzay5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLG1CQUFtQjtFQUNuQixpQ0FBaUM7RUFDakMsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixtQkFBbUIsRUFBQTtFQU52QjtJQVNNLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLGVBQWU7SUFDZixtQkFBbUIsRUFBQTtFQWJ6QjtNQWdCUSxrQkFBa0I7TUFDbEIsZ0JBQWdCO01BQ2hCLFlBQVksRUFBQTtFQWxCcEI7UUFxQlUsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2V2ZW50L2RlZmVjdC1mb3JtL2RpYWxvZy1kZWZlY3QtdGFzay9kaWFsb2ctZGVmZWN0LXRhc2suY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgLnNlYXJjaC1wYW5lbC1jb250YWluZXIge1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgI2JkYmRiZDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuXHJcbiAgICAuc2VhcmNoLWNyaXRlcmlhLWNvbnRhaW5lciB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgIGZsZXgtZ3JvdzogMTtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xyXG5cclxuICAgICAgLmZvcm0tZ3JvdXAge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgICAgICBtaW4td2lkdGg6IDE1cmVtO1xyXG4gICAgICAgIHdpZHRoOiAxNXJlbTtcclxuXHJcbiAgICAgICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0= */';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/defect-form/dialog-defect-task/dialog-defect-task.component.ts':
      /*!************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/defect-form/dialog-defect-task/dialog-defect-task.component.ts ***!
  \************************************************************************************************************/
      /*! exports provided: DialogDefectTaskComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogDefectTaskComponent',
          function() {
            return DialogDefectTaskComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_date_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../../shared/services/date.service */ './src/app/shared/services/date.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        /* harmony import */ var _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../../../shared/utils/bido-family-variant-utils */ './src/app/shared/utils/bido-family-variant-utils.ts'
        );
        /* harmony import */ var _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../../../shared/utils/list-utils */ './src/app/shared/utils/list-utils.ts'
        );
        /* harmony import */ var _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../../../shared/utils/string-utils */ './src/app/shared/utils/string-utils.ts'
        );
        /* harmony import */ var _shared_utils_table_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../../../shared/utils/table-utils */ './src/app/shared/utils/table-utils.ts'
        );
        /* harmony import */ var _event_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../event.service */ './src/app/main/fleet-management/event/event.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var DialogDefectTaskComponent = /** @class */ (function(_super) {
          __extends(DialogDefectTaskComponent, _super);
          function DialogDefectTaskComponent(dateService, eventService, messageService, propertiesService) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__['ComponentOpenMode'].Write,
                'DialogDefectTaskComponent'
              ) || this;
            _this.dateService = dateService;
            _this.eventService = eventService;
            _this.messageService = messageService;
            _this.propertiesService = propertiesService;
            _this.displayChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.onValidated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.applicabilityList = [];
            _this.displayedTaskRowNb = 0;
            _this.selectedTask = undefined;
            _this.siteList = [];
            _this.taskGroupList = [];
            _this.taskStatusList = [];
            _this.taskTable = { list: [], moreResults: false };
            _this.taskTypeList = [];
            _this.initTableCols();
            _this.loadApplicabilityList();
            _this.loadSiteList();
            _this.loadTaskGroupList();
            _this.loadTaskStatusList();
            _this.loadTaskTypeList();
            return _this;
          }
          DialogDefectTaskComponent.prototype.ngOnInit = function() {
            if (!this.searchObject) {
              this.searchObject = {};
            }
          };
          DialogDefectTaskComponent.prototype.search = function() {
            var _this = this;
            var familyCode = '';
            var variantCode = '';
            if (!!this.familyVariantCode) {
              familyCode = _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_8__[
                'BidoFamilyVariantUtils'
              ].getFamilyCodeFromFamilyVariantCode(this.familyVariantCode);
              variantCode = _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_8__[
                'BidoFamilyVariantUtils'
              ].getVariantCodeFromFamilyVariantCode(this.familyVariantCode);
            }
            var criteria = {
              bireTaskDTO: !!this.searchObject ? this.searchObject : {},
              familyCodeCriteria: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__['StringUtils'].orEmpty(
                familyCode
              ),
              structureTypeCriteria:
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_1__['AWPropertiesConstants']
                  .STRUCTURE_TYPE_IPC_KEY,
              variantCodeCriteria: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__['StringUtils'].orEmpty(
                variantCode
              ),
              taskTypeCodeExcluded:
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_1__['AWPropertiesConstants']
                  .TASK_TYPE_VISIT_KEY
            };
            this.eventService.findAllBireTaskByCriteria(criteria).subscribe(function(results) {
              if (!!results) {
                _this.taskList = _shared_utils_table_utils__WEBPACK_IMPORTED_MODULE_11__['TableUtils'].removeEmptyRows(
                  results.list,
                  _this.taskTableCols
                );
                _this.taskTable.list = _this.taskList.map(function(task) {
                  return _this.createTaskRow(task);
                });
                _this.taskTable.moreResults = results.moreResults;
                _this.displayedTaskRowNb = _this.taskTable.list.length;
              }
              _this.selectedTask = undefined;
            });
          };
          DialogDefectTaskComponent.prototype.selectTask = function(index) {
            this.selectedTask = this.taskList[index];
          };
          DialogDefectTaskComponent.prototype.updateDisplayedTaskRowNb = function(value) {
            this.displayedTaskRowNb = value;
          };
          DialogDefectTaskComponent.prototype.validate = function() {
            if (!this.selectedTask) {
              this.messageService.showWarningMessage(this.getTranslateKey('warningOnNoSelection'));
            } else {
              this.onValidated.emit(this.selectedTask);
              this.closeDialog();
            }
          };
          DialogDefectTaskComponent.prototype.createTaskRow = function(task) {
            var selectedApplicability = this.applicabilityList.find(function(applicability) {
              return applicability.value === task.taskApplicabilityCode;
            });
            var selectedSite = this.siteList.find(function(site) {
              return site.value === task.repairCenterCode;
            });
            var selectedTaskGroup = this.taskGroupList.find(function(taskGroup) {
              return taskGroup.value === task.groupCode;
            });
            var selectedTaskStatus = this.taskStatusList.find(function(taskStatus) {
              return taskStatus.value === task.taskStatus;
            });
            var selectedTaskType = this.taskTypeList.find(function(taskType) {
              return taskType.value === task.taskTypeCode;
            });
            var taskRow = {
              group: !!selectedTaskGroup ? selectedTaskGroup.label : '',
              overhaul: !!task.overhaul ? task.overhaul : false,
              repairCenter: !!selectedSite ? selectedSite.label : '',
              taskApplicability: !!selectedApplicability ? selectedApplicability.label : '',
              taskApplicabilityDate: this.dateService.dateToString(task.taskApplicabilityDate),
              taskChapter: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__['StringUtils'].orEmpty(
                task.taskChapter
              ),
              taskCode: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__['StringUtils'].orEmpty(task.taskCode),
              taskDesignation: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__['StringUtils'].orEmpty(
                task.taskDesignation
              ),
              taskSection: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__['StringUtils'].orEmpty(
                task.taskSection
              ),
              taskStatus: !!selectedTaskStatus ? selectedTaskStatus.label : '',
              taskSubject: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__['StringUtils'].orEmpty(
                task.taskSubject
              ),
              taskSubTask: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__['StringUtils'].orEmpty(
                task.taskSubTask
              ),
              taskTask: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__['StringUtils'].orEmpty(task.taskTask),
              taskType: !!selectedTaskType ? selectedTaskType.label : '',
              taskVersion: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_10__['StringUtils'].orEmpty(
                task.taskVersion
              )
            };
            return taskRow;
          };
          DialogDefectTaskComponent.prototype.initTableCols = function() {
            this.taskTableCols = [
              { field: 'taskCode', alignment: 'left', width: '10%' },
              { field: 'taskVersion', alignment: 'left', width: '5%' },
              { field: 'taskDesignation', alignment: 'left', width: '15%' },
              { field: 'taskChapter', alignment: 'right', width: '5%' },
              { field: 'taskSection', alignment: 'right', width: '5%' },
              { field: 'taskSubject', alignment: 'right', width: '5%' },
              { field: 'taskTask', alignment: 'left', width: '5%' },
              { field: 'taskSubTask', alignment: 'left', width: '5%' },
              { field: 'taskStatus', alignment: 'left', width: '5%' },
              { field: 'taskApplicabilityDate', alignment: 'left', width: '10%' },
              { field: 'taskApplicability', alignment: 'left', width: '10%' },
              { field: 'repairCenter', alignment: 'left', width: '5%' },
              { field: 'group', alignment: 'left', width: '5%' },
              { field: 'taskType', alignment: 'left', width: '5%' },
              { field: 'overhaul', alignment: 'center', width: '5%' }
            ];
          };
          DialogDefectTaskComponent.prototype.loadApplicabilityList = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_2__['GenericPropertyConstants']
                  .TASK_APPLICABILITY_CODE_MAP
              )
              .subscribe(function(results) {
                _this.applicabilityList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_9__['ListUtils'].orEmpty(
                  results
                );
              });
          };
          DialogDefectTaskComponent.prototype.loadSiteList = function() {
            var _this = this;
            this.eventService.findAllBireSite().subscribe(function(results) {
              _this.siteList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_9__['ListUtils'].orEmpty(results);
            });
          };
          DialogDefectTaskComponent.prototype.loadTaskGroupList = function() {
            var _this = this;
            this.eventService.findAllBireTaskGroup().subscribe(function(results) {
              _this.taskGroupList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_9__['ListUtils'].orEmpty(results);
            });
          };
          DialogDefectTaskComponent.prototype.loadTaskStatusList = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_2__['GenericPropertyConstants']
                  .FUNC_OBJECT_STATUS_MAP
              )
              .subscribe(function(results) {
                _this.taskStatusList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_9__['ListUtils'].orEmpty(
                  results
                );
              });
          };
          DialogDefectTaskComponent.prototype.loadTaskTypeList = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_2__['GenericPropertyConstants']
                  .TASK_TYPE_MAP
              )
              .subscribe(function(results) {
                _this.taskTypeList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_9__['ListUtils'].orEmpty(
                  results
                );
              });
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogDefectTaskComponent.prototype,
            'familyVariantCode',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            DialogDefectTaskComponent.prototype,
            'onValidated',
            void 0
          );
          DialogDefectTaskComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-dialog-defect-task',
                template: __webpack_require__(
                  /*! ./dialog-defect-task.component.html */ './src/app/main/fleet-management/event/defect-form/dialog-defect-task/dialog-defect-task.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./dialog-defect-task.component.scss */ './src/app/main/fleet-management/event/defect-form/dialog-defect-task/dialog-defect-task.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_date_service__WEBPACK_IMPORTED_MODULE_4__['DateService'],
                _event_service__WEBPACK_IMPORTED_MODULE_12__['EventService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_5__['MessageService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_6__['PropertiesService']
              ])
            ],
            DialogDefectTaskComponent
          );
          return DialogDefectTaskComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_7__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-create/dialog-add-param-value/dialog-add-param-value.component.html':
      /*!***********************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-create/dialog-add-param-value/dialog-add-param-value.component.html ***!
  \***********************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group">\r\n      <label class="form-label" [ngClass]="{ required: !isReadOpenMode }">\r\n        {{ getComponentName() + ".val" | translate }}\r\n      </label>\r\n      <div class="form-control">\r\n        <input type="text" class="aw-input" [(ngModel)]="val" [disabled]="isReadOpenMode" />\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n\r\n    <button *ngIf="!isReadOpenMode" color="primary" type="button" mat-raised-button (click)="validate()">\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-create/dialog-add-param-value/dialog-add-param-value.component.ts':
      /*!*********************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-create/dialog-add-param-value/dialog-add-param-value.component.ts ***!
  \*********************************************************************************************************************/
      /*! exports provided: DialogAddParamValueComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogAddParamValueComponent',
          function() {
            return DialogAddParamValueComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var DialogAddParamValueComponent = /** @class */ (function(_super) {
          __extends(DialogAddParamValueComponent, _super);
          function DialogAddParamValueComponent() {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Write,
                'DialogAddParamValueComponent'
              ) || this;
            _this.onAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            return _this;
          }
          DialogAddParamValueComponent.prototype.ngOnInit = function() {
            if (!!this.data && !!this.data.object && Object.keys(this.data.object).length > 0) {
              this.val = this.data.object;
            } else {
              this.val = undefined;
            }
          };
          DialogAddParamValueComponent.prototype.validate = function() {
            this.onAdded.emit(this.val);
            this.closeDialog();
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogAddParamValueComponent.prototype,
            'data',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            DialogAddParamValueComponent.prototype,
            'onAdded',
            void 0
          );
          DialogAddParamValueComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-dialog-add-param-value',
                template: __webpack_require__(
                  /*! ./dialog-add-param-value.component.html */ './src/app/main/fleet-management/event/event-create/dialog-add-param-value/dialog-add-param-value.component.html'
                )
              }),
              __metadata('design:paramtypes', [])
            ],
            DialogAddParamValueComponent
          );
          return DialogAddParamValueComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-create/dialog-add-symptom/dialog-add-symptom.component.html':
      /*!***************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-create/dialog-add-symptom/dialog-add-symptom.component.html ***!
  \***************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group">\r\n      <label class="form-label" [ngClass]="{ required: !isReadOpenMode }">\r\n        {{ getComponentName() + ".name" | translate }}\r\n      </label>\r\n      <div class="form-control">\r\n        <p-dropdown\r\n          class="aw-dropdown fixed-width"\r\n          [disabled]="isReadOpenMode || !isAdd"\r\n          [showClear]="true"\r\n          [options]="symptomMap"\r\n          [(ngModel)]="symptom.symptomCode"\r\n          placeholder="&nbsp;"\r\n          appendTo="body"\r\n        ></p-dropdown>\r\n      </div>\r\n    </div>\r\n    <div class="form-group">\r\n      <label class="form-label">\r\n        {{ getComponentName() + ".comment" | translate }}\r\n      </label>\r\n      <div class="form-control">\r\n        <textarea\r\n          class="aw-textarea"\r\n          [rows]="3"\r\n          pInputTextarea\r\n          [(ngModel)]="symptom.symptomComment"\r\n          maxlength="300"\r\n          [disabled]="isReadOpenMode"\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n\r\n    <button *ngIf="!isReadOpenMode" color="primary" type="button" mat-raised-button (click)="validate()">\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-create/dialog-add-symptom/dialog-add-symptom.component.ts':
      /*!*************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-create/dialog-add-symptom/dialog-add-symptom.component.ts ***!
  \*************************************************************************************************************/
      /*! exports provided: DialogAddSymptomComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogAddSymptomComponent',
          function() {
            return DialogAddSymptomComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var DialogAddSymptomComponent = /** @class */ (function(_super) {
          __extends(DialogAddSymptomComponent, _super);
          function DialogAddSymptomComponent(messageService) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Write,
                'DialogAddSymptomComponent'
              ) || this;
            _this.messageService = messageService;
            _this.onValidated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.onAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            return _this;
          }
          DialogAddSymptomComponent.prototype.ngOnInit = function() {
            if (!!this.data && !!this.data.object && Object.keys(this.data.object).length > 0) {
              this.symptom = this.data.object;
            } else {
              this.symptom = {};
              this.isAdd = true;
            }
          };
          DialogAddSymptomComponent.prototype.validate = function() {
            if (!!this.symptom && !!this.symptom.symptomCode) {
              if (this.isAdd) {
                this.onAdded.emit(this.symptom);
              } else {
                this.onValidated.emit(this.symptom);
              }
            } else {
              this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');
            }
            this.closeDialog();
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogAddSymptomComponent.prototype,
            'data',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            DialogAddSymptomComponent.prototype,
            'symptomMap',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            DialogAddSymptomComponent.prototype,
            'onValidated',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            DialogAddSymptomComponent.prototype,
            'onAdded',
            void 0
          );
          DialogAddSymptomComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-dialog-add-symptom',
                template: __webpack_require__(
                  /*! ./dialog-add-symptom.component.html */ './src/app/main/fleet-management/event/event-create/dialog-add-symptom/dialog-add-symptom.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_2__['MessageService']
              ])
            ],
            DialogAddSymptomComponent
          );
          return DialogAddSymptomComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_3__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-create/event-create.component.html':
      /*!**************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-create/event-create.component.html ***!
  \**************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div #page *ngIf="loadedWorkflow">\r\n  <div class="page-header">\r\n    <div class="page-info">\r\n      <div>\r\n        <div class="page-title">\r\n          {{ "transaction." + componentData.componentId | translate }}\r\n        </div>\r\n\r\n        <div class="page-subtitle">\r\n          <div *ngIf="!isCreateOpenMode && componentData && componentData.objectId" class="page-subtitle">\r\n            - {{ componentSubtitle }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        [ngClass]="{ disabled: bidoNotificationDTO.typeCode === \'WPR\' }"\r\n        class="object-status"\r\n        *ngIf="bidoNotificationDTO.status && bidoNotificationDTO.notificationStatusVisibility"\r\n        (click)="\r\n          bidoNotificationDTO.typeCode !== aWPropertiesConstants.EVENT_TYPE_WORK_POSTPONEMENT_REQUEST && showStatus()\r\n        "\r\n      >\r\n        {{ bidoNotificationDTO.status | formatSelectOption: statusMap }}\r\n      </div>\r\n    </div>\r\n\r\n    <div class="page-actions">\r\n      <button\r\n        id="reopen"\r\n        *ngIf="!isCreateOpenMode && isReopenEnabled"\r\n        type="button"\r\n        mat-raised-button\r\n        (click)="reopenEvent()"\r\n      >\r\n        {{ componentData.componentId + ".reopen" | translate }}\r\n      </button>\r\n\r\n      <button id="validateAcrs" *ngIf="acrsButtonVisibility()" type="button" mat-raised-button (click)="updateACRS()">\r\n        <span *ngIf="showForm1()">{{ componentData.componentId + ".validateForm1" | translate }}</span>\r\n        <span *ngIf="!showForm1()">{{ componentData.componentId + ".validateAcrs" | translate }}</span>\r\n      </button>\r\n\r\n      <button\r\n        id="edit"\r\n        *ngIf="isReadOpenMode && !isReopenEnabled && hasUpdateAccessRight"\r\n        type="button"\r\n        mat-raised-button\r\n        (click)="editEvent()"\r\n      >\r\n        {{ "global.edit" | translate }}\r\n      </button>\r\n\r\n      <button\r\n        id="cancel"\r\n        *ngIf="!isReadOpenMode && !isCreateOpenMode"\r\n        type="button"\r\n        color="warn"\r\n        mat-raised-button\r\n        (click)="cancelEvent()"\r\n      >\r\n        {{ "global.cancel" | translate }}\r\n      </button>\r\n\r\n      <button\r\n        id="save"\r\n        *ngIf="!isReadOpenMode && isCreateOpenMode"\r\n        class="btn-with-spinner"\r\n        color="primary"\r\n        type="button"\r\n        mat-raised-button\r\n        (click)="preSavedEvent()"\r\n      >\r\n        <span class="lds-hourglass" *ngIf="showSaveSpinner"></span>\r\n        {{ "global.save" | translate }}\r\n      </button>\r\n\r\n      <button\r\n        id="save2"\r\n        *ngIf="(!isReadOpenMode && !isCreateOpenMode) || isReopenEnabled"\r\n        type="button"\r\n        class="btn-with-spinner"\r\n        color="primary"\r\n        mat-raised-button\r\n        (click)="preSavedEvent()"\r\n      >\r\n        <span class="lds-hourglass" *ngIf="showSaveSpinner"></span>\r\n        {{ "global.save" | translate }}\r\n      </button>\r\n\r\n      <button\r\n        id="actions"\r\n        mat-icon-button\r\n        class="mat-elevation-z1"\r\n        matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n        matTooltipPosition="above"\r\n        aria-label="Show all actions"\r\n        [matMenuTriggerFor]="actions"\r\n      >\r\n        <mat-icon>more_horiz</mat-icon>\r\n      </button>\r\n      <mat-menu #actions="matMenu">\r\n        <button\r\n          id="generateACRSForm"\r\n          *ngIf="isAircraft() && generateACRSFormVisible"\r\n          mat-menu-item\r\n          (click)="downloadACRSForm()"\r\n        >\r\n          {{ componentData.componentId + ".generateACRSForm" | translate }}\r\n        </button>\r\n        <button\r\n          id="generateEASAForm"\r\n          *ngIf="!isAircraft() && generateACRSFormVisible"\r\n          mat-menu-item\r\n          (click)="downloadEASAForm()"\r\n        >\r\n          {{ componentData.componentId + ".generateEASAForm" | translate }}\r\n        </button>\r\n\r\n        <button id="updates" *ngIf="isReadOpenMode" mat-menu-item (click)="openStatusUpdatesPopup()">\r\n          {{ "updates" | translate }}\r\n        </button>\r\n        <button\r\n          id="openXLSFormat"\r\n          *ngIf="!isCreateOpenMode && bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory === \'1-ope\'"\r\n          mat-menu-item\r\n          (click)="openXLSFormat()"\r\n        >\r\n          {{ componentData.componentId + ".openXLSFormat" | translate }}\r\n        </button>\r\n        <button id="refresh" mat-menu-item (click)="reloadEvent()">{{ "global.refresh" | translate }}</button>\r\n        <button id="favorites" mat-menu-item (click)="updateFavoriteState()">\r\n          {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n        </button>\r\n      </mat-menu>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-wrapper">\r\n    <div class="page-container">\r\n      <mat-tab-group animationDuration="0ms" dynamicHeight>\r\n        <mat-tab id="homeTab">\r\n          <ng-template mat-tab-label>\r\n            {{ "home" | translate }}\r\n          </ng-template>\r\n          <div class="grid-row">\r\n            <div id="mainDataPanel" class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ "page.mainData" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <!-- ROW 1-->\r\n                  <div class="row">\r\n                    <div id="notificationCode" class="form-group" *ngIf="!isCreateOpenMode">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".code" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <input\r\n                          type="text"\r\n                          class="aw-input"\r\n                          [(ngModel)]="bidoNotificationDTO.notificationCode"\r\n                          [disabled]="true"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="typeCategory" class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".category" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-dropdown\r\n                          class="aw-dropdown fixed-width"\r\n                          [options]="categoryMap"\r\n                          [showClear]="true"\r\n                          [(ngModel)]="bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory"\r\n                          placeholder="&nbsp;"\r\n                          (onChange)="getTypeMap()"\r\n                          [disabled]="isReadOpenMode || !isCreateOpenMode"\r\n                        ></p-dropdown>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="selectedType" class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".type" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-dropdown\r\n                          class="aw-dropdown fixed-width"\r\n                          [options]="eventTypeMap"\r\n                          [showClear]="true"\r\n                          placeholder="&nbsp;"\r\n                          [(ngModel)]="selectedType"\r\n                          (onChange)="getStatusVal()"\r\n                          [disabled]="isTypeEditable()"\r\n                        ></p-dropdown>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      id="notificationAsset"\r\n                      class="form-group"\r\n                      [ngClass]="{ disabled: isReadOpenMode, required: !isReadOpenMode }"\r\n                    >\r\n                      <label class="form-label">{{ componentData.componentId + ".asset" | translate }}</label>\r\n                      <div class="form-control form-control-with-modal" (click)="searchAsset($event, 0)">\r\n                        <input\r\n                          type="text"\r\n                          class="aw-input"\r\n                          [(ngModel)]="notificationAsset"\r\n                          [ngModelOptions]="{ standalone: true }"\r\n                          disabled="true"\r\n                        />\r\n\r\n                        <div class="btn-external-link-wrapper">\r\n                          <i\r\n                            class="fa fa-fw fa-external-link aw-icon read-only-link"\r\n                            aria-hidden="true"\r\n                            tooltipPosition="top"\r\n                            (click)="openLinkAssetEquipment($event)"\r\n                          ></i>\r\n                        </div>\r\n                        <div class="btn-clear-wrapper">\r\n                          <i\r\n                            *ngIf="notificationAsset && !isReadOpenMode"\r\n                            class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                            aria-hidden="true"\r\n                            (click)="resetAssetField($event)"\r\n                          ></i>\r\n                        </div>\r\n                        <div class="btn-search-wrapper">\r\n                          <i\r\n                            class="fa fa-fw fa-search aw-icon btn-search"\r\n                            *ngIf="!isReadOpenMode"\r\n                            aria-hidden="true"\r\n                            (click)="searchAsset($event, 0)"\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="reportingPeriodStartDate" class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".date" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-calendar\r\n                          showButtonBar="true"\r\n                          [monthNavigator]="true"\r\n                          [yearNavigator]="true"\r\n                          [yearRange]="sessionService.calendarYearRange"\r\n                          class="aw-calendar"\r\n                          [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                          [locale]="sessionService.calendarFormat"\r\n                          [(ngModel)]="bidoNotificationDTO.reportingPeriodStartDate"\r\n                          appendTo="body"\r\n                          [showTime]="true"\r\n                          [disabled]="isEventDateEditable()"\r\n                        ></p-calendar>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <!-- ROW 2-->\r\n                  <div class="row">\r\n                    <div id="eventReason" class="form-group" *ngIf="isEventReasonVisible()">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".eventReason" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-dropdown\r\n                          class="aw-dropdown fixed-width"\r\n                          [options]="eventReasonMap"\r\n                          [showClear]="true"\r\n                          placeholder="&nbsp;"\r\n                          [(ngModel)]="bidoNotificationDTO.eventReason"\r\n                          [disabled]="isReadOpenMode || isFieldEnabled"\r\n                        ></p-dropdown>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="isDeduced" class="form-group">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".isDeduced" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-checkbox\r\n                          binary="true"\r\n                          class="aw-checkbox"\r\n                          [(ngModel)]="bidoNotificationDTO.isDeduced"\r\n                          [disabled]="true"\r\n                        ></p-checkbox>\r\n                      </div>\r\n                    </div>\r\n                    <div id="isScheduled" class="form-group" *ngIf="isScheduleVisible()">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".isScheduled" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-checkbox\r\n                          binary="true"\r\n                          class="aw-checkbox"\r\n                          [(ngModel)]="bidoNotificationDTO.isScheduled"\r\n                          [disabled]="isReadOpenMode || isFieldEnabled"\r\n                        ></p-checkbox>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      id="reportingPeriodEndDate"\r\n                      class="form-group"\r\n                      *ngIf="!isCreateOpenMode && bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory !== \'5-def\'"\r\n                    >\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".closureDate" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-calendar\r\n                          showButtonBar="true"\r\n                          [monthNavigator]="true"\r\n                          [yearNavigator]="true"\r\n                          [yearRange]="sessionService.calendarYearRange"\r\n                          class="aw-calendar"\r\n                          [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                          [locale]="sessionService.calendarFormat"\r\n                          [(ngModel)]="bidoNotificationDTO.reportingPeriodEndDate"\r\n                          appendTo="body"\r\n                          [showTime]="true"\r\n                          [disabled]="isReadOpenMode"\r\n                        ></p-calendar>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      id="filler"\r\n                      class="form-group"\r\n                      *ngIf="bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory === \'5-def\'"\r\n                    ></div>\r\n                    <div\r\n                      id="reportingDate"\r\n                      class="form-group"\r\n                      [ngClass]="{\r\n                        required:\r\n                          !isReadOpenMode &&\r\n                          !isCreateOpenMode &&\r\n                          bidoNotificationDTO.status === aWPropertiesConstants.EVENT_STATUS_DRAFT_KEY\r\n                      }"\r\n                      *ngIf="bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory === \'1-ope\'"\r\n                    >\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".notificationDate" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-calendar\r\n                          showButtonBar="true"\r\n                          [monthNavigator]="true"\r\n                          [yearNavigator]="true"\r\n                          [yearRange]="sessionService.calendarYearRange"\r\n                          class="aw-calendar"\r\n                          [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                          [locale]="sessionService.calendarFormat"\r\n                          [(ngModel)]="bidoNotificationDTO.reportingDate"\r\n                          appendTo="body"\r\n                          [showTime]="true"\r\n                          [disabled]="isReadOpenMode"\r\n                        ></p-calendar>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="filler2" class="form-group" *ngIf="!isCreateOpenMode"></div>\r\n                    <div id="filler3" class="form-group" *ngIf="!isCreateOpenMode"></div>\r\n                    <div id="filler4" class="form-group" *ngIf="isCreateOpenMode"></div>\r\n                    <div id="filler5" class="form-group" *ngIf="isCreateOpenMode"></div>\r\n                    <div\r\n                      id="filler6"\r\n                      class="form-group"\r\n                      *ngIf="isCreateOpenMode && !bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory"\r\n                    ></div>\r\n                  </div>\r\n                  <!-- ROW 3-->\r\n                  <div class="row">\r\n                    <!-- Location -->\r\n                    <div\r\n                      id="location"\r\n                      class="form-group"\r\n                      [ngClass]="{\r\n                        required:\r\n                          !isReadOpenMode &&\r\n                          !isCreateOpenMode &&\r\n                          bidoNotificationDTO.status === aWPropertiesConstants.EVENT_STATUS_DRAFT_KEY\r\n                      }"\r\n                    >\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".location" | translate }}\r\n                      </label>\r\n                      <div class="form-control">\r\n                        <p-dropdown\r\n                          class="aw-dropdown fixed-width"\r\n                          [options]="eventLocationMap"\r\n                          [disabled]="isReadOpenMode"\r\n                          [(ngModel)]="location"\r\n                          [showClear]="true"\r\n                          placeholder="&nbsp;"\r\n                          appendTo="body"\r\n                        ></p-dropdown>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="notificationSubject" class="form-group" *ngIf="!isCreateOpenMode">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".subject" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <textarea\r\n                          class="aw-textarea"\r\n                          pInputTextarea\r\n                          [(ngModel)]="bidoNotificationDTO.notificationSubject"\r\n                          [rows]="3"\r\n                          pTooltip="{{ bidoNotificationDTO.notificationSubject }}"\r\n                          tooltipPosition="bottom"\r\n                          [disabled]="isReadOpenMode || isFieldEnabled || isCreateOpenMode"\r\n                          maxlength="150"\r\n                        ></textarea>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="notificationDescription" class="form-group">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".description" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <textarea\r\n                          class="aw-textarea"\r\n                          pInputTextarea\r\n                          [(ngModel)]="bidoNotificationDTO.notificationDescription"\r\n                          [rows]="3"\r\n                          [disabled]="isReadOpenMode || isFieldEnabled"\r\n                          maxlength="2000"\r\n                        ></textarea>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id="notificationRemarks" class="form-group">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".comment" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <textarea\r\n                          class="aw-textarea"\r\n                          pInputTextarea\r\n                          [rows]="3"\r\n                          maxlength="2000"\r\n                          [(ngModel)]="bidoNotificationDTO.notificationRemarks"\r\n                          [disabled]="isReadOpenMode || isFieldEnabled"\r\n                        ></textarea>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <!-- <div class="column" *ngIf="isAirMInstalled"> -->\r\n                    <div id="woCode" class="form-group">\r\n                      <label class="form-label">\r\n                        {{ componentData.componentId + ".workOrder" | translate }}: &nbsp;<a class="anchorClass"\r\n                          ><b (click)="openWorkOrder(woCode)">{{ woCode }}</b></a\r\n                        >\r\n                      </label>\r\n                    </div>\r\n                    <!-- </div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div [hidden]="isCreateOpenMode">\r\n            <div class="grid-row">\r\n              <div id="linkedEventPanel" class="grid-cell--12">\r\n                <div class="grid-cell grid-cell--container">\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 class="grid-cell-title">\r\n                        {{ componentData.componentId + ".linkedEvent" | translate }}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <!-- LINKED EVENT -->\r\n                    <div class="section">\r\n                      <div class="section-content">\r\n                        <div class="row">\r\n                          <div id="notNotificationCode" class="form-group">\r\n                            <label class="form-label"> {{ componentData.componentId + ".code" | translate }} </label>\r\n                            <div\r\n                              class="form-control form-control-with-modal"\r\n                              (click)="searchEventCode($event)"\r\n                              *ngIf="bidoNotificationDTO.status !== \'4-clo\'"\r\n                            >\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoNotificationDTO.notNotificationCode"\r\n                                [ngModelOptions]="{ standalone: true }"\r\n                                disabled="true"\r\n                              />\r\n                              <div class="btn-clear-wrapper">\r\n                                <i\r\n                                  class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                                  aria-hidden="true"\r\n                                  *ngIf="\r\n                                    (!isReadOpenMode || !isFieldEnabled) && bidoNotificationDTO.notNotificationCode\r\n                                  "\r\n                                  (click)="resetEventField($event)"\r\n                                ></i>\r\n                              </div>\r\n                              <div class="btn-search-wrapper">\r\n                                <i\r\n                                  class="fa fa-fw fa-search aw-icon btn-search"\r\n                                  aria-hidden="true"\r\n                                  *ngIf="!isReadOpenMode || !isFieldEnabled"\r\n                                  (click)="searchEventCode($event)"\r\n                                ></i>\r\n                              </div>\r\n                            </div>\r\n                            <div\r\n                              class="form-control form-control-with-modal"\r\n                              *ngIf="bidoNotificationDTO.status === \'4-clo\'"\r\n                            >\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoNotificationDTO.notNotificationCode"\r\n                                [ngModelOptions]="{ standalone: true }"\r\n                                disabled="true"\r\n                              />\r\n                            </div>\r\n                            <a\r\n                              *ngIf="!!bidoNotificationDTO.notNotificationCode"\r\n                              style="margin: 1em 0 0 1em; cursor: pointer;"\r\n                              (click)="openLinkedEventAsset(bidoNotificationDTO!.notNotificationCode)"\r\n                              >{{ bidoNotificationDTO.notNotificationCode }}</a\r\n                            >\r\n                          </div>\r\n\r\n                          <div id="linkedEventType" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".type" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                style="color: #00652C"\r\n                                [(ngModel)]="linkedEventType"\r\n                                [disabled]="true"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="linkedEventSubject" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".subject" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                style="color: #00652C"\r\n                                [(ngModel)]="linkedEventSubject"\r\n                                [disabled]="true"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="linkedEventStatus" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".status" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control" *ngIf="isShowEventStatus">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                style="color: #00652C"\r\n                                [(ngModel)]="linkedEventStatus"\r\n                                [disabled]="true"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class="grid-row">\r\n            <!-- CRITICALITY -->\r\n            <div *ngIf="isCriticalityVisible()" [hidden]="isCreateOpenMode" class="grid-cell--equally">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".criticality" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div id="eventCause" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".eventCause" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="eventCauseMap"\r\n                              [showClear]="true"\r\n                              placeholder="&nbsp;"\r\n                              [(ngModel)]="bidoNotificationDTO.eventCause"\r\n                              [disabled]="isReadOpenMode || isFieldEnabled"\r\n                              appendTo="body"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div id="priority" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".eventPriority" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="eventPriorityMap"\r\n                              [showClear]="true"\r\n                              placeholder="&nbsp;"\r\n                              [(ngModel)]="bidoNotificationDTO.priority"\r\n                              [disabled]="isReadOpenMode || isFieldEnabled"\r\n                              appendTo="body"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- GEOGRAPHICAL LOCATION -->\r\n            <div id="geographicalLocationPanel" [hidden]="isCreateOpenMode" class="grid-cell--equally">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".geographicalLocation" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div id="zone" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".zone" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="zoneMap"\r\n                              [showClear]="true"\r\n                              placeholder="&nbsp;"\r\n                              [(ngModel)]="bidoNotificationDTO.zone"\r\n                              [disabled]="isReadOpenMode || isFieldEnabled"\r\n                              (onChange)="getCountries()"\r\n                              appendTo="body"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div id="country" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".country" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="countryMap"\r\n                              [showClear]="true"\r\n                              placeholder="&nbsp;"\r\n                              [(ngModel)]="bidoNotificationDTO.country"\r\n                              [disabled]="isReadOpenMode || isFieldEnabled"\r\n                              appendTo="body"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- SOURCE -->\r\n            <div id="sourcePanel" [hidden]="isCreateOpenMode" class="grid-cell--equally">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".source" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div id="selectedSystemId" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".systemId" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              placeholder="&nbsp;"\r\n                              [(ngModel)]="selectedSystemId"\r\n                              [options]="systemIdMap"\r\n                              [showClear]="true"\r\n                              [disabled]="isReadOpenMode || isFieldEnabled"\r\n                              appendTo="body"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                        <div id="systemReference" class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".systemRef" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="systemReference"\r\n                              [disabled]="isReadOpenMode || isFieldEnabled"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab id="circumstancesTab" *ngIf="isCircumstancesTabVisible">\r\n          <ng-template mat-tab-label>\r\n            {{ getComponentName() + ".circumstances" | translate }}\r\n          </ng-template>\r\n          <!-- ROOT CAUSE TAB -->\r\n          <div class="grid-row">\r\n            <div class="grid-cell--12">\r\n              <div class="grid-row">\r\n                <div class="grid-cell--6">\r\n                  <div [hidden]="isCreateOpenMode || !isRootCauseTabVisible">\r\n                    <div class="grid-row">\r\n                      <div id="rootCausePanel" class="grid-cell--12">\r\n                        <div class="grid-cell grid-cell--container" *ngIf="isRootCauseTabVisible">\r\n                          <div class="grid-cell-header">\r\n                            <div class="grid-cell-title-container">\r\n                              <h3 class="grid-cell-title">\r\n                                {{ componentData.componentId + ".rootCause" | translate }}\r\n                              </h3>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class="grid-cell-content grid-cell-content-with-section">\r\n                            <div class="section">\r\n                              <div class="section-content">\r\n                                <div class="column">\r\n                                  <div class="row">\r\n                                    <div id="selectedRootCause" class="form-group">\r\n                                      <label class="form-label">\r\n                                        {{ componentData.componentId + ".rootCause" | translate }}\r\n                                      </label>\r\n\r\n                                      <div class="form-control">\r\n                                        <p-dropdown\r\n                                          class="aw-dropdown fixed-width"\r\n                                          [options]="rootCauseList"\r\n                                          [disabled]="isReadOpenMode"\r\n                                          [(ngModel)]="selectedRootCause"\r\n                                          [showClear]="true"\r\n                                          placeholder="&nbsp;"\r\n                                          (onChange)="onChangeDefectRootCause($event.value)"\r\n                                        ></p-dropdown>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div id="defectAssetCode" *ngIf="displayDefectEquipmentBlock" class="form-group">\r\n                                      <label class="form-label">{{ "global.assetCode" | translate }}</label>\r\n\r\n                                      <div\r\n                                        class="form-control form-control-with-modal"\r\n                                        [ngClass]="{ disabled: isReadOpenMode }"\r\n                                      >\r\n                                        <div class="form-control-data" (click)="searchAsset($event, 2)">\r\n                                          {{ defectAssetCode }}\r\n                                        </div>\r\n\r\n                                        <div *ngIf="defectAssetCode" class="btn-clear-wrapper">\r\n                                          <i\r\n                                            class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                                            aria-hidden="true"\r\n                                            (click)="resetRootCauseAssetField()"\r\n                                          ></i>\r\n                                        </div>\r\n                                        <div class="btn-search-wrapper">\r\n                                          <i\r\n                                            class="fa fa-fw fa-search aw-icon btn-search"\r\n                                            aria-hidden="true"\r\n                                            (click)="searchAsset($event, 2)"\r\n                                          ></i>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div\r\n                                      id="defectEquipmentName"\r\n                                      *ngIf="displayDefectEquipmentBlock"\r\n                                      class="form-group"\r\n                                    >\r\n                                      <label class="form-label">{{ "global.name" | translate }}</label>\r\n\r\n                                      <div class="form-control">\r\n                                        <input\r\n                                          type="text"\r\n                                          class="aw-input"\r\n                                          disabled="true"\r\n                                          pTooltip="{{ defectEquipmentName }}"\r\n                                          [(ngModel)]="defectEquipmentName"\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div id="defectEquipmentPn" *ngIf="displayDefectEquipmentBlock" class="form-group">\r\n                                      <label class="form-label">{{ "global.pn" | translate }}</label>\r\n\r\n                                      <div class="form-control">\r\n                                        <input\r\n                                          type="text"\r\n                                          class="aw-input"\r\n                                          disabled="true"\r\n                                          [(ngModel)]="defectEquipmentPn"\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div id="defectEquipmentSn" *ngIf="displayDefectEquipmentBlock" class="form-group">\r\n                                      <label class="form-label">{{ "global.sn" | translate }}</label>\r\n\r\n                                      <div class="form-control">\r\n                                        <input\r\n                                          type="text"\r\n                                          class="aw-input"\r\n                                          disabled="true"\r\n                                          [(ngModel)]="defectEquipmentSn"\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div\r\n                                      id="rootCauseFlCode"\r\n                                      *ngIf="displayDefectFunctionalLocationBlock"\r\n                                      class="form-group"\r\n                                    >\r\n                                      <label class="form-label">{{\r\n                                        componentData.componentId + ".flCode" | translate\r\n                                      }}</label>\r\n\r\n                                      <div class="form-control">\r\n                                        <p-dropdown\r\n                                          class="aw-dropdown fixed-width"\r\n                                          [options]="flCodeList"\r\n                                          [(ngModel)]="rootCauseFlCode"\r\n                                          [showClear]="true"\r\n                                          placeholder="&nbsp;"\r\n                                        ></p-dropdown>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div id="rootCausePn" *ngIf="displayDefectPartBlock" class="form-group">\r\n                                      <label class="form-label">{{ "global.part" | translate }}</label>\r\n\r\n                                      <div\r\n                                        class="form-control form-control-with-modal"\r\n                                        [ngClass]="{ disabled: isReadOpenMode }"\r\n                                      >\r\n                                        <div class="form-control-data" (click)="openDefectPart($event)">\r\n                                          {{ rootCausePn }}\r\n                                        </div>\r\n\r\n                                        <div *ngIf="rootCausePn" class="btn-clear-wrapper">\r\n                                          <i\r\n                                            class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                                            aria-hidden="true"\r\n                                            (click)="resetRootCausePNField()"\r\n                                          ></i>\r\n                                        </div>\r\n                                        <div class="btn-search-wrapper">\r\n                                          <i\r\n                                            class="fa fa-fw fa-search aw-icon btn-search"\r\n                                            aria-hidden="true"\r\n                                            (click)="openDefectPart($event)"\r\n                                          ></i>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div id="rootCauseQuantity" *ngIf="displayDefectPartBlock" class="form-group">\r\n                                      <label class="form-label">{{ "global.quantity" | translate }}</label>\r\n\r\n                                      <div class="form-control">\r\n                                        <input type="text" class="aw-input" [(ngModel)]="rootCauseQuantity" />\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    <div\r\n                                      id="rootCauseChapter"\r\n                                      *ngIf="displayDefectItemBlock"\r\n                                      class="form-group flex--2"\r\n                                    >\r\n                                      <label class="form-label">{{ "global.ataCode" | translate }}</label>\r\n                                      <aw-ata-code-input\r\n                                        [userWorkflow]="userWorkflow"\r\n                                        [ataCode]="eventAtaCode"\r\n                                        (ataCodeChange)="addATACode($event)"\r\n                                        [familyVariantCode]="familyVariantEquipmentCode"\r\n                                      ></aw-ata-code-input>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- CIRCUMSTANCES TAB -->\r\n                  <div [hidden]="isCreateOpenMode || !isCircumstancesTabVisible">\r\n                    <div class="grid-row">\r\n                      <div id="contextPanel" class="grid-cell--12">\r\n                        <div class="grid-cell grid-cell--container" *ngIf="isCircumstancesTabVisible">\r\n                          <div class="grid-cell-header">\r\n                            <div class="grid-cell-title-container">\r\n                              <h3 class="grid-cell-title">\r\n                                {{ componentData.componentId + ".context" | translate }}\r\n                              </h3>\r\n                            </div>\r\n                          </div>\r\n                          <div class="grid-cell-content grid-cell-content-with-section">\r\n                            <!-- Context -->\r\n                            <div class="section">\r\n                              <div class="section-content">\r\n                                <div class="row">\r\n                                  <div id="symptomCode" class="form-group">\r\n                                    <label class="form-label">\r\n                                      {{ componentData.componentId + ".context" | translate }}\r\n                                    </label>\r\n                                    <div class="form-control">\r\n                                      <p-dropdown\r\n                                        class="aw-dropdown fixed-width"\r\n                                        [disabled]="isReadOpenMode"\r\n                                        [showClear]="true"\r\n                                        [options]="contextNameMap"\r\n                                        [(ngModel)]="contextTabData.symptomCode"\r\n                                        placeholder="&nbsp;"\r\n                                        (onChange)="onChangeContext()"\r\n                                      ></p-dropdown>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div id="missionType" class="form-group">\r\n                                    <label class="form-label">\r\n                                      {{ componentData.componentId + ".missionType" | translate }}\r\n                                    </label>\r\n                                    <div class="form-control">\r\n                                      <p-dropdown\r\n                                        class="aw-dropdown fixed-width"\r\n                                        [disabled]="isReadOpenMode"\r\n                                        [showClear]="true"\r\n                                        [options]="contextMissionMap"\r\n                                        [(ngModel)]="contextTabData.missionType"\r\n                                        placeholder="&nbsp;"\r\n                                        (onChange)="onChangeMissionType()"\r\n                                      ></p-dropdown>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div id="symptomComment" class="form-group">\r\n                                    <label class="form-label">\r\n                                      {{ componentData.componentId + ".comment" | translate }}\r\n                                    </label>\r\n                                    <div class="form-control">\r\n                                      <textarea\r\n                                        class="aw-textarea"\r\n                                        [rows]="3"\r\n                                        pInputTextarea\r\n                                        [(ngModel)]="contextTabData.symptomComment"\r\n                                        [disabled]="isReadOpenMode"\r\n                                        maxlength="300"\r\n                                      ></textarea>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div class="section">\r\n                                  <h4 id="contextTableDataSourceTitle" class="section-title">\r\n                                    {{ componentData.componentId + ".parameterAssociated" | translate }}\r\n                                    ({{ contextTableDataSource.dataCount }})\r\n                                  </h4>\r\n                                  <div class="section-content">\r\n                                    <a-table\r\n                                      id="contextTableDataSource"\r\n                                      [dataSource]="contextTableDataSource"\r\n                                      (onRowSelect)="onContextRowSelect()"\r\n                                      (onRowUnselect)="onContextRowUnselect()"\r\n                                    >\r\n                                      <ng-template tableActionsDef>\r\n                                        <button\r\n                                          id="editContext"\r\n                                          *ngIf="!isReadOpenMode && showContextHeader"\r\n                                          type="button"\r\n                                          mat-raised-button\r\n                                          color="warn"\r\n                                          (click)="editSelectedContextParam()"\r\n                                        >\r\n                                          {{ "global.edit" | translate }}\r\n                                        </button>\r\n                                      </ng-template>\r\n                                    </a-table>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class="grid-cell--6">\r\n                  <div [hidden]="isCreateOpenMode || !isRootCauseTabVisible">\r\n                    <div class="grid-row">\r\n                      <div id="defectPanel" class="grid-cell--12">\r\n                        <div class="grid-cell grid-cell--container" *ngIf="isRootCauseTabVisible">\r\n                          <div class="grid-cell-header">\r\n                            <div class="grid-cell-title-container">\r\n                              <h3 class="grid-cell-title">\r\n                                {{ componentData.componentId + ".defect" | translate }}\r\n                              </h3>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class="grid-cell-content grid-cell-content-with-section">\r\n                            <div class="section" *ngIf="isDefectBlockVisible()">\r\n                              <div class="section-content">\r\n                                <div class="row">\r\n                                  <div id="selectedDefectName" class="form-group">\r\n                                    <label class="form-label">\r\n                                      {{ componentData.componentId + ".name" | translate }}\r\n                                    </label>\r\n\r\n                                    <div class="form-control">\r\n                                      <p-dropdown\r\n                                        class="aw-dropdown fixed-width"\r\n                                        placeholder="&nbsp;"\r\n                                        [(ngModel)]="selectedDefectName"\r\n                                        [options]="defectNameMap"\r\n                                        [showClear]="true"\r\n                                        [disabled]="isReadOpenMode"\r\n                                      ></p-dropdown>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div id="selectedDefectLocation" class="form-group">\r\n                                    <label class="form-label">\r\n                                      {{ componentData.componentId + ".location" | translate }}\r\n                                    </label>\r\n\r\n                                    <div class="form-control">\r\n                                      <p-dropdown\r\n                                        class="aw-dropdown fixed-width"\r\n                                        placeholder="&nbsp;"\r\n                                        [(ngModel)]="selectedDefectLocation"\r\n                                        [options]="locationMap"\r\n                                        [showClear]="true"\r\n                                        [disabled]="isReadOpenMode"\r\n                                      ></p-dropdown>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div id="rootCauseComment" class="form-group">\r\n                                    <label class="form-label">\r\n                                      {{ componentData.componentId + ".description" | translate }}\r\n                                    </label>\r\n\r\n                                    <div class="form-control">\r\n                                      <textarea\r\n                                        class="aw-textarea"\r\n                                        [rows]="3"\r\n                                        pInputTextarea\r\n                                        [(ngModel)]="rootCauseComment"\r\n                                        [disabled]="isReadOpenMode"\r\n                                      ></textarea>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div [hidden]="isCreateOpenMode || !isCircumstancesTabVisible">\r\n                    <div class="grid-row">\r\n                      <div id="symptomManagementPanel" class="grid-cell--12">\r\n                        <div class="grid-cell grid-cell--container" *ngIf="isCircumstancesTabVisible">\r\n                          <div class="grid-cell-header">\r\n                            <div class="grid-cell-title-container">\r\n                              <h3 class="grid-cell-title">\r\n                                {{ componentData.componentId + ".symptomManagement" | translate }}\r\n                              </h3>\r\n                            </div>\r\n                          </div>\r\n                          <div class="grid-cell-content grid-cell-content-with-section">\r\n                            <div class="section">\r\n                              <div class="section-content">\r\n                                <div class="row">\r\n                                  <div class="list-with-details">\r\n                                    <div class="list">\r\n                                      <div class="section">\r\n                                        <h4 id="symptomRowDataSourceTitle" class="section-title">\r\n                                          {{ componentData.componentId + ".symptoms" | translate }}\r\n                                          ({{ symptomRowDataSource.dataCount }})\r\n                                        </h4>\r\n                                        <a-table\r\n                                          id="symptomRowDataSource"\r\n                                          [dataSource]="symptomRowDataSource"\r\n                                          (onRowSelect)="onSymptomRowSelect($event)"\r\n                                          (onRowUnselect)="onSymptomRowUnselect()"\r\n                                        >\r\n                                          <ng-template tableActionsDef>\r\n                                            <button\r\n                                              id="deleteSymptomRowDataSource"\r\n                                              *ngIf="!isReadOpenMode && showSymptomHeader"\r\n                                              type="button"\r\n                                              mat-raised-button\r\n                                              color="warn"\r\n                                              (click)="deleteSelectedSymptom()"\r\n                                            >\r\n                                              {{ "global.delete" | translate }}\r\n                                            </button>\r\n\r\n                                            <button\r\n                                              id="editSymptomRowDataSource"\r\n                                              *ngIf="!isReadOpenMode && showSymptomHeader"\r\n                                              type="button"\r\n                                              mat-raised-button\r\n                                              (click)="editSymptom()"\r\n                                            >\r\n                                              {{ "global.edit" | translate }}\r\n                                            </button>\r\n\r\n                                            <button\r\n                                              id="addSymptomRowDataSource"\r\n                                              *ngIf="!isReadOpenMode && !showSymptomHeader"\r\n                                              type="button"\r\n                                              mat-raised-button\r\n                                              (click)="addSymptom()"\r\n                                            >\r\n                                              {{ "global.add" | translate }}\r\n                                            </button>\r\n                                          </ng-template>\r\n                                        </a-table>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div class="details">\r\n                                      <div class="section">\r\n                                        <h4 id="symptomParameterTableDataSourceTitle" class="section-title">\r\n                                          {{ componentData.componentId + ".parameterAssociatedToSymptoms" | translate }}\r\n                                          ({{ symptomParameterTableDataSource.dataCount }})\r\n                                        </h4>\r\n                                        <div class="section-content">\r\n                                          <a-table\r\n                                            id="symptomParameterTableDataSource"\r\n                                            [dataSource]="symptomParameterTableDataSource"\r\n                                            (onRowSelect)="onSymptomParamRowSelect()"\r\n                                            (onRowUnselect)="onSymptomParamRowUnselect()"\r\n                                          >\r\n                                            <ng-template tableActionsDef>\r\n                                              <button\r\n                                                id="editSymptomParameter"\r\n                                                *ngIf="!isReadOpenMode && showSymptomParamHeader"\r\n                                                type="button"\r\n                                                mat-raised-button\r\n                                                color="warn"\r\n                                                (click)="editSelectedSymptomParam()"\r\n                                              >\r\n                                                {{ "global.edit" | translate }}\r\n                                              </button>\r\n                                            </ng-template>\r\n                                          </a-table>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab id="assetAtDateTab" *ngIf="isAssetAtDateTabVisible">\r\n          <ng-template mat-tab-label>\r\n            {{ getComponentName() + ".assetAtDate" | translate }}\r\n          </ng-template>\r\n          <!-- ASSET AT DATE TAB -->\r\n          <div [hidden]="isCreateOpenMode || !isAssetAtDateTabVisible">\r\n            <div class="grid-row">\r\n              <div id="assetPanel" class="grid-cell--12">\r\n                <div class="grid-cell grid-cell--container" *ngIf="isAssetAtDateTabVisible">\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 class="grid-cell-title">\r\n                        {{ componentData.componentId + ".asset" | translate }}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <div class="section">\r\n                      <div class="section-content">\r\n                        <div class="row">\r\n                          <div id="pnCode" class="form-group" *ngIf="!isAircraft()">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".pn" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [(ngModel)]="bidoEquipmentDTO.pn" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="registration" class="form-group" *ngIf="isAircraft()">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".registration" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoEquipmentDTO.registration"\r\n                                [disabled]="true"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div id="sn" class="form-group" *ngIf="!isAircraft() && !isEngine()">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".sn" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [(ngModel)]="bidoEquipmentDTO.sn" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="sn2" class="form-group" *ngIf="isAircraft() && !isEngine()">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".msn" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [(ngModel)]="bidoEquipmentDTO.sn" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="sn3" class="form-group" *ngIf="isEngine() && !isAircraft()">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".esn" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [(ngModel)]="bidoEquipmentDTO.sn" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="familyVariantCode" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".familyVariant" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoEquipmentDTO.familyVariantCode"\r\n                                [disabled]="true"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div id="operationalStatus" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".assetStatus" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoEquipmentDTO.operationalStatus"\r\n                                [disabled]="true"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class="row">\r\n                          <div id="functionLocationStr" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".functionLocation" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [disabled]="true" [(ngModel)]="functionLocationStr" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="ownerCustomerCode" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".owner" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoEquipmentDTO.ownerCustomerCode"\r\n                                [disabled]="true"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div id="operatorCustomerCode" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".operator" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoEquipmentDTO.operatorCustomerCode"\r\n                                [disabled]="true"\r\n                              />\r\n                            </div>\r\n                            <div id="filler7" class="form-group"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- COUNTERS TAB -->\r\n          <div [hidden]="isCreateOpenMode || !isAssetAtDateTabVisible">\r\n            <div class="grid-row">\r\n              <div id="countersPanel" class="grid-cell--12">\r\n                <div class="grid-cell grid-cell--container" *ngIf="isAssetAtDateTabVisible">\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 id="bidoMeasuresDisplayedDataSourceTitle" class="grid-cell-title">\r\n                        {{ componentData.componentId + ".counters" | translate }}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <div class="section">\r\n                      <!--- TEST -->\r\n                      <div class="section-content">\r\n                        <div class="grid-cell-content grid-cell-content-with-section">\r\n                          <div class="section">\r\n                            <div class="section-content">\r\n                              <a-table\r\n                                id="bidoMeasuresDisplayedDataSource"\r\n                                [dataSource]="bidoMeasuresDisplayedDataSource"\r\n                              >\r\n                                <ng-template tableActionsDef>\r\n                                  <button\r\n                                    id="updateMeasureBidoMeasuresDisplayedDataSource"\r\n                                    *ngIf="!isReadOpenMode && bidoMeasuresDisplayedDataSource.dataSelectionCount === 1"\r\n                                    type="button"\r\n                                    mat-raised-button\r\n                                    (click)="addMeasure()"\r\n                                  >\r\n                                    {{ componentData.componentId + ".updateMeasure" | translate }}\r\n                                  </button>\r\n\r\n                                  <button\r\n                                    id="estimateCounterBidoMeasuresDisplayedDataSource"\r\n                                    *ngIf="!isReadOpenMode && isEstimateCounterVisible()"\r\n                                    type="button"\r\n                                    mat-raised-button\r\n                                    (click)="estimateCounter()"\r\n                                  >\r\n                                    {{ componentData.componentId + ".estimateCounter" | translate }}\r\n                                  </button>\r\n                                </ng-template>\r\n                              </a-table>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <!-- STRUCTURE TAB -->\r\n        <mat-tab id="structureTab" *ngIf="isStructureTabVisible">\r\n          <ng-template mat-tab-label>\r\n            {{ getComponentName() + ".structure" | translate }}\r\n          </ng-template>\r\n          <!-- CONFIGURATION PANEL -->\r\n          <div [hidden]="isCreateOpenMode || !isStructureTabVisible">\r\n            <div *ngIf="selectedType === \'AS\' || selectedType === \'DI\'" class="grid-row">\r\n              <div id="configurationPanel" class="grid-cell--12">\r\n                <div class="grid-cell grid-cell--container" *ngIf="isStructureTabVisible">\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 class="grid-cell-title">\r\n                        {{ componentData.componentId + ".configuration" | translate }}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <div class="section">\r\n                      <div class="section-content">\r\n                        <div class="row">\r\n                          <div id="fieldNewValue" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".superiorAsset" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoNotificationDTO.fieldNewValue"\r\n                                [disabled]="true"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div id="assetName" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".name" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [(ngModel)]="assetName" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="assetDesignation" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".designation" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [(ngModel)]="assetDesignation" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class="row">\r\n                          <div id="fieldOldValue" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".oldSuperiorAsset" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoNotificationDTO.fieldOldValue"\r\n                                [disabled]="true"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div id="oldAssetName" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".name" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [(ngModel)]="oldAssetName" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="oldDesignation" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".designation" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [(ngModel)]="oldDesignation" [disabled]="true" />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- MOVEMENT PANEL -->\r\n          <div [hidden]="isCreateOpenMode || !isStructureTabVisible">\r\n            <div *ngIf="selectedType === \'MVI\' || selectedType === \'MVR\'" class="grid-row">\r\n              <div id="movementPanel" class="grid-cell--12">\r\n                <div class="grid-cell grid-cell--container" *ngIf="isStructureTabVisible">\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 class="grid-cell-title">\r\n                        {{ componentData.componentId + ".movement" | translate }}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <div class="section">\r\n                      <div class="section-content">\r\n                        <div class="row">\r\n                          <div id="movementPn" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".pn" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control form-control-with-modal" (click)="openPartNumberDialog($event, 0)">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoNotificationDTO.movementPn"\r\n                                [ngModelOptions]="{ standalone: true }"\r\n                                disabled="true"\r\n                              />\r\n                              <div class="btn-clear-wrapper">\r\n                                <i\r\n                                  *ngIf="bidoNotificationDTO.movementPn && !isReadOpenMode"\r\n                                  class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                                  aria-hidden="true"\r\n                                  (click)="clearPartNumber($event)"\r\n                                ></i>\r\n                              </div>\r\n                              <div class="btn-external-link-wrapper">\r\n                                <i\r\n                                  *ngIf="!isReadOpenMode"\r\n                                  class="fa fa-fw fa-external-link aw-icon aw-icon-with-border read-only-link"\r\n                                  aria-hidden="true"\r\n                                  (click)="openPartNumberScreen(bidoNotificationDTO.movementPn, $event)"\r\n                                ></i>\r\n                              </div>\r\n                              <div class="btn-search-wrapper">\r\n                                <i\r\n                                  class="fa fa-fw fa-search aw-icon btn-search"\r\n                                  *ngIf="!isReadOpenMode"\r\n                                  aria-hidden="true"\r\n                                  (click)="openPartNumberDialog($event, 0)"\r\n                                ></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div id="movementQuantity" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".quantity" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="string"\r\n                                pKeyFilter="int"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoNotificationDTO.movementQuantity"\r\n                                [disabled]="isReadOpenMode"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class="section" *ngIf="specificSNVisibility">\r\n                      <h4 class="section-title">{{ componentData.componentId + ".shop" | translate }}</h4>\r\n                      <div class="section-content">\r\n                        <div class="row">\r\n                          <div id="shopName" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".shopName" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [(ngModel)]="shopName" [disabled]="true" />\r\n                              <p-dropdown\r\n                                class="aw-dropdown fixed-width"\r\n                                [options]="shopNameMap"\r\n                                [showClear]="true"\r\n                                [(ngModel)]="shopName"\r\n                                placeholder="&nbsp;"\r\n                                [disabled]="isReadOpenMode || !isCreateOpenMode"\r\n                              ></p-dropdown>\r\n                            </div>\r\n                          </div>\r\n                          <div id="shopTechnicalLevel" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".shopTechnicalLevel" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <p-dropdown\r\n                                class="aw-dropdown fixed-width"\r\n                                [options]="shopTechnicalLevelMap"\r\n                                [showClear]="true"\r\n                                [(ngModel)]="shopTechnicalLevel"\r\n                                placeholder="&nbsp;"\r\n                                [disabled]="isReadOpenMode || !isCreateOpenMode"\r\n                              ></p-dropdown>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab id="arisingEventsTab" *ngIf="isArisingEventTabVisible && !isCreateOpenMode">\r\n          <ng-template mat-tab-label>\r\n            {{ getComponentName() + ".arisingEvents" | translate }}\r\n          </ng-template>\r\n          <!-- Arising Events TAB -->\r\n          <div [hidden]="isCreateOpenMode || !isArisingEventTabVisible">\r\n            <div class="grid-row">\r\n              <div id="arisingEventsPanel" class="grid-cell--12">\r\n                <div class="grid-cell grid-cell--container" *ngIf="isArisingEventTabVisible">\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 id="arisingEventTableDataSourceTitle" class="grid-cell-title">\r\n                        {{ componentData.componentId + ".arisingEvents" | translate }}({{\r\n                          arisingEventTableDataSource.dataCount\r\n                        }})\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <div class="section">\r\n                      <div class="section-content">\r\n                        <a-table id="arisingEventTableDataSource" [dataSource]="arisingEventTableDataSource">\r\n                          <ng-template tableActionsDef>\r\n                            <p-splitButton\r\n                              *ngIf="!isReadOpenMode && !arisingEventTableDataSource.hasDataSelection"\r\n                              class="aw-split-btn aw-table-action"\r\n                              label="{{ getComponentName() + \'.createEvent\' | translate }}"\r\n                              [model]="navigationLinkList"\r\n                              appendTo="body"\r\n                            ></p-splitButton>\r\n                            <button\r\n                              id="deleteArisingEvent"\r\n                              *ngIf="!isReadOpenMode && arisingEventTableDataSource.hasDataSelection"\r\n                              type="button"\r\n                              mat-raised-button\r\n                              color="warn"\r\n                              (click)="deleteEvents()"\r\n                            >\r\n                              {{ "global.delete" | translate }}\r\n                            </button>\r\n                          </ng-template>\r\n\r\n                          <ng-template columnDef="asset" let-rowData="rowData">\r\n                            <a (click)="openArisingEventAsset(rowData)">\r\n                              {{ rowData.asset }}\r\n                            </a>\r\n                          </ng-template>\r\n                          <ng-template columnDef="notificationCode" let-rowData="rowData">\r\n                            <a (click)="openEvent(rowData)">\r\n                              {{ rowData.notificationCode }}\r\n                            </a>\r\n                          </ng-template>\r\n\r\n                          <ng-template columnDef="notificationSubject" let-rowData="rowData">\r\n                            <span pTooltip="{{ rowData.notificationSubject }}" tooltipPosition="bottom">\r\n                              {{ rowData.notificationSubject }}\r\n                            </span>\r\n                          </ng-template>\r\n\r\n                          <ng-template columnDef="isDeduced" let-rowData="rowData">\r\n                            <i\r\n                              *ngIf="rowData.isDeduced !== null && rowData.isDeduced"\r\n                              class="fa fa-fw fa-check"\r\n                              aria-hidden="true"\r\n                            ></i>\r\n                          </ng-template>\r\n                        </a-table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab id="taskTab" *ngIf="isTaskTabVisible">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".task" | translate }}\r\n          </ng-template>\r\n          <!-- TASK TAB -->\r\n          <div [hidden]="isCreateOpenMode || !isTaskTabVisible">\r\n            <div class="grid-row">\r\n              <div id="taskManagementPanel" class="grid-cell--12">\r\n                <div class="grid-cell grid-cell--container" *ngIf="isTaskTabVisible">\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 class="grid-cell-title">\r\n                        {{ componentData.componentId + ".taskManagement" | translate }}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <div class="section">\r\n                      <div class="section-content">\r\n                        <div class="row">\r\n                          <div id="taskCode" class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".taskCode" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n                              <div class="form-control-data" (click)="taskSearchCode($event)">\r\n                                {{ bidoNotificationDTO.taskCode }}\r\n                              </div>\r\n\r\n                              <div *ngIf="bidoNotificationDTO.taskCode" class="btn-clear-wrapper">\r\n                                <i\r\n                                  class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                                  aria-hidden="true"\r\n                                  (click)="clearTaskCode()"\r\n                                ></i>\r\n                              </div>\r\n                              <div class="btn-search-wrapper">\r\n                                <i\r\n                                  class="fa fa-fw fa-search aw-icon btn-search"\r\n                                  aria-hidden="true"\r\n                                  (click)="taskSearchCode($event)"\r\n                                ></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="taskVersion" class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".taskVersion" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [disabled]="true"\r\n                                [(ngModel)]="bidoNotificationDTO.taskVersion"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="isIgnoreInitialDeadlines" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".initialDeadlines" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <p-checkbox\r\n                                binary="true"\r\n                                class="aw-checkbox"\r\n                                [(ngModel)]="isIgnoreInitialDeadlines"\r\n                                [disabled]="isReadOpenMode"\r\n                              ></p-checkbox>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="row">\r\n                          <div id="selectedTaskDesignation" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".designation" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <textarea\r\n                                class="aw-textarea"\r\n                                [rows]="3"\r\n                                pInputTextarea\r\n                                [disabled]="true"\r\n                                [(ngModel)]="selectedTaskDesignation"\r\n                              ></textarea>\r\n                            </div>\r\n                          </div>\r\n                          <div id="selectedTaskDescription" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".taskDescription" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <textarea\r\n                                class="aw-textarea"\r\n                                [rows]="3"\r\n                                pInputTextarea\r\n                                [disabled]="true"\r\n                                [(ngModel)]="selectedTaskDescription"\r\n                              ></textarea>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="originalDeadlines" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".originalDeadlines" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <textarea\r\n                                class="aw-textarea"\r\n                                [rows]="3"\r\n                                pInputTextarea\r\n                                [(ngModel)]="originalDeadlines"\r\n                                [disabled]="true"\r\n                              ></textarea>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div [hidden]="isCreateOpenMode || !isTaskTabVisible">\r\n            <div class="grid-row">\r\n              <div id="assetPanel2" class="grid-cell--12">\r\n                <div class="grid-cell grid-cell--container" *ngIf="isTaskTabVisible">\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 class="grid-cell-title">\r\n                        {{ componentData.componentId + ".asset" | translate }}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <div class="section">\r\n                      <div class="section-content">\r\n                        <div class="row">\r\n                          <div id="selectedSearchAsset" class="form-group flex--2">\r\n                            <label class="form-label"> &nbsp; </label>\r\n\r\n                            <div class="form-control aw-selectbutton-wrapper">\r\n                              <p-selectButton\r\n                                [(ngModel)]="selectedSearchAsset"\r\n                                [options]="searchAssetList"\r\n                                (onChange)="changeTaskAssetType()"\r\n                              ></p-selectButton>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class="row" *ngIf="selectedSearchAsset === 0">\r\n                          <div id="taskAssetCode" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".assetCode" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control form-control-with-modal" (click)="searchAsset($event, 1)">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoNotificationDTO.taskAssetCode"\r\n                                [ngModelOptions]="{ standalone: true }"\r\n                                disabled="true"\r\n                              />\r\n                              <div class="btn-clear-wrapper">\r\n                                <i\r\n                                  *ngIf="bidoNotificationDTO.taskAssetCode && !isReadOpenMode"\r\n                                  class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                                  aria-hidden="true"\r\n                                  (click)="resetTaskAssetField($event)"\r\n                                ></i>\r\n                              </div>\r\n                              <div class="btn-search-wrapper">\r\n                                <i\r\n                                  class="fa fa-fw fa-search aw-icon btn-search"\r\n                                  *ngIf="!isReadOpenMode"\r\n                                  aria-hidden="true"\r\n                                  (click)="searchAsset($event, 1)"\r\n                                ></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div id="selectedAssetPN" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".pn" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [disabled]="true" [(ngModel)]="selectedAssetPN" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="selectedAssetSN" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".sn" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [disabled]="true" [(ngModel)]="selectedAssetSN" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="selectedAssetName" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".name" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [disabled]="true" [(ngModel)]="selectedAssetName" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="selectedAssetDesignation" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".designation" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [disabled]="true"\r\n                                [(ngModel)]="selectedAssetDesignation"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class="row grid-cell--4" *ngIf="selectedSearchAsset === 1">\r\n                          <div id="taskAssetPn" class="form-group">\r\n                            <!-- <label class="form-label">\r\n                {{ componentData.componentId + ".part" | translate }}\r\n              </label> -->\r\n\r\n                            <div class="form-control form-control-with-modal" (click)="openPartNumberDialog($event, 1)">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [(ngModel)]="bidoNotificationDTO.taskAssetPn"\r\n                                [ngModelOptions]="{ standalone: true }"\r\n                                disabled="true"\r\n                              />\r\n                              <div class="btn-clear-wrapper">\r\n                                <i\r\n                                  *ngIf="bidoNotificationDTO.taskAssetPn && !isReadOpenMode"\r\n                                  class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                                  aria-hidden="true"\r\n                                  (click)="clearTaskPn($event)"\r\n                                ></i>\r\n                              </div>\r\n                              <div class="btn-external-link-wrapper">\r\n                                <i\r\n                                  *ngIf="bidoNotificationDTO.taskAssetPn && !isReadOpenMode"\r\n                                  class="fa fa-fw fa-external-link aw-icon aw-icon-with-border"\r\n                                  aria-hidden="true"\r\n                                  (click)="openPartNumberScreen(bidoNotificationDTO.taskAssetPn, $event)"\r\n                                ></i>\r\n                              </div>\r\n                              <div class="btn-search-wrapper">\r\n                                <i\r\n                                  class="fa fa-fw fa-search aw-icon btn-search"\r\n                                  *ngIf="!isReadOpenMode"\r\n                                  aria-hidden="true"\r\n                                  (click)="openPartNumberDialog($event, 1)"\r\n                                ></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class="row grid-cell--4" *ngIf="selectedSearchAsset === 2">\r\n                          <div id="taskAtaChapter" class="form-group flex--2">\r\n                            <!-- <label class="form-label">\r\n                {{ componentData.componentId + ".itemCode" | translate }}\r\n              </label> -->\r\n\r\n                            <div class="form-control display--flex-row">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input flex--1"\r\n                                [disabled]="isReadOpenMode"\r\n                                [(ngModel)]="bidoNotificationDTO.taskAtaChapter"\r\n                                maxlength="2"\r\n                              />\r\n                              <span class="separator">-</span>\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input flex--1"\r\n                                [disabled]="isReadOpenMode"\r\n                                [(ngModel)]="bidoNotificationDTO.taskAtaSection"\r\n                                maxlength="2"\r\n                              />\r\n                              <span class="separator">-</span>\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input flex--1"\r\n                                [disabled]="isReadOpenMode"\r\n                                [(ngModel)]="bidoNotificationDTO.taskAtaSubject"\r\n                                maxlength="2"\r\n                              />\r\n                              <i\r\n                                class="fa fa-fw fa-search aw-icon btn-search"\r\n                                *ngIf="!isReadOpenMode"\r\n                                aria-hidden="true"\r\n                                (click)="searchItems($event, 0)"\r\n                              ></i>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab id="attributesTab" *ngIf="isAttributeTabVisible">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".attributes" | translate }}\r\n          </ng-template>\r\n          <!-- Attributes TAB -->\r\n          <div [hidden]="isCreateOpenMode || !isAttributeTabVisible">\r\n            <div class="grid-row">\r\n              <div\r\n                id="attributesPanel"\r\n                #attributes\r\n                class="grid-cell--12"\r\n                (click)="selectPageTocEntry(component.ATTRIBUTES_ANCHOR_ID)"\r\n              >\r\n                <div\r\n                  class="grid-cell grid-cell--container"\r\n                  [ngClass]="{ active: isPageTocEntrySelected(component.ATTRIBUTES_ANCHOR_ID) }"\r\n                  *ngIf="isAttributeTabVisible"\r\n                >\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 class="grid-cell-title">\r\n                        {{ componentData.componentId + ".attributes" | translate }}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <div class="section">\r\n                      <div class="section-content">\r\n                        <div class="grid-cell--12">\r\n                          <div class="row">\r\n                            <div id="historicAttributes" class="form-group">\r\n                              <div class="form-control">\r\n                                <button\r\n                                  id="historicAttributesPanel"\r\n                                  type="button"\r\n                                  (click)="openHistoricAttributes()"\r\n                                  mat-raised-button\r\n                                >\r\n                                  <span>{{ "global.historic" | translate }}</span>\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class="row">\r\n                            <aw-dynamic-attributes\r\n                              id="dynamicAttributes"\r\n                              [workflowControls]="userWorkflow ? userWorkflow.listControlByIdentifier : []"\r\n                              [attributes]="dynamicAttributesForEvent"\r\n                              [showHistory]="false"\r\n                              [isReadOpenMode]="isReadOpenMode"\r\n                            ></aw-dynamic-attributes>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab id="workPostponmentTab" *ngIf="isWorkPostponmentTabVisible">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".workPostponment" | translate }}\r\n          </ng-template>\r\n          <!-- Work Postponment TAB -->\r\n          <div [hidden]="isCreateOpenMode || !isWorkPostponmentTabVisible">\r\n            <div class="grid-row">\r\n              <div\r\n                id="workPostponmentPanel"\r\n                #workPostponment\r\n                class="grid-cell--12"\r\n                (click)="selectPageTocEntry(component.WORK_POSTPONMENT_ANCHOR_ID)"\r\n              >\r\n                <div\r\n                  class="grid-cell grid-cell--container"\r\n                  [ngClass]="{ active: isPageTocEntrySelected(component.WORK_POSTPONMENT_ANCHOR_ID) }"\r\n                  *ngIf="isWorkPostponmentTabVisible"\r\n                >\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 class="grid-cell-title">\r\n                        {{ componentData.componentId + ".workPostponment" | translate }}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <div class="row">\r\n                      <div class="postponement-historic">\r\n                        <button\r\n                          id="historicWorkPostponmentPanel"\r\n                          type="button"\r\n                          (click)="openHistoricAttributes()"\r\n                          mat-raised-button\r\n                        >\r\n                          <span>{{ "global.historic" | translate }}</span>\r\n                        </button>\r\n                      </div>\r\n                      <div class="postponement-choices">\r\n                        <button\r\n                          type="button"\r\n                          (click)="reviewToCentral()"\r\n                          mat-raised-button\r\n                          *ngIf="displayReviewToCentral()"\r\n                          [disabled]="!enableReviewToCentral()"\r\n                        >\r\n                          <span>{{ componentData.componentId + ".reviewToCentral" | translate }}</span>\r\n                        </button>\r\n\r\n                        <button\r\n                          id="acceptPostponementWorkPostponmentPanel"\r\n                          type="button"\r\n                          (click)="onAcceptPostponement()"\r\n                          mat-raised-button\r\n                          *ngIf="showAcceptPostponement()"\r\n                        >\r\n                          <span>{{ componentData.componentId + ".acceptPostponement" | translate }}</span>\r\n                        </button>\r\n\r\n                        <button\r\n                          id="refusePostponementWorkPostponmentPanel"\r\n                          type="button"\r\n                          (click)="onRefusePostpone()"\r\n                          mat-raised-button\r\n                          *ngIf="showRefusePostponement()"\r\n                        >\r\n                          <span>{{ componentData.componentId + ".refusePostponement" | translate }}</span>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <!-- REQUEST -->\r\n                    <div class="section">\r\n                      <h4 class="section-title">{{ componentData.componentId + ".request" | translate }}</h4>\r\n                      <div class="section-content">\r\n                        <div class="row">\r\n                          <div id="requestAuthorTxt" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".author" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [disabled]="true" [(ngModel)]="requestAuthorTxt" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="notificationDescription2" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".reason" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [disabled]="true"\r\n                                [(ngModel)]="bidoNotificationDTO.notificationDescription"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div id="relatedWorkOrder" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".relatedWorkOrder" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <a style="cursor: pointer" (click)="openWorkOrderUC(postponmentRelatedWO)">{{\r\n                                postponmentRelatedWO\r\n                              }}</a>\r\n                            </div>\r\n                          </div>\r\n                          <div id="relatedEvolution" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".relatedEvolution" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <a style="cursor: pointer" (click)="openEvolutionUC(relatedEvolutionKey)">{{\r\n                                relatedEvolutionKey\r\n                              }}</a>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <!-- APPROVAL -->\r\n                    <div class="section" *ngIf="showWPRAcceptationPanel()">\r\n                      <h4 class="section-title">{{ componentData.componentId + ".approval" | translate }}</h4>\r\n                      <div class="section-content">\r\n                        <div class="row">\r\n                          <div id="requestDecisionAuthorTxt" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".decisionAuthor" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [disabled]="true"\r\n                                [(ngModel)]="requestDecisionAuthorTxt"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div id="postponementAuthorizationNum" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".authorizationNumber" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [disabled]="isReadOpenMode"\r\n                                [(ngModel)]="postponementAuthorizationNum"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            id="postponementNewLimitDate"\r\n                            class="form-group"\r\n                            [ngClass]="{ required: !isReadOpenMode }"\r\n                          >\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".newLimitDate" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <p-calendar\r\n                                showButtonBar="true"\r\n                                [monthNavigator]="true"\r\n                                [yearNavigator]="true"\r\n                                [yearRange]="sessionService.calendarYearRange"\r\n                                class="aw-calendar"\r\n                                [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                                [locale]="sessionService.calendarFormat"\r\n                                [(ngModel)]="postponementNewLimitDate"\r\n                                appendTo="body"\r\n                                [disabled]="isReadOpenMode"\r\n                              ></p-calendar>\r\n                            </div>\r\n                          </div>\r\n                          <div id="flightRestriction" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".flightRestriction" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [disabled]="isReadOpenMode"\r\n                                [(ngModel)]="flightRestriction"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <!-- REFUSAL -->\r\n                    <div class="section" *ngIf="showWPRRefusalPanel()">\r\n                      <h4 class="section-title">{{ componentData.componentId + ".refusal" | translate }}</h4>\r\n                      <div class="section-content">\r\n                        <div class="row">\r\n                          <div id="workPostponmentDecisionAuthor" class="form-group flex--1">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".decisionAuthor" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [disabled]="true"\r\n                                [(ngModel)]="workPostponmentDecisionAuthor"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div\r\n                            id="workPostponmentRefusalReason"\r\n                            class="form-group flex--2"\r\n                            [ngClass]="{ required: !isReadOpenMode }"\r\n                          >\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".refusalReason" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <textarea\r\n                                class="aw-textarea"\r\n                                [rows]="3"\r\n                                pInputTextarea\r\n                                [(ngModel)]="workPostponmentRefusalReason"\r\n                                [disabled]="isReadOpenMode"\r\n                              ></textarea>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="filler8" class="form-group flex--1"></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab id="evolutionTab" *ngIf="isEvolutionTabVisible">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".evolution" | translate }}\r\n          </ng-template>\r\n          <!-- EVOLUTION TAB -->\r\n          <div [hidden]="isCreateOpenMode || !isEvolutionTabVisible">\r\n            <div class="grid-row">\r\n              <div id="evolutionPanel" class="grid-cell--12">\r\n                <div class="grid-cell grid-cell--container" *ngIf="isEvolutionTabVisible">\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 class="grid-cell-title">\r\n                        {{ componentData.componentId + ".evolution" | translate }}\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <div class="section">\r\n                      <div class="section-content">\r\n                        <div class="row">\r\n                          <div id="evolutionNumber" class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n                            <label class="form-label">{{ getComponentName() + ".evolutionNumber" | translate }} </label>\r\n\r\n                            <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n                              <div class="form-control-data" (click)="openEvolutionDialog($event)">\r\n                                {{ notificationEvolutionDTO.evolutionNumber }}\r\n                              </div>\r\n\r\n                              <div *ngIf="notificationEvolutionDTO.evolutionNumber" class="btn-clear-wrapper">\r\n                                <i\r\n                                  *ngIf="!isReadOpenMode"\r\n                                  class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                                  aria-hidden="true"\r\n                                  (click)="\r\n                                    notificationEvolutionDTO.evolutionNumber = undefined;\r\n                                    notificationEvolutionDTO.evolutionRevisionNumber = undefined;\r\n                                    evolutionType = undefined\r\n                                  "\r\n                                ></i>\r\n                              </div>\r\n                              <div class="btn-search-wrapper">\r\n                                <i\r\n                                  *ngIf="!isReadOpenMode"\r\n                                  class="fa fa-fw fa-search aw-icon btn-search"\r\n                                  aria-hidden="true"\r\n                                  (click)="openEvolutionDialog($event)"\r\n                                ></i>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div\r\n                            id="evolutionRevisionNumber"\r\n                            class="form-group"\r\n                            [ngClass]="{ required: !isReadOpenMode }"\r\n                          >\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".evolutionRevisionNumber" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input\r\n                                type="text"\r\n                                class="aw-input"\r\n                                [disabled]="true"\r\n                                [(ngModel)]="notificationEvolutionDTO.evolutionRevisionNumber"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="evolutionType" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".evolutionType" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <input type="text" class="aw-input" [disabled]="true" [(ngModel)]="evolutionType" />\r\n                            </div>\r\n                          </div>\r\n                          <div id="originalDeadlines2" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".originalDeadlines" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <textarea\r\n                                class="aw-textarea"\r\n                                [rows]="3"\r\n                                pInputTextarea\r\n                                [(ngModel)]="originalDeadlines"\r\n                                [disabled]="true"\r\n                              ></textarea>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id="isIgnoreInitialDeadlines2" class="form-group">\r\n                            <label class="form-label">\r\n                              {{ componentData.componentId + ".initialDeadlines" | translate }}\r\n                            </label>\r\n\r\n                            <div class="form-control">\r\n                              <p-checkbox\r\n                                binary="true"\r\n                                class="aw-checkbox"\r\n                                [(ngModel)]="isIgnoreInitialDeadlines"\r\n                                [disabled]="isReadOpenMode"\r\n                              ></p-checkbox>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab id="documentsTab" *ngIf="isDocumentTabVisible && !isCreateOpenMode">\r\n          <ng-template mat-tab-label>\r\n            {{ getComponentName() + ".documents" | translate }}\r\n          </ng-template>\r\n          <!-- DOCUMENTS -->\r\n          <div [hidden]="isCreateOpenMode || !isDocumentTabVisible">\r\n            <div class="grid-row">\r\n              <div id="documentsPanel" class="grid-cell--12">\r\n                <div class="grid-cell grid-cell--container" *ngIf="isDocumentTabVisible">\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 id="bireDocumentDisplayedDataSourceTitle" class="grid-cell-title">\r\n                        {{ getComponentName() + ".documents" | translate }} ({{\r\n                          bireDocumentDisplayedDataSource.dataCount\r\n                        }})\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content">\r\n                    <a-table id="bireDocumentDisplayedDataSource" [dataSource]="bireDocumentDisplayedDataSource">\r\n                      <ng-template tableActionsDef>\r\n                        <button\r\n                          id="deleteBireDocumentDisplayedDataSource"\r\n                          *ngIf="!isFieldEnabled && !isReadOpenMode && bireDocumentDisplayedDataSource.hasDataSelection"\r\n                          type="button"\r\n                          mat-raised-button\r\n                          color="warn"\r\n                          (click)="deleteDocuments()"\r\n                        >\r\n                          {{ "global.delete" | translate }}\r\n                        </button>\r\n\r\n                        <button\r\n                          id="editBireDocumentDisplayedDataSource"\r\n                          *ngIf="\r\n                            !isFieldEnabled &&\r\n                            !isReadOpenMode &&\r\n                            bireDocumentDisplayedDataSource.dataSelectionCount === 1\r\n                          "\r\n                          type="button"\r\n                          mat-raised-button\r\n                          (click)="editDocument()"\r\n                        >\r\n                          {{ "global.edit" | translate }}\r\n                        </button>\r\n\r\n                        <button\r\n                          id="openBireDocumentDisplayedDataSource"\r\n                          *ngIf="\r\n                            !isFieldEnabled &&\r\n                            !isReadOpenMode &&\r\n                            bireDocumentDisplayedDataSource.dataSelectionCount === 1\r\n                          "\r\n                          type="button"\r\n                          mat-raised-button\r\n                          (click)="openDocument()"\r\n                        >\r\n                          {{ "global.open" | translate }}\r\n                        </button>\r\n\r\n                        <button\r\n                          id="addBireDocumentDisplayedDataSource"\r\n                          *ngIf="\r\n                            !isFieldEnabled && !isReadOpenMode && !bireDocumentDisplayedDataSource.hasDataSelection\r\n                          "\r\n                          type="button"\r\n                          mat-raised-button\r\n                          (click)="addDocument()"\r\n                        >\r\n                          {{ "global.add" | translate }}\r\n                        </button>\r\n                      </ng-template>\r\n                      <ng-template columnDef="docEndOfValidityDate" let-rowData="rowData">\r\n                        {{ rowData.docEndOfValidityDate | date: "yyyy/MM/dd":"":translateService.currentLang }}\r\n                      </ng-template>\r\n                      <ng-template columnDef="docName" let-rowData="rowData">\r\n                        <a (click)="downloadDocument(rowData)">\r\n                          {{ rowData.docName }}\r\n                        </a>\r\n                      </ng-template>\r\n                      <ng-template columnDef="docExtension" let-rowData="rowData">\r\n                        {{ showDocExtension(rowData) }}\r\n                      </ng-template>\r\n\r\n                      <ng-template columnDef="docPublicationDate" let-rowData="rowData">\r\n                        {{ rowData.docPublicationDate | date: "yyyy/MM/dd":"":translateService.currentLang }}\r\n                      </ng-template>\r\n                    </a-table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab id="diffusionTab" *ngIf="isDiffusionTabVisible && !isCreateOpenMode">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".diffusion" | translate }}\r\n          </ng-template>\r\n          <!-- DIFFUSION -->\r\n          <div [hidden]="isCreateOpenMode">\r\n            <div class="grid-row">\r\n              <div id="diffusionPanel" class="grid-cell--12" (click)="selectPageTocEntry(\'diffusion\')">\r\n                <div\r\n                  class="grid-cell grid-cell--container"\r\n                  [ngClass]="{ active: isPageTocEntrySelected(\'diffusion\') }"\r\n                  *ngIf="isDiffusionTabVisible"\r\n                >\r\n                  <div class="grid-cell-header">\r\n                    <div class="grid-cell-title-container">\r\n                      <h3 id="diffusionTableDataSourceTitle" class="grid-cell-title">\r\n                        {{ componentData.componentId + ".diffusion" | translate }} ({{\r\n                          diffusionTableDataSource.dataCount\r\n                        }})\r\n                      </h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="grid-cell-content grid-cell-content-with-section">\r\n                    <div class="section">\r\n                      <div class="section-content">\r\n                        <a-table id="diffusionTableDataSource" [dataSource]="diffusionTableDataSource">\r\n                          <ng-template tableActionsDef>\r\n                            <button\r\n                              id="sendDiffusion"\r\n                              *ngIf="!isReadOpenMode && diffusionTableDataSource.hasDataSelection"\r\n                              type="button"\r\n                              mat-raised-button\r\n                              color="warn"\r\n                              (click)="sendDiffusionMail()"\r\n                            >\r\n                              {{ componentData.componentId + ".send" | translate }}\r\n                            </button>\r\n                          </ng-template>\r\n                        </a-table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- DIALOGS -->\r\n<aw-dialog-search-event\r\n  *ngIf="showQuickSearchEventPopup"\r\n  [(display)]="showQuickSearchEventPopup"\r\n  [event-code]="bidoNotificationDTO.notNotificationCode"\r\n  (onSelected)="setSelectedEvent($event)"\r\n></aw-dialog-search-event>\r\n\r\n<aw-dialog-search-equipment\r\n  *ngIf="showQuickSearchEquipmentPopup"\r\n  [(display)]="showQuickSearchEquipmentPopup"\r\n  [selectionMultiple]="false"\r\n  [equipment-code]="superiorAssetCode"\r\n  (onSelected)="setSelectedAsset($event)"\r\n></aw-dialog-search-equipment>\r\n\r\n<aw-dynamic-attributes-history\r\n  *ngIf="showDynamicAttributesHistoric"\r\n  [attributes]="hDynamicAttributesForEvent"\r\n  [history]="dynamicAttributesHistoric"\r\n  [showDelete]="false"\r\n  [(display)]="showDynamicAttributesHistoric"\r\n></aw-dynamic-attributes-history>\r\n\r\n<aw-status-update-history\r\n  *ngIf="showStatusUpdatesPopup"\r\n  [object]="bidoNotificationDTO"\r\n  [data]="tableStatusUpdatesData"\r\n  [deleteApi]="deleteApi"\r\n  [(display)]="showStatusUpdatesPopup"\r\n  [keyMap]="updatesKeyMap"\r\n></aw-status-update-history>\r\n\r\n<aw-dialog-search-evolution\r\n  *ngIf="showEvolutionDialog"\r\n  [(display)]="showEvolutionDialog"\r\n  (onSelected)="onSelectedEvolution($event)"\r\n>\r\n</aw-dialog-search-evolution>\r\n\r\n<aw-dialog-table\r\n  *ngIf="showPartNumberDialog"\r\n  [data]="partNumberTableData"\r\n  [keyMap]="keyMap"\r\n  [(display)]="showPartNumberDialog"\r\n  (onSelected)="onSelectedPartNumber($event)"\r\n></aw-dialog-table>\r\n\r\n<aw-dialog-table\r\n  *ngIf="showItemDialog"\r\n  [(display)]="showItemDialog"\r\n  [data]="dialogTableDataItems"\r\n  (onSelected)="setSelectedItems($event)"\r\n></aw-dialog-table>\r\n\r\n<aw-dialog-search-task\r\n  *ngIf="showItemTaskSearchPopup"\r\n  [(display)]="showItemTaskSearchPopup"\r\n  (onSelected)="addTask($event)"\r\n></aw-dialog-search-task>\r\n\r\n<aw-dialog-bire-document\r\n  *ngIf="showDocumentDialog"\r\n  [document]="currentDocument"\r\n  [(display)]="showDocumentDialog"\r\n  [isReadOnlyForm]="isReadOnlyDocumentDialog"\r\n  (onValidated)="updateDocument($event)"\r\n></aw-dialog-bire-document>\r\n\r\n<aw-event-import-popup\r\n  *ngIf="showAddDocumentDialog"\r\n  [document]="currentDocument"\r\n  [(display)]="showAddDocumentDialog"\r\n  [isReadOnlyForm]="isReadOnlyDocumentDialog"\r\n  [types]="documentTypes"\r\n  (onValidated)="addNewDocument($event)"\r\n></aw-event-import-popup>\r\n\r\n<aw-dialog-table\r\n  *ngIf="showDefectPartDialog"\r\n  [(display)]="showDefectPartDialog"\r\n  [data]="defectPartTableData"\r\n  (onSelected)="onSelectDefectPart($event)"\r\n></aw-dialog-table>\r\n\r\n<aw-dialog-add-symptom\r\n  *ngIf="showSymptomTableDialog"\r\n  [(display)]="showSymptomTableDialog"\r\n  [symptomMap]="symptomNameMap"\r\n  [data]="dataSymptom"\r\n  (onValidated)="onUpdateSymptom($event)"\r\n  (onAdded)="onAddSymptom($event)"\r\n></aw-dialog-add-symptom>\r\n\r\n<aw-dialog-add-param-value\r\n  *ngIf="showContextTableDialog"\r\n  [(display)]="showContextTableDialog"\r\n  [data]="dataContext"\r\n  (onAdded)="onAddContextParam($event)"\r\n></aw-dialog-add-param-value>\r\n\r\n<aw-dialog-add-param-value\r\n  *ngIf="showSymptomParamDialog"\r\n  [(display)]="showSymptomParamDialog"\r\n  [data]="dataContext"\r\n  (onAdded)="onAddSymptomParamParam($event)"\r\n></aw-dialog-add-param-value>\r\n\r\n<aw-dialog-measure-update\r\n  *ngIf="showMeasurePopup"\r\n  [(display)]="showMeasurePopup"\r\n  [component-data]="dataMeasure"\r\n  [context]="notificationAsset"\r\n  [equipment]="bidoEquipmentDTO"\r\n  [isReadOnlyForm]="isReadOnlyMeasureUpdateDialog"\r\n  [dateEvent]="bidoNotificationDTO.reportingPeriodStartDate"\r\n  (onUpdate)="loadMeasureTableData()"\r\n  (onReport)="showMeasureReport($event)"\r\n></aw-dialog-measure-update>\r\n\r\n<aw-dialog-measure-report\r\n  *ngIf="showMeasureReportText"\r\n  [(display)]="showMeasureReportText"\r\n  [reportMessage]="measureReportText"\r\n></aw-dialog-measure-report>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-create/event-create.component.scss':
      /*!**************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-create/event-create.component.scss ***!
  \**************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          ':host .separator {\n  display: flex;\n  flex-direction: row;\n  align-items: center; }\n\n:host .grid-cell-chart .chart-container {\n  display: flex;\n  flex-direction: row; }\n\n@media screen and (max-width: 1280px) {\n    :host .grid-cell-chart .chart-container {\n      flex-direction: column; } }\n\n:host .grid-cell-chart .chart-container .chart-legend {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-left: 8px; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-legend-label {\n      display: flex;\n      flex-direction: row;\n      align-items: center; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-legend-label .chart-legend-label-color {\n        height: 0.75rem;\n        margin-right: 8px;\n        width: 2rem; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-legend-label .chart-legend-label-color.quantity {\n          background-color: #0d3fc2; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-legend-label .chart-legend-label-color.amount {\n          background-color: #d3c632; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-legend-label .chart-legend-label-color.not-airworthy {\n          background-color: #f6685e; }\n\n:host .grid-cell-chart .chart-container .chart-legend .chart-value {\n      font-weight: 700;\n      margin-left: 8px; }\n\n:host .grid-cell-chart .chart-container .chart-wrapper {\n    position: relative;\n    height: 18rem;\n    width: 30rem; }\n\n:host .postponement-historic {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  justify-content: flex-start; }\n\n:host .postponement-historic button {\n    margin-left: 0.5rem; }\n\n:host .postponement-choices {\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  justify-content: flex-end; }\n\n:host .postponement-choices button {\n    margin-left: 0.5rem; }\n\n:host .anchorClass {\n  cursor: pointer; }\n\n:host .list {\n  max-width: 40%;\n  min-width: 40%; }\n\n/*# sourceMappingURL=data:application/json;base64, */';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-create/event-create.component.ts':
      /*!************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-create/event-create.component.ts ***!
  \************************************************************************************/
      /*! exports provided: EventCreateComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'EventCreateComponent', function() {
          return EventCreateComponent;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs */ './node_modules/rxjs/_esm5/index.js'
        );
        /* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! rxjs/operators */ './node_modules/rxjs/_esm5/operators/index.js'
        );
        /* harmony import */ var _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../shared/components/component-sidebar/page-toc.service */ './src/app/shared/components/component-sidebar/page-toc.service.ts'
        );
        /* harmony import */ var _shared_components_dynamic_attributes_dynamic_attributes_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../shared/components/dynamic-attributes/dynamic-attributes.service */ './src/app/shared/components/dynamic-attributes/dynamic-attributes.service.ts'
        );
        /* harmony import */ var _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../shared/components/table/table-data-source */ './src/app/shared/components/table/table-data-source.ts'
        );
        /* harmony import */ var _shared_constants_app_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../../shared/constants/app-constants */ './src/app/shared/constants/app-constants.ts'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../../shared/constants/bido-attribute-constants */ './src/app/shared/constants/bido-attribute-constants.ts'
        );
        /* harmony import */ var _shared_constants_bido_evolution_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../../shared/constants/bido-evolution-constants */ './src/app/shared/constants/bido-evolution-constants.ts'
        );
        /* harmony import */ var _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../../shared/constants/bido-function-type-constants */ './src/app/shared/constants/bido-function-type-constants.ts'
        );
        /* harmony import */ var _shared_constants_bido_notification_type_constants__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../../shared/constants/bido-notification-type-constants */ './src/app/shared/constants/bido-notification-type-constants.ts'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../../shared/constants/control-config-constants */ './src/app/shared/constants/control-config-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../../shared/constants/lang-constants */ './src/app/shared/constants/lang-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ../../../../shared/enums/table-column-filter-mode.enum */ './src/app/shared/enums/table-column-filter-mode.enum.ts'
        );
        /* harmony import */ var _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ../../../../shared/enums/table-selection-mode.enum */ './src/app/shared/enums/table-selection-mode.enum.ts'
        );
        /* harmony import */ var _shared_pipes_format_select_option_pipe__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
          /*! ../../../../shared/pipes/format-select-option.pipe */ './src/app/shared/pipes/format-select-option.pipe.ts'
        );
        /* harmony import */ var _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
          /*! ../../../../shared/services/confirmation.service */ './src/app/shared/services/confirmation.service.ts'
        );
        /* harmony import */ var _shared_services_date_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
          /*! ../../../../shared/services/date.service */ './src/app/shared/services/date.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
          /*! ../../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
          /*! ../../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
          /*! ../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
          /*! ../../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
          /*! ../../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
          /*! ../../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
          /*! ../../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_page_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
          /*! ../../../../shared/types/page-component */ './src/app/shared/types/page-component.ts'
        );
        /* harmony import */ var _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
          /*! ../../../../shared/utils/bido-family-variant-utils */ './src/app/shared/utils/bido-family-variant-utils.ts'
        );
        /* harmony import */ var _shared_utils_dom_utils__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
          /*! ../../../../shared/utils/dom-utils */ './src/app/shared/utils/dom-utils.ts'
        );
        /* harmony import */ var _shared_utils_dto_utils__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
          /*! ../../../../shared/utils/dto-utils */ './src/app/shared/utils/dto-utils.ts'
        );
        /* harmony import */ var _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
          /*! ../../../../shared/utils/file-utils */ './src/app/shared/utils/file-utils.ts'
        );
        /* harmony import */ var _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
          /*! ../../../../shared/utils/list-utils */ './src/app/shared/utils/list-utils.ts'
        );
        /* harmony import */ var _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
          /*! ../../../../shared/utils/select-item-utils */ './src/app/shared/utils/select-item-utils.ts'
        );
        /* harmony import */ var _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
          /*! ../../../../shared/utils/string-utils */ './src/app/shared/utils/string-utils.ts'
        );
        /* harmony import */ var _shared_utils_workflow_utils__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
          /*! ../../../../shared/utils/workflow-utils */ './src/app/shared/utils/workflow-utils.ts'
        );
        /* harmony import */ var _object_status_object_status_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
          /*! ../../../object-status/object-status.component */ './src/app/main/object-status/object-status.component.ts'
        );
        /* harmony import */ var _overlay_overlay_service__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
          /*! ../../../overlay/overlay.service */ './src/app/main/overlay/overlay.service.ts'
        );
        /* harmony import */ var _event_service__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
          /*! ../event.service */ './src/app/main/fleet-management/event/event.service.ts'
        );
        /* harmony import */ var _event_create_service__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
          /*! ./event-create.service */ './src/app/main/fleet-management/event/event-create/event-create.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __assign =
          (undefined && undefined.__assign) ||
          function() {
            __assign =
              Object.assign ||
              function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                  s = arguments[i];
                  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
              };
            return __assign.apply(this, arguments);
          };
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };
        var __read =
          (undefined && undefined.__read) ||
          function(o, n) {
            var m = typeof Symbol === 'function' && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
              r,
              ar = [],
              e;
            try {
              while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
              e = { error: error };
            } finally {
              try {
                if (r && !r.done && (m = i['return'])) m.call(i);
              } finally {
                if (e) throw e.error;
              }
            }
            return ar;
          };
        var __spread =
          (undefined && undefined.__spread) ||
          function() {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
          };

        var TSN_COLOR = '#D3C632';
        var CSN_COLOR = '#42A5F5';
        var SearchAsset;
        (function(SearchAsset) {
          SearchAsset[(SearchAsset['Equipment'] = 0)] = 'Equipment';
          SearchAsset[(SearchAsset['Part'] = 1)] = 'Part';
          SearchAsset[(SearchAsset['Item'] = 2)] = 'Item';
        })(SearchAsset || (SearchAsset = {}));
        var EventCreateComponent = /** @class */ (function(_super) {
          __extends(EventCreateComponent, _super);
          function EventCreateComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService,
            pageTocService,
            propertiesService,
            _overlayService,
            _formatSelectOption,
            sessionService,
            translateService,
            dynamicAttributesService,
            eventCreateService,
            eventService,
            confirmationService,
            dateService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Write,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService,
                pageTocService
              ) || this;
            _this.propertiesService = propertiesService;
            _this._overlayService = _overlayService;
            _this._formatSelectOption = _formatSelectOption;
            _this.sessionService = sessionService;
            _this.translateService = translateService;
            _this.dynamicAttributesService = dynamicAttributesService;
            _this.eventCreateService = eventCreateService;
            _this.eventService = eventService;
            _this.confirmationService = confirmationService;
            _this.dateService = dateService;
            _this.selectedSearchAsset = 0;
            _this.isDocumentTabVisible = true;
            _this.email = 'email';
            _this.aWPropertiesConstants =
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants'];
            _super.prototype.registerPageTocEntryObservable.call(_this);
            _this.component = EventCreateComponent_1;
            _this.showMeasureChart = false;
            _this.loadTablesHeader();
            _this.initChart();
            _this.initMeasureChart();
            _this.setNavigationLinkList();
            _this.loadPnTypeList();
            _this.componentName =
              _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_13__[
                'ComponentConstants'
              ].FLE_EVENT_CREATE;
            _this.userWorkflowSubject.subscribe(function(userWorkflow) {
              _this.updateWorkflowStatusList();
            });
            return _this;
          }
          EventCreateComponent_1 = EventCreateComponent;
          EventCreateComponent.prototype.getComponentName = function() {
            return _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_13__['ComponentConstants']
              .FLE_EVENT_CREATE;
          };
          EventCreateComponent.prototype.ngOnInit = function() {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            this.specificSNVisibility = this.sessionService.isSpecificSAE;
            this.bidoNotificationDTO = {
              bidoNotificationTypeDTO: {}
            };
            this.bidoEquipmentDTO = {};
            this.evolutionSourceMap = new Map();
            this.evolutionSourceMap.set(
              _shared_constants_bido_evolution_constants__WEBPACK_IMPORTED_MODULE_10__['BidoEvolutionConstants']
                .CODE_EVOLUTION,
              'Configuration SB'
            );
            this.evolutionSourceMap.set(
              _shared_constants_bido_evolution_constants__WEBPACK_IMPORTED_MODULE_10__['BidoEvolutionConstants']
                .CODE_SB,
              'Other SB'
            );
            this.evolutionSourceMap.set(
              _shared_constants_bido_evolution_constants__WEBPACK_IMPORTED_MODULE_10__['BidoEvolutionConstants']
                .CODE_AD,
              'AD (Airworthiness Directive)'
            );
            this.evolutionSourceMap.set(
              _shared_constants_bido_evolution_constants__WEBPACK_IMPORTED_MODULE_10__['BidoEvolutionConstants']
                .CODE_MODIFICATION,
              'Modification'
            );
            if (!!this.componentData) {
              this.updateOpenMode(this.componentData.openMode);
              if (!this.isCreateOpenMode && this.componentData.objectId) {
                this.bidoNotificationDTO.notificationCode = this.serializationService
                  .deserialize(this.componentData.objectId)
                  .notificationCode.trim();
                this.componentSubtitle = this.bidoNotificationDTO.notificationCode;
                this.displayComponentContext(this.bidoNotificationDTO.notificationCode, this.isCreateOpenMode);
                this.init(function() {
                  _this.getBidoNotificationData();
                });
              } else {
                this.loadUserWorkflow(undefined);
                if (!!this.componentData.objectId) {
                  this.init(function() {
                    if (!!_this.componentData && !!_this.componentData.objectId) {
                      _this.bidoNotificationDTO.equipmentCode = _this.serializationService.deserialize(
                        _this.componentData.objectId
                      ).equipmentCode;
                      if (!!_this.bidoNotificationDTO && !!_this.bidoNotificationDTO.equipmentCode) {
                        _this.getBidoEquipmentWithRepresentation(_this.bidoNotificationDTO.equipmentCode);
                      }
                    }
                    if (!!_this.componentData && !!_this.componentData.objectId) {
                      _this.bidoNotificationDTO.notNotificationCode = _this.serializationService.deserialize(
                        _this.componentData.objectId
                      ).notNotificationCode;
                      _this.componentSubtitle = _this.bidoNotificationDTO.notNotificationCode;
                      _this.displayComponentContext(
                        _this.bidoNotificationDTO.notNotificationCode,
                        _this.isCreateOpenMode
                      );
                    }
                    if (
                      !!_this.componentData &&
                      !!_this.componentData.objectId &&
                      !!_this.bidoNotificationDTO.bidoNotificationTypeDTO
                    ) {
                      _this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory = _this.serializationService.deserialize(
                        _this.componentData.objectId
                      ).bidoNotificationTypeDTO.typeCategory;
                    }
                    if (!!_this.componentData && !!_this.componentData.objectId) {
                      _this.bidoNotificationDTO.bidoEquipmentDTO = _this.serializationService.deserialize(
                        _this.componentData.objectId
                      ).bidoEquipmentDTO;
                    }
                    _this.getTypeMap(function() {
                      // TODO
                    });
                  });
                } else {
                  this.displayComponentContext('tab.createMode', this.isCreateOpenMode);
                  this.init(function() {
                    // TODO
                  });
                }
              }
            }
            // Lang change events
            this.translateService.onLangChange.subscribe(function(_) {
              // Reset the right attribute name regarding the langage
              _this.dynamicAttributesForEvent = _this.dynamicAttributesService.from(_this.bireAttributesForEvent);
              _this.hDynamicAttributesForEvent = _this.dynamicAttributesService.from(_this.bireAttributesForEvent);
            });
            this.toc = [
              {
                id: 'mainInfoAnchor',
                anchor: this.mainInfoAnchor,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                    ? 'Main Information'
                    : 'Informations principales'
              }
            ];
            setTimeout(function() {
              _super.prototype.selectPageTocEntry.call(_this, _this.component.MAIN_ANCHOR_ID);
            });
          };
          /*************************************************************************
           * Init Screen
           *************************************************************************/
          EventCreateComponent.prototype.init = function(callback) {
            this.eventCauseMap = [];
            this.categoryMap = [];
            this.eventPriorityMap = [];
            this.countryMap = [];
            this.countryZoneMap = [];
            this.zoneMap = [];
            this.eventTypeMap = [];
            this.searchAssetList = [];
            this.statusMap = [];
            this.flCodeList = [];
            this.pnTypeList = [];
            this.dynamicAttributesForEvent = [];
            this.hDynamicAttributesForEvent = [];
            this.shopTechnicalLevelMap = [];
            this.shopNameMap = [];
            this.propertyOperationalStatus = [];
            this.documentsAdded = [];
            this.documentsRemoved = [];
            this.documentsUpdated = [];
            this.documentTypes = [];
            this.defectNameMap = [];
            this.locationMap = [];
            this.eventLocationMap = [];
            this.measureTypes = [];
            this.eventAtaCode = {};
            this.familyVariantEquipmentCode = '';
            this.contextTabData = {
              bidoParameterCustomTableDTOList: []
            };
            this.symptomAdded = [];
            this.addedContextParam = [];
            this.componentSubtitle = '';
            this.addedSymptomParam = [];
            this.showSymptomHeader = false;
            this.showContextHeader = false;
            this.showSymptomParamHeader = false;
            this.selectedMeasureType = 'ALL';
            this.bidoNotificationDTO.reportingPeriodStartDate = new Date();
            this.notificationEvolutionDTO = {};
            this.updatesKeyMap = new Map();
            this.flightTypes = [
              { label: 'TSN', value: 'TSN' },
              { label: 'CSN', value: 'CSN' }
            ];
            this.eventReasonMap = [];
            this.systemIdMap = [];
            this.initDropdowns(function() {
              if (!!callback) {
                callback();
              }
            });
            this.setSearchAssetList();
            this.initEvolutionTableData();
            this.setConstants();
          };
          /*************************************************************************
           * Render table headers
           *************************************************************************/
          EventCreateComponent.prototype.loadTablesHeader = function() {
            this.bidoMeasuresDisplayedDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_6__[
              'TableDataSource'
            ]({
              allowMultiSelect: true,
              columns: [
                { field: 'counterCode', translateKey: this.getTranslateKey('counterCode') },
                { field: 'cumulatedCounterValue', translateKey: this.getTranslateKey('cumulatedCounterValue') },
                { field: 'counterUnit', translateKey: this.getTranslateKey('counterUnit') },
                { field: 'remainingValue', translateKey: this.getTranslateKey('remainingValue') },
                { field: 'referenceValue', translateKey: this.getTranslateKey('referenceValue') },
                { field: 'source', translateKey: this.getTranslateKey('source') }
              ],
              data: []
            });
            this.arisingEventTableDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_6__[
              'TableDataSource'
            ]({
              allowMultiSelect: true,
              columns: [
                { field: 'notificationCode', translateKey: this.getTranslateKey('notificationCode') },
                { field: 'asset', translateKey: this.getTranslateKey('asset') },
                { field: 'eventType', translateKey: this.getTranslateKey('eventType') },
                { field: 'notificationSubject', translateKey: this.getTranslateKey('notificationSubject') },
                { field: 'reportingPeriodStartDate', translateKey: this.getTranslateKey('reportingPeriodStartDate') },
                { field: 'reportingDate', translateKey: this.getTranslateKey('reportingDate') },
                { field: 'reportingPeriodEndDate', translateKey: this.getTranslateKey('reportingPeriodEndDate') }
              ],
              data: []
            });
            this.diffusionTableDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_6__[
              'TableDataSource'
            ]({
              allowMultiSelect: true,
              columns: [
                { field: 'customerCode', translateKey: this.getTranslateKey('customerCode') },
                { field: 'customerName', translateKey: this.getTranslateKey('customerName') },
                { field: 'contactName', translateKey: this.getTranslateKey('contactName') },
                { field: 'email', translateKey: this.getTranslateKey('email') }
              ],
              data: []
            });
            this.bireDocumentDisplayedDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_6__[
              'TableDataSource'
            ]({
              allowMultiSelect: true,
              columns: [
                { field: 'docName', translateKey: this.getTranslateKey('docName'), width: '47.5%' },
                { field: 'docCategory', translateKey: this.getTranslateKey('docCategory'), width: '12.5%' },
                { field: 'docExtension', translateKey: this.getTranslateKey('docExtension'), width: '12.5%' },
                { field: 'docSize', translateKey: this.getTranslateKey('docSize'), width: '12.5%' },
                { field: 'docPublicationDate', translateKey: this.getTranslateKey('docPublicationDate'), width: '15%' }
              ],
              data: []
            });
            this.contextTableDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_6__[
              'TableDataSource'
            ]({
              allowMultiSelect: false,
              columns: [
                { field: 'name', translateKey: this.getTranslateKey('name') },
                { field: 'unit', translateKey: this.getTranslateKey('unit') },
                { field: 'value', translateKey: this.getTranslateKey('value') }
              ],
              data: []
            });
            this.symptomParameterTableDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_6__[
              'TableDataSource'
            ]({
              allowMultiSelect: false,
              columns: [
                { field: 'name', translateKey: this.getTranslateKey('name') },
                { field: 'unit', translateKey: this.getTranslateKey('unit') },
                { field: 'value', translateKey: this.getTranslateKey('value') }
              ],
              data: []
            });
            this.symptomRowDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_6__[
              'TableDataSource'
            ]({
              allowMultiSelect: false,
              columns: [
                { field: 'symptomName', translateKey: this.getTranslateKey('symptomName') },
                { field: 'symptomComment', translateKey: this.getTranslateKey('symptomComment') }
              ],
              data: []
            });
          };
          /*************************************************************************
           * Gets event screen data for particular notidification code
           *************************************************************************/
          EventCreateComponent.prototype.getBidoNotificationData = function() {
            var _this = this;
            if (!!this.bidoNotificationDTO.notificationCode) {
              var timer_1 = 300;
              var bidoNotificationDTOId = {
                notificationCode: this.bidoNotificationDTO.notificationCode
              };
              this.eventCreateService.findBidoNotification(bidoNotificationDTOId).subscribe(function(res) {
                _this.bidoNotificationDTO = {
                  bidoNotificationTypeDTO: {}
                };
                _this.bidoNotificationDTO = __assign({}, res);
                _this.loadUserWorkflow(_this.bidoNotificationDTO.status);
                if (!!_this.bidoNotificationDTO && !!_this.bidoNotificationDTO.notificationCode) {
                  var eventId = {
                    notificationCode: _this.bidoNotificationDTO.notificationCode
                  };
                  _this.componentData.objectId = _this.serializationService.serialize(eventId);
                  // Component Subtitle
                  _this.componentSubtitle = res.notificationCode;
                  _this.displayComponentContext(_this.componentSubtitle, _this.isCreateOpenMode);
                }
                _this.selectedType = undefined;
                _this.getTypeMap(function() {
                  setTimeout(function() {
                    _this.selectedType = res.bidoNotificationTypeDTO.typeCode;
                    _this.bidoNotificationDTO.status = res.status;
                    _this.searchEquipments();
                    _this.searchTask();
                    if (_this.bidoNotificationDTO.status === '4-clo') {
                      _this.isFieldEnabled = true;
                    }
                    _this.setPriorityField();
                    _this.getEvent();
                    _this.getBidoEquipment();
                    _this.findBireAttributesByCategory();
                    _this.loadDefect();
                    _this.hasFMDNotClosedFun();
                    _this.getStatusVal();
                    // this.reopenButtonVisibility();
                    _this.setWorkOrderVisibility();
                  }, timer_1);
                });
              });
            }
          };
          /*************************************************************************
           * Screen Operations
           *************************************************************************/
          EventCreateComponent.prototype.cancelEvent = function() {
            var _this = this;
            this.updateOpenMode(
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
            );
            this.clearErrors();
            // this.getBidoNotificationData();
            this.init(function() {
              _this.getBidoNotificationData();
              _this.fillAttibuteDropdown();
              if (_this.isReopenEnabled) {
                _this.isReopenEnabled = !_this.isReopenEnabled;
              }
            });
          };
          EventCreateComponent.prototype.editEvent = function() {
            this.updateOpenMode(
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Write
            );
            this.reopenButtonVisibility();
          };
          EventCreateComponent.prototype.reloadEvent = function() {
            var _this = this;
            this.init(function() {
              _this.getBidoNotificationData();
            });
          };
          EventCreateComponent.prototype.resetRootCauseFields = function() {
            this.defectAssetCode = undefined;
            this.defectEquipmentSn = undefined;
            this.defectEquipmentPn = undefined;
            this.defectEquipmentName = undefined;
            this.rootCausePn = undefined;
            this.rootCauseQuantity = undefined;
            this.eventAtaCode = {};
            this.rootCauseFlCode = undefined;
            this.selectedDefectName = undefined;
            this.selectedDefectLocation = undefined;
            this.rootCauseComment = undefined;
            this.isDefectBlockVisible();
            this.bidoNotificationDTO.bidoRootCauseDTO = {};
          };
          EventCreateComponent.prototype.reopenButtonVisibility = function() {
            if (
              !!this.bidoNotificationDTO.status &&
              this.bidoNotificationDTO.status ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_CLOSED_KEY
            ) {
              if (this.isStatusEnabled()) {
                if (this.selectedType !== 'ACRS') {
                  // Reopen not shown in acrs
                  this.isReopenEnabled = true;
                  this.updateOpenMode(
                    _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
                  );
                }
              } else if (this.selectedType === 'ACRS') {
                // Reopen not shown in acrs
                this.isReopenEnabled = false;
              } else if (this.isWorkPostponmentTabVisible && !!this.workPostponmentRefusalReason) {
                this.isReopenEnabled = true;
                this.updateOpenMode(
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
                );
              }
            }
          };
          EventCreateComponent.prototype.reopenEvent = function() {
            if (
              !!this.bidoNotificationDTO.status &&
              this.bidoNotificationDTO.status ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_CLOSED_KEY
            ) {
              // The reopening of an Event leads to the positioning of the value of the Status a UNDER INVESTIGATION
              this.bidoNotificationDTO.status =
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__[
                  'AWPropertiesConstants'
                ].EVENT_STATUS_UNDER_INVESTIGATION_KEY;
              this.isReopenEnabled = false;
            }
            if (this.selectedType === EventCreateComponent_1.WPR_TYPE_CODE) {
              this.bidoNotificationDTO.status =
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__[
                  'AWPropertiesConstants'
                ].EVENT_STATUS_UNDER_ANALYSIS_KEY;
            }
            this.updateOpenMode(
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Write
            );
            // TODO: onActionReopenEvent() WDP: 12398
          };
          EventCreateComponent.prototype.isTabPresentAlready = function(id) {
            var isPresent = false;
            this.toc.forEach(function(tab) {
              if (tab.id === id) {
                isPresent = true;
              }
            });
            return isPresent;
          };
          EventCreateComponent.prototype.isAircraft = function() {
            if (
              !!this.bidoEquipmentDTO &&
              !!this.bidoEquipmentDTO.currentBidoEquipmentData &&
              !!this.bidoEquipmentDTO.currentBidoEquipmentData.equipmentFunction &&
              this.bidoEquipmentDTO.currentBidoEquipmentData.equipmentFunction ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_AIRCRAFT_KEY
            ) {
              return true;
            }
            return false;
          };
          EventCreateComponent.prototype.isEngine = function() {
            if (
              this.bidoEquipmentDTO.equipmentFunction ===
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                .FAMILY_FUNCTION_ENGINE_KEY
            ) {
              return true;
            }
            return false;
          };
          EventCreateComponent.prototype.openXLSFormat = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.notificationCode) {
              this.eventCreateService
                .openXLSFormat(this.bidoNotificationDTO.notificationCode)
                .subscribe(function(result) {
                  _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].downloadFile(
                    result.fileContent,
                    result.fileName
                  );
                });
            }
          };
          EventCreateComponent.prototype.searchEquipments = function() {
            var _this = this;
            if (!!this.bidoNotificationDTO.taskAssetCode) {
              var bidoEquipmentDTOId = {
                equipmentCode: this.bidoNotificationDTO.taskAssetCode
              };
              this.eventCreateService.findBidoEquipment(bidoEquipmentDTOId).subscribe(function(res) {
                _this.bidoNotificationDTO.taskAssetCode = res.equipmentCode;
                _this.selectedAssetPN = res.pnCode;
                _this.selectedAssetSN = res.sn;
                _this.selectedAssetName = res.equipmentCode;
                _this.selectedAssetDesignation = res.equipmentDesignation;
              });
            }
            if (!!this.bidoNotificationDTO.fieldNewValue) {
              var bidoEquipmentDTOId_1 = {
                equipmentCode: this.bidoNotificationDTO.fieldNewValue
              };
              this.eventCreateService.findBidoEquipment(bidoEquipmentDTOId_1).subscribe(function(res) {
                if (res) {
                  _this.assetDesignation = res.equipmentDesignation;
                  _this.fetchEquipmentName(bidoEquipmentDTOId_1.equipmentCode, function(name) {
                    _this.assetName = !!name ? name : undefined;
                  });
                }
              });
            }
            if (!!this.bidoNotificationDTO.fieldOldValue) {
              var bidoEquipmentDTOId_2 = {
                equipmentCode: this.bidoNotificationDTO.fieldOldValue
              };
              this.eventCreateService.findBidoEquipment(bidoEquipmentDTOId_2).subscribe(function(res) {
                if (res) {
                  _this.oldDesignation = res.equipmentDesignation;
                  _this.fetchEquipmentName(bidoEquipmentDTOId_2.equipmentCode, function(name) {
                    _this.oldAssetName = !!name ? name : undefined;
                  });
                }
              });
            }
            if (!!this.defectAssetCode) {
              var bidoEquipmentDTOId_3 = {
                equipmentCode: this.defectAssetCode
              };
              this.eventCreateService.findBidoEquipment(bidoEquipmentDTOId_3).subscribe(function(res) {
                if (res) {
                  _this.defectEquipmentPn = res.pnCode;
                  _this.defectEquipmentSn = res.sn;
                  _this.fetchEquipmentName(bidoEquipmentDTOId_3.equipmentCode, function(name) {
                    _this.defectEquipmentName = !!name ? name : undefined;
                  });
                }
              });
            }
          };
          EventCreateComponent.prototype.setPriorityField = function() {
            switch (this.selectedType) {
              case 'BSD': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'MS': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'OB': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'HL': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'IBR': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'Misc Failures': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'NTCAN': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'NTDEL': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'OP22': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'OP21': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'OP20': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'STJ': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              case 'UM': {
                this.bidoNotificationDTO.priority = '2-nsi';
                break;
              }
              default: {
                this.bidoNotificationDTO.priority = '1-sig';
                break;
              }
            }
          };
          /*************************************************************************
           * Fetch dropdown lists
           *************************************************************************/
          EventCreateComponent.prototype.initDropdowns = function(callback) {
            var _this = this;
            var indexThree = 3;
            var indexFour = 4;
            var indexFive = 5;
            var indexSix = 6;
            var eventMap = this.propertiesService.getValue('getEventCauseMap');
            var categoryMap = this.propertiesService.getValue('getEventCategoryMap');
            var status = this.propertiesService.getValue('getEventStatusMap');
            var priority = this.propertiesService.getValue('getEventPriorityMap');
            var removal = this.propertiesService.getValue('getRemovalReasonMap');
            var defectName = this.propertiesService.getValue('getDefectNameMap');
            var defectLocation = this.propertiesService.getValue('getDefectLocationMap');
            this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory = undefined;
            this.bidoNotificationDTO.status = undefined;
            Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['forkJoin'])([
              eventMap,
              categoryMap,
              status,
              priority,
              removal,
              defectName,
              defectLocation
            ]).subscribe(function(results) {
              _this.eventCauseMap = results[0];
              _this.statusMap = results[2];
              if (_this.isCreateOpenMode) {
                _this.bidoNotificationDTO.status = '1-dra';
                _this.disableStatus = true;
              }
              _this.categoryMap = results[1].filter(function(category) {
                return (
                  category.value !==
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_CATEGORY_LOGISTICAL_KEY
                );
              });
              _this.eventPriorityMap = results[indexThree];
              _this.eventReasonMap = results[indexFour];
              _this.defectNameMap = results[indexFive];
              _this.locationMap = results[indexSix];
              if (!_this.componentData) {
                if (!!_this.bidoNotificationDTO && !!_this.bidoNotificationDTO.bidoNotificationTypeDTO) {
                  _this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory = _this.categoryMap[0].label;
                }
              }
              _this.eventCreateService.getOperationalStatusMap().subscribe(
                function(res) {
                  _this.propertyOperationalStatus = res;
                },
                function() {
                  _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnGetOperationalStatus'));
                }
              );
              _this.getCountryZoneDropdownMap();
              if (!!callback) {
                callback();
              }
            });
            // Load counter labels
            var observablesCounterLabel = [
              this.eventCreateService.getCsnLabelForAirworthinessControl(),
              this.eventCreateService.getTsnLabelForAirworthinessControl()
            ];
            Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['forkJoin'])(observablesCounterLabel).subscribe(function(_a) {
              var _b = __read(_a, 2),
                cycleBireMeasureReferenceLabel = _b[0],
                timeBireMeasureReferenceLabel = _b[1];
              _this.csnLabel = cycleBireMeasureReferenceLabel;
              _this.tsnLabel = timeBireMeasureReferenceLabel;
              _this.measureTypes = [
                { label: 'ALL', value: 'ALL' },
                { label: _this.tsnLabel, value: _this.tsnLabel },
                { label: _this.csnLabel, value: _this.csnLabel }
              ];
            });
            this.loadDocumentTypes();
            this.loadCircumstancesDropdown();
            this.fillAttibuteDropdown();
          };
          EventCreateComponent.prototype.updateWorkflowStatusList = function() {
            this.workflowStatus = _shared_utils_workflow_utils__WEBPACK_IMPORTED_MODULE_38__[
              'WorkflowUtils'
            ].filterWorkflowStatusList(
              this.userWorkflow,
              this.statusMap,
              this.bidoNotificationDTO ? this.bidoNotificationDTO.status : undefined
            );
          };
          EventCreateComponent.prototype.getCountryZoneDropdownMap = function() {
            var _this = this;
            // Country Zone map
            this.propertiesService.getValue('getCountryZoneMap').subscribe(function(results) {
              _this.zoneMap = [];
              _this.countryMap = [];
              _this.countryZoneMap = results;
              _this.countryMap = _this.getListOfAllCountries();
              results.forEach(function(dto) {
                var isFound = false;
                _this.zoneMap.filter(function(res) {
                  if (res.label === dto.label.split(';')[1]) {
                    isFound = true;
                  }
                });
                if (!isFound) {
                  _this.zoneMap.push({
                    label: dto.label.split(';')[1],
                    value: dto.label.split(';')[1]
                  });
                }
              });
            });
          };
          EventCreateComponent.prototype.getListOfAllCountries = function() {
            var countryMap = [];
            this.countryZoneMap.forEach(function(dto) {
              countryMap.push({
                label: dto.label.split(';')[0],
                value: dto.value
              });
            });
            return countryMap;
          };
          EventCreateComponent.prototype.getCountries = function() {
            var _this = this;
            this.countryMap = [];
            this.bidoNotificationDTO.country = undefined;
            this.countryZoneMap.forEach(function(dto) {
              if (!!_this.bidoNotificationDTO.zone && dto.label.split(';')[1] === _this.bidoNotificationDTO.zone) {
                _this.countryMap.push({
                  label: dto.label.split(';')[0],
                  value: dto.value
                });
              } else if (!_this.bidoNotificationDTO.zone) {
                _this.countryMap.push({
                  label: dto.label.split(';')[0],
                  value: dto.value
                });
              }
            });
          };
          EventCreateComponent.prototype.getTypeMap = function(callback) {
            var _this = this;
            this.eventTypeMap = [];
            this.selectedType = undefined;
            var event;
            if (
              !!this.bidoNotificationDTO &&
              !!this.bidoNotificationDTO.bidoNotificationTypeDTO &&
              !!this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
            ) {
              event = !!this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
                ? this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
                : '1-ope';
              // Event Type Map
              this.eventCreateService.findAllBidoNotificationTypeByTypeCategory(event).subscribe(function(res) {
                res.forEach(function(dto) {
                  if (!!dto && !!dto.typeDescription && !!dto.typeCode) {
                    if (_this.isCreateOpenMode && dto.typeCode === EventCreateComponent_1.WPR_TYPE_CODE) {
                      // Skipping Work Postponment in creation mod
                    } else {
                      _this.eventTypeMap.push({
                        label: dto.typeDescription,
                        value: dto.typeCode
                      });
                    }
                    if (
                      _this.isCreateOpenMode &&
                      _this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory === '5-def'
                    ) {
                      // this.selectedType = 'TECHLOG';
                      _this.selectedType = 'MISC';
                    }
                  }
                });
                if (!!callback) {
                  callback();
                }
              });
            }
          };
          EventCreateComponent.prototype.loadDocumentTypes = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_15__['GenericPropertyConstants']
                  .DOC_ASSET_CATEGORY_MAP
              )
              .subscribe(function(results) {
                _this.documentTypes = !!results ? results : [];
              });
          };
          EventCreateComponent.prototype.getLabel = function(val, itemList) {
            var value;
            value = itemList.filter(function(res) {
              return res.value === val;
            });
            return value.length > 0 ? value[0].label : val;
          };
          EventCreateComponent.prototype.loadCircumstancesDropdown = function() {
            var _this = this;
            // Load dropdowns
            var observables = [
              this.eventCreateService.findAllBidoExtensionList('C'),
              this.eventCreateService.findAllBidoExtensionList('S'),
              this.propertiesService.getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_15__['GenericPropertyConstants']
                  .EVENT_MISSION_TYPE_MAP
              )
            ];
            Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['forkJoin'])(observables).subscribe(function(_a) {
              var _b = __read(_a, 3),
                contextMap = _b[0],
                symptomMap = _b[1],
                missionMap = _b[2];
              _this.contextNameMap = contextMap;
              _this.symptomNameMap = symptomMap;
              _this.contextMissionMap = missionMap;
            });
          };
          EventCreateComponent.prototype.loadCustomerOperatorName = function() {
            var _this = this;
            if (!!this.bidoEquipmentDTO) {
              if (!!this.bidoEquipmentDTO.ownerCustomerCode) {
                this.eventService
                  .findBidoCustomer({ customerCode: this.bidoEquipmentDTO.ownerCustomerCode })
                  .subscribe(function(customer) {
                    _this.bidoEquipmentDTO.ownerCustomerCode =
                      _this.bidoEquipmentDTO.ownerCustomerCode +
                      ' (' +
                      _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].orEmpty(
                        customer.customerName
                      ) +
                      ')';
                  });
              }
              if (!!this.bidoEquipmentDTO.operatorCustomerCode) {
                this.eventService
                  .findBidoCustomer({ customerCode: this.bidoEquipmentDTO.operatorCustomerCode })
                  .subscribe(function(customer) {
                    _this.bidoEquipmentDTO.operatorCustomerCode =
                      _this.bidoEquipmentDTO.operatorCustomerCode +
                      ' (' +
                      _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__['StringUtils'].orEmpty(
                        customer.customerName
                      ) +
                      ')';
                  });
              }
            }
          };
          /*************************************************************************
           * Fetch Attribute data and operations related
           *************************************************************************/
          EventCreateComponent.prototype.fillAttibuteDropdown = function() {
            var _this = this;
            if (this.specificSNVisibility) {
              var attribute = {
                attributeId: '141'
              };
              this.eventService.findBidoAttribute(attribute).subscribe(function(res) {
                _this.shopTechnicalLevelMap = [];
                if (!!res && !!res.bidoAttributeValueDatas) {
                  res.bidoAttributeValueDatas.forEach(function(resp) {
                    _this.shopTechnicalLevelMap.push({
                      label: resp.textEn,
                      value: resp.attributeValue
                    });
                  });
                }
              });
              var attribute1 = {
                attributeId: '140'
              };
              this.eventService.findBidoAttribute(attribute1).subscribe(function(res) {
                _this.shopNameMap = [];
                if (!!res && !!res.bidoAttributeValueDatas) {
                  res.bidoAttributeValueDatas.forEach(function(resp) {
                    _this.shopNameMap.push({
                      label: resp.textEn,
                      value: resp.attributeValue
                    });
                  });
                }
              });
            }
            var attribute2 = {
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_SYSTEM_SOURCE_ID.toString()
            };
            this.eventService.findBidoAttribute(attribute2).subscribe(function(res) {
              _this.systemIdMap = [];
              if (!!res && !!res.bidoAttributeValueDatas) {
                res.bidoAttributeValueDatas.forEach(function(resp) {
                  _this.systemIdMap.push({
                    label: resp.textEn,
                    value: resp.attributeValue
                  });
                });
              }
            });
            var attribute3 = {
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_LOCATION.toString()
            };
            this.eventService.findBidoAttribute(attribute3).subscribe(function(res) {
              _this.eventLocationMap = [];
              if (!!res && !!res.bidoAttributeValueDatas) {
                res.bidoAttributeValueDatas.forEach(function(resp) {
                  _this.eventLocationMap.push({
                    label: resp.textEn,
                    value: resp.attributeValue
                  });
                });
              }
            });
          };
          EventCreateComponent.prototype.findAllBidoNotificationAttributeByNotificationCode = function() {
            var _this = this;
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.notificationCode) {
              var bidoNotificationDTOId = {
                notificationCode: this.bidoNotificationDTO.notificationCode
              };
              this.eventCreateService
                .findAllBidoNotificationAttributeByNotificationCode(bidoNotificationDTOId)
                .subscribe(
                  function(results) {
                    _this.bireNotificationAttributes = results;
                    results.forEach(function(res) {
                      if (!!res.attributeValue) {
                        if (res.attributeId === '9') {
                          setTimeout(function() {
                            if (!!res.attributeValue) {
                              _this.selectedSystemId = res.attributeValue;
                            }
                          }, EventCreateComponent_1.TIMEOUT_LIMIT);
                        }
                        if (res.attributeId === '10') {
                          _this.systemReference = res.attributeValue;
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].EVENT_WORK_POSTPONEMENT_REQUEST_AUTHOR.toString()
                        ) {
                          _this.requestAuthorTxt = res.attributeValue;
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].EVENT_WORK_POSTPONEMENT_REQUEST_WO_CONTEXT.toString()
                        ) {
                          _this.postponmentRelatedWO = res.attributeValue;
                          _this.findProjectId();
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].MAINTENANCE_PLAN_ORIGINAL_DEADLINES.toString()
                        ) {
                          _this.originalDeadlines = res.attributeValue;
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].IGNORE_INITIAL_DEADLINE_NEXT_OCCURRENCE_CALCULATION.toString()
                        ) {
                          _this.isIgnoreInitialDeadlines = res.attributeValue === 'true' ? true : false;
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].EVENT_WORK_POSTPONEMENT_REQUEST_DECISION_LAST_AUTHOR.toString()
                        ) {
                          _this.requestDecisionAuthorTxt = res.attributeValue;
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].EVENT_WORK_POSTPONEMENT_REQUEST_AUTHORIZATION_NUMBER.toString()
                        ) {
                          _this.postponementAuthorizationNum = res.attributeValue;
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].EVENT_WORK_POSTPONEMENT_REQUEST_LIMIT_DATE.toString()
                        ) {
                          _this.postponementNewLimitDate = new Date(res.attributeValue);
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].EVENT_WORK_POSTPONEMENT_REQUEST_FLIGHT_RESTRICTIONS.toString()
                        ) {
                          _this.flightRestriction = res.attributeValue;
                        }
                        if (_this.specificSNVisibility) {
                          // Shop
                          if (res.attributeId === '140') {
                            setTimeout(function() {
                              if (!!res.attributeValue) {
                                _this.shopName = res.attributeValue;
                              }
                            }, EventCreateComponent_1.TIMEOUT_LIMIT);
                          }
                          // Shop technical level
                          if (res.attributeId === '141') {
                            setTimeout(function() {
                              if (!!res.attributeValue) {
                                _this.shopTechnicalLevel = res.attributeValue;
                              }
                            }, EventCreateComponent_1.TIMEOUT_LIMIT);
                          }
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].EVENT_WORK_POSTPONEMENT_REQUEST_REFUSAL_REASON.toString()
                        ) {
                          _this.workPostponmentRefusalReason = res.attributeValue;
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].EVENT_WORK_POSTPONEMENT_REQUEST_DECISION_LAST_AUTHOR.toString()
                        ) {
                          _this.workPostponmentDecisionAuthor = res.attributeValue;
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].EVENT_LOCATION.toString()
                        ) {
                          _this.location = res.attributeValue;
                        }
                        if (
                          res.attributeId ===
                          _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                            'BidoAttributeConstants'
                          ].EVENT_WORK_ORDER_SOURCE.toString()
                        ) {
                          _this.woCode = res.attributeValue;
                          if (
                            !!res.attributeValue &&
                            (_shared_constants_bido_notification_type_constants__WEBPACK_IMPORTED_MODULE_12__[
                              'BidoNotificationTypeConstants'
                            ].TASK_APPLIED_TYPE_CODE === _this.bidoNotificationDTO.typeCode ||
                              _shared_constants_bido_notification_type_constants__WEBPACK_IMPORTED_MODULE_12__[
                                'BidoNotificationTypeConstants'
                              ].EVOLUTION_APPLIED_TYPE_CODE === _this.bidoNotificationDTO.typeCode)
                          ) {
                            _this.eventCreateService.getWorkOrderForEvent(res.attributeValue).subscribe(function(code) {
                              _this.woCode = code;
                            });
                          }
                        }
                      }
                    });
                    _this.dynamicAttributesService.setValues(
                      _this.dynamicAttributesForEvent,
                      _this.bireNotificationAttributes
                    );
                  },
                  function() {
                    _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnFindAttributesByEvent'));
                  }
                );
            }
          };
          EventCreateComponent.prototype.findProjectId = function() {
            var _this = this;
            this.eventCreateService
              .findBidmWorkOrderByMandantAndWoCode(this.postponmentRelatedWO)
              .subscribe(function(data) {
                _this.workOrder = data;
              });
          };
          EventCreateComponent.prototype.findBireAttributesByCategory = function() {
            var _this = this;
            this.bireAttributesForEvent = [];
            this.eventCreateService
              .findBidoAttributesByAttributeCategory(
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FM_ATTRIBUTE_CATEGORY_ALL_KEY
              )
              .subscribe(function(resultsAll) {
                _this.eventCreateService
                  .findBidoAttributesByAttributeCategory(
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .FM_ATTRIBUTE_CATEGORY_EVENT_KEY
                  )
                  .subscribe(function(results) {
                    var attributeArr = __spread(results, resultsAll);
                    attributeArr.forEach(function(attri) {
                      if (
                        attri.attributeId !== '9' &&
                        attri.attributeId !== '10' &&
                        attri.attributeId !== '34' &&
                        attri.attributeId !== '29' &&
                        attri.attributeId !== '28' &&
                        attri.attributeId !== '33' &&
                        attri.attributeId !== '35' &&
                        attri.attributeId !== '30' &&
                        attri.attributeId !== '31' &&
                        attri.attributeId !== '32' &&
                        attri.attributeId !== '11' &&
                        attri.attributeId !== '40'
                      ) {
                        _this.bireAttributesForEvent.push(attri);
                      }
                    });
                    setTimeout(function() {
                      _this.dynamicAttributesForEvent = _this.dynamicAttributesService.from(
                        _this.bireAttributesForEvent
                      );
                      _this.hDynamicAttributesForEvent = _this.getHistoryArributeArray(attributeArr);
                      _this.findAllBidoNotificationAttributeByNotificationCode();
                    });
                  });
              });
          };
          EventCreateComponent.prototype.getHistoryArributeArray = function(eventArr) {
            var arr = [];
            if (this.selectedType === EventCreateComponent_1.WPR_TYPE_CODE) {
              arr = eventArr.filter(function(attri) {
                if (
                  // tslint:disable-next-line: prefer-switch
                  attri.attributeId === '29' ||
                  attri.attributeId === '28' ||
                  attri.attributeId === '33' ||
                  attri.attributeId === '35' ||
                  attri.attributeId === '30' ||
                  attri.attributeId === '31' ||
                  attri.attributeId === '32'
                ) {
                  return attri;
                }
              });
            } else {
              arr = eventArr;
            }
            var hDynamicAttributesForEvent = this.dynamicAttributesService.from(arr);
            return hDynamicAttributesForEvent;
          };
          /*************************************************************************
           * Handling tabs and field visibility
           *************************************************************************/
          EventCreateComponent.prototype.handleTabVisibility = function() {
            this.showGeneralTab();
            this.showCircumstanceTab();
            this.showRootCauseTab();
            this.showAssetAtDateTab();
            this.showStructureTab();
            this.showArisingEventTab();
            this.showWorkPostponmentTab();
            this.showWPRRefusalPanel();
            this.showAttributeTab();
            this.showEvolutionTab();
            this.showTaskTab();
            this.showDocumentTab();
            this.showDiffusionTab();
          };
          EventCreateComponent.prototype.showDocumentTab = function() {
            if (this.isDocumentTabVisible && !this.isCreateOpenMode) {
              if (!this.isTabPresentAlready('document')) {
                this.toc.push({
                  id: 'document',
                  anchor: this.document,
                  label:
                    this.translateService.currentLang ===
                    _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                      ? 'Document'
                      : 'Document'
                });
              }
            }
          };
          EventCreateComponent.prototype.showGeneralTab = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              this.isGeneralTabVisible =
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_CATEGORY_MAINTENANCE_KEY &&
                this.bidoNotificationDTO.typeCode === EventCreateComponent_1.WPR_TYPE_CODE
                  ? false
                  : true;
              if (this.isGeneralTabVisible) {
                if (!this.isTabPresentAlready('general')) {
                  this.toc.push({
                    id: 'general',
                    anchor: this.general,
                    label:
                      this.translateService.currentLang ===
                      _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                        ? 'Additional Information'
                        : 'Informations complémentaires'
                  });
                }
              }
            }
          };
          EventCreateComponent.prototype.showRootCauseTab = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              this.isRootCauseTabVisible =
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_OPERATIONAL_KEY;
              if (this.isRootCauseTabVisible) {
                if (!this.isTabPresentAlready('rootCause')) {
                  this.toc.push({
                    id: 'rootCause',
                    anchor: this.rootCause,
                    label:
                      this.translateService.currentLang ===
                      _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                        ? 'Root Cause'
                        : 'Cause racine'
                  });
                }
              }
            }
          };
          EventCreateComponent.prototype.showAssetAtDateTab = function() {
            var _this = this;
            if (
              !!this.bidoNotificationDTO &&
              !!this.bidoNotificationDTO.bidoNotificationTypeDTO &&
              !this.isCreateOpenMode
            ) {
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_MAINTENANCE_KEY
              ) {
                if (this.selectedType === EventCreateComponent_1.WPR_TYPE_CODE) {
                  this.isAssetAtDateTabVisible = false;
                } else if (this.selectedType === 'ACRS') {
                  this.isAssetAtDateTabVisible = false;
                } else {
                  this.isAssetAtDateTabVisible = true;
                }
              } else {
                this.isAssetAtDateTabVisible = true;
              }
              this.eventCreateService.getFunctionLocationLabel(this.bidoNotificationDTO).subscribe(function(res) {
                _this.functionLocationStr = res;
              });
              if (this.isAssetAtDateTabVisible) {
                if (!this.isTabPresentAlready('assetAtDate')) {
                  this.toc.push({
                    id: 'assetAtDate',
                    anchor: this.assetAtDate,
                    label:
                      this.translateService.currentLang ===
                      _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                        ? 'Asset At Date'
                        : 'Individu à date'
                  });
                }
              }
            }
          };
          EventCreateComponent.prototype.showCircumstanceTab = function() {
            this.isCircumstancesTabVisible =
              this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                .EVENT_CATEGORY_OPERATIONAL_KEY;
            if (this.isCircumstancesTabVisible) {
              if (!this.isTabPresentAlready('circumstances')) {
                this.toc.push({
                  id: 'circumstances',
                  anchor: this.circumstances,
                  label:
                    this.translateService.currentLang ===
                    _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                      ? 'Circumstances'
                      : 'Circonstances'
                });
              }
            }
          };
          EventCreateComponent.prototype.showArisingEventTab = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_CATEGORY_MAINTENANCE_KEY &&
                this.bidoNotificationDTO.typeCode === EventCreateComponent_1.WPR_TYPE_CODE
              ) {
                this.isArisingEventTabVisible = false;
                return false;
              }
            }
            if (!this.isTabPresentAlready('arisingEvents')) {
              this.toc.push({
                id: 'arisingEvents',
                anchor: this.arisingEvents,
                label:
                  this.translateService.currentLang ===
                  _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                    ? 'Arising Events'
                    : 'Evènements induits'
              });
            }
            this.isArisingEventTabVisible = true;
            return true;
          };
          EventCreateComponent.prototype.showStructureTab = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_MAINTENANCE_KEY
              ) {
                switch (this.bidoNotificationDTO.typeCode) {
                  case 'AS': {
                    this.isStructureTabVisible = true;
                    break;
                  }
                  case 'DI': {
                    this.isStructureTabVisible = true;
                    break;
                  }
                  case 'MVI': {
                    this.isStructureTabVisible = true;
                    break;
                  }
                  case 'MVR': {
                    this.isStructureTabVisible = true;
                    break;
                  }
                  default: {
                    this.isStructureTabVisible = false;
                    break;
                  }
                }
                if (this.isStructureTabVisible) {
                  if (!this.isTabPresentAlready('structure')) {
                    this.toc.push({
                      id: 'structure',
                      anchor: this.structure,
                      label:
                        this.translateService.currentLang ===
                        _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                          ? 'Structure'
                          : 'Structure'
                    });
                  }
                }
              }
            }
          };
          EventCreateComponent.prototype.showAttributeTab = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_MAINTENANCE_KEY
              ) {
                if (this.bidoNotificationDTO.typeCode === EventCreateComponent_1.WPR_TYPE_CODE) {
                  this.isAttributeTabVisible = false;
                  return false;
                } else if (this.bidoNotificationDTO.typeCode === 'ACRS') {
                  this.isAttributeTabVisible = false;
                  return false;
                }
              }
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_OPERATIONAL_KEY
              ) {
                if (!this.isTabPresentAlready('attributes')) {
                  this.toc.push({
                    id: 'attributes',
                    anchor: this.attributes,
                    label:
                      this.translateService.currentLang ===
                      _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                        ? 'Attributes'
                        : 'Attributs'
                  });
                }
                this.isAttributeTabVisible = true;
                return true;
              }
            }
            return false;
          };
          EventCreateComponent.prototype.showDiffusionTab = function() {
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                .EVENT_CATEGORY_DEFECT_KEY === this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ||
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                .EVENT_CATEGORY_OPERATIONAL_KEY === this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
            ) {
              this.isDiffusionTabVisible = true;
              if (!this.isTabPresentAlready('diffusion')) {
                this.toc.push({
                  id: 'diffusion',
                  anchor: this.diffusion,
                  label:
                    this.translateService.currentLang ===
                    _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                      ? 'Diffusion'
                      : 'Diffusion'
                });
              }
              return true;
            }
            this.isDiffusionTabVisible = false;
            return false;
          };
          EventCreateComponent.prototype.showWorkPostponmentTab = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_MAINTENANCE_KEY
              ) {
                if (this.bidoNotificationDTO.typeCode === EventCreateComponent_1.WPR_TYPE_CODE) {
                  if (!this.isTabPresentAlready('workPostponment')) {
                    this.toc.push({
                      id: 'workPostponment',
                      anchor: this.workPostponment,
                      label:
                        this.translateService.currentLang ===
                        _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                          ? 'Work Postponent'
                          : 'Report de travail'
                    });
                  }
                  this.isWorkPostponmentTabVisible = true;
                  return true;
                }
              }
            }
            return false;
          };
          EventCreateComponent.prototype.showWPRAcceptationPanel = function() {
            if (!!this.bidoNotificationDTO) {
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_ANALYSIS_KEY === this.bidoNotificationDTO.status ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_INVESTIGATION_KEY === this.bidoNotificationDTO.status ||
                !!this.postponementNewLimitDate ||
                !!this.flightRestriction
              ) {
                return true;
              }
            }
            return false;
          };
          EventCreateComponent.prototype.showWPRRefusalPanel = function() {
            if (!!this.bidoNotificationDTO) {
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_ANALYSIS_KEY === this.bidoNotificationDTO.status ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_INVESTIGATION_KEY === this.bidoNotificationDTO.status ||
                !!this.workPostponmentRefusalReason
              ) {
                return true;
              }
            }
            return false;
          };
          EventCreateComponent.prototype.showEvolutionTab = function() {
            if (
              this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                .EVENT_CATEGORY_CONFIGURATION_KEY
            ) {
              this.isEvolutionTabVisible = true;
              if (!this.isTabPresentAlready('evolution')) {
                this.toc.push({
                  id: 'evolution',
                  anchor: this.evolution,
                  label:
                    this.translateService.currentLang ===
                    _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                      ? 'Evolution'
                      : 'Evolution'
                });
              }
            } else {
              this.isEvolutionTabVisible = false;
            }
          };
          EventCreateComponent.prototype.showTaskTab = function() {
            if (
              this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_MAINTENANCE_KEY &&
              this.selectedType === 'TA'
            ) {
              this.isTaskTabVisible = true;
              if (!this.isTabPresentAlready('task')) {
                this.toc.push({
                  id: 'task',
                  anchor: this.task,
                  label:
                    this.translateService.currentLang ===
                    _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_16__['LangConstants'].ENGLISH_CODE
                      ? 'Task'
                      : 'Tâche'
                });
              }
            }
          };
          /** Fields Visibility Handling */
          EventCreateComponent.prototype.isTypeEditable = function() {
            if (this.isCreateOpenMode) {
              return false;
            }
            if (this.isReadOpenMode) {
              return true;
            }
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_OPERATIONAL_KEY
              ) {
                return false;
              }
            }
            return true;
          };
          EventCreateComponent.prototype.isEventDateEditable = function() {
            if (this.isCreateOpenMode) {
              return false;
            }
            if (this.isReadOpenMode) {
              return true;
            }
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                .EVENT_STATUS_CLOSED_KEY === this.bidoNotificationDTO.status
            ) {
              return true;
            }
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_MAINTENANCE_KEY
              ) {
                if (this.selectedType === 'AS' || this.selectedType === 'DI') {
                  return true;
                }
              }
            }
            return false;
          };
          EventCreateComponent.prototype.isStatusEnabled = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_CONFIGURATION_KEY
              ) {
                return false;
              }
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_LOGISTICAL_KEY
              ) {
                return false;
              }
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_MAINTENANCE_KEY
              ) {
                if (this.selectedType === 'ACRS') {
                  this.disableStatus = true;
                  return true;
                } else {
                  return false;
                }
              }
            }
            if (!this.isCreateOpenMode) {
              this.disableStatus = false;
            }
            return true;
          };
          EventCreateComponent.prototype.isEventReasonVisible = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_CATEGORY_MAINTENANCE_KEY ||
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_CATEGORY_LOGISTICAL_KEY
              ) {
                return true;
              }
            }
            return false;
          };
          EventCreateComponent.prototype.isScheduleVisible = function() {
            return this.selectedType === 'AS' || this.selectedType === 'TA' || this.selectedType === 'DI'
              ? true
              : false;
          };
          EventCreateComponent.prototype.isCriticalityVisible = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_OPERATIONAL_KEY
              ) {
                return true;
              }
            }
            return false;
          };
          EventCreateComponent.prototype.getStatusVal = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_CATEGORY_MAINTENANCE_KEY &&
                (this.selectedType ===
                  _shared_constants_bido_notification_type_constants__WEBPACK_IMPORTED_MODULE_12__[
                    'BidoNotificationTypeConstants'
                  ].ACRS_TYPE_CODE ||
                  this.selectedType ===
                    _shared_constants_bido_notification_type_constants__WEBPACK_IMPORTED_MODULE_12__[
                      'BidoNotificationTypeConstants'
                    ].FORM1_TYPE_CODE)
              ) {
                this.disableStatus = true;
                this.generateACRSFormVisible = true;
              }
              this.savedEventStatus = this.bidoNotificationDTO.status;
            }
          };
          EventCreateComponent.prototype.acrsButtonVisibility = function() {
            if (
              this.selectedType ===
                _shared_constants_bido_notification_type_constants__WEBPACK_IMPORTED_MODULE_12__[
                  'BidoNotificationTypeConstants'
                ].ACRS_TYPE_CODE ||
              this.selectedType ===
                _shared_constants_bido_notification_type_constants__WEBPACK_IMPORTED_MODULE_12__[
                  'BidoNotificationTypeConstants'
                ].FORM1_TYPE_CODE
            ) {
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_CLOSED_KEY !== this.bidoNotificationDTO.status
              ) {
                return true;
              }
            }
            return false;
          };
          /*************************************************************************
           * Fetch screen data
           *************************************************************************/
          EventCreateComponent.prototype.loadScreenData = function() {
            // Measure Tab
            this.loadMeasureTableData();
            // Arising Event Tab
            this.loadArisingEventData();
            // Evolution Tab
            this.loadEvolutionTabData();
            // Get evolution key
            this.getEvolutionKey();
            // DiffusionnTab
            this.loadDiffusionTableData();
            // Documents tab
            this.loadDocumentsTable();
            // Circumstance tab
            this.loadContextTable();
            this.loadSymptomTable();
          };
          /**************************************************************************
           * Evolution Tab Operations
           *************************************************************************/
          EventCreateComponent.prototype.loadEvolutionTabData = function() {
            var _this = this;
            if (this.isEvolutionTabVisible && !!this.bidoNotificationDTO.notificationCode) {
              this.eventCreateService
                .findBidoNotificationEvolutionsByNotificationCode(this.bidoNotificationDTO.notificationCode)
                .subscribe(function(res) {
                  _this.notificationEvolutionDTO = res[0] || {};
                  if (!!_this.notificationEvolutionDTO && !!_this.notificationEvolutionDTO.evolutionType) {
                    _this.evolutionType = _this.evolutionSourceMap.get(_this.notificationEvolutionDTO.evolutionType);
                  }
                });
            }
          };
          EventCreateComponent.prototype.initEvolutionTableData = function() {
            var evolutionTableCols = [
              {
                field: 'evolutionNumber',
                alignment: 'left',
                width: '7.5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'evolutionRevisionNumber',
                alignment: 'left',
                width: '7.5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'evolutionType',
                alignment: 'left',
                width: '7.5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'evolutionLevel',
                alignment: 'left',
                width: '7.5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'evolutionCompliance',
                alignment: 'left',
                width: '7.5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'tracked',
                alignment: 'center',
                width: '5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Tricheckbox
              },
              {
                field: 'evolutionSummary',
                alignment: 'left',
                width: '20rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              }
            ];
            this.evolutionTableData = {
              componentId: 'DialogEvolution',
              tableCols: evolutionTableCols,
              tableRows: this.eventService.findBireEvolutionsByEvolutionCriteria({}, undefined, undefined, undefined),
              dataKey: undefined,
              selectionMode:
                _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_19__['TableSelectionMode'].Single,
              globalFilter: true
            };
          };
          EventCreateComponent.prototype.getEvolutionKey = function() {
            var _this = this;
            if (this.isWorkPostponmentTabVisible) {
              if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.notificationCode) {
                this.eventCreateService
                  .fetchWorkPostponementEvolutionNumber(this.bidoNotificationDTO.notificationCode)
                  .subscribe(function(res) {
                    _this.relatedEvolutionKey = res;
                  });
              }
            }
          };
          /**************************************************************************
           * Root Cause Tab Operations
           *************************************************************************/
          EventCreateComponent.prototype.setConstants = function() {
            var _this = this;
            var defectItem = 'global.ata';
            var defectEquipment = 'global.equipment';
            var defetctFunctionalLocation = 'global.functionalLocation';
            var defectPart = 'global.part';
            this.translateService
              .get([defectItem, defectEquipment, defetctFunctionalLocation, defectPart])
              .subscribe(function(results) {
                if (!!results) {
                  _this.rootCauseList = [
                    {
                      label: results[defectItem],
                      value: 'defectItem'
                    },
                    {
                      label: results[defectEquipment],
                      value: 'defectEquipment'
                    },
                    {
                      label: results[defetctFunctionalLocation],
                      value: 'defetctFunctionalLocation'
                    },
                    {
                      label: results[defectPart],
                      value: 'defectPart'
                    }
                  ];
                }
              });
          };
          EventCreateComponent.prototype.onChangeDefectRootCause = function(newRootCause) {
            this.displayDefectEquipmentBlock = newRootCause === 'defectEquipment';
            this.displayDefectFunctionalLocationBlock = newRootCause === 'defetctFunctionalLocation';
            this.displayDefectPartBlock = newRootCause === 'defectPart';
            this.displayDefectItemBlock = newRootCause === 'defectItem';
            this.resetRootCauseFields();
          };
          EventCreateComponent.prototype.setSelectedDefect = function() {
            if (!!this.bidoNotificationDTO.bidoRootCauseDTO) {
              if (!!this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseAssetCode) {
                this.selectedRootCause = 'defectEquipment';
              } else if (!!this.bidoNotificationDTO.bidoRootCauseDTO.rootCausePn) {
                this.selectedRootCause = 'defectPart';
              } else if (!!this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseFlCode) {
                this.selectedRootCause = 'defetctFunctionalLocation';
              } else if (!!this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseChapter) {
                this.selectedRootCause = 'defectItem';
              } else {
                this.selectedRootCause = undefined;
              }
            }
          };
          EventCreateComponent.prototype.loadDefect = function() {
            if (!!this.bidoNotificationDTO.bidoRootCauseDTO) {
              this.setSelectedDefect();
              this.eventAtaCode.chapter = this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseChapter;
              this.eventAtaCode.section = this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseSection;
              this.eventAtaCode.subject = this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseSubject;
              this.eventAtaCode.sheet = this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseSheet;
              this.eventAtaCode.marks = this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseMark;
              this.rootCausePn = this.bidoNotificationDTO.bidoRootCauseDTO.rootCausePn;
              this.rootCauseQuantity = this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseQuantity;
              this.rootCauseFlCode = this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseFlCode;
              this.selectedDefectName = this.bidoNotificationDTO.bidoRootCauseDTO.defectName;
              this.selectedDefectLocation = this.bidoNotificationDTO.bidoRootCauseDTO.defectLocation;
              this.rootCauseComment = this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseComment;
              this.defectAssetCode = this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseAssetCode;
              this.searchEquipments();
              this.displayDefectEquipmentBlock = !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                'StringUtils'
              ].isNullOrEmpty(this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseAssetCode);
              this.displayDefectFunctionalLocationBlock = !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                'StringUtils'
              ].isNullOrEmpty(this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseFlCode);
              this.displayDefectPartBlock = !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                'StringUtils'
              ].isNullOrEmpty(this.bidoNotificationDTO.bidoRootCauseDTO.rootCausePn);
              this.displayDefectItemBlock = !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                'StringUtils'
              ].isNullOrEmpty(this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseChapter);
            }
          };
          EventCreateComponent.prototype.isDefectBlockVisible = function() {
            if (
              !!this.eventAtaCode.chapter ||
              !!this.defectAssetCode ||
              !!this.rootCausePn ||
              !!this.rootCauseQuantity ||
              !!this.selectedDefectName ||
              !!this.selectedDefectLocation ||
              !!this.rootCauseComment ||
              !!this.rootCauseFlCode
            ) {
              return true;
            }
            return false;
          };
          EventCreateComponent.prototype.openDefectPart = function(event) {
            if (!_shared_utils_dom_utils__WEBPACK_IMPORTED_MODULE_32__['DomUtils'].isTargetDisabled(event.target)) {
              var defectPartTableCols = [
                {
                  field: 'pnCode',
                  alignment: 'left',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  width: '10rem'
                },
                {
                  field: 'articleDesignation',
                  alignment: 'left',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  width: '20rem'
                },
                {
                  field: 'manufacturerOtanCode',
                  alignment: 'left',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  width: '10rem'
                },
                {
                  field: 'otanPnReference',
                  alignment: 'left',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  width: '10rem'
                },
                {
                  field: 'quantityUnit',
                  alignment: 'left',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  width: '8rem'
                }
              ];
              var criteria = {};
              if (!!this.bidoEquipmentDTO) {
                criteria.familyCode = _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_31__[
                  'BidoFamilyVariantUtils'
                ].getFamilyCodeFromFamilyVariantCode(this.bidoEquipmentDTO.familyVariantCode);
                criteria.variantCode = _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_31__[
                  'BidoFamilyVariantUtils'
                ].getVariantCodeFromFamilyVariantCode(this.bidoEquipmentDTO.familyVariantCode);
              }
              var selectedPnType = this.pnTypeList.find(function(pnType) {
                return pnType.label.toLowerCase() === 'part';
              });
              if (!!selectedPnType) {
                criteria.birePnDTO = {};
                criteria.birePnDTO.pnType = selectedPnType.value;
              }
              this.defectPartTableData = {
                componentId: this.getComponentName() + '.defectPartDialog',
                tableCols: defectPartTableCols,
                tableRows: this.eventService.findAllBirePnByCriteria(criteria),
                dataKey: 'pnCode',
                selectionMode:
                  _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_19__['TableSelectionMode'].Single,
                globalFilter: true
              };
              this.showDefectPartDialog = true;
            }
          };
          EventCreateComponent.prototype.loadPnTypeList = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_15__['GenericPropertyConstants']
                  .PN_TYPE_MAP
              )
              .subscribe(function(results) {
                _this.pnTypeList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_35__['ListUtils'].orEmpty(results);
              });
          };
          EventCreateComponent.prototype.onSelectDefectPart = function(pn) {
            this.rootCausePn = pn.pnCode;
            if (this.rootCauseQuantity === undefined || this.rootCauseQuantity === null) {
              this.rootCauseQuantity = 0;
            }
          };
          EventCreateComponent.prototype.fetchEquipmentName = function(assetCode, callback) {
            var equipmentId = {
              equipmentCode: assetCode
            };
            this.eventCreateService.getEquipmentName(equipmentId).subscribe(function(res) {
              if (!!callback) {
                callback(res);
              }
            });
          };
          EventCreateComponent.prototype.resetRootCauseAssetField = function() {
            this.defectAssetCode = undefined;
            this.defectEquipmentName = undefined;
            this.defectEquipmentPn = undefined;
            this.defectEquipmentSn = undefined;
            this.selectedDefectName = undefined;
            this.selectedDefectLocation = undefined;
            this.rootCauseComment = undefined;
            this.isDefectBlockVisible();
          };
          EventCreateComponent.prototype.resetRootCausePNField = function() {
            this.rootCausePn = undefined;
            this.rootCauseQuantity = undefined;
            this.selectedDefectName = undefined;
            this.selectedDefectLocation = undefined;
            this.rootCauseComment = undefined;
            this.isDefectBlockVisible();
          };
          EventCreateComponent.prototype.showAcceptPostponement = function() {
            var showAcceptPostponement = false;
            if (!!this.bidoNotificationDTO) {
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_ANALYSIS_KEY === this.bidoNotificationDTO.status ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_CLOSED_KEY === this.bidoNotificationDTO.status
              ) {
                showAcceptPostponement = true;
              } else if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_INVESTIGATION_KEY === this.bidoNotificationDTO.status &&
                this.sessionService.isSpecificBRASIDAS
              ) {
                showAcceptPostponement = true;
              }
            }
            return showAcceptPostponement && this.isWriteOpenMode;
          };
          EventCreateComponent.prototype.showRefusePostponement = function() {
            var showRefusePostponement = false;
            if (!!this.bidoNotificationDTO) {
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_ANALYSIS_KEY === this.bidoNotificationDTO.status ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_CLOSED_KEY === this.bidoNotificationDTO.status
              ) {
                showRefusePostponement = true;
              } else if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_INVESTIGATION_KEY === this.bidoNotificationDTO.status &&
                this.sessionService.isSpecificBRASIDAS
              ) {
                showRefusePostponement = true;
              }
            }
            return showRefusePostponement && this.isWriteOpenMode;
          };
          EventCreateComponent.prototype.onAcceptPostponement = function() {
            var _this = this;
            // TODO : check if a date is needed
            if (!this.postponementNewLimitDate) {
              this.messageService.showWarningMessage(this.getTranslateKey('postponementDateNotPresent'));
              return;
            }
            if (this.postponementNewLimitDate.getTime() < new Date().getTime()) {
              this.messageService.showWarningMessage(this.getTranslateKey('postponementDateInPast'));
              return;
            }
            var partialMessageKey = this.getTranslateKey('confirmAcceptPostponement');
            this.confirmationService.confirm({
              messageKey: partialMessageKey,
              accept: function() {
                var input = {
                  notificationCode: _this.bidoNotificationDTO.notificationCode,
                  newLimitDate: _this.postponementNewLimitDate,
                  flightRestriction: _this.flightRestriction,
                  authorizationNumber: _this.postponementAuthorizationNum
                };
                _this.eventCreateService.acceptWorkPostponementRequest(input).subscribe(function(data) {
                  _this.messageService.showSuccessMessage(_this.getTranslateKey('postponementTreated'));
                  _this.bidoNotificationDTO = data;
                  _this.updateOpenMode(
                    _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
                  );
                  _this.reloadEvent();
                });
              }
            });
          };
          EventCreateComponent.prototype.onRefusePostpone = function() {
            var _this = this;
            if (!this.workPostponmentRefusalReason) {
              this.messageService.showWarningMessage(this.getTranslateKey('postponementRefusalReasonNotPresent'));
              return;
            }
            var partialMessageKey = this.getTranslateKey('refuseAcceptPostponement');
            this.confirmationService.confirm({
              messageKey: partialMessageKey,
              accept: function() {
                var input = {
                  notificationCode: _this.bidoNotificationDTO.notificationCode,
                  refusalReason: _this.workPostponmentRefusalReason
                };
                _this.eventCreateService.refuseWorkPostponementRequest(input).subscribe(function(data) {
                  _this.messageService.showSuccessMessage(_this.getTranslateKey('postponementTreated'));
                  _this.bidoNotificationDTO = data;
                  _this.updateOpenMode(
                    _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
                  );
                  _this.reloadEvent();
                });
              }
            });
          };
          /*************************************************************************
           * Diffusion Tab Operations
           *************************************************************************/
          EventCreateComponent.prototype.loadDiffusionTableData = function() {
            var _this = this;
            if (this.isDiffusionTabVisible && !!this.bidoNotificationDTO.notificationCode) {
              this.diffusionTableDataSource.setData([]);
              this.isLoadingDiffusionTable = true;
              this.eventCreateService
                .findBidoNotificationContactsByNotificationCode(this.bidoNotificationDTO.notificationCode)
                .subscribe(function(res) {
                  res.forEach(function(data) {
                    if (!!data && !!data.bidoContactDTO) {
                      _this.diffusionTableDataSource.addData([
                        {
                          customerCode: data.bidoContactDTO.customerCode,
                          customerName: data.bidoContactDTO.customerName,
                          contactName: data.bidoContactDTO.contactName,
                          email: data.bidoContactDTO[_this.email]
                        }
                      ]);
                    }
                  });
                  _this.isLoadingDiffusionTable = false;
                });
            }
          };
          EventCreateComponent.prototype.sendDiffusionMail = function() {
            var _this = this;
            var contactsList = [];
            this.diffusionTableDataSource.dataSelection.forEach(function(res) {
              if (!!res && !!res.email) {
                contactsList.push({
                  eMail: res.email,
                  contactName: res.contactName,
                  customerCode: res.customerCode,
                  customerName: res.customerName,
                  firstName: res.firstName,
                  lastName: res.lastName
                });
              }
            });
            var sendEventNotificationToContactsDTO = {
              bidoNotificationDTOId: {
                notificationCode: this.bidoNotificationDTO.notificationCode
              },
              contactList: contactsList
            };
            this.eventCreateService
              .sendEventNotificationToContacts(sendEventNotificationToContactsDTO)
              .subscribe(function(res) {
                _this.messageService.showSuccessMessage(_this.getTranslateKey('notificationSent'));
              });
          };
          /*************************************************************************
           * Structure Tab Operations
           *************************************************************************/
          EventCreateComponent.prototype.openPartNumberScreen = function(pnCode, ev) {
            if (!!pnCode) {
              this.openPN(
                pnCode,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
              );
            }
            ev.stopPropagation();
          };
          EventCreateComponent.prototype.openPN = function(objectId, openMode) {
            var labelKey = 'transaction.PartNumberFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'PartNumberFormComponent',
              objectId: objectId,
              openMode: openMode
            };
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          /*************************************************************************
           * Arising Event Tab Operations
           *************************************************************************/
          EventCreateComponent.prototype.loadArisingEventData = function() {
            var _this = this;
            if (this.isArisingEventTabVisible) {
              this.isLoadingEventsTable = true;
              var eventCriteriaInputDTO = {
                notNotificationCode: this.bidoNotificationDTO.notificationCode
              };
              this.eventCreateService.findLinkingEventData(eventCriteriaInputDTO).subscribe(function(res) {
                _this.isLoadingEventsTable = false;
                _this.arisingEventTableDataSource.setData([]);
                res.list.forEach(function(row) {
                  var tableArr = {
                    notificationCode: row.notificationCode,
                    typeCode: row.typeCode,
                    asset: row.asset,
                    closureDate: row.reportingDate,
                    eventType: row.typeCode,
                    notificationSubject: row.notificationSubject,
                    reportingDate: row.reportingDate,
                    reportingPeriodEndDate: row.reportingPeriodEndDate,
                    reportingPeriodStartDate: row.reportingPeriodStartDate,
                    equipmentCode: row.equipmentCode,
                    equipmentFunction: row.equipmentFunction
                  };
                  _this.arisingEventTableDataSource.addData([tableArr]);
                });
              });
            }
          };
          EventCreateComponent.prototype.setNavigationLinkList = function() {
            var _this = this;
            var operational = this.getTranslateKey('operational');
            var maintenance = this.getTranslateKey('maintenance');
            var configuration = this.getTranslateKey('configuration');
            this.translateService.get([operational, maintenance, configuration]).subscribe(function(results) {
              var operationalLabel = results ? results[operational] : 'Asset Maintenance Plan';
              var maintenanceLabel = results ? results[maintenance] : 'Asset Review';
              var configurationLabel = results ? results[configuration] : 'Airworthiness Control';
              _this.navigationLinkList = [
                {
                  label: operationalLabel,
                  command: function() {
                    _this.openCreateEvent(
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_CATEGORY_OPERATIONAL_KEY
                    );
                  }
                },
                {
                  label: maintenanceLabel,
                  command: function() {
                    _this.openCreateEvent(
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_CATEGORY_MAINTENANCE_KEY
                    );
                  }
                },
                {
                  label: configurationLabel,
                  command: function() {
                    _this.openCreateEvent(
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_CATEGORY_CONFIGURATION_KEY
                    );
                  }
                }
              ];
            });
          };
          EventCreateComponent.prototype.openCreateEvent = function(code) {
            var bidoNotificationDTO = {
              bidoNotificationTypeDTO: {
                typeCategory: code
              },
              equipmentCode: this.bidoEquipmentDTO.equipmentCode,
              bidoEquipmentDTO: this.bidoEquipmentDTO,
              notNotificationCode: this.bidoNotificationDTO.notificationCode
            };
            this.openLinkedCreateEventUC(
              bidoNotificationDTO,
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Create
            );
          };
          EventCreateComponent.prototype.openLinkedCreateEventUC = function(objectId, openMode) {
            var data = {
              id: this.tabService.generateId(),
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_13__['ComponentConstants']
                  .FLE_EVENT_CREATE,
              openMode: openMode
            };
            if (!!objectId) {
              data.objectId = this.serializationService.serialize(objectId);
            }
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          EventCreateComponent.prototype.deleteEvents = function() {
            var _this = this;
            var confirmMessageKey =
              this.arisingEventTableDataSource.dataSelectionCount > 1
                ? 'confirmDeleteSelectedEvents'
                : 'confirmDeleteSelectedEvent';
            this.confirmationService.confirmDelete({
              messageKey: this.getTranslateKey(confirmMessageKey),
              accept: function() {
                var eventIds = [];
                _this.arisingEventTableDataSource.dataSelection.map(function(event) {
                  if (!!event && !!event.notificationCode) {
                    var dto = {
                      notificationCode: event.notificationCode
                    };
                    eventIds.push(dto);
                  }
                });
                _this.eventService.removeBidoNotification(eventIds).subscribe(function() {
                  var successMessageKey =
                    _this.arisingEventTableDataSource.dataSelectionCount > 1
                      ? 'successOnDeleteEvents'
                      : 'successOnDeleteEvent';
                  _this.messageService.showSuccessMessage(_this.getTranslateKey(successMessageKey));
                  _this.arisingEventTableDataSource.deleteDataSelection();
                });
              }
            });
          };
          EventCreateComponent.prototype.openArisingEventAsset = function(row) {
            if (!!row) {
              this.openAssetUC(
                row.equipmentCode,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read,
                row.equipmentFunction || undefined
              );
            }
          };
          /*************************************************************************
           * Measure Tab Operations
           *************************************************************************/
          EventCreateComponent.prototype.loadMeasureTableData = function() {
            var _this = this;
            if (this.isAssetAtDateTabVisible) {
              var assetAtDateInput = {
                equipmentCode: this.bidoEquipmentDTO.equipmentCode || '',
                fromDate: this.bidoNotificationDTO.reportingPeriodStartDate
              };
              this.bidoMeasuresDisplayedDataSource.setData([]);
              this.isLoadingMeasureTable = true;
              this.eventCreateService.assetAtDateForMeasureTab(assetAtDateInput).subscribe(function(res) {
                _this.isLoadingMeasureTable = false;
                _this.bidoMeasuresDisplayedDataSource.addData(_this.transformMeasures(res || []));
                _this.loadMeasureChartData();
              });
            }
          };
          EventCreateComponent.prototype.getBidoEquipmentWithRepresentation = function(code) {
            var _this = this;
            var reportingPeriodStartDate = new Date();
            if (!!this.bidoNotificationDTO.reportingPeriodStartDate) {
              reportingPeriodStartDate = this.bidoNotificationDTO.reportingPeriodStartDate;
            }
            var findBidoEquipmentByEquipmentCodeFromDateInput = {
              equipmentCode: code,
              notificationStartDate: reportingPeriodStartDate
            };
            this.eventCreateService
              .findHFBidoEquipmentByEquipmentCodeFromDate(findBidoEquipmentByEquipmentCodeFromDateInput)
              .subscribe(function(res) {
                _this.handleTabVisibility();
                if (!!res.operationalStatus) {
                  res.operationalStatus = _this.propertyOperationalStatus.filter(function(resp) {
                    return resp.value === res.operationalStatus;
                  })[0].label;
                }
                _this.bidoEquipmentDTO = res;
                _this.familyVariantEquipmentCode = _this.bidoEquipmentDTO.familyVariantCode;
                if (!!res.owner) {
                  _this.bidoEquipmentDTO.ownerCustomerCode = res.owner.customerCode;
                }
                if (!!res.operator) {
                  _this.bidoEquipmentDTO.operatorCustomerCode = res.operator.customerCode;
                }
                _this.eventService
                  .getEquipmentRepresentation(_this.bidoEquipmentDTO)
                  .subscribe(function(equipmentRepresentationResult) {
                    _this.notificationAsset = _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                      'StringUtils'
                    ].orEmpty(equipmentRepresentationResult);
                  });
              });
          };
          EventCreateComponent.prototype.getBidoEquipment = function() {
            var _this = this;
            var reportingPeriodStartDate = new Date();
            if (!!this.bidoNotificationDTO.reportingPeriodStartDate) {
              reportingPeriodStartDate = this.bidoNotificationDTO.reportingPeriodStartDate;
            }
            var findBidoEquipmentByEquipmentCodeFromDateInput = {
              equipmentCode: this.bidoNotificationDTO.equipmentCode,
              notificationStartDate: reportingPeriodStartDate
            };
            this.eventCreateService
              .findHFBidoEquipmentByEquipmentCodeFromDate(findBidoEquipmentByEquipmentCodeFromDateInput)
              .subscribe(function(res) {
                _this.handleTabVisibility();
                if (!!res.operationalStatus) {
                  res.operationalStatus = _this.propertyOperationalStatus.filter(function(resp) {
                    return resp.value === res.operationalStatus;
                  })[0].label;
                }
                _this.bidoEquipmentDTO = res;
                _this.familyVariantEquipmentCode = _this.bidoEquipmentDTO.familyVariantCode;
                if (!!res.owner) {
                  _this.bidoEquipmentDTO.ownerCustomerCode = res.owner.customerCode;
                }
                if (!!res.operator) {
                  _this.bidoEquipmentDTO.operatorCustomerCode = res.operator.customerCode;
                }
                _this.eventService
                  .getEquipmentRepresentation(_this.bidoEquipmentDTO)
                  .subscribe(function(equipmentRepresentationResult) {
                    _this.notificationAsset = _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_37__[
                      'StringUtils'
                    ].orEmpty(equipmentRepresentationResult);
                  });
                _this.loadScreenData();
                if (!!_this.bidoEquipmentDTO.equipmentCode) {
                  _this.eventService
                    .findAllFlInStructureByEquipmentCodeForDefect(_this.bidoEquipmentDTO.equipmentCode)
                    .subscribe(function(results) {
                      _this.flCodeList = !!results
                        ? _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_36__[
                            'SelectItemUtils'
                          ].fromLabelValues(results)
                        : [];
                    });
                }
                if (!_this.isCreateOpenMode) {
                  if (!!_this.bidoEquipmentDTO && !!_this.bidoEquipmentDTO.familyVariantCode) {
                    _this.eventCreateService
                      .haspropertyByFamilyCode(
                        _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_31__[
                          'BidoFamilyVariantUtils'
                        ].getFamilyCodeFromFamilyVariantCode(_this.bidoEquipmentDTO.familyVariantCode)
                      )
                      .subscribe(function(resp) {
                        _this.hasPropertyByCode = !!resp ? resp : false;
                      });
                  }
                }
                _this.isAircraft();
                _this.loadCustomerOperatorName();
              });
          };
          EventCreateComponent.prototype.isEstimateCounterVisible = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_OPERATIONAL_KEY === this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory &&
                !this.hasPropertyByCode
              ) {
                return true;
              }
            }
            return false;
          };
          EventCreateComponent.prototype.estimateCounter = function() {
            var _this = this;
            this.eventCreateService.generateEstimatedMeasures(this.bidoNotificationDTO).subscribe(function(res) {
              _this.loadMeasureTableData();
            });
          };
          EventCreateComponent.prototype.initMeasureChart = function() {
            this.measureVariationData = {
              datasets: [],
              labels: []
            };
            this.setMeasureChartOptions();
          };
          EventCreateComponent.prototype.initChart = function() {
            this.chartType = 'line';
            this.usageChartOptions = {
              scales: {
                yAxes: [
                  {
                    ticks: {
                      beginAtZero: true
                    }
                  }
                ]
              }
            };
            this.usageGraphData = {
              datasets: [
                {
                  // tslint:disable-next-line:no-magic-numbers
                  data: [],
                  label: 'Hours',
                  borderColor: '#D3C632',
                  backgroundColor: '#D3C632',
                  hoverBackgroundColor: '#D3C632',
                  fill: false
                },
                {
                  // tslint:disable-next-line:no-magic-numbers
                  data: [],
                  label: 'Cycle',
                  borderColor: '#42A5F5',
                  backgroundColor: '#42A5F5',
                  hoverBackgroundColor: '#42A5F5',
                  fill: false
                }
              ],
              labels: [] // To do
            };
          };
          EventCreateComponent.prototype.transformMeasures = function(listMeasures) {
            var _this = this;
            return listMeasures.map(function(obj) {
              var measureDataRow = {
                _obj: obj,
                counterCode: obj.counterCode,
                counterUnit: obj.counterUnit,
                cumulatedCounterValue: obj.cumulatedCounterValue,
                readingDate: _this.dateService.dateWithHourToString(obj.counterDate),
                referenceValue: obj.referenceValue,
                remainingValue: obj.remainingValue,
                dateLimit: _this.dateService.dateToString(obj.dateLimit),
                source: obj.source
              };
              return measureDataRow;
            });
          };
          EventCreateComponent.prototype.loadMeasureChartData = function() {
            var _this = this;
            this.showMeasureChart = false;
            var observables = [];
            if (this.bidoMeasuresDisplayedDataSource.hasData) {
              var setUpCounters_1 = [];
              this.bidoMeasuresDisplayedDataSource.dataSrc
                .filter(function(res) {
                  return res.counterCode === _this.tsnLabel || res.counterCode === _this.csnLabel;
                })
                .forEach(function(res) {
                  if (res && res._obj && res._obj.bidoEquipmentCounterDto) {
                    var counterCode = res.counterCode || '';
                    if (setUpCounters_1.indexOf(counterCode) < 0) {
                      var bidoEquipmentCounterDTOId = {
                        equipmentCode: res._obj.bidoEquipmentCounterDto.equipmentCode,
                        counterCode: res._obj.bidoEquipmentCounterDto.counterCode,
                        ratingCode: res._obj.bidoEquipmentCounterDto.ratingCode
                          ? res._obj.bidoEquipmentCounterDto.ratingCode
                          : '_',
                        familyCode: res._obj.bidoEquipmentCounterDto.familyCode
                      };
                      if (counterCode === _this.tsnLabel) {
                        _this.tsn = !!res.cumulatedCounterValue
                          ? res.cumulatedCounterValue + ' ' + res.counterUnit
                          : '';
                      }
                      if (counterCode === _this.csnLabel) {
                        _this.csn = !!res.cumulatedCounterValue
                          ? res.cumulatedCounterValue + ' ' + res.counterUnit
                          : '';
                      }
                      observables.push(_this.eventCreateService.getMeasureDetailTableData(bidoEquipmentCounterDTOId));
                      setUpCounters_1.push(counterCode || '');
                    }
                  }
                });
              if (observables.length > 0) {
                Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['forkJoin'])(observables).subscribe(function(results) {
                  _this.showMeasureChart = true;
                  _this.measureChartDataObj = results;
                  _this.measureChartDataObj.forEach(function(element) {
                    _this.initDateValues(element);
                  });
                  _this.setMeasureChartData();
                });
              }
            }
          };
          EventCreateComponent.prototype.initDateValues = function(measures) {
            var _this = this;
            var dateArray = [];
            if (!!measures) {
              measures.forEach(function(st) {
                if (st.readingDate !== null && st.readingDate !== undefined) {
                  dateArray.push(st.readingDate);
                }
              });
            }
            this.startDate = dateArray[0];
            this.endDate = dateArray[0];
            // iterate over array values and update min & max
            dateArray.forEach(function(v) {
              _this.endDate = v > _this.endDate ? v : _this.endDate;
              _this.startDate = v < _this.startDate ? v : _this.startDate;
            });
          };
          EventCreateComponent.prototype.setMeasureChartData = function() {
            var _this = this;
            if (
              this.measureChartDataObj !== null &&
              this.measureChartDataObj !== undefined &&
              this.measureChartDataObj.length > 0
            ) {
              this.measureVariationData.datasets = [];
              this.measureVariationData.labels = [];
              var dateLabels_1 = [];
              this.measureChartDataObj
                .filter(function(obj) {
                  if (_this.selectedMeasureType && obj && obj.length > 0) {
                    if (_this.selectedMeasureType === 'ALL') {
                      return true;
                    }
                    var getFirstElement = obj[0];
                    return getFirstElement.counterCode === _this.selectedMeasureType;
                  }
                  return true;
                })
                .forEach(function(element) {
                  var getFirstElement = element[0];
                  if (getFirstElement) {
                    var data = [];
                    var datasetObj_1 = {
                      data: data,
                      label: getFirstElement.counterCode === _this.tsnLabel ? 'Hours' : 'Cycle',
                      borderColor: getFirstElement.counterCode === _this.tsnLabel ? TSN_COLOR : CSN_COLOR,
                      backgroundColor: getFirstElement.counterCode === _this.tsnLabel ? TSN_COLOR : CSN_COLOR,
                      hoverBackgroundColor: getFirstElement.counterCode === _this.tsnLabel ? TSN_COLOR : CSN_COLOR,
                      fill: false
                    };
                    _this.measureVariationData.datasets.push(datasetObj_1);
                    element.forEach(function(st) {
                      if (
                        !!_this.startDate &&
                        !!_this.endDate &&
                        !!st.readingDate &&
                        st.readingDate >= _this.startDate &&
                        st.readingDate <= _this.endDate
                      ) {
                        if (st.cumulatedCounterValue !== null && st.cumulatedCounterValue !== undefined) {
                          dateLabels_1.push(st.readingDate);
                          datasetObj_1.data.push(parseInt(st.cumulatedCounterValue, 10));
                        }
                      }
                    });
                    datasetObj_1.data.reverse();
                  }
                });
              dateLabels_1.sort(function(a, b) {
                return b.getTime() - a.getTime();
              });
              dateLabels_1.reverse();
              dateLabels_1.forEach(function(label) {
                if (
                  _this.measureVariationData.labels.indexOf(_this.dateService.dateWithHourToStringWithoutHour(label)) <
                  0
                ) {
                  _this.measureVariationData.labels.push(_this.dateService.dateWithHourToStringWithoutHour(label));
                }
              });
              this.measureVariationData = __assign({}, this.measureVariationData);
            }
          };
          EventCreateComponent.prototype.setMeasureChartOptions = function() {
            this.measureChartOptions = {
              scales: {
                yAxes: [
                  {
                    ticks: {
                      beginAtZero: true
                    }
                  }
                ]
              },
              legend: {
                display: false
              },
              tooltips: {
                bodyFontColor:
                  _shared_constants_app_constants__WEBPACK_IMPORTED_MODULE_7__['AppConstants'].COLOR_BACKGROUND_PRIMARY
              }
            };
          };
          EventCreateComponent.prototype.getMonthGapToolTip = function(row) {
            if (row && row.aPotentialAlertData && row.aPotentialAlertData.monthGapToolTip) {
              return row.aPotentialAlertData.monthGapToolTip;
            }
            return '';
          };
          EventCreateComponent.prototype.getAlertIcon = function(row) {
            if (
              row &&
              row.aPotentialAlertData &&
              row.aPotentialAlertData.potentialAlertLevelInt !== null &&
              row.aPotentialAlertData.potentialAlertLevelInt !== undefined
            ) {
              return this.getColorByIconCode(row.aPotentialAlertData.potentialAlertLevelInt);
            }
            return '';
          };
          EventCreateComponent.prototype.getColorByIconCode = function(iconCode) {
            switch (iconCode.toString()) {
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_14__['ControlConfigConstants']
                .ICON_GREEN_LIGHT_CODE:
                return 'green';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_14__['ControlConfigConstants']
                .ICON_YELLOW_LIGHT_CODE:
                return 'yellow';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_14__['ControlConfigConstants']
                .ICON_RED_LIGHT_CODE:
                return 'red';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_14__['ControlConfigConstants']
                .ICON_NONE_LIGHT_CODE:
                return '';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_14__['ControlConfigConstants']
                .ICON_GREEN_LED_CODE:
                return 'green';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_14__['ControlConfigConstants']
                .ICON_YELLOW_LED_CODE:
                return 'yellow';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_14__['ControlConfigConstants']
                .ICON_RED_LED_CODE:
                return 'red';
              case _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_14__['ControlConfigConstants']
                .ICON_NONE_LED_CODE:
                return '';
              default:
                return '';
            }
          };
          EventCreateComponent.prototype.getAlertIconTooltip = function(row) {
            if (row && row.aPotentialAlertData && row.aPotentialAlertData.alertTooltip) {
              return row.aPotentialAlertData.alertTooltip;
            }
            return '';
          };
          /*************************************************************************
           * Asset At Date Tab Operations
           *************************************************************************/
          EventCreateComponent.prototype.downloadACRSForm = function() {
            this.eventCreateService
              .generateAPRSCertificateForACRSEvent(this.bidoNotificationDTO)
              .subscribe(function(result) {
                _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].downloadFile(
                  result.fileContent,
                  result.fileName
                );
              });
          };
          EventCreateComponent.prototype.downloadEASAForm = function() {
            this.eventCreateService
              .generateEASACertificateFromACRSEvent(this.bidoNotificationDTO)
              .subscribe(function(result) {
                _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].downloadFile(
                  result.fileContent,
                  result.fileName
                );
              });
          };
          EventCreateComponent.prototype.openHistoricAttributes = function() {
            this.showDynamicAttributesHistoric = true;
            if (!!this.bidoNotificationDTO.notificationCode) {
              this.showDynamicAttributesHistoric = true;
              var attributeIds = this.dynamicAttributesService.toBireNotificationAttributeId(
                this.bidoNotificationDTO.notificationCode,
                this.hDynamicAttributesForEvent
              );
              this.dynamicAttributesHistoric = this.eventCreateService.findHBidoNotificationAttributesByAttributeId(
                attributeIds
              );
            }
          };
          EventCreateComponent.prototype.updateACRS = function() {
            var _this = this;
            var partialMessageKey = this.getTranslateKey('closeACRSEvent');
            if (this.showForm1()) {
              partialMessageKey = this.getTranslateKey('closeForm1Event');
            }
            this.confirmationService.confirm({
              messageKey: partialMessageKey,
              accept: function() {
                _this.eventCreateService.updateBidoNotificationACRS(_this.bidoNotificationDTO).subscribe(function(res) {
                  _this.getBidoNotificationData();
                  _this.disableStatus = true;
                });
              }
            });
          };
          EventCreateComponent.prototype.showForm1 = function() {
            return (
              !!this.bidoEquipmentDTO &&
              !!this.bidoEquipmentDTO.currentBidoEquipmentData &&
              (this.bidoEquipmentDTO.currentBidoEquipmentData.equipmentFunction ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .ITEM_FAMILY_CODE_ENGINE_KEY ||
                this.bidoEquipmentDTO.currentBidoEquipmentData.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .ITEM_FAMILY_CODE_MAJOR_EQUIPMENT_KEY)
            );
          };
          /*************************************************************************
           * Task Tab Operations
           *************************************************************************/
          EventCreateComponent.prototype.setSearchAssetList = function() {
            var _this = this;
            var equipmentKey = 'global.equipment';
            var partKey = 'global.part';
            var itemKey = 'global.item';
            this.translateService.get([equipmentKey, partKey, itemKey]).subscribe(function(results) {
              var equipmentLabel = !!results ? results[equipmentKey] : 'Equipment';
              var partLabel = !!results ? results[partKey] : 'Part';
              var itemLabel = !!results ? results[itemKey] : 'Item';
              _this.searchAssetList = [
                { label: equipmentLabel, value: SearchAsset.Equipment },
                { label: partLabel, value: SearchAsset.Part },
                { label: itemLabel, value: SearchAsset.Item }
              ];
              _this.selectedSearchAsset = SearchAsset.Equipment;
            });
          };
          EventCreateComponent.prototype.openPartNumberDialog = function(event, source) {
            if (
              !this.isReadOpenMode &&
              !_shared_utils_dom_utils__WEBPACK_IMPORTED_MODULE_32__['DomUtils'].isTargetDisabled(event.target)
            ) {
              this.itemDialogSource = source;
              this.showPartNumberDialog = true;
              this.initPartNumberTableData();
            }
          };
          EventCreateComponent.prototype.clearPartNumber = function(ev) {
            this.bidoNotificationDTO.movementPn = undefined;
            ev.stopPropagation();
          };
          EventCreateComponent.prototype.initPartNumberTableData = function() {
            var partNumberTableCols = [
              {
                field: 'pnCode',
                alignment: 'left',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input,
                width: '10rem'
              },
              {
                field: 'articleDesignation',
                alignment: 'left',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input,
                width: '20rem'
              },
              {
                field: 'manufacturerOtanCode',
                alignment: 'left',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input,
                width: '10rem'
              },
              {
                field: 'otanPnReference',
                alignment: 'left',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input,
                width: '10rem'
              },
              {
                field: 'quantityUnit',
                alignment: 'left',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input,
                width: '8rem'
              }
            ];
            var criteria = {};
            if (!!this.bidoNotificationDTO.movementPn) {
              criteria.birePnDTO = {};
              criteria.birePnDTO.pnCode = this.bidoNotificationDTO.movementPn;
            }
            this.partNumberTableData = {
              componentId: this.getComponentName() + '.partDialog',
              tableCols: partNumberTableCols,
              tableRows: this.eventCreateService.findAllBirePnByCriteria(criteria),
              dataKey: undefined,
              selectionMode:
                _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_19__['TableSelectionMode'].Single,
              globalFilter: true
            };
          };
          EventCreateComponent.prototype.onSelectedPartNumber = function(birePnDTO) {
            if (!!birePnDTO) {
              if (this.itemDialogSource === 0) {
                this.bidoNotificationDTO.movementPn = birePnDTO.pnCode;
              } else {
                this.bidoNotificationDTO.taskAssetPn = birePnDTO.pnCode;
              }
            }
          };
          EventCreateComponent.prototype.searchItems = function(event, itemSource) {
            if (!this.isReadOpenMode) {
              this.itemSource = itemSource;
              this.showItemDialog = true;
              var itemCol = [
                {
                  field: 'familyCode',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'structureType',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'variantCode',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'name',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'chapter',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'section',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'subject',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'sheet',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'marks',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'functionCode',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'itemNumber',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'itemType',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'flocType',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'itemFamily',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Input,
                  alignment: 'left'
                },
                {
                  field: 'configurableItem',
                  filterMode:
                    _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                      .Tricheckbox,
                  alignment: 'left'
                }
              ];
              var findBireItemsBySearchCriteriaInput = {
                bireItemDTOCriteria: {
                  chapter: this.eventAtaCode.chapter,
                  sheet: this.eventAtaCode.sheet,
                  marks: this.eventAtaCode.marks,
                  section: this.eventAtaCode.section,
                  subject: this.eventAtaCode.subject
                }
              };
              this.dialogTableDataItems = {
                componentId: 'ImpactsItemPopupDialog',
                tableCols: itemCol,
                tableRows: this.eventCreateService.findBireItemsBySearchCriteria(findBireItemsBySearchCriteriaInput),
                dataKey: undefined,
                selectionMode:
                  _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_19__['TableSelectionMode'].Single,
                globalFilter: true
              };
            }
          };
          EventCreateComponent.prototype.isItemExists = function() {
            var findBireItemsBySearchCriteriaInput = {
              bireItemDTOCriteria: {
                chapter: this.eventAtaCode.chapter,
                sheet: this.eventAtaCode.sheet,
                marks: this.eventAtaCode.marks,
                section: this.eventAtaCode.section,
                subject: this.eventAtaCode.subject
              }
            };
            return this.eventCreateService.findBireItemsBySearchCriteria(findBireItemsBySearchCriteriaInput);
          };
          EventCreateComponent.prototype.setSelectedItems = function(selectedObject) {
            this.showItemDialog = false;
            if (this.itemSource === 0) {
              this.bidoNotificationDTO.taskAtaChapter = selectedObject.chapter;
              this.bidoNotificationDTO.taskAtaSection = selectedObject.section;
              this.bidoNotificationDTO.taskAtaSubject = selectedObject.subject;
            } else {
              this.eventAtaCode.chapter = selectedObject.chapter;
              this.eventAtaCode.section = selectedObject.section;
              this.eventAtaCode.subject = selectedObject.subject;
              this.eventAtaCode.sheet = selectedObject.sheet;
              this.eventAtaCode.marks = selectedObject.marks;
            }
          };
          EventCreateComponent.prototype.searchTask = function() {
            var _this = this;
            if (!!this.bidoNotificationDTO.taskCode) {
              var findBireTaskByCriteriaInput = {
                bireTaskDTO: {
                  taskCode: this.bidoNotificationDTO.taskCode
                }
              };
              this.eventCreateService.findBireTasksByCriteria(findBireTaskByCriteriaInput).subscribe(function(taskRes) {
                if (taskRes.list.length > 0) {
                  _this.bidoNotificationDTO.taskCode = taskRes.list[0].taskCode;
                  _this.bidoNotificationDTO.taskVersion = taskRes.list[0].taskVersion;
                  _this.selectedTaskDesignation = taskRes.list[0].taskDesignation;
                  _this.selectedTaskDescription = taskRes.list[0].taskDescription;
                }
              });
            }
          };
          EventCreateComponent.prototype.taskSearchCode = function(event) {
            if (!_shared_utils_dom_utils__WEBPACK_IMPORTED_MODULE_32__['DomUtils'].isTargetDisabled(event.target)) {
              this.showItemTaskSearchPopup = true;
            }
          };
          EventCreateComponent.prototype.addTask = function(task) {
            this.showItemTaskSearchPopup = false;
            this.bidoNotificationDTO.taskCode = task.taskCode;
            this.bidoNotificationDTO.taskVersion = task.taskVersion;
            this.selectedTaskDesignation = task.taskDesignation;
            this.selectedTaskDescription = task.taskDescription;
          };
          EventCreateComponent.prototype.changeTaskAssetType = function() {
            this.bidoNotificationDTO.taskAssetCode = undefined;
            this.selectedAssetPN = undefined;
            this.selectedAssetSN = undefined;
            this.selectedAssetName = undefined;
            this.selectedAssetDesignation = undefined;
            this.bidoNotificationDTO.taskAssetPn = undefined;
            this.bidoNotificationDTO.taskAtaChapter = undefined;
            this.bidoNotificationDTO.taskAtaSection = undefined;
            this.bidoNotificationDTO.taskAtaSubject = undefined;
          };
          EventCreateComponent.prototype.resetTaskAssetField = function(ev) {
            this.bidoNotificationDTO.taskAssetCode = undefined;
            this.selectedAssetPN = undefined;
            this.selectedAssetSN = undefined;
            this.selectedAssetName = undefined;
            this.selectedAssetDesignation = undefined;
            ev.stopPropagation();
          };
          EventCreateComponent.prototype.clearTaskPn = function(ev) {
            this.bidoNotificationDTO.taskAssetPn = undefined;
            ev.stopPropagation();
          };
          EventCreateComponent.prototype.clearTaskCode = function(ev) {
            this.bidoNotificationDTO.taskCode = undefined;
            this.bidoNotificationDTO.taskVersion = undefined;
            this.selectedTaskDesignation = undefined;
            this.selectedTaskDescription = undefined;
            ev.stopPropagation();
          };
          /*************************************************************************
           * Documents tab Operations
           *************************************************************************/
          EventCreateComponent.prototype.addDocument = function() {
            this.currentDocumentIndex = -1;
            this.currentDocument = undefined;
            this.isReadOnlyDocumentDialog = false;
            this.showAddDocumentDialog = true;
          };
          EventCreateComponent.prototype.editDocument = function() {
            var _this = this;
            if (this.bireDocumentDisplayedDataSource.dataSelectionCount === 1) {
              this.currentDocumentIndex = this.documentsTable.findIndex(function(document) {
                return _shared_utils_dto_utils__WEBPACK_IMPORTED_MODULE_33__['DTOUtils'].equalsBireDocumentDTO(
                  document,
                  _this.bireDocumentDisplayedDataSource.dataSelection[0]._obj
                );
              });
              this.currentDocument = __assign({}, this.bireDocumentDisplayedDataSource.dataSelection[0]._obj);
              this.isReadOnlyDocumentDialog = false;
              this.showDocumentDialog = true;
            }
          };
          EventCreateComponent.prototype.openDocument = function() {
            if (this.bireDocumentDisplayedDataSource.dataSelectionCount === 1) {
              this.currentDocument = this.bireDocumentDisplayedDataSource.dataSelection[0]._obj;
              this.currentDocumentIndex = undefined;
              this.isReadOnlyDocumentDialog = true;
              this.showDocumentDialog = true;
            }
          };
          EventCreateComponent.prototype.loadDocumentsTable = function() {
            var _this = this;
            if (!!this.bidoNotificationDTO.notificationCode) {
              this.documentsTable = [];
              this.eventCreateService
                .findAllBidoDocumentationByNotificationCode(this.bidoNotificationDTO.notificationCode)
                .subscribe(function(results) {
                  _this.documentsTable = results || [];
                  _this.bireDocumentDisplayedDataSource.setData([]);
                  _this.documentsTable.forEach(function(doc) {
                    _this.bireDocumentDisplayedDataSource.addData([_this.getCustomDocumentRow(doc)]);
                  });
                });
            }
          };
          EventCreateComponent.prototype.getCustomDocumentRow = function(newDocument) {
            return {
              _obj: newDocument,
              docCode: newDocument.docCode,
              docExtension: this.showDocExtension(newDocument),
              docName: newDocument.docName,
              docPublicationDate: this.dateService.dateToString(newDocument.docPublicationDate),
              docSize: this.showDocSize(newDocument),
              docSource: newDocument.docSource,
              docCategory: !!newDocument.docType ? this.getLabel(newDocument.docType, this.documentTypes) : undefined
            };
          };
          EventCreateComponent.prototype.showDocExtension = function(document) {
            return _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils']
              .getExtension(document.docName)
              .toUpperCase();
          };
          EventCreateComponent.prototype.showDocSize = function(document) {
            return document.docFile
              ? _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].getFormattedSize(
                  document.docFile.length
                )
              : '';
          };
          EventCreateComponent.prototype.uploadDocument = function(event, fileUploader) {
            var _this = this;
            if (event.files) {
              var file_1 = event.files[0];
              // Check if the file already exists
              var fileExists = this.documentsTable.some(function(document) {
                return document.docName === file_1.name;
              });
              if (fileExists) {
                this.messageService.showWarningMessage(this.getTranslateKey('warningOnFileExists'));
              } else {
                _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].getFileContentAsBase64(
                  file_1,
                  function(fileContent) {
                    if (fileContent) {
                      var document_1 = {
                        docFile: fileContent,
                        docName: file_1.name,
                        docPublicationDate: new Date()
                      };
                      _this.documentsTable = __spread(_this.documentsTable, [document_1]);
                      _this.documentsAdded = __spread(_this.documentsAdded, [document_1]);
                    }
                  }
                );
              }
              fileUploader.clear();
            }
          };
          EventCreateComponent.prototype.deleteDocuments = function() {
            var _this = this;
            var partialMessageKey =
              this.bireDocumentDisplayedDataSource.dataSelectionCount > 1
                ? 'confirmDeleteSelectedDocuments'
                : 'confirmDeleteSelectedDocument';
            this.confirmationService.confirmDelete({
              messageKey: this.getTranslateKey(partialMessageKey),
              accept: function() {
                _this.bireDocumentDisplayedDataSource.dataSelection.forEach(function(selectedDocument) {
                  var documentsAddedWithoutSelection = _this.documentsAdded.filter(function(documentAdded) {
                    return selectedDocument.docName !== documentAdded.docName;
                  });
                  // list of added objects contains the selection
                  if (_this.documentsAdded.length !== documentsAddedWithoutSelection.length) {
                    // Remove selection from added objects
                    _this.documentsAdded = documentsAddedWithoutSelection;
                  } else {
                    var isRemoved = _this.documentsAdded.some(function(documentAdded) {
                      return _shared_utils_dto_utils__WEBPACK_IMPORTED_MODULE_33__['DTOUtils'].equalsBireDocumentDTO(
                        selectedDocument._obj,
                        documentAdded
                      );
                    });
                    if (!isRemoved && !!selectedDocument && !!selectedDocument.docCode) {
                      var documentId = { docCode: selectedDocument.docCode };
                      _this.documentsRemoved.push(documentId);
                    }
                  }
                  _this.bireDocumentDisplayedDataSource.deleteDataSelection();
                });
                _this.documentsTable = _this.documentsTable.filter(function(document) {
                  return !_this.bireDocumentDisplayedDataSource.dataSelection.some(function(selectedDocument) {
                    return _shared_utils_dto_utils__WEBPACK_IMPORTED_MODULE_33__['DTOUtils'].equalsBireDocumentDTO(
                      document,
                      selectedDocument._obj
                    );
                  });
                });
              }
            });
          };
          EventCreateComponent.prototype.addNewDocument = function(newDocument) {
            var searchInDisplayedList = this.documentsTable.find(function(value) {
              return value.docName === newDocument.docName;
            });
            var searchInAddedList = this.documentsAdded.find(function(value) {
              return value.docName === newDocument.docName;
            });
            if (!searchInDisplayedList) {
              if (searchInAddedList) {
                this.messageService.showErrorMessage(this.getTranslateKey('errorFileAlreadyExist'));
              } else {
                newDocument.notificationCode = this.bidoNotificationDTO.notificationCode;
                this.documentsAdded.push(newDocument);
                this.bireDocumentDisplayedDataSource.addData([this.getCustomDocumentRow(newDocument)]);
              }
            } else {
              this.messageService.showErrorMessage(this.getTranslateKey('errorFileAlreadyExist'));
            }
          };
          EventCreateComponent.prototype.updateDocument = function(updatedDocument) {
            if (
              this.currentDocumentIndex !== null &&
              this.currentDocumentIndex !== undefined &&
              this.currentDocumentIndex >= 0
            ) {
              var inAddedList = this.documentsAdded.some(function(doc) {
                return doc.docCode === updatedDocument.docCode;
              });
              var inUpdatedList = this.documentsUpdated.some(function(doc) {
                return doc.bidoDocumentationDTO.docCode === updatedDocument.docCode;
              });
              if (inAddedList) {
                // added but unsaved
                var indexInAddedList = this.documentsAdded.findIndex(function(doc) {
                  return doc.docCode === updatedDocument.docCode;
                });
                this.documentsAdded[indexInAddedList] = updatedDocument;
              } else if (inUpdatedList) {
                // DB value already updated
                var indexInUpdatedList = this.documentsUpdated.findIndex(function(doc) {
                  return doc.bidoDocumentationDTO.docCode === updatedDocument.docCode;
                });
                var updatedDoc = {
                  docCategory: updatedDocument.docType,
                  endOfValidityDate: new Date(),
                  bidoDocumentationDTO: updatedDocument,
                  docDescription: updatedDocument.docDescription,
                  docLanguage: updatedDocument.docLanguage,
                  docName: updatedDocument.docName,
                  docVersion: updatedDocument.docVersion,
                  publicationDate: updatedDocument.docPublicationDate
                };
                this.documentsUpdated[indexInUpdatedList] = updatedDoc;
              } else {
                updatedDocument.notificationCode = this.bidoNotificationDTO.notificationCode;
                var updatedDoc = {
                  docCategory: updatedDocument.docType,
                  endOfValidityDate: new Date(),
                  bidoDocumentationDTO: updatedDocument,
                  docDescription: updatedDocument.docDescription,
                  docLanguage: updatedDocument.docLanguage,
                  docName: updatedDocument.docName,
                  docVersion: updatedDocument.docVersion,
                  publicationDate: updatedDocument.docPublicationDate
                };
                // non updated DB value
                this.documentsUpdated.push(updatedDoc);
              }
              this.documentsTable[this.currentDocumentIndex] = updatedDocument;
              this.bireDocumentDisplayedDataSource.replaceData(
                this.bireDocumentDisplayedDataSource.dataSrc[this.currentDocumentIndex],
                this.getCustomDocumentRow(updatedDocument)
              );
              this.bireDocumentDisplayedDataSource.dataSelection = [];
            }
          };
          EventCreateComponent.prototype.downloadDocument = function(event) {
            _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_34__['FileUtils'].downloadFile(
              event._obj.docFile,
              event._obj.docName
            );
          };
          /*************************************************************************
           * Symptom and Context Operations
           *************************************************************************/
          EventCreateComponent.prototype.onChangeContext = function(dto) {
            var _this = this;
            this.showContextHeader = false;
            var bidoEventExtensionDTO = {};
            if (!dto) {
              bidoEventExtensionDTO = {
                contextMissionType: this.contextTabData.missionType,
                extensionCode: this.contextTabData.symptomCode,
                notificationCode: this.bidoNotificationDTO.notificationCode
              };
            } else {
              bidoEventExtensionDTO = dto;
            }
            this.eventCreateService.getAddedSymptomParameterList(bidoEventExtensionDTO).subscribe(function(result) {
              if (!!result) {
                if (!dto) {
                  _this.contextTableDataSource.setData([]);
                } else {
                  _this.symptomParameterTableDataSource.setData([]);
                }
                result.forEach(function(res) {
                  if (!dto) {
                    _this.contextTableDataSource.addData([
                      {
                        code: res.code,
                        extensionCode: res.extensionCode,
                        unit: res.unit,
                        name: res.name
                      }
                    ]);
                  } else {
                    _this.symptomParameterTableDataSource.addData([
                      {
                        code: res.code,
                        extensionCode: res.extensionCode,
                        name: res.name,
                        unit: res.unit
                      }
                    ]);
                  }
                });
              }
            });
            if (!this.contextTabData.symptomCode) {
              this.contextTabData.missionType = undefined;
              this.contextTabData.symptomComment = undefined;
            }
          };
          EventCreateComponent.prototype.loadContextTable = function() {
            var _this = this;
            this.contextTableDataSource.setData([]);
            this.eventCreateService
              .findBidoEventExtensionsTypedContextByNotificationCode(this.bidoNotificationDTO.notificationCode)
              .subscribe(function(result) {
                if (!!result) {
                  _this.contextTabData = result;
                  _this.contextTableDataSource.addData(
                    !!result.bidoParameterCustomTableDTOList ? result.bidoParameterCustomTableDTOList : []
                  );
                }
              });
          };
          EventCreateComponent.prototype.loadSymptomTable = function() {
            var _this = this;
            this.symptomRowDataSource.setData([]);
            this.eventCreateService
              .findBidoEventExtensionsTypedSymptomByNotificationCode(this.bidoNotificationDTO.notificationCode)
              .subscribe(function(result) {
                _this.symptomTabData = result;
                result.forEach(function(data) {
                  _this.symptomRowDataSource.addData([
                    {
                      symptomComment: data.symptomComment,
                      symptomName: data.symptomName,
                      symptomCode: data.symptomCode,
                      rowId: Math.random()
                    }
                  ]);
                });
              });
          };
          EventCreateComponent.prototype.hideSymptomParamheader = function() {
            this.symptomParameterTableDataSource.dataSelection = [];
            this.showSymptomParamHeader = false;
          };
          EventCreateComponent.prototype.onSymptomRowSelect = function(event) {
            this.showSymptomHeader = true;
            this.hideSymptomParamheader();
            var data = event.selectedData;
            var dtoArr = [];
            dtoArr = this.symptomTabData.filter(function(res) {
              return res.symptomName === data.symptomName && res.symptomCode === data.symptomCode;
            });
            if (dtoArr.length > 0) {
              this.symptomParameterTableDataSource.setData([]);
              this.symptomParameterTableDataSource.addData(
                !!dtoArr[0].bidoParameterCustomTableDTOList ? dtoArr[0].bidoParameterCustomTableDTOList : []
              );
            } else {
              var bidoEventExtensionDTO = {
                extensionCode: this.symptomRowDataSource.dataSelection[0].symptomCode,
                notificationCode: this.bidoNotificationDTO.notificationCode
              };
              this.onChangeContext(bidoEventExtensionDTO);
            }
          };
          EventCreateComponent.prototype.hideSymptomRowHeader = function() {
            this.showSymptomHeader = false;
          };
          EventCreateComponent.prototype.onSymptomRowUnselect = function() {
            this.hideSymptomParamheader();
            this.hideSymptomRowHeader();
            this.symptomParameterTableDataSource.setData([]);
            this.showSymptomParamHeader = false;
          };
          EventCreateComponent.prototype.onChangeMissionType = function() {
            this.showContextHeader = false;
          };
          EventCreateComponent.prototype.onContextRowSelect = function(_event) {
            this.showContextHeader = true;
          };
          EventCreateComponent.prototype.onContextRowUnselect = function() {
            this.showContextHeader = false;
          };
          EventCreateComponent.prototype.onSymptomParamRowSelect = function(_event) {
            this.showSymptomParamHeader = true;
          };
          EventCreateComponent.prototype.onSymptomParamRowUnselect = function() {
            this.showSymptomParamHeader = false;
          };
          EventCreateComponent.prototype.editSelectedContextParam = function() {
            this.dataContext = {
              componentId: 'DialogAddSymptomComponent',
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Write,
              object: this.contextTableDataSource.dataSelection[0].value,
              selectedRow: undefined
            };
            this.showContextTableDialog = true;
          };
          EventCreateComponent.prototype.onAddContextParam = function(event) {
            this.contextTableDataSource.dataSelection[0].value = event;
            // to avoid a call to update();
            this.contextTableDataSource.replaceData(
              this.contextTableDataSource.dataSelection[0],
              this.contextTableDataSource.dataSelection[0]
            );
            this.addedContextParam.push(this.contextTableDataSource.dataSelection[0]);
            this.contextTableDataSource.dataSelection = [];
            this.showContextHeader = false;
          };
          EventCreateComponent.prototype.onAddSymptomParamParam = function(event) {
            this.symptomParameterTableDataSource.dataSelection[0].value = event;
            this.symptomParameterTableDataSource.replaceData(
              this.symptomParameterTableDataSource.dataSelection[0],
              this.symptomParameterTableDataSource.dataSelection[0]
            );
            this.addedSymptomParam.push(this.symptomParameterTableDataSource.dataSelection[0]);
            this.symptomParameterTableDataSource.dataSelection = [];
            this.showSymptomParamHeader = false;
          };
          EventCreateComponent.prototype.editSelectedSymptomParam = function() {
            this.dataContext = {
              componentId: 'DialogAddParamValueComponent',
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Write,
              object: this.symptomParameterTableDataSource.dataSelection[0].value,
              selectedRow: undefined
            };
            this.showSymptomParamDialog = true;
          };
          EventCreateComponent.prototype.editSymptom = function() {
            var _this = this;
            this.symptomRowDataSource.dataSrc.filter(function(data, index) {
              if (data.symptomCode === _this.symptomRowDataSource.dataSelection[0].symptomCode) {
                _this.editedSymptomIndex = index;
              }
            });
            this.dataSymptom = {
              componentId: 'DialogAddSymptomComponent',
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Write,
              object: this.symptomRowDataSource.dataSelection[0],
              selectedRow: undefined
            };
            this.showSymptomTableDialog = true;
          };
          EventCreateComponent.prototype.addSymptom = function() {
            this.dataSymptom = {
              componentId: 'DialogAddSymptomComponent',
              openMode:
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Create,
              object: {},
              selectedRow: undefined
            };
            this.showSymptomTableDialog = true;
          };
          EventCreateComponent.prototype.deleteSelectedSymptom = function() {
            this.symptomRowDataSource.deleteDataSelection();
            this.showSymptomHeader = false;
          };
          EventCreateComponent.prototype.onUpdateSymptom = function(event) {
            this.symptomRowDataSource.replaceData(this.symptomRowDataSource.dataSrc[this.editedSymptomIndex], {
              symptomCode: event.symptomCode,
              symptomName: this.getLabel(event.symptomCode, this.symptomNameMap),
              symptomComment: event.symptomComment,
              rowId: event.rowId
            });
            var addedIndex = -1;
            this.symptomAdded.forEach(function(data, index) {
              if (data.rowId === event.rowId) {
                addedIndex = index;
              }
            });
            if (addedIndex !== -1) {
              this.symptomAdded[addedIndex] = this.symptomRowDataSource.dataSrc[this.editedSymptomIndex];
            }
            this.symptomRowDataSource.dataSelection = [];
            this.showSymptomHeader = false;
            this.symptomParameterTableDataSource.setData([]);
          };
          EventCreateComponent.prototype.onAddSymptom = function(event) {
            var isFound = false;
            this.symptomRowDataSource.dataSrc.forEach(function(data) {
              if (data.symptomCode === event.symptomCode) {
                isFound = true;
              }
            });
            if (!isFound) {
              var id = Math.random();
              this.symptomRowDataSource.addData([
                {
                  symptomCode: event.symptomCode,
                  symptomName: this.getLabel(event.symptomCode, this.symptomNameMap),
                  symptomComment: event.symptomComment,
                  rowId: id
                }
              ]);
              this.symptomAdded.push({
                symptomCode: event.symptomCode,
                symptomName: this.getLabel(event.symptomCode, this.symptomNameMap),
                symptomComment: event.symptomComment,
                rowId: id
              });
            } else {
              this.messageService.showErrorMessage(this.getTranslateKey('entryAlreadyExist'));
            }
          };
          /*************************************************************************
           * Opening UC and Dialog Operations
           *************************************************************************/
          EventCreateComponent.prototype.openAsset = function(rowData) {
            if (!!this.bidoEquipmentDTO && !!this.bidoEquipmentDTO.equipmentFunction) {
              this.openLinkEquipment(rowData.equipmentCode, this.bidoEquipmentDTO.equipmentFunction);
            }
          };
          EventCreateComponent.prototype.openLinkAssetEquipment = function(ev) {
            var _this = this;
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.equipmentCode) {
              var bidoEquipmentDTOId = {
                equipmentCode: this.bidoNotificationDTO.equipmentCode
              };
              this.eventCreateService.findBidoEquipment(bidoEquipmentDTOId).subscribe(function(res) {
                _this.openLinkEquipment(res.equipmentCode, res.equipmentFunction);
              });
              ev.stopPropagation();
            }
          };
          EventCreateComponent.prototype.openLinkEquipment = function(code, functionNm) {
            if (code) {
              this.openAssetUC(
                code,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read,
                functionNm
              );
            }
          };
          EventCreateComponent.prototype.openLinkedEventAsset = function(code) {
            var _this = this;
            var bidoNotificationDTOId = {
              notificationCode: code
            };
            this.eventCreateService.findBidoNotification(bidoNotificationDTOId).subscribe(function(res) {
              if (!!res) {
                var bidoNotificationDTO = {
                  bidoNotificationTypeDTO: {
                    typeCode: res.typeCode
                  },
                  notificationCode: res.notificationCode,
                  typeCode: res.typeCode
                };
                if (!!res.bidoNotificationTypeDTO && res.bidoNotificationTypeDTO.typeCategory === '5-def') {
                  _this.openDefect(bidoNotificationDTO.notificationCode);
                } else {
                  _this.openEventUC(
                    bidoNotificationDTO,
                    _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
                  );
                }
              }
            });
          };
          EventCreateComponent.prototype.openAssetUC = function(objectId, openMode, functionNm) {
            var labelNm;
            var componentName;
            if (
              functionNm &&
              functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_AIRCRAFT_KEY
            ) {
              labelNm = 'transaction.AircraftFormComponent';
              componentName = 'AircraftFormComponent';
            } else if (
              functionNm &&
              functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_ENGINE_KEY
            ) {
              labelNm = 'transaction.EngineFormComponent';
              componentName = 'EngineFormComponent';
            } else if (
              functionNm &&
              functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_TOOL_KEY
            ) {
              labelNm = 'transaction.ToolFormComponent';
              componentName = 'ToolFormComponent';
            } else {
              labelNm = 'transaction.EquipmentFormComponent';
              componentName = 'EquipmentFormComponent';
            }
            var labelKey = labelNm;
            var data = {
              id: this.tabService.generateId(),
              componentId: componentName,
              openMode: openMode
            };
            if (!!objectId) {
              var equipmentId = {
                equipmentCode: objectId
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          EventCreateComponent.prototype.openEvent = function(rowData) {
            var bidoNotificationDTO = {
              bidoNotificationTypeDTO: {
                typeCode: rowData.typeCode
              },
              notificationCode: rowData.notificationCode,
              typeCode: rowData.typeCode
            };
            this.openEventUC(
              bidoNotificationDTO,
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
            );
          };
          EventCreateComponent.prototype.openEvolutionDialog = function(event) {
            if (
              !this.isReadOpenMode &&
              !_shared_utils_dom_utils__WEBPACK_IMPORTED_MODULE_32__['DomUtils'].isTargetDisabled(event.target)
            ) {
              this.showEvolutionDialog = true;
            }
          };
          EventCreateComponent.prototype.openEventUC = function(objectId, openMode) {
            var data = {
              id: this.tabService.generateId(),
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_13__['ComponentConstants']
                  .FLE_EVENT_CREATE,
              openMode: openMode
            };
            if (!!objectId) {
              var eventId = {
                notificationCode: objectId.notificationCode
              };
              data.objectId = this.serializationService.serialize(eventId);
            }
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          EventCreateComponent.prototype.openEquipment = function(objectId, openMode) {
            var labelNm;
            var componentName;
            var functionNm = this.bidoEquipmentDTO.equipmentFunction;
            if (
              !functionNm ||
              functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_MAJOR_EQUIPMENT_KEY
            ) {
              labelNm = 'transaction.EquipmentFormComponent';
              componentName = 'EquipmentFormComponent';
            } else {
              if (
                functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_ENGINE_KEY
              ) {
                labelNm = 'transaction.EngineFormComponent';
                componentName = 'EngineFormComponent';
              } else if (
                functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_AIRCRAFT_KEY
              ) {
                labelNm = 'transaction.AircraftFormComponent';
                componentName = 'AircraftFormComponent';
              } else {
                labelNm = 'transaction.EquipmentFormComponent';
                componentName = 'EquipmentFormComponent';
              }
            }
            var labelKey = labelNm;
            var data = {
              id: this.tabService.generateId(),
              componentId: componentName,
              openMode: openMode
            };
            if (!!objectId) {
              var equipmentId = {
                equipmentCode: objectId
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          EventCreateComponent.prototype.onSelectedEvolution = function(customerEvolution) {
            if (!!customerEvolution) {
              this.notificationEvolutionDTO.evolutionNumber = customerEvolution.evolutionNumber;
              this.notificationEvolutionDTO.evolutionRevisionNumber = customerEvolution.evolutionRevisionNumber;
              if (!!this.notificationEvolutionDTO && !!this.notificationEvolutionDTO.evolutionType) {
                this.evolutionType = this.evolutionSourceMap.get(this.notificationEvolutionDTO.evolutionType);
              }
            }
          };
          EventCreateComponent.prototype.openWorkOrderUC = function(workOrder) {
            if (!this.workOrder || !this.workOrder.projectId || !this.workOrder.woId) {
              return;
            }
            var bidmWorkOrderDTOId = {
              projectId: this.workOrder.projectId,
              woId: this.workOrder.woId
            };
            this.openWOUC(bidmWorkOrderDTOId);
          };
          EventCreateComponent.prototype.openWOUC = function(bidmWorkOrderDTOId) {
            var data = {
              id: this.tabService.generateId(),
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_13__['ComponentConstants']
                  .MAI_WORK_ORDER_FORM,
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Write,
              objectId: this.serializationService.serialize(bidmWorkOrderDTOId)
            };
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          EventCreateComponent.prototype.openEvolutionUC = function(evolutionKey) {
            var evolArr = evolutionKey.split(' ')[0].split('-');
            var bireEvolutionId = {
              evolutionNumber: evolArr[0],
              evolutionRevisionNumber: evolArr[1]
            };
            this.openEvolution(
              bireEvolutionId,
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
            );
          };
          EventCreateComponent.prototype.openEvolution = function(objectId, openMode) {
            var labelKey = 'transaction.EvolutionFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'EvolutionFormComponent',
              objectId: this.serializationService.serialize(objectId),
              openMode: openMode
            };
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          EventCreateComponent.prototype.searchEventCode = function(event) {
            if (
              !this.isReadOpenMode &&
              !_shared_utils_dom_utils__WEBPACK_IMPORTED_MODULE_32__['DomUtils'].isTargetDisabled(event.target)
            ) {
              if (!this.isFieldEnabled) {
                this.showQuickSearchEventPopup = true;
              }
            }
          };
          EventCreateComponent.prototype.getEvent = function() {
            var _this = this;
            this.isShowEventStatus = false;
            if (!!this.bidoNotificationDTO.notNotificationCode) {
              var searchObject = {
                notificationCode: this.bidoNotificationDTO.notNotificationCode
              };
              this.eventCreateService.findEvent(searchObject).subscribe(function(res) {
                if (!!res.list && res.list.length > 0) {
                  _this.linkedEventType = res.list[0].eventType;
                  _this.linkedEventSubject = res.list[0].eventSubject;
                  _this.isShowEventStatus = res.list[0].notificationStatusVisibility || false;
                  if (!!res.list[0]) {
                    _this.linkedEventStatus = _this.statusMap.filter(function(resp) {
                      return resp.value === res.list[0].eventStatus;
                    })[0].label;
                  }
                }
              });
            }
          };
          EventCreateComponent.prototype.resetEventField = function() {
            this.bidoNotificationDTO.notNotificationCode = undefined;
            this.linkedEventType = undefined;
            this.linkedEventSubject = undefined;
            this.linkedEventStatus = undefined;
          };
          EventCreateComponent.prototype.searchAsset = function(event, source) {
            if (
              !this.isReadOpenMode &&
              !this.isFieldEnabled &&
              !_shared_utils_dom_utils__WEBPACK_IMPORTED_MODULE_32__['DomUtils'].isTargetDisabled(event.target)
            ) {
              this.showQuickSearchEquipmentPopup = true;
              this.assetDialogSource = source;
            }
          };
          EventCreateComponent.prototype.resetAssetField = function(ev) {
            this.notificationAsset = '';
            this.bidoNotificationDTO.equipmentCode = undefined;
            ev.stopPropagation();
          };
          EventCreateComponent.prototype.setSelectedEvent = function(event) {
            var _this = this;
            if (!!event) {
              if (!!this.bidoNotificationDTO) {
                this.bidoNotificationDTO.notNotificationCode = event.eventCode;
                this.linkedEventSubject = event.eventSubject;
                if (!!event.eventStatus) {
                  this.linkedEventStatus = this.statusMap.filter(function(res) {
                    return res.value === event.eventStatus;
                  })[0].label;
                }
                this.linkedEventInfo = event;
                // Event Type Map
                this.eventCreateService
                  .findAllBidoNotificationTypeByTypeCategory(event.eventCategory)
                  .subscribe(function(res) {
                    res.forEach(function(dto) {
                      if (dto.typeCode === event.eventType) {
                        _this.linkedEventType = dto.typeDescription;
                      }
                    });
                  });
              }
            }
          };
          EventCreateComponent.prototype.setSelectedAsset = function(event) {
            var _this = this;
            if (!!event) {
              if (this.assetDialogSource === 0) {
                this.bidoNotificationDTO.equipmentCode = !!event.equipmentCode ? event.equipmentCode : '';
                if (!this.isCreateOpenMode) {
                  this.getBidoEquipment();
                } else {
                  this.getBidoEquipmentWithRepresentation(this.bidoNotificationDTO.equipmentCode);
                }
              } else if (this.assetDialogSource === 1) {
                if (!!event) {
                  this.bidoNotificationDTO.taskAssetCode = event.equipmentCode;
                  this.selectedAssetPN = event.pnCode;
                  this.selectedAssetSN = event.sn;
                  this.fetchEquipmentName(event.equipmentCode, function(name) {
                    _this.selectedAssetName = !!name ? name : undefined;
                  });
                  this.selectedAssetDesignation = event.equipmentDesignation;
                }
              } else {
                if (!!event) {
                  this.defectAssetCode = event.equipmentCode;
                  this.defectEquipmentSn = event.sn;
                  this.defectEquipmentPn = event.pnCode;
                  this.fetchEquipmentName(event.equipmentCode, function(name) {
                    _this.defectEquipmentName = !!name ? name : undefined;
                  });
                  var arr = !!event.ataCode ? event.ataCode : undefined;
                  if (!!arr) {
                    var three = 3;
                    var four = 4;
                    var five = 5;
                    this.eventAtaCode.chapter = arr[1];
                    this.eventAtaCode.section = arr[2];
                    this.eventAtaCode.subject = arr[three];
                    this.eventAtaCode.sheet = arr[four];
                    this.eventAtaCode.marks = arr[five];
                  }
                }
              }
            }
          };
          EventCreateComponent.prototype.openDefect = function(objectId) {
            if (!!objectId) {
              var data = {
                id: this.tabService.generateId(),
                componentId:
                  _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_13__['ComponentConstants']
                    .FLE_DEFECT_FORM,
                openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
              };
              var defectId = {
                notificationCode: objectId
              };
              data.objectId = this.serializationService.serialize(defectId);
              var labelKey = 'transaction.' + data.componentId;
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          /*************************************************************************
           * Status Update History Popup Operations
           *************************************************************************/
          EventCreateComponent.prototype.openStatusUpdatesPopup = function() {
            var bidoNotificationDTOId = {
              notificationCode: this.bidoNotificationDTO.notificationCode
            };
            this.showStatusUpdatesPopup = true;
            this.eventStatus = __assign({}, this.bidoNotificationDTO);
            var columns = [
              {
                field: 'timestamp',
                width: '200px',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input,
                isDate: true,
                alignment: 'left'
              },
              {
                field: 'statusUser',
                width: '200px',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'statusState',
                width: '250px',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'action',
                width: '200px',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input,
                alignment: 'left'
              },
              {
                field: 'type',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'subject',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'status',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'cause',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'priority',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'owner',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'operator',
                alignment: 'left',
                width: '6.25rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_18__['TableColumnFilterMode']
                    .Input
              }
            ];
            this.updatesKeyMap.set('statusState', this.propertiesService.getValue('getFuncObjectStatusMap'));
            this.tableStatusUpdatesData = {
              componentId: 'EventCreateComponent.historicPopup',
              tableCols: columns,
              tableRows: this.eventCreateService.findHBidoNotifications(bidoNotificationDTOId),
              dataKey: undefined,
              selectionMode:
                _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_19__['TableSelectionMode'].Multiple,
              globalFilter: false
            };
          };
          /**************************************************************************
           * Save Operations
           *************************************************************************/
          EventCreateComponent.prototype.preSavedEvent = function() {
            var _this = this;
            if (this.selectedRootCause === 'defectItem') {
              if (
                !this.eventAtaCode.chapter ||
                !this.eventAtaCode.section ||
                !this.eventAtaCode.subject ||
                !this.eventAtaCode.sheet ||
                !this.eventAtaCode.marks
              ) {
                this.messageService.showErrorMessage(this.getTranslateKey('itemCodeMandatory'));
                return;
              }
              this.isItemExists().subscribe(function(result) {
                if (result.list.length > 0) {
                  _this.saveEvent();
                } else {
                  _this.messageService.showErrorMessage(_this.getTranslateKey('itemCodeMissing'));
                }
              });
            } else {
              this.saveEvent();
            }
          };
          EventCreateComponent.prototype.saveEvent = function() {
            var _this = this;
            this.eventHasBeenSaved = false;
            if (this.isScreenValidated()) {
              if (this.isTypeValid()) {
                if (this.checkEventStatus()) {
                  if (this.isCreateOpenMode) {
                    if (this.isDateFromFuture()) {
                      this.bidoNotificationDTO.typeCode = this.selectedType;
                      this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCode = this.selectedType;
                      if (!!this.sessionService.loggedUser) {
                        this.bidoNotificationDTO.statusUser = this.sessionService.loggedUser.login;
                      }
                      this.bidoNotificationDTO.operatorCode = this.bidoEquipmentDTO.operatorCustomerCode;
                      this.bidoNotificationDTO.ownerCode = this.bidoEquipmentDTO.ownerCustomerCode;
                      this.bidoNotificationDTO.familyVariantCode = this.bidoEquipmentDTO.familyVariantCode;
                      if (!!this.bidoEquipmentDTO.currentBidoEquipmentData) {
                        this.bidoNotificationDTO.chapter = this.bidoEquipmentDTO.currentBidoEquipmentData.chapter;
                        this.bidoNotificationDTO.section = this.bidoEquipmentDTO.currentBidoEquipmentData.section;
                        this.bidoNotificationDTO.sheet = this.bidoEquipmentDTO.currentBidoEquipmentData.sheet;
                        this.bidoNotificationDTO.subject = this.bidoEquipmentDTO.currentBidoEquipmentData.subject;
                        this.bidoNotificationDTO.marks = this.bidoEquipmentDTO.currentBidoEquipmentData.marks;
                        this.bidoNotificationDTO.statusState = this.bidoEquipmentDTO.currentBidoEquipmentData.statusState;
                        this.bidoNotificationDTO.statusDate = this.bidoEquipmentDTO.currentBidoEquipmentData.statusDate;
                      }
                      this.showSaveSpinner = true;
                      this.eventCreateService
                        .createBidoNotification(this.bidoNotificationDTO)
                        .pipe(
                          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__['finalize'])(function() {
                            _this.showSaveSpinner = false;
                          })
                        )
                        .subscribe(function(res) {
                          _this.bidoNotificationDTO.notificationCode = res.notificationCode;
                          if (
                            !!_this.bidoNotificationDTO &&
                            !!_this.bidoNotificationDTO.bidoNotificationTypeDTO &&
                            _this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory === '5-def'
                          ) {
                            _this.closeComponent();
                            var timer = 10;
                            setTimeout(function() {
                              _this.openDefect(_this.bidoNotificationDTO.notificationCode);
                            }, timer);
                          } else {
                            _this.updateOpenMode(
                              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode']
                                .Read
                            );
                            _this.getBidoNotificationData();
                            _this.isStatusEnabled();
                            _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnCreateEvent'));
                          }
                        });
                    } else {
                      this.messageService.showErrorMessage(this.getTranslateKey('dateFromFuture'));
                    }
                  } else {
                    if (this.isDateFromFuture()) {
                      if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.notificationCode) {
                        // Attributes
                        this.bireNotificationAttributes = this.dynamicAttributesService.toBireEventAttributeId(
                          this.bidoNotificationDTO.notificationCode,
                          this.dynamicAttributesForEvent
                        );
                        this.setAttributeArray();
                      }
                      this.setRootCauseTabData();
                      this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCode = this.selectedType; // Setting the type field
                      this.bidoNotificationDTO.typeCode = this.selectedType; // Setting the type field
                      var saveEventInput = {
                        bidoNotificationDTO: this.bidoNotificationDTO,
                        bireNotificationAttributes: this.bireNotificationAttributes,
                        bidoDocumentAddedList: this.documentsAdded,
                        bidoDocumentRemovedList: this.documentsRemoved,
                        bidoDocumentUpdatedList: this.documentsUpdated
                      };
                      var circumstancesDTO = this.setCircumstanceTabData();
                      if (Object.keys(circumstancesDTO).length > 0) {
                        saveEventInput.saveBidoEventExtensionCustomDTO = circumstancesDTO;
                      }
                      if (this.isEvolutionTabVisible) {
                        var bidoNotificationEvolutionDTO = {
                          evolutionNumber: this.notificationEvolutionDTO.evolutionNumber,
                          evolutionRevisionNumber: this.notificationEvolutionDTO.evolutionRevisionNumber,
                          evolutionType: this.notificationEvolutionDTO.evolutionType,
                          notificationCode: this.bidoNotificationDTO.notificationCode
                        };
                        saveEventInput.saveBidoNotificationEvolution = bidoNotificationEvolutionDTO;
                      }
                      this.showSaveSpinner = true;
                      this.eventCreateService.saveEvent(saveEventInput).subscribe(
                        function(res) {
                          _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnSaveEvent'));
                          _this.resetData();
                          _this.getBidoNotificationData();
                          _this.showSaveSpinner = false;
                          _this.updateOpenMode(
                            _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode']
                              .Read
                          );
                        },
                        function(error) {
                          _this.showSaveSpinner = false;
                        }
                      );
                      this.eventHasBeenSaved = true;
                    } else {
                      this.messageService.showErrorMessage(this.getTranslateKey('dateFromFuture'));
                    }
                  }
                }
              }
            } else {
              this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');
            }
          };
          EventCreateComponent.prototype.resetData = function() {
            this.bireNotificationAttributes = [];
            this.documentsAdded = [];
            this.documentsUpdated = [];
            this.documentsRemoved = [];
            this.symptomAdded = [];
            this.addedContextParam = [];
            this.addedSymptomParam = [];
          };
          EventCreateComponent.prototype.setRootCauseTabData = function() {
            // Setting asset block
            if (!!this.defectAssetCode) {
              if (!this.bidoNotificationDTO.bidoRootCauseDTO) {
                this.bidoNotificationDTO.bidoRootCauseDTO = {};
                this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseAssetCode = this.defectAssetCode;
              } else {
                this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseAssetCode = this.defectAssetCode;
              }
            }
            if (!!this.rootCausePn) {
              if (!this.bidoNotificationDTO.bidoRootCauseDTO) {
                this.bidoNotificationDTO.bidoRootCauseDTO = {};
                this.bidoNotificationDTO.bidoRootCauseDTO.rootCausePn = this.rootCausePn;
              } else {
                this.bidoNotificationDTO.bidoRootCauseDTO.rootCausePn = this.rootCausePn;
              }
            }
            if (!!this.rootCauseQuantity) {
              if (!this.bidoNotificationDTO.bidoRootCauseDTO) {
                this.bidoNotificationDTO.bidoRootCauseDTO = {};
                this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseQuantity = this.rootCauseQuantity;
              } else {
                this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseQuantity = this.rootCauseQuantity;
              }
            }
            if (!!this.eventAtaCode.chapter) {
              if (!this.bidoNotificationDTO.bidoRootCauseDTO) {
                this.bidoNotificationDTO.bidoRootCauseDTO = {};
              }
              this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseChapter = this.eventAtaCode.chapter;
              this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseSection = this.eventAtaCode.section;
              this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseSubject = this.eventAtaCode.subject;
              this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseSheet = this.eventAtaCode.sheet;
              this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseMark = this.eventAtaCode.marks;
            }
            if (!!this.rootCauseFlCode) {
              if (!this.bidoNotificationDTO.bidoRootCauseDTO) {
                this.bidoNotificationDTO.bidoRootCauseDTO = {};
                this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseFlCode = this.rootCauseFlCode;
              } else {
                this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseFlCode = this.rootCauseFlCode;
              }
            }
            // Setting defect block
            if (!!this.bidoNotificationDTO.bidoRootCauseDTO) {
              this.bidoNotificationDTO.bidoRootCauseDTO.defectLocation = this.selectedDefectLocation;
              this.bidoNotificationDTO.bidoRootCauseDTO.defectName = this.selectedDefectName;
              this.bidoNotificationDTO.bidoRootCauseDTO.rootCauseComment = this.rootCauseComment;
            }
          };
          EventCreateComponent.prototype.setCircumstanceTabData = function() {
            var _this = this;
            var symptomArr = [];
            this.symptomRowDataSource.dataSrc.forEach(function(res) {
              symptomArr.push({
                notificationCode: _this.bidoNotificationDTO.notificationCode,
                extensionCode: res.symptomCode,
                extensionComment: res.symptomComment
              });
            });
            var eventExtensionDTO;
            if (!!this.contextTabData.symptomCode) {
              eventExtensionDTO = {
                contextMissionType: this.contextTabData.missionType,
                extensionCode: this.contextTabData.symptomCode,
                extensionComment: this.contextTabData.symptomComment,
                notificationCode: this.bidoNotificationDTO.notificationCode
              };
            } else {
              eventExtensionDTO = {};
            }
            var saveBidoEventExtensionCustomDTO = {};
            if (!!eventExtensionDTO && Object.keys(eventExtensionDTO).length > 0) {
              var paramDTO_1 = [];
              this.contextTableDataSource.data.forEach(function(row) {
                paramDTO_1.push({
                  extensionCode: _this.contextTabData.symptomCode,
                  notificationCode: _this.bidoNotificationDTO.notificationCode,
                  parameterCode: row.code,
                  parameterValue: !!row.value ? row.value : undefined
                });
              });
              eventExtensionDTO.bidoEventParameterDTOList = paramDTO_1;
              saveBidoEventExtensionCustomDTO.bidoEventExtensionDTO = eventExtensionDTO;
              saveBidoEventExtensionCustomDTO.notificationCode = this.bidoNotificationDTO.notificationCode;
            }
            if (symptomArr.length > 0) {
              this.symptomParameterTableDataSource.data.forEach(function(param) {
                symptomArr.forEach(function(symptom) {
                  if (param.extensionCode === symptom.extensionCode) {
                    var paramDTO = {};
                    paramDTO = {
                      extensionCode: symptom.extensionCode,
                      notificationCode: _this.bidoNotificationDTO.notificationCode,
                      parameterCode: param.code,
                      parameterValue: !!param.value ? param.value : undefined
                    };
                    if (!!symptom) {
                      if (symptom.bidoEventParameterDTOList !== undefined) {
                        symptom.bidoEventParameterDTOList.push(paramDTO);
                      } else {
                        symptom.bidoEventParameterDTOList = [];
                        symptom.bidoEventParameterDTOList.push(paramDTO);
                      }
                    }
                  }
                });
              });
              saveBidoEventExtensionCustomDTO.bidoEventExtensionDTOList = symptomArr;
              saveBidoEventExtensionCustomDTO.notificationCode = this.bidoNotificationDTO.notificationCode;
            }
            return saveBidoEventExtensionCustomDTO;
          };
          EventCreateComponent.prototype.isDateFromFuture = function() {
            var res = false;
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.reportingPeriodStartDate) {
              var now = new Date();
              if (this.bidoNotificationDTO.reportingPeriodStartDate <= now) {
                res = true;
              } else {
                res = false;
                return false;
              }
              if (!!this.bidoNotificationDTO.reportingPeriodEndDate) {
                if (this.bidoNotificationDTO.reportingPeriodEndDate <= now) {
                  res = true;
                } else {
                  res = false;
                  return false;
                }
              }
              if (!!this.bidoNotificationDTO.reportingDate) {
                if (this.bidoNotificationDTO.reportingDate <= now) {
                  res = true;
                } else {
                  res = false;
                  return false;
                }
              }
            }
            return res;
          };
          EventCreateComponent.prototype.isTypeValid = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              if (
                this.isCreateOpenMode &&
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_CATEGORY_MAINTENANCE_KEY &&
                (this.selectedType === 'AS' || this.selectedType === 'DI' || this.selectedType === 'RP')
              ) {
                this.messageService.showWarningMessage(this.getTranslateKey('cannotCreateEvent'));
                return false;
              }
              if (
                this.isCreateOpenMode &&
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_CATEGORY_OPERATIONAL_KEY &&
                this.selectedType === 'MS'
              ) {
                this.messageService.showWarningMessage(this.getTranslateKey('cannotCreateEvent'));
                return false;
              }
              if (this.bidoNotificationDTO.typeCode !== EventCreateComponent_1.WPR_TYPE_CODE) {
                if (
                  this.bidoNotificationDTO.status ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_STATUS_UNDER_INVESTIGATION_KEY
                ) {
                  if (
                    !this.defectAssetCode &&
                    !this.rootCausePn &&
                    !this.rootCauseFlCode &&
                    !this.eventAtaCode.chapter &&
                    !this.eventAtaCode.section &&
                    !this.eventAtaCode.subject &&
                    !this.eventAtaCode.sheet &&
                    !this.eventAtaCode.marks
                  ) {
                    this.messageService.showWarningMessage(this.getTranslateKey('rootCauseIsMandatory'));
                    return false;
                  }
                }
              }
              if (
                !this.isCreateOpenMode &&
                this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_CATEGORY_CONFIGURATION_KEY
              ) {
                if (
                  this.notificationEvolutionDTO.evolutionNumber === undefined &&
                  this.notificationEvolutionDTO.evolutionRevisionNumber === undefined
                ) {
                  this.messageService.showWarningMessage(this.getTranslateKey('entryOfValidEvolutionNumber'));
                  return false;
                }
              }
              if (!this.isCreateOpenMode && this.selectedType === 'TA') {
                if (
                  this.bidoNotificationDTO.taskCode === undefined ||
                  this.bidoNotificationDTO.taskVersion === undefined
                ) {
                  this.messageService.showWarningMessage(this.getTranslateKey('entryOfValidTaskIsRequired'));
                  return false;
                }
              }
            }
            return true;
          };
          EventCreateComponent.prototype.isScreenValidated = function() {
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
              var missingFields = this.checkMandatoryFields(
                __assign({}, this.bidoNotificationDTO, this.contextTabData, this.notificationEvolutionDTO, {
                  dynamicAttributes: this.dynamicAttributesForEvent,
                  notificationCode: this.bidoNotificationDTO.notificationCode,
                  typeCategory: this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory,
                  notificationDescription2: this.bidoNotificationDTO.notificationDescription,
                  linkedEventStatus: this.linkedEventStatus,
                  selectedAssetPN: this.selectedAssetPN,
                  selectedDefectLocation: this.selectedDefectLocation,
                  contextTableDataSourceTitle: this.contextTableDataSource.dataSrc,
                  defectAssetCode: this.defectAssetCode,
                  bireDocumentDisplayedDataSourceTitle: this.bireDocumentDisplayedDataSource.dataSrc,
                  linkedEventSubject: this.linkedEventSubject,
                  linkedEventType: this.linkedEventType,
                  selectedAssetName: this.selectedAssetName,
                  functionLocationStr: this.functionLocationStr,
                  eventAtaCode: this.eventAtaCode.chapter,
                  selectedType: this.selectedType,
                  requestDecisionAuthorTxt: this.requestDecisionAuthorTxt,
                  workPostponmentRefusalReason: this.workPostponmentRefusalReason,
                  selectedDefectName: this.selectedDefectName,
                  selectedTaskDescription: this.selectedTaskDescription,
                  originalDeadlines2: this.originalDeadlines,
                  oldAssetName: this.oldAssetName,
                  rootCauseQuantity: this.rootCauseQuantity,
                  diffusionTableDataSourceTitle: this.diffusionTableDataSource.dataSrc,
                  flightRestriction: this.flightRestriction,
                  assetDesignation: this.assetDesignation,
                  defectEquipmentName: this.defectEquipmentName,
                  evolutionType: this.evolutionType,
                  symptomRowDataSourceTitle: this.symptomRowDataSource.dataSrc,
                  symptomParameterTableDataSourceTitle: this.symptomParameterTableDataSource.dataSrc,
                  shopName: this.shopName,
                  postponementAuthorizationNum: this.postponementAuthorizationNum,
                  shopTechnicalLevel: this.shopTechnicalLevel,
                  workPostponmentDecisionAuthor: this.workPostponmentDecisionAuthor,
                  isIgnoreInitialDeadlines: this.isIgnoreInitialDeadlines,
                  systemReference: this.systemReference,
                  selectedSearchAsset: this.selectedSearchAsset,
                  selectedTaskDesignation: this.selectedTaskDesignation,
                  defectEquipmentPn: this.defectEquipmentPn,
                  rootCausePn: this.rootCausePn,
                  requestAuthorTxt: this.requestAuthorTxt,
                  oldDesignation: this.oldDesignation,
                  originalDeadlines: this.originalDeadlines,
                  selectedAssetSN: this.selectedAssetSN,
                  notificationAsset: this.notificationAsset,
                  selectedSystemId: this.selectedSystemId,
                  bidoMeasuresDisplayedDataSourceTitle: this.bidoMeasuresDisplayedDataSource.dataSrc,
                  isIgnoreInitialDeadlines2: this.isIgnoreInitialDeadlines,
                  arisingEventTableDataSourceTitle: this.arisingEventTableDataSource.dataSrc,
                  postponementNewLimitDate: this.postponementNewLimitDate,
                  rootCauseComment: this.rootCauseComment,
                  defectEquipmentSn: this.defectEquipmentSn,
                  assetName: this.assetName,
                  location: this.location,
                  selectedAssetDesignation: this.selectedAssetDesignation,
                  rootCauseFlCode: this.rootCauseFlCode,
                  selectedRootCause: this.selectedRootCause
                })
              );
              if (
                missingFields.length === 0 &&
                !!this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory &&
                !!this.selectedType &&
                !!this.bidoNotificationDTO.reportingPeriodStartDate &&
                !!this.bidoNotificationDTO.equipmentCode
              ) {
                return true;
              }
            }
            return false;
          };
          EventCreateComponent.prototype.setAttributeArray = function() {
            var attribute1 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_SYSTEM_SOURCE_ID.toString(),
              attributeValue: this.selectedSystemId
            };
            var attribute2 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_SYSTEM_SOURCE_REFERENCE.toString(),
              attributeValue: this.systemReference
            };
            var attribute3 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_WORK_POSTPONEMENT_REQUEST_AUTHORIZATION_NUMBER.toString(),
              attributeValue: this.requestAuthorTxt
            };
            var attribute4 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_WORK_POSTPONEMENT_REQUEST_WO_CONTEXT.toString(),
              attributeValue: this.postponmentRelatedWO
            };
            var attribute5 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_WORK_POSTPONEMENT_REQUEST_DECISION_LAST_AUTHOR.toString(),
              attributeValue: this.requestDecisionAuthorTxt
            };
            var attribute6 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_WORK_POSTPONEMENT_REQUEST_AUTHORIZATION_NUMBER.toString(),
              attributeValue: this.postponementAuthorizationNum
            };
            var attribute7 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_WORK_POSTPONEMENT_REQUEST_LIMIT_DATE.toString(),
              attributeValue: this.postponementNewLimitDate ? this.postponementNewLimitDate.toString() : undefined
            };
            var attribute8 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_WORK_POSTPONEMENT_REQUEST_FLIGHT_RESTRICTIONS.toString(),
              attributeValue: this.flightRestriction
            };
            var attribute9 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].MAINTENANCE_PLAN_ORIGINAL_DEADLINES.toString(),
              attributeValue: this.originalDeadlines
            };
            var attribute10 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].IGNORE_INITIAL_DEADLINE_NEXT_OCCURRENCE_CALCULATION.toString(),
              attributeValue: this.isIgnoreInitialDeadlines ? this.isIgnoreInitialDeadlines.toString() : 'false'
            };
            if (this.specificSNVisibility) {
              var attribute11 = {
                notificationCode: this.bidoNotificationDTO.notificationCode,
                attributeId: '140',
                attributeValue: this.shopName
              };
              var attribute12 = {
                notificationCode: this.bidoNotificationDTO.notificationCode,
                attributeId: '141',
                attributeValue: this.shopTechnicalLevel
              };
              this.bireNotificationAttributes.push(attribute11);
              this.bireNotificationAttributes.push(attribute12);
            }
            var attribute13 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_WORK_POSTPONEMENT_REQUEST_REFUSAL_REASON.toString(),
              attributeValue: this.workPostponmentRefusalReason
            };
            var attribute14 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_WORK_POSTPONEMENT_REQUEST_DECISION_LAST_AUTHOR.toString(),
              attributeValue: this.workPostponmentDecisionAuthor
            };
            var attribute15 = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_9__[
                'BidoAttributeConstants'
              ].EVENT_LOCATION.toString(),
              attributeValue: this.location
            };
            this.bireNotificationAttributes.push(attribute1);
            this.bireNotificationAttributes.push(attribute2);
            this.bireNotificationAttributes.push(attribute3);
            this.bireNotificationAttributes.push(attribute4);
            this.bireNotificationAttributes.push(attribute5);
            this.bireNotificationAttributes.push(attribute6);
            this.bireNotificationAttributes.push(attribute7);
            this.bireNotificationAttributes.push(attribute8);
            this.bireNotificationAttributes.push(attribute9);
            this.bireNotificationAttributes.push(attribute10);
            this.bireNotificationAttributes.push(attribute13);
            this.bireNotificationAttributes.push(attribute14);
            this.bireNotificationAttributes.push(attribute15);
          };
          EventCreateComponent.prototype.checkEventStatus = function() {
            var _this = this;
            if (!this.isCreateOpenMode) {
              var currentEventStatus = this.bidoNotificationDTO.status;
              var previousEventStatus_1 = this.savedEventStatus;
              if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.bidoNotificationTypeDTO) {
                if (!this.selectedType) {
                  this.messageService.showErrorMessage(this.getTranslateKey('eventTypeMandatory'));
                  if (
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_CATEGORY_OPERATIONAL_KEY === this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
                  ) {
                    setTimeout(function() {
                      _this.bidoNotificationDTO.status = previousEventStatus_1;
                    }, EventCreateComponent_1.TIMEOUT_LIMIT);
                  }
                  return false;
                } else if (!this.bidoEquipmentDTO) {
                  this.messageService.showErrorMessage(this.getTranslateKey('noEquipmentSelected'));
                  if (
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_CATEGORY_OPERATIONAL_KEY === this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
                  ) {
                    setTimeout(function() {
                      _this.bidoNotificationDTO.status = previousEventStatus_1;
                    }, EventCreateComponent_1.TIMEOUT_LIMIT);
                  }
                  return false;
                } else if (!this.bidoNotificationDTO.reportingPeriodStartDate) {
                  if (
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_CATEGORY_OPERATIONAL_KEY === this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
                  ) {
                    setTimeout(function() {
                      _this.bidoNotificationDTO.status = previousEventStatus_1;
                    }, EventCreateComponent_1.TIMEOUT_LIMIT);
                  }
                  return false;
                } else if (!!this.bidoNotificationDTO.reportingPeriodStartDate && !this.isDateFromFuture()) {
                  this.messageService.showErrorMessage(this.getTranslateKey('futureDateApplied'));
                  if (
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_CATEGORY_OPERATIONAL_KEY === this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
                  ) {
                    setTimeout(function() {
                      _this.bidoNotificationDTO.status = previousEventStatus_1;
                    }, EventCreateComponent_1.TIMEOUT_LIMIT);
                  }
                  return false;
                } else if (!!this.bidoNotificationDTO.reportingDate && !this.isDateFromFuture()) {
                  this.messageService.showErrorMessage(this.getTranslateKey('futureDateApplied'));
                  if (
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_CATEGORY_OPERATIONAL_KEY === this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
                  ) {
                    setTimeout(function() {
                      _this.bidoNotificationDTO.status = previousEventStatus_1;
                    }, EventCreateComponent_1.TIMEOUT_LIMIT);
                  }
                  return false;
                } else if (!!this.bidoNotificationDTO.reportingPeriodEndDate && !this.isDateFromFuture()) {
                  this.messageService.showErrorMessage(this.getTranslateKey('futureDateApplied'));
                  if (
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_CATEGORY_OPERATIONAL_KEY === this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
                  ) {
                    setTimeout(function() {
                      _this.bidoNotificationDTO.status = previousEventStatus_1;
                    }, EventCreateComponent_1.TIMEOUT_LIMIT);
                  }
                  return false;
                } else if (
                  !!this.bidoNotificationDTO.reportingPeriodStartDate &&
                  !!this.bidoNotificationDTO.reportingPeriodEndDate &&
                  !this.endAfterStart(
                    this.bidoNotificationDTO.reportingPeriodStartDate,
                    this.bidoNotificationDTO.reportingPeriodEndDate
                  )
                ) {
                  this.messageService.showErrorMessage(this.getTranslateKey('eventDateGreaterThanEndDate'));
                  if (
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_CATEGORY_OPERATIONAL_KEY === this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
                  ) {
                    setTimeout(function() {
                      _this.bidoNotificationDTO.status = previousEventStatus_1;
                    }, EventCreateComponent_1.TIMEOUT_LIMIT);
                  }
                  return false;
                }
                if (
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                    .EVENT_CATEGORY_OPERATIONAL_KEY === this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory
                ) {
                  // If we are in DRAFT status or if we do not change to DRAFT status
                  if (
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_STATUS_DRAFT_KEY === previousEventStatus_1 ||
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_STATUS_DRAFT_KEY !== currentEventStatus
                  ) {
                    // wdContext.currentContextElement().setOpenStatusState(WDState.REQUIRED);
                    // this.bidoNotificationDTO.status = AWPropertiesConstants.EVENT_STATUS_OPENED_KEY;
                  }
                  // Si on est au statut OPEN ou si on change pas pour aller au statut OPEN ou DRAFT
                  if (
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_STATUS_OPENED_KEY === previousEventStatus_1 ||
                    (_shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_STATUS_DRAFT_KEY !== currentEventStatus &&
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_STATUS_OPENED_KEY !== currentEventStatus)
                  ) {
                    // wdContext.currentContextElement().setUnderInvestigationState(WDState.REQUIRED);
                    // this.bidoNotificationDTO.status = AWPropertiesConstants.EVENT_STATUS_UNDER_INVESTIGATION_KEY;
                  }
                  // Notification Date obligatoire si Non Draft
                  if (
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_STATUS_DRAFT_KEY !== currentEventStatus
                  ) {
                    if (!this.bidoNotificationDTO.reportingDate) {
                      this.messageService.showErrorMessage(this.getTranslateKey('notificationDateIsRequired'));
                      setTimeout(function() {
                        _this.bidoNotificationDTO.status = previousEventStatus_1;
                      }, EventCreateComponent_1.TIMEOUT_LIMIT);
                      return false;
                    }
                  }
                  if (
                    !!this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory &&
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                      .EVENT_STATUS_DRAFT_KEY !== currentEventStatus &&
                    !this.bidoNotificationDTO.reportingDate
                  ) {
                    // Le message d'erreur sur la date est automatiquement généré par le selector
                    // La liste déroulante est automatiquement repositionnée sur la valeur précédente
                    setTimeout(function() {
                      _this.bidoNotificationDTO.status = previousEventStatus_1;
                    }, EventCreateComponent_1.TIMEOUT_LIMIT);
                    return false;
                  } else {
                    if (previousEventStatus_1 !== currentEventStatus) {
                      if (
                        _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                          .EVENT_STATUS_DRAFT_KEY === previousEventStatus_1
                      ) {
                        if (
                          _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__[
                            'AWPropertiesConstants'
                          ].EVENT_STATUS_OPENED_KEY !== currentEventStatus
                        ) {
                          // Displaying a warning message
                          this.messageService.showErrorMessage(this.getTranslateKey('cannotChangeStatus'));
                          setTimeout(function() {
                            _this.bidoNotificationDTO.status = previousEventStatus_1;
                          }, EventCreateComponent_1.TIMEOUT_LIMIT);
                          return false;
                        }
                      } else if (
                        _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                          .EVENT_STATUS_OPENED_KEY === previousEventStatus_1
                      ) {
                        // Retour vers le statut Draft interdit
                        if (
                          _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__[
                            'AWPropertiesConstants'
                          ].EVENT_STATUS_DRAFT_KEY === currentEventStatus
                        ) {
                          // Displaying a warning message
                          this.messageService.showErrorMessage(this.getTranslateKey('cannotChangeStatus'));
                          setTimeout(function() {
                            _this.bidoNotificationDTO.status = previousEventStatus_1;
                          }, EventCreateComponent_1.TIMEOUT_LIMIT);
                          return false;
                        }
                      } else if (
                        _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                          .EVENT_STATUS_UNDER_INVESTIGATION_KEY === previousEventStatus_1
                      ) {
                        // Retour vers le statut Draft et Open interdit
                        if (
                          _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__[
                            'AWPropertiesConstants'
                          ].EVENT_STATUS_CLOSED_KEY !== currentEventStatus
                        ) {
                          // Displaying a warning message
                          this.messageService.showErrorMessage(this.getTranslateKey('cannotChangeStatus'));
                          setTimeout(function() {
                            _this.bidoNotificationDTO.status = previousEventStatus_1;
                          }, EventCreateComponent_1.TIMEOUT_LIMIT);
                          return false;
                        }
                      } else if (
                        _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                          .EVENT_STATUS_CLOSED_KEY === previousEventStatus_1
                      ) {
                        // Retour vers le statut Draft et Open interdit
                        if (
                          _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__[
                            'AWPropertiesConstants'
                          ].EVENT_STATUS_UNDER_INVESTIGATION_KEY !== currentEventStatus
                        ) {
                          // Displaying a warning message
                          this.messageService.showErrorMessage(this.getTranslateKey('cannotChangeStatus'));
                          setTimeout(function() {
                            _this.bidoNotificationDTO.status = previousEventStatus_1;
                          }, EventCreateComponent_1.TIMEOUT_LIMIT);
                          return false;
                        }
                      }
                      // >>++ MSA : Gemini 11467 : Contrôles actifs même sans changement de statut
                    }
                    if (
                      !this.location &&
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_STATUS_DRAFT_KEY !== currentEventStatus
                    ) {
                      // Displaying a warning message
                      this.messageService.showErrorMessage(this.getTranslateKey('locationMandatory'));
                      setTimeout(function() {
                        _this.bidoNotificationDTO.status = previousEventStatus_1;
                      }, EventCreateComponent_1.TIMEOUT_LIMIT);
                      return false;
                    } else if (
                      !this.isRootCauseFilledIn() &&
                      !this.hasPropertyByCode &&
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_STATUS_DRAFT_KEY !== currentEventStatus &&
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_STATUS_OPENED_KEY !== currentEventStatus
                    ) {
                      // Displaying a warning message
                      this.messageService.showErrorMessage(this.getTranslateKey('rootCauseMandatory'));
                      setTimeout(function() {
                        _this.bidoNotificationDTO.status = previousEventStatus_1;
                      }, EventCreateComponent_1.TIMEOUT_LIMIT);
                      return false;
                    } else if (
                      this.hasFMDNotClosed &&
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_STATUS_DRAFT_KEY !== currentEventStatus &&
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_STATUS_OPENED_KEY !== currentEventStatus &&
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_STATUS_UNDER_INVESTIGATION_KEY !== currentEventStatus
                    ) {
                      // Displaying a warning message
                      this.messageService.showErrorMessage(this.getTranslateKey('formNotClosed'));
                      setTimeout(function() {
                        _this.bidoNotificationDTO.status = previousEventStatus_1;
                      }, EventCreateComponent_1.TIMEOUT_LIMIT);
                      return false;
                    } else if (
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                        .EVENT_STATUS_CLOSED_KEY === currentEventStatus
                    ) {
                      var hasRights = true; // TODO getHasManageRights()
                      // Si les droits adequat pour cloturer un evenement
                      if (!hasRights) {
                        // Displaying a warning message
                        this.messageService.showErrorMessage(this.getTranslateKey('rightsNotFound'));
                        setTimeout(function() {
                          _this.bidoNotificationDTO.status = previousEventStatus_1;
                        }, EventCreateComponent_1.TIMEOUT_LIMIT);
                        return false;
                      } else {
                        this.bidoNotificationDTO.reportingPeriodEndDate = new Date();
                        // this.notificationDateSelectorComponent.setReadOnly(true);
                        // // >>++VVA : Gemini 12936 - Prevent from updating end date on defects
                        // this.endDateSelectorComponent.setReadOnly(isDefectMode());
                        // // <<++VVA : Gemini 12936 - Prevent from updating end date on defects
                        // this.equipmentSelectorComponent_AssetAssociatedToTask.setReadOnly(true);
                        // this.equipmentSelectorComponent_AssetAssociatedToRootCause.setReadOnly(true);
                      }
                      this.reopenButtonVisibility();
                      this.updateOpenMode(
                        _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
                      );
                    }
                  }
                }
              }
            } else {
              if (!this.isDateFromFuture()) {
                this.messageService.showErrorMessage(this.getTranslateKey('dateFromFuture'));
                return false;
              }
              this.bidoNotificationDTO.status = '1-dra';
            }
            return true;
          };
          EventCreateComponent.prototype.isRootCauseFilledIn = function() {
            if (
              !!this.defectAssetCode ||
              !!this.rootCausePn ||
              (!!this.eventAtaCode.chapter &&
                !!this.eventAtaCode.section &&
                !!this.eventAtaCode.subject &&
                !!this.eventAtaCode.sheet &&
                !!this.eventAtaCode.marks) ||
              !!this.rootCauseFlCode
            ) {
              return true;
            }
            return false;
          };
          EventCreateComponent.prototype.hasFMDNotClosedFun = function() {
            var _this = this;
            this.eventCreateService.hasFmdNotClosed(this.bidoNotificationDTO.notificationCode).subscribe(function(res) {
              _this.hasFMDNotClosed = res;
            });
          };
          EventCreateComponent.prototype.endAfterStart = function(start, end) {
            return end.getTime() >= start.getTime();
          };
          EventCreateComponent.prototype.setWorkOrderVisibility = function() {
            var _this = this;
            this.eventService
              .isBuildingBlockInstalled(
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_11__[
                  'BidoFunctionTypeConstants'
                ].MODULE_AIRM
              )
              .subscribe(function(isBuildingBlockInstalled) {
                _this.isAirMInstalled = isBuildingBlockInstalled;
              });
          };
          EventCreateComponent.prototype.openWorkOrder = function(code) {
            var _this = this;
            var woCode = code.indexOf('-') !== -1 ? code.split('-')[0] : code;
            this.eventCreateService.findBidmWorkOrderByMandantAndWoCode(woCode).subscribe(function(data) {
              if (!!data.projectId && !!data.woId) {
                var bidmWorkOrderDTOId = {
                  projectId: data.projectId,
                  woId: data.woId
                };
                _this.openWOUC(bidmWorkOrderDTOId);
              }
            });
          };
          /******************************
           * ACTIONS ADD MEASURE
           ******************************/
          EventCreateComponent.prototype.addMeasure = function() {
            this.isReadOnlyMeasureUpdateDialog = false;
            if (this.bidoMeasuresDisplayedDataSource.dataSelectionCount === 1) {
              this.currentMeasure = __assign({}, this.bidoMeasuresDisplayedDataSource.dataSelection[0]._obj);
              this.showMeasurePopup = true;
              this.dataMeasure = {
                componentId: 'MeasureUpdatePopupDialog',
                selectedRow: [],
                object: this.currentMeasure,
                openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
              };
            }
          };
          EventCreateComponent.prototype.showMeasureReport = function(reportText) {
            if (reportText) {
              this.showMeasurePopup = false;
              this.showMeasureReportText = true;
              this.measureReportText = reportText;
            }
          };
          EventCreateComponent.prototype.showStatus = function() {
            var _this = this;
            var overlayRef = this._overlayService.openWithPositionCenter({
              content: _object_status_object_status_component__WEBPACK_IMPORTED_MODULE_39__['ObjectStatusComponent'],
              data: {
                currentAuthor: this.bidoNotificationDTO.statusUser,
                currentDate: this.bidoNotificationDTO.statusDate,
                currentStatus: {
                  label: this._formatSelectOption.transform(this.bidoNotificationDTO.status, this.statusMap),
                  value: this.bidoNotificationDTO.status
                },
                nextStatuses: this.workflowStatus
              }
            });
            overlayRef.afterClosed$.subscribe({
              next: function(event) {
                if (event.data) {
                  var currentState = _this.bidoNotificationDTO.status;
                  _this.bidoNotificationDTO.status = event.data;
                  _this.preSavedEvent();
                  if (!_this.eventHasBeenSaved) {
                    // Revert status change if save not launched
                    _this.bidoNotificationDTO.status = currentState;
                  }
                }
              }
            });
          };
          EventCreateComponent.prototype.displayReviewToCentral = function() {
            var displayReviewToCentral =
              !!this.bidoNotificationDTO &&
              !!this.bidoNotificationDTO.bidoNotificationTypeDTO &&
              (_shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                .EVENT_STATUS_UNDER_ANALYSIS_KEY === this.bidoNotificationDTO.status ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_STATUS_UNDER_INVESTIGATION_KEY) &&
              this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_MAINTENANCE_KEY &&
              this.workOrder &&
              this.bidoNotificationDTO.typeCode === EventCreateComponent_1.WPR_TYPE_CODE &&
              this.sessionService.isSpecificBRASIDAS &&
              this.isWriteOpenMode
                ? true
                : false;
            return displayReviewToCentral;
          };
          EventCreateComponent.prototype.enableReviewToCentral = function() {
            var enableReviewToCentral =
              !!this.bidoNotificationDTO &&
              !!this.bidoNotificationDTO.bidoNotificationTypeDTO &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                .EVENT_STATUS_UNDER_ANALYSIS_KEY === this.bidoNotificationDTO.status &&
              this.bidoNotificationDTO.bidoNotificationTypeDTO.typeCategory ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_8__['AWPropertiesConstants']
                  .EVENT_CATEGORY_MAINTENANCE_KEY &&
              this.workOrder &&
              this.bidoNotificationDTO.typeCode === EventCreateComponent_1.WPR_TYPE_CODE &&
              this.sessionService.isSpecificBRASIDAS &&
              this.isWriteOpenMode
                ? true
                : false;
            return enableReviewToCentral;
          };
          EventCreateComponent.prototype.reviewToCentral = function() {
            var _this = this;
            var input = {
              projectId: this.workOrder.projectId,
              woId: this.workOrder.woId
            };
            this.eventCreateService.submitRTAToCentral(input).subscribe(
              function() {
                _this.messageService.showSuccessMessage(_this.getTranslateKey('successSubmitRTAToCentral'));
                _this.reloadEvent();
                _this.updateOpenMode(
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_17__['ComponentOpenMode'].Read
                );
              },
              function() {
                _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnSubmitRTAToCentral'));
              }
            );
          };
          EventCreateComponent.prototype.addATACode = function(ev) {
            this.eventAtaCode = ev;
          };
          var EventCreateComponent_1;
          EventCreateComponent.MAIN_ANCHOR_ID = 'mainInfoAnchor';
          EventCreateComponent.ASSET_AT_DATE_ANCHOR_ID = 'assetAtDate';
          EventCreateComponent.GENERAL_ANCHOR_ID = 'general';
          EventCreateComponent.ARISING_EVENT_ANCHOR_ID = 'arisingEvents';
          EventCreateComponent.WORK_POSTPONMENT_ANCHOR_ID = 'workPostponment';
          EventCreateComponent.ATTRIBUTES_ANCHOR_ID = 'attributes';
          EventCreateComponent.DIFFUSION_ANCHOR_ID = 'diffusion';
          EventCreateComponent.EVOLUTION_ANCHOR_ID = 'evolution';
          EventCreateComponent.STRUCTURE_ANCHOR_ID = 'structure';
          EventCreateComponent.TASK_ANCHOR_ID = 'task';
          EventCreateComponent.DOCUMENT_ANCHOR_ID = 'document';
          EventCreateComponent.ROOT_CAUSE_ANCHOR_ID = 'rootCause';
          EventCreateComponent.CIRCUMSTANCES_ANCHOR_ID = 'circumstances';
          EventCreateComponent.TIMEOUT_LIMIT = 400;
          EventCreateComponent.WPR_TYPE_CODE = 'WPR';
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(EventCreateComponent_1.MAIN_ANCHOR_ID),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'mainInfoAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                EventCreateComponent_1.ASSET_AT_DATE_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'assetAtDate',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(EventCreateComponent_1.GENERAL_ANCHOR_ID),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'general',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                EventCreateComponent_1.ARISING_EVENT_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'arisingEvents',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                EventCreateComponent_1.WORK_POSTPONMENT_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'workPostponment',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                EventCreateComponent_1.ATTRIBUTES_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'attributes',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                EventCreateComponent_1.DIFFUSION_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'diffusion',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                EventCreateComponent_1.EVOLUTION_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'evolution',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                EventCreateComponent_1.STRUCTURE_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'structure',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(EventCreateComponent_1.TASK_ANCHOR_ID),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'task',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                EventCreateComponent_1.DOCUMENT_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'document',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                EventCreateComponent_1.ROOT_CAUSE_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'rootCause',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                EventCreateComponent_1.CIRCUMSTANCES_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventCreateComponent.prototype,
            'circumstances',
            void 0
          );
          EventCreateComponent = EventCreateComponent_1 = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-event-create',
                template: __webpack_require__(
                  /*! ./event-create.component.html */ './src/app/main/fleet-management/event/event-create/event-create.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./event-create.component.scss */ './src/app/main/fleet-management/event/event-create/event-create.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_23__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_24__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_25__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_27__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_29__['TabService'],
                _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_4__['PageTocService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_26__['PropertiesService'],
                _overlay_overlay_service__WEBPACK_IMPORTED_MODULE_40__['OverlayService'],
                _shared_pipes_format_select_option_pipe__WEBPACK_IMPORTED_MODULE_20__['FormatSelectOptionPipe'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_28__['SessionService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService'],
                _shared_components_dynamic_attributes_dynamic_attributes_service__WEBPACK_IMPORTED_MODULE_5__[
                  'DynamicAttributesService'
                ],
                _event_create_service__WEBPACK_IMPORTED_MODULE_42__['EventCreateService'],
                _event_service__WEBPACK_IMPORTED_MODULE_41__['EventService'],
                _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_21__['ConfirmationService'],
                _shared_services_date_service__WEBPACK_IMPORTED_MODULE_22__['DateService']
              ])
            ],
            EventCreateComponent
          );
          return EventCreateComponent;
        })(_shared_types_page_component__WEBPACK_IMPORTED_MODULE_30__['PageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-create/event-create.service.ts':
      /*!**********************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-create/event-create.service.ts ***!
  \**********************************************************************************/
      /*! exports provided: EventCreateService */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'EventCreateService', function() {
          return EventCreateService;
        });
        /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */ './node_modules/@angular/common/fesm5/http.js'
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_api_aircraft_maintenance_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../shared/api/aircraft-maintenance.api */ './src/app/shared/api/aircraft-maintenance.api.ts'
        );
        /* harmony import */ var _shared_api_airworthiness_management_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../shared/api/airworthiness-management.api */ './src/app/shared/api/airworthiness-management.api.ts'
        );
        /* harmony import */ var _shared_api_asset_management_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../shared/api/asset-management.api */ './src/app/shared/api/asset-management.api.ts'
        );
        /* harmony import */ var _shared_api_bidt_stock_mvt_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../shared/api/bidt-stock-mvt.api */ './src/app/shared/api/bidt-stock-mvt.api.ts'
        );
        /* harmony import */ var _shared_api_bonita_bonita_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../shared/api/bonita/bonita.api */ './src/app/shared/api/bonita/bonita.api.ts'
        );
        /* harmony import */ var _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../../shared/api/fleet-business.api */ './src/app/shared/api/fleet-business.api.ts'
        );
        /* harmony import */ var _shared_api_fleet_history_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../../shared/api/fleet-history.api */ './src/app/shared/api/fleet-history.api.ts'
        );
        /* harmony import */ var _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../../shared/api/fleet-management.api */ './src/app/shared/api/fleet-management.api.ts'
        );
        /* harmony import */ var _shared_api_product_structure_management_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../../shared/api/product-structure-management.api */ './src/app/shared/api/product-structure-management.api.ts'
        );
        /* harmony import */ var _shared_api_task_management_api__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../../shared/api/task-management.api */ './src/app/shared/api/task-management.api.ts'
        );
        /* harmony import */ var _shared_api_user_profile_business_api__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../../shared/api/user-profile-business.api */ './src/app/shared/api/user-profile-business.api.ts'
        );
        /* harmony import */ var _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../../shared/constants/bido-function-type-constants */ './src/app/shared/constants/bido-function-type-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../../shared/http/abstract-aw-http */ './src/app/shared/http/abstract-aw-http.ts'
        );
        /* harmony import */ var _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../../shared/services/app-config.service */ './src/app/shared/services/app-config.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ../../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_types_api_types_mail_api__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ../../../../shared/types/api-types/mail.api */ './src/app/shared/types/api-types/mail.api.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var EventCreateService = /** @class */ (function(_super) {
          __extends(EventCreateService, _super);
          function EventCreateService(
            http,
            appConfigService,
            fleetManagementApi,
            assetManagementApi,
            fleetBusinessApi,
            aircraftManagementApi,
            fleetHistoryApi,
            propertiesService,
            productStructureManagementApi,
            taskManagementApi,
            mailApi,
            airworthinessManagementApi,
            bidtStockMvtApi,
            userProfileBusinessApi,
            bonitaApi
          ) {
            var _this = _super.call(this, http, appConfigService) || this;
            _this.fleetManagementApi = fleetManagementApi;
            _this.assetManagementApi = assetManagementApi;
            _this.fleetBusinessApi = fleetBusinessApi;
            _this.aircraftManagementApi = aircraftManagementApi;
            _this.fleetHistoryApi = fleetHistoryApi;
            _this.propertiesService = propertiesService;
            _this.productStructureManagementApi = productStructureManagementApi;
            _this.taskManagementApi = taskManagementApi;
            _this.mailApi = mailApi;
            _this.airworthinessManagementApi = airworthinessManagementApi;
            _this.bidtStockMvtApi = bidtStockMvtApi;
            _this.userProfileBusinessApi = userProfileBusinessApi;
            _this.bonitaApi = bonitaApi;
            return _this;
          }
          /**
           * Gets event category
           */
          EventCreateService.prototype.findAllBidoNotificationTypeByTypeCategory = function(typeCategory) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findAllBidoNotificationTypeByTypeCategory,
              typeCategory
            );
          };
          /**
           * Gets event category
           */
          EventCreateService.prototype.findAllBidoNotificationAttributeByNotificationCode = function(
            bidoNotificationDTOId
          ) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findAllBidoNotificationAttributeByNotificationCode,
              bidoNotificationDTOId
            );
          };
          /**
           * Gets event status
           */
          EventCreateService.prototype.getEventStatusValues = function() {
            return _super.prototype.post.call(this, this.fleetManagementApi.getEventStatusValues);
          };
          /**
           * Create EVENT
           */
          EventCreateService.prototype.createBidoNotification = function(bidoNotificationDTO) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.createBidoNotification,
              bidoNotificationDTO
            );
          };
          EventCreateService.prototype.generateEstimatedMeasures = function(bidoNotificationDTO) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.generateEstimatedMeasures,
              bidoNotificationDTO
            );
          };
          /**
           * UPDATE EVENT
           */
          EventCreateService.prototype.saveEvent = function(saveEventInput) {
            return _super.prototype.post.call(this, this.fleetManagementApi.saveEvent, saveEventInput);
          };
          EventCreateService.prototype.addOrUpdate = function(input) {
            return _super.prototype.post.call(this, this.bidtStockMvtApi.addOrUpdate, input);
          };
          /**
           * Finds bido notification by notification code
           */
          EventCreateService.prototype.findBidoNotification = function(bidoNotificationDTOId) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoNotification,
              bidoNotificationDTOId
            );
          };
          EventCreateService.prototype.findBidoEquipment = function(bidoEquipmentDTOId) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findBidoEquipment, bidoEquipmentDTOId);
          };
          EventCreateService.prototype.fetchMeasureTableData = function(bidoEquipmentDTO) {
            return _super.prototype.post.call(this, this.assetManagementApi.fetchMeasureTableData, bidoEquipmentDTO);
          };
          EventCreateService.prototype.assetAtDateForMeasureTab = function(assetAtDateInput) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.assetAtDateForMeasuresTab, assetAtDateInput);
          };
          EventCreateService.prototype.fetchWorkPostponementEvolutionNumber = function(notificationCode) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.fetchWorkPostponementEvolutionNumber,
              notificationCode
            );
          };
          EventCreateService.prototype.findHBidoNotifications = function(dTOId) {
            return _super.prototype.post.call(this, this.fleetHistoryApi.findHBidoNotifications, dTOId);
          };
          EventCreateService.prototype.findHBidoNotificationAttributesByAttributeId = function(dTOId) {
            return _super.prototype.post.call(
              this,
              this.fleetHistoryApi.findHBidoNotificationAttributesByAttributeId,
              dTOId
            );
          };
          EventCreateService.prototype.findLinkingEventData = function(eventCriteriaInputDTO) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findLinkingEventData,
              eventCriteriaInputDTO
            );
          };
          EventCreateService.prototype.getMeasureDetailTableData = function(bidoEquipmentCounterDTOId) {
            return _super.prototype.post.call(
              this,
              this.fleetBusinessApi.findBidoMeasuresByEquipmentAndCounterCodes,
              bidoEquipmentCounterDTOId
            );
          };
          EventCreateService.prototype.generateE5XFileFromFMD = function(input) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.generateE5XFileFromFmd, input);
          };
          EventCreateService.prototype.getFmdReport = function(eventCode) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.getFmdReport, eventCode);
          };
          EventCreateService.prototype.updateBidoNotificationACRS = function(bidoNotificationDTO) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.updateBidoNotificationACRS,
              bidoNotificationDTO
            );
          };
          EventCreateService.prototype.getFunctionLocationLabel = function(bidoNotificationDTO) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.getFunctionLocationLabel,
              bidoNotificationDTO
            );
          };
          EventCreateService.prototype.findBidoAttributesByAttributeCategory = function(category) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoAttributesByAttributeCategory,
              category
            );
          };
          EventCreateService.prototype.generateAPRSCertificateForACRSEvent = function(bidoNotificationDTO) {
            return _super.prototype.post.call(
              this,
              this.aircraftManagementApi.generateAPRSCertificateForACRSEvent,
              bidoNotificationDTO
            );
          };
          EventCreateService.prototype.generateEASACertificateFromACRSEvent = function(bidoNotificationDTO) {
            return _super.prototype.post.call(
              this,
              this.aircraftManagementApi.generateEASACertificateFromACRSEvent,
              bidoNotificationDTO
            );
          };
          EventCreateService.prototype.findEvent = function(criteria) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findEventsBySearchCriteria, criteria);
          };
          EventCreateService.prototype.findBidoNotificationContactsByNotificationCode = function(code) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoNotificationContactsByNotificationCode,
              code
            );
          };
          EventCreateService.prototype.findBidoNotificationEvolutionsByNotificationCode = function(code) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoNotificationEvolutionsByNotificationCode,
              code
            );
          };
          EventCreateService.prototype.getOperationalStatusMap = function() {
            return this.propertiesService.getValue(
              _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_14__['GenericPropertyConstants']
                .OPERATIONAL_STATUS_MAP
            );
          };
          EventCreateService.prototype.getWorkOrderForEvent = function(code) {
            return _super.prototype.post.call(this, this.fleetManagementApi.getWorkOrderForEvent, code);
          };
          EventCreateService.prototype.findBidoEquipmentsBySearchCriteria = function(criteria) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findFleetAllAssets, criteria);
          };
          EventCreateService.prototype.findAllBirePnByCriteria = function(criteria) {
            return _super.prototype.post.call(
              this,
              this.productStructureManagementApi.findAllBirePnByCriteria,
              criteria
            );
          };
          EventCreateService.prototype.findBireItemsBySearchCriteria = function(criteria) {
            return _super.prototype.post.call(
              this,
              this.productStructureManagementApi.findBireItemsBySearchCriteria,
              criteria
            );
          };
          EventCreateService.prototype.findBireTasksByCriteria = function(criteria) {
            return _super.prototype.post.call(this, this.taskManagementApi.findAllBireTaskByCriteriaInput, criteria);
          };
          EventCreateService.prototype.sendEventNotificationToContacts = function(sendEventNotificationToContactsDTO) {
            return _super.prototype.post.call(
              this,
              this.mailApi.sendEventNotificationToContacts,
              sendEventNotificationToContactsDTO
            );
          };
          EventCreateService.prototype.sendEventNotificationToContactsAlternate = function(
            sendEventNotificationToContactsDTO
          ) {
            return _super.prototype.post.call(
              this,
              this.mailApi.sendEventNotificationToContactsAlternate,
              sendEventNotificationToContactsDTO
            );
          };
          EventCreateService.prototype.findAllBidoDocumentationByNotificationCode = function(notificationCode) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findAllBidoDocumentationByNotificationCode,
              notificationCode
            );
          };
          EventCreateService.prototype.getEquipmentName = function(bidoEquipmentDTOId) {
            return _super.prototype.post.call(this, this.fleetManagementApi.getEquipmentName, bidoEquipmentDTOId);
          };
          EventCreateService.prototype.haspropertyByFamilyCode = function(familyCode) {
            return _super.prototype.post.call(this, this.fleetManagementApi.haspropertyByFamilyCode, familyCode);
          };
          EventCreateService.prototype.hasFmdNotClosed = function(notificationCode) {
            return _super.prototype.post.call(this, this.fleetManagementApi.hasFmdNotClosed, notificationCode);
          };
          EventCreateService.prototype.findBidoEventExtensionsTypedContextByNotificationCode = function(
            notificationCode
          ) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoEventExtensionsTypedContextByNotificationCode,
              notificationCode
            );
          };
          EventCreateService.prototype.findBidoEventExtensionsTypedSymptomByNotificationCode = function(
            notificationCode
          ) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoEventExtensionsTypedSymptomByNotificationCode,
              notificationCode
            );
          };
          EventCreateService.prototype.findAllBidoExtensionList = function(extensionType) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findAllBidoExtensionList, extensionType);
          };
          EventCreateService.prototype.getAddedSymptomParameterList = function(bidoEventExtensionDTO) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.getAddedSymptomParameterList,
              bidoEventExtensionDTO
            );
          };
          EventCreateService.prototype.getCsnLabelForAirworthinessControl = function() {
            return _super.prototype.post.call(this, this.airworthinessManagementApi.getCsnLabelForAirworthinessControl);
          };
          EventCreateService.prototype.getTsnLabelForAirworthinessControl = function() {
            return _super.prototype.post.call(this, this.airworthinessManagementApi.getTsnLabelForAirworthinessControl);
          };
          EventCreateService.prototype.openXLSFormat = function(notificationCode) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.getEventXlsReport, notificationCode);
          };
          EventCreateService.prototype.generateDefectCard = function(notificationData) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.generateDefectCard, notificationData);
          };
          EventCreateService.prototype.calculateMELAlert = function(notificationData) {
            return _super.prototype.post.call(this, this.fleetManagementApi.calculateMELAlert, notificationData);
          };
          EventCreateService.prototype.initializeTCMap = function(familyVariantCode) {
            return _super.prototype.post.call(this, this.fleetManagementApi.initializeTCMap, familyVariantCode);
          };
          EventCreateService.prototype.findBidoCustomersBySearchCriteriaFMD = function(code) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findBidoCustomersBySearchCriteriaFMD, code);
          };
          EventCreateService.prototype.findE5XEventTypesByFmdEventType = function(code) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findE5XEventTypesByFmdEventType, code);
          };
          EventCreateService.prototype.findBidoFmdsByNotificationCode = function(notificationCode) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoFmdsByNotificationCode,
              notificationCode
            );
          };
          EventCreateService.prototype.generateFmdByEventCode = function(notificationCode) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.generateFmdByEventCode, notificationCode);
          };
          EventCreateService.prototype.generateFdeByEventCode = function(notificationCode) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.generateFdeByEventCode, notificationCode);
          };
          EventCreateService.prototype.saveFMDEvent = function(bidoFmdDTO) {
            return _super.prototype.post.call(this, this.fleetManagementApi.saveFMDEvent, bidoFmdDTO);
          };
          EventCreateService.prototype.getFDMIsFDE = function(fvCode) {
            return _super.prototype.post.call(this, this.fleetManagementApi.getFDMIsFDE, fvCode);
          };
          EventCreateService.prototype.findBidoDocumentationsByMandantAndNotificationCodeAndFmdId = function(input) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoDocumentationsByMandantAndNotificationCodeAndFmdId,
              input
            );
          };
          EventCreateService.prototype.hasManageRights = function() {
            var accessRightQueryDTO = {
              useCaseCode:
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_13__[
                  'BidoFunctionTypeConstants'
                ].UC_FM_FMD,
              functionCode: undefined
            };
            return _super.prototype.post.call(this, this.userProfileBusinessApi.hasManageRights, accessRightQueryDTO);
          };
          EventCreateService.prototype.setFMDReferenceDTO = function(reference) {
            return _super.prototype.post.call(this, this.fleetManagementApi.setFMDReferenceDTO, reference);
          };
          EventCreateService.prototype.updateFieldsOfBidoDocumentationFMD = function(input) {
            return _super.prototype.post.call(this, this.fleetManagementApi.updateFieldsOfBidoDocumentationFMD, input);
          };
          EventCreateService.prototype.removeBidoDocumentationFMD = function(input) {
            return _super.prototype.post.call(this, this.fleetManagementApi.removeBidoDocumentationFmd, input);
          };
          EventCreateService.prototype.findBidmWorkOrderByMandantAndWoCode = function(woCode) {
            return _super.prototype.post.call(
              this,
              this.aircraftManagementApi.findBidmWorkOrderByMandantAndWoCode,
              woCode
            );
          };
          EventCreateService.prototype.acceptWorkPostponementRequest = function(input) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.acceptWorkPostponementRequest, input);
          };
          EventCreateService.prototype.refuseWorkPostponementRequest = function(input) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.refuseWorkPostponementRequest, input);
          };
          EventCreateService.prototype.getDefectContextInfo = function(input) {
            return _super.prototype.post.call(this, this.fleetManagementApi.getDefectContextInfo, input);
          };
          EventCreateService.prototype.findHFBidoEquipmentByEquipmentCodeFromDate = function(
            findBidoEquipmentByEquipmentCodeFromDateInput
          ) {
            return _super.prototype.post.call(
              this,
              this.fleetHistoryApi.findBidoEquipmentByEquipmentCodeFromDate,
              findBidoEquipmentByEquipmentCodeFromDateInput
            );
          };
          EventCreateService.prototype.submitRTAToCentral = function(bidmWorkOrderDTOId) {
            return _super.prototype.post.call(this, this.bonitaApi.submitRTAToCentral, bidmWorkOrderDTOId);
          };
          EventCreateService = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])(),
              __metadata('design:paramtypes', [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClient'],
                _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_16__['AppConfigService'],
                _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_9__['FleetManagementApi'],
                _shared_api_asset_management_api__WEBPACK_IMPORTED_MODULE_4__['AssetManagementApi'],
                _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_7__['FleetBusinessApi'],
                _shared_api_aircraft_maintenance_api__WEBPACK_IMPORTED_MODULE_2__['AircraftMaintenanceApi'],
                _shared_api_fleet_history_api__WEBPACK_IMPORTED_MODULE_8__['FleetHistoryApi'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_17__['PropertiesService'],
                _shared_api_product_structure_management_api__WEBPACK_IMPORTED_MODULE_10__[
                  'ProductStructureManagementApi'
                ],
                _shared_api_task_management_api__WEBPACK_IMPORTED_MODULE_11__['TaskManagementApi'],
                _shared_types_api_types_mail_api__WEBPACK_IMPORTED_MODULE_18__['MailApi'],
                _shared_api_airworthiness_management_api__WEBPACK_IMPORTED_MODULE_3__['AirworthinessManagementApi'],
                _shared_api_bidt_stock_mvt_api__WEBPACK_IMPORTED_MODULE_5__['BidtStockMvtApi'],
                _shared_api_user_profile_business_api__WEBPACK_IMPORTED_MODULE_12__['UserProfileBusinessApi'],
                _shared_api_bonita_bonita_api__WEBPACK_IMPORTED_MODULE_6__['BonitaApi']
              ])
            ],
            EventCreateService
          );
          return EventCreateService;
        })(_shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_15__['AbstractAwHttpService']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-create/event-import-popup/event-import-popup.component.html':
      /*!***************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-create/event-import-popup/event-import-popup.component.html ***!
  \***************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".docManagement" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="row">\r\n      <div class="form-group">\r\n        <label class="form-label">{{ getComponentName() + ".docName" | translate }}</label>\r\n\r\n        <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n          <div class="form-control-data">\r\n            {{ document.docName }}\r\n          </div>\r\n\r\n          <div class="btn-file-upload-wrapper">\r\n            <p-fileUpload\r\n              #fileUploader\r\n              *ngIf="!isReadOnlyForm"\r\n              class="aw-fileupload"\r\n              name="document[]"\r\n              customUpload="true"\r\n              mode="basic"\r\n              auto="true"\r\n              chooseLabel=""\r\n              (uploadHandler)="uploadDocument($event, fileUploader)"\r\n            ></p-fileUpload>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="row">\r\n      <div class="form-group">\r\n        <label class="form-label">{{ getComponentName() + ".docSource" | translate }}</label>\r\n\r\n        <div class="form-control">\r\n          <input class="aw-input" type="text" [(ngModel)]="document.docSource" [disabled]="isReadOnlyForm" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="row">\r\n      <div class="form-group">\r\n        <label class="form-label">{{ getComponentName() + ".docPublicationDate" | translate }}</label>\r\n\r\n        <div class="form-control">\r\n          <p-calendar\r\n            showButtonBar="true"\r\n            [monthNavigator]="true"\r\n            [yearNavigator]="true"\r\n            [yearRange]="sessionService.calendarYearRange"\r\n            class="aw-calendar"\r\n            [dateFormat]="sessionService.dateFormatPrimeNG"\r\n            [locale]="sessionService.calendarFormat"\r\n            [(ngModel)]="document.docPublicationDate"\r\n            [disabled]="isReadOnlyForm"\r\n            appendTo="body"\r\n          ></p-calendar>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="form-group">\r\n      <label class="form-label">{{ getComponentName() + ".docType" | translate }}</label>\r\n\r\n      <div class="form-control">\r\n        <p-dropdown\r\n          class="aw-dropdown fixed-width"\r\n          [options]="types"\r\n          [(ngModel)]="document.docType"\r\n          [disabled]="isReadOpenMode"\r\n          [showClear]="true"\r\n          placeholder="&nbsp;"\r\n          appendTo="body"\r\n        ></p-dropdown>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="row">\r\n      <div class="form-group">\r\n        <label class="form-label">{{ getComponentName() + ".docDescription" | translate }}</label>\r\n\r\n        <div class="form-control">\r\n          <textarea\r\n            class="aw-textarea"\r\n            [rows]="3"\r\n            pInputTextarea\r\n            [(ngModel)]="document.docDescription"\r\n            [disabled]="isReadOnlyForm"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">{{ "global.cancel" | translate }}</button>\r\n    <button\r\n      *ngIf="!isReadOnlyForm"\r\n      type="button"\r\n      mat-raised-button\r\n      color="primary"\r\n      (click)="validate()"\r\n      [disabled]="!document.docFile && !document.docSource"\r\n    >\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-create/event-import-popup/event-import-popup.component.ts':
      /*!*************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-create/event-import-popup/event-import-popup.component.ts ***!
  \*************************************************************************************************************/
      /*! exports provided: EventImportPopupComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'EventImportPopupComponent',
          function() {
            return EventImportPopupComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        /* harmony import */ var _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../../shared/utils/file-utils */ './src/app/shared/utils/file-utils.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var EventImportPopupComponent = /** @class */ (function(_super) {
          __extends(EventImportPopupComponent, _super);
          function EventImportPopupComponent(sessionService) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Write,
                'SbadFormComponent'
              ) || this;
            _this.sessionService = sessionService;
            _this.displayChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.onValidated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            return _this;
          }
          Object.defineProperty(EventImportPopupComponent.prototype, 'display', {
            get: function() {
              return this.displayValue;
            },
            set: function(displayValue) {
              this.displayValue = displayValue;
              this.displayChange.emit(this.displayValue);
            },
            enumerable: true,
            configurable: true
          });
          EventImportPopupComponent.prototype.ngOnInit = function() {
            if (!this.document) {
              this.document = {};
            }
          };
          EventImportPopupComponent.prototype.cancel = function() {
            this.display = false;
          };
          EventImportPopupComponent.prototype.validate = function() {
            this.onValidated.emit(this.document);
            this.display = false;
          };
          EventImportPopupComponent.prototype.uploadDocument = function(event, fileUploader) {
            var _this = this;
            if (event.files) {
              var file_1 = event.files[0];
              _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_4__['FileUtils'].getFileContentAsBase64(
                file_1,
                function(fileContent) {
                  if (fileContent) {
                    _this.document.docFile = fileContent;
                    _this.document.docName = file_1.name;
                    _this.document.docPublicationDate = new Date();
                  }
                }
              );
              fileUploader.clear();
            }
          };
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(),
              __metadata('design:type', Object),
              __metadata('design:paramtypes', [Object])
            ],
            EventImportPopupComponent.prototype,
            'display',
            null
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            EventImportPopupComponent.prototype,
            'displayChange',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            EventImportPopupComponent.prototype,
            'document',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Boolean)],
            EventImportPopupComponent.prototype,
            'isReadOnlyForm',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            EventImportPopupComponent.prototype,
            'onValidated',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            EventImportPopupComponent.prototype,
            'types',
            void 0
          );
          EventImportPopupComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-event-import-popup',
                template: __webpack_require__(
                  /*! ./event-import-popup.component.html */ './src/app/main/fleet-management/event/event-create/event-import-popup/event-import-popup.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_2__['SessionService']
              ])
            ],
            EventImportPopupComponent
          );
          return EventImportPopupComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_3__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-search/event-search.component.html':
      /*!**************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-search/event-search.component.html ***!
  \**************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div class="page-subtitle">- {{ "global.search" | translate }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-actions">\r\n    <button type="button" mat-raised-button (click)="openNewEvent()" *ngIf="hasUpdateAccessRight">\r\n      {{ "global.create" | translate }}\r\n    </button>\r\n    <button\r\n      id="actions"\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show All Actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n\r\n    <mat-menu #actions="matMenu">\r\n      <button id="favorites" mat-menu-item (click)="updateFavoriteState()">\r\n        {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <div class="grid-row">\r\n        <div class="grid-cell--12">\r\n          <div class="grid-cell grid-cell--container" style="height: auto;">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 class="grid-cell-title">{{ "global.search" | translate }}</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content grid-cell-content-with-section">\r\n              <div class="section">\r\n                <div class="section-content">\r\n                  <div class="row search-criteria-header">\r\n                    <aw-manage-search-criteria\r\n                      [componentId]="SEARCH_CRITERIA_ID"\r\n                      (onSelected)="loadSearchCriteria($event)"\r\n                      (onSavedAsked)="saveSearchCriteriaAsked()"\r\n                      [objectFromPage]="criteriaToSave"\r\n                    ></aw-manage-search-criteria>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="section">\r\n                <h4 class="section-title">1. {{ componentData.componentId + ".assetCriteria" | translate }}</h4>\r\n\r\n                <div class="section-content">\r\n                  <div class="row">\r\n                    <div class="form-group flex--2">\r\n                      <label class="form-label"> &nbsp; </label>\r\n\r\n                      <div class="form-control aw-selectbutton-wrapper">\r\n                        <p-selectButton\r\n                          [(ngModel)]="selectedSearchAsset"\r\n                          [options]="searchAssetList"\r\n                          (onChange)="onChangeSearchAsset()"\r\n                        ></p-selectButton>\r\n                      </div>\r\n                    </div>\r\n                    <div class="form-group"></div>\r\n                  </div>\r\n                  <div class="row">\r\n                    <div class="form-group">\r\n                      <label class="form-label"> {{ componentData.componentId + ".familyVariant" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-dropdown\r\n                          class="aw-dropdown fixed-width"\r\n                          placeholder="&nbsp;"\r\n                          [showClear]="true"\r\n                          [options]="familyVariantList"\r\n                          [(ngModel)]="selectedFamilyVariant"\r\n                          (keyup.enter)="search()"\r\n                          appendTo="body"\r\n                        ></p-dropdown>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      class="form-group"\r\n                      *ngIf="\r\n                        selectedSearchAsset === searchAsset.Equipment ||\r\n                        selectedSearchAsset === searchAsset.GroundEquipment\r\n                      "\r\n                    >\r\n                      <label class="form-label"> {{ componentData.componentId + ".designation" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <input type="text" [(ngModel)]="equipmentDesignation" class="aw-input" />\r\n                      </div>\r\n                    </div>\r\n                    <div class="form-group" *ngIf="selectedSearchAsset !== searchAsset.Equipment"></div>\r\n                    <div class="form-group" *ngIf="selectedSearchAsset !== searchAsset.GroundEquipment"></div>\r\n                    <div class="form-group"></div>\r\n                  </div>\r\n                  <div class="row">\r\n                    <div\r\n                      class="form-group"\r\n                      [ngClass]="{\r\n                        \'display--none\':\r\n                          selectedSearchAsset === searchAsset.All ||\r\n                          selectedSearchAsset === searchAsset.Equipment ||\r\n                          selectedSearchAsset === searchAsset.GroundEquipment\r\n                      }"\r\n                    >\r\n                      <label class="form-label"> {{ componentData.componentId + ".registration" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <input type="text" [(ngModel)]="airRegistration" class="aw-input" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="form-group">\r\n                      <label *ngIf="selectedSearchAsset === searchAsset.Engine" class="form-label">\r\n                        {{ componentData.componentId + ".esnCode" | translate }}\r\n                      </label>\r\n                      <label *ngIf="selectedSearchAsset === searchAsset.Aircraft" class="form-label">\r\n                        {{ componentData.componentId + ".msnCode" | translate }}\r\n                      </label>\r\n                      <label\r\n                        *ngIf="\r\n                          selectedSearchAsset === searchAsset.All ||\r\n                          selectedSearchAsset === searchAsset.Equipment ||\r\n                          selectedSearchAsset === searchAsset.GroundEquipment\r\n                        "\r\n                        class="form-label"\r\n                      >\r\n                        {{ componentData.componentId + ".snCode" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <input type="text" [(ngModel)]="snCode" class="aw-input" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      class="form-group"\r\n                      [ngClass]="{\r\n                        \'display--none\': selectedSearchAsset === searchAsset.Aircraft\r\n                      }"\r\n                    >\r\n                      <label class="form-label"> {{ componentData.componentId + ".pnCode" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <input type="text" [(ngModel)]="pnCode" class="aw-input" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="form-group">\r\n                      <label class="form-label" *ngIf="selectedSearchAsset === searchAsset.Aircraft">\r\n                        {{ componentData.componentId + ".aircraftStatus" | translate }}\r\n                      </label>\r\n                      <label class="form-label" *ngIf="selectedSearchAsset !== searchAsset.Aircraft">\r\n                        {{ componentData.componentId + ".operationalStatus" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-dropdown\r\n                          class="aw-dropdown fixed-width"\r\n                          [options]="operationalStatusList"\r\n                          [(ngModel)]="selectedStatus"\r\n                          [showClear]="true"\r\n                          placeholder="&nbsp;"\r\n                          (keyup.enter)="search()"\r\n                          appendTo="body"\r\n                        ></p-dropdown>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="form-group" *ngIf="selectedSearchAsset !== searchAsset.Engine"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- EVENT CRITERIA -->\r\n              <div class="section">\r\n                <h4 class="section-title">2. {{ componentData.componentId + ".eventCriteria" | translate }}</h4>\r\n\r\n                <div class="section-content">\r\n                  <div class="row">\r\n                    <div class="form-group">\r\n                      <label class="form-label"> {{ componentData.componentId + ".eventCategory" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-dropdown\r\n                          class="aw-dropdown fixed-width"\r\n                          placeholder="&nbsp;"\r\n                          [showClear]="true"\r\n                          [options]="categoryMap"\r\n                          [(ngModel)]="searchObject.notificationTypeCategoryCriteria"\r\n                          (onChange)="getTypeMap()"\r\n                          (keyup.enter)="search()"\r\n                          appendTo="body"\r\n                        ></p-dropdown>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="form-group">\r\n                      <label class="form-label"> {{ componentData.componentId + ".eventType" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-dropdown\r\n                          class="aw-dropdown fixed-width"\r\n                          placeholder="&nbsp;"\r\n                          [showClear]="true"\r\n                          [(ngModel)]="searchObject.typeCode"\r\n                          [options]="eventTypeMap"\r\n                          (keyup.enter)="search()"\r\n                          appendTo="body"\r\n                        ></p-dropdown>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="form-group">\r\n                      <label class="form-label"> {{ componentData.componentId + ".eventCode" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <input type="text" class="aw-input" [(ngModel)]="searchObject.notificationCode" />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="form-group">\r\n                      <label class="form-label"> {{ componentData.componentId + ".eventStatus" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-dropdown\r\n                          class="aw-dropdown fixed-width"\r\n                          placeholder="&nbsp;"\r\n                          [(ngModel)]="searchObject.status"\r\n                          [showClear]="true"\r\n                          [options]="statusMap"\r\n                          (keyup.enter)="search()"\r\n                          appendTo="body"\r\n                        ></p-dropdown>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class="row">\r\n                    <div class="form-group">\r\n                      <label class="form-label"> {{ componentData.componentId + ".eventDate" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-calendar\r\n                          showButtonBar="true"\r\n                          [monthNavigator]="true"\r\n                          [yearNavigator]="true"\r\n                          [yearRange]="sessionService.calendarYearRange"\r\n                          class="aw-calendar"\r\n                          selectionMode="range"\r\n                          [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                          [locale]="sessionService.calendarFormat"\r\n                          [(ngModel)]="eventDate"\r\n                          appendTo="body"\r\n                        ></p-calendar>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="form-group">\r\n                      <label class="form-label"> {{ componentData.componentId + ".closureDate" | translate }} </label>\r\n\r\n                      <div class="form-control">\r\n                        <p-calendar\r\n                          showButtonBar="true"\r\n                          [monthNavigator]="true"\r\n                          [yearNavigator]="true"\r\n                          [yearRange]="sessionService.calendarYearRange"\r\n                          class="aw-calendar"\r\n                          [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                          [locale]="sessionService.calendarFormat"\r\n                          [(ngModel)]="closureDate"\r\n                          appendTo="body"\r\n                        ></p-calendar>\r\n                      </div>\r\n                    </div>\r\n                    <div class="form-group"></div>\r\n                    <div class="form-group"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Advanced criteria -->\r\n              <div class="section">\r\n                <div class="section-content">\r\n                  <div class="advanced-criteria" [ngClass]="{ \'display--none\': !showEventAdvancedCriteria }">\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label">{{ getComponentName() + ".evolutionNumber" | translate }} </label>\r\n\r\n                        <div class="form-control form-control-with-modal">\r\n                          <div class="form-control-data" (click)="openEvolutionDialog()">\r\n                            {{ searchObject.evolutionNumberCriteria }}\r\n                          </div>\r\n\r\n                          <div *ngIf="searchObject.evolutionNumberCriteria" class="btn-clear-wrapper">\r\n                            <i\r\n                              class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                              aria-hidden="true"\r\n                              (click)="\r\n                                searchObject.evolutionNumberCriteria = undefined;\r\n                                searchObject.evolutionRevisionNumberCriteria = undefined;\r\n                                searchObject.evolutionTypeCriteria = undefined\r\n                              "\r\n                            ></i>\r\n                          </div>\r\n                          <div class="btn-search-wrapper">\r\n                            <i\r\n                              class="fa fa-fw fa-search aw-icon btn-search"\r\n                              aria-hidden="true"\r\n                              (click)="openEvolutionDialog()"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".evolutionRevNumber" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [disabled]="true"\r\n                            [(ngModel)]="searchObject.evolutionRevisionNumberCriteria"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".evolutionType" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [disabled]="true"\r\n                            [(ngModel)]="searchObject.evolutionTypeCriteria"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".potentialInfo" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-checkbox class="aw-checkbox" binary="true" [(ngModel)]="isSearchWithCounters"></p-checkbox>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".taskCode" | translate }}\r\n                        </label>\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="searchObject.taskCodeCriteria" />\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".taskVersion" | translate }}\r\n                        </label>\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="searchObject.taskVersionCriteria" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".linkedEventCode" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="searchObject.notNotificationCode" />\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label"> {{ componentData.componentId + ".eventCause" | translate }} </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            placeholder="&nbsp;"\r\n                            [(ngModel)]="searchObject.cause"\r\n                            [showClear]="true"\r\n                            [options]="eventCauseMap"\r\n                            (keyup.enter)="search()"\r\n                            appendTo="body"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label"> {{ componentData.componentId + ".systemId" | translate }} </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            placeholder="&nbsp;"\r\n                            [(ngModel)]="selectedSystemId"\r\n                            [options]="systemIdMap"\r\n                            [showClear]="true"\r\n                            (keyup.enter)="search()"\r\n                            appendTo="body"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label"> {{ componentData.componentId + ".systemRef" | translate }} </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="systemReference" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".fh" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            placeholder="&nbsp;"\r\n                            [(ngModel)]="rationalOperator"\r\n                            [options]="fhMap"\r\n                            [showClear]="true"\r\n                            (keyup.enter)="search()"\r\n                            appendTo="body"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label"> </label>\r\n                        <div class="form-control marginClass">\r\n                          <input type="text" pKeyFilter="int" class="aw-input" [(ngModel)]="rationalOperand" />\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".eventSubject" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="searchObject.notificationSubject" />\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".eventDescription" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="searchObject.description" />\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group"></div>\r\n                    </div>\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label">{{ getComponentName() + ".existingFMD" | translate }}</label>\r\n                        <div class="form-control">\r\n                          <p-checkbox\r\n                            class="aw-checkbox"\r\n                            binary="true"\r\n                            [(ngModel)]="searchObject.notificationWithFmd"\r\n                          ></p-checkbox>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">{{ getComponentName() + ".deducedEvents" | translate }}</label>\r\n                        <div class="form-control">\r\n                          <p-checkbox\r\n                            class="aw-checkbox"\r\n                            binary="true"\r\n                            [(ngModel)]="isDeduced"\r\n                            (onChange)="getDeducedEvent()"\r\n                          ></p-checkbox>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">{{ getComponentName() + ".notDeducedEvents" | translate }}</label>\r\n                        <div class="form-control">\r\n                          <p-checkbox\r\n                            class="aw-checkbox"\r\n                            binary="true"\r\n                            (onChange)="getNotDeducedEvent()"\r\n                            [(ngModel)]="isNotDeduced"\r\n                          ></p-checkbox>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">{{ getComponentName() + ".defferedDefects" | translate }}</label>\r\n                        <div class="form-control">\r\n                          <p-checkbox\r\n                            class="aw-checkbox"\r\n                            binary="true"\r\n                            [(ngModel)]="defferedDefectsSelected"\r\n                          ></p-checkbox>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">{{ getComponentName() + ".criticalDefects" | translate }}</label>\r\n                        <div class="form-control">\r\n                          <p-checkbox\r\n                            class="aw-checkbox"\r\n                            binary="true"\r\n                            [(ngModel)]="criticalDefectsSelected"\r\n                          ></p-checkbox>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="section">\r\n                <div class="section-content">\r\n                  <div class="row search-criteria-footer">\r\n                    <button mat-button (click)="showEventAdvancedCriteria = !showEventAdvancedCriteria">\r\n                      <ng-container *ngIf="showEventAdvancedCriteria">\r\n                        <mat-icon>remove</mat-icon>\r\n                        {{ "global.collapseCriteria" | translate }}\r\n                      </ng-container>\r\n                      <ng-container *ngIf="!showEventAdvancedCriteria">\r\n                        <mat-icon>add</mat-icon>\r\n                        {{ "global.expandCriteria" | translate }}\r\n                      </ng-container>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- FMD Search -->\r\n\r\n              <div class="section">\r\n                <div class="section-content">\r\n                  <div class="advanced-criteria" [ngClass]="{ \'display--none\': !showFMDSearchCriteria }">\r\n                    <div class="section">\r\n                      <br />\r\n                      <h4 class="advanced-criteria-section-title section-header">\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;3. {{ componentData.componentId + ".rootCauseCriteria" | translate }}\r\n                      </h4>\r\n                    </div>\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".rootCausePart" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="searchObject.rootCausePN" />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="display--flex-row flex--1">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".rootCauseItem" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input type="text" class="aw-input" [(ngModel)]="searchObject.rootCauseChapter" />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">&nbsp;</label>\r\n\r\n                          <div class="form-control">\r\n                            <input type="text" class="aw-input" [(ngModel)]="searchObject.rootCauseSection" />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">&nbsp;</label>\r\n\r\n                          <div class="form-control">\r\n                            <input type="text" class="aw-input" [(ngModel)]="searchObject.rootCauseSheet" />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">&nbsp;</label>\r\n\r\n                          <div class="form-control">\r\n                            <input type="text" class="aw-input" [(ngModel)]="searchObject.rootCauseSubject" />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">&nbsp;</label>\r\n\r\n                          <div class="form-control">\r\n                            <input type="text" class="aw-input" [(ngModel)]="searchObject.rootCauseMark" />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".rootCauseFL" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="searchObject.rootCauseFlCode" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="section">\r\n                      <br />\r\n                      <h4 class="advanced-criteria-section-title section-header">\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;4. {{ componentData.componentId + ".defectCriteria" | translate }}\r\n                      </h4>\r\n                    </div>\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label"> {{ componentData.componentId + ".defectName" | translate }} </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            placeholder="&nbsp;"\r\n                            [showClear]="true"\r\n                            [options]="defectNameOptions"\r\n                            [(ngModel)]="searchObject.defectName"\r\n                            (keyup.enter)="search()"\r\n                            appendTo="body"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".defectLocation" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            placeholder="&nbsp;"\r\n                            [showClear]="true"\r\n                            [options]="defectLocationOptions"\r\n                            [(ngModel)]="searchObject.defectLocation"\r\n                            (keyup.enter)="search()"\r\n                            appendTo="body"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".defectDescription" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="searchObject.defectDescription" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".logNumber" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="fmdLogNumber" />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".context" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="fmdContext" />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group"></div>\r\n                    </div>\r\n\r\n                    <div class="section">\r\n                      <br />\r\n                      <h4 class="advanced-criteria-section-title section-header">\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;5. {{ componentData.componentId + ".fmdCriteria" | translate }}\r\n                      </h4>\r\n                    </div>\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label"> {{ componentData.componentId + ".reference" | translate }} </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="searchObject.fmdReferenceCriteria" />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="display--flex-row flex--1">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".creationDate" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              placeholder="&nbsp;"\r\n                              [showClear]="false"\r\n                              [options]="dateOptions"\r\n                              [(ngModel)]="searchObject.fmdStartDateOrderCriteria"\r\n                              (keyup.enter)="search()"\r\n                              appendTo="body"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            &nbsp;\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-calendar\r\n                              showButtonBar="true"\r\n                              [monthNavigator]="true"\r\n                              [yearNavigator]="true"\r\n                              [yearRange]="sessionService.calendarYearRange"\r\n                              class="aw-calendar"\r\n                              [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                              [locale]="sessionService.calendarFormat"\r\n                              appendTo="body"\r\n                              [(ngModel)]="searchObject.fmdStartDateCriteria"\r\n                            ></p-calendar>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="display--flex-row flex--1">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".closureDate" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              placeholder="&nbsp;"\r\n                              [showClear]="false"\r\n                              [options]="dateOptions"\r\n                              [(ngModel)]="searchObject.fmdEndDateOrderCriteria"\r\n                              (keyup.enter)="search()"\r\n                              appendTo="body"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            &nbsp;\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-calendar\r\n                              showButtonBar="true"\r\n                              [monthNavigator]="true"\r\n                              [yearNavigator]="true"\r\n                              [yearRange]="sessionService.calendarYearRange"\r\n                              class="aw-calendar"\r\n                              [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                              [locale]="sessionService.calendarFormat"\r\n                              appendTo="body"\r\n                              [(ngModel)]="searchObject.fmdEndDateCriteria"\r\n                            ></p-calendar>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".closeoutReason" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            placeholder="&nbsp;"\r\n                            [showClear]="true"\r\n                            [options]="closeoutReasonOptions"\r\n                            [(ngModel)]="searchObject.fmdCloseoutReasonCriteria"\r\n                            (keyup.enter)="search()"\r\n                            appendTo="body"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".Status" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            placeholder="&nbsp;"\r\n                            [showClear]="true"\r\n                            [options]="statusOptions"\r\n                            [(ngModel)]="searchObject.fmdStatusStateCriteria"\r\n                            (keyup.enter)="search()"\r\n                            appendTo="body"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".author" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [(ngModel)]="searchObject.fmdAuthorCriteria" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row search-criteria-footer">\r\n                        <div\r\n                          class="advanced-criteria-toggler"\r\n                          *ngIf="!showFMDSearchCriteria"\r\n                          (click)="showFMDSearchCriteria = !showFMDSearchCriteria"\r\n                        >\r\n                          <i class="fa fa-fw fa-plus" aria-hidden="true"></i>\r\n\r\n                          <div class="advanced-criteria-toggler-more">\r\n                            {{ componentData.componentId + ".fmd" | translate }}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          class="advanced-criteria-toggler"\r\n                          *ngIf="showFMDSearchCriteria"\r\n                          (click)="showFMDSearchCriteria = !showFMDSearchCriteria"\r\n                        >\r\n                          <i class="fa fa-fw fa-minus" aria-hidden="true"></i>\r\n\r\n                          <div class="advanced-criteria-toggler-less">{{ "global.collapseCriteria" | translate }}</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- ACTION -->\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row search-criteria-footer">\r\n                        <div class="search-actions">\r\n                          <button\r\n                            #searchButton\r\n                            type="button"\r\n                            mat-raised-button\r\n                            class="btn-with-spinner"\r\n                            color="primary"\r\n                            (click)="search()"\r\n                            appKeyPress\r\n                            [keyCode]="\'Enter\'"\r\n                            (keyPress)="search()"\r\n                          >\r\n                            <span *ngIf="isLoading" class="lds-hourglass"></span>\r\n                            {{ "global.toSearch" | translate }}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="grid-row">\r\n        <div class="grid-cell--12">\r\n          <div #resultsContainerAnchor class="grid-cell grid-cell--container">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 class="grid-cell-title">\r\n                  {{ "global.results" | translate }} ({{ resultsTableDataSource.dataCount }})\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <a-table [dataSource]="resultsTableDataSource">\r\n                <ng-template tableActionsDef>\r\n                  <button\r\n                    *ngIf="resultsTableDataSource.hasData && !resultsTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="exportTable()"\r\n                  >\r\n                    {{ "global.export" | translate }}\r\n                  </button>\r\n\r\n                  <button\r\n                    *ngIf="hasManageAccessRight && resultsTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    color="warn"\r\n                    (click)="deleteEvents()"\r\n                  >\r\n                    {{ "global.delete" | translate }}\r\n                  </button>\r\n\r\n                  <button\r\n                    *ngIf="resultsTableDataSource.hasDataSelection && deleteFmdVisible()"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    color="warn"\r\n                    (click)="deleteFMDEvents()"\r\n                  >\r\n                    {{ componentData.componentId + ".deleteFMD" | translate }}\r\n                  </button>\r\n\r\n                  <button\r\n                    *ngIf="\r\n                      resultsTableDataSource.dataSelectionCount === 1 &&\r\n                      resultsTableDataSource.dataSelection[0].fmdReference === \'Create FMD\'\r\n                    "\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="openFmdEvent(resultsTableDataSource.dataSelection[0])"\r\n                  >\r\n                    {{ componentData.componentId + ".createFMD" | translate }}\r\n                  </button>\r\n\r\n                  <button\r\n                    *ngIf="resultsTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="openSelectedEvent()"\r\n                  >\r\n                    {{ "global.open" | translate }}\r\n                  </button>\r\n                </ng-template>\r\n\r\n                <ng-template columnDef="asset" let-rowData="rowData">\r\n                  <a pTooltip="{{ rowData.asset }}" tooltipPosition="bottom" (click)="openAsset(rowData)">\r\n                    {{ rowData.asset }}\r\n                  </a>\r\n                </ng-template>\r\n                <ng-template columnDef="notificationCode" let-rowData="rowData">\r\n                  <a (click)="openEvent(rowData)">\r\n                    {{ rowData.notificationCode }}\r\n                  </a>\r\n                </ng-template>\r\n                <ng-template columnDef="notificationSubject" let-rowData="rowData">\r\n                  <a pTooltip="{{ rowData.notificationSubject }}" tooltipPosition="bottom">\r\n                    {{ rowData.notificationSubject }}\r\n                  </a>\r\n                </ng-template>\r\n\r\n                <ng-template rowExpansionDef let-rowData="rowData">\r\n                  <div class="row">\r\n                    <div class="form-group">\r\n                      <label class="form-label">\r\n                        {{ getComponentName() + ".reportingDate" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <input\r\n                          *ngIf="!!rowData.reportingDate"\r\n                          class="aw-input"\r\n                          type="text"\r\n                          [(ngModel)]="rowData.reportingDate"\r\n                          [disabled]="true"\r\n                        />\r\n                        <input\r\n                          *ngIf="rowData.reportingDate === null || rowData.reportingDate === undefined"\r\n                          class="aw-input"\r\n                          type="text"\r\n                          disabled\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="form-group">\r\n                      <label class="form-label">\r\n                        {{ getComponentName() + ".fmdReference" | translate }}\r\n                      </label>\r\n\r\n                      <div class="form-control">\r\n                        <span\r\n                          *ngIf="!!rowData.fmdReference && rowData.fmdReference === fmdHyperlinkCreateValue"\r\n                          class="form-control-generic"\r\n                        >\r\n                          <a (click)="openFmdEvent(rowData)" style="border: none">{{\r\n                            componentData.componentId + ".createFMD" | translate\r\n                          }}</a>\r\n                        </span>\r\n                        <span\r\n                          *ngIf="!!rowData.fmdReference && rowData.fmdReference !== fmdHyperlinkCreateValue"\r\n                          class="form-control-generic"\r\n                        >\r\n                          <a (click)="openFmdEvent(rowData)" style="border: none">{{ rowData.fmdReference }}</a>\r\n                        </span>\r\n                        <input\r\n                          *ngIf="rowData.fmdReference === null || rowData.fmdReference === undefined"\r\n                          class="aw-input"\r\n                          type="text"\r\n                          disabled\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </ng-template>\r\n                <ng-template columnDef="status" let-rowData="rowData">\r\n                  <span *ngIf="rowData.notificationStatusVisibility">{{ rowData.status }}</span>\r\n                </ng-template>\r\n              </a-table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <aw-dialog-search-evolution\r\n      *ngIf="showEvolutionDialog"\r\n      [(display)]="showEvolutionDialog"\r\n      (onSelected)="onSelectedEvolution($event)"\r\n    >\r\n    </aw-dialog-search-evolution>\r\n  </div>\r\n</div>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-search/event-search.component.scss':
      /*!**************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-search/event-search.component.scss ***!
  \**************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          ':host .marginClass {\n  margin-top: 1em !important; }\n\n:host .advanced-criteria-section-title {\n  color: #01579b; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2V2ZW50L2V2ZW50LXNlYXJjaC9kOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGdpdGh1Yl9wYWdlcy9zcmNcXGFwcFxcbWFpblxcZmxlZXQtbWFuYWdlbWVudFxcZXZlbnRcXGV2ZW50LXNlYXJjaFxcZXZlbnQtc2VhcmNoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBS0ksMEJBQTBCLEVBQUE7O0FBTDlCO0VBU0ksY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2V2ZW50L2V2ZW50LXNlYXJjaC9ldmVudC1zZWFyY2guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgI2V2ZW50LXNlYXJjaC1jb21wb25lbnQge1xyXG4gIH1cclxuXHJcbiAgLm1hcmdpbkNsYXNzIHtcclxuICAgIG1hcmdpbi10b3A6IDFlbSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgLmFkdmFuY2VkLWNyaXRlcmlhLXNlY3Rpb24tdGl0bGUge1xyXG4gICAgY29sb3I6ICMwMTU3OWI7XHJcbiAgfVxyXG59XHJcbiJdfQ== */';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event-search/event-search.component.ts':
      /*!************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event-search/event-search.component.ts ***!
  \************************************************************************************/
      /*! exports provided: EventSearchComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'EventSearchComponent', function() {
          return EventSearchComponent;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! moment */ './node_modules/moment/moment.js'
        );
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          moment__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! rxjs */ './node_modules/rxjs/_esm5/index.js'
        );
        /* harmony import */ var _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../shared/components/table/table-data-source */ './src/app/shared/components/table/table-data-source.ts'
        );
        /* harmony import */ var _shared_constants_app_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../shared/constants/app-constants */ './src/app/shared/constants/app-constants.ts'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../../shared/constants/bido-attribute-constants */ './src/app/shared/constants/bido-attribute-constants.ts'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../../shared/constants/lang-constants */ './src/app/shared/constants/lang-constants.ts'
        );
        /* harmony import */ var _shared_constants_search_criteria_constants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../../shared/constants/search-criteria.constants */ './src/app/shared/constants/search-criteria.constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../../shared/enums/table-column-filter-mode.enum */ './src/app/shared/enums/table-column-filter-mode.enum.ts'
        );
        /* harmony import */ var _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../../shared/enums/table-selection-mode.enum */ './src/app/shared/enums/table-selection-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../../shared/services/confirmation.service */ './src/app/shared/services/confirmation.service.ts'
        );
        /* harmony import */ var _shared_services_export_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../../shared/services/export.service */ './src/app/shared/services/export.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ../../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ../../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
          /*! ../../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
          /*! ../../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
          /*! ../../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
          /*! ../../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_page_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
          /*! ../../../../shared/types/page-component */ './src/app/shared/types/page-component.ts'
        );
        /* harmony import */ var _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
          /*! ../../../../shared/utils/list-utils */ './src/app/shared/utils/list-utils.ts'
        );
        /* harmony import */ var _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
          /*! ../../../../shared/utils/select-item-utils */ './src/app/shared/utils/select-item-utils.ts'
        );
        /* harmony import */ var _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
          /*! ../../../../shared/utils/string-utils */ './src/app/shared/utils/string-utils.ts'
        );
        /* harmony import */ var _event_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
          /*! ../event.service */ './src/app/main/fleet-management/event/event.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __assign =
          (undefined && undefined.__assign) ||
          function() {
            __assign =
              Object.assign ||
              function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                  s = arguments[i];
                  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
              };
            return __assign.apply(this, arguments);
          };
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var SearchAsset;
        (function(SearchAsset) {
          SearchAsset[(SearchAsset['All'] = 1)] = 'All';
          SearchAsset[(SearchAsset['Aircraft'] = 2)] = 'Aircraft';
          SearchAsset[(SearchAsset['Equipment'] = 3)] = 'Equipment';
          SearchAsset[(SearchAsset['Engine'] = 4)] = 'Engine';
          SearchAsset[(SearchAsset['GroundEquipment'] = 5)] = 'GroundEquipment';
        })(SearchAsset || (SearchAsset = {}));
        var EventSearchComponent = /** @class */ (function(_super) {
          __extends(EventSearchComponent, _super);
          function EventSearchComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService,
            eventService,
            sessionService,
            exportService,
            translateService,
            propertiesService,
            confirmationService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_12__['ComponentOpenMode'].Write,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService
              ) || this;
            _this.eventService = eventService;
            _this.sessionService = sessionService;
            _this.exportService = exportService;
            _this.translateService = translateService;
            _this.propertiesService = propertiesService;
            _this.confirmationService = confirmationService;
            _this.rationalOperand = 0;
            _this.isLoading = false;
            _this.SEARCH_CRITERIA_ID =
              _shared_constants_app_constants__WEBPACK_IMPORTED_MODULE_5__['AppConstants'].EVENT_SEARCH_CRITERIA_ID;
            _this.searchAsset = SearchAsset;
            _this.searchObject = {};
            _this.searchAssetList = [];
            _this.businessPartnerList = [];
            _this.operationalStatusList = [];
            _this.familyVariantList = [];
            _this.fleetList = [];
            _this.locationList = [];
            _this.functionList = [];
            _this.wareHouseList = [];
            _this.eventCauseMap = [];
            _this.categoryMap = [];
            _this.statusMap = [];
            _this.eventTypeMap = [];
            _this.systemIdMap = [];
            _this.fhMap = [];
            _this.fmdHyperlinkCreateValue = EventSearchComponent_1.FMD_HYPERLINK_CREATE_VALUE;
            _this.initEventTableCols();
            _this.loadOperationalStatusList();
            _this.loadBusinessPartnerList();
            _this.loadFamilyVariantList();
            _this.loadFleetList();
            _this.loadFunctionList();
            _this.loadLocationList();
            _this.loadWareHouseList();
            _this.initSearchObject();
            _this.initDropdowns();
            return _this;
          }
          EventSearchComponent_1 = EventSearchComponent;
          EventSearchComponent.prototype.getComponentName = function() {
            return _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_8__['ComponentConstants']
              .FLE_EVENT_SEARCH;
          };
          EventSearchComponent.prototype.ngOnInit = function() {
            _super.prototype.ngOnInit.call(this);
            this.searchData = {};
            this.setSearchAssetList();
            this.initEvolutionTableData();
            this.displayComponentContext('global.search', true);
          };
          EventSearchComponent.prototype.setSearchAssetList = function() {
            var _this = this;
            var allKey = 'global.all';
            var aircraftKey = 'global.aircraft';
            var engineKey = 'global.engine';
            var equipmentKey = 'global.equipment';
            var groundEquipmentKey = 'global.groundEquipment';
            this.translateService
              .get([allKey, aircraftKey, engineKey, equipmentKey, groundEquipmentKey])
              .subscribe(function(results) {
                var allLabel = !!results ? results[allKey] : 'All';
                var aircraftLabel = !!results ? results[aircraftKey] : 'Aircraft';
                var engineLabel = !!results ? results[engineKey] : 'Engine';
                var equipmentLabel = !!results ? results[equipmentKey] : 'Equipment';
                var groundEquipmentLabel = !!results ? results[groundEquipmentKey] : 'Ground Equipment';
                _this.searchAssetList = [
                  { label: allLabel, value: SearchAsset.All },
                  { label: aircraftLabel, value: SearchAsset.Aircraft },
                  { label: engineLabel, value: SearchAsset.Engine },
                  { label: equipmentLabel, value: SearchAsset.Equipment },
                  { label: groundEquipmentLabel, value: SearchAsset.GroundEquipment }
                ];
                _this.selectedSearchAsset = SearchAsset.All;
              });
          };
          /**
           * Fetch dropdown lists
           */
          EventSearchComponent.prototype.initDropdowns = function() {
            var _this = this;
            this.eventService.findNotificationDateOrderCriteria().subscribe(function(results) {
              _this.dateOptions = results;
              _this.searchObject.fmdStartDateOrderCriteria = _this.dateOptions[0].value;
              _this.searchObject.fmdEndDateOrderCriteria = _this.dateOptions[0].value;
            });
            var attribute = {
              attributeId: _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_7__[
                'BidoAttributeConstants'
              ].EVENT_SYSTEM_SOURCE_ID.toString()
            };
            var eventMap = this.propertiesService.getValue('getEventCauseMap');
            var categoryMap = this.propertiesService.getValue('getEventCategoryMap');
            var status = this.eventService.getEventStatusValues();
            var systemId = this.eventService.getAssetSourceSystemIdList(attribute);
            var defectNameMap = this.propertiesService.getValue('getDefectNameMap');
            var defectLocationMap = this.propertiesService.getValue('getDefectLocationMap');
            var closeoutReasonMap = this.propertiesService.getValue('getFmdCloseoutReasonMap');
            var statusOps = this.propertiesService.getValue('getFmdStatusMap');
            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['forkJoin'])([
              eventMap,
              categoryMap,
              status,
              systemId,
              defectNameMap,
              defectLocationMap,
              closeoutReasonMap,
              statusOps
            ]).subscribe(function(results) {
              _this.eventCauseMap = results[0];
              _this.categoryMap = results[1];
              _this.statusMap = results[2];
              // tslint:disable-next-line:no-magic-numbers
              _this.systemIdMap = results[3];
              // tslint:disable-next-line: no-magic-numbers
              _this.defectNameOptions = results[4];
              // tslint:disable-next-line: no-magic-numbers
              _this.defectLocationOptions = results[5];
              // tslint:disable-next-line: no-magic-numbers
              _this.closeoutReasonOptions = results[6];
              // tslint:disable-next-line: no-magic-numbers
              _this.statusOptions = results[7];
            });
            var fhMapObj = {
              1: '=',
              3: '<',
              4: '>',
              2: '<>'
            };
            var keys = Object.keys(fhMapObj);
            keys.forEach(function(val) {
              _this.fhMap.push({
                value: Number(val),
                label: fhMapObj[val]
              });
            });
          };
          /**
           * Get type map on basis of category
           */
          EventSearchComponent.prototype.getTypeMap = function() {
            var _this = this;
            this.eventTypeMap = [];
            this.searchObject.typeCode = undefined;
            if (!!this.searchObject && !!this.searchObject.notificationTypeCategoryCriteria) {
              // Event Type Map
              this.eventService
                .findAllBidoNotificationTypeByTypeCategory(this.searchObject.notificationTypeCategoryCriteria)
                .subscribe(function(res) {
                  res.forEach(function(dto) {
                    if (!!dto && !!dto.typeDescription && !!dto.typeCode) {
                      _this.eventTypeMap.push({
                        label: dto.typeDescription,
                        value: dto.typeCode
                      });
                    }
                  });
                });
            }
          };
          EventSearchComponent.prototype.openOperatorDialog = function() {
            this.showOperatorDialog = true;
          };
          EventSearchComponent.prototype.openOwnerDialog = function() {
            this.showOwnerDialog = true;
          };
          /**
           * Delete selected event(s)
           */
          EventSearchComponent.prototype.deleteEvents = function() {
            var _this = this;
            var confirmMessageKey =
              this.resultsTableDataSource.dataSelectionCount > 1
                ? 'confirmDeleteSelectedEvents'
                : 'confirmDeleteSelectedEvent';
            this.confirmationService.confirmDelete({
              messageKey: this.getTranslateKey(confirmMessageKey),
              accept: function() {
                var eventIds = [];
                _this.resultsTableDataSource.dataSelection.map(function(event) {
                  if (!!event && !!event.notificationCode) {
                    var dto = {
                      notificationCode: event.notificationCode
                    };
                    eventIds.push(dto);
                  }
                });
                _this.eventService.removeBidoNotification(eventIds).subscribe(function(msg) {
                  var successMessageKey =
                    _this.resultsTableDataSource.dataSelectionCount > 1
                      ? 'successOnDeleteEvents'
                      : 'successOnDeleteEvent';
                  if (!msg) {
                    _this.messageService.showSuccessMessage(_this.getTranslateKey(successMessageKey));
                  } else {
                    _this.messageService.showWarningMessage(msg);
                  }
                  _this.resultsTableDataSource.deleteDataSelection();
                  _this.search();
                });
              }
            });
          };
          /**
           * Exports table
           */
          EventSearchComponent.prototype.exportTable = function() {
            var table = this.resultsTableDataSource.dataSrc.map(function(event) {
              return {
                notificationCode: event.notificationCode,
                asset: event.asset,
                typeCode: event.typeCode,
                notificationSubject: event.notificationSubject,
                reportingPeriodStartDate: event.reportingPeriodStartDate,
                reportingDate: event.reportingDate,
                reportingPeriodEndDate: event.reportingPeriodEndDate,
                status: event.status
              };
            });
            this.exportService.toExcel(
              table,
              EventSearchComponent_1.EVENT_TABLE_EXPORT_NAME,
              this.componentData.componentId
            );
          };
          /**
           * Initilize table cols
           */
          EventSearchComponent.prototype.initEventTableCols = function() {
            this.resultsTableDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_4__[
              'TableDataSource'
            ]({
              allowMultiSelect: true,
              columns: [
                { field: 'notificationCode', translateKey: this.getTranslateKey('notificationCode') },
                { field: 'asset', translateKey: this.getTranslateKey('asset') },
                { field: 'typeCode', translateKey: this.getTranslateKey('typeCode') },
                { field: 'notificationSubject', translateKey: this.getTranslateKey('notificationSubject') },
                { field: 'reportingPeriodStartDate', translateKey: this.getTranslateKey('reportingPeriodStartDate') },
                { field: 'reportingPeriodEndDate', translateKey: this.getTranslateKey('reportingPeriodEndDate') },
                { field: 'status', translateKey: this.getTranslateKey('status') }
              ],
              data: []
            });
          };
          EventSearchComponent.prototype.onChangeSearchAsset = function() {
            this.initSearchObject();
            this.resetAssetFields();
            this.loadFamilyVariantList();
            this.loadOperationalStatusList();
            this.loadWareHouseList();
          };
          /**
           * Init search Object
           */
          EventSearchComponent.prototype.initSearchObject = function() {
            this.criteriaName = undefined;
            this.selectedBusinessPartner = undefined;
            this.assetCode = undefined;
            this.selectedFamilyVariant = undefined;
            this.selectedLocation = undefined;
            this.selectedStatus = undefined;
            this.airRegistration = undefined;
            this.assetCode = undefined;
            this.snCode = undefined;
            this.pnCode = undefined;
            this.selectedFunction = undefined;
            this.modelCode = undefined;
            this.fmdLogNumber = undefined;
            this.fmdContext = undefined;
            this.equipmentDesignation = undefined;
            this.searchObject.notificationTypeCategoryCriteria = undefined;
            this.searchObject.typeCode = undefined;
            this.searchObject.notificationCode = undefined;
            this.searchObject.status = undefined;
            this.eventDate = undefined;
            this.closureDate = undefined;
            this.searchObject.evolutionNumberCriteria = undefined;
            this.searchObject.evolutionRevisionNumberCriteria = undefined;
            this.searchObject.evolutionTypeCriteria = undefined;
            this.searchObject.notNotificationCode = undefined;
            this.searchObject.cause = undefined;
            this.selectedSystemId = undefined;
            this.systemReference = undefined;
            this.searchObject.notificationSubject = undefined;
            this.searchObject.description = undefined;
            this.searchObject.notificationWithFmd = undefined;
            this.isDeduced = false;
            this.isNotDeduced = false;
            this.defferedDefectsSelected = false;
            this.criticalDefectsSelected = false;
            this.rationalOperator = undefined;
            this.rationalOperand = 0;
            this.searchObject.notificationCreationDateCriteria1 = undefined;
            this.searchObject.notificationCreationDateCriteria2 = undefined;
            this.searchObject.notificationCreationDateOrderCriteria1 = undefined;
            this.searchObject.notificationCreationDateOrderCriteria2 = undefined;
            this.searchObject.notificationEndDateCriteria = undefined;
            this.searchObject.notificationEndDateOrderCriteria = undefined;
            this.searchObject.attributeMap = {};
            this.searchObject = {};
          };
          /**
           * IS aircraft or engine check
           */
          EventSearchComponent.prototype.isEngine = function() {
            return false;
          };
          EventSearchComponent.prototype.isAircraft = function() {
            return false;
          };
          /**
           * Gets Type Code
           */
          EventSearchComponent.prototype.getsTypeCode = function(code) {
            var caseType = 3;
            var type;
            switch (code) {
              case 1: {
                type = undefined;
                break;
              }
              case 2: {
                type =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_AIRCRAFT_KEY;
                break;
              }
              case caseType: {
                type =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_MAJOR_EQUIPMENT_KEY;
                break;
              }
              case SearchAsset.GroundEquipment: {
                type =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_TOOL_KEY;
                break;
              }
              default: {
                type =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_ENGINE_KEY;
                break;
              }
            }
            return type;
          };
          EventSearchComponent.prototype.setAttributeDTO = function() {
            // tslint:disable-next-line:no-any
            this.searchObject.attributeMap = {};
            // tslint:disable-next-line: no-any
            this.attributesMap = new Map();
            if (!!this.defferedDefectsSelected) {
              this.attributesMap.set(
                _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_7__['BidoAttributeConstants']
                  .EVENT_IS_DEFERRED_DEFECT,
                this.defferedDefectsSelected
              );
            }
            if (!!this.criticalDefectsSelected) {
              this.attributesMap.set(
                _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_7__['BidoAttributeConstants']
                  .EVENT_DEFECT_IS_CRITICAL,
                this.criticalDefectsSelected
              );
            }
            if (!!this.selectedSystemId) {
              this.attributesMap.set(
                _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_7__['BidoAttributeConstants']
                  .EVENT_SYSTEM_SOURCE_ID,
                this.selectedSystemId
              );
            }
            if (!!this.systemReference) {
              this.attributesMap.set(
                _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_7__['BidoAttributeConstants']
                  .EVENT_SYSTEM_SOURCE_REFERENCE,
                this.systemReference
              );
            }
            if (!!this.fmdLogNumber) {
              this.attributesMap.set(
                _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_7__['BidoAttributeConstants']
                  .EVENT_DEFECT_LOG_NUMBER,
                this.fmdLogNumber
              );
            }
            if (!!this.fmdContext) {
              this.attributesMap.set(
                _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_7__['BidoAttributeConstants']
                  .EVENT_DEFECT_DETECTION_CONTEXT,
                this.fmdContext
              );
            }
            var attributesConvMap = {};
            if (this.attributesMap.size !== 0) {
              this.attributesMap.forEach(function(value, key) {
                attributesConvMap[key] = value;
              });
              if (Object.keys(attributesConvMap).length > 0) {
                this.searchObject.attributeMap = __assign({}, attributesConvMap);
              }
            }
          };
          EventSearchComponent.prototype.resetAssetFields = function() {
            this.searchObject.aircraftAirframer = undefined;
            this.searchObject.aircraftCode = undefined;
            this.searchObject.aircraftFamilyVariantCode = undefined;
            this.searchObject.aircraftLocation = undefined;
            this.searchObject.aircraftOperationalStatus = undefined;
            this.searchObject.aircraftRegistration = undefined;
            this.searchObject.aircraftManufacturerSerialNumber = undefined;
            this.searchObject.engineCode = undefined;
            this.searchObject.engineFamilyVariantCode = undefined;
            this.searchObject.engineLocation = undefined;
            this.searchObject.engineOperationalStatus = undefined;
            this.searchObject.engineRegistration = undefined;
            this.searchObject.engineSerialNumber = undefined;
            this.searchObject.engineModelCode = undefined;
            this.searchObject.equipmentCode = undefined;
            this.searchObject.equipmentDesignation = undefined;
            this.searchObject.equipmentFamilyVariantCode = undefined;
            this.searchObject.equipmentLocation = undefined;
            this.searchObject.equipmentOperationalStatus = undefined;
            this.searchObject.equipmentPartNumber = undefined;
            this.searchObject.equipmentSerialNumber = undefined;
            this.searchObject = {};
            this.fmdLogNumber = undefined;
            this.fmdContext = undefined;
          };
          /**
           * Responsible for converting ui to search input dto
           */
          EventSearchComponent.prototype.convertSearchObjToResponseInputDTO = function() {
            this.setAttributeDTO();
            var eventDTO = this.searchObject;
            if (!!this.eventDate) {
              eventDTO.notificationCreationDateOrderCriteria1 = this.eventDate[1]
                ? _shared_constants_search_criteria_constants__WEBPACK_IMPORTED_MODULE_11__['SearchCriteriaConstants']
                    .DATE_AFTER_KEY
                : _shared_constants_search_criteria_constants__WEBPACK_IMPORTED_MODULE_11__['SearchCriteriaConstants']
                    .DATE_AT_KEY;
              eventDTO.notificationCreationDateOrderCriteria2 =
                _shared_constants_search_criteria_constants__WEBPACK_IMPORTED_MODULE_11__[
                  'SearchCriteriaConstants'
                ].DATE_BEFORE_KEY;
              // if search between 2 dates:  remove 1 day to the start date in order to include it in the search
              // Alose add 1 day to the end date to include it.
              eventDTO.notificationCreationDateCriteria1 = this.eventDate[1]
                ? moment__WEBPACK_IMPORTED_MODULE_2__(this.eventDate[0])
                    .subtract(1, 'days')
                    .toDate()
                : this.eventDate[0];
              eventDTO.notificationCreationDateCriteria2 = moment__WEBPACK_IMPORTED_MODULE_2__(this.eventDate[1])
                .add(1, 'days')
                .toDate();
            }
            if (this.closureDate) {
              eventDTO.notificationEndDateOrderCriteria =
                _shared_constants_search_criteria_constants__WEBPACK_IMPORTED_MODULE_11__[
                  'SearchCriteriaConstants'
                ].DATE_AT_KEY;
              eventDTO.notificationEndDateCriteria = this.closureDate;
            }
            switch (this.selectedSearchAsset) {
              case this.searchAsset.Aircraft: {
                // TODO
                eventDTO.assetFunctionCriteria = this.getsTypeCode(this.searchAsset.Aircraft);
                eventDTO.aircraftCode = this.assetCode;
                eventDTO.aircraftFamilyVariantCode = this.selectedFamilyVariant;
                eventDTO.aircraftLocation = this.selectedLocation;
                eventDTO.aircraftOperationalStatus = this.selectedStatus;
                eventDTO.aircraftRegistration = this.airRegistration;
                eventDTO.aircraftManufacturerSerialNumber = this.snCode;
                break;
              }
              case this.searchAsset.Engine: {
                // TODO
                eventDTO.assetFunctionCriteria = this.getsTypeCode(this.searchAsset.Engine);
                eventDTO.engineCode = this.assetCode;
                eventDTO.engineFamilyVariantCode = this.selectedFamilyVariant;
                eventDTO.engineLocation = this.selectedLocation;
                eventDTO.engineOperationalStatus = this.selectedStatus;
                eventDTO.engineRegistration = this.airRegistration;
                eventDTO.engineSerialNumber = this.snCode;
                eventDTO.engineModelCode = this.modelCode;
                break;
              }
              case this.searchAsset.Equipment: {
                // TODO
                eventDTO.assetFunctionCriteria = this.getsTypeCode(this.searchAsset.Equipment);
                eventDTO.equipmentCode = this.assetCode;
                eventDTO.equipmentFamilyVariantCode = this.selectedFamilyVariant;
                eventDTO.equipmentLocation = this.selectedLocation;
                eventDTO.equipmentOperationalStatus = this.selectedStatus;
                eventDTO.equipmentPartNumber = this.pnCode;
                eventDTO.equipmentSerialNumber = this.snCode;
                eventDTO.equipmentDesignation = this.equipmentDesignation;
                break;
              }
              case this.searchAsset.GroundEquipment: {
                // TODO
                eventDTO.assetFunctionCriteria = this.getsTypeCode(this.searchAsset.GroundEquipment);
                eventDTO.equipmentCode = this.assetCode;
                eventDTO.equipmentFamilyVariantCode = this.selectedFamilyVariant;
                eventDTO.equipmentLocation = this.selectedLocation;
                eventDTO.equipmentOperationalStatus = this.selectedStatus;
                eventDTO.equipmentPartNumber = this.pnCode;
                eventDTO.equipmentSerialNumber = this.snCode;
                eventDTO.equipmentDesignation = this.equipmentDesignation;
                break;
              }
              default: {
                eventDTO.assetFunctionCriteria = this.getsTypeCode(this.searchAsset.All);
                eventDTO.aircraftCode = this.assetCode;
                eventDTO.aircraftFamilyVariantCode = this.selectedFamilyVariant;
                eventDTO.aircraftLocation = this.selectedLocation;
                eventDTO.aircraftOperationalStatus = this.selectedStatus;
                eventDTO.aircraftRegistration = this.airRegistration;
                eventDTO.engineCode = this.assetCode;
                eventDTO.engineFamilyVariantCode = this.selectedFamilyVariant;
                eventDTO.engineLocation = this.selectedLocation;
                eventDTO.engineOperationalStatus = this.selectedStatus;
                eventDTO.engineRegistration = this.airRegistration;
                eventDTO.engineSerialNumber = this.snCode;
                eventDTO.engineModelCode = this.modelCode;
                eventDTO.equipmentCode = this.assetCode;
                eventDTO.equipmentFamilyVariantCode = this.selectedFamilyVariant;
                eventDTO.equipmentLocation = this.selectedLocation;
                eventDTO.equipmentOperationalStatus = this.selectedStatus;
                eventDTO.equipmentPartNumber = this.pnCode;
                eventDTO.equipmentSerialNumber = this.snCode;
                break;
              }
            }
            eventDTO.notificationCode = !!this.searchObject.notificationCode
              ? this.searchObject.notificationCode
              : undefined;
            var searchEventDTO = {
              eventCriteriaInputDTO: eventDTO
            };
            if (this.rationalOperator) {
              searchEventDTO.rationalOperator = this.rationalOperator;
              searchEventDTO.rationalOperand = this.rationalOperand;
            }
            return searchEventDTO;
          };
          EventSearchComponent.prototype.isColumnPresent = function() {
            var isFound = false;
            this.resultsTableDataSource.columns.filter(function(row) {
              if (row.field === 'currentTSNValue') {
                isFound = true;
              }
            });
            return isFound;
          };
          /**
           * Action on search button
           */
          EventSearchComponent.prototype.search = function() {
            var _this = this;
            if (this.isScreenValidate()) {
              this.resultsTableDataSource.dataSrc.forEach(function(res) {
                res._expand = false;
              });
              this.resultsTableDataSource.setData([]);
              _super.prototype.scrollToAnchor.call(this, this.resultsContainerAnchor);
              this.isLoading = true;
              this.eventService
                .findBidoNotificationsBySearchCriteria(this.convertSearchObjToResponseInputDTO())
                .subscribe(function(res) {
                  if (_this.isSearchWithCounters) {
                    var index = 3;
                    if (!_this.isColumnPresent()) {
                      _this.resultsTableDataSource.columns.splice(2, 0, {
                        field: 'currentTSNValue',
                        translateKey: _this.getTranslateKey('currentTSNValue'),
                        width: '5rem'
                      });
                      _this.resultsTableDataSource.columns.splice(index, 0, {
                        field: 'currentCSNValue',
                        translateKey: _this.getTranslateKey('currentCSNValue'),
                        width: '5rem'
                      });
                    }
                  } else {
                    var isFound_1 = false;
                    _this.resultsTableDataSource.columns.filter(function(row) {
                      if (row.field === 'currentTSNValue') {
                        isFound_1 = true;
                      }
                    });
                    // Splicing columns of cy and ts
                    if (isFound_1) {
                      _this.resultsTableDataSource.columns.splice(2, 1);
                      _this.resultsTableDataSource.columns.splice(2, 1);
                    }
                  }
                  res.list.forEach(function(data) {
                    if (!!data.status) {
                      var statusConst = _this.statusMap.filter(function(f) {
                        return f.value === data.status;
                      });
                      if (statusConst.length > 0) {
                        data.status = statusConst[0].label;
                      }
                      data._expand = false;
                    }
                    _this.resultsTableDataSource.addData([data]);
                  });
                  _this.resultsTableDataSource.dataSelection = [];
                  _super.prototype.differ.call(_this, function() {
                    _super.prototype.scrollToAnchor.call(_this, _this.resultsContainerAnchor);
                  });
                  _this.isLoading = false;
                });
            }
          };
          EventSearchComponent.prototype.isScreenValidate = function() {
            if (!!this.rationalOperator && this.rationalOperand !== undefined) {
              if (!!this.snCode) {
                return true;
              } else {
                this.messageService.showErrorMessage(this.getTranslateKey('snFieldMandory'));
                return false;
              }
            } else {
              if (!!this.rationalOperator && !this.rationalOperand) {
                this.searchObject.equipmentTsnOp = undefined;
              }
            }
            return true;
          };
          EventSearchComponent.prototype.openEvolutionDialog = function() {
            this.showEvolutionDialog = true;
          };
          /**
           * Load Business partner list
           */
          EventSearchComponent.prototype.loadBusinessPartnerList = function() {
            var _this = this;
            this.eventService.findAllBidoCustomer().subscribe(function(results) {
              _this.businessPartnerList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_25__['ListUtils']
                .orEmpty(results)
                .filter(function(customer) {
                  return !!customer.customerCode;
                })
                .map(function(customer) {
                  return {
                    label: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_27__['StringUtils'].isNullOrEmpty(
                      customer.customerName
                    )
                      ? customer.customerCode
                      : customer.customerName + ' (' + customer.customerCode + ')',
                    value: customer.customerCode
                  };
                });
            });
          };
          /**
           * Load Family variant list
           */
          EventSearchComponent.prototype.loadFamilyVariantList = function() {
            var _this = this;
            var familyFunction;
            if (this.selectedSearchAsset === SearchAsset.Aircraft) {
              familyFunction =
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_AIRCRAFT_KEY;
            } else if (this.selectedSearchAsset === SearchAsset.Engine) {
              familyFunction =
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_ENGINE_KEY;
            } else {
              familyFunction = '';
            }
            this.eventService.findAllBireVariantVersionByFamilyFunction(familyFunction).subscribe(function(results) {
              _this.familyVariantList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_25__['ListUtils']
                .orEmpty(results)
                .filter(function(familyVariant) {
                  return !!familyVariant.familyCode && !!familyVariant.variantCode;
                })
                .map(function(familyVariant) {
                  var label =
                    '' +
                    (familyVariant.familyName || familyVariant.familyCode) +
                    '-' +
                    ('' + (familyVariant.variantName || familyVariant.variantCode));
                  return {
                    label: label,
                    value: familyVariant.familyCode + '-' + familyVariant.variantCode
                  };
                });
            });
          };
          /**
           * Load Fleet list
           */
          EventSearchComponent.prototype.loadFleetList = function() {
            var _this = this;
            var criteria = this.selectedBusinessPartner ? { customerCode: this.selectedBusinessPartner } : {};
            this.eventService.findAllBidoFleetByCriteria(criteria).subscribe(function(results) {
              _this.fleetList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_25__['ListUtils']
                .orEmpty(results)
                .filter(function(fleet) {
                  return !!fleet.fleetCode;
                })
                .map(function(fleet) {
                  return {
                    label: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_27__['StringUtils'].isNullOrEmpty(
                      fleet.fleetName
                    )
                      ? fleet.fleetCode
                      : fleet.fleetCode + ' - ' + fleet.fleetName,
                    value: fleet.fleetId
                  };
                });
            });
          };
          /**
           * Load Function List
           */
          EventSearchComponent.prototype.loadFunctionList = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_9__['GenericPropertyConstants']
                  .ITEM_FAMILY_CODE_MAP
              )
              .subscribe(function(results) {
                _this.functionList = _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_26__[
                  'SelectItemUtils'
                ].fromLabelValues(
                  _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_25__['ListUtils']
                    .orEmpty(results)
                    .filter(function(elt) {
                      return (
                        elt.value !==
                          _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                            'AWPropertiesConstants'
                          ].ITEM_FAMILY_CODE_AIRCRAFT_KEY &&
                        elt.value !==
                          _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                            'AWPropertiesConstants'
                          ].ITEM_FAMILY_CODE_ENGINE_KEY
                      );
                    })
                );
              });
          };
          /**
           * Loads Location list
           */
          EventSearchComponent.prototype.loadLocationList = function() {
            var _this = this;
            this.eventService
              .findAllBidoAttributeByAttributeId(
                _shared_constants_bido_attribute_constants__WEBPACK_IMPORTED_MODULE_7__['BidoAttributeConstants']
                  .ASSET_LOCATION
              )
              .subscribe(function(results) {
                _this.locationList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_25__['ListUtils']
                  .orEmpty(results)
                  .map(function(location) {
                    return {
                      label:
                        _this.translateService.currentLang ===
                        _shared_constants_lang_constants__WEBPACK_IMPORTED_MODULE_10__['LangConstants'].FRENCH_CODE
                          ? location.textFr
                          : location.textEn,
                      value: location.attributeValue
                    };
                  });
              });
          };
          /***
           * Loads Operational status list
           */
          EventSearchComponent.prototype.loadOperationalStatusList = function() {
            var _this = this;
            var mapKey;
            switch (this.selectedSearchAsset) {
              case SearchAsset.Aircraft:
                mapKey =
                  _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_9__['GenericPropertyConstants']
                    .AIRCRAFT_STATUS_MAP;
                break;
              default:
                mapKey =
                  _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_9__['GenericPropertyConstants']
                    .OPERATIONAL_STATUS_MAP;
                break;
            }
            this.propertiesService.getValue(mapKey).subscribe(function(results) {
              _this.operationalStatusList = _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_26__[
                'SelectItemUtils'
              ].fromLabelValues(_shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_25__['ListUtils'].orEmpty(results));
            });
          };
          /**
           * Loads warehouse List
           */
          EventSearchComponent.prototype.loadWareHouseList = function() {
            var _this = this;
            this.eventService.findAllWarehouse().subscribe(function(results) {
              _this.wareHouseList = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_25__['ListUtils']
                .orEmpty(results)
                .filter(function(warehouse) {
                  return !!warehouse.whCode;
                })
                .map(function(warehouse) {
                  return {
                    label: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_27__['StringUtils'].isNullOrEmpty(
                      warehouse.whName
                    )
                      ? warehouse.whCode
                      : warehouse.whCode + ' - ' + warehouse.whName,
                    value: warehouse.wareHouseId
                  };
                });
            });
          };
          /**
           * Opens Event UC
           */
          EventSearchComponent.prototype.openSelectedEvent = function() {
            var _this = this;
            this.resultsTableDataSource.dataSelection.forEach(function(event) {
              var dto = {
                notificationCode: event.notificationCode,
                typeCode: event.typeCode
              };
              _this.openEvent(dto);
            });
          };
          EventSearchComponent.prototype.openEvent = function(rowData) {
            var _this = this;
            var dto = {
              notificationCode: rowData.notificationCode,
              typeCode: rowData.typeCode
            };
            var bidoNotificationDTOId = {
              notificationCode: rowData.notificationCode
            };
            this.eventService.findBidoNotification(bidoNotificationDTOId).subscribe(function(res) {
              if (!!res.bidoNotificationTypeDTO && res.bidoNotificationTypeDTO.typeCategory === '5-def') {
                _this.openDefect(dto.notificationCode);
              } else {
                _this.openEventUC(
                  dto,
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_12__['ComponentOpenMode'].Read
                );
              }
            });
          };
          EventSearchComponent.prototype.openEventUC = function(objectId, openMode) {
            var data = {
              id: this.tabService.generateId(),
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_8__['ComponentConstants']
                  .FLE_EVENT_CREATE,
              openMode: openMode
            };
            if (!!objectId) {
              var eventId = {
                notificationCode: objectId.notificationCode
              };
              data.objectId = this.serializationService.serialize(eventId);
            }
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          EventSearchComponent.prototype.openDefect = function(objectId) {
            if (!!objectId) {
              var data = {
                id: this.tabService.generateId(),
                componentId:
                  _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_8__['ComponentConstants']
                    .FLE_DEFECT_FORM,
                openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_12__['ComponentOpenMode'].Read
              };
              var defectId = {
                notificationCode: objectId
              };
              data.objectId = this.serializationService.serialize(defectId);
              var labelKey = 'transaction.' + data.componentId;
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          EventSearchComponent.prototype.initEvolutionTableData = function() {
            var evolutionTableCols = [
              {
                field: 'evolutionNumber',
                alignment: 'left',
                width: '7.5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_13__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'evolutionRevisionNumber',
                alignment: 'left',
                width: '7.5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_13__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'evolutionType',
                alignment: 'left',
                width: '7.5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_13__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'evolutionLevel',
                alignment: 'left',
                width: '7.5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_13__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'evolutionCompliance',
                alignment: 'left',
                width: '7.5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_13__['TableColumnFilterMode']
                    .Input
              },
              {
                field: 'tracked',
                alignment: 'center',
                width: '5rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_13__['TableColumnFilterMode']
                    .Tricheckbox
              },
              {
                field: 'evolutionSummary',
                alignment: 'left',
                width: '20rem',
                filterMode:
                  _shared_enums_table_column_filter_mode_enum__WEBPACK_IMPORTED_MODULE_13__['TableColumnFilterMode']
                    .Input
              }
            ];
            this.evolutionTableData = {
              componentId: 'DialogEvolution',
              tableCols: evolutionTableCols,
              tableRows: this.eventService.findBireEvolutionsByEvolutionCriteria({}, undefined, undefined, undefined),
              dataKey: undefined,
              selectionMode:
                _shared_enums_table_selection_mode_enum__WEBPACK_IMPORTED_MODULE_14__['TableSelectionMode'].Single,
              globalFilter: true
            };
          };
          /**************************************************************************
           * Evolution Dialog
           *************************************************************************/
          EventSearchComponent.prototype.onSelectedEvolution = function(customerEvolution) {
            if (!!customerEvolution) {
              // TODO
              this.searchObject.evolutionNumberCriteria = customerEvolution.evolutionNumber;
              this.searchObject.evolutionRevisionNumberCriteria = customerEvolution.evolutionRevisionNumber;
              this.searchObject.evolutionTypeCriteria = customerEvolution.evolutionType;
            }
          };
          EventSearchComponent.prototype.resetCustomerEvolution = function() {
            this.searchObject.evolutionNumberCriteria = undefined;
            this.searchObject.evolutionRevisionNumberCriteria = undefined;
            this.searchObject.evolutionTypeCriteria = undefined;
          };
          EventSearchComponent.prototype.getNotDeducedEvent = function() {
            if (this.isNotDeduced && this.isDeduced) {
              this.isDeduced = false;
            }
            if (this.isNotDeduced) {
              this.searchObject.isDeduced = false;
            }
          };
          EventSearchComponent.prototype.getDeducedEvent = function() {
            if (this.isDeduced && this.isNotDeduced) {
              this.isNotDeduced = false;
            }
            this.searchObject.isDeduced = this.isDeduced ? true : false;
          };
          EventSearchComponent.prototype.openNewEvent = function() {
            this.openEventUC(
              undefined,
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_12__['ComponentOpenMode'].Create
            );
          };
          EventSearchComponent.prototype.openAsset = function(rowData) {
            var engine = 4;
            var functionNm =
              rowData.equipmentFunction ===
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FAMILY_FUNCTION_AIRCRAFT_KEY
                ? _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_AIRCRAFT_KEY
                : rowData.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_ENGINE_KEY
                ? _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_ENGINE_KEY
                : this.selectedSearchAsset === 2
                ? _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_AIRCRAFT_KEY
                : this.selectedSearchAsset === engine
                ? _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_ENGINE_KEY
                : _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FAMILY_FUNCTION_MAJOR_EQUIPMENT_KEY;
            this.openLinkEquipment(rowData.equipmentCode, functionNm || undefined);
          };
          EventSearchComponent.prototype.openLinkEquipment = function(code, functionNm) {
            if (code) {
              this.openEquipment(
                code,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_12__['ComponentOpenMode'].Read,
                functionNm || undefined
              );
            }
          };
          EventSearchComponent.prototype.openEquipment = function(objectId, openMode, functionNm) {
            var labelNm;
            var componentName;
            if (
              !functionNm ||
              functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_MAJOR_EQUIPMENT_KEY
            ) {
              labelNm = 'transaction.EquipmentFormComponent';
              componentName = 'EquipmentFormComponent';
            } else {
              if (
                functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_ENGINE_KEY
              ) {
                labelNm = 'transaction.EngineFormComponent';
                componentName = 'EngineFormComponent';
              } else if (
                functionNm ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_AIRCRAFT_KEY
              ) {
                labelNm = 'transaction.AircraftFormComponent';
                componentName = 'AircraftFormComponent';
              }
            }
            var labelKey = labelNm;
            var data = {
              id: this.tabService.generateId(),
              componentId: componentName,
              openMode: openMode
            };
            if (!!objectId) {
              var equipmentId = {
                equipmentCode: objectId
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          // Search save
          EventSearchComponent.prototype.loadSearchCriteria = function(event) {
            var criteria = event.criteria;
            if (!criteria) {
              this.initSearchObject();
              return;
            }
            if (!this.componentData.objectId) {
              this.searchData = criteria || {};
              this.searchObject = this.searchData.searchObject || {};
              this.selectedSearchAsset = this.searchData.selectedSearchAsset;
              this.criteriaName = event.name;
              this.assetCode = this.searchData.assetCode;
              this.selectedFamilyVariant = this.searchData.selectedFamilyVariant;
              this.pnCode = this.searchData.pnCode;
              this.airRegistration = this.searchData.airRegistration;
              this.snCode = this.searchData.snCode;
              this.eventDate = this.searchData.eventDate;
              this.closureDate = this.searchData.closureDate || undefined;
              this.isSearchWithCounters = this.searchData.isSearchWithCounters || false;
              this.selectedSystemId = this.searchData.selectedSystemId;
              this.systemReference = this.searchData.systemReference;
              this.rationalOperator = this.searchData.rationalOperator;
              this.isDeduced = this.searchData.isDeduced || false;
              this.isNotDeduced = this.searchData.isNotDeduced || false;
              this.defferedDefectsSelected = this.searchData.defferedDefectsSelected || false;
              this.criticalDefectsSelected = this.searchData.criticalDefectsSelected || false;
              this.search();
            } else {
              this.componentData.objectId = undefined;
            }
          };
          EventSearchComponent.prototype.saveSearchCriteriaAsked = function() {
            var criteriaToSave = {
              searchObject: this.searchObject,
              assetCode: this.assetCode,
              selectedSearchAsset: this.selectedSearchAsset,
              selectedFamilyVariant: this.selectedFamilyVariant,
              pnCode: this.pnCode,
              airRegistration: this.airRegistration,
              snCode: this.snCode,
              eventDate: this.eventDate,
              closureDate: this.closureDate || undefined,
              isSearchWithCounters: this.isSearchWithCounters || false,
              selectedSystemId: this.selectedSystemId,
              systemReference: this.systemReference,
              rationalOperator: this.rationalOperator,
              isDeduced: this.isDeduced || false,
              isNotDeduced: this.isNotDeduced || false,
              defferedDefectsSelected: this.defferedDefectsSelected || false,
              criticalDefectsSelected: this.criticalDefectsSelected || false
            };
            this.criteriaToSave = criteriaToSave;
          };
          EventSearchComponent.prototype.openFmdEvent = function(rowData) {
            var data = {
              id: this.tabService.generateId(),
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_8__['ComponentConstants']
                  .FLE_FDM_EVENT_FORM,
              openMode:
                rowData.fmdReference !== this.fmdHyperlinkCreateValue
                  ? _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_12__['ComponentOpenMode'].Write
                  : _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_12__['ComponentOpenMode'].Create
            };
            var dtoId = {
              notificationCode: rowData.notificationCode
            };
            data.objectId = this.serializationService.serialize(dtoId);
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          EventSearchComponent.prototype.toggleResultTableRowDetailsVisibility = function(row) {
            row._expand = !row._expand;
          };
          EventSearchComponent.prototype.deleteFMDEvents = function() {
            var _this = this;
            var confirmMessageKey =
              this.resultsTableDataSource.dataSelectionCount > 1
                ? 'confirmDeleteSelectedEvents'
                : 'confirmDeleteSelectedEvent';
            this.confirmationService.confirmDelete({
              messageKey: this.getTranslateKey(confirmMessageKey),
              accept: function() {
                _this.resultsTableDataSource.dataSelection.forEach(function(sel) {
                  _this.eventService
                    .removeBidoNotificationFmdByNotificationCode(
                      _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_27__['StringUtils'].orEmpty(
                        sel.notificationCode
                      )
                    )
                    .subscribe(function(res) {
                      _this.search();
                      if (_this.resultsTableDataSource.dataSelectionCount > 1) {
                        _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnDeleteFmdEvents'));
                      } else {
                        _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnDeleteFmdEvent'));
                      }
                      _this.resultsTableDataSource.dataSelection = [];
                    });
                });
              }
            });
          };
          EventSearchComponent.prototype.deleteFmdVisible = function() {
            var response = true;
            this.resultsTableDataSource.dataSelection.forEach(function(event) {
              if (!!event.removeFmdVisibility) {
                response = response && event.removeFmdVisibility;
              } else {
                response = false;
              }
            });
            return response;
          };
          var EventSearchComponent_1;
          EventSearchComponent.EVENT_TABLE_EXPORT_NAME = 'event-list';
          EventSearchComponent.FMD_HYPERLINK_CREATE_VALUE = 'Create FMD';
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('resultsContainerAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            EventSearchComponent.prototype,
            'resultsContainerAnchor',
            void 0
          );
          EventSearchComponent = EventSearchComponent_1 = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-event-search',
                template: __webpack_require__(
                  /*! ./event-search.component.html */ './src/app/main/fleet-management/event/event-search/event-search.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./event-search.component.scss */ './src/app/main/fleet-management/event/event-search/event-search.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_17__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_18__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_19__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_21__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_23__['TabService'],
                _event_service__WEBPACK_IMPORTED_MODULE_28__['EventService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_22__['SessionService'],
                _shared_services_export_service__WEBPACK_IMPORTED_MODULE_16__['ExportService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_20__['PropertiesService'],
                _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_15__['ConfirmationService']
              ])
            ],
            EventSearchComponent
          );
          return EventSearchComponent;
        })(_shared_types_page_component__WEBPACK_IMPORTED_MODULE_24__['PageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/event.service.ts':
      /*!**************************************************************!*\
  !*** ./src/app/main/fleet-management/event/event.service.ts ***!
  \**************************************************************/
      /*! exports provided: EventService */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'EventService', function() {
          return EventService;
        });
        /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */ './node_modules/@angular/common/fesm5/http.js'
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs */ './node_modules/rxjs/_esm5/index.js'
        );
        /* harmony import */ var _shared_api_bidt_stock_mvt_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/api/bidt-stock-mvt.api */ './src/app/shared/api/bidt-stock-mvt.api.ts'
        );
        /* harmony import */ var _shared_api_bidt_warehouse_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/api/bidt-warehouse.api */ './src/app/shared/api/bidt-warehouse.api.ts'
        );
        /* harmony import */ var _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/api/fleet-business.api */ './src/app/shared/api/fleet-business.api.ts'
        );
        /* harmony import */ var _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/api/fleet-management.api */ './src/app/shared/api/fleet-management.api.ts'
        );
        /* harmony import */ var _shared_api_maintenance_plan_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/api/maintenance-plan.api */ './src/app/shared/api/maintenance-plan.api.ts'
        );
        /* harmony import */ var _shared_api_product_structure_management_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/api/product-structure-management.api */ './src/app/shared/api/product-structure-management.api.ts'
        );
        /* harmony import */ var _shared_api_task_management_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/api/task-management.api */ './src/app/shared/api/task-management.api.ts'
        );
        /* harmony import */ var _shared_api_user_profile_business_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../shared/api/user-profile-business.api */ './src/app/shared/api/user-profile-business.api.ts'
        );
        /* harmony import */ var _shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../shared/http/abstract-aw-http */ './src/app/shared/http/abstract-aw-http.ts'
        );
        /* harmony import */ var _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../shared/services/app-config.service */ './src/app/shared/services/app-config.service.ts'
        );
        /* harmony import */ var _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../shared/utils/string-utils */ './src/app/shared/utils/string-utils.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var EventService = /** @class */ (function(_super) {
          __extends(EventService, _super);
          function EventService(
            http,
            appConfigService,
            bidtStockMvtApi,
            fleetBusinessApi,
            fleetManagementApi,
            maintenancePlanApi,
            productStructureManagementApi,
            taskManagementApi,
            userProfileBusinessApi,
            bidtWarehouseApi
          ) {
            var _this = _super.call(this, http, appConfigService) || this;
            _this.bidtStockMvtApi = bidtStockMvtApi;
            _this.fleetBusinessApi = fleetBusinessApi;
            _this.fleetManagementApi = fleetManagementApi;
            _this.maintenancePlanApi = maintenancePlanApi;
            _this.productStructureManagementApi = productStructureManagementApi;
            _this.taskManagementApi = taskManagementApi;
            _this.userProfileBusinessApi = userProfileBusinessApi;
            _this.bidtWarehouseApi = bidtWarehouseApi;
            return _this;
          }
          /**************************************************************************
           * Bidt stock mvt api
           *************************************************************************/
          EventService.prototype.findAllDefectPartsByCriteria = function(input) {
            return _super.prototype.post.call(this, this.bidtStockMvtApi.findAllDefectPartsByCriteria, input);
          };
          /**************************************************************************
           * Fleet business api
           *************************************************************************/
          EventService.prototype.findAllFlInStructureByEquipmentCodeForDefect = function(equipmentCode) {
            return _super.prototype.post.call(
              this,
              this.fleetBusinessApi.findAllFlInStructureByEquipmentCodeForDefect,
              equipmentCode
            );
          };
          EventService.prototype.findNotificationDateOrderCriteria = function() {
            return _super.prototype.post.call(this, this.fleetBusinessApi.findNotificationDateOrderCriteria);
          };
          /**************************************************************************
           * Fleet management api
           *************************************************************************/
          EventService.prototype.checkBidoFlExistence = function(flCode) {
            if (_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_13__['StringUtils'].isNullOrEmpty(flCode)) {
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['of'])(false);
            } else {
              return _super.prototype.post.call(this, this.fleetManagementApi.checkBidoFlExistence, flCode);
            }
          };
          EventService.prototype.findAllBidoAttributeByAttributeCategory = function(category) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoAttributesByAttributeCategory,
              category
            );
          };
          EventService.prototype.findAllBidoDocumentationByNotificationCode = function(notificationCode) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findAllBidoDocumentationByNotificationCode,
              notificationCode
            );
          };
          EventService.prototype.findAllBidoNotificationAttributeByNotificationCode = function(notificationId) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findAllBidoNotificationAttributeByNotificationCode,
              notificationId
            );
          };
          EventService.prototype.findAllBidoNotificationTypeByTypeCategory = function(typeCategory) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findAllBidoNotificationTypeByTypeCategory,
              typeCategory
            );
          };
          EventService.prototype.findBidoCustomer = function(customerId) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findBidoCustomer, customerId);
          };
          EventService.prototype.findBidoEquipment = function(equipmentId) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findBidoEquipment, equipmentId);
          };
          EventService.prototype.findBidoNotification = function(notificationId) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findBidoNotification, notificationId);
          };
          EventService.prototype.getEquipmentRepresentation = function(equipment) {
            return _super.prototype.post.call(this, this.fleetManagementApi.getEquipmentRepresentation, equipment);
          };
          /**************************************************************************
           * Maintenance plan api
           *************************************************************************/
          EventService.prototype.createWorkPackageFromEvent = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.createWorkPackageFromEvent, input);
          };
          EventService.prototype.createOrUpdateDefectTargetWorkOrder = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.createOrUpdateDefectTargetWorkOrder, input);
          };
          EventService.prototype.findDefectTargetWorkOrder = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.findDefectTargetWorkOrder, input);
          };
          EventService.prototype.findDefectTargetWorkPackage = function(input) {
            return _super.prototype.post.call(this, this.maintenancePlanApi.findDefectTargetWorkPackage, input);
          };
          /**************************************************************************
           * Product structure management api
           *************************************************************************/
          EventService.prototype.checkAtaCodeExistence = function(item) {
            if (
              _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_13__['StringUtils'].isNullOrEmpty(item.chapter) ||
              _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_13__['StringUtils'].isNullOrEmpty(item.section) ||
              _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_13__['StringUtils'].isNullOrEmpty(item.subject) ||
              _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_13__['StringUtils'].isNullOrEmpty(item.sheet) ||
              _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_13__['StringUtils'].isNullOrEmpty(item.marks)
            ) {
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['of'])(false);
            } else {
              return _super.prototype.post.call(this, this.productStructureManagementApi.checkAtaCodeExistence, item);
            }
          };
          EventService.prototype.checkBirePnExistence = function(pnCode) {
            if (_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_13__['StringUtils'].isNullOrEmpty(pnCode)) {
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__['of'])(false);
            } else {
              return _super.prototype.post.call(this, this.productStructureManagementApi.checkBirePnExistence, pnCode);
            }
          };
          EventService.prototype.findAllBirePnByCriteria = function(criteria) {
            return _super.prototype.post.call(
              this,
              this.productStructureManagementApi.findAllBirePnByCriteria,
              criteria
            );
          };
          EventService.prototype.findAllBireSite = function() {
            return _super.prototype.post.call(this, this.productStructureManagementApi.findAllBireSite);
          };
          EventService.prototype.findAllDelayAuthorizedUnit = function() {
            return _super.prototype.post.call(this, this.productStructureManagementApi.findAllDelayAuthorizedUnit);
          };
          EventService.prototype.findAllDelayCategory = function() {
            return _super.prototype.post.call(this, this.productStructureManagementApi.findAllDelayCategory);
          };
          /**************************************************************************
           * Task management api
           *************************************************************************/
          EventService.prototype.findAllBireTaskByCriteria = function(criteria) {
            return _super.prototype.post.call(this, this.taskManagementApi.findAllBireTaskByCriteria, criteria);
          };
          EventService.prototype.findAllBireTaskGroup = function() {
            return _super.prototype.post.call(this, this.taskManagementApi.findAllBireTaskGroup);
          };
          /**************************************************************************
           * User profile business api
           *************************************************************************/
          EventService.prototype.isBuildingBlockInstalled = function(buildingBlock) {
            return _super.prototype.post.call(
              this,
              this.userProfileBusinessApi.isBuildingBlockInstalled,
              buildingBlock
            );
          };
          EventService.prototype.findBidoNotificationsBySearchCriteria = function(eventCriteriaInputDTO) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoNotificationsBySearchCriteria,
              eventCriteriaInputDTO
            );
          };
          EventService.prototype.findAllBidoCustomer = function() {
            return _super.prototype.post.call(this, this.fleetManagementApi.findAllBidoCustomer);
          };
          /**************************************************************************
           * Bidt warehouse api
           *************************************************************************/
          EventService.prototype.findAllWarehouse = function() {
            return _super.prototype.post.call(this, this.bidtWarehouseApi.findAll);
          };
          EventService.prototype.findAllBireVariantVersionByFamilyFunction = function(familyFunction) {
            var param = {
              familyFunction: familyFunction
            };
            return _super.prototype.post.call(
              this,
              this.productStructureManagementApi.findAllBireVariantVersionByFamilyFunction,
              param
            );
          };
          EventService.prototype.findAllBidoFleetByCriteria = function(criteria) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findAllBidoFleetByCriteria, criteria);
          };
          EventService.prototype.findAllBidoAttributeByAttributeId = function(attributeId) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoAttributeValuesByAttributeId,
              attributeId
            );
          };
          /**
           * Gets event status
           */
          EventService.prototype.getEventStatusValues = function() {
            return _super.prototype.post.call(this, this.fleetManagementApi.getEventStatusValues);
          };
          // To bind the evolution popup
          EventService.prototype.findBireEvolutionsByEvolutionCriteria = function(
            evolution,
            familyCode,
            structureType,
            variantCode
          ) {
            var params = {
              bireEvolutionDTO: evolution,
              familyCode: familyCode,
              structureType: structureType,
              variantCode: variantCode
            };
            return _super.prototype.post.call(
              this,
              this.productStructureManagementApi.findBireEvolutionsByEvolutionCriteria,
              params
            );
          };
          /**
           * Gets atribute
           */
          EventService.prototype.findBidoAttribute = function(sourceId) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findBidoAttribute, sourceId);
          };
          EventService.prototype.getAssetSourceSystemIdList = function(bireId) {
            return _super.prototype.post.call(this, this.fleetManagementApi.getAssetSourceSystemIdList, bireId);
          };
          EventService.prototype.removeBidoNotification = function(bireId) {
            return _super.prototype.post.call(this, this.fleetManagementApi.removeBidoNotification, bireId);
          };
          EventService.prototype.removeBidoNotificationFmdByNotificationCode = function(notificationCode) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.removeBidoNotificationFMDByNotificationCode,
              notificationCode
            );
          };
          EventService = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])(),
              __metadata('design:paramtypes', [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClient'],
                _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_12__['AppConfigService'],
                _shared_api_bidt_stock_mvt_api__WEBPACK_IMPORTED_MODULE_3__['BidtStockMvtApi'],
                _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_5__['FleetBusinessApi'],
                _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_6__['FleetManagementApi'],
                _shared_api_maintenance_plan_api__WEBPACK_IMPORTED_MODULE_7__['MaintenancePlanApi'],
                _shared_api_product_structure_management_api__WEBPACK_IMPORTED_MODULE_8__[
                  'ProductStructureManagementApi'
                ],
                _shared_api_task_management_api__WEBPACK_IMPORTED_MODULE_9__['TaskManagementApi'],
                _shared_api_user_profile_business_api__WEBPACK_IMPORTED_MODULE_10__['UserProfileBusinessApi'],
                _shared_api_bidt_warehouse_api__WEBPACK_IMPORTED_MODULE_4__['BidtWarehouseApi']
              ])
            ],
            EventService
          );
          return EventService;
        })(_shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_11__['AbstractAwHttpService']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/fmd-event-form/dialog-update-fde-reference/dialog-update-fde-reference.component.html':
      /*!***********************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/fmd-event-form/dialog-update-fde-reference/dialog-update-fde-reference.component.html ***!
  \***********************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="row">\r\n      <div class="form-group flex--1">\r\n        <label class="form-label"> {{ getComponentName() + ".reference" | translate }} </label>\r\n\r\n        <div class="form-control display--flex-row">\r\n          <input type="text" class="aw-input" [disabled]="true" [(ngModel)]="fMDReferenceOutputDTO.reference" />\r\n          <span class="separator">-</span>\r\n          <input\r\n            type="text"\r\n            class="aw-input"\r\n            [disabled]="isReadOpenMode"\r\n            [(ngModel)]="fMDReferenceOutputDTO.referenceFDELetter"\r\n            style="width: 5em"\r\n          />\r\n          <span class="separator">-</span>\r\n          <input\r\n            type="text"\r\n            class="aw-input"\r\n            [disabled]="isReadOpenMode"\r\n            [(ngModel)]="fMDReferenceOutputDTO.referenceFDEYear"\r\n            style="width: 5em"\r\n          />\r\n          <span class="separator">-</span>\r\n          <input\r\n            type="text"\r\n            class="aw-input"\r\n            [disabled]="isReadOpenMode"\r\n            [(ngModel)]="fMDReferenceOutputDTO.referenceFDENumber"\r\n            style="width: 5em"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n\r\n    <button *ngIf="!isReadOpenMode" color="primary" type="button" mat-raised-button (click)="validate()">\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/fmd-event-form/dialog-update-fde-reference/dialog-update-fde-reference.component.ts':
      /*!*********************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/fmd-event-form/dialog-update-fde-reference/dialog-update-fde-reference.component.ts ***!
  \*********************************************************************************************************************************/
      /*! exports provided: DialogUpdateFdeReferenceComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogUpdateFdeReferenceComponent',
          function() {
            return DialogUpdateFdeReferenceComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var DialogUpdateFdeReferenceComponent = /** @class */ (function(_super) {
          __extends(DialogUpdateFdeReferenceComponent, _super);
          function DialogUpdateFdeReferenceComponent() {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Write,
                'DialogUpdateFdeReferenceComponent'
              ) || this;
            _this.onAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.fMDReferenceOutputDTO = {};
            return _this;
          }
          DialogUpdateFdeReferenceComponent.prototype.ngOnInit = function() {
            if (!!this.data) {
              this.fMDReferenceOutputDTO = this.data;
            } else {
              this.fMDReferenceOutputDTO = {};
            }
          };
          DialogUpdateFdeReferenceComponent.prototype.validate = function() {
            this.onAdded.emit(this.fMDReferenceOutputDTO);
            this.closeDialog();
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogUpdateFdeReferenceComponent.prototype,
            'data',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            DialogUpdateFdeReferenceComponent.prototype,
            'onAdded',
            void 0
          );
          DialogUpdateFdeReferenceComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-dialog-update-fde-reference',
                template: __webpack_require__(
                  /*! ./dialog-update-fde-reference.component.html */ './src/app/main/fleet-management/event/fmd-event-form/dialog-update-fde-reference/dialog-update-fde-reference.component.html'
                )
              }),
              __metadata('design:paramtypes', [])
            ],
            DialogUpdateFdeReferenceComponent
          );
          return DialogUpdateFdeReferenceComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component.html':
      /*!**********************************************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component.html ***!
  \**********************************************************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group">\r\n      <label class="form-label">{{ getComponentName() + ".docName" | translate }}</label>\r\n\r\n      <div class="form-control">\r\n        <input\r\n          type="text"\r\n          class="aw-input"\r\n          [(ngModel)]="document.docName"\r\n          [disabled]="isReadOpenMode"\r\n          maxlength="100"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class="form-group">\r\n      <label class="form-label">{{ getComponentName() + ".docPublicationDate" | translate }}</label>\r\n\r\n      <div class="form-control">\r\n        <p-calendar\r\n          showButtonBar="true"\r\n          [monthNavigator]="true"\r\n          [yearNavigator]="true"\r\n          [yearRange]="sessionService.calendarYearRange"\r\n          class="aw-calendar"\r\n          [dateFormat]="sessionService.dateFormatPrimeNG"\r\n          [locale]="sessionService.calendarFormat"\r\n          [(ngModel)]="document.docPublicationDate"\r\n          appendTo="body"\r\n          [disabled]="isReadOpenMode"\r\n        ></p-calendar>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="form-group">\r\n      <label class="form-label">{{ getComponentName() + ".docType" | translate }}</label>\r\n\r\n      <div class="form-control">\r\n        <p-dropdown\r\n          class="aw-dropdown fixed-width"\r\n          [options]="types"\r\n          [(ngModel)]="document.docCategory"\r\n          [disabled]="isReadOpenMode"\r\n          [showClear]="true"\r\n          placeholder="&nbsp;"\r\n          appendTo="body"\r\n        ></p-dropdown>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="form-group">\r\n      <label class="form-label">{{ getComponentName() + ".docDescription" | translate }}</label>\r\n\r\n      <div class="form-control">\r\n        <textarea\r\n          class="aw-textarea"\r\n          pInputTextarea\r\n          [rows]="3"\r\n          maxlength="300"\r\n          [(ngModel)]="document.docDescription"\r\n          [disabled]="isReadOpenMode"\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button *ngIf="isReadOpenMode" type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.close" | translate }}</span>\r\n    </button>\r\n\r\n    <button *ngIf="!isReadOpenMode" type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n\r\n    <button *ngIf="!isReadOpenMode" color="primary" type="button" mat-raised-button (click)="validate()">\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component.ts':
      /*!********************************************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component.ts ***!
  \********************************************************************************************************************************************************************/
      /*! exports provided: DialogBusinessPartnerBidoDocumentComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogBusinessPartnerBidoDocumentComponent',
          function() {
            return DialogBusinessPartnerBidoDocumentComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var DialogBusinessPartnerBidoDocumentComponent = /** @class */ (function(_super) {
          __extends(DialogBusinessPartnerBidoDocumentComponent, _super);
          function DialogBusinessPartnerBidoDocumentComponent(sessionService) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Read,
                'DialogBusinessPartnerBidoDocumentComponent'
              ) || this;
            _this.sessionService = sessionService;
            _this.displayChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.onValidated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            return _this;
          }
          DialogBusinessPartnerBidoDocumentComponent.prototype.ngOnInit = function() {
            this.updateOpenMode(this.openMode);
            if (!this.document) {
              this.document = {};
            }
          };
          DialogBusinessPartnerBidoDocumentComponent.prototype.validate = function() {
            this.onValidated.emit(this.document);
            this.closeDialog();
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogBusinessPartnerBidoDocumentComponent.prototype,
            'document',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Number)],
            DialogBusinessPartnerBidoDocumentComponent.prototype,
            'openMode',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            DialogBusinessPartnerBidoDocumentComponent.prototype,
            'types',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            DialogBusinessPartnerBidoDocumentComponent.prototype,
            'onValidated',
            void 0
          );
          DialogBusinessPartnerBidoDocumentComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-dialog-business-partner-bido-document',
                template: __webpack_require__(
                  /*! ./dialog-business-partner-bido-document.component.html */ './src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_2__['SessionService']
              ])
            ],
            DialogBusinessPartnerBidoDocumentComponent
          );
          return DialogBusinessPartnerBidoDocumentComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_3__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/fmd-event-form.component.html':
      /*!*********************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/fmd-event-form.component.html ***!
  \*********************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div *ngIf="!isCreateOpenMode" class="page-subtitle">- {{ componentSubtitle }}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="object-status" *ngIf="bidoFmdDTO.statusState" (click)="showStatus()">\r\n      {{ bidoFmdDTO.statusState | formatSelectOption: fmdStatusMap }}\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-actions">\r\n    <button *ngIf="isReadOpenMode && hasUpdateAccessRight" type="button" mat-raised-button (click)="editFMDEvent()">\r\n      {{ "global.edit" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="!isReadOpenMode && !isCreateOpenMode"\r\n      type="button"\r\n      color="warn"\r\n      mat-raised-button\r\n      (click)="cancelFMDEvent()"\r\n    >\r\n      {{ "global.cancel" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="!isReadOpenMode"\r\n      class="btn-with-spinner"\r\n      color="primary"\r\n      type="button"\r\n      mat-raised-button\r\n      (click)="saveFMDEvent()"\r\n    >\r\n      <span class="lds-hourglass" *ngIf="showSaveSpinner"></span>\r\n      {{ "global.save" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show all actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n    <mat-menu #actions="matMenu">\r\n      <button *ngIf="!isCreateOpenMode" mat-menu-item (click)="editXlsFormat()">\r\n        {{ componentData.componentId + ".editXlsFormat" | translate }}\r\n      </button>\r\n\r\n      <button\r\n        *ngIf="!isCreateOpenMode && hasUpdateFMDRights"\r\n        [disabled]="!exportFmdE5XEnabled()"\r\n        class="btn-with-spinner"\r\n        mat-menu-item\r\n        (click)="exportFmdE5X()"\r\n      >\r\n        <span class="lds-hourglass" *ngIf="showExportFMDE5xSpinner"></span>\r\n        {{ componentData.componentId + ".exportFMDE5x" | translate }}\r\n      </button>\r\n\r\n      <button mat-menu-item (click)="reloadFMDEvent()">{{ "global.refresh" | translate }}</button>\r\n      <button mat-menu-item (click)="updateFavoriteState()">\r\n        {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <mat-tab-group animationDuration="0ms" dynamicHeight>\r\n        <!-- Home -->\r\n        <mat-tab id="homeTab">\r\n          <ng-template mat-tab-label>\r\n            {{ "home" | translate }}\r\n          </ng-template>\r\n          <!-- MAIN INFORMATION -->\r\n          <div class="grid-row">\r\n            <div class="grid-cell--4">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ "page.mainData" | translate }}\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <div class="column">\r\n                    <!-- ROW 1 -->\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label"> {{ componentData.componentId + ".reference" | translate }} </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input custom-width" [disabled]="true" [(ngModel)]="reference" />\r\n                          <span class="separator" *ngIf="referenceSplitFDEVisibility">-</span>\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [disabled]="isReadOpenMode || referenceSplitVisibility"\r\n                            [(ngModel)]="referenceFDELetter"\r\n                            *ngIf="referenceSplitFDEVisibility"\r\n                            style="width: 2em"\r\n                          />\r\n                          <span class="separator" *ngIf="referenceSplitFMDVisibility">-</span>\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [disabled]="isReadOpenMode || referenceSplitVisibility"\r\n                            [(ngModel)]="referenceFMDYear"\r\n                            *ngIf="referenceSplitFMDVisibility"\r\n                            style="width: 2em"\r\n                          />\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [disabled]="isReadOpenMode || referenceSplitVisibility"\r\n                            [(ngModel)]="referenceFDEYear"\r\n                            *ngIf="referenceSplitFDEVisibility"\r\n                            style="width: 2em"\r\n                          />\r\n                          <span class="separator" *ngIf="referenceSplitFMDVisibility">-</span>\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [disabled]="isReadOpenMode || referenceSplitVisibility"\r\n                            [(ngModel)]="referenceFMDNumber"\r\n                            *ngIf="referenceSplitFMDVisibility"\r\n                            style="width: 2em"\r\n                          />\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [disabled]="isReadOpenMode || referenceSplitVisibility"\r\n                            [(ngModel)]="referenceFDENumber"\r\n                            *ngIf="referenceSplitFDEVisibility"\r\n                            style="width: 2em"\r\n                          />\r\n                          <i\r\n                            class="fa fa-fw fa-search aw-icon btn-search separator"\r\n                            style="display: flex"\r\n                            aria-hidden="true"\r\n                            *ngIf="isReadOpenMode && updateFDERefDialogVisibility"\r\n                            (click)="updateFDEReferenceVisibility()"\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".editionNumber" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input\r\n                            type="number"\r\n                            class="aw-input"\r\n                            [disabled]="isReadOpenMode"\r\n                            [(ngModel)]="bidoFmdDTO.editionNumber"\r\n                            (onChange)="onChangeEditionNumber()"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <!-- ROW 2 -->\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".systemCreationDate" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-calendar\r\n                            showButtonBar="true"\r\n                            [monthNavigator]="true"\r\n                            [yearNavigator]="true"\r\n                            [yearRange]="sessionService.calendarYearRange"\r\n                            class="aw-calendar"\r\n                            [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                            [locale]="sessionService.calendarFormat"\r\n                            appendTo="body"\r\n                            [disabled]="true"\r\n                            [(ngModel)]="bidoFmdDTO.fmdSystemCreationDate"\r\n                          ></p-calendar>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label"> {{ componentData.componentId + ".author" | translate }} </label>\r\n\r\n                        <div class="form-control">\r\n                          <input type="text" class="aw-input" [disabled]="true" [(ngModel)]="bidoFmdDTO.fmdAuthor" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <!-- ROW 3 -->\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label"> {{ componentData.componentId + ".sheetNumber" | translate }} </label>\r\n\r\n                        <div class="form-control">\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                            [(ngModel)]="bidoFmdDTO.trackingSheetNumber"\r\n                            title="{{ bidoFmdDTO.trackingSheetNumber }}"\r\n                            maxlength="50"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".linkedEvent" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <a (click)="openEventAsset(notificationCode)" style="cursor: pointer">{{\r\n                            notificationCode\r\n                          }}</a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- REPORTING INFORMATION -->\r\n            <div class="grid-cell--6">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".reportInfoAnchor" | translate }}\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <!-- ROW 1 -->\r\n                      <div class="row">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".creationDate" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-calendar\r\n                              showButtonBar="true"\r\n                              [monthNavigator]="true"\r\n                              [yearNavigator]="true"\r\n                              [yearRange]="sessionService.calendarYearRange"\r\n                              class="aw-calendar"\r\n                              [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                              [locale]="sessionService.calendarFormat"\r\n                              appendTo="body"\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.fmdCreationDate"\r\n                            ></p-calendar>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group" *ngIf="getFDM_FMDVisibility()">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".personReporting" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="true"\r\n                              [(ngModel)]="bidoFmdDTO.fmdReporter"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".tcHolderName" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="true"\r\n                              [(ngModel)]="bidoFmdDTO.tcHolderName"\r\n                              title="{{ bidoFmdDTO.tcHolderName }}"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- ROW 2 -->\r\n                      <div class="row">\r\n                        <div class="form-group flex--2">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".tcHolderAddress" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <textarea\r\n                              class="aw-textarea"\r\n                              [rows]="3"\r\n                              pInputTextarea\r\n                              [disabled]="true"\r\n                              [(ngModel)]="bidoFmdDTO.tcHolderAddress"\r\n                              tooltipPosition="bottom"\r\n                              title="{{ bidoFmdDTO.tcHolderName }}"\r\n                            ></textarea>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".aeronauticalAuthority" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="aeronauticalAuthorityMap"\r\n                              [showClear]="true"\r\n                              placeholder="&nbsp;"\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.authorities"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- ROW 3 -->\r\n                      <div class="row">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".typeCertificate" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="typeCertificateMap"\r\n                              [showClear]="true"\r\n                              placeholder="&nbsp;"\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.typeCertificate"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".productionCertificate" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="productionCertMap"\r\n                              [showClear]="true"\r\n                              placeholder="&nbsp;"\r\n                              [(ngModel)]="bidoFmdDTO.productionCertificate"\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".doaNumber" | translate }} </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="doaNumberMap"\r\n                              [showClear]="false"\r\n                              placeholder="&nbsp;"\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.doaNumber"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- ROW 4 -->\r\n                      <div class="row" *ngIf="getFDM_FDEVisibility()">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".fdeChapeau" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeChapeau"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".nombreDenv" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeNumeroFr"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".fincheDeResignation" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeNumeroFr"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".origine" | translate }} </label>\r\n\r\n                          <div class="form-control">\r\n                            <textarea\r\n                              class="aw-textarea"\r\n                              [rows]="3"\r\n                              pInputTextarea\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeOrigine"\r\n                            ></textarea>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- FMD E5X -->\r\n            <div class="grid-cell--2">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".fmdE5X" | translate }}\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".eventType" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [showClear]="true"\r\n                              [options]="eventTypeMap"\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.e5xEventType"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="row">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".highestDamage" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [showClear]="false"\r\n                              [options]="e5xHighestDamageMap"\r\n                              placeholder="&nbsp;"\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.e5xHighestDamage"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="row">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".injuryLevel" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [showClear]="false"\r\n                              [options]="e5xinjuryLevelMap"\r\n                              placeholder="&nbsp;"\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.e5xInjuryLevel"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="row" *ngIf="getFDM_FDEVisibility()">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".causeRacine" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <textarea\r\n                              class="aw-textarea"\r\n                              [rows]="3"\r\n                              pInputTextarea\r\n                              [disabled]="true"\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeCauseRacine"\r\n                            ></textarea>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="row" *ngIf="getFDM_FDEVisibility()">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".casAnterieurs" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <textarea\r\n                              class="aw-textarea"\r\n                              [rows]="3"\r\n                              pInputTextarea\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeCasAnterieurs"\r\n                            ></textarea>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="row" *ngIf="getFDM_FDEVisibility()">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".fincheDeResignationAnterieurs" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <textarea\r\n                              class="aw-textarea"\r\n                              [rows]="3"\r\n                              pInputTextarea\r\n                              [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeFrAnterieures"\r\n                            ></textarea>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- EVENT INFORMATION -->\r\n          <div class="grid-row">\r\n            <div class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".eventInfoAnchor" | translate }}\r\n                      ({{ eventInfoData ? eventInfoData.length : 0 }})\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        [resizableColumns]="true"\r\n                        #eventTable\r\n                        class="aw-table2"\r\n                        [columns]="tableCols"\r\n                        [value]="eventInfoData"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingMaintenanceProgramTable"> &nbsp;</span>\r\n                          <div *ngIf="isLoadingMaintenanceProgramTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableCusCustomerGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="eventTable.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngIf="col.field !== \'info\'">{{\r\n                                componentData.componentId + "." + col.field | translate\r\n                              }}</span>\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td\r\n                              class="multi-row"\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                              [ngClass]="{ \'cell-grey\': col.field === \'engineData\' || col.field === \'fmdData\' }"\r\n                            >\r\n                              <span *ngSwitchCase="\'control\'">\r\n                                <span *ngIf="rowData.control === false"></span>\r\n                                <span *ngIf="rowData.control === true" class="alert alert--warning">\r\n                                  {{ "FmdEventFormComponent.warning" | translate }}\r\n                                </span>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'engineData\'">\r\n                                <div\r\n                                  pTooltip="{{ \'FmdEventFormComponent.dataIssuedFromSelectedEvent\' | translate }}"\r\n                                  tooltipPosition="bottom"\r\n                                >\r\n                                  {{ rowData[col.field] }}\r\n                                </div>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'fmdData\'">\r\n                                <div\r\n                                  pTooltip="{{ \'FmdEventFormComponent.dataIssuedFromSavedFMD\' | translate }}"\r\n                                  tooltipPosition="bottom"\r\n                                >\r\n                                  {{ rowData[col.field] }}\r\n                                </div>\r\n                              </span>\r\n                              <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab id="assetControlsTab">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".assetControls" | translate }}\r\n          </ng-template>\r\n          <!-- AIRCRAFT INFORMATION -->\r\n          <div class="grid-row">\r\n            <div #aircraftInfoAnchor class="grid-cell--12" (click)="setSelectedAnchor(\'aircraftInfoAnchor\')">\r\n              <div\r\n                class="grid-cell grid-cell--container"\r\n                [ngClass]="{ active: isSelectedAnchor(\'aircraftInfoAnchor\') }"\r\n              >\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".aircraftInfoAnchor" | translate }}\r\n                      ({{ aircraftInfoData ? aircraftInfoData.length : 0 }})\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section" *ngIf="getFDM_FDEVisibility()">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".client" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [showClear]="true"\r\n                              [options]="clientMap"\r\n                              placeholder="&nbsp;"\r\n                              [disabled]="isReadOpenMode || isStatusClosed"\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeClient"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".tsnDeIavion" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="true"\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeTsnAvion"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div class="form-group"></div>\r\n                        <div class="form-group"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        [resizableColumns]="true"\r\n                        #aircraftTable\r\n                        class="aw-table2"\r\n                        [columns]="tableCols"\r\n                        [value]="aircraftInfoData"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingMaintenanceProgramTable"> &nbsp;</span>\r\n                          <div *ngIf="isLoadingMaintenanceProgramTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableCusCustomerGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="aircraftTable.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngIf="col.field !== \'info\'">{{\r\n                                componentData.componentId + "." + col.field | translate\r\n                              }}</span>\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                              [ngClass]="{ \'cell-grey\': col.field === \'engineData\' || col.field === \'fmdData\' }"\r\n                            >\r\n                              <span *ngSwitchCase="\'control\'">\r\n                                <span *ngIf="rowData.control === false"></span>\r\n                                <span *ngIf="rowData.control === true" class="alert alert--warning">\r\n                                  {{ "FmdEventFormComponent.warning" | translate }}\r\n                                </span>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'engineData\'">\r\n                                <div\r\n                                  pTooltip="{{ \'FmdEventFormComponent.dataIssuedFromSelectedEvent\' | translate }}"\r\n                                  tooltipPosition="bottom"\r\n                                >\r\n                                  {{ rowData[col.field] }}\r\n                                </div>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'fmdData\'">\r\n                                <td\r\n                                  *ngIf="\r\n                                    !isReadOpenMode &&\r\n                                    getFDMIsFDE &&\r\n                                    (rowData[\'info\'] === getTranslatedText(\'aircraftSerialNumber\') ||\r\n                                      rowData[\'info\'] === getTranslatedText(\'operatorName\'))\r\n                                  "\r\n                                  [pEditableColumn]="rowData[col.field]"\r\n                                  [pEditableColumnField]="rowData[col.field]"\r\n                                  style="width: 10%"\r\n                                >\r\n                                  <p-cellEditor\r\n                                    *ngIf="\r\n                                      rowData[\'info\'] === getTranslatedText(\'aircraftSerialNumber\') ||\r\n                                      rowData[\'info\'] === getTranslatedText(\'operatorName\')\r\n                                    "\r\n                                  >\r\n                                    <ng-template pTemplate="input">\r\n                                      <input\r\n                                        *ngIf="rowData[\'info\'] === getTranslatedText(\'aircraftSerialNumber\')"\r\n                                        class="aw-input"\r\n                                        type="text"\r\n                                        [(ngModel)]="rowData.fmdData"\r\n                                      />\r\n                                      <p-dropdown\r\n                                        class="aw-dropdown fixed-width"\r\n                                        *ngIf="rowData[\'info\'] === getTranslatedText(\'operatorName\')"\r\n                                        [showClear]="true"\r\n                                        [options]="operatorMap"\r\n                                        placeholder="&nbsp;"\r\n                                        [disabled]="isReadOpenMode || isStatusClosed"\r\n                                        [(ngModel)]="bidoFmdDTO.operatorName"\r\n                                      ></p-dropdown>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="output">\r\n                                      <div\r\n                                        pTooltip="{{\r\n                                          componentData.componentId + \'.dataIssuedFromSavedFMD\' | translate\r\n                                        }}"\r\n                                        tooltipPosition="bottom"\r\n                                      >\r\n                                        {{ rowData[col.field] }}\r\n                                      </div>\r\n                                    </ng-template>\r\n                                  </p-cellEditor>\r\n                                </td>\r\n                                <div\r\n                                  *ngIf="\r\n                                    !isReadOpenMode &&\r\n                                    getFDMIsFDE &&\r\n                                    rowData[\'info\'] !== getTranslatedText(\'aircraftSerialNumber\') &&\r\n                                    rowData[\'info\'] !== getTranslatedText(\'operatorName\')\r\n                                  "\r\n                                  pTooltip="{{ \'FmdEventFormComponent.dataIssuedFromSavedFMD\' | translate }}"\r\n                                  tooltipPosition="bottom"\r\n                                >\r\n                                  {{ rowData[col.field] }}\r\n                                </div>\r\n                                <div\r\n                                  *ngIf="!isReadOpenMode && !getFDMIsFDE"\r\n                                  pTooltip="{{ \'FmdEventFormComponent.dataIssuedFromSavedFMD\' | translate }}"\r\n                                  tooltipPosition="bottom"\r\n                                >\r\n                                  {{ rowData[col.field] }}\r\n                                </div>\r\n                                <div\r\n                                  *ngIf="isReadOpenMode && !getFDMIsFDE"\r\n                                  pTooltip="{{ \'FmdEventFormComponent.dataIssuedFromSavedFMD\' | translate }}"\r\n                                  tooltipPosition="bottom"\r\n                                >\r\n                                  {{ rowData[col.field] }}\r\n                                </div>\r\n                              </span>\r\n                              <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- ENGINE INFORMATION -->\r\n          <div class="grid-row">\r\n            <div class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".engineInfoAnchor" | translate }}\r\n                      ({{ engineInfoData ? engineInfoData.length : 0 }})\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        [resizableColumns]="true"\r\n                        #engineTable\r\n                        class="aw-table2"\r\n                        [columns]="tableCols"\r\n                        [value]="engineInfoData"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingMaintenanceProgramTable"> &nbsp;</span>\r\n                          <div *ngIf="isLoadingMaintenanceProgramTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableCusCustomerGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="engineTable.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngIf="col.field !== \'info\'">{{\r\n                                componentData.componentId + "." + col.field | translate\r\n                              }}</span>\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td\r\n                              class="multi-row"\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                              [ngClass]="{ \'cell-grey\': col.field === \'engineData\' || col.field === \'fmdData\' }"\r\n                            >\r\n                              <span *ngSwitchCase="\'control\'">\r\n                                <span *ngIf="rowData.control === false"></span>\r\n                                <span *ngIf="rowData.control === true" class="alert alert--warning">\r\n                                  {{ "FmdEventFormComponent.warning" | translate }}\r\n                                </span>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'engineData\'">\r\n                                <div\r\n                                  pTooltip="{{ \'FmdEventFormComponent.dataIssuedFromSelectedEvent\' | translate }}"\r\n                                  tooltipPosition="bottom"\r\n                                >\r\n                                  {{ rowData[col.field] }}\r\n                                </div>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'fmdData\'">\r\n                                <div\r\n                                  pTooltip="{{ \'FmdEventFormComponent.dataIssuedFromSavedFMD\' | translate }}"\r\n                                  tooltipPosition="bottom"\r\n                                >\r\n                                  {{ rowData[col.field] }}\r\n                                </div>\r\n                              </span>\r\n                              <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n                  <div class="section padding-class" *ngIf="getFDM_FDEVisibility()">\r\n                    <h4 class="section-title">\r\n                      {{ componentData.componentId + ".engine" | translate }}({{\r\n                        engineInfoData ? engineInfoData.length : 0\r\n                      }})\r\n                    </h4>\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        [resizableColumns]="true"\r\n                        #engine2Table\r\n                        class="aw-table2"\r\n                        [columns]="tableCols"\r\n                        [value]="engineInfoData"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingMaintenanceProgramTable"> &nbsp;</span>\r\n                          <div *ngIf="isLoadingMaintenanceProgramTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableCusCustomerGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="engine2Table.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngIf="col.field !== \'info\'">{{\r\n                                componentData.componentId + "." + col.field | translate\r\n                              }}</span>\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td\r\n                              class="multi-row"\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                              [ngClass]="{ \'cell-grey\': col.field === \'engineData\' || col.field === \'fmdData\' }"\r\n                            >\r\n                              <span *ngSwitchCase="\'control\'">\r\n                                <span *ngIf="rowData.control === false"></span>\r\n                                <span *ngIf="rowData.control === true" class="alert alert--warning">\r\n                                  {{ "FmdEventFormComponent.warning" | translate }}\r\n                                </span>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'engineData\'">\r\n                                <div\r\n                                  pTooltip="{{ \'FmdEventFormComponent.dataIssuedFromSelectedEvent\' | translate }}"\r\n                                  tooltipPosition="bottom"\r\n                                >\r\n                                  {{ rowData[col.field] }}\r\n                                </div>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'fmdData\'">\r\n                                <div\r\n                                  pTooltip="{{ \'FmdEventFormComponent.dataIssuedFromSavedFMD\' | translate }}"\r\n                                  tooltipPosition="bottom"\r\n                                >\r\n                                  {{ rowData[col.field] }}\r\n                                </div>\r\n                              </span>\r\n                              <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n                  <div class="section" *ngIf="getFDM_FDEVisibility()">\r\n                    <h4 class="section-title">{{ componentData.componentId + ".element" | translate }}</h4>\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".element" | translate }} </label>\r\n\r\n                          <div class="form-control">\r\n                            <textarea\r\n                              class="aw-textarea"\r\n                              [rows]="3"\r\n                              pInputTextarea\r\n                              disabled\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeElements"\r\n                            ></textarea>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".pn" | translate }} </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="true"\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdePnElement"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".sn" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [disabled]="true"\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeSnElement"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".competers" | translate }} </label>\r\n\r\n                          <div class="form-control">\r\n                            <textarea\r\n                              class="aw-textarea"\r\n                              [rows]="3"\r\n                              pInputTextarea\r\n                              disabled\r\n                              [(ngModel)]="bidoFmdDTO.fdmFdeCompteurs"\r\n                            ></textarea>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab id="findingsTab">\r\n          <ng-template mat-tab-label>\r\n            {{ componentData.componentId + ".findings" | translate }}\r\n          </ng-template>\r\n          <div class="grid-row">\r\n            <!-- INITIAL FINDINGS -->\r\n            <div class="grid-cell--6">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".initialFindingsAnchor" | translate }} ({{\r\n                        initialFindingsData ? initialFindingsData.length : 0\r\n                      }})\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <p-table\r\n                    [resizableColumns]="true"\r\n                    #initialFindingsTable\r\n                    class="aw-table2"\r\n                    [columns]="tableCols"\r\n                    [value]="initialFindingsData"\r\n                    [scrollable]="true"\r\n                  >\r\n                    <ng-template pTemplate="emptymessage">\r\n                      <span *ngIf="!isLoadingMaintenanceProgramTable"> &nbsp;</span>\r\n                      <div *ngIf="isLoadingMaintenanceProgramTable" class="aw-table-loading-indicator">\r\n                        <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                        <div class="lds-hourglass"></div>\r\n                      </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="caption">\r\n                      <div class="aw-table-header">\r\n                        <div class="aw-table-global-filter">\r\n                          <label class="aw-table-global-filter-label">\r\n                            <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                          </label>\r\n\r\n                          <input\r\n                            #initialFindingsTableGlobalFilter\r\n                            class="aw-table-global-filter-input"\r\n                            type="text"\r\n                            placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                            (input)="initialFindingsTable.filterGlobal($event.target.value, \'contains\')"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="colgroup" let-columns>\r\n                      <colgroup>\r\n                        <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                      </colgroup>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="header" let-columns>\r\n                      <tr>\r\n                        <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                          <span *ngIf="col.field !== \'info\'">{{\r\n                            componentData.componentId + "." + col.field | translate\r\n                          }}</span>\r\n                        </th>\r\n                      </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                      <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                        <td\r\n                          class="multi-row"\r\n                          *ngFor="let col of columns"\r\n                          [ngSwitch]="col.field"\r\n                          [ngStyle]="{ \'text-align\': col.alignment }"\r\n                          [ngClass]="{\r\n                            \'cell-grey\':\r\n                              col.field === \'engineData\' || (getIsFMDFieldReadOnly() && col.field === \'fmdData\')\r\n                          }"\r\n                        >\r\n                          <span *ngSwitchCase="\'control\'">\r\n                            <span *ngIf="rowData.control === false"></span>\r\n                            <span *ngIf="rowData.control === true" class="alert alert--warning">\r\n                              {{ "FmdEventFormComponent.warning" | translate }}\r\n                            </span>\r\n                          </span>\r\n\r\n                          <span *ngIf="!isReadOpenMode && !getIsFMDFieldReadOnly()">\r\n                            <span *ngSwitchCase="\'fmdData\'" class="page-header-links">\r\n                              <span *ngIf="rowData.info === getTranslatedText(\'eventNarrative\')">\r\n                                <td\r\n                                  class="multi-row"\r\n                                  [pEditableColumn]="rowData[col.field]"\r\n                                  [pEditableColumnField]="rowData[col.field]"\r\n                                  style="width: 10%"\r\n                                >\r\n                                  <p-cellEditor>\r\n                                    <ng-template pTemplate="input">\r\n                                      <textarea\r\n                                        class="aw-textarea"\r\n                                        [rows]="3"\r\n                                        pInputTextarea\r\n                                        [(ngModel)]="rowData.fmdData"\r\n                                        maxlength="2000"\r\n                                      ></textarea>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="output">\r\n                                      <div\r\n                                        class="multi-row"\r\n                                        pTooltip="{{\r\n                                          componentData.componentId + \'.dataIssuedFromSavedFMD\' | translate\r\n                                        }}"\r\n                                        tooltipPosition="bottom"\r\n                                      >\r\n                                        {{ rowData[col.field] }}\r\n                                      </div>\r\n                                    </ng-template>\r\n                                  </p-cellEditor>\r\n                                </td>\r\n                              </span>\r\n\r\n                              <span *ngIf="rowData.info === getTranslatedText(\'initialFindingsAnchor\')">\r\n                                <td\r\n                                  class="multi-row"\r\n                                  [pEditableColumn]="rowData[col.field]"\r\n                                  [pEditableColumnField]="rowData[col.field]"\r\n                                  style="width: 10%"\r\n                                >\r\n                                  <p-cellEditor>\r\n                                    <ng-template pTemplate="input">\r\n                                      <textarea\r\n                                        class="aw-textarea"\r\n                                        [rows]="3"\r\n                                        pInputTextarea\r\n                                        [(ngModel)]="rowData.fmdData"\r\n                                        maxlength="600"\r\n                                      ></textarea>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="output">\r\n                                      <div\r\n                                        class="multi-row"\r\n                                        pTooltip="{{\r\n                                          componentData.componentId + \'.dataIssuedFromSavedFMD\' | translate\r\n                                        }}"\r\n                                        tooltipPosition="bottom"\r\n                                      >\r\n                                        {{ rowData[col.field] }}\r\n                                      </div>\r\n                                    </ng-template>\r\n                                  </p-cellEditor>\r\n                                </td>\r\n                              </span>\r\n                            </span>\r\n                          </span>\r\n\r\n                          <span *ngIf="isReadOpenMode || getIsFMDFieldReadOnly()">\r\n                            <span *ngSwitchCase="\'fmdData\'">\r\n                              <div\r\n                                class="multi-row"\r\n                                pTooltip="{{ componentData.componentId + \'.dataIssuedFromSavedFMD\' | translate }}"\r\n                                tooltipPosition="bottom"\r\n                              >\r\n                                {{ rowData[col.field] }}\r\n                              </div>\r\n                            </span>\r\n                          </span>\r\n\r\n                          <span *ngSwitchCase="\'engineData\'">\r\n                            <div\r\n                              class="multi-row"\r\n                              pTooltip="{{ componentData.componentId + \'.dataIssuedFromSelectedEvent\' | translate }}"\r\n                              tooltipPosition="bottom"\r\n                            >\r\n                              {{ rowData[col.field] }}\r\n                            </div>\r\n                          </span>\r\n\r\n                          <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </p-table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!--INVESTIGATION FINDINGS-->\r\n            <div class="grid-cell--6">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".investigationFindings" | translate }}\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <div class="form-group">\r\n                    <label class="form-label">{{\r\n                      componentData.componentId + ".investigationFindings" | translate\r\n                    }}</label>\r\n\r\n                    <div class="form-control" style="width: 50em">\r\n                      <textarea\r\n                        class="aw-textarea"\r\n                        [rows]="3"\r\n                        pInputTextarea\r\n                        [(ngModel)]="bidoFmdDTO.investigationFindingLong"\r\n                        [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                        maxlength="2000"\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- <div class="form-group flex--3"></div> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!--RISK ANALYSIS-->\r\n          <div class="grid-row">\r\n            <div class="grid-cell--6">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".riskAnalysis" | translate }}\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <div class="form-group">\r\n                    <label class="form-label">{{\r\n                      componentData.componentId + ".riskClassification" | translate\r\n                    }}</label>\r\n\r\n                    <div class="form-control" style="width: 50em">\r\n                      <textarea\r\n                        class="aw-textarea"\r\n                        [rows]="3"\r\n                        pInputTextarea\r\n                        [(ngModel)]="bidoFmdDTO.riskClassification"\r\n                        [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                        maxlength="50"\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <div class="form-group">\r\n                    <label class="form-label">{{ componentData.componentId + ".riskAssessment" | translate }}</label>\r\n\r\n                    <div class="form-control" style="width: 50em">\r\n                      <textarea\r\n                        class="aw-textarea"\r\n                        [rows]="3"\r\n                        pInputTextarea\r\n                        [(ngModel)]="bidoFmdDTO.riskAssessment"\r\n                        [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                        maxlength="600"\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!--CORRECTIVE ACTION-->\r\n            <div class="grid-cell--6">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".correctiveActions" | translate }}\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <div class="form-group">\r\n                    <label class="form-label">{{ componentData.componentId + ".correctiveActions" | translate }}</label>\r\n\r\n                    <div class="form-control" style="width: 50em">\r\n                      <textarea\r\n                        class="aw-textarea"\r\n                        [rows]="3"\r\n                        pInputTextarea\r\n                        [(ngModel)]="bidoFmdDTO.correctiveActionLong"\r\n                        [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                        maxlength="2000"\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- CLOSEOUT INFORMATION -->\r\n          <div class="grid-row">\r\n            <div class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".closeoutInformationAnchor" | translate }} ({{\r\n                        closeoutInformationData ? closeoutInformationData.length : 0\r\n                      }})\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <p-table\r\n                          [resizableColumns]="true"\r\n                          #closeoutInformationTable\r\n                          class="aw-table2"\r\n                          [columns]="tableCols"\r\n                          [value]="closeoutInformationData"\r\n                          [scrollable]="true"\r\n                        >\r\n                          <ng-template pTemplate="emptymessage">\r\n                            <span *ngIf="!isLoadingMaintenanceProgramTable"> &nbsp;</span>\r\n                            <div *ngIf="isLoadingMaintenanceProgramTable" class="aw-table-loading-indicator">\r\n                              <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                              <div class="lds-hourglass"></div>\r\n                            </div>\r\n                          </ng-template>\r\n                          <ng-template pTemplate="caption">\r\n                            <div class="aw-table-header">\r\n                              <div class="aw-table-global-filter">\r\n                                <label class="aw-table-global-filter-label">\r\n                                  <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                                </label>\r\n\r\n                                <input\r\n                                  #closeoutInformationTableGlobalFilter\r\n                                  class="aw-table-global-filter-input"\r\n                                  type="text"\r\n                                  placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                  (input)="closeoutInformationTable.filterGlobal($event.target.value, \'contains\')"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </ng-template>\r\n                          <ng-template pTemplate="colgroup" let-columns>\r\n                            <colgroup>\r\n                              <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                            </colgroup>\r\n                          </ng-template>\r\n                          <ng-template pTemplate="header" let-columns>\r\n                            <tr>\r\n                              <th\r\n                                pResizableColumn\r\n                                *ngFor="let col of columns"\r\n                                [ngStyle]="{ \'text-align\': col.alignment }"\r\n                              >\r\n                                <span *ngIf="col.field !== \'info\'">{{\r\n                                  componentData.componentId + "." + col.field | translate\r\n                                }}</span>\r\n                              </th>\r\n                            </tr>\r\n                          </ng-template>\r\n                          <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                            <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                              <td\r\n                                class="multi-row"\r\n                                *ngFor="let col of columns"\r\n                                [ngSwitch]="col.field"\r\n                                [ngStyle]="{ \'text-align\': col.alignment }"\r\n                                [ngClass]="{\r\n                                  \'cell-grey\':\r\n                                    col.field === \'engineData\' ||\r\n                                    (col.field === \'fmdData\' &&\r\n                                      rowData.info !== getTranslatedText(\'investigationFindings\')) ||\r\n                                    (col.field === \'fmdData\' && getIsFMDFieldReadOnly()) ||\r\n                                    col.field === \'fmdData && !getIsFMDFieldReadOnly()\'\r\n                                }"\r\n                              >\r\n                                <span *ngSwitchCase="\'control\'">\r\n                                  <span *ngIf="rowData.control === false"></span>\r\n                                  <span *ngIf="rowData.control === true" class="alert alert--warning">\r\n                                    {{ "FmdEventFormComponent.warning" | translate }}\r\n                                  </span>\r\n                                </span>\r\n\r\n                                <span *ngSwitchCase="\'engineData\'">\r\n                                  <div\r\n                                    pTooltip="{{\r\n                                      componentData.componentId + \'.dataIssuedFromSelectedEvent\' | translate\r\n                                    }}"\r\n                                    tooltipPosition="bottom"\r\n                                  >\r\n                                    {{ rowData[col.field] }}\r\n                                  </div>\r\n                                </span>\r\n\r\n                                <span *ngIf="!isReadOpenMode && !getIsFMDFieldReadOnly() && !isStatusClosed">\r\n                                  <span *ngSwitchCase="\'fmdData\'" class="page-header-links">\r\n                                    <span *ngIf="rowData.info === getTranslatedText(\'investigationFindings\')">\r\n                                      <td\r\n                                        class="multi-row"\r\n                                        [pEditableColumn]="rowData[col.field]"\r\n                                        [pEditableColumnField]="rowData[col.field]"\r\n                                        style="width: 10%"\r\n                                      >\r\n                                        <p-cellEditor>\r\n                                          <ng-template pTemplate="input">\r\n                                            <textarea\r\n                                              class="aw-textarea"\r\n                                              [rows]="3"\r\n                                              pInputTextarea\r\n                                              [(ngModel)]="rowData.fmdData"\r\n                                              maxlength="300"\r\n                                            ></textarea>\r\n                                          </ng-template>\r\n                                          <ng-template pTemplate="output">\r\n                                            <div\r\n                                              class="multi-row"\r\n                                              pTooltip="{{\r\n                                                componentData.componentId + \'.dataIssuedFromSavedFMD\' | translate\r\n                                              }}"\r\n                                              tooltipPosition="bottom"\r\n                                            >\r\n                                              {{ rowData[col.field] }}\r\n                                            </div>\r\n                                          </ng-template>\r\n                                        </p-cellEditor>\r\n                                      </td>\r\n                                    </span>\r\n                                  </span>\r\n                                </span>\r\n\r\n                                <span *ngSwitchDefault>\r\n                                  <div\r\n                                    class="multi-row"\r\n                                    pTooltip="{{ componentData.componentId + \'.dataIssuedFromSavedFMD\' | translate }}"\r\n                                    tooltipPosition="bottom"\r\n                                  >\r\n                                    {{ rowData[col.field] }}\r\n                                  </div>\r\n                                </span>\r\n                              </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                        </p-table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <br /><br />\r\n                  <div class="section">\r\n                    <div class="row">\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".closeoutReason" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            [options]="closeoutReasonOptions"\r\n                            [showClear]="true"\r\n                            placeholder="&nbsp;"\r\n                            [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                            [(ngModel)]="bidoFmdDTO.closeoutReason"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".closureDate" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-calendar\r\n                            showButtonBar="true"\r\n                            [monthNavigator]="true"\r\n                            [yearNavigator]="true"\r\n                            [yearRange]="sessionService.calendarYearRange"\r\n                            class="aw-calendar"\r\n                            [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                            [locale]="sessionService.calendarFormat"\r\n                            appendTo="body"\r\n                            [disabled]="isReadOpenMode || getIsClosureDateReadOnly()"\r\n                            [(ngModel)]="bidoFmdDTO.closureDate"\r\n                          ></p-calendar>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label">{{\r\n                          componentData.componentId + ".correctiveAction" | translate\r\n                        }}</label>\r\n\r\n                        <div class="form-control">\r\n                          <textarea\r\n                            class="aw-textarea"\r\n                            [rows]="3"\r\n                            pInputTextarea\r\n                            [(ngModel)]="bidoFmdDTO.correctiveAction"\r\n                            [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                            maxlength="100"\r\n                          ></textarea>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="row">\r\n                      <div *ngIf="getFDMIsFDE" class="form-group">\r\n                        <label class="form-label">{{\r\n                          componentData.componentId + ".fdmFdeJustificatif" | translate\r\n                        }}</label>\r\n\r\n                        <div class="form-control">\r\n                          <textarea\r\n                            class="aw-textarea"\r\n                            [rows]="3"\r\n                            pInputTextarea\r\n                            [(ngModel)]="bidoFmdDTO.fdmFdeJustificatif"\r\n                            [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                          ></textarea>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div *ngIf="getFDMIsFDE" class="form-group">\r\n                        <label class="form-label">{{\r\n                          componentData.componentId + ".fdmFdeElements" | translate\r\n                        }}</label>\r\n\r\n                        <div class="form-control">\r\n                          <textarea\r\n                            class="aw-textarea"\r\n                            [rows]="3"\r\n                            pInputTextarea\r\n                            [(ngModel)]="bidoFmdDTO.fdmFdeElements"\r\n                            [disabled]="isReadOpenMode || getIsFMDFieldReadOnly()"\r\n                          ></textarea>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div *ngIf="getRefusalReasonVisibility()" class="form-group">\r\n                        <label class="form-label">\r\n                          {{ componentData.componentId + ".refusalReason" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [disabled]="isReadOpenMode || getIsRefusalReasonReadOnly()"\r\n                            [(ngModel)]="bidoFmdDTO.refusalReason"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n        <mat-tab id="documentsTab">\r\n          <ng-template mat-tab-label>\r\n            {{ "global.documents" | translate }}\r\n          </ng-template>\r\n          <!--DOCUMENTS TAB-->\r\n          <div class="grid-row">\r\n            <div class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container loading-indicator">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ "global.documents" | translate }}\r\n                      ({{ documentTable ? documentTable.length : 0 }})\r\n                      <div *ngIf="isDataLoading" class="lds-hourglass"></div>\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <p-table\r\n                    [resizableColumns]="true"\r\n                    #ptableDocument\r\n                    class="aw-table2"\r\n                    [columns]="documentTableCols"\r\n                    [value]="documentTable"\r\n                    [(selection)]="selectedDocuments"\r\n                    dataKey="docName"\r\n                    [scrollable]="true"\r\n                  >\r\n                    <ng-template pTemplate="emptymessage">\r\n                      <span *ngIf="!isLoadingDocumentTable"> &nbsp;</span>\r\n\r\n                      <div *ngIf="isLoadingDocumentTable" class="aw-table-loading-indicator">\r\n                        <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                        <div class="lds-hourglass"></div>\r\n                      </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="caption">\r\n                      <div class="aw-table-header" [ngClass]="{ \'rows-selected\': selectedDocuments.length > 0 }">\r\n                        <div class="aw-table-global-filter">\r\n                          <label class="aw-table-global-filter-label">\r\n                            <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                          </label>\r\n\r\n                          <input\r\n                            #ptableDocumentGlobalFilter\r\n                            class="aw-table-global-filter-input"\r\n                            type="text"\r\n                            placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                            (input)="ptableDocument.filterGlobal($event.target.value, \'contains\')"\r\n                          />\r\n                        </div>\r\n\r\n                        <div *ngIf="getUpdateFormVisibility()" class="aw-table-actions">\r\n                          <button\r\n                            *ngIf="selectedDocuments.length > 0"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="downloadFiles()"\r\n                          >\r\n                            {{ "global.download" | translate }}\r\n                          </button>\r\n\r\n                          <button\r\n                            *ngIf="!isReadOpenMode && selectedDocuments.length > 0"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            color="warn"\r\n                            (click)="deleteDocuments()"\r\n                          >\r\n                            {{ "global.delete" | translate }}\r\n                          </button>\r\n\r\n                          <button\r\n                            *ngIf="!isReadOpenMode && selectedDocuments.length === 1"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="editDocument()"\r\n                          >\r\n                            {{ "global.edit" | translate }}\r\n                          </button>\r\n\r\n                          <button\r\n                            *ngIf="selectedDocuments.length === 1"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="openDocument()"\r\n                          >\r\n                            {{ "global.open" | translate }}\r\n                          </button>\r\n\r\n                          <p-fileUpload\r\n                            #fileUploader\r\n                            *ngIf="!isReadOpenMode && selectedDocuments.length === 0"\r\n                            chooseLabel="{{ \'global.upload\' | translate }}"\r\n                            name="document[]"\r\n                            customUpload="true"\r\n                            mode="basic"\r\n                            auto="true"\r\n                            (uploadHandler)="uploadDocument($event, fileUploader)"\r\n                          ></p-fileUpload>\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="colgroup" let-columns>\r\n                      <colgroup>\r\n                        <col class="aw-table-checkbox-wrapper" [ngClass]="{ \'display--none\': isReadOpenMode }" />\r\n                        <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                      </colgroup>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="header" let-columns>\r\n                      <tr>\r\n                        <th class="aw-table-checkbox-wrapper" [ngClass]="{ \'display--none\': isReadOpenMode }">\r\n                          <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                        </th>\r\n\r\n                        <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                          {{ componentData.componentId + "." + col.field | translate }}\r\n                        </th>\r\n                      </tr>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                      <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                        <td class="aw-table-checkbox-wrapper" [ngClass]="{ \'display--none\': isReadOpenMode }">\r\n                          <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n                        </td>\r\n\r\n                        <td *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                          {{ rowData[col.field] }}\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </p-table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--POPUPS-->\r\n\r\n<aw-dialog-business-partner-bido-document\r\n  *ngIf="showDocumentDialog"\r\n  [(display)]="showDocumentDialog"\r\n  [document]="currentDocument"\r\n  [openMode]="documentDialogOpenMode"\r\n  [types]="documentTypes"\r\n  (onValidated)="onAddDocument($event)"\r\n></aw-dialog-business-partner-bido-document>\r\n\r\n<aw-dialog-update-fde-reference\r\n  [(display)]="updateFDERefDialogVisibility"\r\n  [data]="updateFDERefData"\r\n  *ngIf="updateFDERefDialogVisibility"\r\n  (onAdded)="onUpdateFDERef($event)"\r\n></aw-dialog-update-fde-reference>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/fmd-event-form.component.scss':
      /*!*********************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/fmd-event-form.component.scss ***!
  \*********************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          ':host .alert {\n  display: inline-block;\n  max-width: 7rem;\n  text-transform: uppercase;\n  width: 100%;\n  font-weight: 600;\n  text-align: center;\n  width: 5rem; }\n  :host .alert.alert--ok {\n    background-color: #4caf50; }\n  :host .alert.alert--warning {\n    background-color: #ffc107; }\n  :host .alert.alert--nok {\n    background-color: #f6685e; }\n  :host .cell-grey {\n  background-color: #e1e1e1 !important; }\n  :host .multi-row {\n  white-space: pre-line !important; }\n  :host .separator {\n  margin-top: 0.7em; }\n  :host .custom-width {\n  width: 6em !important; }\n  :host .padding-class {\n  padding-top: 2em; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2V2ZW50L2ZtZC1ldmVudC1mb3JtL2ZtZC1ldmVudC1mb3JtL2Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZ2l0aHViX3BhZ2VzL3NyY1xcYXBwXFxtYWluXFxmbGVldC1tYW5hZ2VtZW50XFxldmVudFxcZm1kLWV2ZW50LWZvcm1cXGZtZC1ldmVudC1mb3JtXFxmbWQtZXZlbnQtZm9ybS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2V2ZW50L2ZtZC1ldmVudC1mb3JtL2ZtZC1ldmVudC1mb3JtL2Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZ2l0aHViX3BhZ2VzL3NyY1xcc3R5bGVzXFxfY29uc3RhbnRzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFFSSxxQkFBcUI7RUFDckIsZUFBZTtFQUNmLHlCQUF5QjtFQUN6QixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixXQUFXLEVBQUE7RUFSZjtJQVdNLHlCQ09nQixFQUFBO0VEbEJ0QjtJQWVNLHlCQ0lVLEVBQUE7RURuQmhCO0lBbUJNLHlCQ0VjLEVBQUE7RURyQnBCO0VBd0JJLG9DQUFvQyxFQUFBO0VBeEJ4QztFQTRCSSxnQ0FBZ0MsRUFBQTtFQTVCcEM7RUFnQ0ksaUJBQWlCLEVBQUE7RUFoQ3JCO0VBb0NJLHFCQUFxQixFQUFBO0VBcEN6QjtFQXdDSSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vZmxlZXQtbWFuYWdlbWVudC9ldmVudC9mbWQtZXZlbnQtZm9ybS9mbWQtZXZlbnQtZm9ybS9mbWQtZXZlbnQtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJjb25zdGFudHNcIjtcclxuQGltcG9ydCBcIm1peGluc1wiO1xyXG5cclxuOmhvc3Qge1xyXG4gIC5hbGVydCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXgtd2lkdGg6IDdyZW07XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2lkdGg6IDVyZW07XHJcblxyXG4gICAgJi5hbGVydC0tb2sge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW4tbGlnaHQxO1xyXG4gICAgfVxyXG5cclxuICAgICYuYWxlcnQtLXdhcm5pbmcge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkb3JhbmdlO1xyXG4gICAgfVxyXG5cclxuICAgICYuYWxlcnQtLW5vayB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRyZWQtbGlnaHQxO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmNlbGwtZ3JleSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTFlMWUxICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICAubXVsdGktcm93IHtcclxuICAgIHdoaXRlLXNwYWNlOiBwcmUtbGluZSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgLnNlcGFyYXRvciB7XHJcbiAgICBtYXJnaW4tdG9wOiAwLjdlbTtcclxuICB9XHJcblxyXG4gIC5jdXN0b20td2lkdGgge1xyXG4gICAgd2lkdGg6IDZlbSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgLnBhZGRpbmctY2xhc3Mge1xyXG4gICAgcGFkZGluZy10b3A6IDJlbTtcclxuICB9XHJcbn1cclxuIiwiJHByaW1hcnktYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4kcHJpbWFyeS10ZXh0LWNvbG9yOiAjMDAwO1xyXG4kc2Vjb25kYXJ5LXRleHQtY29sb3I6ICM1OTU5NTk7XHJcbiRhY2NlbnQtY29sb3I6ICMwMTU3OWI7XHJcblxyXG4kYm9keS1iYWNrZ3JvdW5kLWNvbG9yOiAjZThlYmVkO1xyXG4kdG9wYmFyLWNvbG9yOiAjZmFmYWZhO1xyXG5cclxuLy8gJHByaW1hcnktYmFja2dyb3VuZC1jb2xvcjogIzFlMWUxZTtcclxuLy8gJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMzMzO1xyXG4vLyAkcHJpbWFyeS10ZXh0LWNvbG9yOiAjZThlOGU4O1xyXG4vLyAkc2Vjb25kYXJ5LXRleHQtY29sb3I6ICNmZmY7XHJcbi8vICRhY2NlbnQtY29sb3I6ICM5Y2RjZmU7XHJcblxyXG4kYm9yZGVyLWNvbG9yOiAkc2Vjb25kYXJ5LXRleHQtY29sb3I7XHJcbiRib3JkZXItY29sb3ItLWRpc2FibGVkOiB0cmFuc3BhcmVudDtcclxuJGJvcmRlci1jb2xvci0tZm9jdXM6ICRhY2NlbnQtY29sb3I7XHJcbiRib3JkZXItY29sb3ItLWhvdmVyOiAjMWExYTFhO1xyXG5cclxuJGdyZWVuLWRhcmsxOiAjMjc2MzJhO1xyXG4kZ3JlZW4tbGlnaHQxOiAjNGNhZjUwO1xyXG4kb3JhbmdlOiAjZmZjMTA3O1xyXG4kcmVkLWRhcmsxOiAjYTgyNTI1O1xyXG4kcmVkLWxpZ2h0MTogI2Y2Njg1ZTtcclxuJGJsdWUtbGlnaHQxOiAjYjhkMGU4O1xyXG4kYmx1ZS1kYXJrMTogIzAwNmVhOTtcclxuJGdyZXkxOiAjYzhkNGQ2O1xyXG4keWVsbG93MTogI2RkZGYwMDtcclxuXHJcbiRjcml0aWNhbC12YWx1ZS1kYXJrOiAjZmJhNjQzOyAvLyBUT0RPOiByZW1vdmUgaXRcclxuJGNyaXRpY2FsLXZhbHVlLWxpZ2h0OiAjZmVjYzhlOyAvLyBUT0RPOiByZW1vdmUgaXRcclxuJGNhbGVuZGFyLXllbGxvdzogI2VmZWZiMDsgLy8gVE9ETzogcmVtb3ZlIGl0XHJcbiRiYWQtdmFsdWUtZGFyazogI2ZmNjc1ODsgLy8gVE9ETzogcmVtb3ZlIGl0XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcblxyXG4kYm9yZGVyLXJhZGl1czogNHB4O1xyXG4kYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuJGJvcmRlci13aWR0aDogMXB4O1xyXG4kZm9udC1mYW1pbHk6IFwiTGF0b0xhdGluV2ViXCI7XHJcbiRmb250LXNpemU6IDAuODc1cmVtO1xyXG4kZm9udC13ZWlnaHQ6IDQwMDtcclxuJGxpbmUtaGVpZ2h0OiAxLjQyODU3MTQyOTtcclxuJG1hcmdpbi12YWx1ZTogOHB4O1xyXG4kcGFnZS1tYXgtd2lkdGg6IDEzNjZweDtcclxuJGF0dHJpYnV0ZXMtY29sdW1uLXdpZHRoLTQ6IDQ7XHJcbiRhdHRyaWJ1dGVzLWNvbHVtbi13aWR0aC0zOiAzO1xyXG4kYXR0cmlidXRlcy1jb2x1bW4td2lkdGgtMjogMjtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbiRsZWZ0LXNpZGViYXItd2lkdGgtLWNvbGxhcHNlZDogNTBweDtcclxuJGxlZnQtc2lkZWJhci13aWR0aC0tZXhwYW5kZWQ6IDIyMHB4O1xyXG4kcmlnaHQtc2lkZWJhci13aWR0aC0tY29sbGFwc2VkOiA1MHB4O1xyXG4kcmlnaHQtc2lkZWJhci13aWR0aC0tZXhwYW5kZWQ6IDIyMHB4O1xyXG4kdG9wYmFyLWhlaWdodDogNDBweDtcclxuJG1haW5iYXItYm9yZGVyLWNvbG9yOiBkYXJrZW4oJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yLCA1JSk7XHJcbiRtYWluYmFyLWJvcmRlci13aWR0aDogMnB4O1xyXG4kcGFnZS1oZWFkZXItaGVpZ2h0OiA1LjVyZW07XHJcbiRmb3JtLWNvbnRyb2wtaGVpZ2h0OiAyLjVyZW07XHJcbiRjaGVja2JveC1oZWlnaHQ6IDEuMjVyZW07XHJcbiRyYWRpb2J1dHRvbi1oZWlnaHQ6IDEuMjVyZW07XHJcbiJdfQ== */';

        /***/
      },

    /***/ './src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/fmd-event-form.component.ts':
      /*!*******************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/fmd-event-form.component.ts ***!
  \*******************************************************************************************************/
      /*! exports provided: FmdEventFormComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'FmdEventFormComponent', function() {
          return FmdEventFormComponent;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! lodash-es */ './node_modules/lodash-es/lodash.js'
        );
        /* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! rxjs */ './node_modules/rxjs/_esm5/index.js'
        );
        /* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! rxjs/operators */ './node_modules/rxjs/_esm5/operators/index.js'
        );
        /* harmony import */ var _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../../shared/components/component-sidebar/page-toc.service */ './src/app/shared/components/component-sidebar/page-toc.service.ts'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_pipes_format_select_option_pipe__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../../../shared/pipes/format-select-option.pipe */ './src/app/shared/pipes/format-select-option.pipe.ts'
        );
        /* harmony import */ var _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../../../shared/services/confirmation.service */ './src/app/shared/services/confirmation.service.ts'
        );
        /* harmony import */ var _shared_services_date_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../../../shared/services/date.service */ './src/app/shared/services/date.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ../../../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ../../../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ../../../../../shared/types/form-page-component */ './src/app/shared/types/form-page-component.ts'
        );
        /* harmony import */ var _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
          /*! ../../../../../shared/utils/file-utils */ './src/app/shared/utils/file-utils.ts'
        );
        /* harmony import */ var _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
          /*! ../../../../../shared/utils/list-utils */ './src/app/shared/utils/list-utils.ts'
        );
        /* harmony import */ var _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
          /*! ../../../../../shared/utils/string-utils */ './src/app/shared/utils/string-utils.ts'
        );
        /* harmony import */ var _object_status_object_status_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
          /*! ../../../../object-status/object-status.component */ './src/app/main/object-status/object-status.component.ts'
        );
        /* harmony import */ var _overlay_overlay_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
          /*! ../../../../overlay/overlay.service */ './src/app/main/overlay/overlay.service.ts'
        );
        /* harmony import */ var _event_create_event_create_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
          /*! ../../event-create/event-create.service */ './src/app/main/fleet-management/event/event-create/event-create.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __assign =
          (undefined && undefined.__assign) ||
          function() {
            __assign =
              Object.assign ||
              function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                  s = arguments[i];
                  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
              };
            return __assign.apply(this, arguments);
          };
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };
        var __read =
          (undefined && undefined.__read) ||
          function(o, n) {
            var m = typeof Symbol === 'function' && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
              r,
              ar = [],
              e;
            try {
              while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
              e = { error: error };
            } finally {
              try {
                if (r && !r.done && (m = i['return'])) m.call(i);
              } finally {
                if (e) throw e.error;
              }
            }
            return ar;
          };
        var __spread =
          (undefined && undefined.__spread) ||
          function() {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
          };

        var FmdEventFormComponent = /** @class */ (function(_super) {
          __extends(FmdEventFormComponent, _super);
          function FmdEventFormComponent(
            favoriteService,
            loaderService,
            messageService,
            pageTocService,
            serializationService,
            tabService,
            sessionService,
            propertiesService,
            eventCreateService,
            translateService,
            dateService,
            confirmationService,
            _overlayService,
            _formatSelectOption
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService,
                pageTocService
              ) || this;
            _this.sessionService = sessionService;
            _this.propertiesService = propertiesService;
            _this.eventCreateService = eventCreateService;
            _this.translateService = translateService;
            _this.dateService = dateService;
            _this.confirmationService = confirmationService;
            _this._overlayService = _overlayService;
            _this._formatSelectOption = _formatSelectOption;
            _this.INITIAL_FINDINGS_TABLE_INFO_ARR = [];
            _this.CLOSEOUT_INFORMATION_TABLE_INFO_ARR = [];
            _this.AIRCRAFT_TABLE_INFO_ARR = [];
            _this.EVENT_TABLE_INFO_ARR = [];
            _this.ENGINE_TABLE_INFO_ARR = [];
            _this.selectedAnchor = undefined;
            _this.registerPageTocEntrySelectedObservable();
            _this.getInfoColumnLabels();
            return _this;
          }
          FmdEventFormComponent_1 = FmdEventFormComponent;
          FmdEventFormComponent.prototype.isSelectedAnchor = function(anchorId) {
            return anchorId === this.selectedAnchor;
          };
          FmdEventFormComponent.prototype.setSelectedAnchor = function(anchorId) {
            this.pageTocService.setAnchorSelected(anchorId);
            this.selectedAnchor = anchorId;
          };
          FmdEventFormComponent.prototype.registerPageTocEntrySelectedObservable = function() {
            var _this = this;
            this.pageTocService.pageTocEntrySelected$
              .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['takeUntil'])(this.unsubscribe))
              .subscribe(function(pageTocEntrySelected) {
                _this.selectedAnchor = pageTocEntrySelected;
              });
          };
          FmdEventFormComponent.prototype.getInfoColumnLabels = function() {
            var _this = this;
            // Initial Findings
            var eventNarrative = this.getComponentName() + '.eventNarrative';
            var initialFindings = this.getComponentName() + '.initialFindingsAnchor';
            // Closeout Information
            var partNumber = this.getComponentName() + '.partNumber';
            var pnDesignation = this.getComponentName() + '.pnDesignation';
            var investigationFindings = this.getComponentName() + '.investigationFindings';
            // Aircraft Information
            var operatorName = this.getComponentName() + '.operatorName';
            var aircraftModel = this.getComponentName() + '.aircraftModel';
            var aircraftSerialNumber = this.getComponentName() + '.aircraftSerialNumber';
            var aircraftTail = this.getComponentName() + '.aircraftTail';
            var enginePosition = this.getComponentName() + '.enginePosition';
            // Event Information
            var eventType = this.getComponentName() + '.eventType';
            var eventDate = this.getComponentName() + '.eventDate';
            var eventLocation = this.getComponentName() + '.eventLocation';
            var reportedOn = this.getComponentName() + '.reportedOn';
            var reportedBy = this.getComponentName() + '.reportedBy';
            var circumstances = this.getComponentName() + '.circumstances';
            var symptom = this.getComponentName() + '.symptom';
            // Engine Information
            var engineType = this.getComponentName() + '.engineType';
            var engineModel = this.getComponentName() + '.engineModel';
            var esn = this.getComponentName() + '.esn';
            var tsn = this.getComponentName() + '.tsn';
            var csn = this.getComponentName() + '.csn';
            var tssv = this.getComponentName() + '.tssv';
            var cssv = this.getComponentName() + '.cssv';
            var tsi = this.getComponentName() + '.tsi';
            var csi = this.getComponentName() + '.csi';
            this.translateService
              .get([
                eventNarrative,
                initialFindings,
                partNumber,
                pnDesignation,
                investigationFindings,
                operatorName,
                aircraftModel,
                aircraftSerialNumber,
                aircraftTail,
                enginePosition,
                eventType,
                eventDate,
                eventLocation,
                reportedOn,
                reportedBy,
                circumstances,
                symptom,
                engineType,
                engineModel,
                esn,
                tsn,
                csn,
                tssv,
                cssv,
                tsi,
                csi
              ])
              .subscribe(function(results) {
                _this.INITIAL_FINDINGS_TABLE_INFO_ARR = [results[eventNarrative], results[initialFindings]];
                _this.CLOSEOUT_INFORMATION_TABLE_INFO_ARR = [
                  results[partNumber],
                  results[pnDesignation],
                  results[investigationFindings]
                ];
                _this.AIRCRAFT_TABLE_INFO_ARR = [
                  results[operatorName],
                  results[aircraftModel],
                  results[aircraftSerialNumber],
                  results[aircraftTail],
                  results[enginePosition]
                ];
                _this.EVENT_TABLE_INFO_ARR = [
                  results[eventType],
                  results[eventDate],
                  results[eventLocation],
                  results[reportedOn],
                  results[reportedBy],
                  results[circumstances],
                  results[symptom]
                ];
                _this.ENGINE_TABLE_INFO_ARR = [
                  results[engineType],
                  results[engineModel],
                  results[esn],
                  results[tsn],
                  results[csn],
                  results[tssv],
                  results[cssv],
                  results[tsi],
                  results[csi]
                ];
              });
          };
          FmdEventFormComponent.prototype.getComponentName = function() {
            return _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_7__['ComponentConstants']
              .FLE_FDM_EVENT_FORM;
          };
          FmdEventFormComponent.prototype.ngOnInit = function() {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            this.updateOpenMode(this.componentData.openMode);
            var code =
              !!this.componentData.objectId &&
              !!this.serializationService.deserialize(this.componentData.objectId).notificationCode
                ? this.serializationService.deserialize(this.componentData.objectId).notificationCode
                : undefined;
            if (!!this.componentData.objectId && !code) {
              this.notificationCode = code;
              this.displayComponentContext('tab.createMode', this.isCreateOpenMode);
            } else if (!!this.componentData.objectId && !!code) {
              this.notificationCode = this.serializationService.deserialize(
                this.componentData.objectId
              ).notificationCode;
              this.componentSubtitle = code;
              this.displayComponentContext(this.notificationCode, this.isCreateOpenMode);
            }
            var mainInfoKey = 'page.mainData';
            var reportInfoKey = this.getComponentName() + '.reportInfoAnchor';
            var engineInfoKey = this.getComponentName() + '.engineInfoAnchor';
            var aircraftInfoKey = this.getComponentName() + '.aircraftInfoAnchor';
            var eventInfoKey = this.getComponentName() + '.eventInfoAnchor';
            var initialFindingsKey = this.getComponentName() + '.initialFindingsAnchor';
            var investigationFindingKey = this.getComponentName() + '.investigationFinding';
            var correctiveActionKey = this.getComponentName() + '.correctiveAction';
            var riskAnalysisKey = this.getComponentName() + '.riskAnalysis';
            var closeoutInformationKey = this.getComponentName() + '.closeoutInformationAnchor';
            var documentsKey = 'global.documents';
            this.translateService
              .get([
                mainInfoKey,
                reportInfoKey,
                engineInfoKey,
                aircraftInfoKey,
                eventInfoKey,
                initialFindingsKey,
                investigationFindingKey,
                correctiveActionKey,
                riskAnalysisKey,
                closeoutInformationKey,
                documentsKey
              ])
              .subscribe(function(results) {
                _this.toc = [
                  {
                    id: 'mainAnchor',
                    anchor: _this.mainAnchor,
                    label: results[mainInfoKey]
                  },
                  {
                    id: 'reportInfoAnchor',
                    anchor: _this.reportInfoAnchor,
                    label: results[reportInfoKey]
                  },
                  {
                    id: 'engineInfoAnchor',
                    anchor: _this.engineInfoAnchor,
                    label: results[engineInfoKey]
                  },
                  {
                    id: 'aircraftInfoAnchor',
                    anchor: _this.aircraftInfoAnchor,
                    label: results[aircraftInfoKey]
                  },
                  {
                    id: 'eventInfoAnchor',
                    anchor: _this.eventInfoAnchor,
                    label: results[eventInfoKey]
                  },
                  {
                    id: 'initialFindingsAnchor',
                    anchor: _this.initialFindingsAnchor,
                    label: results[initialFindingsKey]
                  },
                  {
                    id: 'investigationFindingAnchor',
                    anchor: _this.investigationFindingAnchor,
                    label: results[investigationFindingKey]
                  },
                  {
                    id: 'correctiveActionAnchor',
                    anchor: _this.correctiveActionAnchor,
                    label: results[correctiveActionKey]
                  },
                  {
                    id: 'riskAnalysisAnchor',
                    anchor: _this.riskAnalysisAnchor,
                    label: results[riskAnalysisKey]
                  },
                  {
                    id: 'closeoutInformationAnchor',
                    anchor: _this.closeoutInformationAnchor,
                    label: results[closeoutInformationKey]
                  },
                  {
                    id: 'documentsAnchor',
                    anchor: _this.documentsAnchor,
                    label: results[documentsKey]
                  }
                ];
              });
            this.tableCols = [
              { field: 'info', alignment: 'left', width: '15%' },
              { field: 'control', alignment: 'center', width: '10%' },
              { field: 'engineData', alignment: 'left' },
              { field: 'fmdData', alignment: 'left' }
            ];
            this.documentTableCols = [
              { field: 'docName', alignment: 'left' },
              { field: 'docType', alignment: 'left' },
              { field: 'docExtension', alignment: 'left' },
              { field: 'docSize', alignment: 'left' },
              { field: 'docPublicationDate', alignment: 'left' }
            ];
            this.init();
            this.loadBidoNotification();
            // this.loadDocuments();
          };
          /*******************************
           * TOP PANEL OPERATIONS
           *******************************/
          FmdEventFormComponent.prototype.init = function() {
            this.bidoNotificationDTO = {
              bidoNotificationTypeDTO: {}
            };
            this.bidoFmdDTO = {};
            this.databaseFmdDto = {};
            this.engineInfoData = [];
            this.initialFindingsData = [];
            this.closeoutInformationData = [];
            this.documentsAdded = [];
            this.documentsRemoved = [];
            this.documentsUpdated = [];
            this.documents = [];
            this.documentTable = [];
            this.documentTypes = [];
            this.selectedDocuments = [];
            this.editionNumberMap = [];
            this.bidoFmdsArr = [];
            this.doaNumberMap = [];
            this.updateFDERefData = {};
            this.currentDocument = undefined;
            this.currentDocumentIndex = -1;
            this.documentDialogOpenMode =
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read;
            this.showDocumentDialog = false;
            this.isDataLoading = true;
            this.initDropdowns();
            this.getDocumentTypes();
          };
          FmdEventFormComponent.prototype.editFMDEvent = function() {
            this.updateOpenMode(
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Write
            );
          };
          FmdEventFormComponent.prototype.cancelFMDEvent = function() {
            this.updateOpenMode(
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read
            );
            this.reloadFMDEvent();
          };
          FmdEventFormComponent.prototype.reloadFMDEvent = function() {
            this.init();
            this.loadBidoNotification();
          };
          /*******************************
           * LOAD DROPDOWN
           *******************************/
          FmdEventFormComponent.prototype.initDropdowns = function() {
            var _this = this;
            var statusMap = this.propertiesService.getValue('getFmdStatusMap');
            var aeronauticalMap = this.propertiesService.getValue('getFmdAuthoritiesMap');
            var prodCertMap = this.propertiesService.getValue('getFmdProdCertificateMap');
            var doaMap = this.propertiesService.getValue('getFmdDoaNumbersMap');
            var highestDamageMap = this.propertiesService.getValue('getFmdHighestDamageMap');
            var injuryLevelMap = this.propertiesService.getValue('getFmdInjuryLevelMap');
            var closeoutReasonMap = this.propertiesService.getValue('getFmdCloseoutReasonMap');
            var doaConst = 3;
            var highestDamageConst = 4;
            var injuryConst = 5;
            var closeoutConst = 6;
            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['forkJoin'])([
              statusMap,
              aeronauticalMap,
              prodCertMap,
              doaMap,
              highestDamageMap,
              injuryLevelMap,
              closeoutReasonMap
            ]).subscribe(function(results) {
              _this.fmdStatusMap = results[0];
              _this.aeronauticalAuthorityMap = results[1];
              _this.productionCertMap = results[2];
              _this.doaNumberMap = results[doaConst];
              _this.e5xHighestDamageMap = results[highestDamageConst];
              _this.e5xinjuryLevelMap = results[injuryConst];
              _this.closeoutReasonOptions = results[closeoutConst];
            });
            var codes = ['C', 'O'];
            codes.forEach(function(code) {
              _this.loadOwnerAndOperatorDropdown(code);
            });
          };
          FmdEventFormComponent.prototype.loadOwnerAndOperatorDropdown = function(code) {
            var _this = this;
            this.eventCreateService.findBidoCustomersBySearchCriteriaFMD(code).subscribe(function(result) {
              if (code === 'C') {
                _this.clientMap = result;
              } else {
                _this.operatorMap = result;
              }
            });
          };
          FmdEventFormComponent.prototype.loadE5XEventTypeDropdown = function(code) {
            var _this = this;
            this.eventCreateService.findE5XEventTypesByFmdEventType(code).subscribe(function(result) {
              _this.eventTypeMap = result;
            });
          };
          FmdEventFormComponent.prototype.loadTypeCertificateMap = function(code, notificationCode) {
            var _this = this;
            this.eventCreateService.initializeTCMap(code).subscribe(function(result) {
              _this.typeCertificateMap = result;
              _this.findBidoFmdsByNotificationCode(notificationCode);
            });
          };
          /*******************************
           * LOAD SCREEN DATA
           *******************************/
          FmdEventFormComponent.prototype.loadBidoNotification = function() {
            var _this = this;
            var bidoNotificationDTOId = {
              notificationCode: this.notificationCode
            };
            this.eventCreateService
              .findBidoNotification(bidoNotificationDTOId)
              .pipe(
                Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['finalize'])(function() {
                  _this.isDataLoading = false;
                })
              )
              .subscribe(function(bidoNotification) {
                _this.bidoNotificationDTO = bidoNotification;
                if (!!bidoNotification && bidoNotification.familyVariantCode) {
                  _this.loadTypeCertificateMap(bidoNotification.familyVariantCode, bidoNotification.notificationCode);
                  _this.getFDMIsFDEVal();
                  _this.hasManageRights();
                }
              });
          };
          /*******************************
           * Filling DTO
           *******************************/
          FmdEventFormComponent.prototype.findBidoFmdsByNotificationCode = function(notificationCode) {
            var _this = this;
            this.eventCreateService
              .findBidoFmdsByNotificationCode(notificationCode)
              .pipe(
                Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['finalize'])(function() {
                  _this.isDataLoading = false;
                })
              )
              .subscribe(function(result) {
                _this.bidoFmdsArr = result;
                if (result.length > 0 && !!result[0].reference) {
                  _this.fillEditionNumber(result);
                  _this.fillBidoFMDDTO(result[result.length - 1]);
                  _this.onChangeEditionNumber();
                  _this.generateFMD(true, notificationCode);
                } else {
                  _this.bidoFmdDTO = result[0];
                  _this.generateFMD(false, notificationCode);
                }
                if (!_this.bidoFmdDTO.e5xHighestDamage) {
                  // Setting default value NONE
                  _this.bidoFmdDTO.e5xHighestDamage = '98';
                }
                if (!_this.bidoFmdDTO.e5xInjuryLevel) {
                  // Setting default value NONE
                  _this.bidoFmdDTO.e5xInjuryLevel = '98';
                }
              });
          };
          /**
           *
           */
          FmdEventFormComponent.prototype.fillBidoFMDDTO = function(result) {
            this.bidoFmdDTO = __assign({}, result);
            this.databaseFmdDto = __assign({}, result);
            this.prevState = this.bidoFmdDTO.statusState;
            this.isStatusClosed =
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_CLOSED_KEY === this.prevState
                ? true
                : false;
            if (this.doaNumberMap.length > 0 && !this.bidoFmdDTO.doaNumber) {
              this.bidoFmdDTO.doaNumber = this.doaNumberMap[0].value;
            }
            this.initFMD();
          };
          /*******************************
           * Edition Number functionality
           *******************************/
          FmdEventFormComponent.prototype.fillEditionNumber = function(result) {
            var _this = this;
            result.forEach(function(res) {
              if (res.editionNumber !== 0) {
                _this.editionNumberMap.push({
                  label: res.editionNumber.toString(),
                  value: res.editionNumber
                });
              }
            });
          };
          FmdEventFormComponent.prototype.onChangeEditionNumber = function() {
            var _this = this;
            this.bidoFmdsArr.forEach(function(res) {
              if (res.editionNumber === _this.bidoFmdDTO.editionNumber) {
                _this.fillBidoFMDDTO(res);
              }
            });
          };
          FmdEventFormComponent.prototype.initFMD = function() {
            var _this = this;
            if (!!this.bidoFmdDTO.reference) {
              this.eventCreateService
                .setFMDReferenceDTO(this.bidoFmdDTO.reference)
                .pipe(
                  Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['finalize'])(function() {
                    _this.isDataLoading = false;
                  })
                )
                .subscribe(function(result) {
                  if (_this.getFDMIsFDE) {
                    if (!!_this.bidoFmdDTO.reference && !!result.reference && result.reference.split('-').length > 0) {
                      _this.reference = _this.bidoFmdDTO.reference.substring(
                        _this.bidoFmdDTO.reference.indexOf('-') + 1
                      );
                    } else {
                      _this.reference = result.reference;
                    }
                    _this.referenceFDELetter = result.referenceFDELetter;
                    _this.referenceFDEYear = result.referenceFDEYear;
                    _this.referenceFDENumber = result.referenceFDENumber;
                  } else {
                    _this.reference = result.reference;
                    _this.referenceFMDNumber = result.referenceFMDNumber;
                    _this.referenceFMDYear = result.referenceFMDYear;
                  }
                  _this.getReferenceSplitVisibility();
                  _this.isDataLoading = false;
                });
            }
          };
          FmdEventFormComponent.prototype.generateFMD = function(isAnExistingFMD, notificationCode) {
            var _this = this;
            this.eventCreateService
              .generateFmdByEventCode(notificationCode)
              .pipe(
                Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['finalize'])(function() {
                  _this.isDataLoading = false;
                })
              )
              .subscribe(function(res) {
                _this.generateAndSetFMD(isAnExistingFMD, res);
                _this.isDataLoading = false;
              });
          };
          FmdEventFormComponent.prototype.generateAndSetFMD = function(isAnExistingFMD, res) {
            if (!isAnExistingFMD) {
              if (!!res) {
                this.setBidoFmdData(res);
              }
            }
            this.eventFmdData = res;
            this.loadTabData();
            if (!!this.bidoFmdDTO.eventType) {
              this.loadE5XEventTypeDropdown(this.bidoFmdDTO.eventType);
            } else if (!!this.eventFmdData.eventType) {
              this.loadE5XEventTypeDropdown(this.eventFmdData.eventType);
            }
          };
          FmdEventFormComponent.prototype.setBidoFmdData = function(res) {
            // Setting Reporting Information
            this.bidoFmdDTO.reference = undefined;
            this.bidoFmdDTO.fmdSystemCreationDate = undefined;
            this.bidoFmdDTO.statusState =
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                'AWPropertiesConstants'
              ].FMD_STATUS_DRAFT_KEY;
            this.bidoFmdDTO.fmdReporter = !!res.fmdAuthor ? res.fmdAuthor : this.bidoFmdDTO.fmdAuthor;
            this.bidoFmdDTO.fmdCreationDate = res.fmdCreationDate;
            this.bidoFmdDTO.tcHolderAddress = res.tcHolderAddress;
            this.bidoFmdDTO.tcHolderName = res.tcHolderName;
            this.bidoFmdDTO.doaNumber = '1';
            // Engine Information
            this.bidoFmdDTO.engineModel = res.engineModel;
            this.bidoFmdDTO.engineType = res.engineType;
            this.bidoFmdDTO.esn = res.esn;
            this.bidoFmdDTO.tsn = res.tsn;
            this.bidoFmdDTO.csn = res.csn;
            this.bidoFmdDTO.tssv = res.tssv;
            this.bidoFmdDTO.cssv = res.cssv;
            this.bidoFmdDTO.tsi = res.tsi;
            this.bidoFmdDTO.csi = res.csi;
            this.bidoFmdDTO.operatorName = res.operatorName;
            // Aircraft information
            this.bidoFmdDTO.aircraftModel = res.aircraftModel;
            this.bidoFmdDTO.aircraftSerialNumber = res.aircraftSerialNumber;
            this.bidoFmdDTO.aircraftSerialNumber = res.aircraftSerialNumber;
            this.bidoFmdDTO.aircraftTail = res.aircraftTail;
            this.bidoFmdDTO.enginePosition = res.enginePosition;
            this.bidoFmdDTO.aircraftSerialNumber = res.aircraftSerialNumber;
            // Event information
            this.bidoFmdDTO.eventType = res.eventType;
            this.bidoFmdDTO.eventDate = res.eventDate;
            this.bidoFmdDTO.eventLocation = res.eventLocation;
            this.bidoFmdDTO.reportDate = res.reportDate;
            this.bidoFmdDTO.reportedBy = res.reportedBy;
            this.bidoFmdDTO.eventSymptoms = res.eventSymptoms;
            // Initial Findings
            this.bidoFmdDTO.eventNarrative = res.eventNarrative;
            this.bidoFmdDTO.initialFinding = res.initialFinding;
            // Closeout Information
            this.bidoFmdDTO.pn = res.pn;
            this.bidoFmdDTO.pnDesignation = res.pnDesignation;
            this.bidoFmdDTO.investigationFindingLong = res.investigationFindingLong;
            this.bidoFmdDTO.refusalReason = res.refusalReason;
            this.bidoFmdDTO.closureDate = res.closureDate;
            this.bidoFmdDTO.correctiveAction = res.correctiveAction;
          };
          FmdEventFormComponent.prototype.loadTabData = function() {
            this.loadEngineInformationTab();
            this.loadAircraftInformationTab();
            this.loadEventInformationTab();
            this.loadInitialFindingsTab();
            this.loadCloseoutInformationTab();
            this.loadDocuments();
          };
          FmdEventFormComponent.prototype.getFDMIsFDEVal = function() {
            var _this = this;
            if (!!this.bidoNotificationDTO && !!this.bidoNotificationDTO.familyVariantCode) {
              this.eventCreateService.getFDMIsFDE(this.bidoNotificationDTO.familyVariantCode).subscribe(function(res) {
                _this.getFDMIsFDE = res;
              });
            }
          };
          /********************************
           * Create table structure
           ********************************/
          // tslint:disable-next-line:no-any
          FmdEventFormComponent.prototype.createTableStructure = function(rowInfoData) {
            // tslint:disable-next-line:no-any
            var tableArr = [];
            rowInfoData.forEach(function(row) {
              tableArr.push({
                info: row,
                control: undefined,
                engineData: undefined,
                fmdData: undefined
              });
            });
            return tableArr;
          };
          /********************************
           * ENGINE INFORMATION TAB OPERATIONS
           ********************************/
          FmdEventFormComponent.prototype.loadEngineInformationTab = function() {
            var _this = this;
            this.engineInfoData = this.createTableStructure(this.ENGINE_TABLE_INFO_ARR);
            var ENGINT_TYPE = 0;
            var CONTROL = 1;
            var ESN = 2;
            var TSN = 3;
            var CSN = 4;
            var TSSV = 5;
            var CSSV = 6;
            var TSI = 7;
            var CSI = 8;
            this.engineInfoData.forEach(function(row) {
              switch (row.info) {
                case _this.ENGINE_TABLE_INFO_ARR[ENGINT_TYPE]: {
                  row.engineData = _this.eventFmdData.engineType;
                  row.fmdData = _this.bidoFmdDTO.engineType;
                  row.control = _this.getControlFieldData(_this.eventFmdData.engineType, _this.bidoFmdDTO.engineType);
                  break;
                }
                case _this.ENGINE_TABLE_INFO_ARR[CONTROL]: {
                  row.engineData = _this.eventFmdData.engineModel;
                  row.fmdData = _this.bidoFmdDTO.engineModel;
                  row.control = _this.getControlFieldData(_this.eventFmdData.engineModel, _this.bidoFmdDTO.engineModel);
                  break;
                }
                case _this.ENGINE_TABLE_INFO_ARR[ESN]: {
                  row.engineData = _this.eventFmdData.esn;
                  row.fmdData = _this.bidoFmdDTO.esn;
                  row.control = _this.getControlFieldData(_this.eventFmdData.esn, _this.bidoFmdDTO.esn);
                  break;
                }
                case _this.ENGINE_TABLE_INFO_ARR[TSN]: {
                  row.engineData = _this.eventFmdData.tsn;
                  row.fmdData = _this.bidoFmdDTO.tsn;
                  row.control = _this.getControlFieldData(_this.eventFmdData.tsn, _this.bidoFmdDTO.tsn);
                  break;
                }
                case _this.ENGINE_TABLE_INFO_ARR[CSN]: {
                  row.engineData = _this.eventFmdData.csn;
                  row.fmdData = _this.bidoFmdDTO.csn;
                  row.control = _this.getControlFieldData(_this.eventFmdData.csn, _this.bidoFmdDTO.csn);
                  break;
                }
                case _this.ENGINE_TABLE_INFO_ARR[TSSV]: {
                  row.engineData = _this.eventFmdData.tssv;
                  row.fmdData = _this.bidoFmdDTO.tssv;
                  row.control = _this.getControlFieldData(_this.eventFmdData.tssv, _this.bidoFmdDTO.tssv);
                  break;
                }
                case _this.ENGINE_TABLE_INFO_ARR[CSSV]: {
                  row.engineData = _this.eventFmdData.cssv;
                  row.fmdData = _this.bidoFmdDTO.cssv;
                  row.control = _this.getControlFieldData(_this.eventFmdData.cssv, _this.bidoFmdDTO.cssv);
                  break;
                }
                case _this.ENGINE_TABLE_INFO_ARR[TSI]: {
                  row.engineData = _this.eventFmdData.tsi;
                  row.fmdData = _this.bidoFmdDTO.tsi;
                  row.control = _this.getControlFieldData(_this.eventFmdData.tsi, _this.bidoFmdDTO.tsi);
                  break;
                }
                case _this.ENGINE_TABLE_INFO_ARR[CSI]: {
                  row.engineData = _this.eventFmdData.csi;
                  row.fmdData = _this.bidoFmdDTO.csi;
                  row.control = _this.getControlFieldData(_this.eventFmdData.csi, _this.bidoFmdDTO.csi);
                  break;
                }
                default: {
                  // TODO
                  break;
                }
              }
            });
            this.engineInfoData = Object(lodash_es__WEBPACK_IMPORTED_MODULE_2__['cloneDeep'])(this.engineInfoData);
          };
          /********************************
           * AIRCRAFT INFORMATION TAB OPERATIONS
           ********************************/
          FmdEventFormComponent.prototype.loadAircraftInformationTab = function() {
            var _this = this;
            this.aircraftInfoData = this.createTableStructure(this.AIRCRAFT_TABLE_INFO_ARR);
            var OPERATOR_NAME = 0;
            var AIRCRAFT_MODEL = 1;
            var AIRCRAFT_SERIAL = 2;
            var AIRCRAFT_TAIL = 3;
            var ENGINE_POSITION = 4;
            var fmdData = __assign({}, this.bidoFmdDTO);
            this.aircraftInfoData.forEach(function(row) {
              switch (row.info) {
                case _this.AIRCRAFT_TABLE_INFO_ARR[OPERATOR_NAME]: {
                  row.engineData = _this.eventFmdData.operatorName;
                  row.fmdData = fmdData.operatorName;
                  row.control = _this.getControlFieldData(_this.eventFmdData.operatorName, fmdData.operatorName);
                  break;
                }
                case _this.AIRCRAFT_TABLE_INFO_ARR[AIRCRAFT_MODEL]: {
                  row.engineData = _this.eventFmdData.aircraftModel;
                  row.fmdData = fmdData.aircraftModel;
                  row.control = _this.getControlFieldData(_this.eventFmdData.aircraftModel, fmdData.aircraftModel);
                  break;
                }
                case _this.AIRCRAFT_TABLE_INFO_ARR[AIRCRAFT_SERIAL]: {
                  row.engineData = _this.eventFmdData.aircraftSerialNumber;
                  row.fmdData = fmdData.aircraftSerialNumber;
                  row.control = _this.getControlFieldData(
                    _this.eventFmdData.aircraftSerialNumber,
                    fmdData.aircraftSerialNumber
                  );
                  break;
                }
                case _this.AIRCRAFT_TABLE_INFO_ARR[AIRCRAFT_TAIL]: {
                  row.engineData = _this.eventFmdData.aircraftTail;
                  row.fmdData = fmdData.aircraftTail;
                  row.control = _this.getControlFieldData(_this.eventFmdData.aircraftTail, fmdData.aircraftTail);
                  break;
                }
                case _this.AIRCRAFT_TABLE_INFO_ARR[ENGINE_POSITION]: {
                  row.engineData = _this.eventFmdData.enginePosition;
                  row.fmdData = fmdData.enginePosition;
                  row.control = _this.getControlFieldData(_this.eventFmdData.enginePosition, fmdData.enginePosition);
                  break;
                }
                default: {
                  break;
                }
              }
            });
            this.aircraftInfoData = Object(lodash_es__WEBPACK_IMPORTED_MODULE_2__['cloneDeep'])(this.aircraftInfoData);
          };
          /********************************
           * GETTING CONTROL FIELD DATA
           ********************************/
          FmdEventFormComponent.prototype.getControlFieldData = function(eventData, fmdData) {
            var control = false;
            if (!!eventData) {
              if (!!fmdData) {
                if (eventData !== fmdData) {
                  control = true;
                } else {
                  control = false;
                }
              } else {
                control = false;
              }
            } else {
              if (!!fmdData) {
                control = true;
              } else {
                control = false;
              }
            }
            return control;
          };
          /********************************
           * EVENT INFORMATION TAB OPERATIONS
           ********************************/
          FmdEventFormComponent.prototype.loadEventInformationTab = function() {
            var _this = this;
            this.eventInfoData = this.createTableStructure(this.EVENT_TABLE_INFO_ARR);
            var EVENT_TYPE = 0;
            var DATE = 1;
            var EVENT_LOCATION = 2;
            var REPORTED_DATE = 3;
            var REPORTED_BY = 4;
            var CIRCUMSTANCES = 5;
            var SYMPTOM = 6;
            this.eventInfoData.forEach(function(row) {
              switch (row.info) {
                case _this.EVENT_TABLE_INFO_ARR[EVENT_TYPE]: {
                  row.engineData = _this.eventFmdData.eventType;
                  row.fmdData = _this.bidoFmdDTO.eventType;
                  row.control = _this.getControlFieldData(_this.eventFmdData.eventType, _this.bidoFmdDTO.eventType);
                  break;
                }
                case _this.EVENT_TABLE_INFO_ARR[DATE]: {
                  row.engineData = _this.dateService.dateToString(_this.eventFmdData.eventDate);
                  row.fmdData = _this.dateService.dateToString(_this.bidoFmdDTO.eventDate);
                  row.control = _this.getControlFieldData(
                    _this.dateService.dateToString(_this.eventFmdData.eventDate),
                    _this.dateService.dateToString(_this.bidoFmdDTO.eventDate)
                  );
                  break;
                }
                case _this.EVENT_TABLE_INFO_ARR[EVENT_LOCATION]: {
                  row.engineData = _this.eventFmdData.eventLocation;
                  row.fmdData = _this.bidoFmdDTO.eventLocation;
                  row.control = _this.getControlFieldData(
                    _this.eventFmdData.eventLocation,
                    _this.bidoFmdDTO.eventLocation
                  );
                  break;
                }
                case _this.EVENT_TABLE_INFO_ARR[REPORTED_DATE]: {
                  row.engineData = _this.dateService.dateToString(_this.eventFmdData.reportDate);
                  row.fmdData = _this.dateService.dateToString(_this.bidoFmdDTO.reportDate);
                  row.control = _this.getControlFieldData(
                    _this.dateService.dateToString(_this.eventFmdData.reportDate),
                    _this.dateService.dateToString(_this.bidoFmdDTO.reportDate)
                  );
                  break;
                }
                case _this.EVENT_TABLE_INFO_ARR[REPORTED_BY]: {
                  row.engineData = _this.eventFmdData.reportedBy;
                  row.fmdData = _this.bidoFmdDTO.reportedBy;
                  row.control = _this.getControlFieldData(_this.eventFmdData.reportedBy, _this.bidoFmdDTO.reportedBy);
                  break;
                }
                case _this.EVENT_TABLE_INFO_ARR[CIRCUMSTANCES]: {
                  row.engineData = _this.eventFmdData.eventCirconstancies;
                  row.fmdData = _this.bidoFmdDTO.eventCirconstancies;
                  row.control = _this.getControlFieldData(
                    _this.eventFmdData.eventCirconstancies,
                    _this.bidoFmdDTO.eventCirconstancies
                  );
                  break;
                }
                case _this.EVENT_TABLE_INFO_ARR[SYMPTOM]: {
                  row.engineData = _this.eventFmdData.eventSymptoms;
                  row.fmdData = _this.bidoFmdDTO.eventSymptoms;
                  row.control = _this.getControlFieldData(
                    _this.eventFmdData.eventSymptoms,
                    _this.bidoFmdDTO.eventSymptoms
                  );
                  break;
                }
                default: {
                  break;
                }
              }
            });
          };
          /********************************
           * ACTION ON EVENT STATUS CHANGE
           ********************************/
          FmdEventFormComponent.prototype.onActionSelectFmdStatus = function() {
            var _this = this;
            var previousStatus = this.prevState;
            var currentStatus = this.bidoFmdDTO.statusState;
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_DRAFT_KEY === previousStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_DRAFT_PLUS_KEY !== currentStatus
            ) {
              // The drop-down list is automatically repositioned to the DRAFT value
              this.messageService.showWarningMessage(this.getTranslateKey('MSG_WARNING_STATUS_EVOLUTION'));
              setTimeout(function() {
                _this.bidoFmdDTO.statusState =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                    'AWPropertiesConstants'
                  ].FMD_STATUS_DRAFT_KEY;
              }, FmdEventFormComponent_1.TIMEOUT_LIMIT);
              return false;
            }
            // Conditions on the transition from DRAFT status -> DRAFT +
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_DRAFT_KEY === previousStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_DRAFT_PLUS_KEY === currentStatus
            ) {
              // The current status becomes the precedent for the next selection
              this.prevState = this.bidoFmdDTO.statusState;
            }
            if (
              (_shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_REFUSED_KEY === currentStatus ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_RECOMMENDED_KEY === currentStatus) &&
              !this.bidoFmdDTO.reference
            ) {
              // The drop-down list is automatically repositioned to the OPEN value
              this.messageService.showWarningMessage(this.getTranslateKey('MSG_WARNING_FMD_HAS_TO_BE_SAVED'));
              setTimeout(function() {
                _this.bidoFmdDTO.statusState =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                    'AWPropertiesConstants'
                  ].FMD_STATUS_OPEN_KEY;
              }, FmdEventFormComponent_1.TIMEOUT_LIMIT);
              return;
            }
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_DRAFT_PLUS_KEY === previousStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_DRAFT_KEY !== currentStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_OPEN_KEY !== currentStatus
            ) {
              // The drop-down list is automatically repositioned to the DRAFT + value
              this.messageService.showWarningMessage(this.getTranslateKey('MSG_WARNING_STATUS_EVOLUTION'));
              setTimeout(function() {
                _this.bidoFmdDTO.statusState =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                    'AWPropertiesConstants'
                  ].FMD_STATUS_DRAFT_PLUS_KEY;
              }, FmdEventFormComponent_1.TIMEOUT_LIMIT);
              return;
            }
            // DRAFT + -> DRAFT or DRAFT + -> OPEN Status Requirements
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_DRAFT_PLUS_KEY === previousStatus &&
              (_shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_DRAFT_KEY === currentStatus ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_OPEN_KEY === currentStatus)
            ) {
              // The current status becomes the precedent for the next selection
              this.prevState = this.bidoFmdDTO.statusState;
            }
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_OPEN_KEY === previousStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_REFUSED_KEY !== currentStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_RECOMMENDED_KEY !== currentStatus
            ) {
              // The drop-down list is automatically repositioned to the OPEN value
              this.messageService.showWarningMessage(this.getTranslateKey('MSG_WARNING_STATUS_EVOLUTION'));
              setTimeout(function() {
                _this.bidoFmdDTO.statusState =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                    'AWPropertiesConstants'
                  ].FMD_STATUS_OPEN_KEY;
              }, FmdEventFormComponent_1.TIMEOUT_LIMIT);
              return;
            }
            // Conditions on the transition from the status of OPEN -> REFUSED or OPEN -> RECOMMENDED CLOSED
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_OPEN_KEY === previousStatus &&
              (_shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_REFUSED_KEY === currentStatus ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_RECOMMENDED_KEY === currentStatus)
            ) {
              // Initialization of the Reason field each time one goes to the "Refused" status
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_REFUSED_KEY === currentStatus
              ) {
                this.bidoFmdDTO.refusalReason = undefined;
              }
              // The current status becomes the precedent for the next selection
              this.prevState = this.bidoFmdDTO.statusState;
            }
            // Different evolution of REFUSED -> DRAFT +
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_REFUSED_KEY === previousStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_DRAFT_PLUS_KEY !== currentStatus
            ) {
              // The drop-down list is automatically repositioned to the value REFUSED
              this.messageService.showWarningMessage(this.getTranslateKey('MSG_WARNING_STATUS_EVOLUTION'));
              setTimeout(function() {
                _this.bidoFmdDTO.statusState =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                    'AWPropertiesConstants'
                  ].FMD_STATUS_REFUSED_KEY;
              }, FmdEventFormComponent_1.TIMEOUT_LIMIT);
              return;
            }
            // Conditions on changing the status of REFUSED -> DRAFT +
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_REFUSED_KEY === previousStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_DRAFT_PLUS_KEY === currentStatus
            ) {
              // The current status becomes the precedent for the next selection
              this.prevState = this.bidoFmdDTO.statusState;
            }
            // Different Evolution of RECOMMENDED CLOSED -> CLOSED or RECOMMENDED CLOSED -> OPEN
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_RECOMMENDED_KEY === previousStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_CLOSED_KEY !== currentStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_OPEN_KEY !== currentStatus
            ) {
              // The drop-down list is automatically repositioned to the value RECOMMENDED CLOSED
              this.messageService.showWarningMessage(this.getTranslateKey('MSG_WARNING_STATUS_EVOLUTION'));
              setTimeout(function() {
                _this.bidoFmdDTO.statusState =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                    'AWPropertiesConstants'
                  ].FMD_STATUS_RECOMMENDED_KEY;
              }, FmdEventFormComponent_1.TIMEOUT_LIMIT);
              return;
            }
            // Evolution de RECOMMENDED CLOSED -> CLOSED
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_RECOMMENDED_KEY === previousStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_CLOSED_KEY === currentStatus
            ) {
              // for rights
              if (!this.hasUpdateFMDRights) {
                this.messageService.showWarningMessage(this.getTranslateKey('MSG_WARNING_STATUS_EVOLUTION_RIGHT'));
                setTimeout(function() {
                  _this.bidoFmdDTO.statusState =
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                      'AWPropertiesConstants'
                    ].FMD_STATUS_RECOMMENDED_KEY;
                }, FmdEventFormComponent_1.TIMEOUT_LIMIT);
                return;
              } else {
                var invFindings = void 0;
                if (!!this.bidoFmdDTO.investigationFindings) {
                  invFindings = this.bidoFmdDTO.investigationFindings;
                } else if (!!this.eventFmdData.investigationFindings) {
                  invFindings = this.eventFmdData.investigationFindings;
                }
                if (
                  !this.bidoFmdDTO.closeoutReason ||
                  !this.bidoFmdDTO.closureDate ||
                  !this.bidoFmdDTO.correctiveAction ||
                  !invFindings
                ) {
                  this.messageService.showWarningMessage(
                    this.getTranslateKey('MSG_WARNING_FMD_CLOSEOUT_MANDATORY_FIELDS')
                  );
                  setTimeout(function() {
                    _this.bidoFmdDTO.statusState = _this.prevState;
                  }, FmdEventFormComponent_1.TIMEOUT_LIMIT);
                  return;
                } else if (
                  !!this.bidoFmdDTO.closureDate &&
                  this.endAfterStart(this.bidoFmdDTO.closureDate, new Date())
                ) {
                  this.messageService.showWarningMessage(
                    this.getTranslateKey('MSG_WARNING_FMD_CLOSURE_DATE_IN_THE_FUTURE')
                  );
                  setTimeout(function() {
                    _this.bidoFmdDTO.statusState = _this.prevState;
                  }, FmdEventFormComponent_1.TIMEOUT_LIMIT);
                  return;
                } else {
                  this.prevState = this.bidoFmdDTO.statusState;
                }
              }
            }
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_RECOMMENDED_KEY === previousStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_OPEN_KEY === currentStatus
            ) {
              // Le statut actuel devient le précédent pour la prochaine sélection
              this.prevState = this.bidoFmdDTO.statusState;
            }
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_CLOSED_KEY === previousStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_OPEN_KEY !== currentStatus
            ) {
              // La liste déroulante est automatiquement repositionnée sur la valeur CLOSED
              this.messageService.showWarningMessage(this.getTranslateKey('MSG_WARNING_STATUS_EVOLUTION'));
              setTimeout(function() {
                _this.bidoFmdDTO.statusState =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                    'AWPropertiesConstants'
                  ].FMD_STATUS_CLOSED_KEY;
              }, FmdEventFormComponent_1.TIMEOUT_LIMIT);
              return;
            }
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_CLOSED_KEY === previousStatus &&
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_OPEN_KEY === currentStatus
            ) {
              if (!this.hasUpdateFMDRights) {
                this.messageService.showWarningMessage(this.getTranslateKey('MSG_WARNING_STATUS_EVOLUTION_RIGHT'));
                setTimeout(function() {
                  _this.bidoFmdDTO.statusState =
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__[
                      'AWPropertiesConstants'
                    ].FMD_STATUS_CLOSED_KEY;
                }, FmdEventFormComponent_1.TIMEOUT_LIMIT);
                return;
              } else {
                this.prevState = this.bidoFmdDTO.statusState;
              }
            }
            this.isStatusClosed =
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_CLOSED_KEY === currentStatus
                ? true
                : false;
          };
          FmdEventFormComponent.prototype.endAfterStart = function(start, end) {
            return start.getTime() >= end.getTime();
          };
          /********************************
           * SAVE OPERATIONS
           ********************************/
          FmdEventFormComponent.prototype.saveFMDEvent = function() {
            var _this = this;
            if (
              this.bidoFmdDTO.statusState ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_DRAFT_PLUS_KEY ||
              this.bidoFmdDTO.statusState ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_OPEN_KEY
            ) {
              this.setReferenceNumberWithInputField();
            }
            this.bidoFmdDTO.notificationCode = this.bidoNotificationDTO.notificationCode;
            // update bidoFmdDTO in case fmd data columns have been edited
            if (this.getFDMIsFDE) {
              this.bidoFmdDTO.operatorName = this.aircraftInfoData[0].fmdData;
              this.bidoFmdDTO.aircraftSerialNumber = this.aircraftInfoData[2].fmdData;
            }
            if (!this.isInitialFindingsFmdReadOnly()) {
              this.bidoFmdDTO.eventNarrative = this.initialFindingsData[0].fmdData;
              this.bidoFmdDTO.initialFinding = this.initialFindingsData[1].fmdData;
              this.bidoFmdDTO.investigationFindings = this.closeoutInformationData[2].fmdData;
            }
            // generate input for saving documents
            var saveDocsInput = [];
            this.documentsAdded.forEach(function(doc) {
              var document = {
                docName: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_22__['StringUtils'].orEmpty(doc.docName),
                docDescription: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_22__['StringUtils'].orEmpty(
                  doc.docDescription
                ),
                publicationDate: doc.docPublicationDate,
                docCategory: doc.docCategory,
                bidoDocumentationDTO: doc
              };
              document.bidoDocumentationDTO.notificationCode = _this.bidoNotificationDTO.notificationCode;
              document.bidoDocumentationDTO.fmdId = _this.bidoFmdDTO.fmdId;
              document.bidoDocumentationDTO.bidNotificationCode = _this.bidoNotificationDTO.notificationCode;
              document.isUpdate = false;
              saveDocsInput.push(document);
            });
            this.documentsUpdated.forEach(function(doc) {
              var document = {
                docName: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_22__['StringUtils'].orEmpty(doc.docName),
                docDescription: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_22__['StringUtils'].orEmpty(
                  doc.docDescription
                ),
                publicationDate: doc.docPublicationDate,
                docCategory: doc.docCategory,
                bidoDocumentationDTO: doc
              };
              document.bidoDocumentationDTO.notificationCode = _this.bidoNotificationDTO.notificationCode;
              document.bidoDocumentationDTO.fmdId = _this.bidoFmdDTO.fmdId;
              document.bidoDocumentationDTO.bidNotificationCode = _this.bidoNotificationDTO.notificationCode;
              document.isUpdate = true;
              saveDocsInput.push(document);
            });
            // generate input for deleting documents
            var deleteDocsInput = [];
            this.documentsRemoved.forEach(function(doc) {
              deleteDocsInput.push({
                docCode: _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_22__['StringUtils'].orEmpty(doc.docCode)
              });
            });
            this.bidoFmdDTO.editionNumber = !!this.bidoFmdDTO.editionNumber ? this.bidoFmdDTO.editionNumber : 0;
            // observables for saving the whole screen
            var saveFMDData = this.eventCreateService.saveFMDEvent(this.bidoFmdDTO);
            var saveDocumentTable = this.eventCreateService.updateFieldsOfBidoDocumentationFMD(saveDocsInput);
            var deleteDocuments = this.eventCreateService.removeBidoDocumentationFMD(deleteDocsInput);
            this.showSaveSpinner = true;
            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__['forkJoin'])([
              saveFMDData,
              saveDocumentTable,
              deleteDocuments
            ]).subscribe(
              function() {
                _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnSaveEvent'));
                _this.updateOpenMode(
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Write
                );
                _this.reloadFMDEvent();
                _this.showSaveSpinner = false;
              },
              function(error) {
                _this.messageService.showErrorMessage(error.error.errorDesc);
                _this.showSaveSpinner = false;
              }
            );
          };
          /**********************
           * INITIAL FINDINGS TAB
           *********************/
          FmdEventFormComponent.prototype.loadInitialFindingsTab = function() {
            var _this = this;
            this.initialFindingsData = this.createTableStructure(this.INITIAL_FINDINGS_TABLE_INFO_ARR);
            this.initialFindingsData.forEach(function(row) {
              switch (row.info) {
                case _this.INITIAL_FINDINGS_TABLE_INFO_ARR[0]:
                  {
                    row.engineData = _this.eventFmdData.eventNarrative;
                    row.fmdData = _this.bidoFmdDTO.eventNarrative;
                    row.control = _this.getControlFieldData(
                      _this.eventFmdData.eventNarrative,
                      _this.bidoFmdDTO.eventNarrative
                    );
                  }
                  break;
                case _this.INITIAL_FINDINGS_TABLE_INFO_ARR[1]:
                  {
                    row.engineData = _this.eventFmdData.initialFinding;
                    row.fmdData = _this.bidoFmdDTO.initialFinding;
                    row.control = _this.getControlFieldData(
                      _this.eventFmdData.initialFinding,
                      _this.bidoFmdDTO.initialFinding
                    );
                  }
                  break;
                default:
                  break;
              }
            });
          };
          FmdEventFormComponent.prototype.isInitialFindingsFmdReadOnly = function() {
            if (!!this.bidoFmdDTO.statusState) {
              if (!!this.bidoFmdDTO.editionNumber && this.bidoFmdDTO.editionNumber !== 1) {
                return true;
              }
              if (
                this.bidoFmdDTO.statusState ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_CLOSED_KEY
              ) {
                return true;
              }
            }
            return !this.hasUpdateFMDRights;
          };
          /**************************
           * IS Refusal reason Visible
           *************************/
          FmdEventFormComponent.prototype.getIsRefusalReasonReadOnly = function() {
            if (!!this.bidoFmdDTO.statusState) {
              if (!!this.bidoFmdDTO.editionNumber && this.editionNumberMap.length > 0) {
                if (this.bidoFmdDTO.editionNumber !== this.editionNumberMap.length) {
                  return true;
                }
              }
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_RECOMMENDED_KEY === this.bidoFmdDTO.statusState ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_CLOSED_KEY === this.bidoFmdDTO.statusState
              ) {
                return true;
              } else if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_DRAFT_KEY === this.bidoFmdDTO.statusState ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_DRAFT_PLUS_KEY === this.bidoFmdDTO.statusState ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_OPEN_KEY === this.bidoFmdDTO.statusState ||
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_REFUSED_KEY === this.bidoFmdDTO.statusState
              ) {
                return this.getIsFieldReadOnly();
              }
            }
            return !this.hasUpdateFMDRights;
          };
          FmdEventFormComponent.prototype.getRefusalReasonVisibility = function() {
            if (!!this.bidoFmdDTO.statusState) {
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_REFUSED_KEY === this.bidoFmdDTO.statusState
              ) {
                return true;
              }
            }
            return false;
          };
          /**************************
           * Is field readonly
           *************************/
          FmdEventFormComponent.prototype.getIsFieldReadOnly = function() {
            var currentStatus = this.bidoFmdDTO.statusState;
            return (
              !this.hasUpdateFMDRights ||
              (_shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_CLOSED_KEY === this.prevState &&
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_OPEN_KEY !== currentStatus)
            );
          };
          /**************************
           * Is Closure date readonly
           *************************/
          FmdEventFormComponent.prototype.getIsClosureDateReadOnly = function() {
            if (!!this.bidoFmdDTO.statusState) {
              if (!!this.bidoFmdDTO.editionNumber && this.editionNumberMap.length > 0) {
                if (this.bidoFmdDTO.editionNumber !== this.editionNumberMap.length) {
                  return true;
                }
              }
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_CLOSED_KEY === this.bidoFmdDTO.statusState
              ) {
                return true;
              }
            }
            return !this.hasUpdateFMDRights;
          };
          /**************************
           * Is FMD status readonly
           *************************/
          FmdEventFormComponent.prototype.getIsFmdStatusReadOnly = function() {
            if (!!this.bidoFmdDTO.statusState) {
              if (!!this.bidoFmdDTO.editionNumber && this.editionNumberMap.length > 0) {
                if (this.bidoFmdDTO.editionNumber !== this.editionNumberMap.length) {
                  return true;
                }
              }
            }
            return !this.hasUpdateFMDRights;
          };
          /**************************
           * Update form visiblity
           *************************/
          FmdEventFormComponent.prototype.getUpdateFormVisibility = function() {
            if (this.getIsFMDFieldReadOnly()) {
              return false;
            }
            return true;
          };
          /**************************
           * CLOSEOUT INFORMATION TAB
           *************************/
          FmdEventFormComponent.prototype.loadCloseoutInformationTab = function() {
            var _this = this;
            this.closeoutInformationData = this.createTableStructure(this.CLOSEOUT_INFORMATION_TABLE_INFO_ARR);
            this.closeoutInformationData.forEach(function(row) {
              switch (row.info) {
                case _this.CLOSEOUT_INFORMATION_TABLE_INFO_ARR[0]:
                  {
                    row.engineData = _this.eventFmdData.pn;
                    row.fmdData = _this.bidoFmdDTO.pn;
                    row.control = _this.getControlFieldData(_this.eventFmdData.pn, _this.bidoFmdDTO.pn);
                  }
                  break;
                case _this.CLOSEOUT_INFORMATION_TABLE_INFO_ARR[1]:
                  {
                    row.engineData = _this.eventFmdData.pnDesignation;
                    row.fmdData = _this.bidoFmdDTO.pnDesignation;
                    row.control = _this.getControlFieldData(
                      _this.eventFmdData.pnDesignation,
                      _this.bidoFmdDTO.pnDesignation
                    );
                  }
                  break;
                case _this.CLOSEOUT_INFORMATION_TABLE_INFO_ARR[2]:
                  {
                    row.engineData = _this.eventFmdData.investigationFindings;
                    row.fmdData = _this.bidoFmdDTO.investigationFindings;
                    row.control = _this.getControlFieldData(
                      _this.eventFmdData.investigationFindings,
                      _this.bidoFmdDTO.investigationFindings
                    );
                  }
                  break;
                default:
                  break;
              }
            });
          };
          /***************
           * DOCUMENTS TAB
           **************/
          FmdEventFormComponent.prototype.loadDocuments = function() {
            var _this = this;
            var input = {
              notificationCode: this.bidoNotificationDTO.notificationCode,
              fmdId: this.bidoFmdDTO.fmdId
            };
            this.eventCreateService
              .findBidoDocumentationsByMandantAndNotificationCodeAndFmdId(input)
              .subscribe(function(results) {
                _this.documents = [];
                _this.documents = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_21__['ListUtils']
                  .orEmpty(results)
                  .filter(function(document) {
                    return !!document.docName;
                  });
                _this.documentTable = _this.documents.map(function(document) {
                  return _this.createDocumentRow(document);
                });
              });
          };
          FmdEventFormComponent.prototype.downloadFiles = function() {
            this.selectedDocuments.forEach(function(documentRow) {
              _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_20__['FileUtils'].downloadFile(
                documentRow._obj.docFile,
                documentRow._obj.docName
              );
            });
          };
          FmdEventFormComponent.prototype.deleteDocuments = function() {
            var _this = this;
            var partialMessageKey =
              this.selectedDocuments.length > 1 ? 'confirmDeleteSelectedDocuments' : 'confirmDeleteSelectedDocument';
            this.confirmationService.confirmDelete({
              messageKey: this.getTranslateKey(partialMessageKey),
              accept: function() {
                _this.selectedDocuments.forEach(function(selectedDocumentRow) {
                  var documentsAddedWithoutSelection = _this.documentsAdded.filter(function(document) {
                    return document.docName !== selectedDocumentRow._obj.docName;
                  });
                  // list of added objects contains the selection
                  if (_this.documentsAdded.length !== documentsAddedWithoutSelection.length) {
                    // Remove selection from added objects
                    _this.documentsAdded = documentsAddedWithoutSelection;
                  } else {
                    var documentsUpdatedWithoutSelection = _this.documentsUpdated.filter(function(document) {
                      return document.docName !== selectedDocumentRow._obj.docName;
                    });
                    // list of updated objects contains the selection
                    if (_this.documentsUpdated.length !== documentsUpdatedWithoutSelection.length) {
                      // Remove selection from added objects
                      _this.documentsUpdated = documentsUpdatedWithoutSelection;
                    }
                    _this.documentsRemoved = __spread(_this.documentsRemoved, [selectedDocumentRow._obj]);
                  }
                });
                _this.documents = _this.documents.filter(function(document) {
                  return !_this.selectedDocuments.some(function(selectedDocumentRow) {
                    return _this.areSameDocument(document, selectedDocumentRow._obj);
                  });
                });
                _this.documentTable = _this.documentTable.filter(function(documentRow) {
                  return !_this.selectedDocuments.some(function(selectedDocumentRow) {
                    return _this.areSameDocument(documentRow._obj, selectedDocumentRow._obj);
                  });
                });
                _this.selectedDocuments = [];
              }
            });
          };
          FmdEventFormComponent.prototype.editDocument = function() {
            var _this = this;
            if (this.selectedDocuments.length === 1) {
              this.currentDocumentIndex = this.documents.findIndex(function(document) {
                return _this.areSameDocument(document, _this.selectedDocuments[0]._obj);
              });
              this.currentDocument = __assign({}, this.selectedDocuments[0]._obj);
              this.documentDialogOpenMode =
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Write;
              this.showDocumentDialog = true;
            }
          };
          FmdEventFormComponent.prototype.openDocument = function() {
            if (this.selectedDocuments.length === 1) {
              this.currentDocument = this.selectedDocuments[0]._obj;
              this.currentDocumentIndex = -1;
              this.documentDialogOpenMode =
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read;
              this.showDocumentDialog = true;
            }
          };
          FmdEventFormComponent.prototype.openDocumentsTab = function() {
            // this.currentTabId = this.tabDocumentsId;
          };
          FmdEventFormComponent.prototype.uploadDocument = function(event, fileUploader) {
            var _this = this;
            if (!!event.files) {
              var file_1 = event.files[0];
              // Check if the file already exists
              var fileExists = this.documents.some(function(document) {
                return document.docName === file_1.name;
              });
              if (fileExists) {
                this.messageService.showWarningMessage('global.warningOnFileExists');
              } else {
                _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_20__['FileUtils'].getFileContentAsBase64(
                  file_1,
                  function(fileContent) {
                    if (!!fileContent) {
                      var document_1 = {
                        docFile: fileContent,
                        docName: file_1.name,
                        docPublicationDate: new Date()
                      };
                      _this.documents = __spread(_this.documents, [document_1]);
                      _this.documentsAdded = __spread(_this.documentsAdded, [document_1]);
                      _this.documentTable = __spread(_this.documentTable, [_this.createDocumentRow(document_1)]);
                    }
                  }
                );
              }
              fileUploader.clear();
            }
          };
          FmdEventFormComponent.prototype.onAddDocument = function(document) {
            var _this = this;
            if (!!document) {
              if (this.currentDocumentIndex !== -1) {
                // edit case
                this.documents[this.currentDocumentIndex] = document;
                this.documentTable[this.currentDocumentIndex] = this.createDocumentRow(document);
                var editedRowInAddedList = this.documentsAdded.some(function(doc) {
                  return _this.areSameDocument(doc, document);
                });
                var editedRowInUpdatedList = this.documentsUpdated.some(function(doc) {
                  return _this.areSameDocument(doc, document);
                });
                if (editedRowInAddedList) {
                  var indexInAddedList = this.documentsAdded.findIndex(function(doc) {
                    return _this.areSameDocument(doc, document);
                  });
                  this.documentsAdded[indexInAddedList] = document;
                } else if (editedRowInUpdatedList) {
                  var indexInUpdatedList = this.documentsUpdated.findIndex(function(doc) {
                    return _this.areSameDocument(doc, document);
                  });
                  this.documentsUpdated[indexInUpdatedList] = document;
                } else {
                  this.documentsUpdated.push(document);
                }
              }
            }
            this.selectedDocuments = [];
          };
          FmdEventFormComponent.prototype.areSameDocument = function(obj1, obj2) {
            if (!obj1 || !obj2) {
              return false;
            } else {
              return !!obj1.docName && !!obj2.docName && obj1.docName === obj2.docName;
            }
          };
          FmdEventFormComponent.prototype.createDocumentRow = function(document) {
            var selectedDocumentType = this.documentTypes.find(function(documentType) {
              return !!document.docCategory && documentType.value === document.docCategory;
            });
            var documentRow = {
              docExtension: this.formatDocExtension(document),
              docName: document.docName,
              docPublicationDate: this.dateService.dateToString(document.docPublicationDate),
              docSize: this.formatDocSize(document),
              docType: !!selectedDocumentType
                ? _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_22__['StringUtils'].orEmpty(
                    selectedDocumentType.label
                  )
                : '',
              _obj: document
            };
            return documentRow;
          };
          FmdEventFormComponent.prototype.formatDocExtension = function(document) {
            return _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_20__['FileUtils']
              .getExtension(document.docName)
              .toUpperCase();
          };
          FmdEventFormComponent.prototype.formatDocSize = function(document) {
            return !!document.docFile
              ? _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_20__['FileUtils'].getFormattedSize(
                  document.docFile.length
                )
              : '';
          };
          /*****************
           * Edit XLS Format
           ****************/
          FmdEventFormComponent.prototype.editXlsFormat = function() {
            var _this = this;
            this.confirmationService.confirm({
              messageKey: this.getTranslateKey('downloadFMDReport'),
              accept: function() {
                if (!!_this.bidoNotificationDTO.notificationCode) {
                  _this.eventCreateService.getFmdReport(_this.bidoNotificationDTO.notificationCode).subscribe(
                    function(result) {
                      var date = new Date();
                      if (_this.getFDMIsFDE) {
                        _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_20__['FileUtils'].downloadFile(
                          result,
                          'FMD_FDE_' +
                            _this.bidoNotificationDTO.familyVariantCode +
                            '_' +
                            date.getMilliseconds() +
                            '.xls'
                        );
                      } else {
                        _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_20__['FileUtils'].downloadFile(
                          result,
                          'FMD_' + _this.bidoNotificationDTO.familyVariantCode + '_' + date.getMilliseconds() + '.xls'
                        );
                      }
                    },
                    function(error) {
                      _this.messageService.showRawErrorMessage(error.error.errorDesc);
                    }
                  );
                }
              }
            });
          };
          /****************
           * Export FMD E5X
           ***************/
          FmdEventFormComponent.prototype.hasManageRights = function() {
            var _this = this;
            this.eventCreateService.hasManageRights().subscribe(function(result) {
              _this.hasUpdateFMDRights = result;
            });
          };
          FmdEventFormComponent.prototype.exportFmdE5X = function() {
            var _this = this;
            var input = {
              fmdId: this.bidoFmdDTO.fmdId,
              notificationCode: this.bidoFmdDTO.notificationCode
            };
            this.showExportFMDE5xSpinner = true;
            this.eventCreateService
              .generateE5XFileFromFMD(input)
              .pipe(
                Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['finalize'])(function() {
                  _this.showExportFMDE5xSpinner = false;
                })
              )
              .subscribe(function(result) {
                _shared_utils_file_utils__WEBPACK_IMPORTED_MODULE_20__['FileUtils'].downloadFile(
                  result.fileContent,
                  result.fileName
                );
              });
          };
          FmdEventFormComponent.prototype.exportFmdE5XEnabled = function() {
            var response;
            response =
              !!this.databaseFmdDto &&
              (this.databaseFmdDto.statusState ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_OPEN_KEY ||
                this.databaseFmdDto.statusState ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FMD_STATUS_RECOMMENDED_KEY ||
                this.databaseFmdDto.statusState ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                    .FMD_STATUS_CLOSED_KEY)
                ? true
                : false;
            return response;
          };
          /****************
           * Reference
           ****************/
          FmdEventFormComponent.prototype.getReferenceSplitVisibility = function() {
            if (
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                .FMD_STATUS_DRAFT_KEY !== this.bidoFmdDTO.statusState &&
              (!!this.referenceFMDYear ||
                !!this.referenceFDEYear ||
                !!this.referenceFMDNumber ||
                !!this.referenceFDENumber)
            ) {
              // wdContext.currentContextElement().setReferenceSplitState(WDState.REQUIRED);
              var editionNumber = !!this.bidoFmdDTO.editionNumber ? this.bidoFmdDTO.editionNumber : 1;
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_DRAFT_PLUS_KEY === this.bidoFmdDTO.statusState ||
                (_shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_OPEN_KEY === this.bidoFmdDTO.statusState &&
                  editionNumber === 1)
              ) {
                this.referenceSplitVisibility = this.getIsFMDFieldReadOnly();
              } else {
                this.referenceSplitVisibility = true;
              }
              this.referenceSplitFDEVisibility = this.getFDM_FDEVisibility();
              this.referenceSplitFMDVisibility = this.getFDM_FMDVisibility();
              return true;
            } else {
              this.referenceSplitVisibility = true;
              this.referenceSplitFDEVisibility = false;
              this.referenceSplitFMDVisibility = false;
              return false;
            }
          };
          FmdEventFormComponent.prototype.getFDM_FDEVisibility = function() {
            if (this.getFDMIsFDE) {
              return true;
            }
            return false;
          };
          FmdEventFormComponent.prototype.getFDM_FMDVisibility = function() {
            if (this.getFDMIsFDE) {
              return false;
            }
            return true;
          };
          FmdEventFormComponent.prototype.getIsFMDFieldReadOnly = function() {
            if (!!this.bidoFmdDTO.statusState) {
              if (this.editionNumberMap.length > 0 && !!this.bidoFmdDTO.editionNumber) {
                if (this.bidoFmdDTO.editionNumber !== this.editionNumberMap.length) {
                  return true;
                }
              }
              if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_6__['AWPropertiesConstants']
                  .FMD_STATUS_CLOSED_KEY === this.bidoFmdDTO.statusState
              ) {
                return true;
              }
            }
            return !this.hasUpdateFMDRights;
          };
          FmdEventFormComponent.prototype.getUpdateFDEReferenceVisibility = function() {
            if (this.getFDMIsFDE) {
              if (
                !this.getIsFMDFieldReadOnly() &&
                this.getReferenceSplitVisibility() &&
                this.referenceSplitVisibility
              ) {
                return true;
              }
            }
            return false;
          };
          FmdEventFormComponent.prototype.updateFDEReferenceVisibility = function() {
            var fMDReferenceOutputDTO = {
              reference: this.reference,
              referenceFDELetter: this.referenceFDELetter,
              referenceFDENumber: this.referenceFDENumber,
              referenceFDEYear: this.referenceFDEYear
            };
            this.updateFDERefData = fMDReferenceOutputDTO;
            this.updateFDERefDialogVisibility = true;
          };
          FmdEventFormComponent.prototype.onUpdateFDERef = function(ev) {
            this.referenceFDELetter = ev.referenceFDELetter;
            this.referenceFDENumber = ev.referenceFDENumber;
            this.referenceFDEYear = ev.referenceFDEYear;
          };
          // Helper method
          FmdEventFormComponent.prototype.getTranslatedText = function(key) {
            var response = '';
            this.translateService.get(this.getComponentName() + '.' + key).subscribe(function(result) {
              response = result;
            });
            return response;
          };
          FmdEventFormComponent.prototype.getDocumentTypes = function() {
            var _this = this;
            this.propertiesService.getValue('getDocEventCategoryMap').subscribe(function(results) {
              results.forEach(function(res) {
                var selectItem = {
                  label: res.label,
                  value: res.value
                };
                _this.documentTypes.push(selectItem);
              });
            });
          };
          // Open Event UC
          FmdEventFormComponent.prototype.openEventAsset = function(code) {
            var _this = this;
            var bidoNotificationDTOId = {
              notificationCode: code
            };
            this.eventCreateService.findBidoNotification(bidoNotificationDTOId).subscribe(function(res) {
              if (!!res) {
                var bidoNotificationDTO = {
                  bidoNotificationTypeDTO: {
                    typeCode: res.typeCode
                  },
                  notificationCode: res.notificationCode,
                  typeCode: res.typeCode
                };
                if (!!res.bidoNotificationTypeDTO && res.bidoNotificationTypeDTO.typeCategory === '5-def') {
                  _this.openDefect(bidoNotificationDTO.notificationCode);
                } else {
                  _this.openEventUC(
                    bidoNotificationDTO,
                    _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read
                  );
                }
              }
            });
          };
          FmdEventFormComponent.prototype.openDefect = function(objectId) {
            if (!!objectId) {
              var data = {
                id: this.tabService.generateId(),
                componentId:
                  _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_7__['ComponentConstants']
                    .FLE_DEFECT_FORM,
                openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read
              };
              var defectId = {
                notificationCode: objectId
              };
              data.objectId = this.serializationService.serialize(defectId);
              var labelKey = 'transaction.' + data.componentId;
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          FmdEventFormComponent.prototype.openEventUC = function(objectId, openMode) {
            var data = {
              id: this.tabService.generateId(),
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_7__['ComponentConstants']
                  .FLE_EVENT_CREATE,
              openMode: openMode
            };
            if (!!objectId) {
              var eventId = {
                notificationCode: objectId.notificationCode
              };
              data.objectId = this.serializationService.serialize(eventId);
              // data.objectId = this.serializationService.serialize(objectId);
            }
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          FmdEventFormComponent.prototype.setReferenceNumberWithInputField = function() {
            if (!!this.bidoFmdDTO.reference) {
              if (this.referenceSplitFMDVisibility) {
                if (!!this.referenceFMDNumber) {
                  var referenceWithoutNumber = this.bidoFmdDTO.reference.substr(
                    0,
                    this.bidoFmdDTO.reference.lastIndexOf('-') + 1
                  );
                  this.bidoFmdDTO.reference = referenceWithoutNumber + this.referenceFMDNumber;
                }
              } else {
                if (!!this.referenceFDENumber) {
                  var referenceWithoutNumber = this.bidoFmdDTO.reference.substr(
                    0,
                    this.bidoFmdDTO.reference.lastIndexOf('-') + 1
                  );
                  this.bidoFmdDTO.reference = referenceWithoutNumber + this.referenceFDENumber;
                }
              }
            }
          };
          FmdEventFormComponent.prototype.showStatus = function() {
            var _this = this;
            var overlayRef = this._overlayService.openWithPositionCenter({
              content: _object_status_object_status_component__WEBPACK_IMPORTED_MODULE_23__['ObjectStatusComponent'],
              data: {
                currentAuthor: this.bidoFmdDTO.statusUser,
                currentDate: this.bidoFmdDTO.statusDate,
                currentStatus: {
                  label: this._formatSelectOption.transform(this.bidoFmdDTO.statusState, this.fmdStatusMap),
                  value: this.bidoFmdDTO.statusState
                },
                nextStatuses: this.fmdStatusMap
              }
            });
            overlayRef.afterClosed$.subscribe({
              next: function(event) {
                if (event.data) {
                  _this.bidoFmdDTO.statusState = event.data;
                  _this.saveFMDEvent();
                }
              }
            });
          };
          var FmdEventFormComponent_1;
          FmdEventFormComponent.TIMEOUT_LIMIT = 400;
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('mainAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FmdEventFormComponent.prototype,
            'mainAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('reportInfoAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FmdEventFormComponent.prototype,
            'reportInfoAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('engineInfoAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FmdEventFormComponent.prototype,
            'engineInfoAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('aircraftInfoAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FmdEventFormComponent.prototype,
            'aircraftInfoAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('eventInfoAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FmdEventFormComponent.prototype,
            'eventInfoAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('initialFindingsAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FmdEventFormComponent.prototype,
            'initialFindingsAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('investigationFindingAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FmdEventFormComponent.prototype,
            'investigationFindingAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('correctiveActionAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FmdEventFormComponent.prototype,
            'correctiveActionAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('riskAnalysisAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FmdEventFormComponent.prototype,
            'riskAnalysisAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('closeoutInformationAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FmdEventFormComponent.prototype,
            'closeoutInformationAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('documentsAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FmdEventFormComponent.prototype,
            'documentsAnchor',
            void 0
          );
          FmdEventFormComponent = FmdEventFormComponent_1 = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-fmd-event-form',
                template: __webpack_require__(
                  /*! ./fmd-event-form.component.html */ './src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/fmd-event-form.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./fmd-event-form.component.scss */ './src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/fmd-event-form.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_12__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_13__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_14__['MessageService'],
                _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_5__['PageTocService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_16__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_18__['TabService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_17__['SessionService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_15__['PropertiesService'],
                _event_create_event_create_service__WEBPACK_IMPORTED_MODULE_25__['EventCreateService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService'],
                _shared_services_date_service__WEBPACK_IMPORTED_MODULE_11__['DateService'],
                _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_10__['ConfirmationService'],
                _overlay_overlay_service__WEBPACK_IMPORTED_MODULE_24__['OverlayService'],
                _shared_pipes_format_select_option_pipe__WEBPACK_IMPORTED_MODULE_9__['FormatSelectOptionPipe']
              ])
            ],
            FmdEventFormComponent
          );
          return FmdEventFormComponent;
        })(_shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_19__['FormPageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-copy-search/fleet-data-copy-search.component.html':
      /*!****************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-copy-search/fleet-data-copy-search.component.html ***!
  \****************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div class="page-subtitle">- {{ "page.searchPage" | translate }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-actions">\r\n    <button\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show all actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n    <mat-menu #actions="matMenu">\r\n      <button mat-menu-item (click)="updateFavoriteState()">\r\n        {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <aw-fleet-data-form\r\n        (searchLaunched)="searchLaunched($event)"\r\n        (selectedTypeUpdated)="selectedTypeUpdated($event)"\r\n        (resultsTableAircraftUpdated)="resultsTableAircraftUpdated($event)"\r\n        (resultsTableEngineUpdated)="resultsTableEngineUpdated($event)"\r\n        (resultsTableEquipmentUpdated)="resultsTableEquipmentUpdated($event)"\r\n      ></aw-fleet-data-form>\r\n\r\n      <div class="grid-row">\r\n        <div class="grid-cell--12">\r\n          <div #resultsContainerAnchor class="grid-cell grid-cell--container">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 *ngIf="selectedType === \'aircraft\'" class="grid-cell-title">\r\n                  {{ "global.results" | translate }} ({{\r\n                    resultsTableAircraft.list ? resultsTableAircraft.list.length : 0\r\n                  }}{{ resultsTableAircraft.moreResults ? "+" : "" }})\r\n                </h3>\r\n                <h3 *ngIf="selectedType === \'engine\'" class="grid-cell-title">\r\n                  {{ "global.results" | translate }} ({{ resultsTableEngine.list ? resultsTableEngine.list.length : 0\r\n                  }}{{ resultsTableEngine.moreResults ? "+" : "" }})\r\n                </h3>\r\n                <h3 *ngIf="selectedType === \'equipment\'" class="grid-cell-title">\r\n                  {{ "global.results" | translate }} ({{\r\n                    resultsTableEquipment.list ? resultsTableEquipment.list.length : 0\r\n                  }}{{ resultsTableEquipment.moreResults ? "+" : "" }})\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <p-table\r\n                [resizableColumns]="true"\r\n                *ngIf="selectedType === \'aircraft\'"\r\n                #tableAircraft\r\n                class="aw-table2"\r\n                [columns]="resultsTableCols"\r\n                [value]="resultsTableAircraft.list"\r\n                [(selection)]="selectedAircrafts"\r\n                [scrollable]="true"\r\n              >\r\n                <ng-template pTemplate="emptymessage">\r\n                  <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n                  <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                    <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                    <div class="lds-hourglass"></div>\r\n                  </div>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="caption">\r\n                  <div class="aw-table-header" [ngClass]="{ \'rows-selected\': selectedAircrafts.length > 0 }">\r\n                    <div class="aw-table-global-filter">\r\n                      <label class="aw-table-global-filter-label">\r\n                        <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                      </label>\r\n\r\n                      <input\r\n                        #ptableResultsGlobalFilter\r\n                        class="aw-table-global-filter-input"\r\n                        type="text"\r\n                        placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                        (input)="tableAircraft.filterGlobal($event.target.value, \'contains\')"\r\n                      />\r\n                    </div>\r\n\r\n                    <div class="aw-table-actions">\r\n                      <button\r\n                        *ngIf="selectedAircrafts.length > 0"\r\n                        type="button"\r\n                        mat-raised-button\r\n                        (click)="openSelectedAircrafts()"\r\n                      >\r\n                        {{ componentData.componentId + ".copyData" | translate }}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="colgroup" let-columns>\r\n                  <colgroup>\r\n                    <col class="aw-table-checkbox-wrapper" />\r\n                    <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                  </colgroup>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="header" let-columns>\r\n                  <tr>\r\n                    <th class="aw-table-checkbox-wrapper">\r\n                      <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                      {{ componentData.componentId + "." + col.field | translate }}\r\n                    </th>\r\n                  </tr>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                  <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                    <td class="aw-table-checkbox-wrapper">\r\n                      <p-tableCheckbox class="aw-table-checkbox" [value]="rowData"></p-tableCheckbox>\r\n                    </td>\r\n\r\n                    <td *ngFor="let col of columns" [ngSwitch]="col.field" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                      <span *ngSwitchCase="\'asset\'">\r\n                        <a *ngIf="rowData[\'pnCode\']" (click)="openLinkAircraft(rowData[\'equipmentCode\'])">\r\n                          {{ "P/N " + rowData["pnCode"] }}</a\r\n                        >\r\n                        <a *ngIf="rowData[\'sn\']" (click)="openLinkAircraft(rowData[\'equipmentCode\'])">\r\n                          {{ " | S/N " + rowData["sn"] }}</a\r\n                        >\r\n                      </span>\r\n                      <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n              </p-table>\r\n\r\n              <p-table\r\n                [resizableColumns]="true"\r\n                *ngIf="selectedType === \'engine\'"\r\n                #tableEngine\r\n                class="aw-table2"\r\n                [columns]="resultsTableCols"\r\n                [value]="resultsTableEngine.list"\r\n                [(selection)]="selectedEngines"\r\n                [scrollable]="true"\r\n              >\r\n                <ng-template pTemplate="emptymessage">\r\n                  <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n                  <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                    <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                    <div class="lds-hourglass"></div>\r\n                  </div>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="caption">\r\n                  <div class="aw-table-header" [ngClass]="{ \'rows-selected\': selectedEngines.length > 0 }">\r\n                    <div class="aw-table-global-filter">\r\n                      <label class="aw-table-global-filter-label">\r\n                        <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                      </label>\r\n\r\n                      <input\r\n                        #ptableResultsGlobalFilter\r\n                        class="aw-table-global-filter-input"\r\n                        type="text"\r\n                        placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                        (input)="tableEngine.filterGlobal($event.target.value, \'contains\')"\r\n                      />\r\n                    </div>\r\n\r\n                    <div class="aw-table-actions">\r\n                      <button\r\n                        *ngIf="selectedEngines.length > 0"\r\n                        type="button"\r\n                        mat-raised-button\r\n                        (click)="openSelectedEngines()"\r\n                      >\r\n                        {{ componentData.componentId + ".copyData" | translate }}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="colgroup" let-columns>\r\n                  <colgroup>\r\n                    <col class="aw-table-checkbox-wrapper" />\r\n                    <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                  </colgroup>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="header" let-columns>\r\n                  <tr>\r\n                    <th class="aw-table-checkbox-wrapper">\r\n                      <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                      {{ componentData.componentId + "." + col.field | translate }}\r\n                    </th>\r\n                  </tr>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                  <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                    <td class="aw-table-checkbox-wrapper"><p-tableCheckbox [value]="rowData"></p-tableCheckbox></td>\r\n\r\n                    <td *ngFor="let col of columns" [ngSwitch]="col.field" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                      <span *ngSwitchCase="\'asset\'">\r\n                        <a *ngIf="rowData[\'pnCode\']" (click)="openLinkEngine(rowData[\'equipmentCode\'])">\r\n                          {{ "P/N " + rowData["pnCode"] }}</a\r\n                        >\r\n                        <a *ngIf="rowData[\'sn\']" (click)="openLinkEngine(rowData[\'equipmentCode\'])">\r\n                          {{ " | S/N " + rowData["sn"] }}</a\r\n                        >\r\n                      </span>\r\n                      <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n              </p-table>\r\n\r\n              <p-table\r\n                [resizableColumns]="true"\r\n                *ngIf="selectedType === \'equipment\'"\r\n                #tableEquipment\r\n                class="aw-table2"\r\n                [columns]="resultsTableCols"\r\n                [value]="resultsTableEquipment.list"\r\n                [(selection)]="selectedEquipments"\r\n                [scrollable]="true"\r\n              >\r\n                <ng-template pTemplate="emptymessage">\r\n                  <span *ngIf="!isLoading"> &nbsp;</span>\r\n                  <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                    <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                    <div class="lds-hourglass"></div>\r\n                  </div>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="caption">\r\n                  <div class="aw-table-header" [ngClass]="{ \'rows-selected\': selectedEquipments.length > 0 }">\r\n                    <div class="aw-table-global-filter">\r\n                      <label class="aw-table-global-filter-label">\r\n                        <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                      </label>\r\n\r\n                      <input\r\n                        #ptableResultsGlobalFilter\r\n                        class="aw-table-global-filter-input"\r\n                        type="text"\r\n                        placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                        (input)="tableEquipment.filterGlobal($event.target.value, \'contains\')"\r\n                      />\r\n                    </div>\r\n\r\n                    <div class="aw-table-actions">\r\n                      <button\r\n                        *ngIf="selectedEquipments.length > 0"\r\n                        type="button"\r\n                        mat-raised-button\r\n                        (click)="openSelectedEquipments()"\r\n                      >\r\n                        {{ componentData.componentId + ".copyData" | translate }}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="colgroup" let-columns>\r\n                  <colgroup>\r\n                    <col class="aw-table-checkbox-wrapper" />\r\n                    <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                  </colgroup>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="header" let-columns>\r\n                  <tr>\r\n                    <th class="aw-table-checkbox-wrapper">\r\n                      <p-tableHeaderCheckbox class="aw-table-checkbox"></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                      {{ componentData.componentId + "." + col.field | translate }}\r\n                    </th>\r\n                  </tr>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                  <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                    <td class="aw-table-checkbox-wrapper"><p-tableCheckbox [value]="rowData"></p-tableCheckbox></td>\r\n\r\n                    <td *ngFor="let col of columns" [ngSwitch]="col.field" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                      <span *ngSwitchCase="\'asset\'">\r\n                        <a *ngIf="rowData[\'pnCode\']" (click)="openLinkEquipment(rowData[\'equipmentCode\'])">\r\n                          {{ "P/N " + rowData["pnCode"] }}</a\r\n                        >\r\n                        <a *ngIf="rowData[\'sn\']" (click)="openLinkEquipment(rowData[\'equipmentCode\'])">\r\n                          {{ " | S/N " + rowData["sn"] }}</a\r\n                        >\r\n                      </span>\r\n                      <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\r\n                    </td>\r\n                  </tr>\r\n                </ng-template>\r\n              </p-table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <aw-fleet-data-copy-popup\r\n    *ngIf="showFleetDataCopyPopup"\r\n    [(display)]="showFleetDataCopyPopup"\r\n    [assets]="currentAssets"\r\n  ></aw-fleet-data-copy-popup>\r\n</div>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-copy-search/fleet-data-copy-search.component.ts':
      /*!**************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-copy-search/fleet-data-copy-search.component.ts ***!
  \**************************************************************************************************/
      /*! exports provided: FleetDataCopySearchComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'FleetDataCopySearchComponent',
          function() {
            return FleetDataCopySearchComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_page_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/types/page-component */ './src/app/shared/types/page-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetDataCopySearchComponent = /** @class */ (function(_super) {
          __extends(FleetDataCopySearchComponent, _super);
          function FleetDataCopySearchComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService,
            sessionService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Write,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService
              ) || this;
            _this.sessionService = sessionService;
            _this.attributesMap = new Map();
            _this.resultsTableAircraft = {
              list: [],
              moreResults: false
            };
            _this.resultsTableEngine = {
              list: [],
              moreResults: false
            };
            _this.resultsTableEquipment = {
              list: [],
              moreResults: false
            };
            _this.types = [
              { label: 'Aircraft', value: 'aircraft' },
              { label: 'Engine', value: 'engine' },
              { label: 'Equipment', value: 'equipment' }
            ];
            _this.selectedAircrafts = [];
            _this.selectedEngines = [];
            _this.selectedEquipments = [];
            _this.resultsTableCols = [
              { field: 'asset', alignment: 'left', width: '30%' },
              { field: 'familyVariantCode', alignment: 'left', width: '20%' },
              { field: 'equipmentDesignation', alignment: 'left', width: '35%' },
              { field: 'ownerCustomerCode', alignment: 'left', width: '15%' }
            ];
            _this.init();
            return _this;
          }
          FleetDataCopySearchComponent.prototype.getComponentName = function() {
            return _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_1__['ComponentConstants']
              .FLE_DATA_COPY;
          };
          FleetDataCopySearchComponent.prototype.ngOnInit = function() {
            _super.prototype.ngOnInit.call(this);
            this.displayComponentContext('global.search', true);
          };
          FleetDataCopySearchComponent.prototype.init = function() {
            this.selectedType = 'aircraft';
            this.selectedAircrafts = [];
            this.showFleetDataCopyPopup = false;
            this.currentAssets = [];
            this.isLoading = false;
          };
          FleetDataCopySearchComponent.prototype.searchLaunched = function(sl) {
            this.isLoading = sl;
            if (this.selectedType === 'aircraft') {
              this.resultsTableAircraft = {
                list: [],
                moreResults: false
              };
              this.selectedAircrafts = [];
            }
            if (this.selectedType === 'engine') {
              this.resultsTableEngine = {
                list: [],
                moreResults: false
              };
              this.selectedEngines = [];
            }
            if (this.selectedType === 'equipment') {
              this.resultsTableEquipment = {
                list: [],
                moreResults: false
              };
              this.selectedEquipments = [];
            }
          };
          FleetDataCopySearchComponent.prototype.selectedTypeUpdated = function(type) {
            this.selectedType = type;
          };
          FleetDataCopySearchComponent.prototype.resultsTableAircraftUpdated = function(resultsTableAircraft) {
            var _this = this;
            this.resultsTableAircraft = resultsTableAircraft;
            _super.prototype.differ.call(this, function() {
              _super.prototype.scrollToAnchor.call(_this, _this.resultsContainerAnchor);
            });
          };
          FleetDataCopySearchComponent.prototype.resultsTableEngineUpdated = function(resultsTableEngine) {
            var _this = this;
            this.resultsTableEngine = resultsTableEngine;
            _super.prototype.differ.call(this, function() {
              _super.prototype.scrollToAnchor.call(_this, _this.resultsContainerAnchor);
            });
          };
          FleetDataCopySearchComponent.prototype.resultsTableEquipmentUpdated = function(resultsTableEquipment) {
            var _this = this;
            this.resultsTableEquipment = resultsTableEquipment;
            _super.prototype.differ.call(this, function() {
              _super.prototype.scrollToAnchor.call(_this, _this.resultsContainerAnchor);
            });
          };
          FleetDataCopySearchComponent.prototype.openSelectedAircrafts = function() {
            var _this = this;
            this.currentAssets = [];
            if (this.selectedAircrafts.length > 0) {
              this.selectedAircrafts.forEach(function(obj) {
                _this.currentAssets.push(obj._obj);
              });
              this.showFleetDataCopyPopup = true;
            }
          };
          FleetDataCopySearchComponent.prototype.openSelectedEngines = function() {
            var _this = this;
            this.currentAssets = [];
            if (this.selectedEngines.length > 0) {
              this.selectedEngines.forEach(function(obj) {
                _this.currentAssets.push(obj._obj);
              });
              this.showFleetDataCopyPopup = true;
            }
          };
          FleetDataCopySearchComponent.prototype.openSelectedEquipments = function() {
            var _this = this;
            this.currentAssets = [];
            if (this.selectedEquipments.length > 0) {
              this.selectedEquipments.forEach(function(equip) {
                _this.currentAssets.push(equip._obj);
              });
              this.showFleetDataCopyPopup = true;
            }
          };
          FleetDataCopySearchComponent.prototype.openLinkEquipment = function(code) {
            if (code) {
              this.openEquipment(
                code,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Read
              );
            }
          };
          FleetDataCopySearchComponent.prototype.openEquipment = function(objectId, openMode) {
            var labelKey = 'transaction.EquipmentFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'EquipmentFormComponent',
              openMode: openMode
            };
            if (!!objectId) {
              var equipmentId = {
                equipmentCode: objectId
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          FleetDataCopySearchComponent.prototype.openLinkAircraft = function(code) {
            if (code) {
              this.openAircraft(
                code,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Read
              );
            }
          };
          FleetDataCopySearchComponent.prototype.openAircraft = function(objectId, openMode) {
            var labelKey = 'transaction.AircraftFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'AircraftFormComponent',
              openMode: openMode
            };
            if (!!objectId) {
              var equipmentId = {
                equipmentCode: objectId
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          FleetDataCopySearchComponent.prototype.openLinkEngine = function(code) {
            if (code) {
              this.openEngine(
                code,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Read
              );
            }
          };
          FleetDataCopySearchComponent.prototype.openEngine = function(objectId, openMode) {
            var labelKey = 'transaction.EngineFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'EngineFormComponent',
              openMode: openMode
            };
            if (!!objectId) {
              var equipmentId = {
                equipmentCode: objectId
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('resultsContainerAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FleetDataCopySearchComponent.prototype,
            'resultsContainerAnchor',
            void 0
          );
          FleetDataCopySearchComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-fleet-data-copy-search',
                template: __webpack_require__(
                  /*! ./fleet-data-copy-search.component.html */ './src/app/main/fleet-management/fleet-data-copy-search/fleet-data-copy-search.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_3__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_4__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_5__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_6__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_8__['TabService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_7__['SessionService']
              ])
            ],
            FleetDataCopySearchComponent
          );
          return FleetDataCopySearchComponent;
        })(_shared_types_page_component__WEBPACK_IMPORTED_MODULE_9__['PageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-copy-search/fleet-data-copy-search.service.ts':
      /*!************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-copy-search/fleet-data-copy-search.service.ts ***!
  \************************************************************************************************/
      /*! exports provided: FleetDataCopySearchService */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'FleetDataCopySearchService',
          function() {
            return FleetDataCopySearchService;
          }
        );
        /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */ './node_modules/@angular/common/fesm5/http.js'
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/api/fleet-business.api */ './src/app/shared/api/fleet-business.api.ts'
        );
        /* harmony import */ var _shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/http/abstract-aw-http */ './src/app/shared/http/abstract-aw-http.ts'
        );
        /* harmony import */ var _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/services/app-config.service */ './src/app/shared/services/app-config.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetDataCopySearchService = /** @class */ (function(_super) {
          __extends(FleetDataCopySearchService, _super);
          function FleetDataCopySearchService(http, appConfigService, fleetBusinessApi) {
            var _this = _super.call(this, http, appConfigService) || this;
            _this.fleetBusinessApi = fleetBusinessApi;
            return _this;
          }
          FleetDataCopySearchService.prototype.copyFleetData = function(criteria) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.copyFleetData, criteria);
          };
          FleetDataCopySearchService = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])(),
              __metadata('design:paramtypes', [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClient'],
                _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_4__['AppConfigService'],
                _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_2__['FleetBusinessApi']
              ])
            ],
            FleetDataCopySearchService
          );
          return FleetDataCopySearchService;
        })(_shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_3__['AbstractAwHttpService']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-popup/fleet-data-copy-popup.component.html':
      /*!********************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-popup/fleet-data-copy-popup.component.html ***!
  \********************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div *ngIf="!showReport" class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n    <div *ngIf="showReport" class="modal-title">{{ getComponentName() + ".reportTitle" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="search-dialog-container">\r\n      <div *ngIf="!showReport" class="section search-criteria-section">\r\n        <div class="grid-row">\r\n          <div class="grid-cell--12">\r\n            <p-selectButton [options]="types" [(ngModel)]="selectedType" (onChange)="setType()"></p-selectButton>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf="selectedType === \'asset\'" class="grid-row">\r\n          <div class="grid-cell--3">\r\n            <div class="form-group required">\r\n              <label class="form-label">{{ getComponentName() + ".sourceAsset" | translate }}</label>\r\n\r\n              <div class="form-control form-control-with-modal" [ngClass]="{ disabled: showReport }">\r\n                <div class="form-control-data" (click)="!showReport ? openAssetPopup() : \'\'">\r\n                  {{ dataToCopy.sourceAssetCode }}\r\n                </div>\r\n                <div class="btn-search-wrapper">\r\n                  <i\r\n                    *ngIf="!showReport"\r\n                    class="fa fa-fw fa-search aw-icon aw-icon-with-border"\r\n                    aria-hidden="true"\r\n                    pTooltip="{{ \'global.search\' | translate }}"\r\n                    tooltipPosition="top"\r\n                    (click)="openAssetPopup()"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class="grid-cell--6">\r\n            <div class="section">\r\n              <h4 class="section-title">\r\n                {{ getComponentName() + ".dataToCopy" | translate\r\n                }}<span style="color: #a82525; font-size: 1.5rem;">*</span>\r\n              </h4>\r\n\r\n              <div class="section-content">\r\n                <div class="grid-row">\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".maintenancePlan" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <p-checkbox\r\n                        binary="true"\r\n                        class="aw-checkbox"\r\n                        [(ngModel)]="dataToCopy.maintenancePlan"\r\n                        [disabled]="isReadOpenMode"\r\n                      ></p-checkbox>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".lifeLimits" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <p-checkbox\r\n                        binary="true"\r\n                        class="aw-checkbox"\r\n                        [(ngModel)]="dataToCopy.lifeLimits"\r\n                        [disabled]="isReadOpenMode"\r\n                      ></p-checkbox>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".usage" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <p-checkbox\r\n                        binary="true"\r\n                        class="aw-checkbox"\r\n                        [(ngModel)]="dataToCopy.usage"\r\n                        [disabled]="isReadOpenMode"\r\n                      ></p-checkbox>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".attributes" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <p-checkbox\r\n                        binary="true"\r\n                        class="aw-checkbox"\r\n                        [(ngModel)]="dataToCopy.attributes"\r\n                        [disabled]="isReadOpenMode"\r\n                      ></p-checkbox>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf="selectedType === \'evolution\'" class="grid-row">\r\n          <div class="form-group required">\r\n            <label class="form-label">{{ getComponentName() + ".sourceEvolution" | translate }}</label>\r\n\r\n            <div class="form-control form-control-with-modal" [ngClass]="{ disabled: showReport }">\r\n              <div class="form-control-data" (click)="!showReport ? openEvolutionPopup() : \'\'">\r\n                {{ dataToCopy.evolutionAssetCode }}\r\n              </div>\r\n              <div class="btn-search-wrapper">\r\n                <i\r\n                  *ngIf="!showReport"\r\n                  class="fa fa-fw fa-search aw-icon aw-icon-with-border"\r\n                  aria-hidden="true"\r\n                  pTooltip="{{ \'global.search\' | translate }}"\r\n                  tooltipPosition="top"\r\n                  (click)="openEvolutionPopup()"\r\n                ></i>\r\n              </div>\r\n              <div class="btn-search-wrapper">{{ getComponentName() + ".sb182" | translate }}</div>\r\n            </div>\r\n          </div>\r\n          <div class="form-group">\r\n            <label class="form-label">{{ getComponentName() + ".applicationDate" | translate }}</label>\r\n            <div class="form-control">\r\n              <p-calendar\r\n                showButtonBar="true"\r\n                [monthNavigator]="true"\r\n                [yearNavigator]="true"\r\n                [yearRange]="sessionService.calendarYearRange"\r\n                name="date"\r\n                class="aw-calendar"\r\n                [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                [locale]="sessionService.calendarFormat"\r\n                [(ngModel)]="dataToCopy.applicationDate"\r\n                [disabled]="isReadOnlyForm"\r\n                appendTo="body"\r\n                [maxDate]="maxDate"\r\n              ></p-calendar>\r\n            </div>\r\n          </div>\r\n          <div class="form-group">\r\n            <label class="form-label">{{ getComponentName() + ".isPartiallyApplied" | translate }}</label>\r\n            <div class="form-control">\r\n              <p-checkbox\r\n                binary="true"\r\n                class="aw-checkbox"\r\n                [(ngModel)]="dataToCopy.isPartiallyApplied"\r\n                [disabled]="isReadOpenMode"\r\n              ></p-checkbox>\r\n            </div>\r\n          </div>\r\n          <div class="form-group"></div>\r\n        </div>\r\n      </div>\r\n      <div class="section results-section">\r\n        <h4 class="section-title">\r\n          {{ getComponentName() + ".targetAssetsTitle" | translate }} ({{ resultsTable ? resultsTable.length : 0 }})\r\n        </h4>\r\n\r\n        <div class="section-content">\r\n          <p-table\r\n            [resizableColumns]="true"\r\n            #tableAssets\r\n            class="aw-table2"\r\n            [columns]="resultsTableCols"\r\n            [value]="resultsTable"\r\n            [(selection)]="selectedAssets"\r\n            [scrollable]="true"\r\n          >\r\n            <ng-template pTemplate="emptymessage">\r\n              <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n              <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                <div class="lds-hourglass"></div>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n              <colgroup>\r\n                <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n              </colgroup>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="header" let-columns>\r\n              <tr>\r\n                <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                  {{ getComponentName() + "." + col.field | translate }}\r\n                </th>\r\n              </tr>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n              <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                <td *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                  <span [ngSwitch]="col.field">\r\n                    <div *ngSwitchCase="\'report\'">\r\n                      <i\r\n                        *ngIf="rowData[\'report\'] === false"\r\n                        class="fa fa-times fa-lg"\r\n                        aria-hidden="true"\r\n                        pTooltip="{{ rowData[\'reportMessage\'] }}"\r\n                        tooltipPosition="top"\r\n                        style="color:red"\r\n                      ></i>\r\n                      <i\r\n                        *ngIf="rowData[\'report\'] === true"\r\n                        class="fa fa-check fa-lg"\r\n                        aria-hidden="true"\r\n                        pTooltip="{{ rowData[\'reportMessage\'] }}"\r\n                        tooltipPosition="top"\r\n                        style="color:green"\r\n                      ></i>\r\n                    </div>\r\n                    <div *ngSwitchDefault>{{ rowData[col.field] }}</div>\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="!showReport && selectedType === \'asset\'"\r\n      type="button"\r\n      color="primary"\r\n      mat-raised-button\r\n      (click)="validate()"\r\n      [disabled]="\r\n        dataToCopy.sourceAssetCode === null ||\r\n        dataToCopy.sourceAssetCode === undefined ||\r\n        dataToCopy.sourceAssetCode.trim() === \'\' ||\r\n        (!dataToCopy.maintenancePlan && !dataToCopy.lifeLimits && !dataToCopy.usage && !dataToCopy.attributes)\r\n      "\r\n    >\r\n      {{ "global.save" | translate }}\r\n    </button>\r\n    <button\r\n      *ngIf="!showReport && selectedType === \'evolution\'"\r\n      type="button"\r\n      color="primary"\r\n      mat-raised-button\r\n      (click)="validate()"\r\n      [disabled]="\r\n        dataToCopy.evolutionAssetCode === null ||\r\n        dataToCopy.evolutionAssetCode === undefined ||\r\n        dataToCopy.evolutionAssetCode.trim() === \'\'\r\n      "\r\n    >\r\n      {{ "global.save" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="showReport"\r\n      type="button"\r\n      mat-raised-button\r\n      (click)="report()"\r\n      [disabled]="reportText === null || reportText === \'\'"\r\n    >\r\n      {{ getComponentName() + ".report" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n\r\n<aw-dialog-search-equipment\r\n  *ngIf="showAssetPopup"\r\n  [(display)]="showAssetPopup"\r\n  [equipment-code]="dataToCopy.sourceAssetCode"\r\n  [family-variant]=""\r\n  (onSelected)="setSelectedAsset($event)"\r\n></aw-dialog-search-equipment>\r\n\r\n<aw-dialog-search-evolution\r\n  *ngIf="showEvolutionPopup"\r\n  [(display)]="showEvolutionPopup"\r\n  [evolutionNumber]="dataToCopy.evolutionAssetCode"\r\n  (onSelected)="setSelectedCode($event)"\r\n></aw-dialog-search-evolution>\r\n\r\n<aw-fleet-data-copy-report-popup\r\n  *ngIf="showReportPopup"\r\n  [reportContent]="reportText"\r\n  [(display)]="showReportPopup"\r\n></aw-fleet-data-copy-report-popup>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-popup/fleet-data-copy-popup.component.ts':
      /*!******************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-popup/fleet-data-copy-popup.component.ts ***!
  \******************************************************************************************************************************/
      /*! exports provided: FleetDataCopyPopupComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'FleetDataCopyPopupComponent',
          function() {
            return FleetDataCopyPopupComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        /* harmony import */ var _fleet_data_copy_search_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../fleet-data-copy-search.service */ './src/app/main/fleet-management/fleet-data-copy-search/fleet-data-copy-search.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetDataCopyPopupComponent = /** @class */ (function(_super) {
          __extends(FleetDataCopyPopupComponent, _super);
          function FleetDataCopyPopupComponent(sessionService, messageService, fleetDataCopySearchService) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Read,
                'FleetDataCopyPopupComponent'
              ) || this;
            _this.sessionService = sessionService;
            _this.messageService = messageService;
            _this.fleetDataCopySearchService = fleetDataCopySearchService;
            _this.displayChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.types = [
              { label: 'Asset', value: 'asset' },
              { label: 'Evolution', value: 'evolution' }
            ];
            _this.selectedType = 'asset';
            _this.dataToCopy = {};
            _this.resultsTableCols = [
              { field: 'pnCode', alignment: 'left' },
              { field: 'sn', alignment: 'left' },
              { field: 'equipmentDesignation', alignment: 'left' },
              { field: 'ownerCustomerCode', alignment: 'left' }
            ];
            _this.selectedAssets = [];
            _this.showReport = false;
            _this.showAssetPopup = false;
            _this.showReportPopup = false;
            _this.showEvolutionPopup = false;
            _this.reportText = '';
            _this.maxDate = new Date();
            return _this;
          }
          FleetDataCopyPopupComponent.prototype.ngOnInit = function() {
            this.updateOpenMode(
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Write
            );
            if (!this.assets) {
              this.resultsTable = [];
            } else {
              this.resultsTable = this.assets.map(function(asset) {
                var obj = {
                  equipmentCode: asset.equipmentCode,
                  equipmentDesignation: asset.equipmentDesignation,
                  ownerCustomerCode: asset.ownerCustomerCode,
                  pnCode: asset.pnCode,
                  sn: asset.sn
                };
                return obj;
              });
            }
          };
          FleetDataCopyPopupComponent.prototype.validate = function() {
            var _this = this;
            var list = [];
            this.assets.forEach(function(asset) {
              if (!!asset.equipmentCode) {
                list.push(asset.equipmentCode);
              } else {
                _super.prototype.throwUnboundLocalError.call(_this, 'validate', 'asset.equipmentCode');
              }
            });
            var fleetDataCopyInputDTO = {
              assetFleetDataCopyInputDTO: {
                sourceAssetCode: this.dataToCopy.sourceAssetCode,
                targetAssetCodeList: list,
                fleetDTOCopyOptions: {
                  lifeLimitsCopy: this.dataToCopy.lifeLimits,
                  usageCopy: this.dataToCopy.usage,
                  attributesCopy: this.dataToCopy.attributes,
                  maintenancePlanCopy: this.dataToCopy.maintenancePlan,
                  counterCodeList: []
                }
              },
              evolutionFleetDataCopyInputDTO: {
                dateApply: this.dataToCopy.applicationDate,
                isPartiallyApplied: this.dataToCopy.isPartiallyApplied,
                equipmentCodeList: list,
                bidoEvolutionDTO: this.selectedEvolutionDTO
              },
              isEvolutionSelected: this.selectedType === 'evolution',
              withCounters: false
            };
            this.fleetDataCopySearchService.copyFleetData(fleetDataCopyInputDTO).subscribe(function(results) {
              if (results && results.length > 0) {
                _this.showReport = true;
                _this.resultsTableCols.splice(0, 0, { field: 'report', alignment: 'left' });
                _this.resultsTable.forEach(function(asset) {
                  var objCopiedData = results.filter(function(obj) {
                    return obj.targetCode === asset.equipmentCode;
                  })[0];
                  asset.report = objCopiedData && objCopiedData.isCopied;
                  asset.copyOutput = objCopiedData;
                  asset.reportMessage = objCopiedData && objCopiedData.exceptionMessage;
                  _this.reportText = asset.copyOutput
                    ? asset.copyOutput.reportText !== null && asset.copyOutput.reportText !== ''
                      ? _this.reportText + '\n' + asset.copyOutput.reportText
                      : ''
                    : '';
                });
                _this.messageService.showSuccessMessage(_this.getTranslateKey('successMessage'));
              } else {
                _this.messageService.showErrorMessage(_this.getTranslateKey('errorMessage'));
              }
            });
          };
          FleetDataCopyPopupComponent.prototype.report = function() {
            this.showReportPopup = this.reportText !== null && this.reportText !== '';
          };
          FleetDataCopyPopupComponent.prototype.openAssetPopup = function() {
            this.showAssetPopup = true;
          };
          FleetDataCopyPopupComponent.prototype.setSelectedAsset = function(event) {
            this.dataToCopy.sourceAssetCode = event.equipmentCode;
          };
          FleetDataCopyPopupComponent.prototype.openEvolutionPopup = function() {
            this.showEvolutionPopup = true;
          };
          FleetDataCopyPopupComponent.prototype.setSelectedCode = function(event) {
            this.dataToCopy.evolutionAssetCode = event.evolutionNumber;
            this.selectedEvolutionDTO = event;
          };
          FleetDataCopyPopupComponent.prototype.setType = function() {
            this.dataToCopy = {};
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            FleetDataCopyPopupComponent.prototype,
            'assets',
            void 0
          );
          FleetDataCopyPopupComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-fleet-data-copy-popup',
                template: __webpack_require__(
                  /*! ./fleet-data-copy-popup.component.html */ './src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-popup/fleet-data-copy-popup.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_3__['SessionService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_2__['MessageService'],
                _fleet_data_copy_search_service__WEBPACK_IMPORTED_MODULE_5__['FleetDataCopySearchService']
              ])
            ],
            FleetDataCopyPopupComponent
          );
          return FleetDataCopyPopupComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_4__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-report-popup/fleet-data-copy-report-popup.component.html':
      /*!**********************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-report-popup/fleet-data-copy-report-popup.component.html ***!
  \**********************************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group">\r\n      <textarea class="aw-textarea" [rows]="10" pInputTextarea [(ngModel)]="reportContent"></textarea>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-report-popup/fleet-data-copy-report-popup.component.ts':
      /*!********************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-report-popup/fleet-data-copy-report-popup.component.ts ***!
  \********************************************************************************************************************************************/
      /*! exports provided: FleetDataCopyReportPopupComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'FleetDataCopyReportPopupComponent',
          function() {
            return FleetDataCopyReportPopupComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetDataCopyReportPopupComponent = /** @class */ (function(_super) {
          __extends(FleetDataCopyReportPopupComponent, _super);
          function FleetDataCopyReportPopupComponent() {
            return (
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Read,
                'FleetDataCopyReportPopupComponent'
              ) || this
            );
          }
          FleetDataCopyReportPopupComponent.prototype.ngOnInit = function() {
            return;
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', String)],
            FleetDataCopyReportPopupComponent.prototype,
            'reportContent',
            void 0
          );
          FleetDataCopyReportPopupComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-fleet-data-copy-report-popup',
                template: __webpack_require__(
                  /*! ./fleet-data-copy-report-popup.component.html */ './src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-report-popup/fleet-data-copy-report-popup.component.html'
                )
              }),
              __metadata('design:paramtypes', [])
            ],
            FleetDataCopyReportPopupComponent
          );
          return FleetDataCopyReportPopupComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-form/fleet-data-form.component.html':
      /*!**************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-form/fleet-data-form.component.html ***!
  \**************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="grid-row">\r\n  <div class="grid-cell--12">\r\n    <div class="grid-cell grid-cell--container">\r\n      <div class="grid-cell-header">\r\n        <div class="grid-cell-title-container">\r\n          <h3 class="grid-cell-title">{{ "global.search" | translate }}</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="grid-cell-content grid-cell-content-with-section">\r\n        <div class="section">\r\n          <div class="section-content">\r\n            <div class="row search-criteria-header">\r\n              <i\r\n                class="fa fa-fw fa-undo aw-icon aw-icon-with-border search-criteria-action"\r\n                aria-hidden="true"\r\n                pTooltip="{{ \'global.reset\' | translate }}"\r\n                tooltipPosition="top"\r\n                (click)="resetSearchCriteria()"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class="section">\r\n          <h4 class="section-title">{{ getComponentName() + ".mainCriteria" | translate }}</h4>\r\n\r\n          <div class="section-content">\r\n            <div class="row">\r\n              <div class="form-group flex--2">\r\n                <label class="form-label"> &nbsp; </label>\r\n\r\n                <div class="form-control">\r\n                  <p-selectButton\r\n                    [options]="types"\r\n                    [(ngModel)]="selectedType"\r\n                    (onChange)="onChangeSelectedType()"\r\n                  ></p-selectButton>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group" *ngIf="selectedType === \'aircraft\'">\r\n                <label class="form-label"> {{ "global.familyVariant" | translate }} </label>\r\n                <div class="form-control">\r\n                  <p-dropdown\r\n                    class="aw-dropdown fixed-width"\r\n                    [(ngModel)]="searchObjectAircraft.familyVariantCode"\r\n                    placeholder="&nbsp;"\r\n                    [showClear]="true"\r\n                    [options]="aircraftFamilyVariantList"\r\n                    (keyup.enter)="search()"\r\n                    appendTo="body"\r\n                  ></p-dropdown>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group" *ngIf="selectedType === \'aircraft\'">\r\n                <label class="form-label"> {{ "global.designation" | translate }} </label>\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObjectAircraft.equipmentDesignation" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group" *ngIf="selectedType === \'engine\'">\r\n                <label class="form-label"> {{ "global.familyVariant" | translate }} </label>\r\n                <div class="form-control">\r\n                  <p-dropdown\r\n                    class="aw-dropdown fixed-width"\r\n                    [(ngModel)]="searchObjectEngine.familyVariantCode"\r\n                    placeholder="&nbsp;"\r\n                    [showClear]="true"\r\n                    [options]="engineFamilyVariantList"\r\n                    (keyup.enter)="search()"\r\n                    appendTo="body"\r\n                  ></p-dropdown>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group" *ngIf="selectedType === \'engine\'">\r\n                <label class="form-label"> {{ "global.designation" | translate }} </label>\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObjectEngine.equipmentDesignation" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group" *ngIf="selectedType === \'equipment\'">\r\n                <label class="form-label"> {{ "global.familyVariant" | translate }} </label>\r\n                <div class="form-control">\r\n                  <p-dropdown\r\n                    class="aw-dropdown fixed-width"\r\n                    [showClear]="true"\r\n                    [(ngModel)]="searchObjectEquipment.familyVariantCode"\r\n                    placeholder="&nbsp;"\r\n                    [options]="equipmentFamilyVariantList"\r\n                    (keyup.enter)="search()"\r\n                    appendTo="body"\r\n                  ></p-dropdown>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group" *ngIf="selectedType === \'equipment\'">\r\n                <label class="form-label"> {{ "global.designation" | translate }} </label>\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObjectEquipment.equipmentDesignation" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class="section">\r\n          <h4 *ngIf="selectedType === \'aircraft\'" class="section-title">\r\n            {{ getComponentName() + ".aircraftCriteria" | translate }}\r\n          </h4>\r\n          <h4 *ngIf="selectedType === \'engine\'" class="section-title">\r\n            {{ getComponentName() + ".engineCriteria" | translate }}\r\n          </h4>\r\n          <h4 *ngIf="selectedType === \'equipment\'" class="section-title">\r\n            {{ getComponentName() + ".equipmentCriteria" | translate }}\r\n          </h4>\r\n\r\n          <div class="section-content">\r\n            <div class="row" *ngIf="selectedType === \'aircraft\'">\r\n              <div class="form-group">\r\n                <label class="form-label"> {{ "global.registration" | translate }} </label>\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObjectAircraft.registration" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group">\r\n                <label class="form-label"> {{ "global.msn" | translate }} </label>\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObjectAircraft.sn" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group">\r\n                <label class="form-label">\r\n                  {{ getComponentName() + ".aircraftStatus" | translate }}\r\n                </label>\r\n                <div class="form-control">\r\n                  <p-dropdown\r\n                    class="aw-dropdown fixed-width"\r\n                    [(ngModel)]="searchObjectAircraft.operationalStatus"\r\n                    placeholder="&nbsp;"\r\n                    [showClear]="true"\r\n                    [options]="aircraftStatusList"\r\n                    (keyup.enter)="search()"\r\n                    appendTo="body"\r\n                  ></p-dropdown>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group"></div>\r\n            </div>\r\n\r\n            <div class="row" *ngIf="selectedType === \'engine\'">\r\n              <div class="form-group">\r\n                <label class="form-label"> {{ "global.registration" | translate }} </label>\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObjectEngine.registration" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group">\r\n                <label class="form-label"> {{ getComponentName() + ".esn" | translate }} </label>\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObjectEngine.sn" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group">\r\n                <label class="form-label"> {{ getComponentName() + ".pn" | translate }} </label>\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObjectEngine.pnCode" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group">\r\n                <label class="form-label">\r\n                  {{ getComponentName() + ".operationalStatus" | translate }}\r\n                </label>\r\n                <div class="form-control">\r\n                  <p-dropdown\r\n                    class="aw-dropdown fixed-width"\r\n                    [showClear]="true"\r\n                    [(ngModel)]="searchObjectEngine.operationalStatus"\r\n                    placeholder="&nbsp;"\r\n                    [options]="engineOperationalStatusList"\r\n                    (keyup.enter)="search()"\r\n                    appendTo="body"\r\n                  ></p-dropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="row" *ngIf="selectedType === \'equipment\'">\r\n              <div class="form-group">\r\n                <label class="form-label"> {{ getComponentName() + ".sn" | translate }} </label>\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObjectEquipment.sn" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group">\r\n                <label class="form-label"> {{ getComponentName() + ".pn" | translate }} </label>\r\n                <div class="form-control">\r\n                  <input type="text" class="aw-input" [(ngModel)]="searchObjectEquipment.pnCode" />\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group">\r\n                <label class="form-label"> {{ getComponentName() + ".function" | translate }} </label>\r\n                <div class="form-control">\r\n                  <p-dropdown\r\n                    class="aw-dropdown fixed-width"\r\n                    [(ngModel)]="searchObjectEquipment.equipmentFunction"\r\n                    [showClear]="true"\r\n                    placeholder="&nbsp;"\r\n                    [options]="euipmentFunctionList"\r\n                    (keyup.enter)="search()"\r\n                    appendTo="body"\r\n                  ></p-dropdown>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="form-group">\r\n                <label class="form-label">\r\n                  {{ getComponentName() + ".operationalStatus" | translate }}\r\n                </label>\r\n                <div class="form-control">\r\n                  <p-dropdown\r\n                    class="aw-dropdown fixed-width"\r\n                    [showClear]="true"\r\n                    [(ngModel)]="searchObjectEquipment.operationalStatus"\r\n                    placeholder="&nbsp;"\r\n                    [options]="euipmentOperationalStatusList"\r\n                    (keyup.enter)="search()"\r\n                    appendTo="body"\r\n                  ></p-dropdown>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class="section">\r\n          <div class="section-content">\r\n            <div class="row search-criteria-footer">\r\n              <div class="search-actions">\r\n                <button\r\n                  type="button"\r\n                  color="primary"\r\n                  mat-raised-button\r\n                  class="btn-with-spinner"\r\n                  (click)="search()"\r\n                  appKeyPress\r\n                  [keyCode]="\'Enter\'"\r\n                  (keyPress)="search()"\r\n                >\r\n                  <span *ngIf="isLoading" class="lds-hourglass"></span>\r\n                  {{ "global.toSearch" | translate }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-form/fleet-data-form.component.scss':
      /*!**************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-form/fleet-data-form.component.scss ***!
  \**************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          ':host h4 {\n  color: #01579b; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2ZsZWV0LWRhdGEtZm9ybS9kOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGdpdGh1Yl9wYWdlcy9zcmNcXGFwcFxcbWFpblxcZmxlZXQtbWFuYWdlbWVudFxcZmxlZXQtZGF0YS1mb3JtXFxmbGVldC1kYXRhLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2ZsZWV0LW1hbmFnZW1lbnQvZmxlZXQtZGF0YS1mb3JtL2ZsZWV0LWRhdGEtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICBoNCB7XHJcbiAgICBjb2xvcjogIzAxNTc5YjtcclxuICB9XHJcbn0iXX0= */';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-form/fleet-data-form.component.ts':
      /*!************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-form/fleet-data-form.component.ts ***!
  \************************************************************************************/
      /*! exports provided: FleetDataFormComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'FleetDataFormComponent', function() {
          return FleetDataFormComponent;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/constants/bido-function-type-constants */ './src/app/shared/constants/bido-function-type-constants.ts'
        );
        /* harmony import */ var _shared_constants_bido_preference_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/constants/bido-preference-constants */ './src/app/shared/constants/bido-preference-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../shared/types/form-page-component */ './src/app/shared/types/form-page-component.ts'
        );
        /* harmony import */ var _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../shared/utils/bido-family-variant-utils */ './src/app/shared/utils/bido-family-variant-utils.ts'
        );
        /* harmony import */ var _fleet_data_form_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ./fleet-data-form.service */ './src/app/main/fleet-management/fleet-data-form/fleet-data-form.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetDataFormComponent = /** @class */ (function(_super) {
          __extends(FleetDataFormComponent, _super);
          function FleetDataFormComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService,
            fleetDataFormService,
            propertiesService,
            translateService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_6__['ComponentOpenMode'].Write,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService
              ) || this;
            _this.fleetDataFormService = fleetDataFormService;
            _this.propertiesService = propertiesService;
            _this.translateService = translateService;
            _this.isLoading = false;
            _this.attributesMap = new Map();
            _this.resultsTableAircraftUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.resultsTableEngineUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.resultsTableEquipmentUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.searchLaunched = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.selectedTypeUpdated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.selectedType = 'aircraft';
            _this.init();
            _this.bindAircraftDropDowns();
            _this.bindEngineDropDowns();
            _this.bindEquipmentDropDowns();
            return _this;
          }
          FleetDataFormComponent.prototype.ngOnInit = function() {
            // unused
          };
          FleetDataFormComponent.prototype.init = function() {
            this.resultsTableAircraft = {
              list: [],
              moreResults: false
            };
            this.resultsTableEngine = {
              list: [],
              moreResults: false
            };
            this.resultsTableEquipment = {
              list: [],
              moreResults: false
            };
            this.types = [
              { label: this.translateService.instant(this.getComponentName() + '.aircraft'), value: 'aircraft' },
              { label: this.translateService.instant(this.getComponentName() + '.engine'), value: 'engine' },
              { label: this.translateService.instant(this.getComponentName() + '.equipment'), value: 'equipment' }
            ];
            this.searchObjectAircraft = {};
            this.searchObjectEngine = {};
            this.searchObjectEquipment = {};
          };
          FleetDataFormComponent.prototype.resetSearchCriteria = function() {
            this.init();
          };
          FleetDataFormComponent.prototype.bindAircraftDropDowns = function() {
            var _this = this;
            this.aircraftFamilyVariantList = [];
            this.fleetDataFormService.findAllFamilyVariantForEquipment().subscribe(function(results) {
              if (!!results) {
                var temp_1 = [];
                results.forEach(function(result) {
                  var element = _shared_utils_bido_family_variant_utils__WEBPACK_IMPORTED_MODULE_14__[
                    'BidoFamilyVariantUtils'
                  ].buildFamilyVariantCode(result.familyCode, result.variantCode);
                  if (!!element) {
                    var t = {
                      label: element,
                      value: element
                    };
                    temp_1.push(t);
                  } else {
                    _super.prototype.throwUnboundLocalError.call(_this, 'bindAircraftDropDowns', 'element');
                  }
                });
                _this.aircraftFamilyVariantList = temp_1;
              }
            });
            this.aircraftStatusList = [];
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_5__['GenericPropertyConstants']
                  .AIRCRAFT_STATUS_MAP
              )
              .subscribe(function(results) {
                _this.aircraftStatusList = results;
              });
          };
          FleetDataFormComponent.prototype.bindEngineDropDowns = function() {
            var _this = this;
            this.engineFamilyVariantList = [];
            var familyVariantInput = {
              useCase:
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_3__['BidoFunctionTypeConstants']
                  .UC_FM_EQUIPMENT,
              module:
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_3__['BidoFunctionTypeConstants']
                  .MODULE_FAMILY
            };
            this.fleetDataFormService.findFamilyVariantForEquipment(familyVariantInput).subscribe(function(results) {
              results.forEach(function(variantElement) {
                if (!!variantElement && !!variantElement.labelValueDTO) {
                  _this.engineFamilyVariantList.push(variantElement.labelValueDTO);
                } else {
                  _super.prototype.throwUnboundLocalError.call(
                    _this,
                    'bindEngineDropDowns',
                    'variantElement && variantElement.labelValueDTO'
                  );
                }
              });
            });
            this.engineOperationalStatusList = [];
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_5__['GenericPropertyConstants']
                  .OPERATIONAL_STATUS_MAP
              )
              .subscribe(function(results) {
                _this.engineOperationalStatusList = results;
              });
          };
          FleetDataFormComponent.prototype.bindEquipmentDropDowns = function() {
            var _this = this;
            this.equipmentFamilyVariantList = [];
            var familyVariantInput = {
              useCase:
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_3__['BidoFunctionTypeConstants']
                  .UC_FM_EQUIPMENT,
              module:
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_3__['BidoFunctionTypeConstants']
                  .MODULE_FAMILY
            };
            this.fleetDataFormService.findFamilyVariantForEquipment(familyVariantInput).subscribe(function(results) {
              results.forEach(function(variantElement) {
                if (!!variantElement && !!variantElement.labelValueDTO) {
                  _this.equipmentFamilyVariantList.push(variantElement.labelValueDTO);
                } else {
                  _super.prototype.throwUnboundLocalError.call(
                    _this,
                    'bidoEquipmentDropDowns',
                    'variantElement && variantElement.labelValueDTO'
                  );
                }
              });
            });
            this.euipmentOperationalStatusList = [];
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_5__['GenericPropertyConstants']
                  .OPERATIONAL_STATUS_MAP
              )
              .subscribe(function(results) {
                _this.euipmentOperationalStatusList = results;
              });
            this.euipmentFunctionList = [];
            this.fleetDataFormService.getEquipmentFunctionList().subscribe(function(results) {
              _this.euipmentFunctionList = results;
            });
          };
          FleetDataFormComponent.prototype.transformIntoRow = function(euipObj) {
            return {
              _obj: euipObj,
              asset: 'P/N ' + (euipObj.pnCode || '') + ' | S/N ' + (euipObj.sn || ''),
              equipmentCode: euipObj.equipmentCode,
              equipmentDesignation: euipObj.equipmentDesignation,
              familyVariantCode: euipObj.familyVariantCode,
              ownerCustomerCode: euipObj.ownerCustomerCode,
              pnCode: euipObj.pnCode,
              sn: euipObj.sn
            };
          };
          FleetDataFormComponent.prototype.search = function() {
            if (!!this.selectedType) {
              if (this.selectedType === 'aircraft') {
                this.searchAircrafts();
              }
              if (this.selectedType === 'engine') {
                this.searchEngines();
              }
              if (this.selectedType === 'equipment') {
                this.searchEquipments();
              }
            }
          };
          FleetDataFormComponent.prototype.searchAircrafts = function() {
            var _this = this;
            this.isLoading = true;
            this.searchLaunched.emit(true);
            var findAllAircraftByCriteriaInput = {
              bidoEquipmentDTO: this.searchObjectAircraft
            };
            if (!!findAllAircraftByCriteriaInput && !!findAllAircraftByCriteriaInput.bidoEquipmentDTO) {
              findAllAircraftByCriteriaInput.bidoEquipmentDTO.equipmentFunction =
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_2__[
                  'AWPropertiesConstants'
                ].FAMILY_FUNCTION_AIRCRAFT_KEY;
              this.fleetDataFormService
                .findAllAircraftByCriteria(findAllAircraftByCriteriaInput)
                .subscribe(function(results) {
                  _this.searchLaunched.emit(false);
                  if (results) {
                    var tableList_1 = [];
                    results.list.forEach(function(obj) {
                      tableList_1.push(_this.transformIntoRow(obj));
                    });
                    _this.resultsTableAircraft.list = tableList_1;
                    _this.resultsTableAircraft.moreResults = results.moreResults;
                    _this.resultsTableAircraftUpdated.emit(_this.resultsTableAircraft);
                  }
                  _this.isLoading = false;
                });
            } else {
              _super.prototype.throwUnboundLocalError.call(
                this,
                'searchAircrafts',
                'findAllAircraftByCriteriaInput && findAllAircraftByCriteriaInput.bidoEquipmentDTO'
              );
            }
          };
          FleetDataFormComponent.prototype.searchEngines = function() {
            var _this = this;
            this.isLoading = true;
            this.searchLaunched.emit(true);
            var findAllEngineByCriteriaInput = {
              bidoEquipmentDTO: this.searchObjectEngine
            };
            if (!!findAllEngineByCriteriaInput && !!findAllEngineByCriteriaInput.bidoEquipmentDTO) {
              findAllEngineByCriteriaInput.bidoEquipmentDTO.equipmentFunction =
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_2__[
                  'AWPropertiesConstants'
                ].FAMILY_FUNCTION_ENGINE_KEY;
              this.fleetDataFormService
                .findAllEngineByCriteria(findAllEngineByCriteriaInput)
                .subscribe(function(results) {
                  _this.searchLaunched.emit(false);
                  if (results) {
                    var tableList_2 = [];
                    results.list.forEach(function(obj) {
                      tableList_2.push(_this.transformIntoRow(obj));
                    });
                    _this.resultsTableEngine.list = tableList_2;
                    _this.resultsTableEngine.moreResults = results.moreResults;
                    _this.resultsTableEngineUpdated.emit(_this.resultsTableEngine);
                  }
                  _this.isLoading = false;
                });
            } else {
              _super.prototype.throwUnboundLocalError.call(
                this,
                'searchEngines',
                'findAllEngineByCriteriaInput && findAllEngineByCriteriaInput.bidoEquipmentDTO'
              );
            }
          };
          FleetDataFormComponent.prototype.searchEquipments = function() {
            var _this = this;
            this.isLoading = true;
            this.searchLaunched.emit(true);
            this.attributesMap.set(
              _shared_constants_bido_preference_constants__WEBPACK_IMPORTED_MODULE_4__['BidoPreferenceConstants']
                .ASSET_LOCATION,
              ''
            );
            this.attributesMap.set(
              _shared_constants_bido_preference_constants__WEBPACK_IMPORTED_MODULE_4__['BidoPreferenceConstants']
                .EQUIPMENT_SOURCE_SYSTEM_ID,
              ''
            );
            this.attributesMap.set(
              _shared_constants_bido_preference_constants__WEBPACK_IMPORTED_MODULE_4__['BidoPreferenceConstants']
                .EQUIPMENT_SOURCE_SYSTEM_REFERENCE,
              ''
            );
            this.attributesMap.set(
              _shared_constants_bido_preference_constants__WEBPACK_IMPORTED_MODULE_4__['BidoPreferenceConstants']
                .EQUIPMENT_ITEM_NUMBER,
              ''
            );
            var attributesConvMap = {};
            this.attributesMap.forEach(function(value, key) {
              attributesConvMap[key] = value;
            });
            var findBidoEquipmentsBySearchCriteriaInput = {
              bidoEquipmentDTO: this.searchObjectEquipment,
              attributes: attributesConvMap,
              withCounters: false
            };
            this.fleetDataFormService
              .findBidoEquipmentsDTOBySearchCriteria(findBidoEquipmentsBySearchCriteriaInput)
              .subscribe(function(results) {
                _this.searchLaunched.emit(false);
                if (results) {
                  var tableList_3 = [];
                  results.list.forEach(function(obj) {
                    tableList_3.push(_this.transformIntoRow(obj));
                  });
                  _this.resultsTableEquipment.list = tableList_3;
                  _this.resultsTableEquipment.moreResults = results.moreResults;
                  _this.resultsTableEquipmentUpdated.emit(_this.resultsTableEquipment);
                }
                _this.isLoading = false;
              });
          };
          FleetDataFormComponent.prototype.onChangeSelectedType = function() {
            this.selectedTypeUpdated.emit(this.selectedType);
          };
          FleetDataFormComponent.prototype.getComponentName = function() {
            return 'FleetDataFormComponent';
          };
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            FleetDataFormComponent.prototype,
            'resultsTableAircraftUpdated',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            FleetDataFormComponent.prototype,
            'resultsTableEngineUpdated',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            FleetDataFormComponent.prototype,
            'resultsTableEquipmentUpdated',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            FleetDataFormComponent.prototype,
            'searchLaunched',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            FleetDataFormComponent.prototype,
            'selectedTypeUpdated',
            void 0
          );
          FleetDataFormComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-fleet-data-form',
                template: __webpack_require__(
                  /*! ./fleet-data-form.component.html */ './src/app/main/fleet-management/fleet-data-form/fleet-data-form.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./fleet-data-form.component.scss */ './src/app/main/fleet-management/fleet-data-form/fleet-data-form.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_7__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_8__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_9__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_11__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_12__['TabService'],
                _fleet_data_form_service__WEBPACK_IMPORTED_MODULE_15__['FleetDataFormService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_10__['PropertiesService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService']
              ])
            ],
            FleetDataFormComponent
          );
          return FleetDataFormComponent;
        })(_shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_13__['FormPageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-form/fleet-data-form.service.ts':
      /*!**********************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-form/fleet-data-form.service.ts ***!
  \**********************************************************************************/
      /*! exports provided: FleetDataFormService */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'FleetDataFormService', function() {
          return FleetDataFormService;
        });
        /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */ './node_modules/@angular/common/fesm5/http.js'
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/api/fleet-management.api */ './src/app/shared/api/fleet-management.api.ts'
        );
        /* harmony import */ var _shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/http/abstract-aw-http */ './src/app/shared/http/abstract-aw-http.ts'
        );
        /* harmony import */ var _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/services/app-config.service */ './src/app/shared/services/app-config.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetDataFormService = /** @class */ (function(_super) {
          __extends(FleetDataFormService, _super);
          function FleetDataFormService(http, appConfigService, fleetManagementApi) {
            var _this = _super.call(this, http, appConfigService) || this;
            _this.fleetManagementApi = fleetManagementApi;
            return _this;
          }
          FleetDataFormService.prototype.findAllFamilyVariantForEquipment = function() {
            return _super.prototype.post.call(this, this.fleetManagementApi.findAllBireVariantVersionForEquipment);
          };
          FleetDataFormService.prototype.findFamilyVariantForEquipment = function(familyVariantInput) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findFamilyVariant, familyVariantInput);
          };
          FleetDataFormService.prototype.getEquipmentFunctionList = function() {
            return _super.prototype.post.call(this, this.fleetManagementApi.getEquipmentFunctionList);
          };
          FleetDataFormService.prototype.findAllAircraftByCriteria = function(criteria) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findAllAircraftByCriteria, criteria);
          };
          FleetDataFormService.prototype.findAllEngineByCriteria = function(criteria) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findAllEngineByCriteria, criteria);
          };
          FleetDataFormService.prototype.findBidoEquipmentsDTOBySearchCriteria = function(criteria) {
            return _super.prototype.post.call(
              this,
              this.fleetManagementApi.findBidoEquipmentsDTOBySearchCriteria,
              criteria
            );
          };
          FleetDataFormService = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])({
                providedIn: 'root'
              }),
              __metadata('design:paramtypes', [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClient'],
                _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_4__['AppConfigService'],
                _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_2__['FleetManagementApi']
              ])
            ],
            FleetDataFormService
          );
          return FleetDataFormService;
        })(_shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_3__['AbstractAwHttpService']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-owner-dialog/fleet-data-transfer-owner-dialog.component.html':
      /*!***********************************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-owner-dialog/fleet-data-transfer-owner-dialog.component.html ***!
  \***********************************************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div *ngIf="!showReport && operatorSelected" class="modal-title">\r\n      {{ getComponentName() + ".operatortitle" | translate }}\r\n    </div>\r\n    <div *ngIf="!showReport && ownerSelected" class="modal-title">\r\n      {{ getComponentName() + ".ownertitle" | translate }}\r\n    </div>\r\n    <div *ngIf="showReport && operatorSelected" style="width: 100%" class="modal-title">\r\n      {{ getComponentName() + ".reportOperatorTitle" | translate }}\r\n    </div>\r\n    <div *ngIf="showReport && ownerSelected" style="width: 100%" class="modal-title">\r\n      {{ getComponentName() + ".reportOwnerTitle" | translate }}\r\n    </div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="search-dialog-container">\r\n      <div class="section search-criteria-section">\r\n        <div class="grid-row">\r\n          <div class="grid-cell--3">\r\n            <div class="form-group required">\r\n              <label class="form-label">{{ getComponentName() + ".date" | translate }}</label>\r\n              <div class="form-control">\r\n                <p-calendar\r\n                  showButtonBar="true"\r\n                  [monthNavigator]="true"\r\n                  [yearNavigator]="true"\r\n                  [yearRange]="sessionService.calendarYearRange"\r\n                  name="date"\r\n                  class="aw-calendar"\r\n                  [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                  [locale]="sessionService.calendarFormat"\r\n                  [(ngModel)]="fleetDataTransferInput.eventInformationsDTO.eventDate"\r\n                  (ngModelChange)="reloadProperty()"\r\n                  [disabled]="showReport"\r\n                  appendTo="body"\r\n                  [maxDate]="maxDate"\r\n                  [showTime]="true"\r\n                ></p-calendar>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class="grid-cell--3">\r\n            <div *ngIf="ownerSelected" class="form-group required">\r\n              <label class="form-label">{{ getComponentName() + ".newOwner" | translate }}</label>\r\n\r\n              <div class="form-control form-control-with-modal" [ngClass]="{ disabled: showReport }">\r\n                <div class="form-control-data" (click)="!showReport ? openOwnerPopup() : \'\'">\r\n                  {{ dataToTransfer.ownerCustomerCode }}\r\n                </div>\r\n                <div class="btn-search-wrapper">\r\n                  <i\r\n                    *ngIf="!showReport"\r\n                    class="fa fa-fw fa-search aw-icon aw-icon-with-border"\r\n                    aria-hidden="true"\r\n                    pTooltip="{{ \'global.search\' | translate }}"\r\n                    tooltipPosition="top"\r\n                    (click)="openOwnerPopup()"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf="operatorSelected" class="form-group required">\r\n              <label class="form-label">{{ getComponentName() + ".newOperator" | translate }}</label>\r\n\r\n              <div class="form-control form-control-with-modal" [ngClass]="{ disabled: showReport }">\r\n                <div class="form-control-data" (click)="!showReport ? openOperatorPopup() : \'\'">\r\n                  {{ dataToTransfer.ownerCustomerCode }}\r\n                </div>\r\n                <div class="btn-search-wrapper">\r\n                  <i\r\n                    *ngIf="!showReport"\r\n                    class="fa fa-fw fa-search aw-icon aw-icon-with-border"\r\n                    aria-hidden="true"\r\n                    pTooltip="{{ \'global.search\' | translate }}"\r\n                    tooltipPosition="top"\r\n                    (click)="openOperatorPopup()"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class="grid-cell--3">\r\n            <div class="form-group required">\r\n              <label class="form-label"> {{ getComponentName() + ".reason" | translate }} </label>\r\n              <div class="form-control">\r\n                <p-dropdown\r\n                  class="aw-dropdown fixed-width"\r\n                  [(ngModel)]="fleetDataTransferInput.eventInformationsDTO.reason"\r\n                  placeholder="&nbsp;"\r\n                  [showClear]="true"\r\n                  [options]="reasonList"\r\n                  [disabled]="showReport"\r\n                ></p-dropdown>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class="grid-cell--3"></div>\r\n        </div>\r\n\r\n        <div class="grid-row" *ngIf="!showReport">\r\n          <div class="grid-cell--6">\r\n            <div class="form-group general-field required">\r\n              <label class="form-label">{{ getComponentName() + ".docDescription" | translate }}</label>\r\n              <div class="form-control text-area">\r\n                <textarea\r\n                  class="aw-textarea"\r\n                  [rows]="3"\r\n                  pInputTextarea\r\n                  [(ngModel)]="fleetDataTransferInput.eventInformationsDTO.description"\r\n                  [disabled]="isReadOpenMode"\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class="grid-cell--3">\r\n            <div class="form-group">\r\n              <label class="form-label"> {{ getComponentName() + ".forcePropagation" | translate }} </label>\r\n              <div class="form-control">\r\n                <p-checkbox\r\n                  binary="true"\r\n                  class="aw-checkbox"\r\n                  [(ngModel)]="fleetDataTransferInput.forcePropagation"\r\n                  [disabled]="sessionService.isSpecificDassault"\r\n                ></p-checkbox>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class="grid-cell--3">\r\n            <div class="form-group">\r\n              <label class="form-label"> {{ getComponentName() + ".runBackground" | translate }} </label>\r\n              <div class="form-control">\r\n                <p-checkbox\r\n                  binary="true"\r\n                  class="aw-checkbox"\r\n                  [(ngModel)]="fleetDataTransferInput.runBackground"\r\n                  [disabled]="isReadOpenMode"\r\n                ></p-checkbox>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class="section results-section">\r\n        <h4 class="section-title">\r\n          {{ getComponentName() + ".tranferAssetsTitle" | translate }} ({{ resultsTable ? resultsTable.length : 0 }})\r\n        </h4>\r\n        <div class="section-content">\r\n          <p-table\r\n            [resizableColumns]="true"\r\n            #tableAssets\r\n            class="aw-table2"\r\n            [columns]="resultsTableCols"\r\n            [value]="resultsTable"\r\n            [scrollable]="true"\r\n          >\r\n            <ng-template pTemplate="emptymessage">\r\n              <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n              <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                <div class="lds-hourglass"></div>\r\n              </div>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n              <colgroup>\r\n                <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n              </colgroup>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="header" let-columns>\r\n              <tr>\r\n                <th pResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                  {{ getComponentName() + "." + col.field | translate }}\r\n                </th>\r\n              </tr>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n              <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                <td *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                  <span [ngSwitch]="col.field">\r\n                    <div *ngSwitchCase="\'report\'">\r\n                      <i\r\n                        *ngIf="rowData[\'report\'] === false"\r\n                        class="fa fa-times fa-lg"\r\n                        aria-hidden="true"\r\n                        pTooltip="{{ rowData[\'exceptionMessage\'] }}"\r\n                        tooltipPosition="top"\r\n                        style="color:red"\r\n                      ></i>\r\n                      <i\r\n                        *ngIf="rowData[\'report\'] === true"\r\n                        class="fa fa-check fa-lg"\r\n                        aria-hidden="true"\r\n                        tooltipPosition="top"\r\n                        style="color:green"\r\n                      ></i>\r\n                    </div>\r\n                    <div *ngSwitchCase="\'alerts\'">\r\n                      <i\r\n                        *ngIf="ownerSelected && rowData[\'alerts\'] === true"\r\n                        class="fa fa-exclamation-triangle fa-lg yellow"\r\n                        style="color:#ff9800"\r\n                        aria-hidden="true"\r\n                        pTooltip="{{ getComponentName() + \'.alertMessageOwner\' | translate }}"\r\n                        tooltipPosition="top"\r\n                      ></i>\r\n                      <i\r\n                        *ngIf="operatorSelected && rowData[\'alerts\'] === true"\r\n                        class="fa fa-exclamation-triangle fa-lg yellow"\r\n                        style="color:#ff9800"\r\n                        aria-hidden="true"\r\n                        pTooltip="{{ getComponentName() + \'.alertMessageOperator\' | translate }}"\r\n                        tooltipPosition="top"\r\n                      ></i>\r\n                    </div>\r\n                    <div *ngSwitchCase="\'registration\'" class="page-header-links">\r\n                      <td\r\n                        *ngIf="airCraftSelected"\r\n                        [pEditableColumn]="rowData[col.field]"\r\n                        [pEditableColumnField]="rowData[col.field]"\r\n                      >\r\n                        <p-cellEditor>\r\n                          <ng-template pTemplate="input">\r\n                            <input style="width: 50%" type="text" maxlength="100" [(ngModel)]="rowData.registration" />\r\n                          </ng-template>\r\n                          <ng-template pTemplate="output"> {{ rowData.registration }} </ng-template>\r\n                        </p-cellEditor>\r\n                        <i\r\n                          class="fa fa-fw fa-pencil "\r\n                          aria-hidden="true"\r\n                          pTooltip="{{ \'global.edit\' | translate }}"\r\n                          tooltipPosition="top"\r\n                        ></i>\r\n                      </td>\r\n                    </div>\r\n                    <div *ngSwitchCase="\'newSn\'" class="page-header-links">\r\n                      <td\r\n                        *ngIf="airCraftSelected"\r\n                        [pEditableColumn]="rowData[col.field]"\r\n                        [pEditableColumnField]="rowData[col.field]"\r\n                      >\r\n                        <p-cellEditor>\r\n                          <ng-template pTemplate="input">\r\n                            <input style="width: 50%" type="text" maxlength="50" [(ngModel)]="rowData.newSn" />\r\n                          </ng-template>\r\n                          <ng-template pTemplate="output"> {{ rowData.newSn }} </ng-template>\r\n                        </p-cellEditor>\r\n                        <i\r\n                          class="fa fa-fw fa-pencil "\r\n                          aria-hidden="true"\r\n                          pTooltip="{{ \'global.edit\' | translate }}"\r\n                          tooltipPosition="top"\r\n                        ></i>\r\n                      </td>\r\n                    </div>\r\n                    <div *ngSwitchDefault>{{ rowData[col.field] }}</div>\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n    <button\r\n      *ngIf="!showReport"\r\n      type="button"\r\n      color="primary"\r\n      mat-raised-button\r\n      (click)="validate()"\r\n      [disabled]="\r\n        !fleetDataTransferInput.eventInformationsDTO.eventDate ||\r\n        !fleetDataTransferInput.eventInformationsDTO.reason ||\r\n        !dataToTransfer.ownerCustomerCode ||\r\n        !fleetDataTransferInput.eventInformationsDTO.description ||\r\n        checkList()\r\n      "\r\n    >\r\n      {{ "global.save" | translate }}\r\n    </button>\r\n    <button\r\n      *ngIf="showReport"\r\n      type="button"\r\n      mat-raised-button\r\n      (click)="generateReport()"\r\n      [disabled]="reportText === null || reportText === \'\'"\r\n    >\r\n      <span>{{ getComponentName() + ".report" | translate }}</span>\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n\r\n<aw-fleet-data-transfer-report-dialog\r\n  *ngIf="showReportPopup"\r\n  [reportContent]="reportText"\r\n  [iscustomerOwner]="iscustomerOwner"\r\n  [iscustomerOperator]="iscustomerOperator"\r\n  [(display)]="showReportPopup"\r\n></aw-fleet-data-transfer-report-dialog>\r\n\r\n<aw-dialog-search-customer\r\n  *ngIf="showCustomerPopup"\r\n  [(display)]="showCustomerPopup"\r\n  [iscustomerOwner]="iscustomerOwner"\r\n  [iscustomerOperator]="iscustomerOperator"\r\n  [customer-code]="fleetDataTransferInput.bidoEquipmentDTOList.ownerCustomerCode"\r\n  (onSelected)="setSelectedCode($event)"\r\n></aw-dialog-search-customer>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-owner-dialog/fleet-data-transfer-owner-dialog.component.scss':
      /*!***********************************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-owner-dialog/fleet-data-transfer-owner-dialog.component.scss ***!
  \***********************************************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '.ui-editable-column, .ui-editing-cell:hover {\n  border: none !important; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9mbGVldC1tYW5hZ2VtZW50L2ZsZWV0LWRhdGEtdHJhbnNmZXItc2VhcmNoL2RpYWxvZ3MvZmxlZXQtZGF0YS10cmFuc2Zlci1vd25lci1kaWFsb2cvZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxhcHBcXG1haW5cXGZsZWV0LW1hbmFnZW1lbnRcXGZsZWV0LWRhdGEtdHJhbnNmZXItc2VhcmNoXFxkaWFsb2dzXFxmbGVldC1kYXRhLXRyYW5zZmVyLW93bmVyLWRpYWxvZ1xcZmxlZXQtZGF0YS10cmFuc2Zlci1vd25lci1kaWFsb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQSx1QkFBdUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vZmxlZXQtbWFuYWdlbWVudC9mbGVldC1kYXRhLXRyYW5zZmVyLXNlYXJjaC9kaWFsb2dzL2ZsZWV0LWRhdGEtdHJhbnNmZXItb3duZXItZGlhbG9nL2ZsZWV0LWRhdGEtdHJhbnNmZXItb3duZXItZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVpLWVkaXRhYmxlLWNvbHVtbiAsLnVpLWVkaXRpbmctY2VsbDpob3ZlcntcclxuYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuIl19 */';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-owner-dialog/fleet-data-transfer-owner-dialog.component.ts':
      /*!*********************************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-owner-dialog/fleet-data-transfer-owner-dialog.component.ts ***!
  \*********************************************************************************************************************************************************/
      /*! exports provided: FleetDataTransferOwnerDialogComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'FleetDataTransferOwnerDialogComponent',
          function() {
            return FleetDataTransferOwnerDialogComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        /* harmony import */ var _fleet_data_transfer_search_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../fleet-data-transfer-search.service */ './src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetDataTransferOwnerDialogComponent = /** @class */ (function(_super) {
          __extends(FleetDataTransferOwnerDialogComponent, _super);
          function FleetDataTransferOwnerDialogComponent(
            sessionService,
            messageService,
            fleetDataTransferSearchService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Read,
                'FleetDataTransferOwnerDialogComponent'
              ) || this;
            _this.sessionService = sessionService;
            _this.messageService = messageService;
            _this.fleetDataTransferSearchService = fleetDataTransferSearchService;
            _this.fleetDataTransferInput = {
              eventInformationsDTO: {},
              bidoEquipmentDTOList: []
            };
            _this.fleetDataAssestTransferInput = {
              equipmentCodeList: []
            };
            _this.showReport = false;
            _this.isAlert = false;
            _this.showReportPopup = false;
            _this.isReadOnlyForm = true;
            _this.isLoading = false;
            _this.resultsTableCols = [];
            _this.resultsTable = [];
            _this.showCustomerPopup = false;
            _this.fleetDataTransferInput.forcePropagation = true;
            _this.iscustomerOwner = false;
            _this.iscustomerOperator = false;
            _this.editflag = false;
            _this.dataToTransfer = {};
            _this.reportText = '';
            _this.maxDate = new Date();
            _this.resultsTableCols = [
              { field: 'pnCode', alignment: 'left' },
              { field: 'equipmentDesignation', alignment: 'left' },
              { field: 'alerts', alignment: 'left' }
            ];
            return _this;
          }
          FleetDataTransferOwnerDialogComponent.prototype.ngOnInit = function() {
            this.updateOpenMode(
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Write
            );
            this.getReasonList();
            this.loadDate();
            this.getAssetsDetails();
          };
          FleetDataTransferOwnerDialogComponent.prototype.getAssetsDetails = function() {
            var _this = this;
            this.isLoading = true;
            var idx = 3;
            var rdx = 1;
            if (
              this.airCraftSelected &&
              this.resultsTableCols[rdx].field !== 'registration' &&
              this.resultsTableCols[1].field !== 'newSn'
            ) {
              this.resultsTableCols.splice(rdx, 0, { field: 'registration', alignment: 'left' });
              this.resultsTableCols.splice(1, 0, { field: 'newSn', alignment: 'left' });
            }
            if (!this.airCraftSelected && this.resultsTableCols[1].field !== 'sn') {
              this.resultsTableCols.splice(1, 0, { field: 'sn', alignment: 'left' });
            }
            if (
              this.ownerSelected &&
              this.resultsTableCols[this.airCraftSelected ? idx + 1 : idx].field !== 'ownerAtDate'
            ) {
              this.resultsTableCols.splice(this.airCraftSelected ? idx + 1 : idx, 0, {
                field: 'ownerAtDate',
                alignment: 'left'
              });
            }
            if (
              this.operatorSelected &&
              this.resultsTableCols[this.airCraftSelected ? idx + 1 : idx].field !== 'operatorAtDate'
            ) {
              this.resultsTableCols.splice(this.airCraftSelected ? idx + 1 : idx, 0, {
                field: 'operatorAtDate',
                alignment: 'left'
              });
            }
            if (
              !!this.fleetDataTransferInput.eventInformationsDTO &&
              !!this.fleetDataAssestTransferInput.equipmentCodeList
            ) {
              if (this.operatorSelected) {
                this.fleetDataAssestTransferInput = {
                  equipmentCodeList: this.assets,
                  date: this.fleetDataTransferInput.eventInformationsDTO.eventDate,
                  transferType: 'OPERATOR'
                };
              }
              if (this.ownerSelected) {
                this.fleetDataAssestTransferInput = {
                  equipmentCodeList: this.assets,
                  date: this.fleetDataTransferInput.eventInformationsDTO.eventDate,
                  transferType: 'OWNER'
                };
              }
              this.fleetDataTransferSearchService
                .findTranferDatails(this.fleetDataAssestTransferInput)
                .subscribe(function(results) {
                  _this.isLoading = false;
                  if (!results) {
                    _this.resultsTable = [];
                  } else {
                    var temp_1 = [];
                    results.forEach(function(asset) {
                      if (_this.operatorSelected && !!asset.bidoEquipmentDTO) {
                        var obj = {
                          equipmentCode: asset.bidoEquipmentDTO.equipmentCode,
                          equipmentDesignation: asset.bidoEquipmentDTO.equipmentDesignation,
                          operatorAtDate: asset.ownerAtDate,
                          pnCode: asset.bidoEquipmentDTO.pnCode,
                          sn: asset.bidoEquipmentDTO.sn,
                          newSn: asset.bidoEquipmentDTO.sn,
                          registration: asset.bidoEquipmentDTO.registration
                        };
                        temp_1.push(obj);
                        _this.resultsTable = temp_1;
                      }
                      if (_this.ownerSelected && !!asset.bidoEquipmentDTO) {
                        var obj = {
                          equipmentCode: asset.bidoEquipmentDTO.equipmentCode,
                          equipmentDesignation: asset.bidoEquipmentDTO.equipmentDesignation,
                          ownerAtDate: asset.ownerAtDate,
                          pnCode: asset.bidoEquipmentDTO.pnCode,
                          sn: asset.bidoEquipmentDTO.sn,
                          newSn: asset.bidoEquipmentDTO.sn,
                          registration: asset.bidoEquipmentDTO.registration
                        };
                        temp_1.push(obj);
                        _this.resultsTable = temp_1;
                      }
                      if (_this.dataToTransfer.ownerCustomerCode) {
                        _this.alertCheck();
                      }
                    });
                  }
                });
            } else {
              _super.prototype.throwUnboundLocalError.call(
                this,
                'getAssetsDetails',
                'this.fleetDataTransferInput.eventInformationsDTO '
              );
            }
          };
          FleetDataTransferOwnerDialogComponent.prototype.getlabelkey = function(key) {
            return this.getComponentName() + '.' + key;
          };
          FleetDataTransferOwnerDialogComponent.prototype.getReasonList = function() {
            var _this = this;
            this.reasonList = [];
            this.fleetDataTransferSearchService.getReasonList().subscribe(function(results) {
              _this.reasonList = results;
            });
          };
          FleetDataTransferOwnerDialogComponent.prototype.loadDate = function() {
            var date = new Date();
            if (!!this.fleetDataTransferInput.eventInformationsDTO) {
              this.fleetDataTransferInput.eventInformationsDTO.eventDate = date;
            } else {
              _super.prototype.throwUnboundLocalError.call(
                this,
                'loadDate',
                'this.fleetDataTransferInput.eventInformationsDTO'
              );
            }
          };
          FleetDataTransferOwnerDialogComponent.prototype.checkList = function() {
            if (!Array.isArray(this.resultsTable) || !this.resultsTable.length) {
              return true;
            }
            return false;
          };
          FleetDataTransferOwnerDialogComponent.prototype.validate = function() {
            var _this = this;
            var assetList = this.resultsTable.map(function(asset) {
              var obj = {
                equipmentCode: asset.equipmentCode,
                ownerCustomerCode: _this.dataToTransfer.ownerCustomerCode,
                pnCode: asset.pnCode,
                sn: _this.airCraftSelected ? asset.newSn : asset.sn,
                equipmentDesignation: asset.equipmentDesignation,
                registration: asset.registration
              };
              return obj;
            });
            this.fleetDataTransferInput.bidoEquipmentDTOList = assetList;
            if (this.operatorSelected) {
              this.fleetDataTransferInput.transferType = 'OPERATOR';
            }
            if (this.ownerSelected) {
              this.fleetDataTransferInput.transferType = 'OWNER';
            }
            this.fleetDataTransferSearchService.transferFleetData(this.fleetDataTransferInput).subscribe(
              function(results) {
                if (results) {
                  _this.showReport = true;
                  if (_this.resultsTableCols[0].field !== 'report') {
                    _this.resultsTableCols.splice(0, 0, { field: 'report', alignment: 'left' });
                  }
                  _this.resultsTable.forEach(function(asset) {
                    var objTransferData = results.filter(function(obj) {
                      return obj.code === asset.equipmentCode;
                    })[0];
                    asset.report = objTransferData && objTransferData.isTransfered;
                    if (!asset.report) {
                      asset.exceptionMessage = objTransferData.exceptionMessage;
                    }
                    asset.transferOutput = objTransferData;
                    _this.reportText = asset.transferOutput
                      ? asset.transferOutput.reportText !== null && asset.transferOutput.reportText !== ''
                        ? _this.reportText + '\n' + asset.transferOutput.reportText
                        : ''
                      : '';
                  });
                }
                _this.messageService.showSuccessMessage(_this.getTranslateKey('successMessage'));
              },
              function(error) {
                _this.messageService.showErrorMessage(_this.getTranslateKey('dataTransferError'));
              }
            );
          };
          FleetDataTransferOwnerDialogComponent.prototype.generateReport = function() {
            this.showReportPopup = this.reportText !== null && this.reportText !== '';
          };
          FleetDataTransferOwnerDialogComponent.prototype.reloadProperty = function() {
            if (
              !!this.fleetDataTransferInput &&
              !!this.fleetDataTransferInput.eventInformationsDTO &&
              !!this.fleetDataTransferInput.eventInformationsDTO.eventDate
            ) {
              this.getAssetsDetails();
            } else {
              this.resultsTable = [];
            }
          };
          FleetDataTransferOwnerDialogComponent.prototype.openOwnerPopup = function() {
            this.iscustomerOwner = true;
            this.showCustomerPopup = true;
          };
          FleetDataTransferOwnerDialogComponent.prototype.openOperatorPopup = function() {
            this.iscustomerOperator = true;
            this.showCustomerPopup = true;
          };
          FleetDataTransferOwnerDialogComponent.prototype.setSelectedCode = function(customerInfo) {
            this.dataToTransfer.ownerCustomerCode = customerInfo.customerCode;
            this.dataToTransfer.ownerName = customerInfo.customerName;
            this.alertCheck();
          };
          FleetDataTransferOwnerDialogComponent.prototype.alertCheck = function() {
            var _this = this;
            if (this.ownerSelected) {
              this.resultsTable.forEach(function(row) {
                row.alerts = row.ownerAtDate === _this.dataToTransfer.ownerName ? true : false;
              });
            }
            if (this.operatorSelected) {
              this.resultsTable.forEach(function(row) {
                row.alerts = row.operatorAtDate === _this.dataToTransfer.ownerName ? true : false;
              });
            }
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Array)],
            FleetDataTransferOwnerDialogComponent.prototype,
            'assets',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Boolean)],
            FleetDataTransferOwnerDialogComponent.prototype,
            'airCraftSelected',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Boolean)],
            FleetDataTransferOwnerDialogComponent.prototype,
            'ownerSelected',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Boolean)],
            FleetDataTransferOwnerDialogComponent.prototype,
            'operatorSelected',
            void 0
          );
          FleetDataTransferOwnerDialogComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-fleet-data-transfer-owner-dialog',
                template: __webpack_require__(
                  /*! ./fleet-data-transfer-owner-dialog.component.html */ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-owner-dialog/fleet-data-transfer-owner-dialog.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./fleet-data-transfer-owner-dialog.component.scss */ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-owner-dialog/fleet-data-transfer-owner-dialog.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_3__['SessionService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_2__['MessageService'],
                _fleet_data_transfer_search_service__WEBPACK_IMPORTED_MODULE_5__['FleetDataTransferSearchService']
              ])
            ],
            FleetDataTransferOwnerDialogComponent
          );
          return FleetDataTransferOwnerDialogComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_4__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-report-dialog/fleet-data-transfer-report-dialog.component.html':
      /*!*************************************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-report-dialog/fleet-data-transfer-report-dialog.component.html ***!
  \*************************************************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div *ngIf="iscustomerOwner" class="modal-title">{{ getComponentName() + ".titleOwner" | translate }}</div>\r\n    <div *ngIf="iscustomerOperator" class="modal-title">{{ getComponentName() + ".titleOperator" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group" style="padding-top: 5px">\r\n      <textarea class="aw-textarea" [cols]="80" [rows]="15" pInputTextarea [(ngModel)]="reportContent"></textarea>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-report-dialog/fleet-data-transfer-report-dialog.component.scss':
      /*!*************************************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-report-dialog/fleet-data-transfer-report-dialog.component.scss ***!
  \*************************************************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vZmxlZXQtbWFuYWdlbWVudC9mbGVldC1kYXRhLXRyYW5zZmVyLXNlYXJjaC9kaWFsb2dzL2ZsZWV0LWRhdGEtdHJhbnNmZXItcmVwb3J0LWRpYWxvZy9mbGVldC1kYXRhLXRyYW5zZmVyLXJlcG9ydC1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-report-dialog/fleet-data-transfer-report-dialog.component.ts':
      /*!***********************************************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-report-dialog/fleet-data-transfer-report-dialog.component.ts ***!
  \***********************************************************************************************************************************************************/
      /*! exports provided: FleetDataTransferReportDialogComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'FleetDataTransferReportDialogComponent',
          function() {
            return FleetDataTransferReportDialogComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetDataTransferReportDialogComponent = /** @class */ (function(_super) {
          __extends(FleetDataTransferReportDialogComponent, _super);
          function FleetDataTransferReportDialogComponent() {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Read,
                'FleetDataTransferReportDialogComponent'
              ) || this;
            _this.reportContent = '';
            return _this;
          }
          FleetDataTransferReportDialogComponent.prototype.ngOnInit = function() {
            return;
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', String)],
            FleetDataTransferReportDialogComponent.prototype,
            'reportContent',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Boolean)],
            FleetDataTransferReportDialogComponent.prototype,
            'iscustomerOwner',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Boolean)],
            FleetDataTransferReportDialogComponent.prototype,
            'iscustomerOperator',
            void 0
          );
          FleetDataTransferReportDialogComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-fleet-data-transfer-report-dialog',
                template: __webpack_require__(
                  /*! ./fleet-data-transfer-report-dialog.component.html */ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-report-dialog/fleet-data-transfer-report-dialog.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./fleet-data-transfer-report-dialog.component.scss */ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-report-dialog/fleet-data-transfer-report-dialog.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [])
            ],
            FleetDataTransferReportDialogComponent
          );
          return FleetDataTransferReportDialogComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.component.html':
      /*!************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.component.html ***!
  \************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div class="page-subtitle">- {{ "page.searchPage" | translate }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-actions">\r\n    <button\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show all actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n    <mat-menu #actions="matMenu">\r\n      <button mat-menu-item (click)="updateFavoriteState()">\r\n        {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <aw-fleet-data-form\r\n        (searchLaunched)="searchLaunched($event)"\r\n        (selectedTypeUpdated)="selectedTypeUpdated($event)"\r\n        (resultsTableAircraftUpdated)="resultsTableAircraftUpdated($event)"\r\n        (resultsTableEngineUpdated)="resultsTableEngineUpdated($event)"\r\n        (resultsTableEquipmentUpdated)="resultsTableEquipmentUpdated($event)"\r\n      ></aw-fleet-data-form>\r\n\r\n      <div class="grid-row">\r\n        <div class="grid-cell--12">\r\n          <div #resultsContainerAnchor class="grid-cell grid-cell--container">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 *ngIf="selectedType === \'aircraft\'" class="grid-cell-title">\r\n                  {{ "global.results" | translate }} ({{\r\n                    aircraftTableDataSource ? aircraftTableDataSource.dataCount : 0\r\n                  }})\r\n                </h3>\r\n                <h3 *ngIf="selectedType === \'engine\'" class="grid-cell-title">\r\n                  {{ "global.results" | translate }} ({{ engineTableDataSource ? engineTableDataSource.dataCount : 0 }})\r\n                </h3>\r\n                <h3 *ngIf="selectedType === \'equipment\'" class="grid-cell-title">\r\n                  {{ "global.results" | translate }} ({{\r\n                    equipmentTableDataSource ? equipmentTableDataSource.dataCount : 0\r\n                  }})\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <a-table [dataSource]="aircraftTableDataSource" *ngIf="selectedType === \'aircraft\'">\r\n                <ng-template tableActionsDef>\r\n                  <button\r\n                    *ngIf="aircraftTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="openSelectedAircraftsOwner()"\r\n                  >\r\n                    {{ componentData.componentId + ".ownerTransfer" | translate }}\r\n                  </button>\r\n                  <button\r\n                    *ngIf="aircraftTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="openSelectedAircraftsOperator()"\r\n                  >\r\n                    {{ componentData.componentId + ".operatorTransfer" | translate }}\r\n                  </button>\r\n                </ng-template>\r\n                <ng-template columnDef="asset" let-rowData="rowData">\r\n                  <a *ngIf="rowData[\'pnCode\']" (click)="openLinkAircraft(rowData[\'equipmentCode\'])">\r\n                    {{ "P/N " + rowData["pnCode"] }}</a\r\n                  >\r\n                  <a *ngIf="rowData[\'sn\']" (click)="openLinkAircraft(rowData[\'equipmentCode\'])">\r\n                    {{ " | S/N " + rowData["sn"] }}</a\r\n                  >\r\n                </ng-template>\r\n              </a-table>\r\n\r\n              <a-table [dataSource]="engineTableDataSource" *ngIf="selectedType === \'engine\'">\r\n                <ng-template tableActionsDef>\r\n                  <button\r\n                    *ngIf="engineTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="openSelectedEngineOwner()"\r\n                  >\r\n                    {{ componentData.componentId + ".ownerTransfer" | translate }}\r\n                  </button>\r\n                  <button\r\n                    *ngIf="engineTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="openSelectedEngineOperator()"\r\n                  >\r\n                    {{ componentData.componentId + ".operatorTransfer" | translate }}\r\n                  </button>\r\n                </ng-template>\r\n                <ng-template columnDef="asset" let-rowData="rowData">\r\n                  <a *ngIf="rowData[\'pnCode\']" (click)="openLinkEngine(rowData[\'equipmentCode\'])">\r\n                    {{ "P/N " + rowData["pnCode"] }}</a\r\n                  >\r\n                  <a *ngIf="rowData[\'sn\']" (click)="openLinkEngine(rowData[\'equipmentCode\'])">\r\n                    {{ " | S/N " + rowData["sn"] }}</a\r\n                  >\r\n                </ng-template>\r\n              </a-table>\r\n\r\n              <a-table [dataSource]="equipmentTableDataSource" *ngIf="selectedType === \'equipment\'">\r\n                <ng-template tableActionsDef>\r\n                  <button\r\n                    *ngIf="equipmentTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="openSelectedEquipmentOwner()"\r\n                  >\r\n                    {{ componentData.componentId + ".ownerTransfer" | translate }}\r\n                  </button>\r\n                  <button\r\n                    *ngIf="equipmentTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="openSelectedEquipmentOperator()"\r\n                  >\r\n                    {{ componentData.componentId + ".operatorTransfer" | translate }}\r\n                  </button>\r\n                </ng-template>\r\n                <ng-template columnDef="asset" let-rowData="rowData">\r\n                  <a *ngIf="rowData[\'pnCode\']" (click)="openLinkEquipment(rowData[\'equipmentCode\'])">\r\n                    {{ "P/N " + rowData["pnCode"] }}</a\r\n                  >\r\n                  <a *ngIf="rowData[\'sn\']" (click)="openLinkEquipment(rowData[\'equipmentCode\'])">\r\n                    {{ " | S/N " + rowData["sn"] }}</a\r\n                  >\r\n                </ng-template>\r\n              </a-table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <aw-fleet-data-transfer-owner-dialog\r\n    *ngIf="showFleetDataTransferPopup"\r\n    [airCraftSelected]="airCraftSelected"\r\n    [operatorSelected]="operatorSelected"\r\n    [ownerSelected]="ownerSelected"\r\n    [(display)]="showFleetDataTransferPopup"\r\n    [assets]="currentAssets"\r\n  >\r\n  </aw-fleet-data-transfer-owner-dialog>\r\n</div>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.component.scss':
      /*!************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.component.scss ***!
  \************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vZmxlZXQtbWFuYWdlbWVudC9mbGVldC1kYXRhLXRyYW5zZmVyLXNlYXJjaC9mbGVldC1kYXRhLXRyYW5zZmVyLXNlYXJjaC5jb21wb25lbnQuc2NzcyJ9 */';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.component.ts':
      /*!**********************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.component.ts ***!
  \**********************************************************************************************************/
      /*! exports provided: FleetDataTransferSearchComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'FleetDataTransferSearchComponent',
          function() {
            return FleetDataTransferSearchComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../shared/components/table/table-data-source */ './src/app/shared/components/table/table-data-source.ts'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_page_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/types/page-component */ './src/app/shared/types/page-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetDataTransferSearchComponent = /** @class */ (function(_super) {
          __extends(FleetDataTransferSearchComponent, _super);
          function FleetDataTransferSearchComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__['ComponentOpenMode'].Write,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService
              ) || this;
            _this.types = [
              { label: 'Aircraft', value: 'aircraft' },
              { label: 'Engine', value: 'engine' },
              { label: 'Equipment', value: 'equipment' }
            ];
            _this.initEngineTableDataSource();
            _this.initAircraftTableDataSource();
            _this.initEquipmentTableDataSource();
            _this.attributesMap = new Map();
            return _this;
          }
          FleetDataTransferSearchComponent.prototype.getComponentName = function() {
            return _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_2__['ComponentConstants']
              .FLE_DATA_TRANSFER_SEARCH;
          };
          FleetDataTransferSearchComponent.prototype.ngOnInit = function() {
            _super.prototype.ngOnInit.call(this);
            this.init();
            this.displayComponentContext('global.search', true);
          };
          FleetDataTransferSearchComponent.prototype.initAircraftTableDataSource = function() {
            this.aircraftTableDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_1__[
              'TableDataSource'
            ]({
              allowMultiSelect: true,
              columns: [
                {
                  field: 'asset',
                  translateKey: this.getTranslateKey('asset'),
                  width: '30%'
                },
                {
                  field: 'familyVariantCode',
                  translateKey: this.getTranslateKey('familyVariantCode'),
                  width: '20%'
                },
                {
                  field: 'equipmentDesignation',
                  translateKey: this.getTranslateKey('equipmentDesignation'),
                  width: '35%'
                },
                {
                  field: 'ownerCustomerCode',
                  translateKey: this.getTranslateKey('ownerCustomerCode'),
                  width: '15%'
                }
              ],
              data: []
            });
          };
          FleetDataTransferSearchComponent.prototype.initEngineTableDataSource = function() {
            this.engineTableDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_1__[
              'TableDataSource'
            ]({
              allowMultiSelect: true,
              columns: [
                {
                  field: 'asset',
                  translateKey: this.getTranslateKey('asset'),
                  width: '30%'
                },
                {
                  field: 'familyVariantCode',
                  translateKey: this.getTranslateKey('familyVariantCode'),
                  width: '20%'
                },
                {
                  field: 'equipmentDesignation',
                  translateKey: this.getTranslateKey('equipmentDesignation'),
                  width: '35%'
                },
                {
                  field: 'ownerCustomerCode',
                  translateKey: this.getTranslateKey('ownerCustomerCode'),
                  width: '15%'
                }
              ],
              data: []
            });
          };
          FleetDataTransferSearchComponent.prototype.initEquipmentTableDataSource = function() {
            this.equipmentTableDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_1__[
              'TableDataSource'
            ]({
              allowMultiSelect: true,
              columns: [
                {
                  field: 'asset',
                  translateKey: this.getTranslateKey('asset'),
                  width: '30%'
                },
                {
                  field: 'familyVariantCode',
                  translateKey: this.getTranslateKey('familyVariantCode'),
                  width: '20%'
                },
                {
                  field: 'equipmentDesignation',
                  translateKey: this.getTranslateKey('equipmentDesignation'),
                  width: '35%'
                },
                {
                  field: 'ownerCustomerCode',
                  translateKey: this.getTranslateKey('ownerCustomerCode'),
                  width: '15%'
                }
              ],
              data: []
            });
          };
          FleetDataTransferSearchComponent.prototype.init = function() {
            this.currentAssets = [];
            this.selectedType = 'aircraft';
            this.isLoading = false;
            this.showFleetDataTransferPopup = false;
            this.airCraftSelected = false;
            this.ownerSelected = false;
            this.operatorSelected = false;
          };
          FleetDataTransferSearchComponent.prototype.searchLaunched = function(sl) {
            this.isLoading = sl;
          };
          FleetDataTransferSearchComponent.prototype.selectedTypeUpdated = function(type) {
            this.selectedType = type;
          };
          FleetDataTransferSearchComponent.prototype.resultsTableAircraftUpdated = function(resultsTableAircraft) {
            var _this = this;
            this.aircraftTableDataSource.setData(resultsTableAircraft.list);
            _super.prototype.differ.call(this, function() {
              _super.prototype.scrollToAnchor.call(_this, _this.resultsContainerAnchor);
            });
          };
          FleetDataTransferSearchComponent.prototype.resultsTableEngineUpdated = function(resultsTableEngine) {
            var _this = this;
            this.engineTableDataSource.setData(resultsTableEngine.list);
            _super.prototype.differ.call(this, function() {
              _super.prototype.scrollToAnchor.call(_this, _this.resultsContainerAnchor);
            });
          };
          FleetDataTransferSearchComponent.prototype.resultsTableEquipmentUpdated = function(resultsTableEquipment) {
            var _this = this;
            this.equipmentTableDataSource.setData(resultsTableEquipment.list);
            _super.prototype.differ.call(this, function() {
              _super.prototype.scrollToAnchor.call(_this, _this.resultsContainerAnchor);
            });
          };
          FleetDataTransferSearchComponent.prototype.openSelectedAircraftsOwner = function() {
            var _this = this;
            this.currentAssets = [];
            if (this.aircraftTableDataSource.dataSelectionCount > 0) {
              this.aircraftTableDataSource.dataSelection.forEach(function(item) {
                if (!!item.equipmentCode) {
                  _this.currentAssets.push(item.equipmentCode);
                } else {
                  _super.prototype.throwUnboundLocalError.call(
                    _this,
                    'openSelectedAircraftsOwner',
                    'item.equipmentCode'
                  );
                }
              });
              this.showFleetDataTransferPopup = true;
              this.airCraftSelected = true;
              this.operatorSelected = false;
              this.ownerSelected = true;
            }
          };
          FleetDataTransferSearchComponent.prototype.openSelectedAircraftsOperator = function() {
            var _this = this;
            this.currentAssets = [];
            if (this.aircraftTableDataSource.dataSelectionCount > 0) {
              this.aircraftTableDataSource.dataSelection.forEach(function(item) {
                if (!!item.equipmentCode) {
                  _this.currentAssets.push(item.equipmentCode);
                } else {
                  _super.prototype.throwUnboundLocalError.call(
                    _this,
                    'openSelectedAircraftsOperator',
                    'item.equipmentCode'
                  );
                }
              });
              this.showFleetDataTransferPopup = true;
              this.airCraftSelected = true;
              this.ownerSelected = false;
              this.operatorSelected = true;
            }
          };
          FleetDataTransferSearchComponent.prototype.openSelectedEngineOwner = function() {
            var _this = this;
            this.currentAssets = [];
            if (this.engineTableDataSource.dataSelectionCount > 0) {
              this.engineTableDataSource.dataSelection.forEach(function(item) {
                if (!!item.equipmentCode) {
                  _this.currentAssets.push(item.equipmentCode);
                } else {
                  _super.prototype.throwUnboundLocalError.call(_this, 'openSelectedEngineOwner', 'item.equipmentCode');
                }
              });
              this.showFleetDataTransferPopup = true;
              this.airCraftSelected = false;
              this.operatorSelected = false;
              this.ownerSelected = true;
            }
          };
          FleetDataTransferSearchComponent.prototype.openSelectedEngineOperator = function() {
            var _this = this;
            this.currentAssets = [];
            if (this.engineTableDataSource.dataSelectionCount > 0) {
              this.engineTableDataSource.dataSelection.forEach(function(item) {
                if (!!item.equipmentCode) {
                  _this.currentAssets.push(item.equipmentCode);
                } else {
                  _super.prototype.throwUnboundLocalError.call(
                    _this,
                    'openSelectedEngineOperator',
                    'item.equipmentCode'
                  );
                }
              });
              this.showFleetDataTransferPopup = true;
              this.airCraftSelected = false;
              this.ownerSelected = false;
              this.operatorSelected = true;
            }
          };
          FleetDataTransferSearchComponent.prototype.openSelectedEquipmentOwner = function() {
            var _this = this;
            this.currentAssets = [];
            if (this.equipmentTableDataSource.dataSelectionCount > 0) {
              this.equipmentTableDataSource.dataSelection.forEach(function(equip) {
                var equipmentDto = equip;
                if (!!equipmentDto.equipmentCode) {
                  _this.currentAssets.push(equipmentDto.equipmentCode);
                } else {
                  _super.prototype.throwUnboundLocalError.call(
                    _this,
                    'openSelectedEquipmentOwner',
                    'equipmentDto.equipmentCode'
                  );
                }
              });
              this.showFleetDataTransferPopup = true;
              this.airCraftSelected = false;
              this.operatorSelected = false;
              this.ownerSelected = true;
            }
          };
          FleetDataTransferSearchComponent.prototype.openSelectedEquipmentOperator = function() {
            var _this = this;
            this.currentAssets = [];
            if (this.equipmentTableDataSource.dataSelectionCount > 0) {
              this.equipmentTableDataSource.dataSelection.forEach(function(equip) {
                var equipmentDto = equip;
                if (!!equipmentDto.equipmentCode) {
                  _this.currentAssets.push(equipmentDto.equipmentCode);
                } else {
                  _super.prototype.throwUnboundLocalError.call(
                    _this,
                    'openSelectedEquipmentOperator',
                    'equipmentDto.equipmentCode'
                  );
                }
              });
              this.showFleetDataTransferPopup = true;
              this.airCraftSelected = false;
              this.ownerSelected = false;
              this.operatorSelected = true;
            }
          };
          FleetDataTransferSearchComponent.prototype.openLinkEquipment = function(code) {
            if (code) {
              this.openEquipment(
                code,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__['ComponentOpenMode'].Read
              );
            }
          };
          FleetDataTransferSearchComponent.prototype.openLinkAircraft = function(code) {
            if (code) {
              this.openAircraft(
                code,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__['ComponentOpenMode'].Read
              );
            }
          };
          FleetDataTransferSearchComponent.prototype.openLinkEngine = function(code) {
            if (code) {
              this.openEngine(
                code,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__['ComponentOpenMode'].Read
              );
            }
          };
          FleetDataTransferSearchComponent.prototype.openAircraft = function(objectId, openMode) {
            var labelKey = 'transaction.AircraftFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'AircraftFormComponent',
              openMode: openMode
            };
            if (!!objectId) {
              var equipmentId = {
                equipmentCode: objectId
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          FleetDataTransferSearchComponent.prototype.openEngine = function(objectId, openMode) {
            var labelKey = 'transaction.EngineFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'EngineFormComponent',
              openMode: openMode
            };
            if (!!objectId) {
              var equipmentId = {
                equipmentCode: objectId
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          FleetDataTransferSearchComponent.prototype.openEquipment = function(objectId, openMode) {
            var labelKey = 'transaction.EquipmentFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'EquipmentFormComponent',
              openMode: openMode
            };
            if (!!objectId) {
              var equipmentId = {
                equipmentCode: objectId
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('resultsContainerAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FleetDataTransferSearchComponent.prototype,
            'resultsContainerAnchor',
            void 0
          );
          FleetDataTransferSearchComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-fleet-data-transfer-search',
                template: __webpack_require__(
                  /*! ./fleet-data-transfer-search.component.html */ './src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./fleet-data-transfer-search.component.scss */ './src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_4__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_5__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_6__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_7__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_8__['TabService']
              ])
            ],
            FleetDataTransferSearchComponent
          );
          return FleetDataTransferSearchComponent;
        })(_shared_types_page_component__WEBPACK_IMPORTED_MODULE_9__['PageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.service.ts':
      /*!********************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.service.ts ***!
  \********************************************************************************************************/
      /*! exports provided: FleetDataTransferSearchService */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'FleetDataTransferSearchService',
          function() {
            return FleetDataTransferSearchService;
          }
        );
        /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */ './node_modules/@angular/common/fesm5/http.js'
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/api/fleet-business.api */ './src/app/shared/api/fleet-business.api.ts'
        );
        /* harmony import */ var _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/api/fleet-management.api */ './src/app/shared/api/fleet-management.api.ts'
        );
        /* harmony import */ var _shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/http/abstract-aw-http */ './src/app/shared/http/abstract-aw-http.ts'
        );
        /* harmony import */ var _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/services/app-config.service */ './src/app/shared/services/app-config.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetDataTransferSearchService = /** @class */ (function(_super) {
          __extends(FleetDataTransferSearchService, _super);
          function FleetDataTransferSearchService(http, appConfigService, fleetManagementApi, fleetBusinessApi) {
            var _this = _super.call(this, http, appConfigService) || this;
            _this.fleetManagementApi = fleetManagementApi;
            _this.fleetBusinessApi = fleetBusinessApi;
            return _this;
          }
          FleetDataTransferSearchService.prototype.getReasonList = function() {
            return _super.prototype.post.call(this, this.fleetManagementApi.getReasonList);
          };
          FleetDataTransferSearchService.prototype.findTranferDatails = function(fleetDataAssestTransferInputDTO) {
            return _super.prototype.post.call(
              this,
              this.fleetBusinessApi.getAssetsToBeTransferDetail,
              fleetDataAssestTransferInputDTO
            );
          };
          FleetDataTransferSearchService.prototype.transferFleetData = function(fleetDataTransferInput) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.dataFleetTransfer, fleetDataTransferInput);
          };
          FleetDataTransferSearchService = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])(),
              __metadata('design:paramtypes', [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClient'],
                _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_5__['AppConfigService'],
                _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_3__['FleetManagementApi'],
                _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_2__['FleetBusinessApi']
              ])
            ],
            FleetDataTransferSearchService
          );
          return FleetDataTransferSearchService;
        })(_shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_4__['AbstractAwHttpService']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-form/asset-selection-popup/asset-selection-popup.component.html':
      /*!*************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-form/asset-selection-popup/asset-selection-popup.component.html ***!
  \*************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="column">\r\n      <div class="row">\r\n        <div class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n          <label class="form-label">{{ getComponentName() + ".equipmentCode" | translate }} </label>\r\n\r\n          <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n            <div class="form-control-data" (click)="quickSearchEquipment()">\r\n              {{ equipment.bidoEquipmentDTO.equipmentCode }}\r\n            </div>\r\n\r\n            <div *ngIf="equipment.bidoEquipmentDTO.equipmentCode" class="btn-clear-wrapper">\r\n              <i\r\n                class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                aria-hidden="true"\r\n                (click)="equipment.bidoEquipmentDTO = {}; name = \'\'"\r\n              ></i>\r\n            </div>\r\n            <div class="btn-search-wrapper">\r\n              <i class="fa fa-fw fa-search aw-icon btn-search" aria-hidden="true" (click)="quickSearchEquipment()"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".pnCode" | translate }}</label>\r\n\r\n          <div class="form-control">\r\n            <input type="text" class="aw-input" [(ngModel)]="equipment.bidoEquipmentDTO.pnCode" [disabled]="true" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".sn" | translate }}</label>\r\n\r\n          <div class="form-control">\r\n            <input type="text" class="aw-input" [(ngModel)]="equipment.bidoEquipmentDTO.sn" [disabled]="true" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".name" | translate }}</label>\r\n\r\n          <div class="form-control"><input type="text" class="aw-input" [(ngModel)]="name" [disabled]="true" /></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button *ngIf="isReadOpenMode" type="button" mat-raised-button (click)="cancel()">\r\n      <span>{{ "global.close" | translate }}</span>\r\n    </button>\r\n\r\n    <button *ngIf="!isReadOpenMode" type="button" mat-raised-button (click)="cancel()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="!isReadOpenMode"\r\n      type="button"\r\n      mat-raised-button\r\n      (click)="add()"\r\n      color="primary"\r\n      [disabled]="!equipment.bidoEquipmentDTO.equipmentCode"\r\n    >\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n\r\n<aw-dialog-search-equipment\r\n  *ngIf="showQuickSearchEquipmentDialog"\r\n  [(display)]="showQuickSearchEquipmentDialog"\r\n  [equipment-code]="equipment.bidoEquipmentDTO.equipmentCode"\r\n  (onSelected)="setSelectedAsset($event)"\r\n  [selectionMultiple]="false"\r\n></aw-dialog-search-equipment>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-form/asset-selection-popup/asset-selection-popup.component.ts':
      /*!***********************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-form/asset-selection-popup/asset-selection-popup.component.ts ***!
  \***********************************************************************************************************/
      /*! exports provided: AssetSelectionPopupComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'AssetSelectionPopupComponent',
          function() {
            return AssetSelectionPopupComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var AssetSelectionPopupComponent = /** @class */ (function(_super) {
          __extends(AssetSelectionPopupComponent, _super);
          function AssetSelectionPopupComponent() {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Write,
                'AssetSelectionPopupComponent'
              ) || this;
            _this.onAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.showQuickSearchEquipmentDialog = false;
            _this.equipment = {
              bidoEquipmentDTO: {},
              type: ''
            };
            _this.name = '';
            return _this;
          }
          AssetSelectionPopupComponent.prototype.ngOnInit = function() {
            this.equipment = {
              bidoEquipmentDTO: {},
              type: ''
            };
          };
          AssetSelectionPopupComponent.prototype.add = function() {
            if (!!this.equipment) {
              this.onAdded.emit(this.equipment);
              this.display = false;
            } else {
              _super.prototype.throwUnboundLocalError.call(this, 'add', 'this.equipment');
            }
          };
          AssetSelectionPopupComponent.prototype.cancel = function() {
            this.display = false;
          };
          AssetSelectionPopupComponent.prototype.quickSearchEquipment = function() {
            this.showQuickSearchEquipmentDialog = true;
          };
          AssetSelectionPopupComponent.prototype.setSelectedAsset = function(event) {
            if (!!this.equipment) {
              if (!!event.equipmentFunction) {
                this.equipment.bidoEquipmentDTO.equipmentCode = event.equipmentCode;
                this.equipment.bidoEquipmentDTO.pnCode = event.pnCode;
                this.equipment.bidoEquipmentDTO.sn = event.sn;
                this.name =
                  this.equipment.bidoEquipmentDTO.pnCode && this.equipment.bidoEquipmentDTO.sn
                    ? 'P/N ' + this.equipment.bidoEquipmentDTO.pnCode + ' | S/N ' + this.equipment.bidoEquipmentDTO.sn
                    : this.equipment.bidoEquipmentDTO.pnCode && !this.equipment.bidoEquipmentDTO.sn
                    ? 'P/N ' + this.equipment.bidoEquipmentDTO.pnCode
                    : !this.equipment.bidoEquipmentDTO.pnCode && this.equipment.bidoEquipmentDTO.sn
                    ? 'S/N ' + this.equipment.bidoEquipmentDTO.sn
                    : '';
                this.equipment.bidoEquipmentDTO.equipmentDesignation = event.equipmentDesignation; // property "name" in assets table
                this.equipment.bidoEquipmentDTO.registration = event.registration;
                this.equipment.type = event.equipmentFunction;
                this.equipment.bidoEquipmentDTO.operatorCustomerCode = event.operatorCustomerCode;
                this.equipment.bidoEquipmentDTO.modelCode = event.modelCode;
                this.equipment.bidoEquipmentDTO.operationalStatus = event.operationalStatus;
                this.equipment.bidoEquipmentDTO.familyVariantCode = event.familyVariantCode;
              } else {
                this.equipment.bidoEquipmentDTO.equipmentCode = event.equipmentCode;
                this.equipment.bidoEquipmentDTO.pnCode = event.pnCode;
                this.equipment.bidoEquipmentDTO.sn = event.sn;
                this.name =
                  this.equipment.bidoEquipmentDTO.pnCode && this.equipment.bidoEquipmentDTO.sn
                    ? 'P/N ' + this.equipment.bidoEquipmentDTO.pnCode + ' | S/N ' + this.equipment.bidoEquipmentDTO.sn
                    : this.equipment.bidoEquipmentDTO.pnCode && !this.equipment.bidoEquipmentDTO.sn
                    ? 'P/N ' + this.equipment.bidoEquipmentDTO.pnCode
                    : !this.equipment.bidoEquipmentDTO.pnCode && this.equipment.bidoEquipmentDTO.sn
                    ? 'S/N ' + this.equipment.bidoEquipmentDTO.sn
                    : '';
                this.equipment.bidoEquipmentDTO.equipmentDesignation = event.equipmentDesignation; // property "name" in assets table
                this.equipment.bidoEquipmentDTO.registration = event.registration;
                this.equipment.bidoEquipmentDTO.operatorCustomerCode = event.operatorCustomerCode;
                this.equipment.bidoEquipmentDTO.modelCode = event.modelCode;
                this.equipment.bidoEquipmentDTO.operationalStatus = event.operationalStatus;
                this.equipment.bidoEquipmentDTO.familyVariantCode = event.familyVariantCode;
              }
            } else {
              _super.prototype.throwUnboundLocalError.call(this, 'setSelected', 'equipment && event.equipmentFunction');
            }
          };
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            AssetSelectionPopupComponent.prototype,
            'onAdded',
            void 0
          );
          AssetSelectionPopupComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-asset-selection-popup',
                template: __webpack_require__(
                  /*! ./asset-selection-popup.component.html */ './src/app/main/fleet-management/fleet-form/asset-selection-popup/asset-selection-popup.component.html'
                )
              }),
              __metadata('design:paramtypes', [])
            ],
            AssetSelectionPopupComponent
          );
          return AssetSelectionPopupComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-form/fleet-form.component.html':
      /*!****************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-form/fleet-form.component.html ***!
  \****************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div *ngIf="!isCreateOpenMode && componentData && componentData.objectId" class="page-subtitle">\r\n          <span class="page-subtitle">\r\n            - {{ serializationService.deserialize(componentData.objectId)["fleetCode"] }}\r\n          </span>\r\n\r\n          <span class="page-subtitle" *ngIf="serializationService.deserialize(componentData.objectId)[\'fleetName\']">\r\n            - {{ serializationService.deserialize(componentData.objectId)["fleetName"] }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-actions">\r\n    <button *ngIf="!isCreateOpenMode" type="button" mat-raised-button (click)="checkFleet()">\r\n      {{ componentData.componentId + ".checkFleet" | translate }}\r\n    </button>\r\n\r\n    <button *ngIf="isReadOpenMode && hasUpdateAccessRight" type="button" mat-raised-button (click)="editFleet()">\r\n      {{ "global.edit" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="!isReadOpenMode && !isCreateOpenMode"\r\n      type="button"\r\n      color="warn"\r\n      mat-raised-button\r\n      (click)="cancelFleet()"\r\n    >\r\n      {{ "global.cancel" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="!isReadOpenMode"\r\n      class="btn-with-spinner"\r\n      color="primary"\r\n      type="button"\r\n      mat-raised-button\r\n      (click)="saveFleet()"\r\n    >\r\n      <span class="lds-hourglass" *ngIf="showSaveSpinner"></span>\r\n      {{ "global.save" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      id="actions"\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show all actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n\r\n    <mat-menu #actions="matMenu">\r\n      <button id="updates" mat-menu-item (click)="openStatusUpdatesPopup()">\r\n        {{ "global.updates" | translate }}\r\n      </button>\r\n\r\n      <button *ngIf="isReadOpenMode && !isCreateOpenMode" mat-menu-item (click)="reloadFleet()">\r\n        {{ "global.refresh" | translate }}\r\n      </button>\r\n\r\n      <button id="favorites" mat-menu-item (click)="updateFavoriteState()">\r\n        {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <div class="grid-row">\r\n        <div class="grid-cell--4">\r\n          <div class="grid-cell grid-cell--container">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 class="grid-cell-title">{{ "page.mainData" | translate }}</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <div class="row">\r\n                <div class="form-group" [ngClass]="{ required: !isReadOpenMode }">\r\n                  <label class="form-label"> {{ componentData.componentId + ".fleetCode" | translate }} </label>\r\n\r\n                  <div class="form-control">\r\n                    <input\r\n                      type="text"\r\n                      class="aw-input"\r\n                      [(ngModel)]="fleet.fleetCode"\r\n                      [disabled]="isReadOpenMode || !isCreateOpenMode"\r\n                      maxlength="50"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="form-group">\r\n                  <label class="form-label"> {{ componentData.componentId + ".fleetName" | translate }} </label>\r\n\r\n                  <div class="form-control">\r\n                    <input\r\n                      type="text"\r\n                      class="aw-input"\r\n                      [(ngModel)]="fleet.fleetName"\r\n                      [disabled]="isReadOpenMode"\r\n                      maxlength="50"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class="row">\r\n                <div class="form-group">\r\n                  <label class="form-label"> {{ componentData.componentId + ".customerCode" | translate }} </label>\r\n\r\n                  <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n                    <div class="form-control-data" (click)="!isReadOpenMode && quickSearchBusinessPartner()">\r\n                      {{ fleet.customerCode }} <span *ngIf="customerName">- {{ customerName }}</span>\r\n                    </div>\r\n\r\n                    <div *ngIf="fleet.customerCode" class="btn-clear-wrapper">\r\n                      <i\r\n                        class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                        aria-hidden="true"\r\n                        (click)="fleet.customerCode = undefined; customerName = undefined"\r\n                      ></i>\r\n                    </div>\r\n                    <div class="btn-search-wrapper">\r\n                      <i\r\n                        class="fa fa-fw fa-search aw-icon btn-search"\r\n                        aria-hidden="true"\r\n                        (click)="!isReadOpenMode && quickSearchBusinessPartner()"\r\n                      ></i>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class="form-group">\r\n                  <label class="form-label"> {{ componentData.componentId + ".creationDate" | translate }} </label>\r\n\r\n                  <div class="form-control">\r\n                    <p-calendar\r\n                      showButtonBar="true"\r\n                      [monthNavigator]="true"\r\n                      [yearNavigator]="true"\r\n                      [yearRange]="sessionService.calendarYearRange"\r\n                      class="aw-calendar"\r\n                      [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                      [locale]="sessionService.calendarFormat"\r\n                      [(ngModel)]="fleet.creationDate"\r\n                      [disabled]="isReadOpenMode"\r\n                    ></p-calendar>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class="grid-cell-content">\r\n              <div class="row">\r\n                <div class="form-group flex--2">\r\n                  <label class="form-label"> {{ componentData.componentId + ".fleetDescription" | translate }} </label>\r\n\r\n                  <div class="form-control">\r\n                    <textarea\r\n                      class="aw-textarea"\r\n                      [rows]="3"\r\n                      autoResize="autoResize"\r\n                      pInputTextarea\r\n                      [(ngModel)]="fleet.fleetDescription"\r\n                      [disabled]="isReadOpenMode"\r\n                      maxlength="300"\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="grid-cell--8">\r\n          <div #table class="grid-cell grid-cell--container">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 class="grid-cell-title">\r\n                  {{ componentData.componentId + ".assets" | translate }} ({{\r\n                    assetsTableDataSource ? assetsTableDataSource.dataCount : 0\r\n                  }})\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n            <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n              <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n              <div class="lds-hourglass"></div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <a-table [dataSource]="assetsTableDataSource">\r\n                <ng-template tableActionsDef>\r\n                  <button\r\n                    *ngIf="!isReadOpenMode && assetsTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    color="warn"\r\n                    (click)="deleteAssets()"\r\n                  >\r\n                    {{ "global.detach" | translate }}\r\n                  </button>\r\n\r\n                  <button\r\n                    *ngIf="!isReadOpenMode && !assetsTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="addAsset()"\r\n                  >\r\n                    {{ "global.add" | translate }}\r\n                  </button>\r\n\r\n                  <button\r\n                    *ngIf="!isReadOpenMode && !assetsTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="addAssetByCriteria()"\r\n                  >\r\n                    {{ "global.addAll" | translate }}\r\n                  </button>\r\n\r\n                  <button\r\n                    *ngIf="assetsTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="openSelectedAssets()"\r\n                  >\r\n                    {{ componentData.componentId + ".configurationControl" | translate }}\r\n                  </button>\r\n                </ng-template>\r\n\r\n                <ng-template columnDef="status" let-rowData="rowData">\r\n                  <span\r\n                    *ngIf="isFleetCheck && rowData.status === controlConfigConstants.ICON_GREEN"\r\n                    class="alert alert--ok"\r\n                  >\r\n                    {{ componentData.componentId + ".alertOk" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf="isFleetCheck && rowData.status === controlConfigConstants.ICON_RED"\r\n                    class="alert alert--nok"\r\n                  >\r\n                    {{ componentData.componentId + ".alertNok" | translate }}\r\n                  </span>\r\n                  <span\r\n                    *ngIf="isFleetCheck && rowData.status === controlConfigConstants.ICON_YELLOW"\r\n                    class="alert alert--warning"\r\n                  >\r\n                    {{ componentData.componentId + ".alertWarning" | translate }}\r\n                  </span>\r\n                </ng-template>\r\n                <ng-template columnDef="sn" let-rowData="rowData">\r\n                  <a (click)="openAssetsForm(rowData)">\r\n                    {{ rowData.sn }}\r\n                  </a>\r\n                </ng-template>\r\n              </a-table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <aw-dialog-search-customer\r\n      *ngIf="showQuickSearchBusinessPartnerPopup"\r\n      [(display)]="showQuickSearchBusinessPartnerPopup"\r\n      [customer-code]="fleet.customerCode"\r\n      (onSelected)="setSelectedBusinessPartner($event)"\r\n    >\r\n    </aw-dialog-search-customer>\r\n\r\n    <aw-asset-selection-popup\r\n      *ngIf="showAssetSelectionDialog"\r\n      [(display)]="showAssetSelectionDialog"\r\n      (onAdded)="onAddAsset($event)"\r\n    >\r\n    </aw-asset-selection-popup>\r\n\r\n    <aw-multiple-assets-selection-popup\r\n      *ngIf="showMultipleAssetsSelectionDialog"\r\n      [(display)]="showMultipleAssetsSelectionDialog"\r\n      (onAdded)="onAddMultipleAssets($event)"\r\n    >\r\n    </aw-multiple-assets-selection-popup>\r\n\r\n    <aw-dialog-status *ngIf="showStatusPopup" [item]="fleet" [itemId]="fleetContextId" [(display)]="showStatusPopup">\r\n    </aw-dialog-status>\r\n    <aw-dialog-status\r\n      *ngIf="showStatusUpdatesPopup"\r\n      [isStatusEditable]="false"\r\n      [item]="fleet"\r\n      [itemId]="fleet.fleetCode"\r\n      [(display)]="showStatusUpdatesPopup"\r\n    ></aw-dialog-status>\r\n  </div>\r\n</div>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-form/fleet-form.component.ts':
      /*!**************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-form/fleet-form.component.ts ***!
  \**************************************************************************/
      /*! exports provided: FleetFormComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'FleetFormComponent', function() {
          return FleetFormComponent;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! rxjs */ './node_modules/rxjs/_esm5/index.js'
        );
        /* harmony import */ var _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/components/table/table-data-source */ './src/app/shared/components/table/table-data-source.ts'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/constants/bido-function-type-constants */ './src/app/shared/constants/bido-function-type-constants.ts'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/constants/control-config-constants */ './src/app/shared/constants/control-config-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/services/confirmation.service */ './src/app/shared/services/confirmation.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ../../../shared/types/form-page-component */ './src/app/shared/types/form-page-component.ts'
        );
        /* harmony import */ var _shared_utils_label_value_utils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ../../../shared/utils/label-value-utils */ './src/app/shared/utils/label-value-utils.ts'
        );
        /* harmony import */ var _shared_utils_object_utils__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ../../../shared/utils/object-utils */ './src/app/shared/utils/object-utils.ts'
        );
        /* harmony import */ var _fleet_search_fleet_search_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
          /*! ../fleet-search/fleet-search.service */ './src/app/main/fleet-management/fleet-search/fleet-search.service.ts'
        );
        /* harmony import */ var _fleet_form_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
          /*! ./fleet-form.service */ './src/app/main/fleet-management/fleet-form/fleet-form.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetFormComponent = /** @class */ (function(_super) {
          __extends(FleetFormComponent, _super);
          function FleetFormComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService,
            sessionService,
            fleetFormService,
            confirmationService,
            propertiesService,
            fleetSearchService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService
              ) || this;
            _this.sessionService = sessionService;
            _this.fleetFormService = fleetFormService;
            _this.confirmationService = confirmationService;
            _this.propertiesService = propertiesService;
            _this.fleetSearchService = fleetSearchService;
            _this.checkGlobalResult = [];
            _this.remainingCycles = [];
            _this.remainingHours = [];
            _this.calendarLimit = [];
            _this.showStatusPopup = false;
            _this.tabGeneralId = 'general';
            _this.currentTabId = _this.tabGeneralId;
            _this.showQuickSearchBusinessPartnerPopup = false;
            _this.isReadOnlyAssetSelectionDialog = false;
            _this.showAssetSelectionDialog = false;
            _this.showMultipleAssetsSelectionDialog = false;
            _this.customerName = '';
            _this.newAsset = {
              bidoEquipmentDTO: {},
              type: ''
            };
            _this.functions = [];
            _this.operationalStatuses = [];
            _this.initAssetsTableDataSource();
            _this.loadFunctions();
            _this.loadOperationalStatus();
            _this.fleet = {};
            _this.okForConsult = false;
            _this.okForUpdate = false;
            _this.showStatusUpdatesPopup = false;
            _this.isFleetCheck = false;
            _this.listControlConfigIn = [];
            _this.controlConfigConstants =
              _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_6__['ControlConfigConstants'];
            _this.isLoading = false;
            return _this;
          }
          FleetFormComponent.prototype.getComponentName = function() {
            return 'FleetFormComponent';
          };
          FleetFormComponent.prototype.ngOnInit = function() {
            _super.prototype.ngOnInit.call(this);
            if (!!this.componentData) {
              this.updateOpenMode(this.componentData.openMode);
              if (!!this.componentData.objectId) {
                var fleetCode = this.serializationService.deserialize(this.componentData.objectId).fleetCode;
                var fleetName = this.serializationService.deserialize(this.componentData.objectId).fleetName;
                var fleetContext =
                  !this.isCreateOpenMode &&
                  this.componentData &&
                  this.componentData.objectId &&
                  this.serializationService.deserialize(this.componentData.objectId).fleetName
                    ? fleetCode + ' - ' + fleetName
                    : '' + fleetCode;
                var fleetContextId = fleetContext;
                this.displayComponentContext(fleetContextId, this.isCreateOpenMode);
                this.loadFleet();
              } else {
                this.displayComponentContext('tab.createMode', this.isCreateOpenMode);
              }
            }
          };
          FleetFormComponent.prototype.quickSearchBusinessPartner = function() {
            this.showQuickSearchBusinessPartnerPopup = true;
          };
          FleetFormComponent.prototype.initOnCreate = function() {
            this.customerName = '';
            this.newAsset = {
              bidoEquipmentDTO: {},
              type: ''
            };
            this.fleet = {};
          };
          FleetFormComponent.prototype.cancelFleet = function() {
            if (this.isCreateOpenMode) {
              this.initOnCreate();
            } else {
              this.isFleetCheck = false;
              this.reloadFleet();
              this.updateOpenMode(
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read
              );
            }
          };
          FleetFormComponent.prototype.editFleet = function() {
            this.updateOpenMode(
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Write
            );
          };
          FleetFormComponent.prototype.loadFleet = function() {
            var _this = this;
            if (!!this.componentData.objectId) {
              var fleetTemp = {
                fleetId: this.serializationService.deserialize(this.componentData.objectId).fleetId
              };
              this.fleetFormService.findBidoFleet(fleetTemp).subscribe(
                function(result) {
                  _this.fleet = result.bidoFleetOutputDTO.bidoFleetDTO;
                  _this.fleet.creationDate = _this.fleet.creationDate
                    ? new Date(_this.fleet.creationDate.toString())
                    : undefined;
                  _this.customerName = result.bidoFleetOutputDTO.customerName;
                  _this.assetsTableDataSource.setData(
                    _this.setBidoEquipmentTableDtoRootProperties(result.bidoEquipmentTableDTO)
                  );
                },
                function() {
                  _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnLoadFleet'));
                }
              );
            } else {
              _super.prototype.throwUnboundLocalError.call(this, 'loadFleet', 'this.componentData.objectId');
            }
          };
          FleetFormComponent.prototype.reloadFleet = function() {
            if (this.isFleetCheck) {
              this.isFleetCheck = false;
              this.initAssetsTableDataSource();
              this.checkFleet();
            }
            this.fleet = {};
            this.initAssetsTableDataSource();
            this.loadFleet();
          };
          FleetFormComponent.prototype.saveFleet = function() {
            var _this = this;
            if (!this.fleet.fleetCode) {
              this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');
              return;
            } else {
              if (this.componentData.openMode === 0) {
                this.fleetSearchService.getBidoFleetsBySearchCriteria({}).subscribe(function(results) {
                  var inDB = results.list.some(function(result) {
                    return result.fleetCode === _this.fleet.fleetCode;
                  });
                  if (!inDB) {
                    _this.save();
                  } else {
                    _this.messageService.showErrorMessage(_this.getTranslateKey('fleetCodeExists'));
                  }
                });
              } else if (this.componentData.openMode === 1) {
                this.fleetSearchService.getBidoFleetsBySearchCriteria({}).subscribe(function(results) {
                  var inDB = results.list.some(function(result) {
                    return result.fleetCode === _this.fleet.fleetCode;
                  });
                  if (!inDB) {
                    _this.messageService.showErrorMessage('global.internalServerError');
                  } else {
                    _this.save();
                  }
                });
              }
            }
          };
          FleetFormComponent.prototype.openSelectedAssets = function() {
            var _this = this;
            this.assetsTableDataSource.dataSelection.forEach(function(asset) {
              if (!!asset.equipmentCode) {
                _this.openConfigurationControl(asset.equipmentCode);
              }
            });
          };
          FleetFormComponent.prototype.openConfigurationControl = function(equipmentCode) {
            var objectId = {
              equipmentCodeList: [equipmentCode]
            };
            var data = {
              id: this.tabService.generateId(),
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read,
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__['ComponentConstants']
                  .MAI_CONFIGURATION_CONTROL,
              objectId: this.serializationService.serialize(objectId)
            };
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          FleetFormComponent.prototype.checkFleet = function() {
            var _this = this;
            if (!!this.assetsTableDataSource && !!this.assetsTableDataSource.hasData) {
              this.isLoading = true;
              this.assetsTableDataSource.dataSrc.forEach(function(asset) {
                if (!!asset.equipmentCode) {
                  var controlConfig = {
                    checkConfiguration: true,
                    checkFl: true,
                    checkLogbook: true,
                    checkMel: true,
                    checkPotential: true,
                    checkReferential: true,
                    checkStructure: true,
                    equipmentCode: asset.equipmentCode,
                    projectId: undefined,
                    withAllCounters: true,
                    withFunctionalLocations: true,
                    withMelFlag: true
                  };
                  _this.listControlConfigIn.push(controlConfig);
                }
              });
              var observableList_1 = [];
              this.listControlConfigIn.forEach(function(config) {
                observableList_1.push(_this.fleetFormService.controlConfiguration(config));
              });
              Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['forkJoin'])(observableList_1).subscribe(function(results) {
                results.forEach(function(element) {
                  _this.checkGlobalResult.push(_this.calculateCheckGlobalResultForAssetStructureNode(element));
                  _this.remainingCycles.push(element.smallestRemainingInCyclesValue);
                  _this.remainingHours.push(element.smallestRemainingInHoursValue);
                  _this.calendarLimit.push(element.closestCalendarLimitDate);
                });
                _this.loadFleet();
                _this.isLoading = false;
                _this.listControlConfigIn = [];
              });
            }
            this.isFleetCheck = true;
            this.initAssetsTableDataSource();
          };
          FleetFormComponent.prototype.calculateCheckGlobalResultForAssetStructureNode = function(asset) {
            var _this = this;
            var checkList = [
              asset.checkCoreResult,
              asset.checkConfigurationResult,
              asset.checkStructureResult,
              asset.checkPotentialResult,
              asset.checkReferentialResult,
              asset.checkMelResult,
              asset.checkLogbookResult,
              asset.checkFlResult
            ];
            if (!!asset.children) {
              asset.children.forEach(function(child) {
                checkList.push(_this.calculateCheckGlobalResultForAssetStructureNode(child));
              });
            }
            checkList.filter(function(check) {
              return _shared_utils_object_utils__WEBPACK_IMPORTED_MODULE_19__['ObjectUtils'].isDefined(check);
            });
            return checkList.some(function(check) {
              return (
                check ===
                _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_6__['ControlConfigConstants']
                  .ICON_RED
              );
            })
              ? _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_6__['ControlConfigConstants']
                  .ICON_RED
              : checkList.some(function(check) {
                  return (
                    check ===
                    _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_6__['ControlConfigConstants']
                      .ICON_YELLOW
                  );
                })
              ? _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_6__['ControlConfigConstants']
                  .ICON_YELLOW
              : _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_6__['ControlConfigConstants']
                  .ICON_GREEN;
          };
          FleetFormComponent.prototype.save = function() {
            var _this = this;
            var saveAssetList = [];
            this.assetsTableDataSource.dataSrc.forEach(function(asset) {
              saveAssetList.push({
                fleetId: _this.fleet.fleetId,
                equipmentCode: asset.bidoEquipmentDTO.equipmentCode,
                statusState:
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_3__['AWPropertiesConstants']
                    .OBJECT_STATUS_UPDATED_KEY,
                statusDate: _this.fleet.statusDate,
                statusUser: _this.fleet.statusUser
              });
            });
            var saveId = {
              bidoFleetDTO: this.fleet
            };
            if (saveAssetList.length > 0) {
              saveId.bidoFleetEquipmentDTOList = saveAssetList;
            }
            this.showSaveSpinner = true;
            this.fleetFormService.saveFleet(saveId).subscribe(
              function(res) {
                var context = _this.fleet.fleetName
                  ? _this.fleet.fleetCode + ' - ' + _this.fleet.fleetName
                  : '' + _this.fleet.fleetCode;
                _this.fleetSearchService
                  .getBidoFleetsBySearchCriteria({ fleetCode: _this.fleet.fleetCode })
                  .subscribe(function(results) {
                    var id = results.list[0] && results.list[0].fleetId;
                    if (!!id) {
                      _this.fleetFormService.findBidoFleet({ fleetId: id }).subscribe(
                        function(result) {
                          _this.fleet = result.bidoFleetOutputDTO.bidoFleetDTO;
                          _this.fleet.creationDate = _this.fleet.creationDate
                            ? new Date(_this.fleet.creationDate.toString())
                            : undefined;
                          _this.customerName = result.bidoFleetOutputDTO.customerName;
                          _this.assetsTableDataSource.setData(
                            _this.setBidoEquipmentTableDtoRootProperties(result.bidoEquipmentTableDTO)
                          );
                          _this.componentData.objectId = _this.serializationService.serialize(_this.fleet);
                          _this.updateOpenMode(
                            _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode']
                              .Write
                          );
                          _this.displayComponentContext(context, _this.isCreateOpenMode);
                          _this.componentData.openMode = 1;
                        },
                        function() {
                          _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnLoadFleet'));
                        }
                      );
                    } else {
                      _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnLoadFleet'));
                    }
                  });
                _this.assetsTableDataSource.dataSelection = [];
                _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnSaveFleet'));
                _this.showSaveSpinner = false;
              },
              function(error) {
                _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnSaveFleet'));
                _this.showSaveSpinner = false;
              }
            );
          };
          FleetFormComponent.prototype.initAssetsTableDataSource = function() {
            if (!this.isFleetCheck) {
              this.assetsTableDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__[
                'TableDataSource'
              ]({
                allowMultiSelect: true,
                columns: [
                  {
                    field: 'sn',
                    translateKey: this.getTranslateKey('sn'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER
                  },
                  {
                    field: 'pnCode',
                    translateKey: this.getTranslateKey('pnCode'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER
                  },
                  {
                    field: 'registration',
                    translateKey: this.getTranslateKey('registration'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER
                  },
                  {
                    field: 'equipmentDesignation',
                    translateKey: this.getTranslateKey('equipmentDesignation'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER
                  },
                  {
                    field: 'familyVariantCode',
                    translateKey: this.getTranslateKey('familyVariantCode'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER
                  },
                  {
                    field: 'operatorCustomerCode',
                    translateKey: this.getTranslateKey('operatorCustomerCode'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER
                  },
                  {
                    field: 'ownerCustomerCode',
                    translateKey: this.getTranslateKey('ownerCustomerCode'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER
                  },
                  {
                    field: 'operationalStatus',
                    translateKey: this.getTranslateKey('operationalStatus'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER
                  }
                ],
                data: []
              });
            } else {
              this.assetsTableDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__[
                'TableDataSource'
              ]({
                allowMultiSelect: true,
                columns: [
                  {
                    field: 'status',
                    translateKey: this.getTranslateKey('status'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '7%'
                  },
                  {
                    field: 'sn',
                    translateKey: this.getTranslateKey('sn'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '6%'
                  },
                  {
                    field: 'pnCode',
                    translateKey: this.getTranslateKey('pnCode'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '8%'
                  },
                  {
                    field: 'registration',
                    translateKey: this.getTranslateKey('registration'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '8%'
                  },
                  {
                    field: 'equipmentDesignation',
                    translateKey: this.getTranslateKey('equipmentDesignation'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '6%'
                  },
                  {
                    field: 'familyVariantCode',
                    translateKey: this.getTranslateKey('familyVariantCode'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '11%'
                  },
                  {
                    field: 'operatorCustomerCode',
                    translateKey: this.getTranslateKey('operatorCustomerCode'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '8%'
                  },
                  {
                    field: 'ownerCustomerCode',
                    translateKey: this.getTranslateKey('ownerCustomerCode'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '8%'
                  },
                  {
                    field: 'operationalStatus',
                    translateKey: this.getTranslateKey('operationalStatus'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '10%'
                  },
                  {
                    field: 'remainingCycles',
                    translateKey: this.getTranslateKey('remainingCycles'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '10%'
                  },
                  {
                    field: 'remainingHours',
                    translateKey: this.getTranslateKey('remainingHours'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '9%'
                  },
                  {
                    field: 'calendarLimit',
                    translateKey: this.getTranslateKey('calendarLimit'),
                    alignment:
                      _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_2__['ColumnAlignment'].CENTER,
                    width: '9%'
                  }
                ],
                data: []
              });
            }
          };
          FleetFormComponent.prototype.setBidoEquipmentTableDtoRootProperties = function(table) {
            var _this = this;
            var assetsRow = [];
            table.forEach(function(asset, index) {
              var row = {
                status: _this.isFleetCheck ? _this.checkGlobalResult[index] : '',
                bidoEquipmentDTO: asset.bidoEquipmentDTO,
                familyVariantCode: asset.bidoEquipmentDTO.familyVariantCode,
                operatorCustomerCode: asset.bidoEquipmentDTO.operatorCustomerCode,
                ownerCustomerCode: asset.bidoEquipmentDTO.ownerCustomerCode,
                pnCode: asset.bidoEquipmentDTO.pnCode,
                sn: asset.bidoEquipmentDTO.sn,
                registration: asset.bidoEquipmentDTO.registration,
                operationalStatus: asset.bidoEquipmentDTO.operationalStatus,
                equipmentDesignation: asset.bidoEquipmentDTO.equipmentDesignation,
                equipmentCode: asset.bidoEquipmentDTO.equipmentCode,
                type: asset.type,
                remainingCycles: _this.isFleetCheck ? _this.remainingCycles[index] : undefined,
                remainingHours: _this.isFleetCheck ? _this.remainingHours[index] : undefined,
                calendarLimit: _this.isFleetCheck ? _this.calendarLimit[index] : undefined
              };
              assetsRow.push(row);
            });
            this.checkGlobalResult = [];
            return assetsRow;
          };
          /*************************************************************************
           * General tab
           *************************************************************************/
          FleetFormComponent.prototype.openGeneralTab = function() {
            this.currentTabId = this.tabGeneralId;
          };
          FleetFormComponent.prototype.deleteAssets = function() {
            var _this = this;
            var partialMessageKey =
              this.assetsTableDataSource.dataSelectionCount > 1
                ? 'confirmDeleteSelectedAssets'
                : 'confirmDeleteSelectedAsset';
            this.confirmationService.confirmDelete({
              messageKey: this.getTranslateKey(partialMessageKey),
              accept: function() {
                _this.assetsTableDataSource.setData(
                  _this.assetsTableDataSource.dataSrc.filter(function(asset) {
                    return !_this.assetsTableDataSource.dataSelection.includes(asset);
                  })
                );
                _this.assetsTableDataSource.dataSelection = [];
              }
            });
          };
          FleetFormComponent.prototype.openAssetsForm = function(asset) {
            var input = {};
            if (
              asset.bidoEquipmentDTO.equipmentFunction ===
              _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_3__['AWPropertiesConstants']
                .ITEM_FAMILY_CODE_AIRCRAFT_KEY
            ) {
              input.useCaseCode =
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_4__[
                  'BidoFunctionTypeConstants'
                ].UC_FM_AIRCRAFT;
              this.getRights(input);
            } else {
              input.useCaseCode =
                _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_4__[
                  'BidoFunctionTypeConstants'
                ].UC_FM_EQUIPMENT;
              this.getRights(input);
            }
            if (!!asset.bidoEquipmentDTO.equipmentCode) {
              if (this.okForUpdate || this.okForConsult) {
                if (
                  asset.bidoEquipmentDTO.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_3__['AWPropertiesConstants']
                    .ITEM_FAMILY_CODE_AIRCRAFT_KEY
                ) {
                  this.goToAircraft(
                    asset.bidoEquipmentDTO.equipmentCode,
                    _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read
                  );
                } else if (
                  asset.bidoEquipmentDTO.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_3__['AWPropertiesConstants']
                    .ITEM_FAMILY_CODE_ENGINE_KEY
                ) {
                  this.goToEngine(
                    asset.bidoEquipmentDTO.equipmentCode,
                    _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read
                  );
                } else {
                  this.goToEquipment(
                    asset.bidoEquipmentDTO.equipmentCode,
                    _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_8__['ComponentOpenMode'].Read
                  );
                }
              }
            }
          };
          FleetFormComponent.prototype.getRights = function(input) {
            var _this = this;
            Object(rxjs__WEBPACK_IMPORTED_MODULE_1__['forkJoin'])({
              updateRights: this.fleetFormService.hasUpdateRights(input),
              displayRights: this.fleetFormService.hasDisplayRights(input)
            }).subscribe(function(result) {
              if (result.updateRights) {
                _this.okForUpdate = true;
              } else if (result.displayRights) {
                _this.okForConsult = true;
              }
            });
          };
          FleetFormComponent.prototype.goToAircraft = function(aircraftCode, openMode) {
            var labelKey = 'transaction.AircraftFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'AircraftFormComponent',
              openMode: openMode
            };
            if (!!aircraftCode) {
              var equipmentId = {
                equipmentCode: aircraftCode
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          FleetFormComponent.prototype.goToEngine = function(engineCode, openMode) {
            var labelKey = 'transaction.EngineFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'EngineFormComponent',
              openMode: openMode
            };
            if (!!engineCode) {
              var equipmentId = {
                equipmentCode: engineCode
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          FleetFormComponent.prototype.goToEquipment = function(equipmentCode, openMode) {
            var labelKey = 'transaction.EquipmentFormComponent';
            var data = {
              id: this.tabService.generateId(),
              componentId: 'EquipmentFormComponent',
              openMode: openMode
            };
            if (!!equipmentCode) {
              var equipmentId = {
                equipmentCode: equipmentCode
              };
              data.objectId = this.serializationService.serialize(equipmentId);
            }
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          /*************************************************************************
           * Dialog Search Customer
           *************************************************************************/
          FleetFormComponent.prototype.setSelectedBusinessPartner = function(event) {
            if (Object.keys(event).length === 0) {
              this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');
            }
            this.fleet.customerCode = event.customerCode;
            if (!!event.customerName) {
              this.customerName = event.customerName;
            }
          };
          /*************************************************************************
           * Asset selection popup
           *************************************************************************/
          FleetFormComponent.prototype.addAsset = function() {
            this.showAssetSelectionDialog = true;
          };
          FleetFormComponent.prototype.onAddAsset = function(asset) {
            var searchInDisplayedTable = this.assetsTableDataSource.dataSrc.find(function(value) {
              return value.bidoEquipmentDTO.equipmentCode === asset.bidoEquipmentDTO.equipmentCode;
            });
            var assets = [];
            assets.push(asset);
            if (!searchInDisplayedTable) {
              var modifiedAsset = this.setBidoEquipmentTableDtoRootProperties(assets)[0];
              _shared_utils_label_value_utils__WEBPACK_IMPORTED_MODULE_18__['LabelValueUtils'].stringValueToLabel(
                modifiedAsset,
                'type',
                this.functions
              );
              _shared_utils_label_value_utils__WEBPACK_IMPORTED_MODULE_18__['LabelValueUtils'].stringValueToLabel(
                modifiedAsset,
                'operationalStatus',
                this.operationalStatuses
              );
              this.assetsTableDataSource.addData([modifiedAsset]);
            } else {
              this.messageService.showWarningMessage(this.getTranslateKey('equipmentAlreadyInFleet'));
            }
          };
          FleetFormComponent.prototype.loadFunctions = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_7__['GenericPropertyConstants']
                  .ITEM_FAMILY_CODE_MAP
              )
              .subscribe(
                function(results) {
                  _this.functions = results || [];
                },
                function() {
                  _this.messageService.showErrorMessage(_this.getComponentName() + '.errorOnGetFunctions');
                }
              );
          };
          FleetFormComponent.prototype.loadOperationalStatus = function() {
            var _this = this;
            this.propertiesService.getValue('getOperationalStatusMap').subscribe(
              function(results) {
                _this.operationalStatuses = results || [];
              },
              function() {
                _this.messageService.showErrorMessage(_this.getComponentName() + '.errorOnGetFunctions');
              }
            );
          };
          /*************************************************************************
           * Multiple assets selection popup
           *************************************************************************/
          FleetFormComponent.prototype.addAssetByCriteria = function() {
            this.showMultipleAssetsSelectionDialog = true;
          };
          FleetFormComponent.prototype.onAddMultipleAssets = function(criteria) {
            var _this = this;
            this.fleetFormService.findBidoEquipmentsBySearchCriteria(criteria).subscribe(function(results) {
              results.forEach(function(result) {
                var searchInDisplayedTable = _this.assetsTableDataSource.dataSrc.some(function(value) {
                  return value.bidoEquipmentDTO.equipmentCode === result.bidoEquipmentDTO.equipmentCode;
                });
                if (!searchInDisplayedTable) {
                  var assets = [];
                  assets.push(result);
                  var modifiedAsset = _this.setBidoEquipmentTableDtoRootProperties(assets)[0];
                  _shared_utils_label_value_utils__WEBPACK_IMPORTED_MODULE_18__['LabelValueUtils'].stringValueToLabel(
                    modifiedAsset,
                    'type',
                    _this.functions
                  );
                  _shared_utils_label_value_utils__WEBPACK_IMPORTED_MODULE_18__['LabelValueUtils'].stringValueToLabel(
                    modifiedAsset,
                    'operationalStatus',
                    _this.operationalStatuses
                  );
                  _this.assetsTableDataSource.addData([modifiedAsset]);
                }
              });
            });
          };
          FleetFormComponent.prototype.openStatusPopup = function() {
            this.showStatusPopup = true;
          };
          FleetFormComponent.prototype.openStatusUpdatesPopup = function() {
            this.showStatusUpdatesPopup = true;
          };
          FleetFormComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-fleet-form',
                template: __webpack_require__(
                  /*! ./fleet-form.component.html */ './src/app/main/fleet-management/fleet-form/fleet-form.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_10__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_11__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_12__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_14__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_16__['TabService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_15__['SessionService'],
                _fleet_form_service__WEBPACK_IMPORTED_MODULE_21__['FleetFormService'],
                _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_9__['ConfirmationService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_13__['PropertiesService'],
                _fleet_search_fleet_search_service__WEBPACK_IMPORTED_MODULE_20__['FleetSearchService']
              ])
            ],
            FleetFormComponent
          );
          return FleetFormComponent;
        })(_shared_types_form_page_component__WEBPACK_IMPORTED_MODULE_17__['FormPageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-form/multiple-assets-selection-popup/multiple-assets-selection-popup.component.html':
      /*!*********************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-form/multiple-assets-selection-popup/multiple-assets-selection-popup.component.html ***!
  \*********************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="column">\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".ownerCustomerCode" | translate }}</label>\r\n\r\n          <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n            <div class="form-control-data" (click)="quickSearchOwnerBusinessPartner()">\r\n              {{ equipment.ownerCustomerCode }}\r\n            </div>\r\n\r\n            <div *ngIf="equipment.ownerCustomerCode" class="btn-clear-wrapper">\r\n              <i\r\n                class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                aria-hidden="true"\r\n                (click)="equipment.ownerCustomerCode = undefined"\r\n              ></i>\r\n            </div>\r\n            <div class="btn-search-wrapper">\r\n              <i\r\n                class="fa fa-fw fa-search aw-icon btn-search"\r\n                aria-hidden="true"\r\n                (click)="quickSearchOwnerBusinessPartner()"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".operatorCustomerCode" | translate }}</label>\r\n\r\n          <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n            <div class="form-control-data" (click)="quickSearchOperatorBusinessPartner()">\r\n              {{ equipment.operatorCustomerCode }}\r\n            </div>\r\n\r\n            <div *ngIf="equipment.operatorCustomerCode" class="btn-clear-wrapper">\r\n              <i\r\n                class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                aria-hidden="true"\r\n                (click)="equipment.operatorCustomerCode = undefined"\r\n              ></i>\r\n            </div>\r\n            <div class="btn-search-wrapper">\r\n              <i\r\n                class="fa fa-fw fa-search aw-icon btn-search"\r\n                aria-hidden="true"\r\n                (click)="quickSearchOperatorBusinessPartner()"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".familyVariantCode" | translate }}</label>\r\n\r\n          <div class="form-control">\r\n            <p-dropdown\r\n              class="aw-dropdown fixed-width"\r\n              [options]="familyVariants"\r\n              [showClear]="true"\r\n              placeholder="&nbsp;"\r\n              [(ngModel)]="equipment.familyVariantCode"\r\n              appendTo="body"\r\n            ></p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".equipmentFunction" | translate }}</label>\r\n\r\n          <div class="form-control">\r\n            <p-dropdown\r\n              class="aw-dropdown fixed-width"\r\n              [options]="functions"\r\n              [showClear]="true"\r\n              placeholder="&nbsp;"\r\n              [(ngModel)]="equipment.equipmentFunction"\r\n              appendTo="body"\r\n            ></p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".pnCode" | translate }}</label>\r\n\r\n          <div class="form-control"><input type="text" class="aw-input" [(ngModel)]="equipment.pnCode" /></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button *ngIf="isReadOpenMode" type="button" mat-raised-button (click)="cancel()">\r\n      <span>{{ "global.close" | translate }}</span>\r\n    </button>\r\n\r\n    <button *ngIf="!isReadOpenMode" type="button" mat-raised-button (click)="cancel()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n\r\n    <button *ngIf="!isReadOpenMode" color="primary" type="button" mat-raised-button (click)="add()">\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n\r\n<aw-dialog-search-customer\r\n  *ngIf="showQuickSearchOwnerBusinessPartnerPopup"\r\n  [(display)]="showQuickSearchOwnerBusinessPartnerPopup"\r\n  [customer-code]="customerCode"\r\n  (onSelected)="setSelectedOwner($event)"\r\n></aw-dialog-search-customer>\r\n\r\n<aw-dialog-search-customer\r\n  *ngIf="showQuickSearchOperatorBusinessPartnerPopup"\r\n  [(display)]="showQuickSearchOperatorBusinessPartnerPopup"\r\n  [customer-code]="customerCode"\r\n  (onSelected)="setSelectedOperator($event)"\r\n></aw-dialog-search-customer>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-form/multiple-assets-selection-popup/multiple-assets-selection-popup.component.ts':
      /*!*******************************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-form/multiple-assets-selection-popup/multiple-assets-selection-popup.component.ts ***!
  \*******************************************************************************************************************************/
      /*! exports provided: MultipleAssetsSelectionPopupComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'MultipleAssetsSelectionPopupComponent',
          function() {
            return MultipleAssetsSelectionPopupComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        /* harmony import */ var _fleet_form_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../fleet-form.service */ './src/app/main/fleet-management/fleet-form/fleet-form.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var MultipleAssetsSelectionPopupComponent = /** @class */ (function(_super) {
          __extends(MultipleAssetsSelectionPopupComponent, _super);
          function MultipleAssetsSelectionPopupComponent(fleetFormService, propertiesService, messageService) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Write,
                'MultipleAssetsSelectionPopupComponent'
              ) || this;
            _this.fleetFormService = fleetFormService;
            _this.propertiesService = propertiesService;
            _this.messageService = messageService;
            _this.onAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.showQuickSearchOwnerBusinessPartnerPopup = false;
            _this.showQuickSearchOperatorBusinessPartnerPopup = false;
            _this.familyVariants = [];
            _this.functions = [];
            _this.equipment = {};
            return _this;
          }
          MultipleAssetsSelectionPopupComponent.prototype.ngOnInit = function() {
            this.loadFamilyVariants();
            this.loadFunctions();
          };
          MultipleAssetsSelectionPopupComponent.prototype.add = function() {
            if (!this.enableAdd()) {
              this.messageService.showWarningMessage(this.getComponentName() + '.fillTwoCriteria');
            } else {
              if (!!this.equipment) {
                this.onAdded.emit(this.equipment);
                this.display = false;
              } else {
                _super.prototype.throwUnboundLocalError.call(this, 'add', 'this.equipment');
              }
            }
          };
          MultipleAssetsSelectionPopupComponent.prototype.cancel = function() {
            this.display = false;
          };
          MultipleAssetsSelectionPopupComponent.prototype.quickSearchOwnerBusinessPartner = function() {
            this.showQuickSearchOwnerBusinessPartnerPopup = true;
          };
          MultipleAssetsSelectionPopupComponent.prototype.quickSearchOperatorBusinessPartner = function() {
            this.showQuickSearchOperatorBusinessPartnerPopup = true;
          };
          MultipleAssetsSelectionPopupComponent.prototype.loadFamilyVariants = function() {
            var _this = this;
            this.fleetFormService.findBireVariantVersionsByFamilyFunctionAlternative().subscribe(
              function(results) {
                results.forEach(function(result) {
                  _this.familyVariants.push(result.labelValue);
                });
              },
              function() {
                _this.messageService.showErrorMessage(_this.getComponentName() + '.errorOnGetFamilyVariants');
              }
            );
          };
          MultipleAssetsSelectionPopupComponent.prototype.loadFunctions = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_1__['GenericPropertyConstants']
                  .ITEM_FAMILY_CODE_MAP
              )
              .subscribe(
                function(results) {
                  _this.functions = results || [];
                },
                function() {
                  _this.messageService.showErrorMessage(_this.getComponentName() + '.errorOnGetFunctions');
                }
              );
          };
          MultipleAssetsSelectionPopupComponent.prototype.setSelectedOwner = function(event) {
            if (!!this.equipment) {
              this.equipment.ownerCustomerCode = event.customerCode;
            } else {
              _super.prototype.throwUnboundLocalError.call(this, 'setSelectedOwner', 'this.equipment');
            }
          };
          MultipleAssetsSelectionPopupComponent.prototype.setSelectedOperator = function(event) {
            if (!!this.equipment) {
              this.equipment.operatorCustomerCode = event.customerCode;
            } else {
              _super.prototype.throwUnboundLocalError.call(this, 'setSelectedOperator', 'this.equipment');
            }
          };
          MultipleAssetsSelectionPopupComponent.prototype.isUndefinedAndNull = function(property) {
            var value = !!property ? 1 : 0;
            return value;
          };
          MultipleAssetsSelectionPopupComponent.prototype.enableAdd = function() {
            var returnValue = false;
            if (!!this.equipment) {
              var pnCode = this.equipment.pnCode !== undefined && this.equipment.pnCode.trim() !== '' ? 1 : 0;
              this.id =
                this.isUndefinedAndNull(this.equipment.ownerCustomerCode) +
                this.isUndefinedAndNull(this.equipment.operatorCustomerCode) +
                this.isUndefinedAndNull(this.equipment.familyVariantCode) +
                this.isUndefinedAndNull(this.equipment.equipmentFunction) +
                pnCode;
              var limit = 2;
              if (this.id >= limit) {
                this.id = 0;
                returnValue = true;
              } else {
                this.id = 0;
                returnValue = false;
              }
            } else {
              _super.prototype.throwUnboundLocalError.call(this, 'enableAdd', 'this.equipment');
            }
            return returnValue;
          };
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            MultipleAssetsSelectionPopupComponent.prototype,
            'onAdded',
            void 0
          );
          MultipleAssetsSelectionPopupComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-multiple-assets-selection-popup',
                template: __webpack_require__(
                  /*! ./multiple-assets-selection-popup.component.html */ './src/app/main/fleet-management/fleet-form/multiple-assets-selection-popup/multiple-assets-selection-popup.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _fleet_form_service__WEBPACK_IMPORTED_MODULE_6__['FleetFormService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_4__['PropertiesService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_3__['MessageService']
              ])
            ],
            MultipleAssetsSelectionPopupComponent
          );
          return MultipleAssetsSelectionPopupComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_5__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-management.module.ts':
      /*!******************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-management.module.ts ***!
  \******************************************************************/
      /*! exports provided: FleetManagementModule */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'FleetManagementModule', function() {
          return FleetManagementModule;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var primeng_calendar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! primeng/calendar */ './node_modules/primeng/calendar.js'
        );
        /* harmony import */ var primeng_calendar__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_calendar__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var primeng_chart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! primeng/chart */ './node_modules/primeng/chart.js'
        );
        /* harmony import */ var primeng_chart__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_chart__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var primeng_checkbox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! primeng/checkbox */ './node_modules/primeng/checkbox.js'
        );
        /* harmony import */ var primeng_checkbox__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_checkbox__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var primeng_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! primeng/dialog */ './node_modules/primeng/dialog.js'
        );
        /* harmony import */ var primeng_dialog__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_dialog__WEBPACK_IMPORTED_MODULE_4__
        );
        /* harmony import */ var primeng_dropdown__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! primeng/dropdown */ './node_modules/primeng/dropdown.js'
        );
        /* harmony import */ var primeng_dropdown__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_dropdown__WEBPACK_IMPORTED_MODULE_5__
        );
        /* harmony import */ var primeng_fileupload__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! primeng/fileupload */ './node_modules/primeng/fileupload.js'
        );
        /* harmony import */ var primeng_fileupload__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_fileupload__WEBPACK_IMPORTED_MODULE_6__
        );
        /* harmony import */ var primeng_inputswitch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! primeng/inputswitch */ './node_modules/primeng/inputswitch.js'
        );
        /* harmony import */ var primeng_inputswitch__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_inputswitch__WEBPACK_IMPORTED_MODULE_7__
        );
        /* harmony import */ var primeng_inputtextarea__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! primeng/inputtextarea */ './node_modules/primeng/inputtextarea.js'
        );
        /* harmony import */ var primeng_inputtextarea__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_inputtextarea__WEBPACK_IMPORTED_MODULE_8__
        );
        /* harmony import */ var primeng_keyfilter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! primeng/keyfilter */ './node_modules/primeng/keyfilter.js'
        );
        /* harmony import */ var primeng_keyfilter__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_keyfilter__WEBPACK_IMPORTED_MODULE_9__
        );
        /* harmony import */ var primeng_message__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! primeng/message */ './node_modules/primeng/message.js'
        );
        /* harmony import */ var primeng_message__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_message__WEBPACK_IMPORTED_MODULE_10__
        );
        /* harmony import */ var primeng_overlaypanel__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! primeng/overlaypanel */ './node_modules/primeng/overlaypanel.js'
        );
        /* harmony import */ var primeng_overlaypanel__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_overlaypanel__WEBPACK_IMPORTED_MODULE_11__
        );
        /* harmony import */ var primeng_radiobutton__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! primeng/radiobutton */ './node_modules/primeng/radiobutton.js'
        );
        /* harmony import */ var primeng_radiobutton__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_radiobutton__WEBPACK_IMPORTED_MODULE_12__
        );
        /* harmony import */ var primeng_selectbutton__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! primeng/selectbutton */ './node_modules/primeng/selectbutton.js'
        );
        /* harmony import */ var primeng_selectbutton__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_selectbutton__WEBPACK_IMPORTED_MODULE_13__
        );
        /* harmony import */ var primeng_splitbutton__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! primeng/splitbutton */ './node_modules/primeng/splitbutton.js'
        );
        /* harmony import */ var primeng_splitbutton__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_splitbutton__WEBPACK_IMPORTED_MODULE_14__
        );
        /* harmony import */ var primeng_table__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! primeng/table */ './node_modules/primeng/table.js'
        );
        /* harmony import */ var primeng_table__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_table__WEBPACK_IMPORTED_MODULE_15__
        );
        /* harmony import */ var primeng_tooltip__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! primeng/tooltip */ './node_modules/primeng/tooltip.js'
        );
        /* harmony import */ var primeng_tooltip__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_tooltip__WEBPACK_IMPORTED_MODULE_16__
        );
        /* harmony import */ var primeng_treetable__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! primeng/treetable */ './node_modules/primeng/treetable.js'
        );
        /* harmony import */ var primeng_treetable__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_treetable__WEBPACK_IMPORTED_MODULE_17__
        );
        /* harmony import */ var primeng_tristatecheckbox__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! primeng/tristatecheckbox */ './node_modules/primeng/tristatecheckbox.js'
        );
        /* harmony import */ var primeng_tristatecheckbox__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_tristatecheckbox__WEBPACK_IMPORTED_MODULE_18__
        );
        /* harmony import */ var _shared_angular_common_shared_module__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ../../shared/angular-common-shared.module */ './src/app/shared/angular-common-shared.module.ts'
        );
        /* harmony import */ var _shared_angular_generic_templates_shared_module__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
          /*! ../../shared/angular-generic-templates-shared-module */ './src/app/shared/angular-generic-templates-shared-module.ts'
        );
        /* harmony import */ var _shared_app_common_shared_module__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
          /*! ../../shared/app-common-shared.module */ './src/app/shared/app-common-shared.module.ts'
        );
        /* harmony import */ var _shared_components_ata_code_input_ata_code_input_module__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
          /*! ../../shared/components/ata-code-input/ata-code-input.module */ './src/app/shared/components/ata-code-input/ata-code-input.module.ts'
        );
        /* harmony import */ var _shared_components_component_sidebar_component_sidebar_mdule__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
          /*! ../../shared/components/component-sidebar/component-sidebar.mdule */ './src/app/shared/components/component-sidebar/component-sidebar.mdule.ts'
        );
        /* harmony import */ var _shared_components_dialog_bido_customer_dialog_bido_customer_module__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
          /*! ../../shared/components/dialog-bido-customer/dialog-bido-customer.module */ './src/app/shared/components/dialog-bido-customer/dialog-bido-customer.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_bire_document_dialog_bire_document_module__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
          /*! ../../shared/components/dialog-bire-document/dialog-bire-document.module */ './src/app/shared/components/dialog-bire-document/dialog-bire-document.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_equipment_list_dialog_equipment_list_module__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
          /*! ../../shared/components/dialog-equipment-list/dialog-equipment-list.module */ './src/app/shared/components/dialog-equipment-list/dialog-equipment-list.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_measure_report_dialog_measure_report_module__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
          /*! ../../shared/components/dialog-measure-report/dialog-measure-report.module */ './src/app/shared/components/dialog-measure-report/dialog-measure-report.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_measure_update_dialog_measure_update_module__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
          /*! ../../shared/components/dialog-measure-update/dialog-measure-update.module */ './src/app/shared/components/dialog-measure-update/dialog-measure-update.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_search_customer_dialog_search_customer_module__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
          /*! ../../shared/components/dialog-search-customer/dialog-search-customer.module */ './src/app/shared/components/dialog-search-customer/dialog-search-customer.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_search_equipment_dialog_search_equipment_module__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
          /*! ../../shared/components/dialog-search-equipment/dialog-search-equipment.module */ './src/app/shared/components/dialog-search-equipment/dialog-search-equipment.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_search_event_dialog_search_event_module__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
          /*! ../../shared/components/dialog-search-event/dialog-search-event.module */ './src/app/shared/components/dialog-search-event/dialog-search-event.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_search_evolution_dialog_search_evolution_module__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
          /*! ../../shared/components/dialog-search-evolution/dialog-search-evolution.module */ './src/app/shared/components/dialog-search-evolution/dialog-search-evolution.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_search_pn_dialog_search_pn_module__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
          /*! ../../shared/components/dialog-search-pn/dialog-search-pn.module */ './src/app/shared/components/dialog-search-pn/dialog-search-pn.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_search_task_dialog_search_task_module__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
          /*! ../../shared/components/dialog-search-task/dialog-search-task.module */ './src/app/shared/components/dialog-search-task/dialog-search-task.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_status_dialog_status_module__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
          /*! ../../shared/components/dialog-status/dialog-status.module */ './src/app/shared/components/dialog-status/dialog-status.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_table_dialog_table_module__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
          /*! ../../shared/components/dialog-table/dialog-table.module */ './src/app/shared/components/dialog-table/dialog-table.module.ts'
        );
        /* harmony import */ var _shared_components_dialog_work_package_dialog_work_package_module__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
          /*! ../../shared/components/dialog-work-package/dialog-work-package.module */ './src/app/shared/components/dialog-work-package/dialog-work-package.module.ts'
        );
        /* harmony import */ var _shared_components_dynamic_attributes_history_dynamic_attributes_history_module__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
          /*! ../../shared/components/dynamic-attributes-history/dynamic-attributes-history.module */ './src/app/shared/components/dynamic-attributes-history/dynamic-attributes-history.module.ts'
        );
        /* harmony import */ var _shared_components_dynamic_attributes_dynamic_attributes_module__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
          /*! ../../shared/components/dynamic-attributes/dynamic-attributes.module */ './src/app/shared/components/dynamic-attributes/dynamic-attributes.module.ts'
        );
        /* harmony import */ var _shared_components_manage_search_criteria_manage_search_criteria_module__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
          /*! ../../shared/components/manage-search-criteria/manage-search-criteria.module */ './src/app/shared/components/manage-search-criteria/manage-search-criteria.module.ts'
        );
        /* harmony import */ var _shared_components_modal_modal_module__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
          /*! ../../shared/components/modal/modal.module */ './src/app/shared/components/modal/modal.module.ts'
        );
        /* harmony import */ var _shared_components_status_update_history_status_update_history_module__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
          /*! ../../shared/components/status-update-history/status-update-history.module */ './src/app/shared/components/status-update-history/status-update-history.module.ts'
        );
        /* harmony import */ var _shared_components_table_table_module__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
          /*! ../../shared/components/table/table.module */ './src/app/shared/components/table/table.module.ts'
        );
        /* harmony import */ var _shared_types_api_types_mail_api__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
          /*! ../../shared/types/api-types/mail.api */ './src/app/shared/types/api-types/mail.api.ts'
        );
        /* harmony import */ var _dynamic_component_loader_dynamic_component_loader_module__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
          /*! ../dynamic-component-loader/dynamic-component-loader.module */ './src/app/main/dynamic-component-loader/dynamic-component-loader.module.ts'
        );
        /* harmony import */ var _maintenance_work_package_form_popups_dialog_work_order_edition_dialog_work_order_edition_service__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
          /*! ../maintenance/work-package/form/popups/dialog-work-order-edition/dialog-work-order-edition.service */ './src/app/main/maintenance/work-package/form/popups/dialog-work-order-edition/dialog-work-order-edition.service.ts'
        );
        /* harmony import */ var _asset_log_form_asset_log_form_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
          /*! ./asset-log/form/asset-log-form.component */ './src/app/main/fleet-management/asset-log/form/asset-log-form.component.ts'
        );
        /* harmony import */ var _asset_log_form_asset_log_form_service__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(
          /*! ./asset-log/form/asset-log-form.service */ './src/app/main/fleet-management/asset-log/form/asset-log-form.service.ts'
        );
        /* harmony import */ var _asset_log_form_asset_log_table_remaining_values_aseet_log_table_remaining_values_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(
          /*! ./asset-log/form/asset-log-table-remaining-values/aseet-log-table-remaining-values.component */ './src/app/main/fleet-management/asset-log/form/asset-log-table-remaining-values/aseet-log-table-remaining-values.component.ts'
        );
        /* harmony import */ var _asset_maintenance_plan_asset_dialog_task_counters_asset_dialog_task_counters_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(
          /*! ./asset-maintenance-plan/asset-dialog-task-counters/asset-dialog-task-counters.component */ './src/app/main/fleet-management/asset-maintenance-plan/asset-dialog-task-counters/asset-dialog-task-counters.component.ts'
        );
        /* harmony import */ var _asset_maintenance_plan_asset_maintenance_plan_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(
          /*! ./asset-maintenance-plan/asset-maintenance-plan.component */ './src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.component.ts'
        );
        /* harmony import */ var _asset_maintenance_plan_asset_maintenance_plan_service__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(
          /*! ./asset-maintenance-plan/asset-maintenance-plan.service */ './src/app/main/fleet-management/asset-maintenance-plan/asset-maintenance-plan.service.ts'
        );
        /* harmony import */ var _asset_maintenance_plan_asset_mp_report_popup_form_asset_mp_report_popup_form_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(
          /*! ./asset-maintenance-plan/asset-mp-report-popup-form/asset-mp-report-popup-form.component */ './src/app/main/fleet-management/asset-maintenance-plan/asset-mp-report-popup-form/asset-mp-report-popup-form.component.ts'
        );
        /* harmony import */ var _asset_maintenance_plan_task_report_popup_form_task_report_popup_form_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(
          /*! ./asset-maintenance-plan/task-report-popup-form/task-report-popup-form.component */ './src/app/main/fleet-management/asset-maintenance-plan/task-report-popup-form/task-report-popup-form.component.ts'
        );
        /* harmony import */ var _asset_measure_log_form_asset_measure_log_form_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(
          /*! ./asset-measure-log/form/asset-measure-log-form.component */ './src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.component.ts'
        );
        /* harmony import */ var _asset_measure_log_form_asset_measure_log_form_service__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(
          /*! ./asset-measure-log/form/asset-measure-log-form.service */ './src/app/main/fleet-management/asset-measure-log/form/asset-measure-log-form.service.ts'
        );
        /* harmony import */ var _asset_measure_log_form_popups_value_form_popup_value_form_popup_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(
          /*! ./asset-measure-log/form/popups/value-form-popup/value-form-popup.component */ './src/app/main/fleet-management/asset-measure-log/form/popups/value-form-popup/value-form-popup.component.ts'
        );
        /* harmony import */ var _event_defect_form_defect_form_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(
          /*! ./event/defect-form/defect-form.component */ './src/app/main/fleet-management/event/defect-form/defect-form.component.ts'
        );
        /* harmony import */ var _event_defect_form_dialog_defect_bido_document_dialog_defect_bido_document_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(
          /*! ./event/defect-form/dialog-defect-bido-document/dialog-defect-bido-document.component */ './src/app/main/fleet-management/event/defect-form/dialog-defect-bido-document/dialog-defect-bido-document.component.ts'
        );
        /* harmony import */ var _event_defect_form_dialog_defect_component_dialog_defect_component_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(
          /*! ./event/defect-form/dialog-defect-component/dialog-defect-component.component */ './src/app/main/fleet-management/event/defect-form/dialog-defect-component/dialog-defect-component.component.ts'
        );
        /* harmony import */ var _event_defect_form_dialog_defect_task_dialog_defect_task_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(
          /*! ./event/defect-form/dialog-defect-task/dialog-defect-task.component */ './src/app/main/fleet-management/event/defect-form/dialog-defect-task/dialog-defect-task.component.ts'
        );
        /* harmony import */ var _event_event_create_dialog_add_param_value_dialog_add_param_value_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(
          /*! ./event/event-create/dialog-add-param-value/dialog-add-param-value.component */ './src/app/main/fleet-management/event/event-create/dialog-add-param-value/dialog-add-param-value.component.ts'
        );
        /* harmony import */ var _event_event_create_dialog_add_symptom_dialog_add_symptom_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(
          /*! ./event/event-create/dialog-add-symptom/dialog-add-symptom.component */ './src/app/main/fleet-management/event/event-create/dialog-add-symptom/dialog-add-symptom.component.ts'
        );
        /* harmony import */ var _event_event_create_event_create_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(
          /*! ./event/event-create/event-create.component */ './src/app/main/fleet-management/event/event-create/event-create.component.ts'
        );
        /* harmony import */ var _event_event_create_event_create_service__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(
          /*! ./event/event-create/event-create.service */ './src/app/main/fleet-management/event/event-create/event-create.service.ts'
        );
        /* harmony import */ var _event_event_create_event_import_popup_event_import_popup_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(
          /*! ./event/event-create/event-import-popup/event-import-popup.component */ './src/app/main/fleet-management/event/event-create/event-import-popup/event-import-popup.component.ts'
        );
        /* harmony import */ var _event_event_search_event_search_component__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(
          /*! ./event/event-search/event-search.component */ './src/app/main/fleet-management/event/event-search/event-search.component.ts'
        );
        /* harmony import */ var _event_event_service__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(
          /*! ./event/event.service */ './src/app/main/fleet-management/event/event.service.ts'
        );
        /* harmony import */ var _event_fmd_event_form_dialog_update_fde_reference_dialog_update_fde_reference_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(
          /*! ./event/fmd-event-form/dialog-update-fde-reference/dialog-update-fde-reference.component */ './src/app/main/fleet-management/event/fmd-event-form/dialog-update-fde-reference/dialog-update-fde-reference.component.ts'
        );
        /* harmony import */ var _event_fmd_event_form_fmd_event_form_dialog_business_partner_bido_document_dialog_business_partner_bido_document_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(
          /*! ./event/fmd-event-form/fmd-event-form/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component */ './src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component.ts'
        );
        /* harmony import */ var _event_fmd_event_form_fmd_event_form_fmd_event_form_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(
          /*! ./event/fmd-event-form/fmd-event-form/fmd-event-form.component */ './src/app/main/fleet-management/event/fmd-event-form/fmd-event-form/fmd-event-form.component.ts'
        );
        /* harmony import */ var _fleet_data_copy_search_fleet_data_copy_search_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(
          /*! ./fleet-data-copy-search/fleet-data-copy-search.component */ './src/app/main/fleet-management/fleet-data-copy-search/fleet-data-copy-search.component.ts'
        );
        /* harmony import */ var _fleet_data_copy_search_fleet_data_copy_search_service__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(
          /*! ./fleet-data-copy-search/fleet-data-copy-search.service */ './src/app/main/fleet-management/fleet-data-copy-search/fleet-data-copy-search.service.ts'
        );
        /* harmony import */ var _fleet_data_copy_search_popups_fleet_data_copy_popup_fleet_data_copy_popup_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(
          /*! ./fleet-data-copy-search/popups/fleet-data-copy-popup/fleet-data-copy-popup.component */ './src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-popup/fleet-data-copy-popup.component.ts'
        );
        /* harmony import */ var _fleet_data_copy_search_popups_fleet_data_copy_report_popup_fleet_data_copy_report_popup_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(
          /*! ./fleet-data-copy-search/popups/fleet-data-copy-report-popup/fleet-data-copy-report-popup.component */ './src/app/main/fleet-management/fleet-data-copy-search/popups/fleet-data-copy-report-popup/fleet-data-copy-report-popup.component.ts'
        );
        /* harmony import */ var _fleet_data_form_fleet_data_form_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(
          /*! ./fleet-data-form/fleet-data-form.component */ './src/app/main/fleet-management/fleet-data-form/fleet-data-form.component.ts'
        );
        /* harmony import */ var _fleet_data_transfer_search_dialogs_fleet_data_transfer_owner_dialog_fleet_data_transfer_owner_dialog_component__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(
          /*! ./fleet-data-transfer-search/dialogs/fleet-data-transfer-owner-dialog/fleet-data-transfer-owner-dialog.component */ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-owner-dialog/fleet-data-transfer-owner-dialog.component.ts'
        );
        /* harmony import */ var _fleet_data_transfer_search_dialogs_fleet_data_transfer_report_dialog_fleet_data_transfer_report_dialog_component__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(
          /*! ./fleet-data-transfer-search/dialogs/fleet-data-transfer-report-dialog/fleet-data-transfer-report-dialog.component */ './src/app/main/fleet-management/fleet-data-transfer-search/dialogs/fleet-data-transfer-report-dialog/fleet-data-transfer-report-dialog.component.ts'
        );
        /* harmony import */ var _fleet_data_transfer_search_fleet_data_transfer_search_component__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(
          /*! ./fleet-data-transfer-search/fleet-data-transfer-search.component */ './src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.component.ts'
        );
        /* harmony import */ var _fleet_data_transfer_search_fleet_data_transfer_search_service__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(
          /*! ./fleet-data-transfer-search/fleet-data-transfer-search.service */ './src/app/main/fleet-management/fleet-data-transfer-search/fleet-data-transfer-search.service.ts'
        );
        /* harmony import */ var _fleet_form_asset_selection_popup_asset_selection_popup_component__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(
          /*! ./fleet-form/asset-selection-popup/asset-selection-popup.component */ './src/app/main/fleet-management/fleet-form/asset-selection-popup/asset-selection-popup.component.ts'
        );
        /* harmony import */ var _fleet_form_fleet_form_component__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(
          /*! ./fleet-form/fleet-form.component */ './src/app/main/fleet-management/fleet-form/fleet-form.component.ts'
        );
        /* harmony import */ var _fleet_form_fleet_form_service__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(
          /*! ./fleet-form/fleet-form.service */ './src/app/main/fleet-management/fleet-form/fleet-form.service.ts'
        );
        /* harmony import */ var _fleet_form_multiple_assets_selection_popup_multiple_assets_selection_popup_component__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(
          /*! ./fleet-form/multiple-assets-selection-popup/multiple-assets-selection-popup.component */ './src/app/main/fleet-management/fleet-form/multiple-assets-selection-popup/multiple-assets-selection-popup.component.ts'
        );
        /* harmony import */ var _fleet_search_fleet_search_component__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(
          /*! ./fleet-search/fleet-search.component */ './src/app/main/fleet-management/fleet-search/fleet-search.component.ts'
        );
        /* harmony import */ var _fleet_search_fleet_search_service__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(
          /*! ./fleet-search/fleet-search.service */ './src/app/main/fleet-management/fleet-search/fleet-search.service.ts'
        );
        /* harmony import */ var _functional_location_assignment_functional_location_assignment_component__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(
          /*! ./functional-location-assignment/functional-location-assignment.component */ './src/app/main/fleet-management/functional-location-assignment/functional-location-assignment.component.ts'
        );
        /* harmony import */ var _functional_location_assignment_functional_location_assignment_service__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(
          /*! ./functional-location-assignment/functional-location-assignment.service */ './src/app/main/fleet-management/functional-location-assignment/functional-location-assignment.service.ts'
        );
        /* harmony import */ var _install_asset_dialog_install_asset_dialog_install_asset_component__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(
          /*! ./install-asset/dialog-install-asset/dialog-install-asset.component */ './src/app/main/fleet-management/install-asset/dialog-install-asset/dialog-install-asset.component.ts'
        );
        /* harmony import */ var _install_asset_dialog_install_report_dialog_install_report_component__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(
          /*! ./install-asset/dialog-install-report/dialog-install-report.component */ './src/app/main/fleet-management/install-asset/dialog-install-report/dialog-install-report.component.ts'
        );
        /* harmony import */ var _install_asset_install_asset_component__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(
          /*! ./install-asset/install-asset.component */ './src/app/main/fleet-management/install-asset/install-asset.component.ts'
        );
        /* harmony import */ var _install_asset_install_asset_service__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(
          /*! ./install-asset/install-asset.service */ './src/app/main/fleet-management/install-asset/install-asset.service.ts'
        );
        /* harmony import */ var _remove_asset_popups_report_popup_form_report_popup_form_component__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(
          /*! ./remove-asset/popups/report-popup-form/report-popup-form.component */ './src/app/main/fleet-management/remove-asset/popups/report-popup-form/report-popup-form.component.ts'
        );
        /* harmony import */ var _remove_asset_remove_asset_component__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(
          /*! ./remove-asset/remove-asset.component */ './src/app/main/fleet-management/remove-asset/remove-asset.component.ts'
        );
        /* harmony import */ var _remove_asset_remove_asset_service__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(
          /*! ./remove-asset/remove-asset.service */ './src/app/main/fleet-management/remove-asset/remove-asset.service.ts'
        );
        /* harmony import */ var _search_work_package_search_work_package_component__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(
          /*! ./search-work-package/search-work-package.component */ './src/app/main/fleet-management/search-work-package/search-work-package.component.ts'
        );
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __read =
          (undefined && undefined.__read) ||
          function(o, n) {
            var m = typeof Symbol === 'function' && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
              r,
              ar = [],
              e;
            try {
              while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
              e = { error: error };
            } finally {
              try {
                if (r && !r.done && (m = i['return'])) m.call(i);
              } finally {
                if (e) throw e.error;
              }
            }
            return ar;
          };
        var __spread =
          (undefined && undefined.__spread) ||
          function() {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
          };

        // import { EquipmentFormComponent } from './equipment/equipment-form/equipment-form.component';
        // import { EquipmentSearchComponent } from './equipment/equipment-search/equipment-search.component';

        var PRIMENG_MODULES = [
          primeng_calendar__WEBPACK_IMPORTED_MODULE_1__['CalendarModule'],
          primeng_checkbox__WEBPACK_IMPORTED_MODULE_3__['CheckboxModule'],
          primeng_dialog__WEBPACK_IMPORTED_MODULE_4__['DialogModule'],
          primeng_dropdown__WEBPACK_IMPORTED_MODULE_5__['DropdownModule'],
          primeng_inputtextarea__WEBPACK_IMPORTED_MODULE_8__['InputTextareaModule'],
          primeng_radiobutton__WEBPACK_IMPORTED_MODULE_12__['RadioButtonModule'],
          primeng_splitbutton__WEBPACK_IMPORTED_MODULE_14__['SplitButtonModule'],
          primeng_table__WEBPACK_IMPORTED_MODULE_15__['TableModule'],
          primeng_tooltip__WEBPACK_IMPORTED_MODULE_16__['TooltipModule'],
          primeng_tristatecheckbox__WEBPACK_IMPORTED_MODULE_18__['TriStateCheckboxModule'],
          primeng_fileupload__WEBPACK_IMPORTED_MODULE_6__['FileUploadModule'],
          primeng_keyfilter__WEBPACK_IMPORTED_MODULE_9__['KeyFilterModule'],
          primeng_overlaypanel__WEBPACK_IMPORTED_MODULE_11__['OverlayPanelModule'],
          primeng_inputswitch__WEBPACK_IMPORTED_MODULE_7__['InputSwitchModule'],
          primeng_treetable__WEBPACK_IMPORTED_MODULE_17__['TreeTableModule'],
          primeng_selectbutton__WEBPACK_IMPORTED_MODULE_13__['SelectButtonModule'],
          primeng_message__WEBPACK_IMPORTED_MODULE_10__['MessageModule'],
          primeng_chart__WEBPACK_IMPORTED_MODULE_2__['ChartModule'],
          _shared_components_dialog_measure_update_dialog_measure_update_module__WEBPACK_IMPORTED_MODULE_28__[
            'DialogMeasureUpdateModule'
          ],
          _shared_components_dialog_measure_report_dialog_measure_report_module__WEBPACK_IMPORTED_MODULE_27__[
            'DialogMeasureReportModule'
          ]
        ];
        var API = [_shared_types_api_types_mail_api__WEBPACK_IMPORTED_MODULE_44__['MailApi']];
        var COMPONENTS = [
          _fleet_form_asset_selection_popup_asset_selection_popup_component__WEBPACK_IMPORTED_MODULE_81__[
            'AssetSelectionPopupComponent'
          ],
          _event_defect_form_dialog_defect_bido_document_dialog_defect_bido_document_component__WEBPACK_IMPORTED_MODULE_59__[
            'DialogDefectBidoDocumentComponent'
          ],
          _event_defect_form_dialog_defect_component_dialog_defect_component_component__WEBPACK_IMPORTED_MODULE_60__[
            'DialogDefectComponentComponent'
          ],
          _event_defect_form_dialog_defect_task_dialog_defect_task_component__WEBPACK_IMPORTED_MODULE_61__[
            'DialogDefectTaskComponent'
          ],
          _fleet_form_multiple_assets_selection_popup_multiple_assets_selection_popup_component__WEBPACK_IMPORTED_MODULE_84__[
            'MultipleAssetsSelectionPopupComponent'
          ],
          _remove_asset_popups_report_popup_form_report_popup_form_component__WEBPACK_IMPORTED_MODULE_93__[
            'ReportPopupFormComponent'
          ],
          _fleet_data_copy_search_popups_fleet_data_copy_popup_fleet_data_copy_popup_component__WEBPACK_IMPORTED_MODULE_74__[
            'FleetDataCopyPopupComponent'
          ],
          _fleet_data_copy_search_popups_fleet_data_copy_report_popup_fleet_data_copy_report_popup_component__WEBPACK_IMPORTED_MODULE_75__[
            'FleetDataCopyReportPopupComponent'
          ],
          _fleet_data_transfer_search_dialogs_fleet_data_transfer_owner_dialog_fleet_data_transfer_owner_dialog_component__WEBPACK_IMPORTED_MODULE_77__[
            'FleetDataTransferOwnerDialogComponent'
          ],
          _fleet_data_transfer_search_dialogs_fleet_data_transfer_report_dialog_fleet_data_transfer_report_dialog_component__WEBPACK_IMPORTED_MODULE_78__[
            'FleetDataTransferReportDialogComponent'
          ],
          _install_asset_dialog_install_asset_dialog_install_asset_component__WEBPACK_IMPORTED_MODULE_89__[
            'DialogInstallAssetComponent'
          ],
          _install_asset_dialog_install_report_dialog_install_report_component__WEBPACK_IMPORTED_MODULE_90__[
            'DialogInstallReportComponent'
          ],
          _asset_maintenance_plan_asset_mp_report_popup_form_asset_mp_report_popup_form_component__WEBPACK_IMPORTED_MODULE_53__[
            'AssetMpReportPopupFormComponent'
          ],
          _asset_measure_log_form_popups_value_form_popup_value_form_popup_component__WEBPACK_IMPORTED_MODULE_57__[
            'MeasureValueFormPopupComponent'
          ],
          _asset_maintenance_plan_asset_dialog_task_counters_asset_dialog_task_counters_component__WEBPACK_IMPORTED_MODULE_50__[
            'AssetDialogTaskCountersComponent'
          ],
          _asset_log_form_asset_log_table_remaining_values_aseet_log_table_remaining_values_component__WEBPACK_IMPORTED_MODULE_49__[
            'AssetLogTableRemainingValuesComponent'
          ],
          _event_event_create_dialog_add_symptom_dialog_add_symptom_component__WEBPACK_IMPORTED_MODULE_63__[
            'DialogAddSymptomComponent'
          ],
          _event_event_create_dialog_add_param_value_dialog_add_param_value_component__WEBPACK_IMPORTED_MODULE_62__[
            'DialogAddParamValueComponent'
          ],
          _event_event_create_event_import_popup_event_import_popup_component__WEBPACK_IMPORTED_MODULE_66__[
            'EventImportPopupComponent'
          ],
          _event_fmd_event_form_fmd_event_form_dialog_business_partner_bido_document_dialog_business_partner_bido_document_component__WEBPACK_IMPORTED_MODULE_70__[
            'DialogBusinessPartnerBidoDocumentComponent'
          ],
          _fleet_data_form_fleet_data_form_component__WEBPACK_IMPORTED_MODULE_76__['FleetDataFormComponent'],
          _asset_maintenance_plan_task_report_popup_form_task_report_popup_form_component__WEBPACK_IMPORTED_MODULE_54__[
            'TaskReportPopupFormComponent'
          ]
        ];
        var DYNAMIC_COMPONENTS = [
          _asset_maintenance_plan_asset_maintenance_plan_component__WEBPACK_IMPORTED_MODULE_51__[
            'AssetMaintenancePlanComponent'
          ],
          _event_fmd_event_form_fmd_event_form_fmd_event_form_component__WEBPACK_IMPORTED_MODULE_71__[
            'FmdEventFormComponent'
          ],
          _event_defect_form_defect_form_component__WEBPACK_IMPORTED_MODULE_58__['DefectFormComponent'],
          _event_event_search_event_search_component__WEBPACK_IMPORTED_MODULE_67__['EventSearchComponent'],
          _fleet_form_fleet_form_component__WEBPACK_IMPORTED_MODULE_82__['FleetFormComponent'],
          _fleet_search_fleet_search_component__WEBPACK_IMPORTED_MODULE_85__['FleetSearchComponent'],
          _install_asset_install_asset_component__WEBPACK_IMPORTED_MODULE_91__['InstallAssetComponent'],
          _remove_asset_remove_asset_component__WEBPACK_IMPORTED_MODULE_94__['RemoveAssetComponent'],
          _fleet_data_copy_search_fleet_data_copy_search_component__WEBPACK_IMPORTED_MODULE_72__[
            'FleetDataCopySearchComponent'
          ],
          _fleet_data_transfer_search_fleet_data_transfer_search_component__WEBPACK_IMPORTED_MODULE_79__[
            'FleetDataTransferSearchComponent'
          ],
          _asset_log_form_asset_log_form_component__WEBPACK_IMPORTED_MODULE_47__['AssetLogFormComponent'],
          _asset_measure_log_form_asset_measure_log_form_component__WEBPACK_IMPORTED_MODULE_55__[
            'AssetMeasureLogFormComponent'
          ],
          _event_event_create_event_create_component__WEBPACK_IMPORTED_MODULE_64__['EventCreateComponent'],
          _functional_location_assignment_functional_location_assignment_component__WEBPACK_IMPORTED_MODULE_87__[
            'FunctionalLocationAssignmentComponent'
          ],
          _search_work_package_search_work_package_component__WEBPACK_IMPORTED_MODULE_96__[
            'SearchAllWorkPackageComponent'
          ]
        ];
        var SERVICES = [
          _asset_maintenance_plan_asset_maintenance_plan_service__WEBPACK_IMPORTED_MODULE_52__[
            'AssetMaintenancePlanService'
          ],
          _event_event_service__WEBPACK_IMPORTED_MODULE_68__['EventService'],
          _event_event_create_event_create_service__WEBPACK_IMPORTED_MODULE_65__['EventCreateService'],
          _fleet_form_fleet_form_service__WEBPACK_IMPORTED_MODULE_83__['FleetFormService'],
          _fleet_search_fleet_search_service__WEBPACK_IMPORTED_MODULE_86__['FleetSearchService'],
          _install_asset_install_asset_service__WEBPACK_IMPORTED_MODULE_92__['InstallAssetService'],
          _remove_asset_remove_asset_service__WEBPACK_IMPORTED_MODULE_95__['RemoveAssetService'],
          _fleet_data_copy_search_fleet_data_copy_search_service__WEBPACK_IMPORTED_MODULE_73__[
            'FleetDataCopySearchService'
          ],
          _fleet_data_transfer_search_fleet_data_transfer_search_service__WEBPACK_IMPORTED_MODULE_80__[
            'FleetDataTransferSearchService'
          ],
          _asset_log_form_asset_log_form_service__WEBPACK_IMPORTED_MODULE_48__['AssetLogFormService'],
          _asset_measure_log_form_asset_measure_log_form_service__WEBPACK_IMPORTED_MODULE_56__[
            'AssetMeasureLogFormService'
          ],
          _functional_location_assignment_functional_location_assignment_service__WEBPACK_IMPORTED_MODULE_88__[
            'FunctionalLocationAssignmentService'
          ],
          _maintenance_work_package_form_popups_dialog_work_order_edition_dialog_work_order_edition_service__WEBPACK_IMPORTED_MODULE_46__[
            'DialogWorkOrderEditService'
          ]
        ];
        var FleetManagementModule = /** @class */ (function() {
          function FleetManagementModule() {}
          FleetManagementModule = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['NgModule'])({
                declarations: __spread(COMPONENTS, DYNAMIC_COMPONENTS, [
                  _event_fmd_event_form_fmd_event_form_fmd_event_form_component__WEBPACK_IMPORTED_MODULE_71__[
                    'FmdEventFormComponent'
                  ],
                  _event_fmd_event_form_dialog_update_fde_reference_dialog_update_fde_reference_component__WEBPACK_IMPORTED_MODULE_69__[
                    'DialogUpdateFdeReferenceComponent'
                  ]
                ]),
                imports: __spread(
                  [
                    _shared_angular_common_shared_module__WEBPACK_IMPORTED_MODULE_19__['AngularCommonSharedModule'],
                    _shared_angular_generic_templates_shared_module__WEBPACK_IMPORTED_MODULE_20__[
                      'AngularGenericTemplatesSharedModule'
                    ],
                    _shared_app_common_shared_module__WEBPACK_IMPORTED_MODULE_21__['AppCommonSharedModule'],
                    _shared_components_manage_search_criteria_manage_search_criteria_module__WEBPACK_IMPORTED_MODULE_40__[
                      'ManageSearchCriteriaModule'
                    ],
                    _shared_components_modal_modal_module__WEBPACK_IMPORTED_MODULE_41__['ModalModule'],
                    _shared_components_ata_code_input_ata_code_input_module__WEBPACK_IMPORTED_MODULE_22__[
                      'AtaCodeInputModule'
                    ],
                    _shared_components_dialog_bido_customer_dialog_bido_customer_module__WEBPACK_IMPORTED_MODULE_24__[
                      'DialogBidoCustomerModule'
                    ],
                    _shared_components_dialog_equipment_list_dialog_equipment_list_module__WEBPACK_IMPORTED_MODULE_26__[
                      'DialogEquipmentListModule'
                    ],
                    _shared_components_dialog_search_customer_dialog_search_customer_module__WEBPACK_IMPORTED_MODULE_29__[
                      'DialogSearchCustomerModule'
                    ],
                    _shared_components_dialog_search_equipment_dialog_search_equipment_module__WEBPACK_IMPORTED_MODULE_30__[
                      'DialogSearchEquipmentModule'
                    ],
                    _shared_components_dialog_search_evolution_dialog_search_evolution_module__WEBPACK_IMPORTED_MODULE_32__[
                      'DialogSearchEvolutionModule'
                    ],
                    _shared_components_dialog_search_pn_dialog_search_pn_module__WEBPACK_IMPORTED_MODULE_33__[
                      'DialogSearchPnModule'
                    ],
                    _shared_components_status_update_history_status_update_history_module__WEBPACK_IMPORTED_MODULE_42__[
                      'StatusUpdateHistoryModule'
                    ],
                    _shared_components_dialog_status_dialog_status_module__WEBPACK_IMPORTED_MODULE_35__[
                      'DialogStatusModule'
                    ],
                    _shared_components_dialog_table_dialog_table_module__WEBPACK_IMPORTED_MODULE_36__[
                      'DialogTableModule'
                    ],
                    _shared_components_dialog_work_package_dialog_work_package_module__WEBPACK_IMPORTED_MODULE_37__[
                      'DialogWorkPackageModule'
                    ],
                    _shared_components_dynamic_attributes_history_dynamic_attributes_history_module__WEBPACK_IMPORTED_MODULE_38__[
                      'DynamicAttributesHistoryModule'
                    ],
                    _shared_components_dialog_search_task_dialog_search_task_module__WEBPACK_IMPORTED_MODULE_34__[
                      'DialogSearchTaskModule'
                    ],
                    _shared_components_dynamic_attributes_dynamic_attributes_module__WEBPACK_IMPORTED_MODULE_39__[
                      'DynamicAttributesModule'
                    ],
                    _shared_components_dialog_search_event_dialog_search_event_module__WEBPACK_IMPORTED_MODULE_31__[
                      'DialogSearchEventModule'
                    ],
                    _shared_components_component_sidebar_component_sidebar_mdule__WEBPACK_IMPORTED_MODULE_23__[
                      'ComponentSidebarModule'
                    ],
                    _shared_components_dialog_bire_document_dialog_bire_document_module__WEBPACK_IMPORTED_MODULE_25__[
                      'DialogBireDocumentModule'
                    ],
                    _shared_components_table_table_module__WEBPACK_IMPORTED_MODULE_43__['TableModule'],
                    _dynamic_component_loader_dynamic_component_loader_module__WEBPACK_IMPORTED_MODULE_45__[
                      'DynamicComponentLoaderModule'
                    ].forChild(DYNAMIC_COMPONENTS)
                  ],
                  PRIMENG_MODULES
                ),
                providers: __spread(API, SERVICES)
              })
            ],
            FleetManagementModule
          );
          return FleetManagementModule;
        })();

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-search/fleet-search.component.html':
      /*!********************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-search/fleet-search.component.html ***!
  \********************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div class="page-subtitle">- {{ "global.search" | translate }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-actions">\r\n    <button type="button" mat-raised-button (click)="openNewFleet()" *ngIf="hasUpdateAccessRight">\r\n      {{ "global.create" | translate }}\r\n    </button>\r\n    <button\r\n      id="actions"\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show All Actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n\r\n    <mat-menu #actions="matMenu">\r\n      <button id="favorites" mat-menu-item (click)="updateFavoriteState()">\r\n        {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <div class="grid-row">\r\n        <div class="grid-cell--12">\r\n          <div class="grid-cell grid-cell--container">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 class="grid-cell-title">{{ "global.search" | translate }}</h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <div class="column">\r\n                <div class="row search-criteria-header">\r\n                  <aw-manage-search-criteria\r\n                    [componentId]="FLEET_SEARCH_CRITERIA_ID"\r\n                    (onSelected)="loadSearchCriteria($event)"\r\n                    (onSavedAsked)="saveSearchCriteriaAsked()"\r\n                    [objectFromPage]="criteriaToSave"\r\n                  ></aw-manage-search-criteria>\r\n                </div>\r\n\r\n                <div class="row">\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ componentData.componentId + ".fleetCode" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <input type="text" class="aw-input" [(ngModel)]="searchObject.fleetCode" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ componentData.componentId + ".fleetName" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <input type="text" class="aw-input" [(ngModel)]="searchObject.fleetName" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ componentData.componentId + ".customerCode" | translate }} </label>\r\n\r\n                    <div class="form-control form-control-with-modal" [ngClass]="{ disabled: isReadOpenMode }">\r\n                      <div class="form-control-data" (click)="quickSearchBusinessPartner()">\r\n                        {{ searchObject.customerCode }}\r\n                      </div>\r\n\r\n                      <div *ngIf="searchObject.customerCode" class="btn-clear-wrapper">\r\n                        <i\r\n                          class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                          aria-hidden="true"\r\n                          (click)="searchObject.customerCode = undefined"\r\n                        ></i>\r\n                      </div>\r\n                      <div class="btn-search-wrapper">\r\n                        <i\r\n                          class="fa fa-fw fa-search aw-icon btn-search"\r\n                          aria-hidden="true"\r\n                          (click)="quickSearchBusinessPartner()"\r\n                        ></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group"></div>\r\n                </div>\r\n\r\n                <div class="row search-criteria-footer">\r\n                  <div class="search-actions">\r\n                    <button\r\n                      type="button"\r\n                      mat-raised-button\r\n                      class="btn-with-spinner"\r\n                      (click)="search()"\r\n                      appKeyPress\r\n                      color="primary"\r\n                      [keyCode]="\'Enter\'"\r\n                      (keyPress)="search()"\r\n                    >\r\n                      <span *ngIf="isLoading" class="lds-hourglass"></span>\r\n                      {{ "global.toSearch" | translate }}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="grid-row">\r\n        <div class="grid-cell--12">\r\n          <!-- fleet table -->\r\n\r\n          <div #resultsContainerAnchor class="grid-cell grid-cell--container">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 class="grid-cell-title">\r\n                  {{ "global.results" | translate }} ({{ fleetTableDataSource ? fleetTableDataSource.dataCount : 0 }})\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <a-table [dataSource]="fleetTableDataSource">\r\n                <ng-template tableActionsDef>\r\n                  <button\r\n                    *ngIf="\r\n                      fleetTableDataSource && fleetTableDataSource.hasData && !fleetTableDataSource.hasDataSelection\r\n                    "\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="exportTable()"\r\n                  >\r\n                    {{ "global.export" | translate }}\r\n                  </button>\r\n\r\n                  <button\r\n                    *ngIf="hasManageAccessRight && fleetTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    color="warn"\r\n                    (click)="deleteFleets()"\r\n                  >\r\n                    {{ "global.delete" | translate }}\r\n                  </button>\r\n\r\n                  <button\r\n                    *ngIf="fleetTableDataSource.hasDataSelection"\r\n                    type="button"\r\n                    mat-raised-button\r\n                    (click)="openSelectedFleets()"\r\n                  >\r\n                    {{ "global.open" | translate }}\r\n                  </button>\r\n                </ng-template>\r\n                <ng-template columnDef="fleetCode" let-rowData="rowData">\r\n                  <a (click)="openFleetLink(rowData)"> {{ rowData.fleetCode }} </a>\r\n                </ng-template>\r\n                <ng-template columnDef="isOperator" let-rowData="rowData">\r\n                  <i\r\n                    *ngIf="rowData.isOperator !== null && rowData.isOperator"\r\n                    class="fa fa-fw fa-check"\r\n                    aria-hidden="true"\r\n                  ></i>\r\n                </ng-template>\r\n                <ng-template columnDef="isOwner" let-rowData="rowData">\r\n                  <i\r\n                    *ngIf="rowData.isOwner !== null && rowData.isOwner"\r\n                    class="fa fa-fw fa-check"\r\n                    aria-hidden="true"\r\n                  ></i>\r\n                </ng-template>\r\n              </a-table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <aw-dialog-search-customer\r\n    *ngIf="showQuickSearchBusinessPartnerPopup"\r\n    [(display)]="showQuickSearchBusinessPartnerPopup"\r\n    [customer-code]="searchObject.customerCode"\r\n    (onSelected)="setSelectedBusinessPartner($event)"\r\n  ></aw-dialog-search-customer>\r\n</div>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-search/fleet-search.component.ts':
      /*!******************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-search/fleet-search.component.ts ***!
  \******************************************************************************/
      /*! exports provided: FleetSearchComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'FleetSearchComponent', function() {
          return FleetSearchComponent;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../shared/components/table/table-data-source */ './src/app/shared/components/table/table-data-source.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/services/confirmation.service */ './src/app/shared/services/confirmation.service.ts'
        );
        /* harmony import */ var _shared_services_export_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/services/export.service */ './src/app/shared/services/export.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_page_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../shared/types/page-component */ './src/app/shared/types/page-component.ts'
        );
        /* harmony import */ var _fleet_search_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ./fleet-search.service */ './src/app/main/fleet-management/fleet-search/fleet-search.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetSearchComponent = /** @class */ (function(_super) {
          __extends(FleetSearchComponent, _super);
          function FleetSearchComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService,
            fleetSearchService,
            confirmationService,
            exportService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Write,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService
              ) || this;
            _this.fleetSearchService = fleetSearchService;
            _this.confirmationService = confirmationService;
            _this.exportService = exportService;
            _this.FLEET_SEARCH_CRITERIA_ID = '7';
            _this.isLoading = false;
            _this.isReadOnlyForm = false;
            _this.showQuickSearchBusinessPartnerPopup = false;
            _this.searchObject = {};
            _this.resultsTableExportName = 'fleet-list';
            _this.initFleetTableDataSource();
            return _this;
          }
          FleetSearchComponent.prototype.getComponentName = function() {
            return 'FleetSearchComponent';
          };
          FleetSearchComponent.prototype.ngOnInit = function() {
            _super.prototype.ngOnInit.call(this);
            this.displayComponentContext('global.search', true);
          };
          FleetSearchComponent.prototype.initFleetTableDataSource = function() {
            this.fleetTableDataSource = new _shared_components_table_table_data_source__WEBPACK_IMPORTED_MODULE_1__[
              'TableDataSource'
            ]({
              allowMultiSelect: true,
              columns: [
                {
                  field: 'fleetCode',
                  translateKey: this.getTranslateKey('fleetCode')
                },
                {
                  field: 'fleetName',
                  translateKey: this.getTranslateKey('fleetName')
                },
                {
                  field: 'customerCode',
                  translateKey: this.getTranslateKey('customerCode')
                }
              ],
              data: []
            });
          };
          FleetSearchComponent.prototype.quickSearchBusinessPartner = function() {
            this.showQuickSearchBusinessPartnerPopup = true;
          };
          FleetSearchComponent.prototype.resetResultsTable = function(table) {
            table.reset();
            table.filters = {};
          };
          FleetSearchComponent.prototype.search = function() {
            var _this = this;
            this.isLoading = true;
            this.fleetTableDataSource.setData([]);
            var bidoFleetDTO = this.searchObject;
            this.fleetSearchService.getBidoFleetsBySearchCriteria(bidoFleetDTO).subscribe(function(results) {
              if (results) {
                _this.fleetTableDataSource.setData(results.list);
              }
              _this.fleetTableDataSource.dataSelection = [];
              _this.isLoading = false;
            });
          };
          FleetSearchComponent.prototype.resetSearchCriteria = function() {
            this.criteriaName = undefined;
            this.searchObject = {};
          };
          FleetSearchComponent.prototype.loadSearchCriteria = function(event) {
            var criteria = event.criteria;
            if (!criteria) {
              this.resetSearchCriteria();
              return;
            }
            this.criteriaName = event.name;
            this.searchObject = criteria || {};
          };
          FleetSearchComponent.prototype.saveSearchCriteriaAsked = function() {
            var criteriaToSave = this.searchObject;
            this.criteriaToSave = criteriaToSave;
          };
          FleetSearchComponent.prototype.deleteFleets = function() {
            var _this = this;
            var partialMessageKey =
              this.fleetTableDataSource.dataSelectionCount > 1
                ? 'confirmDeleteSelectedFleets'
                : 'confirmDeleteSelectedFleet';
            var fleets = new Array();
            this.fleetTableDataSource.dataSelection.forEach(function(fleet) {
              if (fleet && fleet.fleetId) {
                var fleetId = {
                  fleetId: fleet.fleetId
                };
                fleets.push(fleetId);
              }
            });
            this.confirmationService.confirmDelete({
              messageKey: this.getTranslateKey(partialMessageKey),
              accept: function() {
                _this.fleetSearchService.removeBidoFleet(fleets).subscribe(
                  function(result) {
                    _this.search();
                    _this.messageService.showSuccessMessage(_this.getTranslateKey('successOnDeleteFleet'));
                  },
                  function(error) {
                    _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnDeleteFleet'));
                  }
                );
                _this.fleetTableDataSource.dataSelection = [];
                _this.search();
              }
            });
          };
          FleetSearchComponent.prototype.openFleet = function(object, openMode) {
            if (object !== null) {
              var labelKey = 'transaction.FleetFormComponent';
              var data = {
                id: this.tabService.generateId(),
                componentId: 'FleetFormComponent',
                objectId: this.serializationService.serialize(object),
                openMode: openMode
              };
              this.tabService.open(this.tabService.create(data, labelKey, true));
            } else {
              var labelKey = 'transaction.FleetFormComponent';
              var data = {
                id: this.tabService.generateId(),
                componentId: 'FleetFormComponent',
                objectId: undefined,
                openMode: openMode
              };
              this.tabService.open(this.tabService.create(data, labelKey, true));
            }
          };
          FleetSearchComponent.prototype.openFleetLink = function(fleet) {
            if (fleet) {
              if (fleet.fleetId && fleet.fleetId.length > 0) {
                this.openFleet(
                  fleet,
                  _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Read
                );
              } else {
                this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingFleetId'));
              }
            }
          };
          FleetSearchComponent.prototype.openSelectedFleets = function() {
            var _this = this;
            this.fleetTableDataSource.dataSelection.forEach(function(fleet) {
              if (fleet) {
                if (fleet.fleetId && fleet.fleetId.length > 0) {
                  _this.openFleet(
                    fleet,
                    _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Read
                  );
                } else {
                  _this.messageService.showWarningMessage(_this.getTranslateKey('errorOnMissingFleetId'));
                }
              }
            });
          };
          FleetSearchComponent.prototype.openNewFleet = function() {
            this.openFleet(
              undefined,
              _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Create
            );
          };
          FleetSearchComponent.prototype.setSelectedBusinessPartner = function(event) {
            this.searchObject.customerCode = event.customerCode;
          };
          FleetSearchComponent.prototype.exportTable = function() {
            var dataToExport = [];
            this.fleetTableDataSource.dataSrc.forEach(function(fleet) {
              var fleetDataExport = {
                fleetCode: fleet.fleetCode,
                fleetName: fleet.fleetName,
                customerCode: fleet.customerCode
              };
              dataToExport.push(fleetDataExport);
            });
            this.exportService.toExcel(dataToExport, this.resultsTableExportName, this.componentData.componentId);
          };
          FleetSearchComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-fleet-search',
                template: __webpack_require__(
                  /*! ./fleet-search.component.html */ './src/app/main/fleet-management/fleet-search/fleet-search.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_5__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_6__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_7__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_8__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_9__['TabService'],
                _fleet_search_service__WEBPACK_IMPORTED_MODULE_11__['FleetSearchService'],
                _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_3__['ConfirmationService'],
                _shared_services_export_service__WEBPACK_IMPORTED_MODULE_4__['ExportService']
              ])
            ],
            FleetSearchComponent
          );
          return FleetSearchComponent;
        })(_shared_types_page_component__WEBPACK_IMPORTED_MODULE_10__['PageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/fleet-search/fleet-search.service.ts':
      /*!****************************************************************************!*\
  !*** ./src/app/main/fleet-management/fleet-search/fleet-search.service.ts ***!
  \****************************************************************************/
      /*! exports provided: FleetSearchService */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'FleetSearchService', function() {
          return FleetSearchService;
        });
        /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */ './node_modules/@angular/common/fesm5/http.js'
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/api/fleet-management.api */ './src/app/shared/api/fleet-management.api.ts'
        );
        /* harmony import */ var _shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/http/abstract-aw-http */ './src/app/shared/http/abstract-aw-http.ts'
        );
        /* harmony import */ var _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/services/app-config.service */ './src/app/shared/services/app-config.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FleetSearchService = /** @class */ (function(_super) {
          __extends(FleetSearchService, _super);
          function FleetSearchService(http, appConfigService, fleetManagementApi) {
            var _this = _super.call(this, http, appConfigService) || this;
            _this.fleetManagementApi = fleetManagementApi;
            return _this;
          }
          FleetSearchService.prototype.getBidoFleetsBySearchCriteria = function(criteria) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findBidoFleetsBySearchCriteria, criteria);
          };
          FleetSearchService.prototype.removeBidoFleet = function(bidoFleetDTOId) {
            return _super.prototype.post.call(this, this.fleetManagementApi.removeBidoFleet, bidoFleetDTOId);
          };
          FleetSearchService = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])(),
              __metadata('design:paramtypes', [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClient'],
                _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_4__['AppConfigService'],
                _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_2__['FleetManagementApi']
              ])
            ],
            FleetSearchService
          );
          return FleetSearchService;
        })(_shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_3__['AbstractAwHttpService']);

        /***/
      },

    /***/ './src/app/main/fleet-management/functional-location-assignment/functional-location-assignment.component.html':
      /*!********************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/functional-location-assignment/functional-location-assignment.component.html ***!
  \********************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div class="page-subtitle">- {{ componentContext }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-actions">\r\n    <button *ngIf="!isSaved" class="btn-with-spinner" color="primary" type="button" mat-raised-button (click)="save()">\r\n      <span class="lds-hourglass" *ngIf="showSaveSpinner"></span>\r\n      {{ "global.save" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      id="actions"\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show all actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n\r\n    <mat-menu #actions="matMenu">\r\n      <button id="favorites" mat-menu-item (click)="updateFavoriteState()">\r\n        {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <div class="grid-row">\r\n        <div class="grid-cell--6">\r\n          <div class="grid-cell grid-cell--container grid-cell-scope">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container loading-indicator">\r\n                <div class="grid-cell-title">\r\n                  <span *ngIf="isAssetAircraft">{{ getComponentName() + ".aircraft" | translate }}</span>\r\n                  <span *ngIf="isAssetEngine">{{ getComponentName() + ".engine" | translate }}</span>\r\n                  <span *ngIf="isAssetEquipment">{{ getComponentName() + ".equipment" | translate }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <div class="column">\r\n                <div class="row">\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".designation" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <input\r\n                        type="text"\r\n                        class="aw-input"\r\n                        [(ngModel)]="bidoEquipmentDto.equipmentDesignation"\r\n                        [disabled]="true"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div *ngIf="isAssetAircraft" class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".registration" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <input\r\n                        type="text"\r\n                        class="aw-input"\r\n                        [(ngModel)]="bidoEquipmentDto.registration"\r\n                        [disabled]="true"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div *ngIf="isAssetEquipment" class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".sn" | translate }} </label>\r\n\r\n                    <div class="form-control form-control-with-actions">\r\n                      <div class="form-control-generic">\r\n                        {{ bidoEquipmentDto.sn }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div *ngIf="isAssetEngine" class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".esn" | translate }} </label>\r\n\r\n                    <div class="form-control form-control-with-actions">\r\n                      <div class="form-control-generic">\r\n                        {{ bidoEquipmentDto.sn }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class="form-group"></div>\r\n                </div>\r\n\r\n                <div class="row">\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".familyVariant" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <input\r\n                        type="text"\r\n                        class="aw-input"\r\n                        [(ngModel)]="bidoEquipmentDto.familyVariantCode"\r\n                        [disabled]="true"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div *ngIf="isAssetAircraft" class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".msn" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <div class="form-control-generic">\r\n                        {{ bidoEquipmentDto.sn }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div *ngIf="isAssetEngine || isAssetEquipment" class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".pn" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <input type="text" class="aw-input" [(ngModel)]="bidoEquipmentDto.pnCode" [disabled]="true" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".status" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <input\r\n                        type="text"\r\n                        class="aw-input"\r\n                        [(ngModel)]="equipmentOperationalStatusLabel"\r\n                        [disabled]="true"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="row">\r\n                  <div class="form-group">\r\n                    <label class="form-label"> {{ getComponentName() + ".functionLocation" | translate }} </label>\r\n\r\n                    <div class="form-control">\r\n                      <p-dropdown\r\n                        class="aw-dropdown fixed-width"\r\n                        [options]="functionalLocationList"\r\n                        [(ngModel)]="bidoFlEquipmentDTO.flCode"\r\n                        (onChange)="loadFunctionalLocationEquipmentData()"\r\n                        [disabled]="isFlToAssignReadOnly"\r\n                        [showClear]="true"\r\n                        placeholder="&nbsp;"\r\n                      >\r\n                      </p-dropdown>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="form-group required">\r\n                    <label class="form-label">\r\n                      {{ getComponentName() + ".newApplicationDate" | translate }}\r\n                    </label>\r\n\r\n                    <div class="form-control">\r\n                      <p-calendar\r\n                        showButtonBar="true"\r\n                        [monthNavigator]="true"\r\n                        [yearNavigator]="true"\r\n                        [yearRange]="sessionService.calendarYearRange"\r\n                        class="aw-calendar"\r\n                        [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                        [locale]="sessionService.calendarFormat"\r\n                        [(ngModel)]="applicationDate"\r\n                      ></p-calendar>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class="grid-cell--6">\r\n          <div class="grid-cell grid-cell--container grid-cell-summary">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container loading-indicator">\r\n                <div class="grid-cell-title">\r\n                  {{ getComponentName() + ".summary" | translate }}\r\n                  <div *ngIf="isAssetLoading" class="lds-hourglass"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content">\r\n              <div class="row">\r\n                <div *ngIf="!isAssetLoading" class="table-summary-wrapper">\r\n                  <p-table\r\n                    [resizableColumns]="true"\r\n                    class="aw-table-control-summary"\r\n                    [columns]="summaryTableColList"\r\n                    [value]="summaryTable"\r\n                  >\r\n                    <ng-template pTemplate="colgroup" let-columns>\r\n                      <colgroup>\r\n                        <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                      </colgroup>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="header" let-columns>\r\n                      <tr>\r\n                        <th\r\n                          pResizableColumn\r\n                          *ngFor="let col of columns"\r\n                          [ngSwitch]="col.field"\r\n                          [ngStyle]="{ \'text-align\': col.alignment }"\r\n                        >\r\n                          <span *ngSwitchCase="\'category\'"></span>\r\n\r\n                          <span *ngSwitchDefault> {{ "table." + col.field | translate }} </span>\r\n                        </th>\r\n                      </tr>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="body" let-columns="columns" let-rowData>\r\n                      <tr>\r\n                        <td\r\n                          *ngFor="let col of columns"\r\n                          [ngSwitch]="col.field"\r\n                          [ngStyle]="{ \'text-align\': col.alignment }"\r\n                        >\r\n                          <span *ngSwitchCase="\'nok\'" class="control-result" [ngClass]="{ nok: rowData[\'nok\'] > 0 }">\r\n                            {{ rowData[col.field] }}\r\n                          </span>\r\n\r\n                          <span\r\n                            *ngSwitchCase="\'warning\'"\r\n                            class="control-result"\r\n                            [ngClass]="{ warning: rowData[\'nok\'] == 0 && rowData[\'warning\'] > 0 }"\r\n                          >\r\n                            {{ rowData[col.field] }}\r\n                          </span>\r\n\r\n                          <span\r\n                            *ngSwitchCase="\'ok\'"\r\n                            class="control-result"\r\n                            [ngClass]="{ ok: rowData[\'nok\'] == 0 && rowData[\'warning\'] == 0 && rowData[\'ok\'] >= 0 }"\r\n                          >\r\n                            {{ rowData[col.field] }}\r\n                          </span>\r\n\r\n                          <span *ngSwitchCase="\'category\'">\r\n                            {{ getComponentName() + "." + rowData[col.field] | translate }}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </p-table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class="grid-row">\r\n        <div class="grid-cell--12">\r\n          <div class="grid-cell grid-cell--container">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 class="grid-cell-title">\r\n                  {{ getComponentName() + ".assignmentDetails" | translate }} ({{ treeRecordCount }})\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content grid-cell-content-with-section">\r\n              <div class="section">\r\n                <div class="section-content">\r\n                  <div class="row">\r\n                    <p-treeTable\r\n                      ptreetableStructure\r\n                      class="aw-tree-table2"\r\n                      [columns]="assignTableCols"\r\n                      [value]="flTreeNodes"\r\n                      [scrollable]="true"\r\n                      [resizableColumns]="true"\r\n                    >\r\n                      <ng-template pTemplate="emptymessage">\r\n                        <span *ngIf="!isAssetLoading"> &nbsp;</span>\r\n\r\n                        <div *ngIf="isAssetLoading" class="aw-table-loading-indicator">\r\n                          <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                          <div class="lds-hourglass"></div>\r\n                        </div>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="caption">\r\n                        <div class="aw-table-header">\r\n                          <div class="aw-table-global-filter">\r\n                            <label class="aw-table-global-filter-label">\r\n                              <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                            </label>\r\n\r\n                            <input\r\n                              #ptreetableStructureGlobalFilter\r\n                              class="aw-table-global-filter-input"\r\n                              type="text"\r\n                              placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                              [(ngModel)]="searchGlobalFilter"\r\n                              (ngModelChange)="filterTextWithCriteria()"\r\n                            />\r\n                          </div>\r\n\r\n                          <div *ngIf="!isAssetLoading" class="aw-table-icon-actions">\r\n                            <i\r\n                              class="fa fa-fw fa-filter aw-icon aw-icon-with-border aw-icon-with-overlay"\r\n                              aria-hidden="true"\r\n                              pTooltip="{{ \'global\' + (filtersVisible ? \'.hideFilters\' : \'.showFilters\') | translate }}"\r\n                              tooltipPosition="top"\r\n                              [ngClass]="{ active: filtersVisible }"\r\n                              (click)="opFilters.toggle($event)"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="colgroup" let-columns>\r\n                        <colgroup>\r\n                          <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                        </colgroup>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n                          <th ttResizableColumn *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n                            {{ componentData.componentId + "." + col.field | translate }}\r\n                          </th>\r\n                        </tr>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="body" let-rowNode let-rowData="rowData" let-columns="columns">\r\n                        <tr *ngIf="!rowData[\'hide\']">\r\n                          <ng-container *ngFor="let col of columns; let i = index" [ngSwitch]="col.field">\r\n                            <td\r\n                              *ngSwitchCase="\'equipment\'"\r\n                              [ngStyle]="{ \'text-align\': col.alignment, width: col.width }"\r\n                            >\r\n                              <div *ngIf="rowData[\'dropDownList\'] && rowData[\'dropDownList\'].length > 0">\r\n                                <p-dropdown\r\n                                  class="aw-dropdown fixed-width"\r\n                                  appendTo="body"\r\n                                  [options]="rowData[\'dropDownList\']"\r\n                                  [(ngModel)]="rowData[\'assetCode\']"\r\n                                  [showClear]="true"\r\n                                  placeholder="&nbsp;"\r\n                                  [style]="{ width: \'100%\' }"\r\n                                  (onChange)="checkDataValidity(rowData)"\r\n                                ></p-dropdown>\r\n                              </div>\r\n                              <div *ngIf="!rowData[\'dropDownList\'] || rowData[\'dropDownList\'].length === 0">\r\n                                {{ rowData[col.field] }}\r\n                              </div>\r\n                            </td>\r\n\r\n                            <td\r\n                              *ngSwitchCase="\'flLevel\'"\r\n                              style="white-space: pre !important"\r\n                              [ngStyle]="{\r\n                                \'text-align\': col.alignment,\r\n                                width: col.width\r\n                              }"\r\n                            >\r\n                              <p-treeTableToggler [rowNode]="rowNode" *ngIf="i == 0"></p-treeTableToggler>\r\n                              {{ rowData[col.field] }}\r\n                            </td>\r\n\r\n                            <td\r\n                              *ngSwitchCase="\'requiredQuantity\'"\r\n                              [ngStyle]="{\r\n                                \'text-align\': col.alignment,\r\n                                width: col.width,\r\n                                color: \'red\'\r\n                              }"\r\n                            >\r\n                              {{ rowData[col.field] }}\r\n                            </td>\r\n\r\n                            <td\r\n                              *ngSwitchCase="\'nominalQuantity\'"\r\n                              [ngStyle]="{\r\n                                \'text-align\': col.alignment,\r\n                                width: col.width,\r\n                                color: \'green\'\r\n                              }"\r\n                            >\r\n                              {{ rowData[col.field] }}\r\n                            </td>\r\n\r\n                            <td\r\n                              *ngSwitchCase="\'assignmentControl\'"\r\n                              [ngStyle]="{\r\n                                \'text-align\': col.alignment,\r\n                                width: col.width\r\n                              }"\r\n                            >\r\n                              <span\r\n                                *ngIf="rowData[col.field] === controlConfigConstants.ICON_GREEN"\r\n                                class="alert alert--ok"\r\n                                pTooltip="{{ getComponentName() + \'.okAssignment\' | translate }}"\r\n                                tooltipPosition="top"\r\n                              >\r\n                                {{ "global.alertOk" | translate }}\r\n                              </span>\r\n\r\n                              <span\r\n                                *ngIf="rowData[col.field] === controlConfigConstants.ICON_RED"\r\n                                class="alert alert--nok"\r\n                                pTooltip="{{ getComponentName() + \'.nokAssignment\' | translate }}"\r\n                                tooltipPosition="top"\r\n                              >\r\n                                {{ "global.alertNok" | translate }}\r\n                              </span>\r\n\r\n                              <span\r\n                                *ngIf="rowData[col.field] === controlConfigConstants.ICON_YELLOW"\r\n                                class="alert alert--warning"\r\n                                pTooltip="{{ getComponentName() + \'.warningAssignment\' | translate }}"\r\n                                tooltipPosition="top"\r\n                              >\r\n                                {{ "global.alertWarning" | translate }}\r\n                              </span>\r\n                            </td>\r\n\r\n                            <td\r\n                              *ngSwitchCase="\'complianceControl\'"\r\n                              [ngStyle]="{\r\n                                \'text-align\': col.alignment,\r\n                                width: col.width\r\n                              }"\r\n                            >\r\n                              <span\r\n                                *ngIf="rowData[col.field] === controlConfigConstants.ICON_GREEN"\r\n                                class="alert alert--ok"\r\n                                pTooltip="{{ rowData[\'alertToolTip\'] }}"\r\n                              >\r\n                                {{ "global.alertOk" | translate }}\r\n                              </span>\r\n\r\n                              <span\r\n                                *ngIf="rowData[col.field] === controlConfigConstants.ICON_RED"\r\n                                class="alert alert--nok"\r\n                                pTooltip="{{ rowData[\'alertToolTip\'] }}"\r\n                              >\r\n                                {{ "global.alertNok" | translate }}\r\n                              </span>\r\n\r\n                              <span\r\n                                *ngIf="rowData[col.field] === controlConfigConstants.ICON_YELLOW"\r\n                                class="alert alert--warning"\r\n                                pTooltip="{{ rowData[\'alertToolTip\'] }}"\r\n                              >\r\n                                {{ "global.alertWarning" | translate }}\r\n                              </span>\r\n                            </td>\r\n\r\n                            <td *ngSwitchDefault [ngStyle]="{ \'text-align\': col.alignment, width: col.width }">\r\n                              {{ rowData[col.field] }}\r\n                            </td>\r\n                          </ng-container>\r\n                        </tr>\r\n                      </ng-template>\r\n                    </p-treeTable>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="grid-row" [style.display]="unAssignEquipmentList.length === 0 ? \'none\' : \'\'">\r\n        <div class="grid-cell--12">\r\n          <div class="grid-cell grid-cell--container">\r\n            <div class="grid-cell-header">\r\n              <div class="grid-cell-title-container">\r\n                <h3 class="grid-cell-title">\r\n                  {{ getComponentName() + ".assignmentToDelete" | translate }} ({{\r\n                    unAssignEquipmentList ? unAssignEquipmentList.length : 0\r\n                  }})\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class="grid-cell-content grid-cell-content-with-section">\r\n              <div class="section">\r\n                <div class="section-content">\r\n                  <div class="row">\r\n                    <p-table\r\n                      [resizableColumns]="true"\r\n                      #ptableUnAssignedEquipments\r\n                      class="aw-table2"\r\n                      [columns]="unAssignTableCols"\r\n                      [value]="unAssignEquipmentList"\r\n                      [scrollable]="true"\r\n                    >\r\n                      <ng-template pTemplate="emptymessage">\r\n                        <span *ngIf="!isAssetLoading"> &nbsp;</span>\r\n\r\n                        <div *ngIf="isAssetLoading" class="aw-table-loading-indicator">\r\n                          <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                          <div class="lds-hourglass"></div>\r\n                        </div>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="caption">\r\n                        <div class="aw-table-header">\r\n                          <div class="aw-table-global-filter">\r\n                            <label class="aw-table-global-filter-label">\r\n                              <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                            </label>\r\n\r\n                            <input\r\n                              #ptableUnAssignedEquipmentsGlobalFilter\r\n                              class="aw-table-global-filter-input"\r\n                              type="text"\r\n                              placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                              (input)="ptableUnAssignedEquipments.filterGlobal($event.target.value, \'contains\')"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="colgroup" let-columns>\r\n                        <colgroup>\r\n                          <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                        </colgroup>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n                          <th\r\n                            pResizableColumn\r\n                            *ngFor="let col of columns"\r\n                            [ngStyle]="{ \'text-align\': col.alignment, width: col.width }"\r\n                          >\r\n                            {{ getComponentName() + "." + col.field | translate }}\r\n                          </th>\r\n                        </tr>\r\n                      </ng-template>\r\n\r\n                      <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                        <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                          <ng-container *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                            <td *ngSwitchDefault [ngStyle]="{ \'text-align\': col.alignment, width: col.width }">\r\n                              {{ rowData[col.field] }}\r\n                            </td>\r\n                          </ng-container>\r\n                        </tr>\r\n                      </ng-template>\r\n                    </p-table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<p-overlayPanel #opFilters class="aw-overlay" (onShow)="filtersVisible = true" (onHide)="filtersVisible = false">\r\n  <div class="row">\r\n    <div class="form-group flex--auto">\r\n      <label class="form-label"> &nbsp; </label>\r\n\r\n      <div class="form-control aw-selectbutton-wrapper">\r\n        <p-selectButton [(ngModel)]="controlList" [options]="searchControlList" multiple="multiple"></p-selectButton>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="row action-list">\r\n    <button type="button" mat-raised-button (click)="resetTableFilters()">\r\n      {{ "global.reset" | translate }}\r\n    </button>\r\n\r\n    <button type="button" mat-raised-button (click)="opFilters.hide(); filtersVisible = false; filterWithCriteria()">\r\n      {{ "global.filter" | translate }}\r\n    </button>\r\n  </div>\r\n</p-overlayPanel>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/functional-location-assignment/functional-location-assignment.component.scss':
      /*!********************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/functional-location-assignment/functional-location-assignment.component.scss ***!
  \********************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '.red {\n  color: #f6685e; }\n\n.green {\n  color: #4caf50; }\n\n.yellow {\n  color: #ffc107; }\n\n.action-list {\n  justify-content: flex-end; }\n\n.action-list .aw-btn {\n    margin-left: 8px; }\n\n.action-list .aw-btn:first-of-type {\n      margin-left: 0; }\n\n.filter-list {\n  display: none;\n  padding: 8px; }\n\n.filter-list.visible {\n    display: block; }\n\n.object-details {\n  border: 1px solid #01579b;\n  border-radius: 4px;\n  padding: 8px;\n  margin-bottom: calc(8px * 5); }\n\n.object-details .actions-bar {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end; }\n\n/*# sourceMappingURL=data:application/json;base64, */';

        /***/
      },

    /***/ './src/app/main/fleet-management/functional-location-assignment/functional-location-assignment.component.ts':
      /*!******************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/functional-location-assignment/functional-location-assignment.component.ts ***!
  \******************************************************************************************************************/
      /*! exports provided: FunctionalLocationAssignmentComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'FunctionalLocationAssignmentComponent',
          function() {
            return FunctionalLocationAssignmentComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! lodash-es */ './node_modules/lodash-es/lodash.js'
        );
        /* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! rxjs */ './node_modules/rxjs/_esm5/index.js'
        );
        /* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! rxjs/operators */ './node_modules/rxjs/_esm5/operators/index.js'
        );
        /* harmony import */ var _modules_purchase_contract_utils_label_value_helper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../modules/purchase-contract/utils/label-value-helper */ './src/app/modules/purchase-contract/utils/label-value-helper.ts'
        );
        /* harmony import */ var _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/components/component-sidebar/page-toc.service */ './src/app/shared/components/component-sidebar/page-toc.service.ts'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/constants/control-config-constants */ './src/app/shared/constants/control-config-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_date_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../shared/services/date.service */ './src/app/shared/services/date.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_page_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ../../../shared/types/page-component */ './src/app/shared/types/page-component.ts'
        );
        /* harmony import */ var _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
          /*! ../../../shared/utils/list-utils */ './src/app/shared/utils/list-utils.ts'
        );
        /* harmony import */ var _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
          /*! ../../../shared/utils/string-utils */ './src/app/shared/utils/string-utils.ts'
        );
        /* harmony import */ var _functional_location_assignment_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
          /*! ./functional-location-assignment.service */ './src/app/main/fleet-management/functional-location-assignment/functional-location-assignment.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var FunctionalLocationAssignmentComponent = /** @class */ (function(_super) {
          __extends(FunctionalLocationAssignmentComponent, _super);
          function FunctionalLocationAssignmentComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService,
            sessionService,
            functionalLocationAssignmentService,
            dateService,
            propertiesService,
            pageTocService,
            translateService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_10__['ComponentOpenMode'].Write,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService,
                pageTocService
              ) || this;
            _this.sessionService = sessionService;
            _this.functionalLocationAssignmentService = functionalLocationAssignmentService;
            _this.dateService = dateService;
            _this.propertiesService = propertiesService;
            _this.translateService = translateService;
            _this.controlConfigConstants =
              _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants'];
            _this.setControlGlobalFilter();
            _this.registerPageTocEntrySelectedObservable();
            _this.functionalLocationMap = new Map();
            _this.setTableCols();
            _this.setSearchControlList();
            return _this;
          }
          FunctionalLocationAssignmentComponent_1 = FunctionalLocationAssignmentComponent;
          FunctionalLocationAssignmentComponent.prototype.registerPageTocEntrySelectedObservable = function() {
            var _this = this;
            this.pageTocService.pageTocEntrySelected$
              .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['takeUntil'])(this.unsubscribe))
              .subscribe(function(pageTocEntrySelected) {
                _this.selectedAnchor = pageTocEntrySelected;
              });
          };
          FunctionalLocationAssignmentComponent.prototype.getComponentName = function() {
            return 'FunctionalLocationAssignmentComponent';
          };
          FunctionalLocationAssignmentComponent.prototype.setTableCols = function() {
            this.assignTableCols = [
              { field: 'flLevel', alignment: 'left', width: '30%' },
              { field: 'function', alignment: 'left', width: '10%' },
              { field: 'requiredQuantity', alignment: 'left', width: '10%' },
              { field: 'nominalQuantity', alignment: 'left', width: '10%' },
              { field: 'equipment', alignment: 'left', width: '20%' },
              { field: 'assignmentControl', alignment: 'center', width: '10%' },
              { field: 'complianceControl', alignment: 'center', width: '10%' }
            ];
            this.unAssignTableCols = [
              { field: 'fl', alignment: 'left', width: '30%' },
              { field: 'equipment', alignment: 'left', width: '30%' },
              { field: 'function', alignment: 'left', width: '20%' },
              { field: 'applicationDate', alignment: 'left', width: '20%' }
            ];
            this.summaryTableColList = [
              { field: 'category', alignment: 'left', width: '40%' },
              { field: 'ok', alignment: 'center', width: '20%' },
              { field: 'warning', alignment: 'center', width: '20%' },
              { field: 'nok', alignment: 'center', width: '20%' }
            ];
          };
          FunctionalLocationAssignmentComponent.prototype.init = function() {
            this.isFlToAssignReadOnly = false;
            this.unAssignEquipmentList = [];
            this.bidoFlEquipmentDTO = {};
            this.bidoEquipmentDto = {};
            this.searchCriteriaInput = {
              bidoFlDTOCriteria: {}
            };
            this.updatedFlList = [];
            this.isSaved = false;
            this.isAssetLoading = false;
            this.flTreeNodes = [];
            this.treeRecordCount = 0;
            this.summaryTable = [
              {
                category: FunctionalLocationAssignmentComponent_1.SUMMARY_TABLE_GLOBAL_LABEL,
                nok: 0,
                ok: 0,
                warning: 0
              },
              {
                category: FunctionalLocationAssignmentComponent_1.SUMMARY_TABLE_ASSIGN_LABEL,
                nok: 0,
                ok: 0,
                warning: 0
              },
              {
                category: FunctionalLocationAssignmentComponent_1.SUMMARY_TABLE_COMPLIANCE_LABEL,
                nok: 0,
                ok: 0,
                warning: 0
              }
            ];
          };
          FunctionalLocationAssignmentComponent.prototype.ngOnInit = function() {
            _super.prototype.ngOnInit.call(this);
            if (!!this.componentData) {
              this.updateOpenMode(this.componentData.openMode);
              this.loadOnInit();
            }
          };
          FunctionalLocationAssignmentComponent.prototype.loadOnInit = function() {
            this.init();
            if (!!this.componentData.objectId) {
              this.bidoEquipmentDto = this.serializationService.deserialize(this.componentData.objectId);
              this.loadOperationalStatus();
              this.loadFlEquipment();
              this.setComponentContextForAsset();
            }
          };
          FunctionalLocationAssignmentComponent.prototype.loadOperationalStatus = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_9__['GenericPropertyConstants']
                  .OPERATIONAL_STATUS_MAP
              )
              .subscribe(function(results) {
                _this.equipmentOperationalStatusLabel = _modules_purchase_contract_utils_label_value_helper__WEBPACK_IMPORTED_MODULE_5__[
                  'LabelValueHelper'
                ].getLabelByValue(results, _this.bidoEquipmentDto.operationalStatus);
              });
          };
          FunctionalLocationAssignmentComponent.prototype.setComponentContextForAsset = function() {
            var _this = this;
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_9__['GenericPropertyConstants']
                  .FAMILY_FUNCTION_MAP
              )
              .subscribe(function(result) {
                if (_this.bidoEquipmentDto) {
                  if (_this.isAssetAircraft) {
                    var selectedFunction = _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_20__['ListUtils']
                      .orEmpty(result)
                      .find(function(elt) {
                        return elt.value === _this.bidoEquipmentDto.equipmentFunction;
                      });
                    var aircraftLabel = selectedFunction ? selectedFunction.label : 'Aircraft';
                    _this.componentContext = aircraftLabel + ' ' + _this.bidoEquipmentDto.registration;
                  } else {
                    _this.componentContext =
                      _this.bidoEquipmentDto.equipmentDesignation + ' / ' + _this.bidoEquipmentDto.sn;
                  }
                  _this.displayComponentContext(_this.componentContext, _this.isCreateOpenMode);
                }
              });
          };
          FunctionalLocationAssignmentComponent.prototype.loadFlEquipment = function() {
            var _this = this;
            if (this.bidoEquipmentDto.equipmentCode) {
              this.functionalLocationAssignmentService
                .findBidoFlEquipmentCurrentlyAppliedByEquipmentCode(this.bidoEquipmentDto.equipmentCode)
                .subscribe(function(results) {
                  if (results !== null && results !== undefined) {
                    _this.bidoFlEquipmentDTO = results;
                    if (_this.bidoFlEquipmentDTO && _this.bidoFlEquipmentDTO.appliedDate && !_this.applicationDate) {
                      _this.applicationDate = _this.bidoFlEquipmentDTO.appliedDate;
                      _this.flApplicationDate = _this.bidoFlEquipmentDTO.appliedDate;
                    }
                  }
                  var searchCriteriaInputforDropDown = {
                    bidoFlDTOCriteria: {
                      flFunction: _this.bidoEquipmentDto.equipmentFunction
                    },
                    familyVariantCode: _this.bidoEquipmentDto.familyVariantCode
                      ? [_this.bidoEquipmentDto.familyVariantCode]
                      : undefined,
                    modelCode: _this.bidoEquipmentDto.modelCode,
                    bidoEquipmentDTO: _this.bidoEquipmentDto,
                    applicationDate: _this.applicationDate
                  };
                  _this.loadFunctionalLocation(searchCriteriaInputforDropDown);
                });
            }
          };
          FunctionalLocationAssignmentComponent.prototype.loadFunctionalLocation = function(
            findBidoFlsBySearchCriteriaInput
          ) {
            var _this = this;
            this.functionalLocationAssignmentService
              .findBidoFlsBySearchCriteriaFunctionalLocationAssignment(findBidoFlsBySearchCriteriaInput)
              .subscribe(function(results) {
                _this.functionalLocationList = results;
                results.forEach(function(element) {
                  _this.functionalLocationMap.set(element.value, element.label);
                });
                // make dropdown read only
                if (_this.bidoEquipmentDto.equEquipmentCode) {
                  _this.isFlToAssignReadOnly = true;
                }
                _this.loadFunctionalLocationEquipmentData();
              });
          };
          FunctionalLocationAssignmentComponent.prototype.loadFunctionalLocationEquipmentData = function() {
            var _this = this;
            this.assetMapData = new Map();
            // set search criteria for fl
            this.searchCriteriaInput = {
              bidoFlDTOCriteria: {
                flCode: this.bidoFlEquipmentDTO.flCode || undefined
              },
              familyVariantCode: this.bidoEquipmentDto.familyVariantCode
                ? [this.bidoEquipmentDto.familyVariantCode]
                : undefined,
              modelCode: this.bidoEquipmentDto.modelCode,
              bidoEquipmentDTO: this.bidoEquipmentDto,
              applicationDate: this.applicationDate
            };
            this.isAssetLoading = true;
            this.functionalLocationAssignmentService
              .getFlStructure(this.searchCriteriaInput)
              .subscribe(function(results) {
                _this.generateTreeData(results, true);
                _this.isAssetLoading = false;
              });
          };
          FunctionalLocationAssignmentComponent.prototype.generateTreeData = function(results, setContentToc) {
            var _this = this;
            this.flTreeNodes = [];
            this.treeRecordCount = 0;
            if (results && results.data) {
              this.flTreeNodes = [results].map(function(obj) {
                return _this.createTreeNode(obj);
              });
            }
            this.updateSummaryTable();
            this.loadOrphanList(results);
            this.tableDataOnLoad = results;
            this.createContentTable(setContentToc);
          };
          FunctionalLocationAssignmentComponent.prototype.createTreeNode = function(baseElement) {
            var _this = this;
            this.treeRecordCount++;
            var node = {};
            if (baseElement.data) {
              var tempData = Object(lodash_es__WEBPACK_IMPORTED_MODULE_2__['cloneDeep'])(baseElement);
              // set map data on load
              if (
                tempData.data &&
                tempData.data.assetCode &&
                tempData.data.assetName &&
                tempData.data.bidoEquipmentDTO &&
                tempData.data.flCode &&
                !this.assetMapData.get(tempData.data.flCode)
              ) {
                var temp = {
                  assetCode: tempData.data.assetCode,
                  assetName: tempData.data.assetName,
                  bidoEquipmentDTO: tempData.data.bidoEquipmentDTO,
                  children: tempData.children || []
                };
                this.assetMapData.set(tempData.data.flCode, temp);
              }
              node = {
                data: this.convertTableDTOToRow(baseElement, baseElement.data, baseElement.hide),
                expanded: true,
                children: _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_20__['ListUtils']
                  .orEmpty(baseElement.children)
                  .map(function(childElement) {
                    return _this.createTreeNode(childElement);
                  })
              };
            }
            return node;
          };
          FunctionalLocationAssignmentComponent.prototype.loadOrphanList = function(baseElement) {
            var _this = this;
            // set search criteria for fl
            this.unAssignEquipmentList = [];
            if (baseElement.orphanList) {
              baseElement.orphanList.forEach(function(element) {
                _this.unAssignEquipmentList.push(_this.convertOrphanTableDTOToRow(element));
              });
            }
          };
          FunctionalLocationAssignmentComponent.prototype.refresh = function() {
            this.loadOnInit();
          };
          FunctionalLocationAssignmentComponent.prototype.convertTableDTOToRow = function(baseElement, node, hide) {
            var itemObj = {
              flLevel: node.levelName,
              equipment: node.assetName,
              function: node.flFunctionValue,
              nominalQuantity: node.nominalQuantity,
              requiredQuantity: node.requiredQuantity,
              dropDownList: node.dropDownList || [],
              assignmentControl: node.assignmentControl,
              complianceControl: node.alertIcon,
              assignmentControlToolTip: '',
              complianceControlToolTip: '',
              assetCode: node.assetCode,
              flCode: node.flCode,
              alertToolTip: node.alertToolTip,
              hide: hide,
              _obj: baseElement
            };
            return itemObj;
          };
          FunctionalLocationAssignmentComponent.prototype.convertOrphanTableDTOToRow = function(element) {
            var itemObj = {
              applicationDate: this.dateService.dateToString(element.applicationDate),
              equipment: element.assetName,
              function: element.flFunctionValue,
              fl: element.flName
            };
            return itemObj;
          };
          FunctionalLocationAssignmentComponent.prototype.flattenTreeData = function(element, initList) {
            var _this = this;
            if (element && element.data) {
              initList.push(element.data);
            }
            if (element && element.children) {
              element.children.forEach(function(obj) {
                _this.flattenTreeData(obj, initList);
              });
            }
          };
          FunctionalLocationAssignmentComponent.prototype.save = function() {
            var _this = this;
            if (!this.applicationDate) {
              this.messageService.showErrorMessage(this.getTranslateKey('missingApplicationDate'));
              return;
            } else if (
              this.applicationDate &&
              this.flApplicationDate &&
              this.applicationDate < this.flApplicationDate
            ) {
              this.translateService.get(this.getTranslateKey('earlierApplicationDate')).subscribe(function(value) {
                _this.messageService.showErrorMessage(
                  value +
                    ' ' +
                    _this.dateService.dateWitCustomFormatToString(_this.flApplicationDate, 'YYYY/MM/DD') +
                    '.'
                );
              });
              return;
            }
            var initArr = [];
            this.flattenTreeData(this.flTreeNodes[0], initArr);
            var checkDuplicate = false;
            initArr.forEach(function(obj) {
              var filteredRows = initArr.filter(function(row) {
                return row.assetCode && row.assetCode === obj.assetCode;
              });
              if (filteredRows.length > 1) {
                checkDuplicate = true;
                return;
              }
            });
            if (checkDuplicate) {
              this.messageService.showErrorMessage(this.getTranslateKey('duplicateAssignment'));
              return;
            }
            this.updatedFlList = [];
            var saveBidoFlEquipmentStructureInput = {
              topEquipmentCode: this.bidoEquipmentDto.equipmentCode,
              bidoFlEquipmentDataList: this.updatedFlList,
              applicationDate: this.applicationDate || new Date().toISOString()
            };
            // Assign applied equipments
            initArr.forEach(function(obj) {
              if (!!obj.assetCode) {
                var flDto = {
                  appliedDate: _this.applicationDate || new Date().toISOString(),
                  equipmentCode: obj.assetCode,
                  flCode: obj.flCode
                };
                _this.updatedFlList.push(flDto);
              }
            });
            this.showSaveSpinner = true;
            this.functionalLocationAssignmentService
              .updateBidoFlEquipmentStructure(saveBidoFlEquipmentStructureInput)
              .subscribe(
                function(results) {
                  _this.loadFlEquipment();
                  _this.isSaved = true;
                  _this.messageService.showSuccessMessage(_this.getTranslateKey('onSaveSuccess'));
                  _this.showSaveSpinner = false;
                },
                function(error) {
                  _this.showSaveSpinner = false;
                }
              );
          };
          Object.defineProperty(FunctionalLocationAssignmentComponent.prototype, 'isAssetAircraft', {
            get: function() {
              return (
                !!this.bidoEquipmentDto &&
                !!this.bidoEquipmentDto.equipmentFunction &&
                this.bidoEquipmentDto.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_7__['AWPropertiesConstants']
                    .ITEM_FAMILY_CODE_AIRCRAFT_KEY
              );
            },
            enumerable: true,
            configurable: true
          });
          Object.defineProperty(FunctionalLocationAssignmentComponent.prototype, 'isAssetEngine', {
            get: function() {
              return (
                !!this.bidoEquipmentDto &&
                !!this.bidoEquipmentDto.equipmentFunction &&
                this.bidoEquipmentDto.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_7__['AWPropertiesConstants']
                    .ITEM_FAMILY_CODE_ENGINE_KEY
              );
            },
            enumerable: true,
            configurable: true
          });
          Object.defineProperty(FunctionalLocationAssignmentComponent.prototype, 'isAssetEquipment', {
            get: function() {
              return !!this.bidoEquipmentDto && !this.isAssetAircraft && !this.isAssetEngine;
            },
            enumerable: true,
            configurable: true
          });
          FunctionalLocationAssignmentComponent.prototype.updateSummaryTableRow = function() {
            var initArr = [];
            this.flattenTreeData(this.flTreeNodes[0], initArr);
            if (this.summaryTable) {
              this.summaryTable.slice(1).forEach(function(obj, index) {
                // Fill with new values
                if (index === 0) {
                  obj.nok = initArr.filter(function(row) {
                    return (
                      row.assignmentControl ===
                      _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants']
                        .ICON_RED
                    );
                  }).length;
                  obj.ok = initArr.filter(function(row) {
                    return (
                      row.assignmentControl ===
                      _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants']
                        .ICON_GREEN
                    );
                  }).length;
                  obj.warning = initArr.filter(function(row) {
                    return (
                      row.assignmentControl ===
                      _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants']
                        .ICON_YELLOW
                    );
                  }).length;
                }
                if (index === 1) {
                  obj.nok = initArr.filter(function(row) {
                    return (
                      row.complianceControl ===
                      _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants']
                        .ICON_RED
                    );
                  }).length;
                  obj.ok = initArr.filter(function(row) {
                    return (
                      row.complianceControl ===
                      _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants']
                        .ICON_GREEN
                    );
                  }).length;
                  obj.warning = initArr.filter(function(row) {
                    return (
                      row.complianceControl ===
                      _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants']
                        .ICON_YELLOW
                    );
                  }).length;
                }
              });
            }
          };
          FunctionalLocationAssignmentComponent.prototype.updateSummaryTable = function() {
            if (this.summaryTable) {
              this.updateSummaryTableRow();
              this.updateSummaryTableGlobal();
              this.summaryTable = Object(lodash_es__WEBPACK_IMPORTED_MODULE_2__['cloneDeep'])(this.summaryTable);
            }
          };
          FunctionalLocationAssignmentComponent.prototype.updateSummaryTableGlobal = function() {
            var index = 0;
            this.summaryTable[index].nok = this.summaryTable
              .slice(1)
              .map(function(row) {
                return row.nok;
              })
              .reduce(function(a, b) {
                return a + b;
              }, 0);
            this.summaryTable[index].ok = this.summaryTable
              .slice(1)
              .map(function(row) {
                return row.ok;
              })
              .reduce(function(a, b) {
                return a + b;
              }, 0);
            this.summaryTable[index].warning = this.summaryTable
              .slice(1)
              .map(function(row) {
                return row.warning;
              })
              .reduce(function(a, b) {
                return a + b;
              }, 0);
          };
          FunctionalLocationAssignmentComponent.prototype.checkDataValidity = function(row) {
            var _this = this;
            if (row) {
              var rowData = row._obj;
              if (!row.assetCode) {
                this.clearChildAssetRecursively(rowData);
              } else if (rowData.data && rowData.data.flCode) {
                var mapValue = this.assetMapData.get(rowData.data.flCode);
                // set asset code of parent
                rowData.data.assetCode = row.assetCode;
                rowData.data.assetName = this.getAssetName(rowData, rowData.data.assetCode);
                // set equipment dto
                if (rowData.data.assetCode && this.tableDataOnLoad.bidoEquipmentMap) {
                  rowData.data.bidoEquipmentDTO = this.tableDataOnLoad.bidoEquipmentMap[rowData.data.assetCode];
                }
                if (mapValue && row.assetCode === mapValue.assetCode) {
                  this.setChildAssetRecursively(rowData);
                } else {
                  if (rowData.children && rowData.children.length > 0) {
                    rowData.children.forEach(function(obj) {
                      _this.clearChildAssetRecursively(obj);
                    });
                  }
                }
              }
              this.tableDataOnLoad = Object(lodash_es__WEBPACK_IMPORTED_MODULE_2__['cloneDeep'])(this.tableDataOnLoad);
              this.functionalLocationAssignmentService
                .getFlDropDownChange(this.tableDataOnLoad)
                .subscribe(function(result) {
                  _this.tableDataOnLoad = result;
                  _this.filterWithCriteria();
                });
            }
          };
          FunctionalLocationAssignmentComponent.prototype.clearChildAssetRecursively = function(rowData) {
            var _this = this;
            if (rowData.data) {
              var rowAsset = rowData.data;
              rowAsset.assetName = undefined;
              rowAsset.assetCode = undefined;
              rowAsset.bidoEquipmentDTO = undefined;
              if (rowData.children && rowData.children.length > 0) {
                rowData.children.forEach(function(obj) {
                  _this.clearChildAssetRecursively(obj);
                });
              }
            }
          };
          FunctionalLocationAssignmentComponent.prototype.setChildAssetRecursively = function(rowData) {
            var _this = this;
            if (rowData.data && rowData.data.flCode) {
              var mapValue = this.assetMapData.get(rowData.data.flCode);
              // set all children
              rowData.children = mapValue ? mapValue.children || [] : [];
              // if asset code is passed, set it other wise set asset from map
              var assetCode = void 0;
              if (rowData.data && rowData.data.assetCode) {
                assetCode = rowData.data.assetCode;
              } else if (mapValue) {
                assetCode = mapValue.assetCode;
              }
              rowData.data.assetCode = assetCode;
              rowData.data.assetName = this.getAssetName(rowData, assetCode);
              // set equipment dto
              if (
                mapValue &&
                mapValue.bidoEquipmentDTO &&
                this.tableDataOnLoad.bidoEquipmentMap &&
                mapValue.bidoEquipmentDTO &&
                mapValue.bidoEquipmentDTO.equipmentCode &&
                rowData.data.assetCode
              ) {
                rowData.data.bidoEquipmentDTO = this.tableDataOnLoad.bidoEquipmentMap[rowData.data.assetCode];
              }
              if (rowData.children && rowData.children.length > 0) {
                rowData.children.forEach(function(obj) {
                  _this.setChildAssetRecursively(obj);
                });
              }
            }
          };
          FunctionalLocationAssignmentComponent.prototype.getAssetName = function(rowData, assetCode) {
            var assetName;
            if (rowData.data && rowData.data.dropDownList && assetCode) {
              var assetObj = rowData.data.dropDownList.filter(function(obj) {
                return obj.value === assetCode;
              })[0];
              assetName = assetObj && assetObj.label;
            }
            return assetName;
          };
          FunctionalLocationAssignmentComponent.prototype.createContentTable = function(setContentToc) {
            this.toc = [];
            if (this.isAssetAircraft) {
              this.toc.push({
                id: 'aircraftAnchor',
                anchor: this.aircraftAnchor,
                label: 'Aircraft'
              });
            } else if (this.isAssetEngine) {
              this.toc.push({
                id: 'aircraftAnchor',
                anchor: this.aircraftAnchor,
                label: 'Engine'
              });
            } else if (this.isAssetEquipment) {
              this.toc.push({
                id: 'aircraftAnchor',
                anchor: this.aircraftAnchor,
                label: 'Equipment'
              });
            }
            this.toc.push({
              id: 'upcomingEventsSummaryAnchor',
              anchor: this.upcomingEventsSummaryAnchor,
              label: 'Control Summary'
            });
            this.toc.push({
              id: 'assignmentDetailsAnchor',
              anchor: this.assignmentDetailsAnchor,
              label: 'Assignment Details'
            });
            if (this.unAssignEquipmentList.length > 0) {
              this.toc.push({
                id: 'unAssignmentDetailsAnchor',
                anchor: this.unAssignmentDetailsAnchor,
                label: 'Unassignment Details'
              });
            }
            if (setContentToc) {
              this.setSelectedAnchor('aircraftAnchor');
            }
          };
          FunctionalLocationAssignmentComponent.prototype.isSelectedAnchor = function(anchorId) {
            return anchorId === this.selectedAnchor;
          };
          FunctionalLocationAssignmentComponent.prototype.setSelectedAnchor = function(anchorId) {
            this.pageTocService.setAnchorSelected(anchorId);
            this.selectedAnchor = anchorId;
          };
          FunctionalLocationAssignmentComponent.prototype.setSearchControlList = function() {
            var _this = this;
            var alertNokKey = this.getTranslateKey('alertNok', 'global');
            var alertOkKey = this.getTranslateKey('alertOk', 'global');
            var alertWarningKey = this.getTranslateKey('alertWarning', 'global');
            this.translateService.get([alertNokKey, alertOkKey, alertWarningKey]).subscribe(function(results) {
              var alertNokLabel = results ? results[alertNokKey] : 'NOK';
              var alertOkLabel = results ? results[alertOkKey] : 'OK';
              var alertWarningLabel = results ? results[alertWarningKey] : 'WARNING';
              _this.searchControlList = [
                {
                  label: alertOkLabel,
                  value:
                    _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants']
                      .ICON_GREEN
                },
                {
                  label: alertWarningLabel,
                  value:
                    _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants']
                      .ICON_YELLOW
                },
                {
                  label: alertNokLabel,
                  value:
                    _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants']
                      .ICON_RED
                }
              ];
            });
          };
          FunctionalLocationAssignmentComponent.prototype.setDefaultSearchControlList = function() {
            this.controlList = [
              _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants']
                .ICON_GREEN,
              _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants']
                .ICON_YELLOW,
              _shared_constants_control_config_constants__WEBPACK_IMPORTED_MODULE_8__['ControlConfigConstants'].ICON_RED
            ];
          };
          FunctionalLocationAssignmentComponent.prototype.resetTableFilters = function() {
            this.searchGlobalFilter = '';
            this.setDefaultSearchControlList();
            if (this.tableDataOnLoad) {
              this.generateTreeData(this.tableDataOnLoad, false);
            }
          };
          FunctionalLocationAssignmentComponent.prototype.filterWithCriteria = function() {
            this.searchGlobalFilter = '';
            if (this.controlList.length === 0) {
              this.generateTreeData(this.tableDataOnLoad, false);
            } else {
              this.searchItemStructureGlobalFilterChanged.next(this.controlList);
            }
          };
          FunctionalLocationAssignmentComponent.prototype.filterTextWithCriteria = function() {
            this.searchItemStructureGlobalFilterChanged.next(this.controlList);
          };
          FunctionalLocationAssignmentComponent.prototype.setControlGlobalFilter = function() {
            var _this = this;
            this.resetTableFilters();
            this.searchItemStructureGlobalFilterChanged = new rxjs__WEBPACK_IMPORTED_MODULE_3__['Subject']();
            this.searchItemStructureGlobalFilterChanged
              .pipe(
                Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['debounceTime'])(
                  FunctionalLocationAssignmentComponent_1.SEARCH_TEXT_DEBOUNCE_TIME
                ),
                Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__['takeUntil'])(this.unsubscribe)
              )
              .subscribe(function() {
                _this.updateTreeDisplayed();
              });
          };
          FunctionalLocationAssignmentComponent.prototype.updateTreeDisplayed = function() {
            var _this = this;
            var tableData = Object(lodash_es__WEBPACK_IMPORTED_MODULE_2__['cloneDeep'])([this.tableDataOnLoad]);
            tableData.forEach(function(elt) {
              elt.hide = !_this.treeNodeMatchFilters(elt, _this.controlList);
            });
            if (tableData && tableData.length > 0) {
              this.generateTreeData(tableData[0], false);
            }
          };
          FunctionalLocationAssignmentComponent.prototype.treeNodeMatchFilters = function(node, searchList) {
            var _this = this;
            if (!_shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_20__['ListUtils'].isNullOrEmpty(node.children)) {
              node.children.forEach(function(child) {
                child.hide = !_this.treeNodeMatchFilters(child, searchList);
              });
            }
            var nodeData = node.data;
            var asignmentMatch = searchList.indexOf(nodeData.assignmentControl) > -1;
            var complianceMatch = searchList.indexOf(nodeData.alertIcon) > -1;
            var flLevel = nodeData.levelName ? nodeData.levelName.toLowerCase() : '';
            var flLevelMatch =
              !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_21__['StringUtils'].isNullOrEmpty(
                this.searchGlobalFilter
              ) && flLevel.includes(this.searchGlobalFilter.toLowerCase());
            var function1 = nodeData.flFunctionValue ? nodeData.flFunctionValue.toLowerCase() : '';
            var functionMatch =
              !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_21__['StringUtils'].isNullOrEmpty(
                this.searchGlobalFilter
              ) && function1.includes(this.searchGlobalFilter.toLowerCase());
            var requiredQuantity = nodeData.requiredQuantity ? nodeData.requiredQuantity.toString() : '';
            var flLevelrequiredQuantity =
              !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_21__['StringUtils'].isNullOrEmpty(
                this.searchGlobalFilter
              ) && requiredQuantity.includes(this.searchGlobalFilter);
            var nominalQuantity = nodeData.nominalQuantity ? nodeData.nominalQuantity.toString() : '';
            var nominalQuantityMatch =
              !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_21__['StringUtils'].isNullOrEmpty(
                this.searchGlobalFilter
              ) && nominalQuantity.includes(this.searchGlobalFilter);
            var equipment = nodeData.assetName ? nodeData.assetName.toLowerCase() : '';
            var equipmentMatch =
              !_shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_21__['StringUtils'].isNullOrEmpty(
                this.searchGlobalFilter
              ) && equipment.includes(this.searchGlobalFilter.toLowerCase());
            var children = node.children;
            var filteredChildren = [];
            filteredChildren = children.filter(function(child) {
              return !child.hide;
            });
            if (
              _shared_utils_string_utils__WEBPACK_IMPORTED_MODULE_21__['StringUtils'].isNullOrEmpty(
                this.searchGlobalFilter
              )
            ) {
              return filteredChildren.length > 0 || asignmentMatch || complianceMatch;
            } else {
              return (
                filteredChildren.length > 0 ||
                flLevelMatch ||
                functionMatch ||
                flLevelrequiredQuantity ||
                nominalQuantityMatch ||
                equipmentMatch
              );
            }
          };
          var FunctionalLocationAssignmentComponent_1;
          FunctionalLocationAssignmentComponent.SUMMARY_TABLE_ASSIGN_LABEL = 'assignmentControl';
          FunctionalLocationAssignmentComponent.SUMMARY_TABLE_COMPLIANCE_LABEL = 'complianceControl';
          FunctionalLocationAssignmentComponent.SUMMARY_TABLE_GLOBAL_LABEL = 'global';
          FunctionalLocationAssignmentComponent.SEARCH_TEXT_DEBOUNCE_TIME = 500;
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('aircraftAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FunctionalLocationAssignmentComponent.prototype,
            'aircraftAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('upcomingEventsSummaryAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FunctionalLocationAssignmentComponent.prototype,
            'upcomingEventsSummaryAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('assignmentDetailsAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FunctionalLocationAssignmentComponent.prototype,
            'assignmentDetailsAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('generalAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FunctionalLocationAssignmentComponent.prototype,
            'generalAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])('unAssignmentDetailsAnchor'),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            FunctionalLocationAssignmentComponent.prototype,
            'unAssignmentDetailsAnchor',
            void 0
          );
          FunctionalLocationAssignmentComponent = FunctionalLocationAssignmentComponent_1 = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-functional-location-assignment',
                template: __webpack_require__(
                  /*! ./functional-location-assignment.component.html */ './src/app/main/fleet-management/functional-location-assignment/functional-location-assignment.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./functional-location-assignment.component.scss */ './src/app/main/fleet-management/functional-location-assignment/functional-location-assignment.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_12__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_13__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_14__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_16__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_18__['TabService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_17__['SessionService'],
                _functional_location_assignment_service__WEBPACK_IMPORTED_MODULE_22__[
                  'FunctionalLocationAssignmentService'
                ],
                _shared_services_date_service__WEBPACK_IMPORTED_MODULE_11__['DateService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_15__['PropertiesService'],
                _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_6__['PageTocService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService']
              ])
            ],
            FunctionalLocationAssignmentComponent
          );
          return FunctionalLocationAssignmentComponent;
        })(_shared_types_page_component__WEBPACK_IMPORTED_MODULE_19__['PageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/install-asset/dialog-install-asset/dialog-install-asset.component.html':
      /*!**************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/install-asset/dialog-install-asset/dialog-install-asset.component.html ***!
  \**************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="column">\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".pnCode" | translate }}</label>\r\n\r\n          <div class="form-control">\r\n            <input type="text" class="aw-input" [(ngModel)]="assetSelected.assetPn" disabled="true" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".snCode" | translate }}</label>\r\n\r\n          <div class="form-control">\r\n            <input type="text" class="aw-input" [(ngModel)]="assetSelected.assetSn" disabled="true" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".functionLocation" | translate }}</label>\r\n\r\n          <div class="form-control">\r\n            <p-dropdown\r\n              class="aw-dropdown fixed-width"\r\n              [options]="functionLocationList"\r\n              [(ngModel)]="assetSelected.funLocCode"\r\n              [disabled]="isReadOpenMode"\r\n              placeholder="&nbsp;"\r\n              [showClear]="true"\r\n              appendTo="body"\r\n              (onChange)="getItemList()"\r\n            ></p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".item" | translate }}</label>\r\n\r\n          <div class="form-control">\r\n            <p-dropdown\r\n              class="aw-dropdown fixed-width"\r\n              [options]="itemList"\r\n              [(ngModel)]="assetSelected.itemDataCode"\r\n              [disabled]="isReadOpenMode"\r\n              placeholder="&nbsp;"\r\n              [showClear]="true"\r\n              appendTo="body"\r\n              (onChange)="resetList()"\r\n            ></p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class="row" *ngIf="!isSuperiorAircraft">\r\n        <div class="form-group">\r\n          <label class="form-label">{{ getComponentName() + ".position" | translate }}</label>\r\n\r\n          <div class="form-control">\r\n            <p-dropdown\r\n              class="aw-dropdown fixed-width"\r\n              [options]="positionList"\r\n              [(ngModel)]="assetSelected.position"\r\n              [disabled]="isReadOpenMode"\r\n              placeholder="&nbsp;"\r\n              [showClear]="true"\r\n              appendTo="body"\r\n            ></p-dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button *ngIf="isReadOpenMode" type="button" mat-raised-button (click)="cancel()">\r\n      <span>{{ "global.close" | translate }}</span>\r\n    </button>\r\n\r\n    <button *ngIf="!isReadOpenMode" type="button" mat-raised-button (click)="cancel()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="!isReadOpenMode"\r\n      color="primary"\r\n      type="button"\r\n      [disabled]="!isFLFree"\r\n      mat-raised-button\r\n      (click)="onValidate()"\r\n    >\r\n      {{ "global.validate" | translate }}\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/install-asset/dialog-install-asset/dialog-install-asset.component.ts':
      /*!************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/install-asset/dialog-install-asset/dialog-install-asset.component.ts ***!
  \************************************************************************************************************/
      /*! exports provided: DialogInstallAssetComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogInstallAssetComponent',
          function() {
            return DialogInstallAssetComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        /* harmony import */ var _install_asset_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../install-asset.service */ './src/app/main/fleet-management/install-asset/install-asset.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __assign =
          (undefined && undefined.__assign) ||
          function() {
            __assign =
              Object.assign ||
              function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                  s = arguments[i];
                  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
              };
            return __assign.apply(this, arguments);
          };
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var DialogInstallAssetComponent = /** @class */ (function(_super) {
          __extends(DialogInstallAssetComponent, _super);
          function DialogInstallAssetComponent(installAssetService, propertiesService, messageService) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_3__['ComponentOpenMode'].Write,
                'DialogInstallAssetComponent'
              ) || this;
            _this.installAssetService = installAssetService;
            _this.propertiesService = propertiesService;
            _this.messageService = messageService;
            _this.isFLFree = true;
            _this.onValidated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.superiorBidoEquipment = {};
            _this.assetSelected = {};
            return _this;
          }
          DialogInstallAssetComponent.prototype.ngOnInit = function() {
            this.positionList = [];
            this.functionLocationList = [];
            this.itemList = [];
            this.getFunctionalItemStructure();
            this.getImpactInstalledBase();
            if (!!this.selectedAsset) {
              this.assetSelected = __assign({}, this.selectedAsset);
              this.initilizeDialog();
            }
          };
          /**
           * Rendering dialog dropdowns
           */
          DialogInstallAssetComponent.prototype.initilizeDialog = function() {
            this.findBidoEquipment();
            this.getPositionDropdownList();
            // Item dropdown
            this.getItemDropdownList();
          };
          /**
           * Fill Position dropdown list
           */
          DialogInstallAssetComponent.prototype.getPositionDropdownList = function() {
            var _this = this;
            // tslint:disable-next-line:no-string-literal
            if (!!this.assetSelected) {
              // tslint:disable-next-line:no-string-literal
              if (
                this.assetSelected['assetFunctionType'] ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_1__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_ENGINE_KEY
              ) {
                this.propertiesService
                  .getValue(
                    _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_2__[
                      'GenericPropertyConstants'
                    ].ENGINE_POSITION_MAP
                  )
                  .subscribe(function(results) {
                    _this.positionList = results;
                    _this.assetSelected.position =
                      _this.positionList.length !== 0 ? _this.positionList[0].value : undefined;
                  });
              } else {
                this.propertiesService
                  .getValue(
                    _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_2__[
                      'GenericPropertyConstants'
                    ].POSITION_MAP
                  )
                  .subscribe(function(results) {
                    _this.positionList = results;
                    _this.assetSelected.position =
                      _this.positionList.length !== 0 ? _this.positionList[0].value : undefined;
                  });
              }
            }
            this.assetSelected.position = this.positionList.length !== 0 ? this.positionList[0].value : undefined;
          };
          /**
           * Render Item Dropdown
           */
          DialogInstallAssetComponent.prototype.getItemDropdownList = function() {
            var _this = this;
            if (!!this.assetSelected && !!this.assetSelected.assetPn && !!this.date && !!this.superiorCode) {
              var getParentsByEquipmentRecursivelyAtDateInputDTO = {
                assetCode: [this.assetSelected.assetPn],
                date: this.date,
                superiorCode: this.superiorCode
              };
              this.installAssetService
                .getItemDataList(getParentsByEquipmentRecursivelyAtDateInputDTO)
                .subscribe(function(result) {
                  if (result.length > 0) {
                    _this.itemList = result;
                    if (!!_this.selectedAsset) {
                      if (!_this.selectedAsset.itemDataCode) {
                        var data = result.filter(function(res) {
                          return !!res.value;
                        });
                        _this.assetSelected.itemDataCode = data[0].value;
                        _this.getFunctionLocationDropdownList();
                      } else {
                        _this.resetList();
                      }
                    }
                  } else {
                    _this.assetSelected.itemDataCode = undefined;
                    _this.assetSelected.funLocCode = undefined;
                    _this.getFunctionLocationDropdownList();
                  }
                });
            }
          };
          /**
           * Render function location dropdown
           */
          DialogInstallAssetComponent.prototype.getFunctionLocationDropdownList = function() {
            var _this = this;
            if (!!this.date && !!this.superiorCode) {
              var getParentsByEquipmentRecursivelyAtDateInputDTO = {
                date: this.date,
                superiorCode: this.superiorCode
              };
              this.installAssetService
                .getFunctionalLocationDataMap(getParentsByEquipmentRecursivelyAtDateInputDTO)
                .subscribe(function(result) {
                  result.unshift({
                    label: '',
                    value: ''
                  });
                  _this.functionLocationList = result;
                  if (result.length > 0) {
                    // Show sel
                    if (!_this.assetSelected.funLocCode) {
                      _this.assetSelected.funLocCode =
                        result.length !== 0 ? _this.functionLocationList[0].value : undefined;
                    } else {
                      var labelValueDto = result.filter(function(res) {
                        return res.label === _this.assetSelected.funLocCode;
                      });
                      if (!!labelValueDto) {
                        _this.assetSelected.funLocCode = labelValueDto[0].value;
                      }
                    }
                  }
                });
            }
          };
          DialogInstallAssetComponent.prototype.cancel = function() {
            this.display = false;
          };
          DialogInstallAssetComponent.prototype.findBidoEquipment = function() {
            var _this = this;
            var bidoId = {
              equipmentCode: this.superiorCode
            };
            this.installAssetService.findBidoEquipment(bidoId).subscribe(function(res) {
              _this.superiorBidoEquipment = res;
              _this.isSuperiorAircraft =
                res.equipmentFunction ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_1__['AWPropertiesConstants']
                  .FAMILY_FUNCTION_AIRCRAFT_KEY
                  ? true
                  : false;
              if (!!_this.selectedAsset) {
                if (!_this.selectedAsset.itemDataCode) {
                  _this.getFunctionLocationDropdownList();
                } else {
                  _this.resetList();
                }
              }
            });
          };
          /**
           * On Validate
           */
          DialogInstallAssetComponent.prototype.onValidate = function() {
            if (this.validatePopup()) {
              this.selectedAsset = __assign({}, this.assetSelected);
              this.onValidated.emit(this.selectedAsset);
              this.display = false;
            }
          };
          DialogInstallAssetComponent.prototype.getItemList = function() {
            var _this = this;
            if (!!this.superiorBidoEquipment && !!this.selectedAsset && !!this.assetSelected.funLocCode) {
              var dto_1 = {
                date: this.date,
                superiorCode: this.superiorCode,
                pnCode: this.selectedAsset.assetPn,
                fatherFamilyVariantCode: this.superiorBidoEquipment.familyVariantCode,
                functionLocationCode: this.assetSelected.funLocCode
              };
              this.installAssetService.isFLFree(dto_1).subscribe(function(resp) {
                if (!resp) {
                  _this.messageService.showErrorMessage(_this.getTranslateKey('tooltipNominalQuantity'));
                  _this.isFLFree = resp;
                } else {
                  _this.isFLFree = true;
                  _this.itemList = [];
                  _this.installAssetService.getItemRelatedToFLCode(dto_1).subscribe(function(res) {
                    if (res.length > 0) {
                      _this.itemList = res;
                    } else {
                      _this.assetSelected.itemDataCode = undefined;
                    }
                  });
                }
              });
            } else {
              this.isFLFree = true;
              // Item dropdown
              this.getItemDropdownList();
            }
          };
          DialogInstallAssetComponent.prototype.resetList = function() {
            var _this = this;
            if (!this.assetSelected.itemDataCode) {
              this.assetSelected.funLocCode = undefined;
              this.getFunctionLocationDropdownList();
            } else {
              if (!!this.superiorBidoEquipment && !!this.selectedAsset) {
                var dto = {
                  date: this.date,
                  superiorCode: this.superiorCode,
                  pnCode: this.selectedAsset.assetPn,
                  fatherFamilyVariantCode: this.superiorBidoEquipment.familyVariantCode,
                  itemCode: this.assetSelected.itemDataCode
                };
                this.installAssetService.getFunctionalLocationLinkedToItem(dto).subscribe(function(res) {
                  if (res.length > 0) {
                    _this.functionLocationList = res;
                    // this.assetSelected.funLocCode = res[0].value;
                  }
                });
              }
            }
          };
          DialogInstallAssetComponent.prototype.getFunctionalItemStructure = function() {
            var _this = this;
            this.installAssetService.isFunctionalItemStructure().subscribe(function(result) {
              _this.isFunctionalItemStructure = result;
            });
          };
          DialogInstallAssetComponent.prototype.getImpactInstalledBase = function() {
            var _this = this;
            if (this.selectedAsset) {
              var getParentsByEquipmentRecursivelyAtDateInputDTO = {
                assetCode: [],
                date: this.date,
                superiorCode: this.selectedAsset.assetCode
              };
              this.installAssetService
                .isLastConfigurationChange(getParentsByEquipmentRecursivelyAtDateInputDTO)
                .subscribe(function(result) {
                  _this.impactInstalledBase = result;
                });
            }
          };
          DialogInstallAssetComponent.prototype.validatePopup = function() {
            if (this.isFunctionalItemStructure && this.impactInstalledBase) {
              if (!this.assetSelected.itemDataCode) {
                this.messageService.showErrorMessage(this.getTranslateKey('itemCodeRequired'));
                return false;
              } else {
                // TODO for function CODE
              }
            }
            return true;
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogInstallAssetComponent.prototype,
            'selectedAsset',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogInstallAssetComponent.prototype,
            'superiorCode',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogInstallAssetComponent.prototype,
            'date',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Number)],
            DialogInstallAssetComponent.prototype,
            'openMode',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            DialogInstallAssetComponent.prototype,
            'onValidated',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Boolean)],
            DialogInstallAssetComponent.prototype,
            'isSuperiorAircraft',
            void 0
          );
          DialogInstallAssetComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-dialog-install-asset',
                template: __webpack_require__(
                  /*! ./dialog-install-asset.component.html */ './src/app/main/fleet-management/install-asset/dialog-install-asset/dialog-install-asset.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _install_asset_service__WEBPACK_IMPORTED_MODULE_7__['InstallAssetService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_5__['PropertiesService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_4__['MessageService']
              ])
            ],
            DialogInstallAssetComponent
          );
          return DialogInstallAssetComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_6__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/install-asset/dialog-install-report/dialog-install-report.component.html':
      /*!****************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/install-asset/dialog-install-report/dialog-install-report.component.html ***!
  \****************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal style="height: 28em;" class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".eventGenerated" | translate }}: {{ reportTitle() }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group" style="overflow: hidden">\r\n      <label class="form-label"></label>\r\n\r\n      <div class="form-control" style="height: auto">\r\n        <textarea\r\n          pInputTextArea\r\n          [cols]="60"\r\n          [rows]="15"\r\n          type="text"\r\n          class="aw-textarea"\r\n          [(ngModel)]="report.reportMsg"\r\n          disabled\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="close()">\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/install-asset/dialog-install-report/dialog-install-report.component.ts':
      /*!**************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/install-asset/dialog-install-report/dialog-install-report.component.ts ***!
  \**************************************************************************************************************/
      /*! exports provided: DialogInstallReportComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogInstallReportComponent',
          function() {
            return DialogInstallReportComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var DialogInstallReportComponent = /** @class */ (function(_super) {
          __extends(DialogInstallReportComponent, _super);
          function DialogInstallReportComponent() {
            return (
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Write,
                'DialogInstallReportComponent'
              ) || this
            );
          }
          DialogInstallReportComponent.prototype.reportTitle = function() {
            var headerTitle = '';
            if (!!this.report && !!this.report.installAssetOutputDTO) {
              this.report.installAssetOutputDTO.forEach(function(res) {
                if (!!res && !!res.reportDTO && !!res.reportDTO.message) {
                  headerTitle = headerTitle + res.reportDTO.message + ';';
                }
              });
            }
            return headerTitle;
          };
          DialogInstallReportComponent.prototype.close = function() {
            this.display = false;
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogInstallReportComponent.prototype,
            'report',
            void 0
          );
          DialogInstallReportComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-dialog-install-report',
                template: __webpack_require__(
                  /*! ./dialog-install-report.component.html */ './src/app/main/fleet-management/install-asset/dialog-install-report/dialog-install-report.component.html'
                )
              }),
              __metadata('design:paramtypes', [])
            ],
            DialogInstallReportComponent
          );
          return DialogInstallReportComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/install-asset/install-asset.component.html':
      /*!**********************************************************************************!*\
  !*** ./src/app/main/fleet-management/install-asset/install-asset.component.html ***!
  \**********************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div *ngIf="componentData && componentData.objectId" class="page-subtitle">\r\n          {{ subtitle }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-actions">\r\n    <button *ngIf="saveDone" type="button" mat-raised-button (click)="report()">\r\n      {{ componentData.componentId + ".report" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      *ngIf="!saveDone"\r\n      class="btn-with-spinner"\r\n      color="primary"\r\n      [disabled]="disableSave"\r\n      type="button"\r\n      mat-raised-button\r\n      (click)="saveSuperiorAsset()"\r\n    >\r\n      <span class="lds-hourglass" *ngIf="showSaveSpinner"></span>\r\n      {{ "global.save" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      id="actions"\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show all actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n\r\n    <mat-menu #actions="matMenu">\r\n      <button *ngIf="!saveDone" type="button" mat-menu-item (click)="loadAssets()">\r\n        {{ "global.refresh" | translate }}\r\n      </button>\r\n      <button id="favorites" mat-menu-item (click)="updateFavoriteState()">\r\n        {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <mat-tab-group animationDuration="0ms" dynamicHeight>\r\n        <!-- Home -->\r\n        <mat-tab id="homeTab">\r\n          <ng-template mat-tab-label>\r\n            {{ "home" | translate }}\r\n          </ng-template>\r\n          <div class="grid-row">\r\n            <div class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ "page.mainData" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <div class="column">\r\n                    <div class="row">\r\n                      <div class="form-group required">\r\n                        <label class="form-label">{{ componentData.componentId + ".date" | translate }}</label>\r\n                        <div class="form-control">\r\n                          <p-calendar\r\n                            showButtonBar="true"\r\n                            [monthNavigator]="true"\r\n                            [yearNavigator]="true"\r\n                            [yearRange]="sessionService.calendarYearRange"\r\n                            class="aw-calendar"\r\n                            [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                            (onClose)="reload()"\r\n                            [(ngModel)]="equipmentInput.informationsDTO.eventDate"\r\n                            [readonlyInput]="true"\r\n                            [showTime]="true"\r\n                          ></p-calendar>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group required">\r\n                        <label class="form-label">{{\r\n                          componentData.componentId + ".newOperationalStatus" | translate\r\n                        }}</label>\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            [options]="propertyOperationalStatus"\r\n                            [(ngModel)]="equipmentInput.newOperationalStatus"\r\n                            [showClear]="true"\r\n                            placeholder="&nbsp;"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group required">\r\n                        <label class="form-label">{{ getComponentName() + ".searchAsset" | translate }}</label>\r\n\r\n                        <div class="form-control form-control-with-modal">\r\n                          <div class="form-control-data" (click)="searchAsset()">\r\n                            {{ superiorAssetCode }}\r\n                          </div>\r\n\r\n                          <div *ngIf="superiorAssetCode" class="btn-clear-wrapper">\r\n                            <i\r\n                              class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                              aria-hidden="true"\r\n                              (click)="resetSuperiorAssetField($event)"\r\n                            ></i>\r\n                          </div>\r\n                          <div class="btn-search-wrapper">\r\n                            <i\r\n                              class="fa fa-fw fa-search aw-icon btn-search"\r\n                              aria-hidden="true"\r\n                              (click)="searchAsset()"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class="grid-row">\r\n            <div class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".assetsToInstall" | translate }} ({{\r\n                        resultsTable ? resultsTable.length : 0\r\n                      }})\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <p-table\r\n                    [resizableColumns]="true"\r\n                    #table\r\n                    class="aw-table2"\r\n                    [columns]="resultsTableCols"\r\n                    selectionMode="single"\r\n                    [(selection)]="selectedAssetRow"\r\n                    [value]="resultsTable"\r\n                    (onRowUnselect)="onAssetRowUnselect()"\r\n                    (onRowSelect)="onAssetRowSelect($event.index)"\r\n                    [scrollable]="true"\r\n                  >\r\n                    <ng-template pTemplate="emptymessage">\r\n                      <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n                      <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                        <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                        <div class="lds-hourglass"></div>\r\n                      </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="caption">\r\n                      <div class="aw-table-header" [ngClass]="{ \'rows-selected\': selectedAssetRow }">\r\n                        <div class="aw-table-global-filter">\r\n                          <label class="aw-table-global-filter-label">\r\n                            <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                          </label>\r\n\r\n                          <input\r\n                            #tableGlobalFilter\r\n                            class="aw-table-global-filter-input"\r\n                            type="text"\r\n                            placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                            (input)="table.filterGlobal($event.target.value, \'contains\')"\r\n                          />\r\n                        </div>\r\n\r\n                        <div class="aw-table-actions">\r\n                          <button\r\n                            *ngIf="selectedAssetRow && !saveDone"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="editSelectedAsset()"\r\n                          >\r\n                            {{ "global.edit" | translate }}\r\n                          </button>\r\n\r\n                          <button\r\n                            *ngIf="selectedAssetRow && !selectedAssetRow.alert"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="deleteAsset()"\r\n                          >\r\n                            {{ "global.delete" | translate }}\r\n                          </button>\r\n\r\n                          <button\r\n                            *ngIf="resultsTable && !selectedAssetRow"\r\n                            type="button"\r\n                            mat-raised-button\r\n                            (click)="addAsset()"\r\n                          >\r\n                            {{ "global.add" | translate }}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="colgroup">\r\n                      <colgroup>\r\n                        <col style="width: 10%" />\r\n                        <col style="width: 10%" />\r\n                        <col style="width: 17.5%" />\r\n                        <col style="width: 12%" />\r\n                        <col style="width: 15%" />\r\n                        <col style="width: 10%" />\r\n                        <col style="width: 5%" />\r\n                        <col style="width: 10.5%" />\r\n                        <col style="width: 5%" />\r\n                      </colgroup>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="header" let-columns>\r\n                      <tr>\r\n                        <th style="text-align: left">{{ getComponentName() + ".assetPn" | translate }}</th>\r\n                        <th style="text-align: left">{{ getComponentName() + ".assetSn" | translate }}</th>\r\n                        <th style="text-align: left">{{ getComponentName() + ".assetDesignation" | translate }}</th>\r\n                        <th style="text-align: left">{{ getComponentName() + ".assetStatusLabel" | translate }}</th>\r\n                        <th style="text-align: left">{{ getComponentName() + ".funLocCode" | translate }}</th>\r\n                        <th style="text-align: left">{{ getComponentName() + ".itemDataCode" | translate }}</th>\r\n                        <th style="text-align: left">{{ getComponentName() + ".position" | translate }}</th>\r\n                        <th style="text-align: left">{{ getComponentName() + ".superiorAssetAtDate" | translate }}</th>\r\n                        <th *ngIf="!saveDone" style="text-align: center">\r\n                          {{ getComponentName() + ".alerts" | translate }}\r\n                        </th>\r\n                        <th *ngIf="saveDone" style="text-align: center">\r\n                          {{ getComponentName() + ".report" | translate }}\r\n                        </th>\r\n                      </tr>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="body" let-rowData let-rowIndex="rowIndex">\r\n                      <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                        <td style="text-align: left">\r\n                          <span>{{ rowData["assetPn"] }}</span>\r\n                        </td>\r\n\r\n                        <td style="text-align: left">\r\n                          <span\r\n                            ><a (click)="openAsset(rowData)">{{ rowData["assetSn"] }}</a></span\r\n                          >\r\n                        </td>\r\n\r\n                        <td style="text-align: left">\r\n                          <span pTooltip="{{ rowData[\'assetDesignation\'] }}" tooltipPosition="bottom">{{\r\n                            rowData["assetDesignation"]\r\n                          }}</span>\r\n                        </td>\r\n\r\n                        <td style="text-align: left">\r\n                          <span>{{ rowData["assetStatusLabel"] }}</span>\r\n                        </td>\r\n\r\n                        <td style="text-align: left">\r\n                          <span pTooltip="{{ rowData[\'funLocCode\'] }}" tooltipPosition="bottom">{{\r\n                            rowData["funLocCode"]\r\n                          }}</span>\r\n                        </td>\r\n\r\n                        <td style="text-align: left">\r\n                          <span pTooltip="{{ rowData[\'itemDataCode\'] }}" tooltipPosition="bottom">{{\r\n                            rowData["itemDataCode"]\r\n                          }}</span>\r\n                        </td>\r\n\r\n                        <td style="text-align: left">\r\n                          <span>{{ rowData["position"] }}</span>\r\n                        </td>\r\n\r\n                        <td style="text-align: left">\r\n                          <span>{{ rowData["superiorAsset"] }}</span>\r\n                        </td>\r\n\r\n                        <td\r\n                          *ngIf="!saveDone"\r\n                          style="text-align: center"\r\n                          pTooltip="{{ rowData[\'alertMessage\'] }}"\r\n                          tooltipPosition="top"\r\n                        >\r\n                          <span *ngIf="rowData[\'alert\']" class="alert alert--ok">\r\n                            {{ getComponentName() + ".alertOk" | translate }}\r\n                          </span>\r\n\r\n                          <span *ngIf="!rowData[\'alert\']" class="alert alert--nok">\r\n                            {{ getComponentName() + ".alertNok" | translate }}\r\n                          </span>\r\n                        </td>\r\n\r\n                        <td\r\n                          *ngIf="saveDone"\r\n                          style="text-align: center"\r\n                          pTooltip="{{ rowData[\'reportMessage\'] }}"\r\n                          tooltipPosition="top"\r\n                        >\r\n                          <span *ngIf="rowData[\'report\']" class="alert alert--ok">\r\n                            {{ getComponentName() + ".alertOk" | translate }}\r\n                          </span>\r\n\r\n                          <span *ngIf="!rowData[\'report\']" class="alert alert--nok">\r\n                            {{ getComponentName() + ".alertNok" | translate }}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </p-table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab id="additionalTab">\r\n          <ng-template mat-tab-label>\r\n            {{ "page.additionalData" | translate }}\r\n          </ng-template>\r\n          <div class="grid-row">\r\n            <div class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">{{ "page.additionalData" | translate }}</h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div class="form-group">\r\n                          <label class="form-label">{{ getComponentName() + ".fixStatus" | translate }}</label>\r\n\r\n                          <div class="form-control">\r\n                            <p-dropdown\r\n                              class="aw-dropdown fixed-width"\r\n                              [options]="fixStatusList"\r\n                              [(ngModel)]="equipmentInput.fixStatusFromAsset"\r\n                              pTooltip="{{ getStatusLabel(equipmentInput.fixStatusFromAsset) }}"\r\n                              tooltipPosition="top"\r\n                              placeholder="&nbsp;"\r\n                              [showClear]="true"\r\n                              appendTo="body"\r\n                            ></p-dropdown>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".subject" | translate }} </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="equipmentInput.informationsDTO.subject"\r\n                              [title]="\r\n                                equipmentInput.informationsDTO.subject === undefined\r\n                                  ? \'\'\r\n                                  : equipmentInput.informationsDTO.subject\r\n                              "\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".description" | translate }}\r\n                          </label>\r\n\r\n                          <div class="form-control text-area">\r\n                            <textarea\r\n                              class="aw-textarea"\r\n                              [rows]="3"\r\n                              pInputTextarea\r\n                              [(ngModel)]="equipmentInput.informationsDTO.description"\r\n                            ></textarea>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section">\r\n                    <h4 class="section-title">{{ componentData.componentId + ".linkedEvent" | translate }}</h4>\r\n\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".eventCode" | translate }} </label>\r\n                          <div class="form-control form-control-with-btn" (click)="searchEventCode()">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="equipmentInput.informationsDTO.linkedEventCode"\r\n                              [ngModelOptions]="{ standalone: true }"\r\n                              disabled="true"\r\n                            />\r\n                            <i\r\n                              class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                              aria-hidden="true"\r\n                              *ngIf="equipmentInput.informationsDTO.linkedEventCode"\r\n                              (click)="resetEventField($event)"\r\n                            ></i>\r\n                            <i\r\n                              class="fa fa-fw fa-search aw-icon btn-search"\r\n                              aria-hidden="true"\r\n                              (click)="searchEventCode()"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".type" | translate }} </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="eventType"\r\n                              maxlength="20"\r\n                              disabled="true"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".subject" | translate }} </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="eventSubject"\r\n                              [title]="eventSubject == \'null\' ? \'\' : eventSubject"\r\n                              maxlength="20"\r\n                              disabled="true"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".isScheduled" | translate }}\r\n                          </label>\r\n                          <div class="form-control">\r\n                            <p-checkbox\r\n                              binary="true"\r\n                              class="aw-checkbox"\r\n                              [(ngModel)]="equipmentInput.informationsDTO.isScheduled"\r\n                            ></p-checkbox>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".generateEvent" | translate }}\r\n                          </label>\r\n                          <div class="form-control">\r\n                            <p-checkbox\r\n                              binary="true"\r\n                              class="aw-checkbox"\r\n                              [(ngModel)]="equipmentInput.informationsDTO.generateEvent"\r\n                              [disabled]="true"\r\n                            ></p-checkbox>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section" [hidden]="!showAdvancedCriteria">\r\n                    <h4 class="section-title">\r\n                      {{ componentData.componentId + ".evolutionLinkedtoAsset" | translate }} ({{\r\n                        evolutionsLinked ? evolutionsLinked.length : 0\r\n                      }})\r\n                    </h4>\r\n\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        [resizableColumns]="true"\r\n                        #evolutionsTable\r\n                        class="aw-table2"\r\n                        [columns]="evolutionsTableCols"\r\n                        [value]="evolutionsLinked"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingAssetTable"> &nbsp;</span>\r\n\r\n                          <div *ngIf="isLoadingAssetTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableEvolutionGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="evolutionsTable.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              {{ componentData.componentId + "." + col.field | translate }}\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngSwitchCase="\'isPartiallyApplied\'">\r\n                                <span *ngIf="rowData[col.field]">\r\n                                  <i class="fa fa-fw fa-check" aria-hidden="true"></i>\r\n                                </span>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'isNotApplicable\'">\r\n                                <span *ngIf="rowData[col.field]">\r\n                                  <i class="fa fa-fw fa-check" aria-hidden="true"></i>\r\n                                </span>\r\n                              </span>\r\n                              <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section" [hidden]="!showAdvancedCriteria">\r\n                    <h4 class="section-title">\r\n                      {{ componentData.componentId + ".newEvolutionsAssociated" | translate }} ({{\r\n                        evolutionsLinked ? evolutionsLinked.length : 0\r\n                      }})\r\n                    </h4>\r\n\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        [resizableColumns]="true"\r\n                        #newEvolutionsTable\r\n                        class="aw-table2"\r\n                        [columns]="evolutionsTableCols"\r\n                        [value]="newEvolutionsLinked"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingAssetTable"> &nbsp;</span>\r\n\r\n                          <div *ngIf="isLoadingAssetTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableNewEvolutionGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="newEvolutionsTable.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              {{ componentData.componentId + "." + col.field | translate }}\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngSwitchCase="\'isPartiallyApplied\'">\r\n                                <span *ngIf="rowData[col.field]">\r\n                                  <i class="fa fa-fw fa-check" aria-hidden="true"></i>\r\n                                </span>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'isNotApplicable\'">\r\n                                <span *ngIf="rowData[col.field]">\r\n                                  <i class="fa fa-fw fa-check" aria-hidden="true"></i>\r\n                                </span>\r\n                              </span>\r\n                              <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section" [hidden]="!showAdvancedCriteria">\r\n                    <h4 class="section-title">\r\n                      {{ componentData.componentId + ".canceledMeasureProgress" | translate }} ({{\r\n                        evolutionsLinked ? evolutionsLinked.length : 0\r\n                      }})\r\n                    </h4>\r\n\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        [resizableColumns]="true"\r\n                        #counterTable\r\n                        class="aw-table2"\r\n                        [columns]="counterTableCols"\r\n                        [value]="canceledMeasureProgress"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingAssetTable"> &nbsp;</span>\r\n\r\n                          <div *ngIf="isLoadingAssetTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableCounterGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="counterTable.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              {{ componentData.componentId + "." + col.field | translate }}\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section" [hidden]="!showAdvancedCriteria">\r\n                    <h4 class="section-title">\r\n                      {{ componentData.componentId + ".createdMeasureProgress" | translate }} ({{\r\n                        evolutionsLinked ? evolutionsLinked.length : 0\r\n                      }})\r\n                    </h4>\r\n\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        [resizableColumns]="true"\r\n                        #counterTable2\r\n                        class="aw-table2"\r\n                        [columns]="counterTableCols"\r\n                        [value]="createMeasureProgress"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingAssetTable"> &nbsp;</span>\r\n\r\n                          <div *ngIf="isLoadingAssetTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableCounterGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="counterTable2.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              {{ componentData.componentId + "." + col.field | translate }}\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="row search-criteria-footer">\r\n                    <div\r\n                      class="advanced-criteria-toggler"\r\n                      *ngIf="!showAdvancedCriteria"\r\n                      (click)="showAdvancedCriteria = !showAdvancedCriteria"\r\n                    >\r\n                      <i class="fa fa-fw fa-plus" aria-hidden="true"></i>\r\n\r\n                      <div class="advanced-criteria-toggler-more">\r\n                        {{ componentData.componentId + ".showMoreDetails" | translate }}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      class="advanced-criteria-toggler"\r\n                      *ngIf="showAdvancedCriteria"\r\n                      (click)="showAdvancedCriteria = !showAdvancedCriteria"\r\n                    >\r\n                      <i class="fa fa-fw fa-minus" aria-hidden="true"></i>\r\n\r\n                      <div class="advanced-criteria-toggler-less">\r\n                        {{ componentData.componentId + ".showLessDetails" | translate }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </div>\r\n\r\n  <aw-dialog-search-equipment\r\n    *ngIf="dialogAddAssetVisible"\r\n    [(display)]="dialogAddAssetVisible"\r\n    [selectionMultiple]="true"\r\n    [isGroundEquipment]="isGroundEquipment"\r\n    [equipmentFunction]="equipmentFunctionToSearch"\r\n    (onSelected)="onAddAsset($event)"\r\n  ></aw-dialog-search-equipment>\r\n\r\n  <aw-dialog-search-equipment\r\n    *ngIf="showQuickSearchEquipmentPopup"\r\n    [(display)]="showQuickSearchEquipmentPopup"\r\n    [equipment-code]="superiorAssetCode"\r\n    [isGroundEquipment]="isGroundEquipment"\r\n    [equipmentFunction]="equipmentFunctionToSearch"\r\n    (onSelected)="setSelectedAsset($event)"\r\n  ></aw-dialog-search-equipment>\r\n\r\n  <aw-dialog-install-asset\r\n    *ngIf="showInstallAssetPopup"\r\n    [(display)]="showInstallAssetPopup"\r\n    [superiorCode]="equipmentInput.equipmentCodeFather"\r\n    [selectedAsset]="selectedAssetRow"\r\n    [isSuperiorAircraft]="isSuperiorAircraft"\r\n    [date]="equipmentInput.informationsDTO.eventDate"\r\n    (onValidated)="onRowEdit($event)"\r\n  ></aw-dialog-install-asset>\r\n\r\n  <aw-dialog-install-report\r\n    *ngIf="showInstallReportPopup"\r\n    [(display)]="showInstallReportPopup"\r\n    [report]="installEquipmentOutputWithReportDTO"\r\n  ></aw-dialog-install-report>\r\n\r\n  <aw-dialog-search-event\r\n    *ngIf="showQuickSearchEventPopup"\r\n    [(display)]="showQuickSearchEventPopup"\r\n    (onSelected)="setSelectedEvent($event)"\r\n  ></aw-dialog-search-event>\r\n</div>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/install-asset/install-asset.component.scss':
      /*!**********************************************************************************!*\
  !*** ./src/app/main/fleet-management/install-asset/install-asset.component.scss ***!
  \**********************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vZmxlZXQtbWFuYWdlbWVudC9pbnN0YWxsLWFzc2V0L2luc3RhbGwtYXNzZXQuY29tcG9uZW50LnNjc3MifQ== */';

        /***/
      },

    /***/ './src/app/main/fleet-management/install-asset/install-asset.component.ts':
      /*!********************************************************************************!*\
  !*** ./src/app/main/fleet-management/install-asset/install-asset.component.ts ***!
  \********************************************************************************/
      /*! exports provided: InstallAssetComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'InstallAssetComponent', function() {
          return InstallAssetComponent;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! moment */ './node_modules/moment/moment.js'
        );
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          moment__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/components/component-sidebar/page-toc.service */ './src/app/shared/components/component-sidebar/page-toc.service.ts'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_page_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../shared/types/page-component */ './src/app/shared/types/page-component.ts'
        );
        /* harmony import */ var _shared_utils_bido_equipment_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../shared/utils/bido-equipment-utils */ './src/app/shared/utils/bido-equipment-utils.ts'
        );
        /* harmony import */ var _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ../../../shared/utils/list-utils */ './src/app/shared/utils/list-utils.ts'
        );
        /* harmony import */ var _shared_utils_object_utils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ../../../shared/utils/object-utils */ './src/app/shared/utils/object-utils.ts'
        );
        /* harmony import */ var _install_asset_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ./install-asset.service */ './src/app/main/fleet-management/install-asset/install-asset.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __assign =
          (undefined && undefined.__assign) ||
          function() {
            __assign =
              Object.assign ||
              function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                  s = arguments[i];
                  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
              };
            return __assign.apply(this, arguments);
          };
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };
        var __read =
          (undefined && undefined.__read) ||
          function(o, n) {
            var m = typeof Symbol === 'function' && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
              r,
              ar = [],
              e;
            try {
              while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
              e = { error: error };
            } finally {
              try {
                if (r && !r.done && (m = i['return'])) m.call(i);
              } finally {
                if (e) throw e.error;
              }
            }
            return ar;
          };
        var __spread =
          (undefined && undefined.__spread) ||
          function() {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
          };

        var InstallAssetComponent = /** @class */ (function(_super) {
          __extends(InstallAssetComponent, _super);
          function InstallAssetComponent(
            favoriteService,
            loaderService,
            messageService,
            pageTocService,
            serializationService,
            tabService,
            installAssetService,
            translateService,
            sessionService,
            propertiesService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Write,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService,
                pageTocService
              ) || this;
            _this.installAssetService = installAssetService;
            _this.translateService = translateService;
            _this.sessionService = sessionService;
            _this.propertiesService = propertiesService;
            _this.enableReport = false;
            _this.showInstallReportPopup = false;
            _this.isSuperiorAircraft = false;
            _this.isLoading = false;
            _this.component = InstallAssetComponent_1;
            _super.prototype.registerPageTocEntryObservable.call(_this);
            _this.dialogAddAssetVisible = false;
            _this.saveDone = false;
            _this.isLoading = false;
            _this.showInstallAssetPopup = false;
            _this.showEditPanel = false;
            _this.isReadOnly = false;
            _this.showAdvancedCriteria = false;
            _this.equipmentInput = {
              informationsDTO: {}
            };
            _this.showAdvancedFields = false;
            _this.resultsTable = [];
            _this.generateEvent = true;
            _this.isScheduled = false;
            _this.isSaveAllowed = true;
            _this.superiorAtaCode = undefined;
            _this.propertyVariant = [];
            _this.fixStatusList = [];
            _this.propertyOperationalStatus = [];
            _this.familyVariant = undefined;
            _this.showQuickSearchEquipmentPopup = false;
            _this.showQuickSearchEventPopup = false;
            _this.selectedAnchor = undefined;
            _this.assetsToBeInstalled = [];
            _this.selectedAssetRow = undefined;
            _this.selectedAssetRowIndex = undefined;
            _this.installEquipmentOutputWithReportDTO = {};
            // Initialize Installation Date
            _this.date = new Date();
            _this.readingHours = _this.date.getHours().toString();
            _this.readingMin = _this.date.getMinutes().toString();
            _this.resultsTableCols = [
              { field: 'assetPn', alignment: 'left' },
              { field: 'assetSn', alignment: 'left' },
              { field: 'assetDesignation', alignment: 'left' },
              { field: 'assetStatusLabel', alignment: 'left' },
              { field: 'funLocCode', alignment: 'left' },
              { field: 'itemDataCode', alignment: 'left' },
              { field: 'position', alignment: 'left' },
              { field: 'superiorAsset', alignment: 'left' },
              { field: 'alert', alignment: 'left' }
            ];
            _this.resultsTableColsClone = JSON.parse(JSON.stringify(_this.resultsTableCols));
            _this.evolutionsTableCols = [
              { field: 'equipmentCode', alignment: 'left', width: '10rem' },
              { field: 'evolutionType', alignment: 'left', width: '10rem' },
              { field: 'evolutionNumber', alignment: 'left', width: '10rem' },
              { field: 'evolutionRevisionNumber', alignment: 'left', width: '10rem' },
              { field: 'applicationDate', alignment: 'left', width: '10rem' },
              { field: 'isPartiallyApplied', alignment: 'left', width: '5rem' },
              { field: 'dateRemove', alignment: 'left', width: '10rem' },
              { field: 'isNotApplicable', alignment: 'left', width: '5rem' }
            ];
            _this.counterTableCols = [
              { field: 'asset', alignment: 'left' },
              { field: 'counterCode', alignment: 'left' },
              { field: 'date', alignment: 'left' },
              { field: 'valueBefore', alignment: 'left' },
              { field: 'valueAfter', alignment: 'left' }
            ];
            _this.translateService.onLangChange.subscribe(function(_) {
              _this.loadDropDownLists();
            });
            return _this;
          }
          InstallAssetComponent_1 = InstallAssetComponent;
          InstallAssetComponent.prototype.getComponentName = function() {
            return 'InstallAssetComponent';
          };
          InstallAssetComponent.prototype.ngOnInit = function() {
            _super.prototype.ngOnInit.call(this);
            // this.displayComponentContext('global.search', true);
            this.loadDropDownLists();
            if (!!this.componentData && !!this.componentData.objectId) {
              this.assetsToInstall = this.serializationService.deserialize(this.componentData.objectId);
              if (this.assetsToInstall) {
                this.equipmentInput.informationsDTO.eventDate = this.assetsToInstall.date
                  ? new Date(this.assetsToInstall.date)
                  : undefined;
                if (this.assetsToInstall.superiorAssetCode) {
                  this.loadSuperiorEquipment(this.assetsToInstall.superiorAssetCode);
                }
                if (
                  !_shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_17__['ListUtils'].isNullOrEmpty(
                    this.assetsToInstall.assetCode
                  )
                ) {
                  this.loadAssets();
                }
              }
            }
            this.toc = [
              {
                id: 'mainInformationAnchor',
                anchor: this.mainInfoAnchor,
                label: 'Main Information'
              },
              {
                id: 'assetsToBeInstalledAnchor',
                anchor: this.assetToInstallGrid,
                label: 'Assets to be Installed'
              },
              {
                id: 'additionalInformationAnchor',
                anchor: this.additionalFields,
                label: 'Additional Information'
              }
            ];
          };
          InstallAssetComponent.prototype.loadSuperiorEquipment = function(equipmentCode) {
            var _this = this;
            var input = {
              equipmentCode: equipmentCode
            };
            this.installAssetService.findBidoEquipment(input).subscribe(function(result) {
              _this.superiorAsset = result;
              // this.superiorAssetCode = BidoEquipmentUtils.createAssetName(this.superiorAsset); // This is commented as it show be assetCode and not name
              _this.superiorAssetCode = result.equipmentCode;
              var event = {
                equipmentCode: result.equipmentCode,
                equipmentDesignation: result.equipmentDesignation,
                equipmentFunction: result.equipmentFunction,
                familyVariantCode: result.familyVariantCode,
                operationalStatus: result.operationalStatus,
                pnCode: result.pnCode,
                modelCode: result.modelCode,
                operatorCustomerCode: result.operatorCustomerCode,
                ownerCustomerCode: result.ownerCustomerCode,
                sn: result.sn,
                registration: result.registration
              };
              _this.setSelectedAsset(event);
              _this.getFixNewStatusDropdownList();
              _this.equipmentInput.equipmentCodeFather = _this.superiorAsset.equipmentCode;
              _this.setAsGroundEquipment(result);
              _this.loadDropDownLists();
            });
          };
          InstallAssetComponent.prototype.setAsGroundEquipment = function(result) {
            if (
              !!result.equipmentFunction &&
              (result.equipmentFunction ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .ITEM_FAMILY_CODE_GROUND_SUPPORT_EQUIPMENT_KEY ||
                result.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                    .ITEM_FAMILY_CODE_TOOL_KEY ||
                result.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                    .ITEM_FAMILY_CODE_PILOT_EQUIPMENT_KEY)
            ) {
              this.equipmentFunctionToSearch = result.equipmentFunction;
              this.isGroundEquipment = true;
            }
          };
          InstallAssetComponent.prototype.addAsset = function() {
            this.dialogAddAssetVisible = true;
          };
          InstallAssetComponent.prototype.checkAssets = function() {
            var _this = this;
            this.resultsTable.forEach(function(row) {
              if (
                _this.superiorAsset &&
                _this.superiorAsset.equipmentCode &&
                _this.equipmentInput.informationsDTO.eventDate
              ) {
                var date = new Date(
                  _this.equipmentInput.informationsDTO.eventDate.getFullYear(),
                  _this.equipmentInput.informationsDTO.eventDate.getMonth(),
                  _this.equipmentInput.informationsDTO.eventDate.getDate(),
                  _this.equipmentInput.informationsDTO.eventDate.getHours(),
                  _this.equipmentInput.informationsDTO.eventDate.getMinutes(),
                  0,
                  0
                );
                var input = {
                  equipmentCode: row.assetCode,
                  fatherEquipmentCode: _this.superiorAsset.equipmentCode,
                  installationDate: date
                };
                _this.installAssetService.checkInstall(input).subscribe(function(result) {
                  row.alert = result.status;
                  row.alertMessage = result.message;
                  _this.resultsTable = __spread(_this.resultsTable);
                });
              }
            });
          };
          InstallAssetComponent.prototype.reload = function(event) {
            var _this = this;
            var assetCodes = this.resultsTable
              .map(function(elt) {
                return elt.assetCode;
              })
              .filter(function(elt) {
                return _shared_utils_object_utils__WEBPACK_IMPORTED_MODULE_18__['ObjectUtils'].isDefined(elt);
              });
            var assetInput = {
              assetCode: assetCodes,
              date: this.equipmentInput.informationsDTO.eventDate
            };
            this.installAssetService.findAssetInstallList(assetInput).subscribe(function(result) {
              _this.assetsToBeInstalled = __spread(result);
              _this.resultsTable = _this.convertIntoRowType(result);
              // this.enableSave(result);
              _this.isLoading = false;
              _this.resultsTable.forEach(function(row, index) {
                if (event && event.assetCode === row.assetCode) {
                  _this.resultsTable[index] = __assign({}, event);
                }
                if (
                  row.assetCode &&
                  _this.superiorAsset &&
                  _this.superiorAsset.equipmentCode &&
                  _this.equipmentInput.informationsDTO.eventDate
                ) {
                  var date = new Date(
                    _this.equipmentInput.informationsDTO.eventDate.getFullYear(),
                    _this.equipmentInput.informationsDTO.eventDate.getMonth(),
                    _this.equipmentInput.informationsDTO.eventDate.getDate(),
                    _this.equipmentInput.informationsDTO.eventDate.getHours(),
                    _this.equipmentInput.informationsDTO.eventDate.getMinutes(),
                    0,
                    0
                  );
                  var input = {
                    equipmentCode: row.assetCode,
                    fatherEquipmentCode: _this.superiorAsset.equipmentCode,
                    installationDate: date
                  };
                  _this.installAssetService.checkInstall(input).subscribe(function(resultCI) {
                    row.alert = resultCI.status;
                    row.alertMessage = resultCI.message;
                    _this.resultsTable = __spread(_this.resultsTable);
                  });
                  _this.selectedAssetRow = undefined;
                  _this.selectedAssetRowIndex = undefined;
                }
              });
            });
          };
          InstallAssetComponent.prototype.onAddAsset = function(newAssetList) {
            var _this = this;
            var assetCodes = newAssetList
              .map(function(elt) {
                return elt.equipmentCode;
              })
              .filter(function(elt) {
                return _shared_utils_object_utils__WEBPACK_IMPORTED_MODULE_18__['ObjectUtils'].isDefined(elt);
              });
            var assetInput = {
              assetCode: assetCodes,
              date: this.equipmentInput.informationsDTO.eventDate
            };
            this.installAssetService.findAssetInstallList(assetInput).subscribe(function(result) {
              _this.assetsToBeInstalled = __spread(result);
              _this.resultsTable = __spread(_this.resultsTable, _this.convertIntoRowType(result));
              // this.enableSave(result);
              _this.isLoading = false;
              _this.resultsTable.forEach(function(row) {
                if (
                  row._obj &&
                  row._obj.equipmentCode &&
                  _this.superiorAsset &&
                  _this.superiorAsset.equipmentCode &&
                  _this.equipmentInput.informationsDTO.eventDate
                ) {
                  var date = new Date(
                    _this.equipmentInput.informationsDTO.eventDate.getFullYear(),
                    _this.equipmentInput.informationsDTO.eventDate.getMonth(),
                    _this.equipmentInput.informationsDTO.eventDate.getDate(),
                    _this.equipmentInput.informationsDTO.eventDate.getHours(),
                    _this.equipmentInput.informationsDTO.eventDate.getMinutes(),
                    0,
                    0
                  );
                  var input = {
                    equipmentCode: row._obj.equipmentCode,
                    fatherEquipmentCode: _this.superiorAsset.equipmentCode,
                    installationDate: date
                  };
                  _this.installAssetService.checkInstall(input).subscribe(function(resultCI) {
                    row.alert = resultCI.status;
                    row.alertMessage = resultCI.message;
                    _this.resultsTable = __spread(_this.resultsTable);
                  });
                  _this.selectedAssetRow = undefined;
                  _this.selectedAssetRowIndex = undefined;
                }
              });
              if (!_this.checkAssetListStatus()) {
                _this.disableSave = true;
              } else {
                _this.disableSave = false;
              }
              _this.getFixNewStatusDropdownList();
            });
          };
          InstallAssetComponent.prototype.openAsset = function(row) {
            if (row && row.assetCode) {
              if (this.isAssetAircraft(row)) {
                this.openAircraft(row.assetCode);
              } else if (this.isAssetEngine(row)) {
                this.openEngine(row.assetCode);
              } else if (this.isAssetEquipment(row)) {
                this.openEquipment(row.assetCode);
              }
            } else {
              this.messageService.showErrorMessage(this.getTranslateKey('erroOnOpenAsset'));
            }
          };
          InstallAssetComponent.prototype.isAssetAircraft = function(asset) {
            return (
              !!asset.assetFunctionType &&
              asset.assetFunctionType ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .ITEM_FAMILY_CODE_AIRCRAFT_KEY
            );
          };
          InstallAssetComponent.prototype.isAssetEngine = function(asset) {
            return (
              !!asset.assetFunctionType &&
              asset.assetFunctionType ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .ITEM_FAMILY_CODE_ENGINE_KEY
            );
          };
          InstallAssetComponent.prototype.isAssetEquipment = function(asset) {
            return !!asset.assetFunctionType && !this.isAssetAircraft(asset) && !this.isAssetEngine(asset);
          };
          InstallAssetComponent.prototype.openAircraft = function(equipmentCode) {
            var objectId = {
              equipmentCode: equipmentCode
            };
            var data = {
              id: this.tabService.generateId(),
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Read,
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__['ComponentConstants']
                  .FLE_AIRCRAFT_FORM,
              objectId: this.serializationService.serialize(objectId)
            };
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          InstallAssetComponent.prototype.openEngine = function(equipmentCode) {
            var objectId = {
              equipmentCode: equipmentCode
            };
            var data = {
              id: this.tabService.generateId(),
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Read,
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__['ComponentConstants']
                  .FLE_ENGINE_FORM,
              objectId: this.serializationService.serialize(objectId)
            };
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          InstallAssetComponent.prototype.openEquipment = function(equipmentCode) {
            var objectId = {
              equipmentCode: equipmentCode
            };
            var data = {
              id: this.tabService.generateId(),
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Read,
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__['ComponentConstants']
                  .FLE_EQUIPMENT_FORM,
              objectId: this.serializationService.serialize(objectId)
            };
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          InstallAssetComponent.prototype.getStatusLabel = function(value) {
            if (!!value) {
              var dto = this.fixStatusList.filter(function(res) {
                return res.value === value;
              });
              return !!dto && !!dto[0] ? dto[0].label : '';
            } else {
              return '';
            }
          };
          /**
           * Method call to fill the asset information
           */
          InstallAssetComponent.prototype.loadAssets = function() {
            this.selectedAssetRow = undefined;
            this.showEditPanel = false;
            this.equipmentInput.newOperationalStatus = undefined;
            this.equipmentInput.informationsDTO = {};
            this.eventType = '';
            this.eventSubject = '';
            if (!!this.equipmentInput && this.equipmentInput.informationsDTO) {
              this.equipmentInput.informationsDTO.eventDate = new Date();
              this.equipmentInput.informationsDTO.generateEvent = true;
            }
            this.resetTable();
          };
          InstallAssetComponent.prototype.resetTable = function() {
            var _this = this;
            this.isLoading = true;
            var assetCodes = [];
            if (
              !!this.equipmentInput &&
              !!this.equipmentInput.informationsDTO &&
              !!this.assetsToInstall &&
              !!this.assetsToInstall.assetCode
            ) {
              this.assetsToInstall.assetCode.forEach(function(code) {
                if (!!code) {
                  assetCodes.push(code);
                }
              });
              var assetInput = {
                assetCode: assetCodes,
                date: this.equipmentInput.informationsDTO.eventDate
              };
              this.installAssetService.findAssetInstallList(assetInput).subscribe(function(result) {
                _this.assetsToBeInstalled = __spread(result);
                _this.resultsTable = _this.convertIntoRowType(result);
                // this.enableSave(result);
                _this.isLoading = false;
                // this.bindEvolutionsTables();
                // this.getCounterMeasureList();
                if (!_this.checkAssetListStatus()) {
                  _this.disableSave = true;
                } else {
                  _this.disableSave = false;
                }
              });
            }
          };
          InstallAssetComponent.prototype.returnLabel = function(value) {
            var dto = this.propertyOperationalStatus.filter(function(res) {
              if (value.assetStatusValue === res.value) {
                return res;
              }
            });
            return dto[0];
          };
          InstallAssetComponent.prototype.convertIntoRowType = function(assets) {
            var _this = this;
            var assetsTable = [];
            var isGroundEquipmentFound = false;
            assets.forEach(function(row) {
              if (!!row) {
                var assetRow = {
                  assetPn: row.assetPn,
                  assetSn: row.assetSn,
                  assetDesignation: row.assetDesignation,
                  assetStatusLabel: !!_this.returnLabel(row) ? _this.returnLabel(row).label : '',
                  assetStatusValue: row.assetStatusValue,
                  assetFamilyVariant: row.assetFamilyVariant,
                  assetFunctionType: row.assetFunctionType,
                  assetFunLocCode: row.funLocCode,
                  assetOperationalStatus: !!row.equipment ? row.equipment.operationalStatus : undefined,
                  superiorPn: row.superiorPn,
                  superiorSN: row.superiorSN,
                  superiorDesignation: row.superiorDesignation,
                  superiorAsset: row.superiorEquipment
                    ? _shared_utils_bido_equipment_utils__WEBPACK_IMPORTED_MODULE_16__[
                        'BidoEquipmentUtils'
                      ].createAssetName(row.superiorEquipment)
                    : undefined,
                  funLocCode: row.funLocCode,
                  itemDataCode: row.itemDataCode,
                  position: row.position,
                  assestFatherCode: row.assestFatherCode,
                  assetCode: row.assetCode,
                  isAircraft: row.isAircraft,
                  alert: row.alert,
                  alertMessage:
                    row.exceptionMessage &&
                    row.exceptionMessage.replace('com.twomoro.aerowebb.exception.AeroWebbException:', '')
                };
                assetsTable.push(assetRow);
                // Checking equipment Type
                if (
                  !isGroundEquipmentFound &&
                  (row.assetFunctionType ===
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                      .ITEM_FAMILY_CODE_GROUND_SUPPORT_EQUIPMENT_KEY ||
                    row.assetFunctionType ===
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                        .ITEM_FAMILY_CODE_TOOL_KEY ||
                    row.assetFunctionType ===
                      _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                        .ITEM_FAMILY_CODE_PILOT_EQUIPMENT_KEY)
                ) {
                  isGroundEquipmentFound = true;
                  _this.isGroundEquipment = true;
                  _this.equipmentFunctionToSearch = row.assetFunctionType;
                }
              }
            });
            // Refresh the dropdown
            this.loadDropDownLists();
            return assetsTable;
          };
          /**
           * Reload asset information on superior asset selection
           */
          InstallAssetComponent.prototype.reloadAssets = function() {
            var _this = this;
            var assetCodes = [];
            if (
              !!this.assetsToInstall &&
              !!this.assetsToInstall.assetCode &&
              !!this.equipmentInput &&
              !!this.equipmentInput.informationsDTO
            ) {
              this.assetsToInstall.assetCode.forEach(function(code) {
                assetCodes.push(code);
              });
              var assetInput = {
                assetCode: assetCodes,
                date: this.equipmentInput.informationsDTO.eventDate
              };
              this.installAssetService.findAssetInstallList(assetInput).subscribe(function(result) {
                _this.assetsToBeInstalled = __spread(result);
                _this.resultsTable = _this.convertIntoRowType(result);
                _this.enableSave(result);
                _this.isLoading = false;
                _this.bindEvolutionsTables();
                _this.getCounterMeasureList();
              });
            }
          };
          /**
           * Check if save is valid or not
           */
          InstallAssetComponent.prototype.enableSave = function(assets) {
            var checkRowAlert = 0;
            assets.forEach(function(asset) {
              checkRowAlert = asset.alert
                ? // tslint:disable-next-line:no-string-literal
                  asset['assetStatusValue'] === '3-spa' || !asset['assetStatusValue']
                  ? checkRowAlert + 1
                  : checkRowAlert
                : checkRowAlert;
            });
            if (checkRowAlert === assets.length) {
              this.isSaveAllowed = true;
            }
            if (checkRowAlert < assets.length) {
              this.isSaveAllowed = false;
            }
          };
          /***********************
           * ACTIONS
           ***********************/
          InstallAssetComponent.prototype.searchAsset = function() {
            if (this.isSaveAllowed) {
              this.showQuickSearchEquipmentPopup = true;
            }
          };
          InstallAssetComponent.prototype.resetSuperiorAssetField = function(ev) {
            if (this.isSaveAllowed) {
              this.equipmentInput.equipmentCodeFather = undefined;
              this.superiorAssetCode = undefined;
              this.equipmentInput.fixStatusFromAsset = undefined;
              this.equipmentInput.informationsDTO.subject = undefined;
              this.resetTable();
              ev.stopPropagation();
            }
          };
          InstallAssetComponent.prototype.setSelectedAsset = function(event) {
            if (!!event) {
              this.selectedSuperiorAssetDTO = event;
              this.fixStatusList = [];
              this.equipmentInput.equipmentCodeFather = !!event.equipmentCode ? event.equipmentCode : '';
              this.superiorAssetCode = !!event.equipmentCode ? event.equipmentCode : '';
              this.superiorAtaCode = !!event.ataCode ? event.ataCode : '';
              this.superiorAssetDesignation = !!event.equipmentDesignation ? event.equipmentDesignation : '';
              this.isSuperiorAircraft =
                event.equipmentFunction === 'Aircraft' ? this.hidePositionCol() : this.setOriginalCols();
              // Call to fetch counter
              this.getCounterMeasureList(event);
              this.getFixNewStatusDropdownList();
              this.addSuperiorToAssetGrid(event);
              if (this.isSaveAllowed) {
                this.fillSubject(event);
              }
            }
          };
          InstallAssetComponent.prototype.setOriginalCols = function() {
            this.resultsTableCols = JSON.parse(JSON.stringify(this.resultsTableColsClone));
            return false;
          };
          /**
           * Hide Position Column in case aircraft is selected
           */
          InstallAssetComponent.prototype.hidePositionCol = function() {
            var _this = this;
            this.resultsTableCols.filter(function(res, index) {
              if (res.field === 'position') {
                _this.resultsTableCols.splice(index, 1);
              }
            });
            return true;
          };
          /**
           * Fill Subject in additional information tab
           */
          InstallAssetComponent.prototype.fillSubject = function(event) {
            var _this = this;
            if (!!this.equipmentInput && !!this.equipmentInput.informationsDTO) {
              var subject_1 = '';
              this.resultsTable.forEach(function(row) {
                if (row) {
                  if (!event.pnCode && !row.superiorSN) {
                    if (!!row.assetPn && !row.assetSn) {
                      subject_1 +=
                        _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                        ' ' +
                        row.assetPn +
                        ' ' +
                        _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                        ' ' +
                        event.familyVariantCode +
                        '; ';
                    } else if (!!row.assetPn && !!row.assetSn) {
                      subject_1 +=
                        _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                        ' ' +
                        row.assetPn +
                        '/' +
                        row.assetSn +
                        '  ' +
                        _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                        ' ' +
                        event.familyVariantCode +
                        '; ';
                    } else if (!row.assetPn && !!row.assetSn) {
                      subject_1 +=
                        _this.translateService.instant(_this.getTranslateKey('sn')) +
                        ' ' +
                        row.assetSn +
                        ' ' +
                        _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                        ' ' +
                        event.familyVariantCode +
                        '; ';
                    } else {
                      subject_1 +=
                        row.assetFamilyVariant +
                        ' ' +
                        _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                        ' ' +
                        event.familyVariantCode +
                        '; ';
                    }
                  } else if (!event.pnCode && !!row.superiorSN) {
                    var fvCode = event.familyVariantCode;
                    if (!!row.assetPn && !row.assetSn) {
                      if (!!event.registration) {
                        subject_1 +=
                          _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                          ' ' +
                          row.assetPn +
                          ' ' +
                          _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                          ' ' +
                          fvCode +
                          '| ' +
                          _this.translateService.instant(_this.getTranslateKey('msn')) +
                          ' ' +
                          event.sn +
                          '| ' +
                          event.registration +
                          '; ';
                      } else {
                        subject_1 +=
                          _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                          ' ' +
                          row.assetPn +
                          ' ' +
                          _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                          ' ' +
                          event.familyVariantCode +
                          '| ' +
                          _this.translateService.instant(_this.getTranslateKey('msn')) +
                          ' ' +
                          event.sn +
                          '; ';
                      }
                    } else if (!!row.assetPn && !!row.assetSn) {
                      if (!!event.registration) {
                        subject_1 +=
                          _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                          ' ' +
                          row.assetPn +
                          '/' +
                          row.assetSn +
                          ' ' +
                          _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                          ' ' +
                          fvCode +
                          '|\n                ' +
                          _this.translateService.instant(_this.getTranslateKey('msn')) +
                          ' ' +
                          event.sn +
                          '| ' +
                          event.registration +
                          '; ';
                      } else {
                        subject_1 +=
                          _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                          ' ' +
                          row.assetPn +
                          '/' +
                          row.assetSn +
                          ' ' +
                          _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                          ' ' +
                          fvCode +
                          '| ' +
                          _this.translateService.instant(_this.getTranslateKey('msn')) +
                          ' ' +
                          event.sn +
                          '; ';
                      }
                    } else if (!row.assetPn && !!row.assetSn) {
                      if (!!event.registration) {
                        subject_1 +=
                          _this.translateService.instant(_this.getTranslateKey('sn')) +
                          ' ' +
                          row.assetSn +
                          ' ' +
                          _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                          ' ' +
                          fvCode +
                          '| ' +
                          _this.translateService.instant(_this.getTranslateKey('msn')) +
                          ' ' +
                          event.sn +
                          '| ' +
                          event.registration +
                          '; ';
                      } else {
                        subject_1 +=
                          _this.translateService.instant(_this.getTranslateKey('sn')) +
                          ' ' +
                          row.assetSn +
                          ' ' +
                          _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                          ' ' +
                          fvCode +
                          '| ' +
                          _this.translateService.instant(_this.getTranslateKey('msn')) +
                          ' ' +
                          event.sn +
                          '; ';
                      }
                    } else {
                      if (!!event.registration) {
                        subject_1 +=
                          row.assetFamilyVariant +
                          ' ' +
                          _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                          ' ' +
                          fvCode +
                          '| ' +
                          _this.translateService.instant(_this.getTranslateKey('msn')) +
                          ' ' +
                          event.sn +
                          '| ' +
                          event.registration +
                          '; ';
                      } else {
                        subject_1 +=
                          row.assetFamilyVariant +
                          ' ' +
                          _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                          ' ' +
                          fvCode +
                          '| ' +
                          _this.translateService.instant(_this.getTranslateKey('msn')) +
                          ' ' +
                          event.sn +
                          '; ';
                      }
                    }
                  } else if (!!event.pnCode && !row.superiorSN) {
                    subject_1 +=
                      _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                      ' ' +
                      row.assetPn +
                      ' ' +
                      _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                      ' ' +
                      _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                      ' ' +
                      event.pnCode +
                      '; ';
                  } else {
                    if (!!row.assetPn && !row.assetSn) {
                      subject_1 +=
                        _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                        ' ' +
                        row.assetPn +
                        ' ' +
                        _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                        ' ' +
                        _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                        ' ' +
                        event.pnCode +
                        '/' +
                        event.sn +
                        '; ';
                    } else if (!!row.assetPn && !!row.assetSn) {
                      subject_1 +=
                        _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                        ' ' +
                        row.assetPn +
                        '/' +
                        row.assetSn +
                        ' ' +
                        _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                        ' ' +
                        _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                        ' ' +
                        event.pnCode +
                        '/' +
                        event.sn +
                        '; ';
                    } else if (!row.assetPn && !!row.assetSn) {
                      subject_1 +=
                        _this.translateService.instant(_this.getTranslateKey('sn')) +
                        ' ' +
                        row.assetSn +
                        ' ' +
                        _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                        ' ' +
                        _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                        ' ' +
                        event.pnCode +
                        '/' +
                        event.sn +
                        '; ';
                    } else {
                      subject_1 +=
                        _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                        ' ' +
                        row.assetPn +
                        ' ' +
                        _this.translateService.instant(_this.getTranslateKey('installedOn')) +
                        ' ' +
                        _this.translateService.instant(_this.getTranslateKey('pnCode')) +
                        ' ' +
                        event.pnCode +
                        '/' +
                        event.sn +
                        '; ';
                    }
                  }
                }
              });
              this.equipmentInput.informationsDTO.subject = subject_1;
            }
          };
          /**
           * Fill Superior Details in main asset table
           */
          InstallAssetComponent.prototype.addSuperiorToAssetGrid = function(event) {
            this.resultsTable.forEach(function(row) {
              row.superiorDesignation = event.equipmentDesignation;
              row.superiorPn = event.pnCode;
              row.superiorSN = event.sn;
              row.equipmentFunction = event.equipmentFunction;
            });
          };
          /**
           * Render fix new status dropdown
           */
          InstallAssetComponent.prototype.getFixNewStatusDropdownList = function() {
            var _this = this;
            var assetCodes = [];
            if (!!this.superiorAssetCode) {
              this.resultsTable.forEach(function(res) {
                if (!!res && !!res.assetCode) {
                  assetCodes.push(res.assetCode);
                }
              });
              var getParentsByEquipmentRecursivelyAtDateInputDTO = {
                assetCode: __spread(assetCodes),
                date: this.date,
                superiorCode: this.superiorAssetCode
              };
              this.installAssetService
                .getParentsByEquipmentRecursivelyAtDate(getParentsByEquipmentRecursivelyAtDateInputDTO)
                .subscribe(function(result) {
                  _this.fixStatusList = result;
                  if (result.length > 0) {
                    if (result.length === 1) {
                      _this.equipmentInput.fixStatusFromAsset = _this.fixStatusList[0].value;
                    } else {
                      var data = result.filter(function(res) {
                        return res.value === _this.superiorAssetCode;
                      });
                      if (!!data) {
                        _this.equipmentInput.fixStatusFromAsset = _this.superiorAssetCode;
                      }
                    }
                  }
                });
            }
          };
          InstallAssetComponent.prototype.searchEventCode = function() {
            if (!this.saveDone) {
              this.showQuickSearchEventPopup = true;
            }
          };
          InstallAssetComponent.prototype.resetEventField = function(ev) {
            if (!this.saveDone) {
              this.equipmentInput.informationsDTO.linkedEventCode = undefined;
              this.eventType = undefined;
              this.eventSubject = undefined;
              ev.stopPropagation();
            }
          };
          /**
           * Set event information in additional tab
           */
          InstallAssetComponent.prototype.setSelectedEvent = function(event) {
            if (!!event && !!event.eventType) {
              if (!!this.equipmentInput && !!this.equipmentInput.informationsDTO) {
                this.equipmentInput.informationsDTO.linkedEventCode = event.eventCode;
              }
              this.eventType = event.eventType;
              this.eventSubject = event.eventSubject;
            }
          };
          InstallAssetComponent.prototype.resetResultsTable = function(table) {
            table.reset();
            table.filters = {};
          };
          InstallAssetComponent.prototype.loadDropDownLists = function() {
            var _this = this;
            var observable = !this.isGroundEquipment
              ? this.installAssetService.getOperationalStatusMap()
              : this.propertiesService.getValue(
                  _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_6__['GenericPropertyConstants']
                    .GROUND_EQUIPMENT_STATUS_MAP
                );
            observable.subscribe(
              function(results) {
                _this.propertyOperationalStatus = results;
              },
              function() {
                _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnGetOperationalStatus'));
              }
            );
          };
          /**
           * Bind Evolution Tables
           */
          InstallAssetComponent.prototype.bindEvolutionsTables = function() {
            var _this = this;
            var assetInput = [];
            this.resultsTable.forEach(function(res) {
              if (
                !!res &&
                !!res.assetCode &&
                !!res.assetFamilyVariant &&
                !!res.assetPn &&
                !!_this.equipmentInput &&
                !!_this.equipmentInput.informationsDTO &&
                !!_this.equipmentInput.informationsDTO.eventDate
              ) {
                var evolutionLinked = {
                  assetCode: res.assetCode,
                  familyVariantCode: res.assetFamilyVariant,
                  pnCode: res.assetPn,
                  eventDate: _this.equipmentInput.informationsDTO.eventDate
                };
                assetInput.push(evolutionLinked);
              }
            });
            this.installAssetService.getEvolutionsLinkedToAsset(assetInput).subscribe(
              function(results) {
                var proposedEvolution = [];
                var evolutionLinked = [];
                results.forEach(function(res) {
                  res.proposedBidoEquipmentEvolutionList.forEach(function(row) {
                    if (!!row) {
                      proposedEvolution.push(row);
                    }
                  });
                  res.bidoEquipmentEvolutionList.forEach(function(row) {
                    if (!!row) {
                      evolutionLinked.push(row);
                    }
                  });
                });
                _this.newEvolutionsLinked = __spread(proposedEvolution);
                _this.evolutionsLinked = __spread(evolutionLinked);
              },
              function() {
                _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnGetEvolutions'));
              }
            );
          };
          InstallAssetComponent.prototype.getCounterMeasureList = function(event) {
            var _this = this;
            var counterMeasureInput = [];
            this.resultsTable.forEach(function(res) {
              if (
                !!event &&
                !!event.equipmentCode &&
                !!res &&
                !!res.assetCode &&
                !!res.assetFamilyVariant &&
                !!res.assetPn &&
                !!_this.equipmentInput &&
                !!_this.equipmentInput.informationsDTO &&
                !!_this.equipmentInput.informationsDTO.eventDate
              ) {
                var counterMesureInput = {
                  equipmentCode: res.assetCode,
                  equipmentCodeFather: event.equipmentCode,
                  date: _this.equipmentInput.informationsDTO.eventDate
                };
                counterMeasureInput.push(counterMesureInput);
              } else if (res.superiorPn) {
                if (
                  !!res &&
                  !!res.assetCode &&
                  !!res.assestFatherCode &&
                  !!_this.equipmentInput &&
                  !!_this.equipmentInput.informationsDTO &&
                  !!_this.equipmentInput.informationsDTO.eventDate
                ) {
                  var counterMesureInput = {
                    equipmentCode: res.assetCode,
                    equipmentCodeFather: res.assestFatherCode,
                    date: _this.equipmentInput.informationsDTO.eventDate
                  };
                  counterMeasureInput.push(counterMesureInput);
                }
              }
            });
            this.installAssetService.getCounterMeasureList(counterMeasureInput).subscribe(
              function(results) {
                if (!!results) {
                  var cancelMeasure_1 = [];
                  var createMeasure_1 = [];
                  results.forEach(function(resp) {
                    resp.measureToCancel.forEach(function(row) {
                      cancelMeasure_1.push(row);
                    });
                    resp.measureToCreate.forEach(function(row) {
                      createMeasure_1.push(row);
                    });
                  });
                  _this.canceledMeasureProgress = __spread(cancelMeasure_1);
                  _this.createMeasureProgress = __spread(createMeasure_1);
                }
              },
              function() {
                _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnGetEvolutions'));
              }
            );
          };
          InstallAssetComponent.prototype.checkAssetListStatus = function() {
            return this.resultsTable.every(function(row) {
              return (
                _shared_utils_object_utils__WEBPACK_IMPORTED_MODULE_18__['ObjectUtils'].isDefined(row.alert) &&
                row.alert
              );
            });
          };
          InstallAssetComponent.prototype.saveSuperiorAsset = function() {
            var _this = this;
            if (
              !this.superiorAssetCode ||
              !this.equipmentInput.newOperationalStatus ||
              !this.equipmentInput.informationsDTO.eventDate
            ) {
              this.messageService.showErrorMessage('global.missingFields');
            } else if (!this.checkDate()) {
              this.messageService.showErrorMessage(this.getTranslateKey('dateError'));
            } else if (!this.checkAssetListStatus()) {
              this.disableSave = true;
              this.messageService.showErrorMessage(this.getTranslateKey('errorOnAssetStatus'));
            } else {
              var dateObj_1 = new Date(
                this.equipmentInput.informationsDTO.eventDate.getFullYear(),
                this.equipmentInput.informationsDTO.eventDate.getMonth(),
                this.equipmentInput.informationsDTO.eventDate.getDate(),
                this.equipmentInput.informationsDTO.eventDate.getHours(),
                this.equipmentInput.informationsDTO.eventDate.getMinutes(),
                0,
                0
              );
              var installObj_1 = [];
              this.resultsTable.forEach(function(asset) {
                if (asset) {
                  var equipment = {
                    informationsDTO: _this.equipmentInput.informationsDTO,
                    equipmentCode: asset.assetCode,
                    assetPn: asset.assetPn,
                    equipmentCodeFather: _this.equipmentInput.equipmentCodeFather,
                    newOperationalStatus: _this.equipmentInput.newOperationalStatus,
                    equipmentToInstallFunction: asset.assetFunctionType,
                    familyVariant: asset.assetFamilyVariant,
                    newPosition: !!asset.position ? asset.position : undefined,
                    flCode: !!asset.funLocCode ? asset.funLocCode : undefined,
                    itemKey: !!asset.itemDataCode ? asset.itemDataCode : undefined,
                    date: dateObj_1,
                    fixStatusFromAsset: _this.equipmentInput.fixStatusFromAsset,
                    isSNEnabled: true,
                    assetFunLocCode: _this.equipmentInput.flCode,
                    assetOperationalStatus: _this.equipmentInput.assetOperationalStatus
                  };
                  installObj_1.push(equipment);
                }
              });
              this.showSaveSpinner = true;
              this.installAssetService.installEquipment(installObj_1).subscribe(
                function(result) {
                  if (!!result && !!result.installAssetOutputDTO) {
                    _this.installEquipmentOutputWithReportDTO = result;
                    // const assetResult: InstallAssetOutputDTO[] = result.installAssetOutputDTO;
                    // this.asstesAfterInstalling = [...assetResult];
                    // this.enableReport = true;
                    // this.isSaveAllowed = false;
                    // this.isReadOnly = true;
                    // this.showEditPanel = false;
                    _this.saveDone = true;
                    _this.disableSave = true;
                    _this.resultsTable.forEach(function(row) {
                      var match = result.installAssetOutputDTO.find(function(elt) {
                        return elt.equipmentCode === row.assetCode;
                      });
                      if (match) {
                        row.report = match.isInstalled;
                        row.reportMessage = match.installMessageException;
                        row.superiorAsset = _shared_utils_bido_equipment_utils__WEBPACK_IMPORTED_MODULE_16__[
                          'BidoEquipmentUtils'
                        ].createAssetName(_this.superiorAsset);
                      }
                    });
                    _this.messageService.showSuccessMessage(_this.getTranslateKey('messageOnSave'));
                    _this.showSaveSpinner = false;
                  }
                },
                function() {
                  _this.resultsTable.forEach(function(row) {
                    row.report = false;
                  });
                  _this.resultsTable = __spread(_this.resultsTable);
                  _this.showSaveSpinner = false;
                }
              );
            }
          };
          InstallAssetComponent.prototype.deleteAsset = function() {
            var _this = this;
            this.resultsTable = this.resultsTable.filter(function(_, index) {
              return index !== _this.selectedAssetRowIndex;
            });
            this.selectedAssetRow = undefined;
            this.selectedAssetRowIndex = undefined;
            if (!this.checkAssetListStatus()) {
              this.disableSave = true;
            } else {
              this.disableSave = false;
            }
            this.getFixNewStatusDropdownList();
          };
          /**
           * Modify Asset Table Column to add report column
           */
          // private modifyTableCols(assetAfterInstall: InstallAssetOutputDTO[]) {
          //   assetAfterInstall.forEach((asset) => {
          //     const tableRow = this.resultsTable.find((row) => {
          //       return row.assetCode === asset.equipmentCode;
          //     });
          //     if (!!tableRow) {
          //       tableRow.superiorPn = this.selectedSuperiorAssetDTO.pnCode;
          //       tableRow.superiorDesignation = this.selectedSuperiorAssetDTO.equipmentDesignation;
          //       tableRow.superiorSN = this.selectedSuperiorAssetDTO.sn;
          //       tableRow.report = asset.isInstalled;
          //       tableRow.reportMessage =
          //         asset.installMessageException &&
          //         asset.installMessageException.replace('com.twomoro.aerowebb.exception.AeroWebbException:', '');
          //     }
          //   });
          //   const item: TableColumn = { field: 'report', alignment: 'left' };
          //   this.resultsTableCols.splice(0, 0, item);
          //   this.resultsTableCols.splice(this.resultsTableCols.length - 1, 1);
          // }
          /**
           * Display install report
           */
          InstallAssetComponent.prototype.report = function() {
            this.showInstallReportPopup = true;
          };
          InstallAssetComponent.prototype.checkDate = function() {
            return (
              !!this.equipmentInput.informationsDTO &&
              !!this.equipmentInput.informationsDTO.eventDate &&
              moment__WEBPACK_IMPORTED_MODULE_2__(this.equipmentInput.informationsDTO.eventDate).isBefore(
                moment__WEBPACK_IMPORTED_MODULE_2__()
              )
            );
          };
          /**
           * After asset row Edit
           */
          InstallAssetComponent.prototype.onRowEdit = function(event) {
            // this.resultsTable.forEach((row, index) => {
            //   if (row.assetCode === event.assetCode) {
            //     this.resultsTable[index] = { ...event };
            //   }
            // });
            // this.showEditPanel = false;
            this.reload(event);
          };
          InstallAssetComponent.prototype.editSelectedAsset = function() {
            if (!!this.superiorAssetCode) {
              this.showInstallAssetPopup = true;
            } else {
              this.messageService.showErrorMessage('global.missingFields');
            }
          };
          InstallAssetComponent.prototype.onAssetRowSelect = function(rowIndex) {
            this.selectedAssetRowIndex = rowIndex;
            // if (this.equipmentInput.equipmentCodeFather) {
            //   this.showEditPanel = true;
            // }
          };
          InstallAssetComponent.prototype.onAssetRowUnselect = function() {
            this.selectedAssetRowIndex = undefined;
            this.showEditPanel = false;
          };
          InstallAssetComponent.prototype.isSelectedAnchor = function(anchorId) {
            return anchorId === this.selectedAnchor;
          };
          InstallAssetComponent.prototype.setSelectedAnchor = function(anchorId) {
            this.pageTocService.setAnchorSelected(anchorId);
            this.selectedAnchor = anchorId;
          };
          var InstallAssetComponent_1;
          InstallAssetComponent.ADDITIONAL_INFORMATION_ANCHOR_ID = 'additionalInformationAnchor';
          InstallAssetComponent.ASSETS_TO_BE_INSTALLED_ANCHOR_ID = 'assetsToBeInstalledAnchor';
          InstallAssetComponent.MAIN_INFORMATION_ANCHOR_ID = 'mainInformationAnchor';
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                InstallAssetComponent_1.ADDITIONAL_INFORMATION_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            InstallAssetComponent.prototype,
            'additionalFields',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                InstallAssetComponent_1.ASSETS_TO_BE_INSTALLED_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            InstallAssetComponent.prototype,
            'assetToInstallGrid',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                InstallAssetComponent_1.MAIN_INFORMATION_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            InstallAssetComponent.prototype,
            'mainInfoAnchor',
            void 0
          );
          InstallAssetComponent = InstallAssetComponent_1 = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-install-asset',
                template: __webpack_require__(
                  /*! ./install-asset.component.html */ './src/app/main/fleet-management/install-asset/install-asset.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./install-asset.component.scss */ './src/app/main/fleet-management/install-asset/install-asset.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_8__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_9__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_10__['MessageService'],
                _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_3__['PageTocService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_12__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_14__['TabService'],
                _install_asset_service__WEBPACK_IMPORTED_MODULE_19__['InstallAssetService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_13__['SessionService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_11__['PropertiesService']
              ])
            ],
            InstallAssetComponent
          );
          return InstallAssetComponent;
        })(_shared_types_page_component__WEBPACK_IMPORTED_MODULE_15__['PageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/remove-asset/popups/report-popup-form/report-popup-form.component.html':
      /*!**************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/remove-asset/popups/report-popup-form/report-popup-form.component.html ***!
  \**************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".titleRemoval" | translate }}: {{ reportHeading }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group">\r\n      <textarea class="aw-textarea" [rows]="20" [cols]="100" pInputTextarea [(ngModel)]="reportContent"></textarea>\r\n    </div>\r\n  </a-content>\r\n\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <span>{{ "global.close" | translate }}</span>\r\n    </button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/remove-asset/popups/report-popup-form/report-popup-form.component.ts':
      /*!************************************************************************************************************!*\
  !*** ./src/app/main/fleet-management/remove-asset/popups/report-popup-form/report-popup-form.component.ts ***!
  \************************************************************************************************************/
      /*! exports provided: ReportPopupFormComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'ReportPopupFormComponent',
          function() {
            return ReportPopupFormComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var ReportPopupFormComponent = /** @class */ (function(_super) {
          __extends(ReportPopupFormComponent, _super);
          function ReportPopupFormComponent() {
            return (
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_1__['ComponentOpenMode'].Read,
                'ReportPopupFormComponent'
              ) || this
            );
          }
          ReportPopupFormComponent.prototype.ngOnInit = function() {
            return;
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', String)],
            ReportPopupFormComponent.prototype,
            'reportContent',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', String)],
            ReportPopupFormComponent.prototype,
            'reportHeading',
            void 0
          );
          ReportPopupFormComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-report-popup-form',
                template: __webpack_require__(
                  /*! ./report-popup-form.component.html */ './src/app/main/fleet-management/remove-asset/popups/report-popup-form/report-popup-form.component.html'
                )
              }),
              __metadata('design:paramtypes', [])
            ],
            ReportPopupFormComponent
          );
          return ReportPopupFormComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_2__['DialogComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/remove-asset/remove-asset.component.html':
      /*!********************************************************************************!*\
  !*** ./src/app/main/fleet-management/remove-asset/remove-asset.component.html ***!
  \********************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<div class="page-header">\r\n  <div class="page-info">\r\n    <div>\r\n      <div class="page-title">\r\n        {{ "transaction." + componentData.componentId | translate }}\r\n      </div>\r\n\r\n      <div class="page-subtitle">\r\n        <div *ngIf="!isCreateOpenMode && componentData && componentData.objectId" class="page-subtitle">\r\n          {{ subtitle }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="page-actions">\r\n    <button\r\n      *ngIf="!isReadOnlyForm"\r\n      type="button"\r\n      mat-raised-button\r\n      class="btn-with-spinner"\r\n      color="primary"\r\n      (click)="isSaveAllowed && saveAsset()"\r\n      [disabled]="!isSaveAllowed"\r\n    >\r\n      <span class="lds-hourglass" *ngIf="showSaveSpinner"></span>\r\n      <span\r\n        pTooltip="{{ !isSaveAllowed ? (componentData.componentId + \'.saveTootip\' | translate) : \'\' }}"\r\n        tooltipPosition="top"\r\n      >\r\n        {{ "global.save" | translate }}\r\n      </span>\r\n    </button>\r\n\r\n    <button *ngIf="isReadOnlyForm" type="button" mat-raised-button (click)="report()">\r\n      {{ componentData.componentId + ".report" | translate }}\r\n    </button>\r\n\r\n    <button\r\n      id="actions"\r\n      mat-icon-button\r\n      class="mat-elevation-z1"\r\n      matTooltip="{{ \'global.showAllActionTooltip\' | translate }}"\r\n      matTooltipPosition="above"\r\n      aria-label="Show all actions"\r\n      [matMenuTriggerFor]="actions"\r\n    >\r\n      <mat-icon>more_horiz</mat-icon>\r\n    </button>\r\n\r\n    <mat-menu #actions="matMenu">\r\n      <button *ngIf="!isReadOnlyForm" type="button" mat-menu-item (click)="loadAssets()">\r\n        {{ "global.refresh" | translate }}\r\n      </button>\r\n      <button id="favorites" mat-menu-item (click)="updateFavoriteState()">\r\n        {{ (isFavoriteEntry ? "page.removeFromFavorites" : "page.addToFavorites") | translate }}\r\n      </button>\r\n    </mat-menu>\r\n  </div>\r\n</div>\r\n\r\n<div class="page-wrapper">\r\n  <div class="page-container search-page-container">\r\n    <div class="page-content">\r\n      <mat-tab-group animationDuration="0ms" dynamicHeight>\r\n        <!-- Home -->\r\n        <mat-tab id="homeTab">\r\n          <ng-template mat-tab-label>\r\n            {{ "home" | translate }}\r\n          </ng-template>\r\n          <div class="grid-row">\r\n            <div class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ "page.mainData" | translate }}\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <div class="column">\r\n                    <div class="row">\r\n                      <div class="form-group required">\r\n                        <label class="form-label">{{ componentData.componentId + ".date" | translate }}</label>\r\n                        <div class="form-control">\r\n                          <p-calendar\r\n                            showButtonBar="true"\r\n                            [monthNavigator]="true"\r\n                            [yearNavigator]="true"\r\n                            [yearRange]="sessionService.calendarYearRange"\r\n                            class="aw-calendar"\r\n                            [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                            (onClose)="reloadAssets()"\r\n                            [(ngModel)]="equipmentInput.informationsDTO.eventDate"\r\n                            [disabled]="isReadOnlyForm"\r\n                            [showTime]="true"\r\n                            [readonlyInput]="true"\r\n                          ></p-calendar>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group">\r\n                        <label class="form-label">{{ componentData.componentId + ".subject" | translate }}</label>\r\n                        <div class="form-control">\r\n                          <input\r\n                            type="text"\r\n                            class="aw-input"\r\n                            [(ngModel)]="equipmentInput.informationsDTO.subject"\r\n                            [disabled]="isReadOnlyForm"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group flex--2">\r\n                        <label class="form-label"> {{ componentData.componentId + ".description" | translate }}</label>\r\n                        <div class="form-control">\r\n                          <textarea\r\n                            class="aw-textarea"\r\n                            [rows]="3"\r\n                            [(ngModel)]="equipmentInput.informationsDTO.description"\r\n                            pInputTextarea\r\n                            [disabled]="isReadOnlyForm"\r\n                          ></textarea>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="row">\r\n                      <div class="form-group required">\r\n                        <label class="form-label">{{ componentData.componentId + ".removalReason" | translate }}</label>\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            name="removalReason"\r\n                            class="aw-dropdown fixed-width"\r\n                            [options]="propertyRemovalReason"\r\n                            [(ngModel)]="equipmentInput.informationsDTO.reason"\r\n                            [disabled]="isReadOnlyForm"\r\n                            [showClear]="true"\r\n                            placeholder="&nbsp;"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group">\r\n                        <label class="form-label">\r\n                          {{ getComponentName() + ".warehouse" | translate }}\r\n                        </label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            class="aw-dropdown fixed-width"\r\n                            [options]="warehouseList"\r\n                            [(ngModel)]="selectedWarehouse"\r\n                            [disabled]="isReadOnlyForm"\r\n                            [showClear]="true"\r\n                            placeholder="&nbsp;"\r\n                            (onChange)="onActionCheckWarehouseAndOperationalStatus()"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group required">\r\n                        <label class="form-label">{{\r\n                          componentData.componentId + ".newOperationalStatus" | translate\r\n                        }}</label>\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            name="newOperationalStatus"\r\n                            class="aw-dropdown fixed-width"\r\n                            [options]="propertyOperationalStatus"\r\n                            [(ngModel)]="equipmentInput.newOperationalStatus"\r\n                            [disabled]="isReadOnlyForm"\r\n                            [showClear]="true"\r\n                            placeholder="&nbsp;"\r\n                            (onChange)="onActionCheckWarehouseAndOperationalStatus()"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group" *ngIf="showEngineOnlyFields">\r\n                        <label class="form-label">{{\r\n                          componentData.componentId + ".newAircraftStatus" | translate\r\n                        }}</label>\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            name="newAircraftStatus"\r\n                            class="aw-dropdown fixed-width"\r\n                            [options]="propertyNewAircraftStatus"\r\n                            [(ngModel)]="equipmentInput.newAircraftStatus"\r\n                            [disabled]="isReadOnlyForm"\r\n                            [showClear]="true"\r\n                            placeholder="&nbsp;"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class="form-group " *ngIf="!!sessionService.isSpecificSAE">\r\n                        <label class="form-label">{{ componentData.componentId + ".shopName" | translate }}</label>\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            name="shopName"\r\n                            class="aw-dropdown fixed-width"\r\n                            [options]="shopNames"\r\n                            [(ngModel)]="equipmentInput.informationsDTO.shopName"\r\n                            [disabled]="isReadOnlyForm"\r\n                            [showClear]="true"\r\n                            placeholder="&nbsp;"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n                      <div class="form-group " *ngIf="!!sessionService.isSpecificSAE">\r\n                        <label class="form-label">{{\r\n                          componentData.componentId + ".shopTechnicalLevel" | translate\r\n                        }}</label>\r\n\r\n                        <div class="form-control">\r\n                          <p-dropdown\r\n                            name="shopTechnicalLevel"\r\n                            class="aw-dropdown fixed-width"\r\n                            [options]="shopTechnicalLevels"\r\n                            [(ngModel)]="equipmentInput.informationsDTO.shopTechnicalLevel"\r\n                            [disabled]="isReadOnlyForm"\r\n                            [showClear]="true"\r\n                            placeholder="&nbsp;"\r\n                          ></p-dropdown>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class="grid-row">\r\n            <div class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">\r\n                      {{ componentData.componentId + ".results" | translate }} ({{\r\n                        resultsTable ? resultsTable.length : 0\r\n                      }})\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content">\r\n                  <p-table\r\n                    [resizableColumns]="true"\r\n                    #table\r\n                    class="aw-table2"\r\n                    [columns]="resultsTableCols"\r\n                    [value]="resultsTable"\r\n                    [scrollable]="true"\r\n                  >\r\n                    <ng-template pTemplate="emptymessage">\r\n                      <span *ngIf="!isLoading"> &nbsp;</span>\r\n\r\n                      <div *ngIf="isLoading" class="aw-table-loading-indicator">\r\n                        <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                        <div class="lds-hourglass"></div>\r\n                      </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="caption">\r\n                      <div class="aw-table-header">\r\n                        <div class="aw-table-global-filter">\r\n                          <label class="aw-table-global-filter-label">\r\n                            <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                          </label>\r\n\r\n                          <input\r\n                            #tableGlobalFilter\r\n                            class="aw-table-global-filter-input"\r\n                            type="text"\r\n                            placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                            (input)="table.filterGlobal($event.target.value, \'contains\')"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="colgroup">\r\n                      <colgroup>\r\n                        <col style="width: 10%" />\r\n                        <col style="width: 10%" />\r\n                        <col style="width: 20%" />\r\n                        <col style="width: 15%" />\r\n                        <col style="width: 20%" />\r\n                        <col style="width: 5%" />\r\n                        <col style="width: 5%" *ngIf="isReadOnlyForm" />\r\n                      </colgroup>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="header" let-columns>\r\n                      <tr>\r\n                        <th style="text-align: left">{{ getComponentName() + ".pnCode" | translate }}</th>\r\n                        <th style="text-align: left">{{ getComponentName() + ".sn" | translate }}</th>\r\n                        <th style="text-align: left">{{ getComponentName() + ".designation" | translate }}</th>\r\n                        <th style="text-align: left">{{ getComponentName() + ".statusAtDate" | translate }}</th>\r\n                        <th style="text-align: left">{{ getComponentName() + ".superiorAssetAtDate" | translate }}</th>\r\n                        <th style="text-align: center">\r\n                          {{ getComponentName() + ".alerts" | translate }}\r\n                        </th>\r\n                        <th *ngIf="isReadOnlyForm" style="text-align: center">\r\n                          {{ getComponentName() + ".report" | translate }}\r\n                        </th>\r\n                      </tr>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="body" let-rowData let-rowIndex="rowIndex">\r\n                      <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                        <td style="text-align: left">\r\n                          <span>{{ rowData["pnCode"] }}</span>\r\n                        </td>\r\n\r\n                        <td style="text-align: left">\r\n                          <span>\r\n                            <a (click)="openAsset(rowData)">{{ rowData["sn"] }}</a>\r\n                          </span>\r\n                        </td>\r\n\r\n                        <td style="text-align: left">\r\n                          <span>{{ rowData["designation"] }}</span>\r\n                        </td>\r\n\r\n                        <td style="text-align: left">\r\n                          <span>{{ rowData["statusAtDate"] }}</span>\r\n                        </td>\r\n\r\n                        <td style="text-align: left">\r\n                          <span>{{ rowData["designationSuperior"] }}</span>\r\n                        </td>\r\n\r\n                        <td style="text-align: center" pTooltip="{{ rowData[\'alertMessage\'] }}" tooltipPosition="top">\r\n                          <span *ngIf="rowData[\'alerts\']" class="alert alert--ok">\r\n                            {{ getComponentName() + ".alertOk" | translate }}\r\n                          </span>\r\n\r\n                          <span *ngIf="!rowData[\'alerts\']" class="alert alert--nok">\r\n                            {{ getComponentName() + ".alertNok" | translate }}\r\n                          </span>\r\n                        </td>\r\n\r\n                        <td\r\n                          *ngIf="isReadOnlyForm"\r\n                          style="text-align: center"\r\n                          pTooltip="{{ rowData[\'reportMessage\'] }}"\r\n                          tooltipPosition="top"\r\n                        >\r\n                          <span *ngIf="rowData[\'report\']" class="alert alert--ok">\r\n                            {{ getComponentName() + ".alertOk" | translate }}\r\n                          </span>\r\n\r\n                          <span *ngIf="!rowData[\'report\']" class="alert alert--nok">\r\n                            {{ getComponentName() + ".alertNok" | translate }}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    </ng-template>\r\n                  </p-table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n\r\n        <mat-tab id="additionalTab">\r\n          <ng-template mat-tab-label>\r\n            {{ "page.additionalData" | translate }}\r\n          </ng-template>\r\n          <div class="grid-row">\r\n            <div class="grid-cell--12">\r\n              <div class="grid-cell grid-cell--container">\r\n                <div class="grid-cell-header">\r\n                  <div class="grid-cell-title-container">\r\n                    <h3 class="grid-cell-title">{{ "page.additionalData" | translate }}</h3>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class="grid-cell-content grid-cell-content-with-section">\r\n                  <div class="section">\r\n                    <h4 class="section-title">{{ componentData.componentId + ".linkedEvent" | translate }}</h4>\r\n\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".eventCode" | translate }} </label>\r\n                          <div class="form-control form-control-with-btn" (click)="searchEventCode()">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="equipmentInput.informationsDTO.linkedEventCode"\r\n                              [ngModelOptions]="{ standalone: true }"\r\n                              disabled="true"\r\n                            />\r\n                            <i\r\n                              class="ui-dropdown-clear-icon pi pi-times aw-icon btn-clear"\r\n                              aria-hidden="true"\r\n                              *ngIf="equipmentInput.informationsDTO.linkedEventCode"\r\n                              (click)="resetEventField($event)"\r\n                            ></i>\r\n                            <i\r\n                              class="fa fa-fw fa-search aw-icon btn-search"\r\n                              aria-hidden="true"\r\n                              (click)="searchEventCode()"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".type" | translate }} </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="eventType"\r\n                              maxlength="20"\r\n                              disabled="true"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label"> {{ componentData.componentId + ".subject" | translate }} </label>\r\n\r\n                          <div class="form-control">\r\n                            <input\r\n                              type="text"\r\n                              class="aw-input"\r\n                              [(ngModel)]="eventSubject"\r\n                              [title]="eventSubject == \'null\' ? \'\' : eventSubject"\r\n                              maxlength="20"\r\n                              disabled="true"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".isScheduled" | translate }}\r\n                          </label>\r\n                          <div class="form-control">\r\n                            <p-checkbox\r\n                              binary="true"\r\n                              class="aw-checkbox"\r\n                              [(ngModel)]="equipmentInput.informationsDTO.isScheduled"\r\n                            ></p-checkbox>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".generateEvent" | translate }}\r\n                          </label>\r\n                          <div class="form-control">\r\n                            <p-checkbox\r\n                              binary="true"\r\n                              class="aw-checkbox"\r\n                              [(ngModel)]="equipmentInput.informationsDTO.generateEvent"\r\n                              [disabled]="true"\r\n                            ></p-checkbox>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section" [hidden]="resultsTable.length > 1 || !showAdvancedCriteria">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div class="form-group">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".updateEvolutions" | translate }}\r\n                          </label>\r\n                          <div class="form-control">\r\n                            <p-checkbox binary="true" class="aw-checkbox" [(ngModel)]="updateEvolutions"></p-checkbox>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section" [hidden]="!updateEvolutions">\r\n                    <h4 class="section-title">\r\n                      {{ componentData.componentId + ".evolutionLinkedtoAsset" | translate }} ({{\r\n                        evolutionsLinked ? evolutionsLinked.length : 0\r\n                      }})\r\n                    </h4>\r\n\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        [resizableColumns]="true"\r\n                        #evolutionsTable\r\n                        class="aw-table2"\r\n                        [columns]="evolutionsTableCols"\r\n                        [value]="evolutionsLinked"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingAssetTable"> &nbsp;</span>\r\n\r\n                          <div *ngIf="isLoadingAssetTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableEvolutionGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="evolutionsTable.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              {{ componentData.componentId + "." + col.field | translate }}\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngSwitchCase="\'isPartiallyApplied\'">\r\n                                <p-checkbox\r\n                                  binary="true"\r\n                                  class="aw-checkbox"\r\n                                  [(ngModel)]="rowData[col.field]"\r\n                                ></p-checkbox>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'isNotApplicable\'">\r\n                                <p-checkbox\r\n                                  binary="true"\r\n                                  class="aw-checkbox"\r\n                                  [(ngModel)]="rowData[col.field]"\r\n                                ></p-checkbox>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'dateRemove\'">\r\n                                <div class="form-control">\r\n                                  <p-calendar\r\n                                    showButtonBar="true"\r\n                                    [monthNavigator]="true"\r\n                                    [yearNavigator]="true"\r\n                                    [yearRange]="sessionService.calendarYearRange"\r\n                                    class="aw-calendar"\r\n                                    [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                                    [locale]="sessionService.calendarFormat"\r\n                                    [(ngModel)]="rowData[col.field]"\r\n                                    appendTo="body"\r\n                                  ></p-calendar>\r\n                                </div>\r\n                              </span>\r\n                              <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section" [hidden]="!updateEvolutions">\r\n                    <h4 class="section-title">\r\n                      {{ componentData.componentId + ".newEvolutionsAssociated" | translate }} ({{\r\n                        newEvolutionsLinked ? newEvolutionsLinked.length : 0\r\n                      }})\r\n                    </h4>\r\n\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        [resizableColumns]="true"\r\n                        #newEvolutionsTable\r\n                        class="aw-table2"\r\n                        [columns]="evolutionsTableCols"\r\n                        [value]="newEvolutionsLinked"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingAssetTable"> &nbsp;</span>\r\n\r\n                          <div *ngIf="isLoadingAssetTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableNewEvolutionGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="newEvolutionsTable.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              {{ componentData.componentId + "." + col.field | translate }}\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngSwitchCase="\'isPartiallyApplied\'">\r\n                                <p-checkbox\r\n                                  binary="true"\r\n                                  class="aw-checkbox"\r\n                                  [(ngModel)]="rowData[col.field]"\r\n                                ></p-checkbox>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'isNotApplicable\'">\r\n                                <p-checkbox\r\n                                  binary="true"\r\n                                  class="aw-checkbox"\r\n                                  [(ngModel)]="rowData[col.field]"\r\n                                ></p-checkbox>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'applicationDate\'">\r\n                                <div class="form-control">\r\n                                  <p-calendar\r\n                                    showButtonBar="true"\r\n                                    [monthNavigator]="true"\r\n                                    [yearNavigator]="true"\r\n                                    [yearRange]="sessionService.calendarYearRange"\r\n                                    class="aw-calendar"\r\n                                    [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                                    [locale]="sessionService.calendarFormat"\r\n                                    [(ngModel)]="rowData[col.field]"\r\n                                    appendTo="body"\r\n                                  ></p-calendar>\r\n                                </div>\r\n                              </span>\r\n                              <span *ngSwitchCase="\'dateRemove\'">\r\n                                <div class="form-control">\r\n                                  <p-calendar\r\n                                    showButtonBar="true"\r\n                                    [monthNavigator]="true"\r\n                                    [yearNavigator]="true"\r\n                                    [yearRange]="sessionService.calendarYearRange"\r\n                                    class="aw-calendar"\r\n                                    [dateFormat]="sessionService.dateFormatPrimeNG"\r\n                                    [locale]="sessionService.calendarFormat"\r\n                                    [(ngModel)]="rowData[col.field]"\r\n                                    appendTo="body"\r\n                                  ></p-calendar>\r\n                                </div>\r\n                              </span>\r\n                              <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section" [hidden]="!showAdvancedCriteria">\r\n                    <div class="section-content">\r\n                      <div class="row">\r\n                        <div class="form-group" *ngIf="showEngineOnlyFields">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".reInitializeTssvCounters" | translate }}\r\n                          </label>\r\n                          <div class="form-control">\r\n                            <p-checkbox binary="true" class="aw-checkbox" [(ngModel)]="resetCounters"></p-checkbox>\r\n                          </div>\r\n                        </div>\r\n                        <div class="form-group" *ngIf="!showEngineOnlyFields">\r\n                          <label class="form-label">\r\n                            {{ componentData.componentId + ".reInitializeTsliCounters" | translate }}\r\n                          </label>\r\n                          <div class="form-control">\r\n                            <p-checkbox binary="true" class="aw-checkbox" [(ngModel)]="resetCounters"></p-checkbox>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="section" [hidden]="!showAdvancedCriteria">\r\n                    <h4 class="section-title">\r\n                      {{ componentData.componentId + ".canceledMeasureProgress" | translate }} ({{\r\n                        canceledMeasureProgress ? canceledMeasureProgress.length : 0\r\n                      }})\r\n                    </h4>\r\n\r\n                    <div class="section-content">\r\n                      <p-table\r\n                        [resizableColumns]="true"\r\n                        #counterTable\r\n                        class="aw-table2"\r\n                        [columns]="counterTableCols"\r\n                        [value]="canceledMeasureProgress"\r\n                        [scrollable]="true"\r\n                      >\r\n                        <ng-template pTemplate="emptymessage">\r\n                          <span *ngIf="!isLoadingAssetTable"> &nbsp;</span>\r\n\r\n                          <div *ngIf="isLoadingAssetTable" class="aw-table-loading-indicator">\r\n                            <div class="loading-message">{{ "table.loadingData" | translate }}</div>\r\n                            <div class="lds-hourglass"></div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="caption">\r\n                          <div class="aw-table-header">\r\n                            <div class="aw-table-global-filter">\r\n                              <label class="aw-table-global-filter-label">\r\n                                <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n                              </label>\r\n\r\n                              <input\r\n                                #ptableCounterGlobalFilter\r\n                                class="aw-table-global-filter-input"\r\n                                type="text"\r\n                                placeholder="{{ \'table.globalFilterText\' | translate }}"\r\n                                (input)="counterTable.filterGlobal($event.target.value, \'contains\')"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="colgroup" let-columns>\r\n                          <colgroup>\r\n                            <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n                          </colgroup>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="header" let-columns>\r\n                          <tr>\r\n                            <th\r\n                              pResizableColumn\r\n                              *ngFor="let col of columns"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              {{ componentData.componentId + "." + col.field | translate }}\r\n                            </th>\r\n                          </tr>\r\n                        </ng-template>\r\n\r\n                        <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                          <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n                            <td\r\n                              *ngFor="let col of columns"\r\n                              [ngSwitch]="col.field"\r\n                              [ngStyle]="{ \'text-align\': col.alignment }"\r\n                            >\r\n                              <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\r\n                            </td>\r\n                          </tr>\r\n                        </ng-template>\r\n                      </p-table>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class="row search-criteria-footer">\r\n                    <div class="advanced-criteria-toggler" *ngIf="!showAdvancedCriteria" (click)="onMoreDetailsClick()">\r\n                      <i class="fa fa-fw fa-plus" aria-hidden="true"></i>\r\n\r\n                      <div class="advanced-criteria-toggler-more">\r\n                        {{ componentData.componentId + ".showMoreDetails" | translate }}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class="advanced-criteria-toggler" *ngIf="showAdvancedCriteria" (click)="onMoreDetailsClick()">\r\n                      <i class="fa fa-fw fa-minus" aria-hidden="true"></i>\r\n\r\n                      <div class="advanced-criteria-toggler-less">\r\n                        {{ componentData.componentId + ".showLessDetails" | translate }}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-tab>\r\n      </mat-tab-group>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<aw-report-popup-form\r\n  *ngIf="showReportPopup"\r\n  [reportContent]="reportText"\r\n  [reportHeading]="reportHeading"\r\n  [(display)]="showReportPopup"\r\n></aw-report-popup-form>\r\n\r\n<aw-dialog-search-event\r\n  *ngIf="showQuickSearchEventPopup"\r\n  [(display)]="showQuickSearchEventPopup"\r\n  (onSelected)="setSelectedEvent($event)"\r\n></aw-dialog-search-event>\r\n';

        /***/
      },

    /***/ './src/app/main/fleet-management/remove-asset/remove-asset.component.scss':
      /*!********************************************************************************!*\
  !*** ./src/app/main/fleet-management/remove-asset/remove-asset.component.scss ***!
  \********************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vZmxlZXQtbWFuYWdlbWVudC9yZW1vdmUtYXNzZXQvcmVtb3ZlLWFzc2V0LmNvbXBvbmVudC5zY3NzIn0= */';

        /***/
      },

    /***/ './src/app/main/fleet-management/remove-asset/remove-asset.component.ts':
      /*!******************************************************************************!*\
  !*** ./src/app/main/fleet-management/remove-asset/remove-asset.component.ts ***!
  \******************************************************************************/
      /*! exports provided: RemoveAssetComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'RemoveAssetComponent', function() {
          return RemoveAssetComponent;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! moment */ './node_modules/moment/moment.js'
        );
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          moment__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/components/component-sidebar/page-toc.service */ './src/app/shared/components/component-sidebar/page-toc.service.ts'
        );
        /* harmony import */ var _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/constants/aw-properties-constants */ './src/app/shared/constants/aw-properties-constants.ts'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _shared_services_date_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/services/date.service */ './src/app/shared/services/date.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _shared_types_page_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../../shared/types/page-component */ './src/app/shared/types/page-component.ts'
        );
        /* harmony import */ var _shared_utils_bido_equipment_utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ../../../shared/utils/bido-equipment-utils */ './src/app/shared/utils/bido-equipment-utils.ts'
        );
        /* harmony import */ var _shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ../../../shared/utils/list-utils */ './src/app/shared/utils/list-utils.ts'
        );
        /* harmony import */ var _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ../../../shared/utils/select-item-utils */ './src/app/shared/utils/select-item-utils.ts'
        );
        /* harmony import */ var _remove_asset_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
          /*! ./remove-asset.service */ './src/app/main/fleet-management/remove-asset/remove-asset.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };
        var __read =
          (undefined && undefined.__read) ||
          function(o, n) {
            var m = typeof Symbol === 'function' && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
              r,
              ar = [],
              e;
            try {
              while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
              e = { error: error };
            } finally {
              try {
                if (r && !r.done && (m = i['return'])) m.call(i);
              } finally {
                if (e) throw e.error;
              }
            }
            return ar;
          };
        var __spread =
          (undefined && undefined.__spread) ||
          function() {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
          };

        var RemoveAssetComponent = /** @class */ (function(_super) {
          __extends(RemoveAssetComponent, _super);
          function RemoveAssetComponent(
            favoriteService,
            loaderService,
            messageService,
            pageTocService,
            serializationService,
            tabService,
            removeAssetService,
            translateService,
            sessionService,
            propertiesService,
            dateService
          ) {
            var _this =
              _super.call(
                this,
                _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Write,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService,
                pageTocService
              ) || this;
            _this.removeAssetService = removeAssetService;
            _this.translateService = translateService;
            _this.sessionService = sessionService;
            _this.propertiesService = propertiesService;
            _this.dateService = dateService;
            _this.isLoading = false;
            _this.componentRef = RemoveAssetComponent_1;
            _super.prototype.registerPageTocEntryObservable.call(_this);
            _this.isLoading = false;
            _this.filteredRowsNb = 0;
            _this.resultsTable = [];
            _this.isReadOnlyForm = false;
            _this.isSaveAllowed = false;
            _this.showEngineOnlyFields = false;
            _this.operationalStatusMap = new Map();
            _this.eventTypeMap = new Map();
            _this.showReportPopup = false;
            _this.reportText = '';
            _this.reportHeading = '';
            _this.warehouseList = [];
            _this.selectedWarehouse = undefined;
            _this.propertyOperationalStatus = [];
            _this.propertyNewAircraftStatus = [];
            _this.propertyRemovalReason = [];
            _this.assetsToBeRemoved = [];
            _this.shopNames = [];
            _this.shopTechnicalLevels = [];
            _this.showQuickSearchEventPopup = false;
            _this.updateEvolutions = false;
            _this.resetCounters = false;
            _this.showAdvancedCriteria = false;
            _this.resultsTableCols = [
              { field: 'pnCode', alignment: 'left' },
              { field: 'sn', alignment: 'left' },
              { field: 'designation', alignment: 'left' },
              { field: 'statusAtDate', alignment: 'left' },
              { field: 'pnCodeSuperior', alignment: 'left' },
              { field: 'snSuperior', alignment: 'left' },
              { field: 'designationSuperior', alignment: 'left' },
              { field: 'alerts', alignment: 'left' }
            ];
            _this.evolutionsTableCols = [
              { field: 'equipmentCode', alignment: 'left', width: '10rem' },
              { field: 'evoType', alignment: 'left', width: '10rem' },
              { field: 'evoNumber', alignment: 'left', width: '10rem' },
              { field: 'evoRevisionNumber', alignment: 'left', width: '10rem' },
              { field: 'applicationDate', alignment: 'left', width: '10rem' },
              { field: 'isPartiallyApplied', alignment: 'left', width: '5rem' },
              { field: 'dateRemove', alignment: 'left', width: '10rem' },
              { field: 'isNotApplicable', alignment: 'left', width: '5rem' }
            ];
            _this.counterTableCols = [
              { field: 'asset', alignment: 'left' },
              { field: 'counterCode', alignment: 'left' },
              { field: 'readingDate', alignment: 'left' },
              { field: 'valueBefore', alignment: 'left' },
              { field: 'valueAfter', alignment: 'left' }
            ];
            _this.translateService.onLangChange.subscribe(function(_) {
              _this.loadDropDownLists();
            });
            return _this;
          }
          RemoveAssetComponent_1 = RemoveAssetComponent;
          RemoveAssetComponent.prototype.loadWarehouseList = function(pnCode) {
            var _this = this;
            this.removeAssetService.findAllWarehouseForRemovalWithData(pnCode).subscribe(function(results) {
              _this.warehouseList = _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_19__[
                'SelectItemUtils'
              ].fromLabelValues(results);
            });
          };
          RemoveAssetComponent.prototype.getComponentName = function() {
            return 'RemoveAssetComponent';
          };
          RemoveAssetComponent.prototype.ngOnInit = function() {
            _super.prototype.ngOnInit.call(this);
            this.displayComponentContext('', true);
            if (this.componentData && this.componentData.objectId) {
              this.assetsToRemove = this.serializationService.deserialize(this.componentData.objectId);
              if (this.assetsToRemove) {
                if (
                  !_shared_utils_list_utils__WEBPACK_IMPORTED_MODULE_18__['ListUtils'].isNullOrEmpty(
                    this.assetsToRemove.assetCode
                  )
                ) {
                  this.loadFatherEquipment();
                  this.loadAssets();
                }
              }
            } else {
              this.loadDropDownLists();
            }
            this.toc = [
              {
                id: 'mainInformationAnchor',
                anchor: this.mainInfoAnchor,
                label: 'Main Information'
              },
              {
                id: 'assetsToBeRemovedAnchor',
                anchor: this.assetToRemoveAnchor,
                label: 'Assets to be Removed'
              },
              {
                id: 'additionalInformationAnchor',
                anchor: this.additionalInformationAnchor,
                label: 'Additional Information'
              }
            ];
          };
          RemoveAssetComponent.prototype.openAsset = function(row) {
            var equipment = row._obj.equipment;
            if (equipment && equipment.equipmentCode) {
              if (this.isAssetAircraft(equipment)) {
                this.openAircraft(equipment.equipmentCode);
              } else if (this.isAssetEngine(equipment)) {
                this.openEngine(equipment.equipmentCode);
              } else if (this.isAssetEquipment(equipment)) {
                this.openEquipment(equipment.equipmentCode);
              }
            } else {
              this.messageService.showErrorMessage(this.getTranslateKey('erroOnOpenAsset'));
            }
          };
          RemoveAssetComponent.prototype.isAssetAircraft = function(asset) {
            return (
              !!asset.equipmentFunction &&
              asset.equipmentFunction ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .ITEM_FAMILY_CODE_AIRCRAFT_KEY
            );
          };
          RemoveAssetComponent.prototype.isAssetEngine = function(asset) {
            return (
              !!asset.equipmentFunction &&
              asset.equipmentFunction ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .ITEM_FAMILY_CODE_ENGINE_KEY
            );
          };
          RemoveAssetComponent.prototype.isAssetEquipment = function(asset) {
            return !!asset.equipmentFunction && !this.isAssetAircraft(asset) && !this.isAssetEngine(asset);
          };
          RemoveAssetComponent.prototype.openAircraft = function(equipmentCode) {
            var objectId = {
              equipmentCode: equipmentCode
            };
            var data = {
              id: this.tabService.generateId(),
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Read,
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__['ComponentConstants']
                  .FLE_AIRCRAFT_FORM,
              objectId: this.serializationService.serialize(objectId)
            };
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          RemoveAssetComponent.prototype.openEngine = function(equipmentCode) {
            var objectId = {
              equipmentCode: equipmentCode
            };
            var data = {
              id: this.tabService.generateId(),
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Read,
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__['ComponentConstants']
                  .FLE_ENGINE_FORM,
              objectId: this.serializationService.serialize(objectId)
            };
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          RemoveAssetComponent.prototype.openEquipment = function(equipmentCode) {
            var objectId = {
              equipmentCode: equipmentCode
            };
            var data = {
              id: this.tabService.generateId(),
              openMode: _shared_enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_7__['ComponentOpenMode'].Read,
              componentId:
                _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_5__['ComponentConstants']
                  .FLE_EQUIPMENT_FORM,
              objectId: this.serializationService.serialize(objectId)
            };
            var labelKey = 'transaction.' + data.componentId;
            this.tabService.open(this.tabService.create(data, labelKey, true));
          };
          RemoveAssetComponent.prototype.loadFatherEquipment = function() {
            var _this = this;
            var dtoId = {
              equipmentCode: this.assetsToRemove.superiorAssetCode
            };
            this.removeAssetService.findBidoEquipment(dtoId).subscribe(function(fatherData) {
              _this.fatherBidoEquipmentDto = fatherData;
              if (
                fatherData.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                    .ITEM_FAMILY_CODE_GROUND_SUPPORT_EQUIPMENT_KEY ||
                fatherData.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                    .ITEM_FAMILY_CODE_TOOL_KEY ||
                fatherData.equipmentFunction ===
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                    .ITEM_FAMILY_CODE_PILOT_EQUIPMENT_KEY
              ) {
                _this.isGroundEquipment = true;
              }
              _this.loadDropDownLists();
            });
          };
          RemoveAssetComponent.prototype.loadAssets = function() {
            var _this = this;
            this.equipmentInput = {
              informationsDTO: {}
            };
            // Initialize Date
            this.isLoading = true;
            var date = new Date();
            if (!!this.equipmentInput.informationsDTO) {
              this.equipmentInput.informationsDTO.eventDate = date;
              this.equipmentInput.informationsDTO.generateEvent = true;
            }
            this.assetsToRemove.date = date;
            this.removeAssetService.findAssetsRemovedList(this.assetsToRemove).subscribe(function(assetsToRemoved) {
              if (!!_this.equipmentInput.informationsDTO) {
                _this.equipmentInput.informationsDTO.subject = assetsToRemoved.subject;
              }
              _this.assetsToBeRemoved = __spread(assetsToRemoved.assetList);
              _this.resultsTable = _this.convertIntoRowType(assetsToRemoved.assetList);
              _this.isLoading = false;
              assetsToRemoved.assetList.forEach(function(elt) {
                _this.loadWarehouseList(elt.assetPn);
              });
              _this.bindEvolutionsTables();
              _this.getCounterMeasureList();
            });
          };
          RemoveAssetComponent.prototype.reloadAssets = function() {
            var _this = this;
            if (!!this.equipmentInput.informationsDTO && !!this.equipmentInput.informationsDTO.eventDate) {
              this.assetsToRemove.date = this.equipmentInput.informationsDTO.eventDate;
              this.removeAssetService.findAssetsRemovedList(this.assetsToRemove).subscribe(function(assetsToRemoved) {
                if (!!_this.equipmentInput.informationsDTO) {
                  _this.equipmentInput.informationsDTO.subject = assetsToRemoved.subject;
                }
                _this.assetsToBeRemoved = __spread(assetsToRemoved.assetList);
                _this.resultsTable = _this.convertIntoRowType(assetsToRemoved.assetList);
                _this.isLoading = false;
              });
            }
          };
          RemoveAssetComponent.prototype.convertIntoRowType = function(assets) {
            var _this = this;
            var assetsTable = [];
            var checkRowAlert = 0;
            assets.forEach(function(asset) {
              var assetRow = {
                _obj: asset,
                pnCode: asset.assetPn,
                sn: asset.assetSn,
                designation: asset.assetDesignation,
                statusAtDate: asset.assetStatusAtDate && _this.operationalStatusMap.get(asset.assetStatusAtDate),
                designationSuperior: asset.superiorEquipment
                  ? _shared_utils_bido_equipment_utils__WEBPACK_IMPORTED_MODULE_17__[
                      'BidoEquipmentUtils'
                    ].createAssetName(asset.superiorEquipment)
                  : '',
                pnCodeSuperior: asset.superiorPn,
                snSuperior: asset.superiorSN,
                alerts: asset.alert,
                equipmentCode: asset.assetCode,
                assestFatherCode: asset.assestFatherCode,
                assetFamilyVariant: asset.assetFamilyVariant,
                alertMessage:
                  asset.exceptionMessage &&
                  asset.exceptionMessage.replace('com.twomoro.aerowebb.exception.AeroWebbException:', '')
              };
              assetsTable.push(assetRow);
              checkRowAlert = asset.alert ? checkRowAlert + 1 : checkRowAlert;
              if (asset.isEngine && !_this.showEngineOnlyFields) {
                _this.showEngineOnlyFields = true;
              }
            });
            if (checkRowAlert === assets.length) {
              this.isSaveAllowed = true;
            }
            return assetsTable;
          };
          RemoveAssetComponent.prototype.validateRemoval = function() {
            var eventDate;
            if (!!this.equipmentInput.informationsDTO && !!this.equipmentInput.informationsDTO.eventDate) {
              eventDate = moment__WEBPACK_IMPORTED_MODULE_2__(this.equipmentInput.informationsDTO.eventDate);
            }
            if (eventDate && eventDate.isAfter(moment__WEBPACK_IMPORTED_MODULE_2__())) {
              this.messageService.showErrorMessage(this.getTranslateKey('dateError'));
              return false;
            }
            if (
              this.showEngineOnlyFields &&
              ((this.equipmentInput.newAircraftStatus &&
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .AIRCRAFT_STATUS_IN_OPERATION_KEY === this.equipmentInput.newAircraftStatus) ||
                (_shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .AIRCRAFT_STATUS_IN_OPERATION_KEY === this.fatherBidoEquipmentDto.operationalStatus &&
                  !this.equipmentInput.newAircraftStatus))
            ) {
              this.messageService.showErrorMessage(this.getTranslateKey('invalidOperationalStatusAircraft'));
              return false;
            }
            return true;
          };
          RemoveAssetComponent.prototype.saveAsset = function() {
            var _this = this;
            if (this.validateRemoval()) {
              var newEvolList_1 = [];
              var updatedEvolList_1 = [];
              var measureList_1 = [];
              if (this.evolutionsLinked && this.evolutionsLinked.length > 0) {
                this.evolutionsLinked.map(function(obj) {
                  obj._obj.isPartiallyApplied = obj.isPartiallyApplied;
                  obj._obj.isNotApplicable = obj.isNotApplicable;
                  obj._obj.dateRemove = obj.dateRemove ? new Date(obj.dateRemove) : undefined;
                  updatedEvolList_1.push(obj._obj);
                });
              }
              if (this.newEvolutionsLinked && this.newEvolutionsLinked.length > 0) {
                this.newEvolutionsLinked.map(function(obj) {
                  obj._obj.isPartiallyApplied = obj.isPartiallyApplied;
                  obj._obj.isNotApplicable = obj.isNotApplicable;
                  obj._obj.dateApplied = obj.applicationDate ? new Date(obj.applicationDate) : undefined;
                  obj._obj.dateRemove = obj.dateRemove ? new Date(obj.dateRemove) : undefined;
                  newEvolList_1.push(obj._obj);
                });
              }
              if (this.canceledMeasureProgress && this.canceledMeasureProgress.length > 0) {
                this.canceledMeasureProgress.map(function(obj) {
                  measureList_1.push(obj._obj);
                });
              }
              if (
                this.equipmentInput.informationsDTO &&
                this.equipmentInput.informationsDTO.eventDate &&
                this.equipmentInput.informationsDTO.reason &&
                this.equipmentInput.newOperationalStatus
              ) {
                this.equipmentInput.informationsDTO.warehouseId = this.selectedWarehouse
                  ? this.selectedWarehouse.wareHouseId
                  : undefined;
                var equipment_1 = {
                  informationsDTO: this.equipmentInput.informationsDTO,
                  newAircraftStatus: this.equipmentInput.newAircraftStatus,
                  newOperationalStatus: this.equipmentInput.newOperationalStatus,
                  cancelMeasuresSinceEventDate: undefined,
                  engineRemoval: !!this.showEngineOnlyFields,
                  specificSNEnabled: !!this.sessionService.isSpecificSAE,
                  updateEvolutions: this.updateEvolutions,
                  resetCounters: this.resetCounters,
                  newBidoEquipmentEvolutionDTOList: newEvolList_1,
                  updateBidoEquipmentEvolutionDTOList: updatedEvolList_1,
                  measuresToCancel: measureList_1
                };
                var fatherCode_1 = '';
                this.assetsToBeRemoved.forEach(function(asset) {
                  if (!fatherCode_1) {
                    fatherCode_1 = asset.assestFatherCode || '';
                  }
                  if (!equipment_1.equipmentCode) {
                    equipment_1.equipmentCode = [];
                  }
                  if (equipment_1.equipmentCode && asset.assetCode) {
                    equipment_1.equipmentCode.push(asset.assetCode);
                  }
                });
                equipment_1.equipmentCodeFather = fatherCode_1;
                this.showSaveSpinner = true;
                this.removeAssetService.dismantleEquipment(equipment_1).subscribe(
                  function(result) {
                    _this.asstesAfterDismantling = __spread(result.removalAssetOutputList);
                    _this.bindReportData(_this.asstesAfterDismantling);
                    _this.reportText = result.report || '';
                    _this.isReadOnlyForm = true;
                    _this.messageService.showSuccessMessage(_this.getTranslateKey('messageOnSave'));
                    _this.showSaveSpinner = false;
                    _this.isSaveAllowed = false;
                  },
                  function(error) {
                    _this.showSaveSpinner = false;
                  }
                );
              } else {
                this.messageService.showErrorMessage('global.missingFields');
              }
            }
          };
          RemoveAssetComponent.prototype.bindReportData = function(assets) {
            var _this = this;
            this.reportHeading = '';
            assets.forEach(function(asset) {
              var tableRow = _this.resultsTable.find(function(row) {
                return row.equipmentCode === asset.equipmentCode;
              });
              if (!!tableRow) {
                tableRow.report = asset.isRemoved;
                tableRow.reportMessage =
                  asset.removalMessageException &&
                  asset.removalMessageException.replace('com.twomoro.aerowebb.exception.AeroWebbException:', '');
                tableRow.assetsDTO = asset;
                if (asset.reportDTO && asset.reportDTO.eventCode && !_this.reportHeading) {
                  _this.reportHeading = asset.reportDTO.eventCode;
                } else if (asset.reportDTO && asset.reportDTO.eventCode && _this.reportHeading) {
                  _this.reportHeading = _this.reportHeading + ';' + asset.reportDTO.eventCode;
                }
              }
            });
          };
          RemoveAssetComponent.prototype.resetResultsTable = function(table) {
            table.reset();
            table.filters = {};
          };
          RemoveAssetComponent.prototype.loadDropDownLists = function() {
            var _this = this;
            var operationalStatusObservable = this.isGroundEquipment
              ? this.propertiesService.getValue(
                  _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_6__['GenericPropertyConstants']
                    .GROUND_EQUIPMENT_STATUS_MAP
                )
              : this.propertiesService.getValue(
                  _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_6__['GenericPropertyConstants']
                    .OPERATIONAL_STATUS_MAP
                );
            operationalStatusObservable.subscribe(function(results) {
              _this.propertyOperationalStatus = results;
              results.forEach(function(obj, index) {
                if (!_this.isGroundEquipment) {
                  if (
                    obj.value ===
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                      .OPERATIONAL_STATUS_IN_OPERATION_KEY
                  ) {
                    results.splice(index, 1);
                    return;
                  }
                }
                if (
                  !_this.sessionService.isSpecificSAE &&
                  obj.value ===
                    _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                      .OPERATIONAL_STATUS_EDS_UNDER_PROGRESS_KEY
                ) {
                  results.splice(index, 1);
                  return;
                }
                _this.operationalStatusMap.set(obj.value, obj.label);
              });
            });
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_6__['GenericPropertyConstants']
                  .REMOVAL_REASON_MAP
              )
              .subscribe(function(results) {
                _this.propertyRemovalReason = results;
              });
            this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_6__['GenericPropertyConstants']
                  .AIRCRAFT_STATUS_MAP
              )
              .subscribe(function(results) {
                _this.propertyNewAircraftStatus = results;
              });
            this.removeAssetService.getEventTypesValues().subscribe(function(results) {
              results.forEach(function(obj) {
                _this.eventTypeMap.set(obj.value, obj.label);
              });
            });
          };
          // tslint:disable-next-line:no-any
          RemoveAssetComponent.prototype.onFilter = function(event) {
            this.filteredRowsNb = event.filteredValue.length;
          };
          RemoveAssetComponent.prototype.report = function() {
            if (!!this.reportText) {
              this.showReportPopup = true;
            }
          };
          RemoveAssetComponent.prototype.onActionCheckWarehouseAndOperationalStatus = function() {
            if (this.equipmentInput.newOperationalStatus && this.selectedWarehouse) {
              var operationalStatusFromReceipt = '';
              if (!this.selectedWarehouse.whType) {
                operationalStatusFromReceipt =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                    .OPERATIONAL_STATUS_SPARE_KEY;
              } else if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .MM_WAREHOUSE_TYPE_REPAIR_KEY === this.selectedWarehouse.whType
              ) {
                operationalStatusFromReceipt =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                    .OPERATIONAL_STATUS_MAINTENANCE_KEY;
              } else if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .MM_WAREHOUSE_TYPE_UNSERVICEABLE_KEY === this.selectedWarehouse.whType
              ) {
                operationalStatusFromReceipt =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                    .OPERATIONAL_STATUS_IN_STOCK_KEY;
              } else if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .MM_WAREHOUSE_TYPE_SCRAP_KEY === this.selectedWarehouse.whType
              ) {
                operationalStatusFromReceipt =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                    .OPERATIONAL_STATUS_SCRAPPED_KEY;
              } else if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .MM_WAREHOUSE_TYPE_USED_KEY === this.selectedWarehouse.whType
              ) {
                operationalStatusFromReceipt =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                    .OPERATIONAL_STATUS_SPARE_KEY;
              } else if (
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .MM_WAREHOUSE_TYPE_NEW_KEY === this.selectedWarehouse.whType
              ) {
                operationalStatusFromReceipt =
                  _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                    .OPERATIONAL_STATUS_SPARE_KEY;
              }
              if (this.equipmentInput.newOperationalStatus !== operationalStatusFromReceipt) {
                // Report Warning
                this.messageService.showWarningMessage(this.getTranslateKey('warningOperationStatus'));
              }
            }
          };
          RemoveAssetComponent.prototype.searchEventCode = function() {
            if (this.isSaveAllowed) {
              this.showQuickSearchEventPopup = true;
            }
          };
          RemoveAssetComponent.prototype.resetEventField = function(ev) {
            if (this.isSaveAllowed) {
              this.equipmentInput.informationsDTO.linkedEventCode = undefined;
              this.eventType = undefined;
              this.eventSubject = undefined;
              ev.stopPropagation();
            }
          };
          /**
           * Set event information in additional tab
           */
          RemoveAssetComponent.prototype.setSelectedEvent = function(event) {
            if (!!event) {
              if (
                event.eventStatus ===
                _shared_constants_aw_properties_constants__WEBPACK_IMPORTED_MODULE_4__['AWPropertiesConstants']
                  .EVENT_STATUS_CLOSED_KEY
              ) {
                this.messageService.showWarningMessage(this.getTranslateKey('canNotSelectClosedEvent'));
                return;
              }
              if (!!this.equipmentInput && !!this.equipmentInput.informationsDTO) {
                this.equipmentInput.informationsDTO.linkedEventCode = event.eventCode;
              }
              if (event.eventType) {
                this.eventType = this.eventTypeMap.get(event.eventType);
              }
              this.eventSubject = event.eventSubject;
            }
          };
          /**
           * Bind Evolution Tables
           */
          RemoveAssetComponent.prototype.bindEvolutionsTables = function() {
            var _this = this;
            var assetInput = [];
            this.resultsTable.forEach(function(res) {
              if (
                !!res &&
                !!res.equipmentCode &&
                !!res.assetFamilyVariant &&
                !!res.pnCode &&
                !!_this.equipmentInput &&
                !!_this.equipmentInput.informationsDTO &&
                !!_this.equipmentInput.informationsDTO.eventDate
              ) {
                var evolutionLinked = {
                  assetCode: res.equipmentCode,
                  familyVariantCode: res.assetFamilyVariant,
                  pnCode: res.pnCode,
                  eventDate: _this.equipmentInput.informationsDTO.eventDate
                };
                assetInput.push(evolutionLinked);
              }
            });
            this.removeAssetService.getEvolutionsLinkedToAsset(assetInput).subscribe(function(results) {
              var proposedEvolution = [];
              var evolutionLinked = [];
              results.forEach(function(res) {
                res.proposedBidoEquipmentEvolutionList.forEach(function(row) {
                  if (!!row) {
                    proposedEvolution.push(_this.parseToCustomEvolutionType(row));
                  }
                });
                res.bidoEquipmentEvolutionList.forEach(function(row) {
                  if (!!row) {
                    evolutionLinked.push(_this.parseToCustomEvolutionType(row));
                  }
                });
              });
              _this.newEvolutionsLinked = __spread(proposedEvolution);
              _this.evolutionsLinked = __spread(evolutionLinked);
            });
          };
          RemoveAssetComponent.prototype.parseToCustomEvolutionType = function(obj) {
            var evolutionTableRow = {
              _obj: obj,
              applicationDate: obj.dateApplied ? this.dateService.dateToString(obj.dateApplied) : '',
              dateRemove: obj.dateRemove ? this.dateService.dateToString(obj.dateRemove) : '',
              equipmentCode: obj.equipmentCode,
              evoNumber: obj.evolutionNumber,
              evoRevisionNumber: obj.evolutionRevisionNumber,
              evoType: obj.evolutionType,
              isNotApplicable: obj.isNotApplicable,
              isPartiallyApplied: obj.isPartiallyApplied
            };
            return evolutionTableRow;
          };
          RemoveAssetComponent.prototype.parseToCustomMeasureType = function(obj) {
            var tableRow = {
              _obj: obj,
              readingDate: obj.date ? this.dateService.dateToString(obj.date) : '',
              asset: obj.asset,
              counterCode: obj.counterCode,
              valueAfter: obj.valueAfter,
              valueBefore: obj.valueBefore
            };
            return tableRow;
          };
          RemoveAssetComponent.prototype.getCounterMeasureList = function(event) {
            var _this = this;
            var counterMeasureInput = [];
            this.resultsTable.forEach(function(res) {
              if (
                !!event &&
                !!event.equipmentCode &&
                !!res &&
                !!res.equipmentCode &&
                !!_this.equipmentInput &&
                !!_this.equipmentInput.informationsDTO &&
                !!_this.equipmentInput.informationsDTO.eventDate
              ) {
                var counterMesureInput = {
                  equipmentCode: res.equipmentCode,
                  equipmentCodeFather: event.equipmentCode,
                  date: _this.equipmentInput.informationsDTO.eventDate
                };
                counterMeasureInput.push(counterMesureInput);
              } else if (res.pnCodeSuperior) {
                if (
                  !!res &&
                  !!res.equipmentCode &&
                  !!res.assestFatherCode &&
                  !!_this.equipmentInput &&
                  !!_this.equipmentInput.informationsDTO &&
                  !!_this.equipmentInput.informationsDTO.eventDate
                ) {
                  var counterMesureInput = {
                    equipmentCode: res.equipmentCode,
                    equipmentCodeFather: res.assestFatherCode,
                    date: _this.equipmentInput.informationsDTO.eventDate
                  };
                  counterMeasureInput.push(counterMesureInput);
                }
              }
            });
            this.removeAssetService.getCounterMeasureList(counterMeasureInput).subscribe(function(results) {
              if (!!results) {
                var cancelMeasure_1 = [];
                results.forEach(function(resp) {
                  if (resp && resp.measureToCancel) {
                    resp.measureToCancel.forEach(function(row) {
                      cancelMeasure_1.push(_this.parseToCustomMeasureType(row));
                    });
                  }
                });
                _this.canceledMeasureProgress = __spread(cancelMeasure_1);
              }
            });
          };
          RemoveAssetComponent.prototype.isSelectedAnchor = function(anchorId) {
            return anchorId === this.selectedAnchor;
          };
          RemoveAssetComponent.prototype.setSelectedAnchor = function(anchorId) {
            this.pageTocService.setAnchorSelected(anchorId);
            this.selectedAnchor = anchorId;
          };
          RemoveAssetComponent.prototype.onMoreDetailsClick = function() {
            this.showAdvancedCriteria = !this.showAdvancedCriteria;
            this.updateEvolutions = false;
            this.resetCounters = false;
          };
          var RemoveAssetComponent_1;
          RemoveAssetComponent.ADDITIONAL_INFORMATION_ANCHOR_ID = 'additionalInformationAnchor';
          RemoveAssetComponent.ASSETS_TO_BE_REMOVED_ANCHOR_ID = 'assetsToBeRemovedAnchor';
          RemoveAssetComponent.MAIN_INFORMATION_ANCHOR_ID = 'mainInformationAnchor';
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                RemoveAssetComponent_1.ADDITIONAL_INFORMATION_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            RemoveAssetComponent.prototype,
            'additionalInformationAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                RemoveAssetComponent_1.ASSETS_TO_BE_REMOVED_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            RemoveAssetComponent.prototype,
            'assetToRemoveAnchor',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['ViewChild'])(
                RemoveAssetComponent_1.MAIN_INFORMATION_ANCHOR_ID
              ),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['ElementRef'])
            ],
            RemoveAssetComponent.prototype,
            'mainInfoAnchor',
            void 0
          );
          RemoveAssetComponent = RemoveAssetComponent_1 = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-remove-asset',
                template: __webpack_require__(
                  /*! ./remove-asset.component.html */ './src/app/main/fleet-management/remove-asset/remove-asset.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./remove-asset.component.scss */ './src/app/main/fleet-management/remove-asset/remove-asset.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_9__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_10__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_11__['MessageService'],
                _shared_components_component_sidebar_page_toc_service__WEBPACK_IMPORTED_MODULE_3__['PageTocService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_13__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_15__['TabService'],
                _remove_asset_service__WEBPACK_IMPORTED_MODULE_20__['RemoveAssetService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_14__['SessionService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_12__['PropertiesService'],
                _shared_services_date_service__WEBPACK_IMPORTED_MODULE_8__['DateService']
              ])
            ],
            RemoveAssetComponent
          );
          return RemoveAssetComponent;
        })(_shared_types_page_component__WEBPACK_IMPORTED_MODULE_16__['PageComponent']);

        /***/
      },

    /***/ './src/app/main/fleet-management/remove-asset/remove-asset.service.ts':
      /*!****************************************************************************!*\
  !*** ./src/app/main/fleet-management/remove-asset/remove-asset.service.ts ***!
  \****************************************************************************/
      /*! exports provided: RemoveAssetService */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'RemoveAssetService', function() {
          return RemoveAssetService;
        });
        /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */ './node_modules/@angular/common/fesm5/http.js'
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_api_bidt_warehouse_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/api/bidt-warehouse.api */ './src/app/shared/api/bidt-warehouse.api.ts'
        );
        /* harmony import */ var _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/api/fleet-business.api */ './src/app/shared/api/fleet-business.api.ts'
        );
        /* harmony import */ var _shared_api_fleet_history_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/api/fleet-history.api */ './src/app/shared/api/fleet-history.api.ts'
        );
        /* harmony import */ var _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/api/fleet-management.api */ './src/app/shared/api/fleet-management.api.ts'
        );
        /* harmony import */ var _shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/http/abstract-aw-http */ './src/app/shared/http/abstract-aw-http.ts'
        );
        /* harmony import */ var _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/services/app-config.service */ './src/app/shared/services/app-config.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var RemoveAssetService = /** @class */ (function(_super) {
          __extends(RemoveAssetService, _super);
          function RemoveAssetService(
            http,
            appConfigService,
            bidtWarehouseApi,
            fleetBusinessApi,
            fleetHistoryApi,
            fleetManagementApi
          ) {
            var _this = _super.call(this, http, appConfigService) || this;
            _this.bidtWarehouseApi = bidtWarehouseApi;
            _this.fleetBusinessApi = fleetBusinessApi;
            _this.fleetHistoryApi = fleetHistoryApi;
            _this.fleetManagementApi = fleetManagementApi;
            return _this;
          }
          RemoveAssetService.prototype.findAllWarehouseForRemoval = function(input) {
            return _super.prototype.post.call(this, this.bidtWarehouseApi.findAllWarehouseForRemoval, input);
          };
          RemoveAssetService.prototype.findBidoEquipment = function(asset) {
            return _super.prototype.post.call(this, this.fleetManagementApi.findBidoEquipment, asset);
          };
          RemoveAssetService.prototype.findAssetsRemovedList = function(asset) {
            return _super.prototype.post.call(this, this.fleetHistoryApi.findAssetsRemovedList, asset);
          };
          RemoveAssetService.prototype.dismantleEquipment = function(assets) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.dismantleEquipment, assets);
          };
          RemoveAssetService.prototype.findAllWarehouseForRemovalWithData = function(input) {
            return _super.prototype.post.call(this, this.bidtWarehouseApi.findAllWarehouseForRemovalWithData, input);
          };
          RemoveAssetService.prototype.getEvolutionsLinkedToAsset = function(asset) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.getEvolutionsLinkedToAsset, asset);
          };
          RemoveAssetService.prototype.getCounterMeasureList = function(counterMeasureInput) {
            return _super.prototype.post.call(this, this.fleetBusinessApi.getCounterMeasureList, counterMeasureInput);
          };
          RemoveAssetService.prototype.getEventTypesValues = function() {
            return _super.prototype.post.call(this, this.fleetManagementApi.getEventTypesValues);
          };
          RemoveAssetService = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])(),
              __metadata('design:paramtypes', [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClient'],
                _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_7__['AppConfigService'],
                _shared_api_bidt_warehouse_api__WEBPACK_IMPORTED_MODULE_2__['BidtWarehouseApi'],
                _shared_api_fleet_business_api__WEBPACK_IMPORTED_MODULE_3__['FleetBusinessApi'],
                _shared_api_fleet_history_api__WEBPACK_IMPORTED_MODULE_4__['FleetHistoryApi'],
                _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_5__['FleetManagementApi']
              ])
            ],
            RemoveAssetService
          );
          return RemoveAssetService;
        })(_shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_6__['AbstractAwHttpService']);

        /***/
      },

    /***/ './src/app/main/fleet-management/search-work-package/search-work-package.component.ts':
      /*!********************************************************************************************!*\
  !*** ./src/app/main/fleet-management/search-work-package/search-work-package.component.ts ***!
  \********************************************************************************************/
      /*! exports provided: SearchAllWorkPackageComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'SearchAllWorkPackageComponent',
          function() {
            return SearchAllWorkPackageComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @ngx-translate/core */ './node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js'
        );
        /* harmony import */ var _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../../shared/constants/component-constants */ './src/app/shared/constants/component-constants.ts'
        );
        /* harmony import */ var _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/services/confirmation.service */ './src/app/shared/services/confirmation.service.ts'
        );
        /* harmony import */ var _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/services/favorite.service */ './src/app/shared/services/favorite.service.ts'
        );
        /* harmony import */ var _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../../shared/services/loader.service */ './src/app/shared/services/loader.service.ts'
        );
        /* harmony import */ var _shared_services_message_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../../shared/services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _shared_services_page_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../../../shared/services/page.service */ './src/app/shared/services/page.service.ts'
        );
        /* harmony import */ var _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../../../shared/services/serialization.service */ './src/app/shared/services/serialization.service.ts'
        );
        /* harmony import */ var _shared_services_session_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../../../shared/services/session.service */ './src/app/shared/services/session.service.ts'
        );
        /* harmony import */ var _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../../../shared/services/tab.service */ './src/app/shared/services/tab.service.ts'
        );
        /* harmony import */ var _maintenance_work_package_form_popups_dialog_work_order_edition_dialog_work_order_edition_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../../maintenance/work-package/form/popups/dialog-work-order-edition/dialog-work-order-edition.service */ './src/app/main/maintenance/work-package/form/popups/dialog-work-order-edition/dialog-work-order-edition.service.ts'
        );
        /* harmony import */ var _maintenance_work_package_search_work_package_search_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ../../maintenance/work-package/search/work-package-search.component */ './src/app/main/maintenance/work-package/search/work-package-search.component.ts'
        );
        /* harmony import */ var _maintenance_work_package_search_work_package_search_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! ../../maintenance/work-package/search/work-package-search.service */ './src/app/main/maintenance/work-package/search/work-package-search.service.ts'
        );
        /* harmony import */ var _maintenance_work_package_work_package_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! ../../maintenance/work-package/work-package.service */ './src/app/main/maintenance/work-package/work-package.service.ts'
        );
        /* harmony import */ var _asset_search_asset_search_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! ../asset/search/asset-search.service */ './src/app/main/fleet-management/asset/search/asset-search.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var SearchAllWorkPackageComponent = /** @class */ (function(_super) {
          __extends(SearchAllWorkPackageComponent, _super);
          function SearchAllWorkPackageComponent(
            favoriteService,
            loaderService,
            messageService,
            serializationService,
            tabService,
            sessionService,
            confirmationService,
            pageService,
            wpSearchService,
            wpService,
            assetSearchService,
            translateService,
            dialogWorkOrderEditService
          ) {
            var _this =
              _super.call(
                this,
                favoriteService,
                loaderService,
                messageService,
                serializationService,
                tabService,
                sessionService,
                translateService,
                confirmationService,
                pageService,
                wpSearchService,
                wpService,
                assetSearchService,
                dialogWorkOrderEditService
              ) || this;
            _this.globalSearch = true;
            return _this;
          }
          SearchAllWorkPackageComponent.prototype.getComponentName = function() {
            return _shared_constants_component_constants__WEBPACK_IMPORTED_MODULE_2__['ComponentConstants']
              .FLE_SEARCH_WORK_PACKAGE;
          };
          SearchAllWorkPackageComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-search-all-work-package',
                template: __webpack_require__(
                  /*! ../../maintenance/work-package/search/work-package-search.component.html */ './src/app/main/maintenance/work-package/search/work-package-search.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ../../maintenance/work-package/search/work-package-search.component.scss */ './src/app/main/maintenance/work-package/search/work-package-search.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _shared_services_favorite_service__WEBPACK_IMPORTED_MODULE_4__['FavoriteService'],
                _shared_services_loader_service__WEBPACK_IMPORTED_MODULE_5__['LoaderService'],
                _shared_services_message_service__WEBPACK_IMPORTED_MODULE_6__['MessageService'],
                _shared_services_serialization_service__WEBPACK_IMPORTED_MODULE_8__['SerializationService'],
                _shared_services_tab_service__WEBPACK_IMPORTED_MODULE_10__['TabService'],
                _shared_services_session_service__WEBPACK_IMPORTED_MODULE_9__['SessionService'],
                _shared_services_confirmation_service__WEBPACK_IMPORTED_MODULE_3__['ConfirmationService'],
                _shared_services_page_service__WEBPACK_IMPORTED_MODULE_7__['PageService'],
                _maintenance_work_package_search_work_package_search_service__WEBPACK_IMPORTED_MODULE_13__[
                  'WorkPackageSearchService'
                ],
                _maintenance_work_package_work_package_service__WEBPACK_IMPORTED_MODULE_14__['WorkPackageService'],
                _asset_search_asset_search_service__WEBPACK_IMPORTED_MODULE_15__['AssetSearchService'],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_1__['TranslateService'],
                _maintenance_work_package_form_popups_dialog_work_order_edition_dialog_work_order_edition_service__WEBPACK_IMPORTED_MODULE_11__[
                  'DialogWorkOrderEditService'
                ]
              ])
            ],
            SearchAllWorkPackageComponent
          );
          return SearchAllWorkPackageComponent;
        })(
          _maintenance_work_package_search_work_package_search_component__WEBPACK_IMPORTED_MODULE_12__[
            'WorkPackageSearchComponent'
          ]
        );

        /***/
      },

    /***/ './src/app/main/maintenance/work-package/work-package.service.ts':
      /*!***********************************************************************!*\
  !*** ./src/app/main/maintenance/work-package/work-package.service.ts ***!
  \***********************************************************************/
      /*! exports provided: WorkPackageService */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'WorkPackageService', function() {
          return WorkPackageService;
        });
        /* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/common/http */ './node_modules/@angular/common/fesm5/http.js'
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! rxjs/operators */ './node_modules/rxjs/_esm5/operators/index.js'
        );
        /* harmony import */ var _shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../../shared/http/abstract-aw-http */ './src/app/shared/http/abstract-aw-http.ts'
        );
        /* harmony import */ var _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../../shared/services/app-config.service */ './src/app/shared/services/app-config.service.ts'
        );
        /* harmony import */ var _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./../../../shared/api/fleet-management.api */ './src/app/shared/api/fleet-management.api.ts'
        );
        /* harmony import */ var _shared_api_product_structure_management_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./../../../shared/api/product-structure-management.api */ './src/app/shared/api/product-structure-management.api.ts'
        );
        /* harmony import */ var _shared_api_user_profile_management_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./../../../shared/api/user-profile-management.api */ './src/app/shared/api/user-profile-management.api.ts'
        );
        /* harmony import */ var _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./../../../shared/constants/bido-function-type-constants */ './src/app/shared/constants/bido-function-type-constants.ts'
        );
        /* harmony import */ var _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ./../../../shared/constants/generic-property-constants */ './src/app/shared/constants/generic-property-constants.ts'
        );
        /* harmony import */ var _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ./../../../shared/services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _shared_utils_array_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ./../../../shared/utils/array-utils */ './src/app/shared/utils/array-utils.ts'
        );
        /* harmony import */ var _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ./../../../shared/utils/select-item-utils */ './src/app/shared/utils/select-item-utils.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var WorkPackageService = /** @class */ (function(_super) {
          __extends(WorkPackageService, _super);
          function WorkPackageService(
            http,
            appConfigService,
            propertiesService,
            productStructureManagementApi,
            fleetManagementApi,
            userProfileManagementApi
          ) {
            var _this = _super.call(this, http, appConfigService) || this;
            _this.propertiesService = propertiesService;
            _this.productStructureManagementApi = productStructureManagementApi;
            _this.fleetManagementApi = fleetManagementApi;
            _this.userProfileManagementApi = userProfileManagementApi;
            return _this;
          }
          WorkPackageService.prototype.findAuthorizedBireSite = function() {
            return _super.prototype.post.call(this, this.productStructureManagementApi.findAuthorizedBireSite);
          };
          WorkPackageService.prototype.findAuthorizedBidoOperations = function() {
            return _super.prototype.post.call(this, this.fleetManagementApi.findAuthorizedBidoOperations);
          };
          WorkPackageService.prototype.findUsersWithUseCase = function() {
            return _super.prototype.post.call(
              this,
              this.userProfileManagementApi.findBidoUsersWithUseCase,
              _shared_constants_bido_function_type_constants__WEBPACK_IMPORTED_MODULE_8__['BidoFunctionTypeConstants']
                .UC_AIRM_RECEPTION
            );
          };
          WorkPackageService.prototype.loadGenProps = function(key) {
            return this.propertiesService.getValue(key).pipe(
              Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function(results) {
                return !!results
                  ? _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_12__['SelectItemUtils'].fromLabelValues(
                      results
                    )
                  : [];
              })
            );
          };
          WorkPackageService.prototype.loadStatusList = function(removedStatuses) {
            return this.propertiesService
              .getValue(
                _shared_constants_generic_property_constants__WEBPACK_IMPORTED_MODULE_9__['GenericPropertyConstants']
                  .AIRM_PROJECT_STATUS_MAP
              )
              .pipe(
                Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function(results) {
                  var statusList = !!results
                    ? _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_12__['SelectItemUtils'].fromLabelValues(
                        results
                      )
                    : [];
                  return statusList.filter(function(status) {
                    return !removedStatuses.includes(status.value);
                  });
                })
              );
          };
          WorkPackageService.prototype.loadMROCenterList = function() {
            return this.findAuthorizedBireSite().pipe(
              Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function(results) {
                var mroCenterList = !!results
                  ? _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_12__['SelectItemUtils'].fromLabelValues(
                      results
                    )
                  : [];
                return mroCenterList.map(function(mro) {
                  mro.label = mro.label ? mro.label + ' (' + mro.value + ')' : mro.value;
                  return mro;
                });
              })
            );
          };
          WorkPackageService.prototype.loadOperationList = function() {
            return this.findAuthorizedBidoOperations().pipe(
              Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function(results) {
                return !!results
                  ? _shared_utils_select_item_utils__WEBPACK_IMPORTED_MODULE_12__['SelectItemUtils'].fromLabelValues(
                      results
                    )
                  : [];
              })
            );
          };
          WorkPackageService.prototype.loadUserList = function() {
            return this.findUsersWithUseCase().pipe(
              Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__['map'])(function(results) {
                return !!results
                  ? results
                      .map(function(user) {
                        return {
                          label: user.lastname + ' ' + user.firstname,
                          value: user.userId
                        };
                      })
                      .sort(
                        _shared_utils_array_utils__WEBPACK_IMPORTED_MODULE_11__['ArrayUtils'].compareValues('label')
                      )
                  : [];
              })
            );
          };
          WorkPackageService = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__['Injectable'])(),
              __metadata('design:paramtypes', [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_0__['HttpClient'],
                _shared_services_app_config_service__WEBPACK_IMPORTED_MODULE_4__['AppConfigService'],
                _shared_services_properties_service__WEBPACK_IMPORTED_MODULE_10__['PropertiesService'],
                _shared_api_product_structure_management_api__WEBPACK_IMPORTED_MODULE_6__[
                  'ProductStructureManagementApi'
                ],
                _shared_api_fleet_management_api__WEBPACK_IMPORTED_MODULE_5__['FleetManagementApi'],
                _shared_api_user_profile_management_api__WEBPACK_IMPORTED_MODULE_7__['UserProfileManagementApi']
              ])
            ],
            WorkPackageService
          );
          return WorkPackageService;
        })(_shared_http_abstract_aw_http__WEBPACK_IMPORTED_MODULE_3__['AbstractAwHttpService']);

        /***/
      },

    /***/ './src/app/shared/components/dialog-bido-customer/dialog-bido-customer.component.html':
      /*!********************************************************************************************!*\
  !*** ./src/app/shared/components/dialog-bido-customer/dialog-bido-customer.component.html ***!
  \********************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<p-dialog\r\n  class="aw-dialog"\r\n  header="{{ getComponentName() + \'.title\' | translate }}"\r\n  modal="modal"\r\n  positionTop="60"\r\n  [(visible)]="display"\r\n  [closable]="false"\r\n  [focusOnShow]="false"\r\n  [contentStyle]="{ width: \'50vw\' }"\r\n>\r\n  <div class="popup-content">\r\n    <div class="search-panel-container">\r\n      <div class="search-criteria-container">\r\n        <div class="form-group">\r\n          <label>\r\n            {{ getComponentName() + ".customerCode" | translate }}\r\n          </label>\r\n          <input type="text" class="aw-input" [(ngModel)]="searchObject.customerCode" />\r\n        </div>\r\n\r\n        <div class="form-group">\r\n          <label>\r\n            {{ getComponentName() + ".customerName" | translate }}\r\n          </label>\r\n          <input type="text" class="aw-input" [(ngModel)]="searchObject.customerName" />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button type="button" color="primary" mat-raised-button (click)="search()">\r\n          <i class="fa fa-fw fa-search" aria-hidden="true"></i>\r\n          <span>{{ "global.toSearch" | translate }}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <p-table\r\n      [resizableColumns]="true"\r\n      #ptableCustomer\r\n      class="aw-table aw-table-section"\r\n      [columns]="customersTableCols"\r\n      [value]="customersTable.list"\r\n      [style]="{ margin: \'0 auto\', width: \'100%\' }"\r\n      selectionMode="single"\r\n      [(selection)]="selectedCustomer"\r\n      dataKey="customerCode"\r\n      (onFilter)="updateDisplayedCustomerRowNb($event.filteredValue.length)"\r\n      [scrollable]="true"\r\n      scrollHeight="60vh"\r\n    >\r\n      <ng-template pTemplate="emptymessage">\r\n        &nbsp;\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="caption">\r\n        <div class="aw-table-header">\r\n          <div class="aw-table-header-title-wrapper">\r\n            <div class="aw-table-results-number" *ngIf="ptableCustomer.totalRecords > 0">\r\n              {{ displayedCustomerRowNb }} / {{ ptableCustomer.totalRecords }}\r\n              <span class="aw-table-more-results" *ngIf="customersTable.moreResults">+</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class="aw-table-global-filter">\r\n            <input\r\n              type="text"\r\n              class="aw-input"\r\n              placeholder="{{ \'global.globalFilter\' | translate }}"\r\n              (input)="ptableCustomer.filterGlobal($event.target.value, \'contains\')"\r\n            />\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="colgroup" let-columns>\r\n        <colgroup>\r\n          <col *ngFor="let col of columns" [ngStyle]="{ width: col.width }" />\r\n        </colgroup>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n          <th\r\n            pResizableColumn\r\n            *ngFor="let col of columns"\r\n            [pSortableColumn]="col.field"\r\n            [ngStyle]="{ \'text-align\': col.alignment }"\r\n          >\r\n            {{ getComponentName() + "." + col.field | translate }}\r\n\r\n            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n        <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex">\r\n          <td *ngFor="let col of columns" [ngStyle]="{ \'text-align\': col.alignment }">\r\n            {{ rowData[col.field] }}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n\r\n  <p-footer>\r\n    <button type="button" color="primary" mat-raised-button (click)="validate()">\r\n      <i class="fa fa-fw fa-check" aria-hidden="true"></i>\r\n      <span>{{ "global.validate" | translate }}</span>\r\n    </button>\r\n\r\n    <button type="button" mat-raised-button (click)="closeDialog()">\r\n      <i class="fa fa-fw fa-times" aria-hidden="true"></i>\r\n      <span>{{ "global.cancel" | translate }}</span>\r\n    </button>\r\n  </p-footer>\r\n</p-dialog>\r\n';

        /***/
      },

    /***/ './src/app/shared/components/dialog-bido-customer/dialog-bido-customer.component.scss':
      /*!********************************************************************************************!*\
  !*** ./src/app/shared/components/dialog-bido-customer/dialog-bido-customer.component.scss ***!
  \********************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          ':host .search-panel-container {\n  align-items: center;\n  border-bottom: 1px dashed #bdbdbd;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px; }\n  :host .search-panel-container .search-criteria-container {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    flex-wrap: wrap;\n    padding-right: 40px; }\n  :host .search-panel-container .search-criteria-container .form-group {\n      margin-right: 20px;\n      max-width: 15rem;\n      min-width: 10rem;\n      width: 20%; }\n  :host .search-panel-container .search-criteria-container .form-group:last-of-type {\n        margin-right: 0; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9nLWJpZG8tY3VzdG9tZXIvZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxhcHBcXHNoYXJlZFxcY29tcG9uZW50c1xcZGlhbG9nLWJpZG8tY3VzdG9tZXJcXGRpYWxvZy1iaWRvLWN1c3RvbWVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksbUJBQW1CO0VBQ25CLGlDQUFpQztFQUNqQyxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLG1CQUFtQixFQUFBO0VBTnZCO0lBU00sYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osZUFBZTtJQUNmLG1CQUFtQixFQUFBO0VBYnpCO01BZ0JRLGtCQUFrQjtNQUNsQixnQkFBZ0I7TUFDaEIsZ0JBQWdCO01BQ2hCLFVBQVUsRUFBQTtFQW5CbEI7UUFzQlUsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvZGlhbG9nLWJpZG8tY3VzdG9tZXIvZGlhbG9nLWJpZG8tY3VzdG9tZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgLnNlYXJjaC1wYW5lbC1jb250YWluZXIge1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgI2JkYmRiZDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuXHJcbiAgICAuc2VhcmNoLWNyaXRlcmlhLWNvbnRhaW5lciB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgIGZsZXgtZ3JvdzogMTtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xyXG5cclxuICAgICAgLmZvcm0tZ3JvdXAge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgICAgICBtYXgtd2lkdGg6IDE1cmVtO1xyXG4gICAgICAgIG1pbi13aWR0aDogMTByZW07XHJcbiAgICAgICAgd2lkdGg6IDIwJTtcclxuXHJcbiAgICAgICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0= */';

        /***/
      },

    /***/ './src/app/shared/components/dialog-bido-customer/dialog-bido-customer.component.ts':
      /*!******************************************************************************************!*\
  !*** ./src/app/shared/components/dialog-bido-customer/dialog-bido-customer.component.ts ***!
  \******************************************************************************************/
      /*! exports provided: DialogBidoCustomerComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogBidoCustomerComponent',
          function() {
            return DialogBidoCustomerComponent;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        /* harmony import */ var _enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _services_message_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _utils_table_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../utils/table-utils */ './src/app/shared/utils/table-utils.ts'
        );
        /* harmony import */ var _dialog_bido_customer_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./dialog-bido-customer.service */ './src/app/shared/components/dialog-bido-customer/dialog-bido-customer.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var DialogBidoCustomerComponent = /** @class */ (function(_super) {
          __extends(DialogBidoCustomerComponent, _super);
          function DialogBidoCustomerComponent(messageService, dialogBidoCustomerService) {
            var _this =
              _super.call(
                this,
                _enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Write,
                'DialogBidoCustomerComponent'
              ) || this;
            _this.messageService = messageService;
            _this.dialogBidoCustomerService = dialogBidoCustomerService;
            _this.displayChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.onValidated = new _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter']();
            _this.customersTable = { list: [], moreResults: false };
            _this.displayedCustomerRowNb = 0;
            _this.selectedCustomer = undefined;
            _this.initTableCols();
            return _this;
          }
          DialogBidoCustomerComponent.prototype.ngOnInit = function() {
            if (!this.searchObject) {
              this.searchObject = {};
            }
          };
          DialogBidoCustomerComponent.prototype.search = function() {
            var _this = this;
            this.dialogBidoCustomerService
              .findBidoCustomersBySearchCriteria(this.searchObject)
              .subscribe(function(result) {
                if (!!result) {
                  _this.customersTable = result;
                  _this.customersTable.list = _utils_table_utils__WEBPACK_IMPORTED_MODULE_4__[
                    'TableUtils'
                  ].removeEmptyRows(_this.customersTable.list, _this.customersTableCols);
                  _this.displayedCustomerRowNb = _this.customersTable.list.length;
                }
                _this.selectedCustomer = undefined;
              });
          };
          DialogBidoCustomerComponent.prototype.updateDisplayedCustomerRowNb = function(value) {
            this.displayedCustomerRowNb = value;
          };
          DialogBidoCustomerComponent.prototype.validate = function() {
            if (!this.selectedCustomer) {
              this.messageService.showWarningMessage(this.getTranslateKey('warningOnNoSelection'));
            } else {
              this.onValidated.emit(this.selectedCustomer);
              this.closeDialog();
            }
          };
          DialogBidoCustomerComponent.prototype.initTableCols = function() {
            this.customersTableCols = [
              { field: 'customerCode', alignment: 'left' },
              { field: 'customerName', alignment: 'left' }
            ];
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogBidoCustomerComponent.prototype,
            'searchObject',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Output'])(),
              __metadata('design:type', _angular_core__WEBPACK_IMPORTED_MODULE_0__['EventEmitter'])
            ],
            DialogBidoCustomerComponent.prototype,
            'onValidated',
            void 0
          );
          DialogBidoCustomerComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-dialog-bido-customer',
                template: __webpack_require__(
                  /*! ./dialog-bido-customer.component.html */ './src/app/shared/components/dialog-bido-customer/dialog-bido-customer.component.html'
                ),
                styles: [
                  __webpack_require__(
                    /*! ./dialog-bido-customer.component.scss */ './src/app/shared/components/dialog-bido-customer/dialog-bido-customer.component.scss'
                  )
                ]
              }),
              __metadata('design:paramtypes', [
                _services_message_service__WEBPACK_IMPORTED_MODULE_3__['MessageService'],
                _dialog_bido_customer_service__WEBPACK_IMPORTED_MODULE_5__['DialogBidoCustomerService']
              ])
            ],
            DialogBidoCustomerComponent
          );
          return DialogBidoCustomerComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_1__['DialogComponent']);

        /***/
      },

    /***/ './src/app/shared/components/dialog-bido-customer/dialog-bido-customer.module.ts':
      /*!***************************************************************************************!*\
  !*** ./src/app/shared/components/dialog-bido-customer/dialog-bido-customer.module.ts ***!
  \***************************************************************************************/
      /*! exports provided: DialogBidoCustomerModule */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogBidoCustomerModule',
          function() {
            return DialogBidoCustomerModule;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var primeng_dialog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! primeng/dialog */ './node_modules/primeng/dialog.js'
        );
        /* harmony import */ var primeng_dialog__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_dialog__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var primeng_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! primeng/table */ './node_modules/primeng/table.js'
        );
        /* harmony import */ var primeng_table__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_table__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _angular_common_shared_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../angular-common-shared.module */ './src/app/shared/angular-common-shared.module.ts'
        );
        /* harmony import */ var _angular_generic_templates_shared_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../angular-generic-templates-shared-module */ './src/app/shared/angular-generic-templates-shared-module.ts'
        );
        /* harmony import */ var _app_common_shared_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../app-common-shared.module */ './src/app/shared/app-common-shared.module.ts'
        );
        /* harmony import */ var _dialog_bido_customer_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./dialog-bido-customer.component */ './src/app/shared/components/dialog-bido-customer/dialog-bido-customer.component.ts'
        );
        /* harmony import */ var _dialog_bido_customer_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./dialog-bido-customer.service */ './src/app/shared/components/dialog-bido-customer/dialog-bido-customer.service.ts'
        );
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __read =
          (undefined && undefined.__read) ||
          function(o, n) {
            var m = typeof Symbol === 'function' && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
              r,
              ar = [],
              e;
            try {
              while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
              e = { error: error };
            } finally {
              try {
                if (r && !r.done && (m = i['return'])) m.call(i);
              } finally {
                if (e) throw e.error;
              }
            }
            return ar;
          };
        var __spread =
          (undefined && undefined.__spread) ||
          function() {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
          };

        // import { ModalModule } from '../modal/modal.module';

        /******************************************************************************
         * Modules
         *************************************************************************** */
        var EXTERNAL_MODULES = [
          primeng_dialog__WEBPACK_IMPORTED_MODULE_1__['DialogModule'],
          primeng_table__WEBPACK_IMPORTED_MODULE_2__['TableModule']
        ]; // TODO: replace DialogModule by ModalModule
        // const INTERNAL_MODULES = [ModalModule];
        /******************************************************************************
         * Components
         *************************************************************************** */
        var COMPONENTS = [_dialog_bido_customer_component__WEBPACK_IMPORTED_MODULE_6__['DialogBidoCustomerComponent']];
        /******************************************************************************
         * Services
         *************************************************************************** */
        var SERVICES = [_dialog_bido_customer_service__WEBPACK_IMPORTED_MODULE_7__['DialogBidoCustomerService']];
        var DialogBidoCustomerModule = /** @class */ (function() {
          function DialogBidoCustomerModule() {}
          DialogBidoCustomerModule = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['NgModule'])({
                declarations: __spread(COMPONENTS),
                exports: __spread(COMPONENTS),
                imports: __spread(
                  [
                    _angular_common_shared_module__WEBPACK_IMPORTED_MODULE_3__['AngularCommonSharedModule'],
                    _angular_generic_templates_shared_module__WEBPACK_IMPORTED_MODULE_4__[
                      'AngularGenericTemplatesSharedModule'
                    ],
                    _app_common_shared_module__WEBPACK_IMPORTED_MODULE_5__['AppCommonSharedModule']
                  ],
                  EXTERNAL_MODULES
                  // ...INTERNAL_MODULES
                ),
                providers: __spread(SERVICES)
              })
            ],
            DialogBidoCustomerModule
          );
          return DialogBidoCustomerModule;
        })();

        /***/
      },

    /***/ './src/app/shared/components/dialog-status/dialog-status.component.html':
      /*!******************************************************************************!*\
  !*** ./src/app/shared/components/dialog-status/dialog-status.component.html ***!
  \******************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports =
          '<a-modal class="aw-modal" [(visible)]="display">\r\n  <a-header>\r\n    <div class="modal-title">{{ getComponentName() + ".title" | translate }}</div>\r\n  </a-header>\r\n\r\n  <a-content>\r\n    <div class="form-group">\r\n      <label class="form-label">{{ getComponentName() + ".statusState" | translate }}</label>\r\n\r\n      <div class="form-control">\r\n        <p-dropdown\r\n          class="aw-dropdown fixed-width"\r\n          [options]="statusList"\r\n          [(ngModel)]="item.statusState"\r\n          [showClear]="true"\r\n          placeholder="&nbsp;"\r\n          [disabled]="!isStatusEditable"\r\n          appendTo="body"\r\n        ></p-dropdown>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="form-group">\r\n      <label class="form-label">{{ getComponentName() + ".statusDate" | translate }}</label>\r\n\r\n      <div class="form-control">\r\n        <p-calendar\r\n          showButtonBar="true"\r\n          [monthNavigator]="true"\r\n          [yearNavigator]="true"\r\n          [yearRange]="sessionService.calendarYearRange"\r\n          class="aw-calendar"\r\n          [dateFormat]="sessionService.dateFormatPrimeNG"\r\n          [locale]="sessionService.calendarFormat"\r\n          [(ngModel)]="item.statusDate"\r\n          [disabled]="true"\r\n          [showTime]="true"\r\n          appendTo="body"\r\n        ></p-calendar>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="form-group">\r\n      <label class="form-label">{{ getComponentName() + ".statusUser" | translate }}</label>\r\n\r\n      <div class="form-control">\r\n        <input class="aw-input" type="text" [(ngModel)]="item.statusUser" [disabled]="true" />\r\n      </div>\r\n    </div>\r\n  </a-content>\r\n  <a-footer>\r\n    <button type="button" mat-raised-button (click)="closeDialog()">{{ "global.close" | translate }}</button>\r\n  </a-footer>\r\n</a-modal>\r\n';

        /***/
      },

    /***/ './src/app/shared/components/dialog-status/dialog-status.component.ts':
      /*!****************************************************************************!*\
  !*** ./src/app/shared/components/dialog-status/dialog-status.component.ts ***!
  \****************************************************************************/
      /*! exports provided: DialogStatusComponent */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'DialogStatusComponent', function() {
          return DialogStatusComponent;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../../shared/types/dialog-component */ './src/app/shared/types/dialog-component.ts'
        );
        /* harmony import */ var _enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../../enums/component-open-mode.enum */ './src/app/shared/enums/component-open-mode.enum.ts'
        );
        /* harmony import */ var _services_message_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../services/message.service */ './src/app/shared/services/message.service.ts'
        );
        /* harmony import */ var _services_properties_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../services/properties.service */ './src/app/shared/services/properties.service.ts'
        );
        /* harmony import */ var _services_session_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../services/session.service */ './src/app/shared/services/session.service.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var DialogStatusComponent = /** @class */ (function(_super) {
          __extends(DialogStatusComponent, _super);
          function DialogStatusComponent(sessionService, propertiesService, messageService) {
            var _this =
              _super.call(
                this,
                _enums_component_open_mode_enum__WEBPACK_IMPORTED_MODULE_2__['ComponentOpenMode'].Write,
                'DialogStatusComponent'
              ) || this;
            _this.sessionService = sessionService;
            _this.propertiesService = propertiesService;
            _this.messageService = messageService;
            return _this;
          }
          DialogStatusComponent.prototype.ngOnInit = function() {
            this.loadStatusList();
          };
          DialogStatusComponent.prototype.close = function() {
            this.display = false;
          };
          DialogStatusComponent.prototype.loadStatusList = function() {
            var _this = this;
            var statusState = 'statusState';
            this.propertiesService
              .getObjectStatusList(
                this.isObjectTypeOfBireSbDTO,
                this.isObjectTypeOfBireEvolutionDTO,
                this.isObjectTypeOfBireMaintenancePlanDTO,
                this.item[statusState],
                this.isSapSession
              )
              .subscribe(
                function(result) {
                  _this.statusList = result;
                },
                function() {
                  _this.messageService.showErrorMessage(_this.getTranslateKey('errorOnLoadStatusList'));
                }
              );
          };
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', Object)],
            DialogStatusComponent.prototype,
            'item',
            void 0
          );
          __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])(), __metadata('design:type', String)],
            DialogStatusComponent.prototype,
            'itemId',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])('isStatusEditable'),
              __metadata('design:type', Boolean)
            ],
            DialogStatusComponent.prototype,
            'isStatusEditable',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])('isObjectTypeOfBireSbDTO'),
              __metadata('design:type', Boolean)
            ],
            DialogStatusComponent.prototype,
            'isObjectTypeOfBireSbDTO',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])('isObjectTypeOfBireEvolutionDTO'),
              __metadata('design:type', Boolean)
            ],
            DialogStatusComponent.prototype,
            'isObjectTypeOfBireEvolutionDTO',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])('isObjectTypeOfBireMaintenancePlanDTO'),
              __metadata('design:type', Boolean)
            ],
            DialogStatusComponent.prototype,
            'isObjectTypeOfBireMaintenancePlanDTO',
            void 0
          );
          __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Input'])('isSapSession'),
              __metadata('design:type', Boolean)
            ],
            DialogStatusComponent.prototype,
            'isSapSession',
            void 0
          );
          DialogStatusComponent = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Component'])({
                selector: 'aw-dialog-status',
                template: __webpack_require__(
                  /*! ./dialog-status.component.html */ './src/app/shared/components/dialog-status/dialog-status.component.html'
                )
              }),
              __metadata('design:paramtypes', [
                _services_session_service__WEBPACK_IMPORTED_MODULE_5__['SessionService'],
                _services_properties_service__WEBPACK_IMPORTED_MODULE_4__['PropertiesService'],
                _services_message_service__WEBPACK_IMPORTED_MODULE_3__['MessageService']
              ])
            ],
            DialogStatusComponent
          );
          return DialogStatusComponent;
        })(_shared_types_dialog_component__WEBPACK_IMPORTED_MODULE_1__['DialogComponent']);

        /***/
      },

    /***/ './src/app/shared/components/dialog-status/dialog-status.module.ts':
      /*!*************************************************************************!*\
  !*** ./src/app/shared/components/dialog-status/dialog-status.module.ts ***!
  \*************************************************************************/
      /*! exports provided: DialogStatusModule */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'DialogStatusModule', function() {
          return DialogStatusModule;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var primeng_calendar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! primeng/calendar */ './node_modules/primeng/calendar.js'
        );
        /* harmony import */ var primeng_calendar__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_calendar__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var primeng_dropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! primeng/dropdown */ './node_modules/primeng/dropdown.js'
        );
        /* harmony import */ var primeng_dropdown__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_dropdown__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var _angular_common_shared_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../../angular-common-shared.module */ './src/app/shared/angular-common-shared.module.ts'
        );
        /* harmony import */ var _angular_generic_templates_shared_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../angular-generic-templates-shared-module */ './src/app/shared/angular-generic-templates-shared-module.ts'
        );
        /* harmony import */ var _app_common_shared_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../app-common-shared.module */ './src/app/shared/app-common-shared.module.ts'
        );
        /* harmony import */ var _modal_modal_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../modal/modal.module */ './src/app/shared/components/modal/modal.module.ts'
        );
        /* harmony import */ var _dialog_status_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ./dialog-status.component */ './src/app/shared/components/dialog-status/dialog-status.component.ts'
        );
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __read =
          (undefined && undefined.__read) ||
          function(o, n) {
            var m = typeof Symbol === 'function' && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
              r,
              ar = [],
              e;
            try {
              while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
              e = { error: error };
            } finally {
              try {
                if (r && !r.done && (m = i['return'])) m.call(i);
              } finally {
                if (e) throw e.error;
              }
            }
            return ar;
          };
        var __spread =
          (undefined && undefined.__spread) ||
          function() {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
          };

        /******************************************************************************
         * Modules
         *************************************************************************** */
        var EXTERNAL_MODULES = [
          primeng_calendar__WEBPACK_IMPORTED_MODULE_1__['CalendarModule'],
          primeng_dropdown__WEBPACK_IMPORTED_MODULE_2__['DropdownModule']
        ];
        var INTERNAL_MODULES = [_modal_modal_module__WEBPACK_IMPORTED_MODULE_6__['ModalModule']];
        /******************************************************************************
         * Components
         *************************************************************************** */
        var COMPONENTS = [_dialog_status_component__WEBPACK_IMPORTED_MODULE_7__['DialogStatusComponent']];
        var DialogStatusModule = /** @class */ (function() {
          function DialogStatusModule() {}
          DialogStatusModule = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['NgModule'])({
                declarations: __spread(COMPONENTS),
                exports: __spread(COMPONENTS),
                imports: __spread(
                  [
                    _angular_common_shared_module__WEBPACK_IMPORTED_MODULE_3__['AngularCommonSharedModule'],
                    _angular_generic_templates_shared_module__WEBPACK_IMPORTED_MODULE_4__[
                      'AngularGenericTemplatesSharedModule'
                    ],
                    _app_common_shared_module__WEBPACK_IMPORTED_MODULE_5__['AppCommonSharedModule']
                  ],
                  EXTERNAL_MODULES,
                  INTERNAL_MODULES
                )
              })
            ],
            DialogStatusModule
          );
          return DialogStatusModule;
        })();

        /***/
      },

    /***/ './src/app/shared/components/dialog-work-package/dialog-work-package.module.ts':
      /*!*************************************************************************************!*\
  !*** ./src/app/shared/components/dialog-work-package/dialog-work-package.module.ts ***!
  \*************************************************************************************/
      /*! exports provided: DialogWorkPackageModule */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'DialogWorkPackageModule',
          function() {
            return DialogWorkPackageModule;
          }
        );
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var primeng_calendar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! primeng/calendar */ './node_modules/primeng/calendar.js'
        );
        /* harmony import */ var primeng_calendar__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_calendar__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var primeng_dropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! primeng/dropdown */ './node_modules/primeng/dropdown.js'
        );
        /* harmony import */ var primeng_dropdown__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_dropdown__WEBPACK_IMPORTED_MODULE_2__
        );
        /* harmony import */ var primeng_inputtextarea__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! primeng/inputtextarea */ './node_modules/primeng/inputtextarea.js'
        );
        /* harmony import */ var primeng_inputtextarea__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          primeng_inputtextarea__WEBPACK_IMPORTED_MODULE_3__
        );
        /* harmony import */ var _angular_common_shared_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../../angular-common-shared.module */ './src/app/shared/angular-common-shared.module.ts'
        );
        /* harmony import */ var _angular_generic_templates_shared_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../../angular-generic-templates-shared-module */ './src/app/shared/angular-generic-templates-shared-module.ts'
        );
        /* harmony import */ var _app_common_shared_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../../app-common-shared.module */ './src/app/shared/app-common-shared.module.ts'
        );
        /* harmony import */ var _modal_modal_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../modal/modal.module */ './src/app/shared/components/modal/modal.module.ts'
        );
        /* harmony import */ var _dialog_work_package_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./dialog-work-package.component */ './src/app/shared/components/dialog-work-package/dialog-work-package.component.ts'
        );
        /* harmony import */ var _dialog_work_package_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ./dialog-work-package.service */ './src/app/shared/components/dialog-work-package/dialog-work-package.service.ts'
        );
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __read =
          (undefined && undefined.__read) ||
          function(o, n) {
            var m = typeof Symbol === 'function' && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
              r,
              ar = [],
              e;
            try {
              while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
              e = { error: error };
            } finally {
              try {
                if (r && !r.done && (m = i['return'])) m.call(i);
              } finally {
                if (e) throw e.error;
              }
            }
            return ar;
          };
        var __spread =
          (undefined && undefined.__spread) ||
          function() {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
          };

        /******************************************************************************
         * Modules
         *************************************************************************** */
        var EXTERNAL_MODULES = [
          primeng_calendar__WEBPACK_IMPORTED_MODULE_1__['CalendarModule'],
          primeng_dropdown__WEBPACK_IMPORTED_MODULE_2__['DropdownModule'],
          primeng_inputtextarea__WEBPACK_IMPORTED_MODULE_3__['InputTextareaModule']
        ];
        var INTERNAL_MODULES = [_modal_modal_module__WEBPACK_IMPORTED_MODULE_7__['ModalModule']];
        /******************************************************************************
         * Components
         *************************************************************************** */
        var COMPONENTS = [_dialog_work_package_component__WEBPACK_IMPORTED_MODULE_8__['DialogWorkPackageComponent']];
        /******************************************************************************
         * Services
         *************************************************************************** */
        var SERVICES = [_dialog_work_package_service__WEBPACK_IMPORTED_MODULE_9__['DialogWorkPackageService']];
        var DialogWorkPackageModule = /** @class */ (function() {
          function DialogWorkPackageModule() {}
          DialogWorkPackageModule = __decorate(
            [
              Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['NgModule'])({
                declarations: __spread(COMPONENTS),
                exports: __spread(COMPONENTS),
                imports: __spread(
                  [
                    _angular_common_shared_module__WEBPACK_IMPORTED_MODULE_4__['AngularCommonSharedModule'],
                    _angular_generic_templates_shared_module__WEBPACK_IMPORTED_MODULE_5__[
                      'AngularGenericTemplatesSharedModule'
                    ],
                    _app_common_shared_module__WEBPACK_IMPORTED_MODULE_6__['AppCommonSharedModule']
                  ],
                  EXTERNAL_MODULES,
                  INTERNAL_MODULES
                ),
                providers: __spread(SERVICES)
              })
            ],
            DialogWorkPackageModule
          );
          return DialogWorkPackageModule;
        })();

        /***/
      },

    /***/ './src/app/shared/constants/bire-measure-reference-constants.ts':
      /*!**********************************************************************!*\
  !*** ./src/app/shared/constants/bire-measure-reference-constants.ts ***!
  \**********************************************************************/
      /*! exports provided: BireMeasureReferenceConstants */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'BireMeasureReferenceConstants',
          function() {
            return BireMeasureReferenceConstants;
          }
        );
        var BireMeasureReferenceConstants = /** @class */ (function() {
          function BireMeasureReferenceConstants() {}
          // Calendar Limit
          BireMeasureReferenceConstants.BIRE_MEASURE_REFERENCE_COUNTER_CODE_CALENDAR_LIMIT = 'CAL';
          // References for Maintenance Program
          BireMeasureReferenceConstants.BIRE_MEASURE_REFERENCE_COUNTER_CODE_PRE_FLIGHT = 'BF';
          BireMeasureReferenceConstants.BIRE_MEASURE_REFERENCE_COUNTER_CODE_POST_FLIGHT = 'AF';
          BireMeasureReferenceConstants.BIRE_MEASURE_REFERENCE_COUNTER_CODE_DAILY = 'DAILY';
          BireMeasureReferenceConstants.BIRE_MEASURE_REFERENCE_COUNTER_CODE_TSN = 'TSN';
          return BireMeasureReferenceConstants;
        })();

        /***/
      },

    /***/ './src/app/shared/constants/dassaut/bido-measure-constants.ts':
      /*!********************************************************************!*\
  !*** ./src/app/shared/constants/dassaut/bido-measure-constants.ts ***!
  \********************************************************************/
      /*! exports provided: BidoMeasureConsants */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'BidoMeasureConsants', function() {
          return BidoMeasureConsants;
        });
        var BidoMeasureConsants = /** @class */ (function() {
          function BidoMeasureConsants() {}
          // Does measure come from HUMS
          BidoMeasureConsants.isHumsSource = function(source) {
            return !!source && source.startsWith(BidoMeasureConsants.SOURCE_HUMS);
          };
          BidoMeasureConsants.isEdmsSource = function(source) {
            return !!source && source.startsWith(BidoMeasureConsants.SOURCE_EDMS);
          };
          BidoMeasureConsants.isFromExternalSources = function(source) {
            return BidoMeasureConsants.isEdmsSource(source) || BidoMeasureConsants.isHumsSource(source);
          };
          BidoMeasureConsants.SOURCE_HUMS = 'HUMS';
          BidoMeasureConsants.SOURCE_EDMS = 'EDMS';
          return BidoMeasureConsants;
        })();

        /***/
      },

    /***/ './src/app/shared/constants/search-criteria.constants.ts':
      /*!***************************************************************!*\
  !*** ./src/app/shared/constants/search-criteria.constants.ts ***!
  \***************************************************************/
      /*! exports provided: SearchCriteriaConstants */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'SearchCriteriaConstants',
          function() {
            return SearchCriteriaConstants;
          }
        );
        var SearchCriteriaConstants = /** @class */ (function() {
          function SearchCriteriaConstants() {}
          SearchCriteriaConstants.SB_AD = '001';
          SearchCriteriaConstants.DATE_AFTER_KEY = 'AFTER';
          SearchCriteriaConstants.DATE_BEFORE_KEY = 'BEFORE';
          SearchCriteriaConstants.DATE_AT_KEY = 'AT';
          return SearchCriteriaConstants;
        })();

        /***/
      },

    /***/ './src/app/shared/types/api-types/mail.api.ts':
      /*!****************************************************!*\
  !*** ./src/app/shared/types/api-types/mail.api.ts ***!
  \****************************************************/
      /*! exports provided: MailApi */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'MailApi', function() {
          return MailApi;
        });
        /* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @angular/core */ './node_modules/@angular/core/fesm5/core.js'
        );
        /* harmony import */ var _api_abstract_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../api/abstract.api */ './src/app/shared/api/abstract.api.ts'
        );
        var __extends =
          (undefined && undefined.__extends) ||
          (function() {
            var extendStatics = function(d, b) {
              extendStatics =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(d, b) {
                    d.__proto__ = b;
                  }) ||
                function(d, b) {
                  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
              return extendStatics(d, b);
            };
            return function(d, b) {
              extendStatics(d, b);
              function __() {
                this.constructor = d;
              }
              d.prototype = b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
            };
          })();
        var __decorate =
          (undefined && undefined.__decorate) ||
          function(decorators, target, key, desc) {
            var c = arguments.length,
              r = c < 3 ? target : desc === null ? (desc = Object.getOwnPropertyDescriptor(target, key)) : desc,
              d;
            if (typeof Reflect === 'object' && typeof Reflect.decorate === 'function')
              r = Reflect.decorate(decorators, target, key, desc);
            else
              for (var i = decorators.length - 1; i >= 0; i--)
                if ((d = decorators[i])) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
          };
        var __metadata =
          (undefined && undefined.__metadata) ||
          function(k, v) {
            if (typeof Reflect === 'object' && typeof Reflect.metadata === 'function') return Reflect.metadata(k, v);
          };

        var MailApi = /** @class */ (function(_super) {
          __extends(MailApi, _super);
          // public readonly sendBidoFmdToContacts: string = super.appendToBaseUrl('/send_bido_fmd_to_contacts');
          // public readonly sendBireAdSbToContacts: string = super.appendToBaseUrl('/send_bire_ad_sb_to_contacts');
          // public readonly sendMaintenanceNotificationToContacts: string = super.appendToBaseUrl('/send_maintenance_notification_to_contacts');
          // public readonly sendMaintenanceNotificationToContacts: string = super.appendToBaseUrl('/send_maintenance_notification_to_contacts');
          // public readonly sendBidoMissionEquipmentToContacts: string = super.appendToBaseUrl('/send_bido_mission_equipment_to_contacts');
          // public readonly sendMail: string = super.appendToBaseUrl('/send_mail');
          // public readonly sendMail: string = super.appendToBaseUrl('/send_mail');
          function MailApi() {
            var _this = _super.call(this, MailApi_1.baseUrl) || this;
            // public readonly setUserExits: string = super.appendToBaseUrl('/set_user_exits');
            // public readonly sendEventNotificationToContacts: string = super.appendToBaseUrl('/send_event_notification_to_contacts');
            _this.sendEventNotificationToContacts = _super.prototype.appendToBaseUrl.call(
              _this,
              '/send_event_notification_to_contacts'
            );
            _this.sendEventNotificationToContactsAlternate = _super.prototype.appendToBaseUrl.call(
              _this,
              '/send_event_notification_to_contacts_alternative'
            );
            return _this;
          }
          MailApi_1 = MailApi;
          var MailApi_1;
          MailApi.baseUrl = '/mail';
          MailApi = MailApi_1 = __decorate(
            [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__['Injectable'])(), __metadata('design:paramtypes', [])],
            MailApi
          );
          return MailApi;
        })(_api_abstract_api__WEBPACK_IMPORTED_MODULE_1__['AbstractApi']);

        /***/
      },

    /***/ './src/app/shared/utils/array-utils.ts':
      /*!*********************************************!*\
  !*** ./src/app/shared/utils/array-utils.ts ***!
  \*********************************************/
      /*! exports provided: ArrayUtils */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'ArrayUtils', function() {
          return ArrayUtils;
        });
        var ArrayUtils = /** @class */ (function() {
          function ArrayUtils() {}
          ArrayUtils.compareValues = function(key, order) {
            if (order === void 0) {
              order = 'asc';
            }
            return function(a, b) {
              if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {
                // property doesn't exist on either object
                return 0;
              }
              var varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key];
              var varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key];
              var comparison = 0;
              if (varA > varB) {
                comparison = 1;
              } else if (varA < varB) {
                comparison = -1;
              }
              return order === 'desc' ? comparison * -1 : comparison;
            };
          };
          return ArrayUtils;
        })();

        /***/
      },

    /***/ './src/app/shared/utils/bire-attribute-value-utils.ts':
      /*!************************************************************!*\
  !*** ./src/app/shared/utils/bire-attribute-value-utils.ts ***!
  \************************************************************/
      /*! exports provided: BireAttributeValueUtils */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'BireAttributeValueUtils',
          function() {
            return BireAttributeValueUtils;
          }
        );
        var BireAttributeValueUtils = /** @class */ (function() {
          function BireAttributeValueUtils() {}
          BireAttributeValueUtils.DD_DELAY_CATEGORY_A = 'A';
          BireAttributeValueUtils.DD_DELAY_CATEGORY_B = 'B';
          BireAttributeValueUtils.DD_DELAY_CATEGORY_C = 'C';
          BireAttributeValueUtils.DD_DELAY_CATEGORY_D = 'D';
          BireAttributeValueUtils.DD_DELAY_VALUE_IN_DAYS_FOR_CATEGORY_B = '3';
          BireAttributeValueUtils.DD_DELAY_VALUE_IN_DAYS_FOR_CATEGORY_C = '10';
          BireAttributeValueUtils.DD_DELAY_VALUE_IN_DAYS_FOR_CATEGORY_D = '120';
          return BireAttributeValueUtils;
        })();

        /***/
      }
  }
]);
//# sourceMappingURL=fleet-management-fleet-management-module.js.map
