{"version":3,"sources":["webpack:///./node_modules/primeng/fileupload.js","webpack:///./src/app/main/human-resources/employee-form/popups/document-popup-form/document-popup-form.component.html","webpack:///./src/app/main/human-resources/employee-form/popups/document-popup-form/document-popup-form.component.ts","webpack:///./src/app/main/human-resources/employee-form/popups/document-popup-form/document-popup-form.module.ts","webpack:///./src/app/main/human-resources/employee-form/popups/document-url-popup-form/document-url-popup-form.component.html","webpack:///./src/app/main/human-resources/employee-form/popups/document-url-popup-form/document-url-popup-form.component.ts","webpack:///./src/app/main/human-resources/employee-form/popups/document-url-popup-form/document-url-popup-form.module.ts"],"names":[],"mappings":"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","file":"default~human-resources-human-resources-module~modules-purchase-contract-components-purchase-contrac~ca121a93.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentId + \\\".documentName\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"document.documentName\\\" [disabled]=\\\"isReadOnlyForm\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentId + \\\".type\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [(ngModel)]=\\\"document.documentCategory\\\"\\r\\n              [options]=\\\"documentCategories\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group general-field\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentId + \\\".documentDescription\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <textarea\\r\\n              class=\\\"aw-textarea\\\"\\r\\n              [rows]=\\\"3\\\"\\r\\n              pInputTextarea\\r\\n              [(ngModel)]=\\\"document.documentDescription\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              maxlength=\\\"300\\\"\\r\\n            ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" color=\\\"primary\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { CatalogPropertiesTableDTO } from '../../../../../shared/types/api-output-types/administration-catalog/catalog-properties-table-dto.interface';\r\nimport { BidtDocumentDTO } from '../../../../../shared/types/api-types/bidt-document-dto.interface';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { EmployeeFormService } from '../../employee-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-document-popup-form',\r\n  templateUrl: './document-popup-form.component.html'\r\n})\r\nexport class DocumentPopupFormComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n  @Input()\r\n  public document: BidtDocumentDTO;\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtDocumentDTO>;\r\n\r\n  private readonly documentCategoryId = 120;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public displayValue: boolean;\r\n  public types: LabelValue<string>[];\r\n  public documentCategories: SelectItem[];\r\n\r\n  public constructor(private readonly employeeFormService: EmployeeFormService) {\r\n    this.componentId = 'DocumentPopupFormComponent';\r\n\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidtDocumentDTO>();\r\n\r\n    this.loadCategories();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (!this.document) {\r\n      this.document = {};\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.document);\r\n    this.display = false;\r\n  }\r\n\r\n  private loadCategories(): void {\r\n    this.employeeFormService\r\n      .findDocumentCategories(this.documentCategoryId)\r\n      .subscribe((data: CatalogPropertiesTableDTO[]) => {\r\n        this.documentCategories = [];\r\n        data.forEach((elem: CatalogPropertiesTableDTO) => {\r\n          this.documentCategories.push({ label: elem.enPropertiesValue, value: elem.propertiesKey });\r\n        });\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { TableModule } from 'primeng/table';\r\n\r\nimport { AngularCommonSharedModule } from '../../../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../../../shared/app-common-shared.module';\r\nimport { ModalModule } from '../../../../../shared/components/modal/modal.module';\r\nimport { EmployeeFormService } from '../../employee-form.service';\r\n\r\nimport { DocumentPopupFormComponent } from './document-popup-form.component';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [DropdownModule, TableModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DocumentPopupFormComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [EmployeeFormService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class DocumentPopupFormModule {}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentId + \\\".documentName\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"document.documentName\\\" [disabled]=\\\"isReadOnlyForm\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group general-field required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentId + \\\".documentUrl\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <textarea\\r\\n              class=\\\"aw-textarea\\\"\\r\\n              [rows]=\\\"3\\\"\\r\\n              pInputTextarea\\r\\n              [(ngModel)]=\\\"document.documentSource\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              maxlength=\\\"300\\\"\\r\\n            ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" color=\\\"primary\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { CatalogPropertiesTableDTO } from '../../../../../shared/types/api-output-types/administration-catalog/catalog-properties-table-dto.interface';\r\nimport { BidtDocumentDTO } from '../../../../../shared/types/api-types/bidt-document-dto.interface';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { EmployeeFormService } from '../../employee-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-document-url-popup-form',\r\n  templateUrl: './document-url-popup-form.component.html'\r\n})\r\nexport class DocumentUrlPopupFormComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n  @Input()\r\n  public document: BidtDocumentDTO;\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtDocumentDTO>;\r\n\r\n  private readonly documentCategoryId = 120;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public displayValue: boolean;\r\n  public types: LabelValue<string>[];\r\n  public documentCategories: SelectItem[];\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    private readonly employeeFormService: EmployeeFormService\r\n  ) {\r\n    this.componentId = 'DocumentUrlPopupFormComponent';\r\n\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidtDocumentDTO>();\r\n\r\n    this.loadCategories();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (!this.document) {\r\n      this.document = {};\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public checkValidation(): boolean {\r\n    let isPageValid = false;\r\n    if (!!this.document.documentName && !!this.document.documentSource) {\r\n      isPageValid = true;\r\n    }\r\n\r\n    return isPageValid;\r\n  }\r\n\r\n  public validate(): void {\r\n    if (!this.checkValidation()) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n\r\n      return;\r\n    }\r\n    if (!this.document.id) {\r\n      this.document.documentPublicationDate = new Date();\r\n    }\r\n    this.onValidated.emit(this.document);\r\n    this.display = false;\r\n  }\r\n\r\n  private loadCategories(): void {\r\n    this.employeeFormService\r\n      .findDocumentCategories(this.documentCategoryId)\r\n      .subscribe((data: CatalogPropertiesTableDTO[]) => {\r\n        this.documentCategories = [];\r\n        data.forEach((elem: CatalogPropertiesTableDTO) => {\r\n          this.documentCategories.push({ label: elem.enPropertiesValue, value: elem.propertiesKey });\r\n        });\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { TableModule } from 'primeng/table';\r\n\r\nimport { AngularCommonSharedModule } from '../../../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../../../shared/app-common-shared.module';\r\nimport { ModalModule } from '../../../../../shared/components/modal/modal.module';\r\nimport { EmployeeFormService } from '../../employee-form.service';\r\n\r\nimport { DocumentUrlPopupFormComponent } from './document-url-popup-form.component';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [DropdownModule, TableModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DocumentUrlPopupFormComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [EmployeeFormService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class DocumentUrlPopupFormModule {}\r\n"],"sourceRoot":""}