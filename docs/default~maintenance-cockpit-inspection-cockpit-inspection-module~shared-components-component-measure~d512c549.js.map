{"version":3,"sources":["webpack:///./node_modules/primeng/chart.js","webpack:///./src/app/shared/components/component-measure/component-measure.component.html","webpack:///./src/app/shared/components/component-measure/component-measure.component.scss","webpack:///./src/app/shared/components/component-measure/component-measure.component.ts","webpack:///./src/app/shared/components/component-measure/component-measure.module.ts","webpack:///./src/app/shared/components/component-measure/component-measure.service.ts"],"names":[],"mappings":"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","file":"default~maintenance-cockpit-inspection-cockpit-inspection-module~shared-components-component-measure~d512c549.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/chart/chart\"));","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ getComponentName() + \\\".measureOfEquipment\\\" | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">\\r\\n          <span *ngIf=\\\"!!bidoEquipmentDTO\\\"> - P/N {{ bidoEquipmentDTO.pnCode }}</span>\\r\\n          <span *ngIf=\\\"!!bidoEquipmentDTO.sn\\\"> | S/N {{ bidoEquipmentDTO.sn }} </span>\\r\\n          <span *ngIf=\\\"!!equipment && !!equipment.bidoEquipmentDTO\\\">\\r\\n            | {{ equipment.bidoEquipmentDTO.equipmentDesignation }}</span\\r\\n          >\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button type=\\\"button\\\" mat-menu-item (click)=\\\"refresh()\\\">\\r\\n        {{ \\\"global.refresh\\\" | translate }}\\r\\n      </button>\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container grid-cell-scope  custom-height\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container  loading-indicator\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n                  ({{ bidoMeasuresDisplayed ? bidoMeasuresDisplayed.length : 0 }})\\r\\n                  <div *ngIf=\\\"isLoadingMeasureTable\\\" class=\\\"lds-hourglass\\\"></div>\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Chart -->\\r\\n            <div class=\\\"grid-cell-content\\\" *ngIf=\\\"showMeasureChart\\\">\\r\\n              <div class=\\\"grid-cell-chart custom-width\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container loading-indicator\\\">\\r\\n                    <div class=\\\"grid-cell-title\\\">\\r\\n                      <div *ngIf=\\\"isLoadingMeasureTable\\\" class=\\\"lds-hourglass\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group flex--2\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ tsnLabel }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input tsn\\\" [(ngModel)]=\\\"tsn\\\" [disabled]=\\\"true\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group flex--2\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ csnLabel }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input csn\\\" [(ngModel)]=\\\"csn\\\" [disabled]=\\\"true\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group flex--2\\\">\\r\\n                    <p-selectButton\\r\\n                      [options]=\\\"measureTypes\\\"\\r\\n                      [(ngModel)]=\\\"selectedMeasureType\\\"\\r\\n                      (onChange)=\\\"setMeasureChartData()\\\"\\r\\n                    ></p-selectButton>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group flex--2\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ getComponentName() + \\\".from\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-calendar\\r\\n                        showButtonBar=\\\"true\\\"\\r\\n                        [monthNavigator]=\\\"true\\\"\\r\\n                        [yearNavigator]=\\\"true\\\"\\r\\n                        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                        class=\\\"aw-calendar\\\"\\r\\n                        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                        [(ngModel)]=\\\"startDate\\\"\\r\\n                        (onSelect)=\\\"setMeasureChartData()\\\"\\r\\n                        (onInput)=\\\"setMeasureChartData()\\\"\\r\\n                      ></p-calendar>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group flex--2\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ getComponentName() + \\\".to\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-calendar\\r\\n                        showButtonBar=\\\"true\\\"\\r\\n                        [monthNavigator]=\\\"true\\\"\\r\\n                        [yearNavigator]=\\\"true\\\"\\r\\n                        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                        class=\\\"aw-calendar\\\"\\r\\n                        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                        [(ngModel)]=\\\"endDate\\\"\\r\\n                        (onSelect)=\\\"setMeasureChartData()\\\"\\r\\n                        (onInput)=\\\"setMeasureChartData()\\\"\\r\\n                      ></p-calendar>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row flex-row--justify-center\\\">\\r\\n                  <div class=\\\"chart-container flex--1\\\">\\r\\n                    <div class=\\\"chart-wrapper custom-width custom-height\\\">\\r\\n                      <p-chart\\r\\n                        type=\\\"line\\\"\\r\\n                        [data]=\\\"measureVariationData\\\"\\r\\n                        [options]=\\\"measureChartOptions\\\"\\r\\n                        width=\\\"100%\\\"\\r\\n                        height=\\\"100%\\\"\\r\\n                      ></p-chart>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Table -->\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">{{ getComponentName() + \\\".results\\\" | translate }}</h4>\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <p-table\\r\\n                    #ptableMeasures\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"measuresTableCols\\\"\\r\\n                    [value]=\\\"bidoMeasuresDisplayed\\\"\\r\\n                    [(selection)]=\\\"selectedMeasure\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                    [paginator]=\\\"true\\\"\\r\\n                    [rows]=\\\"TABLE_PAGINATION_DEFAULT_ROWS\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoadingMeasureTable\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoadingMeasureTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedMeasure.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableMeasuresGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableMeasures.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ getComponentName() + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngSwitch]=\\\"col.field\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                        >\\r\\n                          <span *ngSwitchCase=\\\"'counterCode'\\\">\\r\\n                            <span>\\r\\n                              {{ rowData[col.field] }}\\r\\n                            </span>\\r\\n                          </span>\\r\\n                          <span\\r\\n                            class=\\\"custom-padding\\\"\\r\\n                            *ngSwitchCase=\\\"'remainingValue'\\\"\\r\\n                            [style.background-color]=\\\"getAlertIcon(rowData)\\\"\\r\\n                            pTooltip=\\\"{{ getAlertIconTooltip(rowData) }}\\\"\\r\\n                          >\\r\\n                            {{ rowData[col.field] }}\\r\\n                          </span>\\r\\n                          <span *ngSwitchDefault>\\r\\n                            {{ rowData[col.field] }}\\r\\n                          </span>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".red {\\n  background-color: #a82525 !important; }\\n\\n.green {\\n  background-color: #4caf50 !important; }\\n\\n.yellow {\\n  background-color: #ffc107 !important; }\\n\\n.green,\\n.red,\\n.yellow {\\n  padding: 0.5em !important;\\n  color: #fff !important; }\\n\\n.custom-padding {\\n  padding: 0.5em !important; }\\n\\n.custom-width {\\n  width: 100% !important; }\\n\\n.custom-height {\\n  height: 17rem !important; }\\n\\n.tsn {\\n  color: #d3c632; }\\n\\n.cns {\\n  color: #42a5f5; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvY29tcG9uZW50LW1lYXN1cmUvZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxhcHBcXHNoYXJlZFxcY29tcG9uZW50c1xcY29tcG9uZW50LW1lYXN1cmVcXGNvbXBvbmVudC1tZWFzdXJlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0Usb0NBQXVDLEVBQUE7O0FBR3pDO0VBQ0Usb0NBQTBDLEVBQUE7O0FBRzVDO0VBQ0Usb0NBQW9DLEVBQUE7O0FBR3RDOzs7RUFHRSx5QkFBeUI7RUFDekIsc0JBQXNCLEVBQUE7O0FBR3hCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRzNCO0VBQ0Usc0JBQXNCLEVBQUE7O0FBR3hCO0VBQ0Usd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UsY0FBYyxFQUFBOztBQUdoQjtFQUNFLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2NvbXBvbmVudC1tZWFzdXJlL2NvbXBvbmVudC1tZWFzdXJlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcImNvbnN0YW50c1wiO1xyXG5cclxuLnJlZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJHJlZC1kYXJrMSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uZ3JlZW4ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRncmVlbi1saWdodDEgIWltcG9ydGFudDtcclxufVxyXG5cclxuLnllbGxvdyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJG9yYW5nZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uZ3JlZW4sXHJcbi5yZWQsXHJcbi55ZWxsb3cge1xyXG4gIHBhZGRpbmc6IDAuNWVtICFpbXBvcnRhbnQ7XHJcbiAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmN1c3RvbS1wYWRkaW5nIHtcclxuICBwYWRkaW5nOiAwLjVlbSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uY3VzdG9tLXdpZHRoIHtcclxuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uY3VzdG9tLWhlaWdodCB7XHJcbiAgaGVpZ2h0OiAxN3JlbSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4udHNuIHtcclxuICBjb2xvcjogI2QzYzYzMjtcclxufVxyXG5cclxuLmNucyB7XHJcbiAgY29sb3I6ICM0MmE1ZjU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { AppConstants } from '../../constants/app-constants';\r\nimport { ComponentConstants } from '../../constants/component-constants';\r\nimport { ControlConfigConstants } from '../../constants/control-config-constants';\r\nimport { ComponentOpenMode } from '../../enums/component-open-mode.enum';\r\nimport { DateService } from '../../services/date.service';\r\nimport { FavoriteService } from '../../services/favorite.service';\r\nimport { LoaderService } from '../../services/loader.service';\r\nimport { MessageService } from '../../services/message.service';\r\nimport { SerializationService } from '../../services/serialization.service';\r\nimport { TabService } from '../../services/tab.service';\r\nimport { AssetInputDto } from '../../types/api-input-types/fleet-management/asset-input-dto.interface';\r\nimport { AssetOutputDto } from '../../types/api-output-types/fleet-management/asset-output-dto.interface';\r\nimport { FindBidoCounterReferencesByEquipmentCodeOutput } from '../../types/api-output-types/fleet-management/find-bido-counter-references-by-equipment-code-output';\r\nimport { FindBidoMeasuresByEquipmentAndCounterCodesOutput } from '../../types/api-output-types/fleet-management/find_bido-measures-by-equipment-and-counter-codes-output';\r\nimport { BidoEquipmentCounterDTOId } from '../../types/api-types/bido-equipment-counter-dto-id.interface';\r\nimport { BidoEquipmentDTO } from '../../types/api-types/bido-equipment-dto.interface';\r\nimport { BireMeasureReferenceDTO } from '../../types/api-types/bire-measure-reference-dto.interface';\r\nimport { PageComponent } from '../../types/page-component';\r\nimport { PageComponentData } from '../../types/page-component-data.interface';\r\nimport { PopupEntry } from '../../types/popup-entry.interface';\r\nimport { TableColumn } from '../../types/table-column.interface';\r\n\r\nimport { ComponentMeasureService } from './component-measure.service';\r\n\r\ninterface MeasureDataRow {\r\n  counterCode?: string;\r\n  cumulatedCounterValue?: string;\r\n  counterUnit?: string;\r\n  ratingText?: string;\r\n  ratingCounterValue?: string;\r\n  remainingValue?: string;\r\n  referenceValue?: string;\r\n  readingDate?: string;\r\n  source?: string;\r\n  dateLimit?: string;\r\n  _obj: FindBidoCounterReferencesByEquipmentCodeOutput;\r\n}\r\n\r\ninterface XYData {\r\n  x: Date;\r\n  y: number;\r\n}\r\n\r\ninterface XYChartType {\r\n  datasets: {\r\n    data: XYData[];\r\n    label: string;\r\n    backgroundColor: string;\r\n    borderColor: string;\r\n    hoverBackgroundColor: string;\r\n    fill: boolean;\r\n  }[];\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-component-measure',\r\n  templateUrl: './component-measure.component.html',\r\n  styleUrls: ['./component-measure.component.scss']\r\n})\r\nexport class ComponentMeasureComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public static readonly COLOR_TSN: string = '#D3C632';\r\n  public static readonly COLOR_CSN: string = '#42A5F5';\r\n\r\n  public TABLE_PAGINATION_DEFAULT_ROWS: number = AppConstants.TABLE_PAGINATION_DEFAULT_ROWS;\r\n\r\n  public equipmentCode: string;\r\n  public bidoEquipmentDTO: BidoEquipmentDTO;\r\n  public measuresTableCols: TableColumn[];\r\n  public bidoMeasuresDisplayed: MeasureDataRow[];\r\n  public selectedMeasure: MeasureDataRow[];\r\n  public dataMeasure: PopupEntry<FindBidoCounterReferencesByEquipmentCodeOutput>;\r\n  public measureTableFilteredRowsNb: number;\r\n  public currentMeasure: FindBidoCounterReferencesByEquipmentCodeOutput;\r\n\r\n  public csnLabel: string;\r\n  public tsnLabel: string;\r\n\r\n  public startDate: Date;\r\n  public endDate: Date;\r\n  public tsn: string | undefined;\r\n  public csn: string | undefined;\r\n  public measureVariationData: XYChartType;\r\n  public measureChartOptions: unknown;\r\n  public usageChartOptions: unknown;\r\n  public measureTypes: SelectItem[];\r\n  public selectedMeasureType: string | undefined;\r\n  private measureChartDataObj: FindBidoMeasuresByEquipmentAndCounterCodesOutput[][];\r\n  public showMeasureChart: boolean;\r\n  public isLoadingMeasureTable: boolean;\r\n  private counterMap: Map<string, BireMeasureReferenceDTO>;\r\n  private followedInRatingVisibility: boolean;\r\n  public equipment: AssetOutputDto;\r\n\r\n  public isAircraft: boolean;\r\n  public isTool: boolean;\r\n  public showLimitPopup: boolean;\r\n  public showMeasurePopup: boolean;\r\n\r\n  public showMeasureReportText: boolean;\r\n  public measureReportText: string;\r\n  public isReadOnlyMeasureUpdateDialog: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly dateService: DateService,\r\n    private readonly componentMeasureService: ComponentMeasureService,\r\n    private readonly translateService: TranslateService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.bidoEquipmentDTO = {};\r\n    this.selectedMeasure = [];\r\n    this.measureChartDataObj = [];\r\n    this.equipment = {\r\n      bidoEquipmentDTO: {},\r\n      measureTableDtos: [],\r\n      bidoDocumentationTableOutputDTOs: [],\r\n      stockOutputDto: {},\r\n      superiorAsset: {},\r\n      usageCounterCalculationDTO: {},\r\n      saveUsageEquipment: {\r\n        updateBidoEquipmentUsageDTOList: []\r\n      }\r\n    };\r\n\r\n    this.init();\r\n  }\r\n\r\n  private init() {\r\n    this.bidoEquipmentDTO = !!this.componentData.objectId\r\n      ? this.serializationService.deserialize(this.componentData.objectId)\r\n      : undefined;\r\n\r\n    const context = !!this.bidoEquipmentDTO.sn\r\n      ? `P/N ${this.bidoEquipmentDTO.pnCode} | S/N ${this.bidoEquipmentDTO.sn}`\r\n      : `P/N ${this.bidoEquipmentDTO.pnCode}`;\r\n    this.displayComponentContext(context, this.isCreateOpenMode);\r\n\r\n    this.componentMeasureService.findFirstBidoEquipmentsByPnAndSnCodes(this.bidoEquipmentDTO).subscribe((res) => {\r\n      if (!!res) {\r\n        this.equipmentCode = res.equipmentCode as string;\r\n      }\r\n      this.setMeasureChartOptions();\r\n      this.getBidoEquipment();\r\n    });\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.MAI_MEASURE_COMPONENT;\r\n  }\r\n\r\n  public refresh() {\r\n    this.init();\r\n  }\r\n\r\n  private getBidoEquipment() {\r\n    const assetId: AssetInputDto = {\r\n      bidoEquipmentDTOId: {\r\n        equipmentCode: this.equipmentCode as string\r\n      },\r\n      assetfunction: ' '\r\n    };\r\n    this.componentMeasureService.findBidoEquipmentAlternative(assetId).subscribe((result) => {\r\n      if (result) {\r\n        this.equipment = { ...result };\r\n        this.getMeasureTabData();\r\n      }\r\n    });\r\n  }\r\n\r\n  private getMeasureTabData(): void {\r\n    this.equipment.measureTableDtos = [];\r\n    this.componentMeasureService.getMeasureTabData(this.equipment.bidoEquipmentDTO).subscribe((result) => {\r\n      if (result) {\r\n        this.equipment.measureTableDtos = result;\r\n        this.loadMeasureChartData();\r\n      }\r\n    });\r\n  }\r\n\r\n  private transformMeasures(listMeasures: FindBidoCounterReferencesByEquipmentCodeOutput[]) {\r\n    return listMeasures.map((obj) => {\r\n      const measureDataRow: MeasureDataRow = {\r\n        _obj: obj,\r\n        counterCode: obj.counterCode,\r\n        counterUnit: obj.counterUnit,\r\n        cumulatedCounterValue: obj.cumulatedCounterValue,\r\n        ratingCounterValue: obj.ratingCounterValue,\r\n        ratingText: obj.ratingText,\r\n        readingDate: this.dateService.dateWithHourToString(obj.counterDate),\r\n        referenceValue: obj.referenceValue,\r\n        remainingValue: obj.remainingValue,\r\n        dateLimit: this.dateService.dateToString(obj.dateLimit),\r\n        source: obj.source\r\n      };\r\n\r\n      return measureDataRow;\r\n    });\r\n  }\r\n\r\n  public loadMeasureChartData(): void {\r\n    this.isLoadingMeasureTable = true;\r\n    this.counterMap = new Map<string, BireMeasureReferenceDTO>();\r\n    this.componentMeasureService\r\n      .findAllBireMeasureReferences()\r\n      .pipe(finalize(() => (this.isLoadingMeasureTable = false)))\r\n      .subscribe((list) => {\r\n        list.forEach((element) => {\r\n          if (element.counterCode) {\r\n            this.counterMap.set(element.counterCode, element);\r\n          }\r\n        });\r\n        this.setTableDynamicHeaders();\r\n        // Load measure table here with dynamic columns\r\n        this.bidoMeasuresDisplayed = this.transformMeasures(this.equipment.measureTableDtos || []);\r\n        this.showMeasureChart = false;\r\n\r\n        if (this.bidoMeasuresDisplayed.length > 0) {\r\n          const observables: Observable<FindBidoMeasuresByEquipmentAndCounterCodesOutput[]>[] = [];\r\n          const setUpCounters: string[] = [];\r\n          this.bidoMeasuresDisplayed\r\n            .filter((res) => {\r\n              return res.counterCode === this.tsnLabel || res.counterCode === this.csnLabel;\r\n            })\r\n            .forEach((res) => {\r\n              if (res && res._obj && res._obj.bidoEquipmentCounterDto) {\r\n                const counterCode = res.counterCode || '';\r\n                if (setUpCounters.indexOf(counterCode) < 0) {\r\n                  const bidoEquipmentCounterDTOId: BidoEquipmentCounterDTOId = {\r\n                    equipmentCode: res._obj.bidoEquipmentCounterDto.equipmentCode,\r\n                    counterCode: res._obj.bidoEquipmentCounterDto.counterCode,\r\n                    ratingCode: res._obj.bidoEquipmentCounterDto.ratingCode\r\n                      ? res._obj.bidoEquipmentCounterDto.ratingCode\r\n                      : '_',\r\n                    familyCode: res._obj.bidoEquipmentCounterDto.familyCode\r\n                  };\r\n\r\n                  if (counterCode === this.tsnLabel) {\r\n                    this.tsn = !!res.cumulatedCounterValue ? `${res.cumulatedCounterValue} ${res.counterUnit}` : '';\r\n                  }\r\n                  if (counterCode === this.csnLabel) {\r\n                    this.csn = !!res.cumulatedCounterValue ? `${res.cumulatedCounterValue} ${res.counterUnit}` : '';\r\n                  }\r\n                  observables.push(this.componentMeasureService.getMeasureDetailTableData(bidoEquipmentCounterDTOId));\r\n                  setUpCounters.push(counterCode || '');\r\n                }\r\n              }\r\n            });\r\n\r\n          if (observables.length > 0) {\r\n            forkJoin(observables).subscribe((results) => {\r\n              this.showMeasureChart = true;\r\n              this.measureChartDataObj = results;\r\n              let allMeasures: FindBidoMeasuresByEquipmentAndCounterCodesOutput[] = [];\r\n              this.measureChartDataObj.forEach((element) => {\r\n                allMeasures = [...allMeasures, ...element];\r\n              });\r\n              this.initDateValues(allMeasures);\r\n              this.setMeasureChartData();\r\n              this.isLoadingMeasureTable = false;\r\n            });\r\n          }\r\n        } else {\r\n          this.isLoadingMeasureTable = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  public setMeasureChartData() {\r\n    const ALL = 'ALL';\r\n\r\n    if (\r\n      this.measureChartDataObj !== null &&\r\n      this.measureChartDataObj !== undefined &&\r\n      this.measureChartDataObj.length > 0\r\n    ) {\r\n      this.measureVariationData.datasets = [];\r\n      this.measureChartDataObj\r\n        .filter((obj: FindBidoMeasuresByEquipmentAndCounterCodesOutput[]) => {\r\n          if (obj && obj.length > 0 && this.selectedMeasureType && this.selectedMeasureType !== ALL) {\r\n            return obj[0].counterCode === this.selectedMeasureType;\r\n          }\r\n\r\n          return true;\r\n        })\r\n        .forEach((element: FindBidoMeasuresByEquipmentAndCounterCodesOutput[]) => {\r\n          const getFirstElement = element[0];\r\n          if (getFirstElement) {\r\n            const data: XYData[] = [];\r\n            const datasetObj = {\r\n              data,\r\n              label:\r\n                getFirstElement.counterCode === this.tsnLabel\r\n                  ? this.translateService.instant('hours')\r\n                  : this.translateService.instant('cycle'),\r\n              borderColor:\r\n                getFirstElement.counterCode === this.tsnLabel\r\n                  ? ComponentMeasureComponent.COLOR_TSN\r\n                  : ComponentMeasureComponent.COLOR_CSN,\r\n              backgroundColor:\r\n                getFirstElement.counterCode === this.tsnLabel\r\n                  ? ComponentMeasureComponent.COLOR_TSN\r\n                  : ComponentMeasureComponent.COLOR_CSN,\r\n              hoverBackgroundColor:\r\n                getFirstElement.counterCode === this.tsnLabel\r\n                  ? ComponentMeasureComponent.COLOR_TSN\r\n                  : ComponentMeasureComponent.COLOR_CSN,\r\n              fill: false,\r\n              cubicInterpolationMode: 'monotone'\r\n            };\r\n            this.measureVariationData.datasets.push(datasetObj);\r\n            element.forEach((st) => {\r\n              if (\r\n                !!this.startDate &&\r\n                !!this.endDate &&\r\n                !!st.readingDate &&\r\n                st.readingDate >= this.startDate &&\r\n                st.readingDate <= this.endDate\r\n              ) {\r\n                if (st.cumulatedCounterValue !== null && st.cumulatedCounterValue !== undefined) {\r\n                  datasetObj.data.push({\r\n                    x: new Date(st.readingDate),\r\n                    y: parseInt(st.cumulatedCounterValue, 10)\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n      this.measureVariationData = { ...this.measureVariationData };\r\n    }\r\n  }\r\n\r\n  public setTableDynamicHeaders() {\r\n    this.followedInRatingVisibility = false;\r\n    if (\r\n      !this.isAircraft &&\r\n      !this.isTool &&\r\n      this.equipment &&\r\n      this.equipment.bidoEquipmentDTO &&\r\n      this.equipment.bidoEquipmentDTO.familyVariantCode\r\n    ) {\r\n      this.componentMeasureService.isFollowedInRating(this.equipment.bidoEquipmentDTO.familyVariantCode).subscribe(\r\n        (results) => {\r\n          this.followedInRatingVisibility = results;\r\n\r\n          const checkRatingExists = this.bidoMeasuresDisplayed.filter((obj) => {\r\n            return !!obj.counterCode ? this.getRatingDataVisibility(this.counterMap.get(obj.counterCode)) : false;\r\n          })[0];\r\n          const checkLimitDateExists = this.bidoMeasuresDisplayed.filter((obj) => {\r\n            return !!obj.dateLimit;\r\n          })[0];\r\n\r\n          this.loadMeasureTableHeader(!!checkRatingExists, !!checkLimitDateExists);\r\n        },\r\n        (err) => {\r\n          this.messageService.showErrorMessage(err.error.errorDetail);\r\n          this.loadMeasureTableHeader(false, false);\r\n        }\r\n      );\r\n    } else {\r\n      this.loadMeasureTableHeader(false, false);\r\n    }\r\n  }\r\n\r\n  private getRatingDataVisibility(selectedBireMeasureReferenceDTO: BireMeasureReferenceDTO | undefined): boolean {\r\n    if (selectedBireMeasureReferenceDTO) {\r\n      if (!selectedBireMeasureReferenceDTO.isCounter) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return this.followedInRatingVisibility;\r\n  }\r\n\r\n  private loadMeasureTableHeader(showRating: boolean, showDateLimit: boolean): void {\r\n    this.measuresTableCols = [\r\n      { field: 'counterCode', alignment: 'left' },\r\n      { field: 'cumulatedCounterValue', alignment: 'left' },\r\n      { field: 'counterUnit', alignment: 'left' }\r\n    ];\r\n    if (showRating) {\r\n      this.measuresTableCols.push({ field: 'ratingText', alignment: 'left' });\r\n      this.measuresTableCols.push({ field: 'ratingCounterValue', alignment: 'left' });\r\n    }\r\n\r\n    this.measuresTableCols.push({ field: 'remainingValue', alignment: 'center' });\r\n    this.measuresTableCols.push({ field: 'referenceValue', alignment: 'left' });\r\n\r\n    if (showDateLimit) {\r\n      this.measuresTableCols.push({ field: 'dateLimit', alignment: 'left' });\r\n    }\r\n\r\n    this.measuresTableCols.push({ field: 'readingDate', alignment: 'left' });\r\n    this.measuresTableCols.push({ field: 'source', alignment: 'left' });\r\n  }\r\n\r\n  private setMeasureChartOptions(): void {\r\n    this.measureChartOptions = {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            type: 'time',\r\n            time: {\r\n              unit: 'month',\r\n              displayFormats: {\r\n                month: AppConstants.MOMENTJS_DATE\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [{}]\r\n      },\r\n      legend: {\r\n        display: false\r\n      },\r\n      tooltips: {\r\n        bodyFontColor: AppConstants.COLOR_BACKGROUND_PRIMARY\r\n      }\r\n    };\r\n  }\r\n\r\n  private initDateValues(measures: FindBidoMeasuresByEquipmentAndCounterCodesOutput[]) {\r\n    const dateArray: Date[] = [];\r\n    if (!!measures && measures.length > 0) {\r\n      measures.forEach((st) => {\r\n        if (st.readingDate !== null && st.readingDate !== undefined) {\r\n          dateArray.push(st.readingDate);\r\n        }\r\n      });\r\n\r\n      const lastYear: Date = new Date();\r\n      lastYear.setFullYear(lastYear.getFullYear() - 1);\r\n      this.startDate = lastYear;\r\n      this.endDate = new Date();\r\n    }\r\n  }\r\n\r\n  public getAlertIcon(obj: MeasureDataRow): string {\r\n    const row: FindBidoCounterReferencesByEquipmentCodeOutput = obj._obj;\r\n    if (\r\n      row &&\r\n      row.aPotentialAlertData &&\r\n      row.aPotentialAlertData.potentialAlertLevel !== null &&\r\n      row.aPotentialAlertData.potentialAlertLevel !== undefined\r\n    ) {\r\n      return this.getColorByIconCode(row.aPotentialAlertData.potentialAlertLevel);\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  public getAlertIconTooltip(obj: MeasureDataRow): string {\r\n    const row: FindBidoCounterReferencesByEquipmentCodeOutput = obj._obj;\r\n    if (row && row.aPotentialAlertData && row.aPotentialAlertData.alertTooltip) {\r\n      return row.aPotentialAlertData.alertTooltip;\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  public getMonthGapToolTip(obj: MeasureDataRow): string {\r\n    const row: FindBidoCounterReferencesByEquipmentCodeOutput = obj._obj;\r\n    if (row && row.aPotentialAlertData && row.aPotentialAlertData.monthGapToolTip) {\r\n      return row.aPotentialAlertData.monthGapToolTip;\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  public getColorByIconCode(iconCode: string): string {\r\n    switch (iconCode) {\r\n      case ControlConfigConstants.ICON_GREEN_LIGHT_CODE:\r\n        return AppConstants.COLOR_GREEN;\r\n      case ControlConfigConstants.ICON_YELLOW_LIGHT_CODE:\r\n        return AppConstants.COLOR_YELLOW;\r\n      case ControlConfigConstants.ICON_RED_LIGHT_CODE:\r\n        return AppConstants.COLOR_RED;\r\n      case ControlConfigConstants.ICON_NONE_LIGHT_CODE:\r\n        return '';\r\n      case ControlConfigConstants.ICON_GREEN_LED_CODE:\r\n        return AppConstants.COLOR_GREEN;\r\n      case ControlConfigConstants.ICON_YELLOW_LED_CODE:\r\n        return AppConstants.COLOR_YELLOW;\r\n      case ControlConfigConstants.ICON_RED_LED_CODE:\r\n        return AppConstants.COLOR_RED;\r\n      case ControlConfigConstants.ICON_NONE_LED_CODE:\r\n        return '';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { DynamicComponentLoaderModule } from '../../../main/dynamic-component-loader/dynamic-component-loader.module';\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { DialogTableModule } from '../dialog-table/dialog-table.module';\r\n\r\nimport { ComponentMeasureComponent } from './component-measure.component';\r\nimport { ComponentMeasureService } from './component-measure.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [TooltipModule, CalendarModule, SelectButtonModule, ChartModule, TableModule, CheckboxModule];\r\n\r\nconst INTERNAL_MODULES = [DialogTableModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [ComponentMeasureComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [ComponentMeasureService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES,\r\n    DynamicComponentLoaderModule.forChild(COMPONENTS)\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class ComponentMeasureModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AssetManagementApi } from '../../api/asset-management.api';\r\nimport { FleetBusinessApi } from '../../api/fleet-business.api';\r\nimport { FleetManagementApi } from '../../api/fleet-management.api';\r\nimport { ProductStructureBusinessApi } from '../../api/product-structure-business.api';\r\nimport { ProductStructureManagementApi } from '../../api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../http/abstract-aw-http';\r\nimport { AppConfigService } from '../../services/app-config.service';\r\nimport { AssetInputDto } from '../../types/api-input-types/fleet-management/asset-input-dto.interface';\r\nimport { AssetOutputDto } from '../../types/api-output-types/fleet-management/asset-output-dto.interface';\r\nimport { FindBidoMeasuresByEquipmentAndCounterCodesOutput } from '../../types/api-output-types/fleet-management/find_bido-measures-by-equipment-and-counter-codes-output';\r\nimport { BidoEquipmentCounterDTOId } from '../../types/api-types/bido-equipment-counter-dto-id.interface';\r\nimport { BidoEquipmentDTO } from '../../types/api-types/bido-equipment-dto.interface';\r\nimport { BireMeasureReferenceDTO } from '../../types/api-types/bire-measure-reference-dto.interface';\r\n\r\n@Injectable()\r\nexport class ComponentMeasureService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly assetManagementApi: AssetManagementApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly fleetBusinessApi: FleetBusinessApi,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly productStructureBusinessApi: ProductStructureBusinessApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getMeasureTabData(\r\n    bidoEquipmentDTO: BidoEquipmentDTO\r\n  ): Observable<FindBidoMeasuresByEquipmentAndCounterCodesOutput[]> {\r\n    return super.post<BidoEquipmentDTO, FindBidoMeasuresByEquipmentAndCounterCodesOutput[]>(\r\n      this.assetManagementApi.fetchMeasureTableData,\r\n      bidoEquipmentDTO\r\n    );\r\n  }\r\n\r\n  public findAllBireMeasureReferencesMaintenanceProgram(): Observable<BireMeasureReferenceDTO[]> {\r\n    return super.post<void, BireMeasureReferenceDTO[]>(\r\n      this.productStructureManagementApi.findAllBireMeasureReferencesMaintenanceProgram\r\n    );\r\n  }\r\n\r\n  public getMeasureDetailTableData(\r\n    bidoEquipmentCounterDTOId: BidoEquipmentCounterDTOId\r\n  ): Observable<FindBidoMeasuresByEquipmentAndCounterCodesOutput[]> {\r\n    return super.post<BidoEquipmentCounterDTOId, FindBidoMeasuresByEquipmentAndCounterCodesOutput[]>(\r\n      this.fleetBusinessApi.findBidoMeasuresByEquipmentAndCounterCodes,\r\n      bidoEquipmentCounterDTOId\r\n    );\r\n  }\r\n\r\n  public findAllBireMeasureReferences(): Observable<BireMeasureReferenceDTO[]> {\r\n    return super.post<void, BireMeasureReferenceDTO[]>(this.fleetManagementApi.findAllBireMeasureReferences);\r\n  }\r\n\r\n  public isFollowedInRating(followedRatingInput: string): Observable<boolean> {\r\n    return super.post<string, boolean>(this.productStructureBusinessApi.isFollowedInRating, followedRatingInput);\r\n  }\r\n\r\n  public findBidoEquipmentAlternative(asset: AssetInputDto): Observable<AssetOutputDto> {\r\n    return super.post<AssetInputDto, AssetOutputDto>(this.assetManagementApi.getAssetByCode, asset);\r\n  }\r\n\r\n  public findFirstBidoEquipmentsByPnAndSnCodes(woEquipement: BidoEquipmentDTO): Observable<BidoEquipmentDTO> {\r\n    return super.post<BidoEquipmentDTO, BidoEquipmentDTO>(\r\n      this.fleetManagementApi.findFirstBidoEquipmentsByPnAndSnCodes,\r\n      woEquipement\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}