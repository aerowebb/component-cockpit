{"version":3,"sources":["webpack:///./node_modules/primeng/keyfilter.js","webpack:///./node_modules/primeng/message.js","webpack:///./src/app/shared/components/dialog-search-employee/dialog-search-employee.component.html","webpack:///./src/app/shared/components/dialog-search-employee/dialog-search-employee.component.ts","webpack:///./src/app/shared/components/dialog-search-employee/dialog-search-employee.module.ts","webpack:///./src/app/shared/components/dialog-search-employee/dialog-search-employee.service.ts"],"names":[],"mappings":"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","file":"default~human-resources-human-resources-module~human-resources-staff-alert-staff-alert-module~module~c6c6bd0a.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/keyfilter/keyfilter\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/message/message\"));","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"50\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      {{ \\\"employeeOVSPopup.title\\\" | translate }} ({{ resultsTable.list ? resultsTable.list.length : 0 }})\\r\\n    </div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <p-table\\r\\n        [resizableColumns]=\\\"true\\\"\\r\\n        #ptable\\r\\n        class=\\\"aw-table2\\\"\\r\\n        [columns]=\\\"resultsTableCols\\\"\\r\\n        [value]=\\\"resultsTable.list\\\"\\r\\n        [(selection)]=\\\"selectedObject\\\"\\r\\n        selectionMode=\\\"single\\\"\\r\\n        dataKey=\\\"employeeNumber\\\"\\r\\n        [scrollable]=\\\"true\\\"\\r\\n        (onRowUnselect)=\\\"onRowUnselect()\\\"\\r\\n      >\\r\\n        <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n          <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n          <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n            <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n            <div class=\\\"lds-hourglass\\\"></div>\\r\\n          </div>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template pTemplate=\\\"caption\\\">\\r\\n          <div class=\\\"aw-table-header\\\">\\r\\n            <div class=\\\"aw-table-global-filter\\\">\\r\\n              <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </label>\\r\\n\\r\\n              <input\\r\\n                #ptableGlobalFilter\\r\\n                class=\\\"aw-table-global-filter-input\\\"\\r\\n                type=\\\"text\\\"\\r\\n                placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                (input)=\\\"ptable.filterGlobal($event.target.value, 'contains')\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n          <colgroup>\\r\\n            <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n          </colgroup>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n          <tr>\\r\\n            <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n              {{ \\\"employeeOVSPopup.\\\" + col.field | translate }}\\r\\n            </th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n\\r\\n        <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n          <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n            <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">{{ rowData[col.field] }}</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </p-table>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"onCancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"onCancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onValidate()\\\" [disabled]=\\\"isOneObjectSelected()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { BidtEmployeeDTO } from '../../../shared/types/api-types/bidt-employee-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { DialogComponent } from '../../../shared/types/dialog-component';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { ComponentOpenMode } from '../../enums/component-open-mode.enum';\r\nimport { MessageService } from '../../services/message.service';\r\n\r\nimport { DialogSearchEmployeeService } from './dialog-search-employee.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-search-employee',\r\n  templateUrl: 'dialog-search-employee.component.html'\r\n})\r\nexport class DialogSearchEmployeeComponent extends DialogComponent {\r\n  public resultsTableCols: TableColumn[];\r\n  public resultsTable: SearchResultsDTO<BidtEmployeeDTO>;\r\n  public selectedObject: BidtEmployeeDTO;\r\n  public searchObject: BidtEmployeeDTO;\r\n  public filterTxt: string;\r\n\r\n  @Input('employee-name')\r\n  public set name(name: string) {\r\n    this.searchObject.employeeLastName = name;\r\n  }\r\n\r\n  @Input('employee-firstName')\r\n  public set firstName(firstName: string) {\r\n    this.searchObject.employeeFirstName = firstName;\r\n  }\r\n\r\n  @Input('employee-number')\r\n  public set employeeNumber(employeeNumber: string) {\r\n    this.searchObject.employeeNumber = employeeNumber;\r\n  }\r\n\r\n  @Output()\r\n  public onSelected = new EventEmitter<BidtEmployeeDTO>();\r\n\r\n  public constructor(\r\n    public dialogSearchEmployeeService: DialogSearchEmployeeService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'employeeOVSPopup');\r\n\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n    this.searchObject = {};\r\n    this.selectedObject = {};\r\n\r\n    this.resultsTableCols = [\r\n      { field: 'employeeLastName', alignment: 'left' },\r\n      { field: 'employeeFirstName', alignment: 'left' },\r\n      { field: 'employeeNumber', alignment: 'left' }\r\n    ];\r\n    this.searchEmployees();\r\n  }\r\n\r\n  /*\r\n    <summary>Search models for operator or owner</summary>\r\n    */\r\n  public searchEmployees(): void {\r\n    this.dialogSearchEmployeeService.findEmployee(this.searchObject).subscribe(\r\n      (results) => {\r\n        if (results) {\r\n          this.resultsTable = results;\r\n        }\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnSearch'));\r\n      }\r\n    );\r\n  }\r\n\r\n  /*\r\n    <summary>Emit the selectedObject on validate</summary>\r\n    */\r\n  public onValidate(): void {\r\n    this.onSelected.emit(this.selectedObject);\r\n    this.display = false;\r\n  }\r\n\r\n  // Clean the selectedObject object if the row is unselect\r\n  public onRowUnselect(): void {\r\n    this.selectedObject = {};\r\n  }\r\n\r\n  // Clean all the object on rerender\r\n  public onShow(): void {\r\n    this.selectedObject = {};\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n  }\r\n\r\n  /*\r\n    <summary>Close the pop up on cancel</summary>\r\n    */\r\n  public onCancel(): void {\r\n    this.selectedObject = {};\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n    this.display = false;\r\n  }\r\n\r\n  public isOneObjectSelected(): boolean {\r\n    return !this.selectedObject.employeeNumber;\r\n  }\r\n\r\n  public resetFilter() {\r\n    this.filterTxt = '';\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TableModule } from 'primeng/table';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\n\r\nimport { DialogSearchEmployeeComponent } from './dialog-search-employee.component';\r\nimport { DialogSearchEmployeeService } from './dialog-search-employee.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [TableModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogSearchEmployeeComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [DialogSearchEmployeeService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class DialogSearchEmployeeModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtEmployeeApi } from '../../../shared/api/bidt-employee.api';\r\nimport { BidtEmployeeDTO } from '../../../shared/types/api-types/bidt-employee-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { AbstractAwHttpService } from '../../http/abstract-aw-http';\r\nimport { AppConfigService } from '../../services/app-config.service';\r\n\r\n@Injectable()\r\nexport class DialogSearchEmployeeService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtEmployeeApi: BidtEmployeeApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findEmployee(criteria: BidtEmployeeDTO): Observable<SearchResultsDTO<BidtEmployeeDTO>> {\r\n    return super.post<BidtEmployeeDTO, SearchResultsDTO<BidtEmployeeDTO>>(\r\n      this.bidtEmployeeApi.findBidtEmployeeBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}