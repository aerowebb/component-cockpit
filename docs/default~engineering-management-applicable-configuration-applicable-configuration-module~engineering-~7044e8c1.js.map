{"version":3,"sources":["webpack:///./src/app/main/overlay/overlay.service.ts","webpack:///./src/app/shared/components/dialog-search-qualification/dialog-search-qualification.component.html","webpack:///./src/app/shared/components/dialog-search-qualification/dialog-search-qualification.component.ts","webpack:///./src/app/shared/components/dialog-search-qualification/dialog-search-qualification.module.ts","webpack:///./src/app/shared/components/dialog-search-qualification/dialog-search-qualification.service.ts"],"names":[],"mappings":"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","file":"default~engineering-management-applicable-configuration-applicable-configuration-module~engineering-~7044e8c1.js","sourcesContent":["import { ConnectedPosition, Overlay, OverlayConfig, PositionStrategy } from '@angular/cdk/overlay';\r\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\r\nimport { Injectable, Injector, Type } from '@angular/core';\r\n\r\nimport { OverlayRef } from './overlay-ref';\r\nimport { OverlayComponent } from './overlay.component';\r\n\r\nexport interface OverlayParams {\r\n  content: Type<unknown>;\r\n  data?: unknown;\r\n  hasBackdrop?: boolean;\r\n  hasVisibleBackdrop?: boolean;\r\n  height?: number | string;\r\n  width?: number | string;\r\n}\r\n\r\nexport interface OverlayWithGlobalPositionParams extends OverlayParams {\r\n  positions: { bottom?: string; left?: string; right?: string; top?: string };\r\n}\r\n\r\nexport interface OverlayWithRelativePositionParams extends OverlayParams {\r\n  origin: HTMLElement;\r\n  positions?: ConnectedPosition[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OverlayService {\r\n  public constructor(private readonly _injector: Injector, private readonly _overlay: Overlay) {}\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public openWithPositionAbsolute<T>(params: OverlayWithGlobalPositionParams): OverlayRef<T> {\r\n    return this.open(params, this.getConfig(params, this.getPositionAbsolute(params)));\r\n  }\r\n\r\n  public openWithPositionCenter<T>(params: OverlayParams): OverlayRef<T> {\r\n    return this.open(\r\n      params,\r\n      this.getConfig(\r\n        { ...params, hasVisibleBackdrop: params.hasVisibleBackdrop !== undefined ? params.hasVisibleBackdrop : true },\r\n        this.getPositionCenter()\r\n      )\r\n    );\r\n  }\r\n\r\n  public openWithPositionRelative<T>(params: OverlayWithRelativePositionParams): OverlayRef<T> {\r\n    return this.open(params, this.getConfig(params, this.getPositionRelative(params)));\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  private createInjector<T>(overlayRef: OverlayRef<T>, injector: Injector): PortalInjector {\r\n    const tokens = new WeakMap([[OverlayRef, overlayRef]]);\r\n\r\n    return new PortalInjector(injector, tokens);\r\n  }\r\n\r\n  private getConfig(params: OverlayParams, positionStrategy: PositionStrategy): OverlayConfig {\r\n    const hasBackdrop = params.hasBackdrop !== undefined ? params.hasBackdrop : true;\r\n\r\n    return new OverlayConfig({\r\n      hasBackdrop,\r\n      positionStrategy,\r\n      backdropClass: hasBackdrop && params.hasVisibleBackdrop ? 'cdk-overlay-dark-backdrop' : '',\r\n      height: params.height,\r\n      scrollStrategy: this._overlay.scrollStrategies.reposition(),\r\n      width: params.width\r\n    });\r\n  }\r\n\r\n  private getPositionAbsolute(params: OverlayWithGlobalPositionParams): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .bottom(params.positions.bottom)\r\n      .left(params.positions.left)\r\n      .right(params.positions.right)\r\n      .top(params.positions.top);\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private getPositionCenter(): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .centerHorizontally()\r\n      .centerVertically();\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private getPositionRelative(params: OverlayWithRelativePositionParams): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .flexibleConnectedTo(params.origin)\r\n      .withPositions(params.positions || [])\r\n      .withFlexibleDimensions(false)\r\n      .withPush(false);\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private open<T>(params: OverlayParams, overlayConfig: OverlayConfig): OverlayRef<T> {\r\n    const cdkOverlayRef = this._overlay.create(overlayConfig);\r\n    const overlayRef = new OverlayRef<T>(cdkOverlayRef, params.content, params.data);\r\n\r\n    const injector = this.createInjector(overlayRef, this._injector);\r\n    cdkOverlayRef.attach(new ComponentPortal(OverlayComponent, undefined, injector));\r\n\r\n    return overlayRef;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"70\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ \\\"qualificationPopin.title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"search-dialog-container\\\">\\r\\n      <div class=\\\"section search-criteria-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">{{ \\\"global.search\\\" | translate }}</h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <div class=\\\"column\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ \\\"qualificationPopin.qualificationCode\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchObject.qualificationCode\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ \\\"qualificationPopin.qualificationName\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchObject.qualificationName\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row search-criteria-footer\\\">\\r\\n              <div class=\\\"search-actions\\\">\\r\\n                <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"searchQualifications()\\\">\\r\\n                  <span>{{ \\\"global.toSearch\\\" | translate }}</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"section results-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">\\r\\n          {{ \\\"global.results\\\" | translate }} ({{ resultsTable.list ? resultsTable.list.length : 0 }})\\r\\n        </h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <p-table\\r\\n            [resizableColumns]=\\\"true\\\"\\r\\n            #ptable\\r\\n            class=\\\"aw-table2\\\"\\r\\n            [columns]=\\\"resultsTableCols\\\"\\r\\n            [value]=\\\"resultsTable.list\\\"\\r\\n            [(selection)]=\\\"selectedObject\\\"\\r\\n            selectionMode=\\\"single\\\"\\r\\n            dataKey=\\\"qualificationCode\\\"\\r\\n            [scrollable]=\\\"true\\\"\\r\\n            (onRowUnselect)=\\\"onRowUnselect()\\\"\\r\\n          >\\r\\n            <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n              <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n              <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                <div class=\\\"lds-hourglass\\\"></div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"caption\\\">\\r\\n              <div class=\\\"aw-table-header\\\">\\r\\n                <div class=\\\"aw-table-global-filter\\\">\\r\\n                  <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                    <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </label>\\r\\n\\r\\n                  <input\\r\\n                    #ptableGlobalFilter\\r\\n                    class=\\\"aw-table-global-filter-input\\\"\\r\\n                    type=\\\"text\\\"\\r\\n                    placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                    (input)=\\\"ptable.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n              <colgroup>\\r\\n                <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n              </colgroup>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n              <tr>\\r\\n                <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                  {{ \\\"qualificationPopin.\\\" + col.field | translate }}\\r\\n                </th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n              <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                  <!-- <span *ngSwitchCase=\\\"'averageHourRate'\\\">\\r\\n                    {{ rowData[col.field] ? (rowData[col.field] | number: \\\"1.2-2\\\") + \\\" \\\" + currency : \\\"\\\" }}\\r\\n                  </span> -->\\r\\n\\r\\n                  <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </p-table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"onCancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"onCancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"onValidate()\\\"\\r\\n      [disabled]=\\\"isOneObjectSelected()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { BireQualificationDTO } from '../../../shared/types/api-types/bire-qualification-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { DialogComponent } from '../../../shared/types/dialog-component';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { ComponentOpenMode } from '../../enums/component-open-mode.enum';\r\nimport { MessageService } from '../../services/message.service';\r\n\r\nimport { DialogSearchQualificationService } from './dialog-search-qualification.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-search-qualification',\r\n  templateUrl: 'dialog-search-qualification.component.html'\r\n})\r\nexport class DialogSearchQualificationComponent extends DialogComponent {\r\n  public resultsTableCols: TableColumn[];\r\n  public resultsTable: SearchResultsDTO<BireQualificationDTO>;\r\n  public selectedObject: BireQualificationDTO;\r\n  public searchObject: BireQualificationDTO;\r\n  public filterTxt?: string;\r\n  public currency: string;\r\n\r\n  @Input('qualification-code')\r\n  public set qualificationCode(code: string) {\r\n    this.searchObject = {};\r\n    this.searchObject.qualificationCode = code;\r\n  }\r\n\r\n  @Output()\r\n  public onSelected = new EventEmitter<BireQualificationDTO>();\r\n\r\n  public constructor(\r\n    private readonly dialogSearchQualificationService: DialogSearchQualificationService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'qualificationOVSPopup');\r\n\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n    this.searchObject = {};\r\n    this.selectedObject = {};\r\n\r\n    this.resultsTableCols = [\r\n      { field: 'qualificationCode', alignment: 'left', width: '15%' },\r\n      { field: 'qualificationName', alignment: 'left', width: '20%' },\r\n      { field: 'qualificationDescription', alignment: 'left', width: '45%' },\r\n      { field: 'averageHourRate', alignment: 'left', width: '20%' }\r\n    ];\r\n    this.searchQualifications();\r\n    this.loadCurrency();\r\n  }\r\n\r\n  /*\r\n    <summary>Search qualifications for operator or owner</summary>\r\n    */\r\n  public searchQualifications(): void {\r\n    const precision = 2;\r\n    this.dialogSearchQualificationService.findQualification(this.searchObject).subscribe(\r\n      (results) => {\r\n        if (results) {\r\n          this.resultsTable = results;\r\n\r\n          this.resultsTable.list.forEach((res) => {\r\n            res.averageHourRate = res.averageHourRate\r\n              ? parseInt(res.averageHourRate, 10).toFixed(precision) + ' ' + this.currency\r\n              : res.averageHourRate;\r\n          });\r\n        }\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnSearch'));\r\n      }\r\n    );\r\n  }\r\n\r\n  /*\r\n    <summary>Emit the selectedObject on validate</summary>\r\n    */\r\n  public onValidate(): void {\r\n    this.onSelected.emit(this.selectedObject);\r\n    this.display = false;\r\n  }\r\n\r\n  // Clean the selectedObject object if the row is unselect\r\n  public onRowUnselect(): void {\r\n    this.selectedObject = {};\r\n  }\r\n\r\n  // Clean all the object on rerender\r\n  public onShow(): void {\r\n    this.selectedObject = {};\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n  }\r\n\r\n  private loadCurrency(): void {\r\n    this.dialogSearchQualificationService.getLocalCurrency().subscribe((result) => {\r\n      this.currency = result;\r\n    });\r\n  }\r\n\r\n  /*\r\n    <summary>Close the pop up on cancel</summary>\r\n    */\r\n  public onCancel(): void {\r\n    this.selectedObject = {};\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n    this.display = false;\r\n  }\r\n\r\n  public isOneObjectSelected(): boolean {\r\n    return !this.selectedObject.qualificationCode;\r\n  }\r\n\r\n  public resetFilter() {\r\n    this.filterTxt = undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TableModule } from 'primeng/table';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\n\r\nimport { DialogSearchQualificationComponent } from './dialog-search-qualification.component';\r\nimport { DialogSearchQualificationService } from './dialog-search-qualification.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [TableModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogSearchQualificationComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [DialogSearchQualificationService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class DialogSearchQualificationModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { TaskManagementApi } from '../../../shared/api/task-management.api';\r\nimport { FindBireQualificationsBySearchCriteriaInput } from '../../../shared/types/api-input-types/task-management/find-bire-qualifications-by-search-criteria-input.interface';\r\nimport { BireQualificationDTO } from '../../../shared/types/api-types/bire-qualification-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { AbstractAwHttpService } from '../../http/abstract-aw-http';\r\nimport { AppConfigService } from '../../services/app-config.service';\r\n\r\n@Injectable()\r\nexport class DialogSearchQualificationService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly taskManagementApi: TaskManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findQualification(searchObject: BireQualificationDTO): Observable<SearchResultsDTO<BireQualificationDTO>> {\r\n    const param: FindBireQualificationsBySearchCriteriaInput = {\r\n      bireQualification: searchObject,\r\n      bireTask: {}\r\n    };\r\n\r\n    return super.post<FindBireQualificationsBySearchCriteriaInput, SearchResultsDTO<BireQualificationDTO>>(\r\n      this.taskManagementApi.findBireQualificationsBySearchCriteria,\r\n      param\r\n    );\r\n  }\r\n\r\n  public getLocalCurrency(): Observable<string> {\r\n    return super.post<void, string>(this.taskManagementApi.getLocalCurrency);\r\n  }\r\n}\r\n"],"sourceRoot":""}