{"version":3,"sources":["webpack:///./src/app/main/maintenance/extract-tasks-applications/extract-tasks-applications.module.ts","webpack:///./src/app/main/maintenance/extract-tasks-applications/search/extract-tasks-applications-search.component.html","webpack:///./src/app/main/maintenance/extract-tasks-applications/search/extract-tasks-applications-search.component.scss","webpack:///./src/app/main/maintenance/extract-tasks-applications/search/extract-tasks-applications-search.component.ts","webpack:///./src/app/main/maintenance/extract-tasks-applications/search/extract-tasks-applications-search.service.ts"],"names":[],"mappings":"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","file":"maintenance-extract-tasks-applications-extract-tasks-applications-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { DialogSearchEquipmentModule } from '../../../shared/components/dialog-search-equipment/dialog-search-equipment.module';\r\nimport { DialogSearchTaskModule } from '../../../shared/components/dialog-search-task/dialog-search-task.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { ExtractTasksApplicationsSearchComponent } from './search/extract-tasks-applications-search.component';\r\nimport { ExtractTasksApplicationsSearchService } from './search/extract-tasks-applications-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [TooltipModule, TableModule, CalendarModule];\r\n\r\nconst INTERNAL_MODULES = [DialogSearchTaskModule, DialogSearchEquipmentModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [];\r\n\r\nconst DYNAMIC_COMPONENTS = [ExtractTasksApplicationsSearchComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [ExtractTasksApplicationsSearchService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class ExtractTasksApplicationsModule {}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ \\\"page.searchPage\\\" | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"refresh()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <!-- ASSET SELECTION -->\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">\\r\\n                  {{ componentData.componentId + \\\".assetsSelection\\\" | translate }}\\r\\n                  ({{ assetsList ? assetsList.length : 0 }})\\r\\n                </h4>\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div style=\\\"width: 100%\\\">\\r\\n                    <p-table\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                      #assetsTable\\r\\n                      class=\\\"aw-table2\\\"\\r\\n                      [columns]=\\\"assetsCols\\\"\\r\\n                      [value]=\\\"assetsList\\\"\\r\\n                      [(selection)]=\\\"selectedAssets\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                        <span *ngIf=\\\"!isLoadingData\\\"> &nbsp;</span>\\r\\n\\r\\n                        <div *ngIf=\\\"isLoadingData\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                          <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                          <div class=\\\"lds-hourglass\\\"></div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"caption\\\">\\r\\n                        <div class=\\\"aw-table-header\\\">\\r\\n                          <div class=\\\"aw-table-global-filter\\\">\\r\\n                            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </label>\\r\\n\\r\\n                            <input\\r\\n                              #ptableCusCustomerGlobalFilter\\r\\n                              class=\\\"aw-table-global-filter-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                              (input)=\\\"assetsTable.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"aw-table-actions\\\">\\r\\n                            <button\\r\\n                              *ngIf=\\\"hasManageAccessRight && selectedAssets.length > 0\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              color=\\\"warn\\\"\\r\\n                              (click)=\\\"deleteSelectedAsset()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.delete\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"selectedAssets.length === 0\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"showAssetDialog()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.add\\\" | translate }}\\r\\n                            </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                        <colgroup>\\r\\n                          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                          <col class=\\\"row-expand-wrapper\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                          </th>\\r\\n                          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                            <span>{{ componentData.componentId + \\\".\\\" + col.field | translate }}</span>\\r\\n                          </th>\\r\\n                          <th class=\\\"row-expand-wrapper\\\"></th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                          </td>\\r\\n                          <td\\r\\n                            *ngFor=\\\"let col of columns\\\"\\r\\n                            [ngSwitch]=\\\"col.field\\\"\\r\\n                            [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                          >\\r\\n                            <div *ngSwitchCase=\\\"'asset'\\\" title=\\\"{{ rowData[col.field] }}\\\">\\r\\n                              <span>\\r\\n                                {{ rowData[col.field] }}\\r\\n                              </span>\\r\\n                            </div>\\r\\n                            <div *ngSwitchCase=\\\"'equipmentDesignation'\\\" title=\\\"{{ rowData[col.field] }}\\\">\\r\\n                              <span>\\r\\n                                {{ rowData[col.field] }}\\r\\n                              </span>\\r\\n                            </div>\\r\\n                            <span *ngSwitchDefault>\\r\\n                              {{ rowData[col.field] }}\\r\\n                            </span>\\r\\n                          </td>\\r\\n                          <td class=\\\"row-expand-wrapper\\\" [pRowToggler]=\\\"rowData\\\">\\r\\n                            <i\\r\\n                              class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n                              [ngClass]=\\\"{\\r\\n                                'fa-minus': rowData._expand,\\r\\n                                'fa-plus': !rowData._expand\\r\\n                              }\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              pTooltip=\\\"{{ 'global.showTableRowDetails' | translate }}\\\"\\r\\n                              tooltipPosition=\\\"left\\\"\\r\\n                              (click)=\\\"toggleResultTableRowDetailsVisibility(rowData)\\\"\\r\\n                            ></i>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n\\r\\n                        <tr *ngIf=\\\"rowData._expand\\\" class=\\\"row-expanded\\\">\\r\\n                          <td [attr.colspan]=\\\"columns.length + 1\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">\\r\\n                                  {{ getComponentName() + \\\".registration\\\" | translate }}\\r\\n                                </label>\\r\\n\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <span>{{ rowData.registration }}</span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">\\r\\n                                  {{ getComponentName() + \\\".ownerCustomerCode\\\" | translate }}\\r\\n                                </label>\\r\\n\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <span>{{ rowData.ownerCustomerCode }}</span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">\\r\\n                                  {{ getComponentName() + \\\".operatorCustomerCode\\\" | translate }}\\r\\n                                </label>\\r\\n\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <span>{{ rowData.operatorCustomerCode }}</span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">\\r\\n                                  {{ getComponentName() + \\\".location\\\" | translate }}\\r\\n                                </label>\\r\\n\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <span>{{ rowData.location }}</span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">\\r\\n                                  {{ getComponentName() + \\\".equipmentCode\\\" | translate }}\\r\\n                                </label>\\r\\n\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <span>{{ rowData.equipmentCode }}</span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- TASK SELECTION -->\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">\\r\\n                  {{ componentData.componentId + \\\".tasksSelection\\\" | translate }}\\r\\n                  ({{ tasksList ? tasksList.length : 0 }})\\r\\n                </h4>\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div style=\\\"width: 100%\\\">\\r\\n                    <p-table\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                      #tasksTable\\r\\n                      class=\\\"aw-table2\\\"\\r\\n                      [columns]=\\\"tasksCols\\\"\\r\\n                      [value]=\\\"tasksList\\\"\\r\\n                      [(selection)]=\\\"selectedTasks\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                        <span *ngIf=\\\"!isLoadingData\\\"> &nbsp;</span>\\r\\n\\r\\n                        <div *ngIf=\\\"isLoadingData\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                          <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                          <div class=\\\"lds-hourglass\\\"></div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"caption\\\">\\r\\n                        <div class=\\\"aw-table-header\\\">\\r\\n                          <div class=\\\"aw-table-global-filter\\\">\\r\\n                            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </label>\\r\\n\\r\\n                            <input\\r\\n                              #ptableCusCustomerGlobalFilter\\r\\n                              class=\\\"aw-table-global-filter-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                              (input)=\\\"tasksTable.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"aw-table-actions\\\">\\r\\n                            <button\\r\\n                              *ngIf=\\\"hasManageAccessRight && selectedTasks.length > 0\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              color=\\\"warn\\\"\\r\\n                              (click)=\\\"deleteSelectedTasks()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.delete\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"selectedTasks.length === 0\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"openTaskDialog()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.add\\\" | translate }}\\r\\n                            </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                        <colgroup>\\r\\n                          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                          <col class=\\\"row-expand-wrapper\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                          </th>\\r\\n                          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                            <span>{{ componentData.componentId + \\\".\\\" + col.field | translate }}</span>\\r\\n                          </th>\\r\\n                          <th class=\\\"row-expand-wrapper\\\"></th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                          </td>\\r\\n                          <td\\r\\n                            *ngFor=\\\"let col of columns\\\"\\r\\n                            [ngSwitch]=\\\"col.field\\\"\\r\\n                            [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                          >\\r\\n                            <div *ngSwitchCase=\\\"'taskDesignation'\\\" title=\\\"{{ rowData[col.field] }}\\\">\\r\\n                              <span>\\r\\n                                {{ rowData[col.field] }}\\r\\n                              </span>\\r\\n                            </div>\\r\\n                            <span *ngSwitchDefault tooltipPosition=\\\"bottom\\\">\\r\\n                              {{ rowData[col.field] }}\\r\\n                            </span>\\r\\n                          </td>\\r\\n                          <td class=\\\"row-expand-wrapper\\\" [pRowToggler]=\\\"rowData\\\">\\r\\n                            <i\\r\\n                              class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n                              [ngClass]=\\\"{\\r\\n                                'fa-minus': rowData._expand,\\r\\n                                'fa-plus': !rowData._expand\\r\\n                              }\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              pTooltip=\\\"{{ 'global.showTableRowDetails' | translate }}\\\"\\r\\n                              tooltipPosition=\\\"left\\\"\\r\\n                              (click)=\\\"toggleTaskTableRowDetailsVisibility(rowData)\\\"\\r\\n                            ></i>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n\\r\\n                        <tr *ngIf=\\\"rowData._expand\\\" class=\\\"row-expanded\\\">\\r\\n                          <td [attr.colspan]=\\\"columns.length + 1\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">\\r\\n                                  {{ getComponentName() + \\\".taskChapter\\\" | translate }}\\r\\n                                </label>\\r\\n\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <span>{{ rowData.taskChapter }}</span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">\\r\\n                                  {{ getComponentName() + \\\".taskSection\\\" | translate }}\\r\\n                                </label>\\r\\n\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <span>{{ rowData.taskSection }}</span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">\\r\\n                                  {{ getComponentName() + \\\".taskSubject\\\" | translate }}\\r\\n                                </label>\\r\\n\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <span>{{ rowData.taskSubject }}</span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">\\r\\n                                  {{ getComponentName() + \\\".overhaul\\\" | translate }}\\r\\n                                </label>\\r\\n\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <span>\\r\\n                                    <i *ngIf=\\\"rowData['overhaul']\\\" class=\\\"fa fa-fw fa-check\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                  </span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">\\r\\n                                  {{ getComponentName() + \\\".repairCenterCode\\\" | translate }}\\r\\n                                </label>\\r\\n\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <span>{{ rowData.repairCenterCode }}</span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-label\\\">\\r\\n                                  {{ getComponentName() + \\\".groupCode\\\" | translate }}\\r\\n                                </label>\\r\\n\\r\\n                                <div class=\\\"form-control\\\">\\r\\n                                  <span>{{ rowData.groupCode }}</span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                              <div class=\\\"form-group\\\"></div>\\r\\n                              <div class=\\\"form-group\\\"></div>\\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- SEARCH CRITERIA -->\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".taskToApplyBefore\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-calendar\\r\\n                        showButtonBar=\\\"true\\\"\\r\\n                        [monthNavigator]=\\\"true\\\"\\r\\n                        [yearNavigator]=\\\"true\\\"\\r\\n                        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                        class=\\\"aw-calendar\\\"\\r\\n                        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                        appendTo=\\\"body\\\"\\r\\n                        [(ngModel)]=\\\"toDate\\\"\\r\\n                      ></p-calendar>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\"></div>\\r\\n                  <div class=\\\"form-group\\\"></div>\\r\\n                  <div class=\\\"form-group\\\"></div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button type=\\\"button\\\" mat-raised-button (click)=\\\"search()\\\">\\r\\n                      <div *ngIf=\\\"panelLoading\\\" class=\\\"lds-hourglass padding-class\\\"></div>\\r\\n                      {{ componentData.componentId + \\\".extractTasksApplication\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- RESULT TABLE -->\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ componentData.componentId + \\\".tasksApplicationExtraction\\\" | translate }} ({{\\r\\n                    extractTableList ? extractTableList.length : 0\\r\\n                  }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #extractTable\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"extractTableCols\\\"\\r\\n                [value]=\\\"extractTableList\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isLoadingData\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isLoadingData\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableCusCustomerGlobalFilter\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"extractTable.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        *ngIf=\\\"extractTableList && extractTableList.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"exportTable()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.export\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                    <col class=\\\"row-expand-wrapper\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      <span>{{ componentData.componentId + \\\".\\\" + col.field | translate }}</span>\\r\\n                    </th>\\r\\n                    <th class=\\\"row-expand-wrapper\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      <div *ngSwitchCase=\\\"'taskDescription'\\\" title=\\\"{{ rowData[col.field] }}\\\">\\r\\n                        <span>\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </span>\\r\\n                      </div>\\r\\n                      <span *ngSwitchDefault tooltipPosition=\\\"bottom\\\">\\r\\n                        {{ rowData[col.field] }}\\r\\n                      </span>\\r\\n                    </td>\\r\\n                    <td class=\\\"row-expand-wrapper\\\" [pRowToggler]=\\\"rowData\\\">\\r\\n                      <i\\r\\n                        class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n                        [ngClass]=\\\"{\\r\\n                          'fa-minus': rowData._expand,\\r\\n                          'fa-plus': !rowData._expand\\r\\n                        }\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                        pTooltip=\\\"{{ 'global.showTableRowDetails' | translate }}\\\"\\r\\n                        tooltipPosition=\\\"left\\\"\\r\\n                        (click)=\\\"toggleExtractTaskTableRowDetailsVisibility(rowData)\\\"\\r\\n                      ></i>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr *ngIf=\\\"rowData._expand\\\" class=\\\"row-expanded\\\">\\r\\n                    <td [attr.colspan]=\\\"columns.length + 1\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".counterCode\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <span>{{ rowData.counterCode }}</span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".taskPeriodicity\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <span>{{ rowData.taskPeriodicity }}</span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".ageing\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <span>{{ rowData.ageing }}</span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".unitCode\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <span>{{ rowData.unitCode }}</span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".assetDescription\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <span>{{ rowData.assetDescription }}</span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".topAircraftRegistration\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <span>{{ rowData.topAircraftRegistration }}</span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".nha\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <span>{{ rowData.nha }}</span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".nextTerm\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <span>{{ rowData.nextTerm }}</span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".wpNumber\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <span>{{ rowData.wpNumber }}</span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".woCode\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <span>{{ rowData.woCode }}</span>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\"></div>\\r\\n                        <div class=\\\"form-group\\\"></div>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- ASSET SELECTION DIALOG -->\\r\\n<aw-dialog-search-equipment\\r\\n  *ngIf=\\\"dialogAddAssetVisible\\\"\\r\\n  [(display)]=\\\"dialogAddAssetVisible\\\"\\r\\n  (onSelected)=\\\"onAddAsset($event)\\\"\\r\\n  [selectionMultiple]=\\\"true\\\"\\r\\n></aw-dialog-search-equipment>\\r\\n\\r\\n<!-- TASK SELECTION DIALOG -->\\r\\n<aw-dialog-search-task\\r\\n  *ngIf=\\\"showItemTaskSearchPopup\\\"\\r\\n  [(display)]=\\\"showItemTaskSearchPopup\\\"\\r\\n  (onSelected)=\\\"addTask($event)\\\"\\r\\n  [selectionMultiple]=\\\"true\\\"\\r\\n></aw-dialog-search-task>\\r\\n\"","module.exports = \":host .padding-class {\\n  padding-right: 0.5em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9tYWludGVuYW5jZS9leHRyYWN0LXRhc2tzLWFwcGxpY2F0aW9ucy9zZWFyY2gvZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxhcHBcXG1haW5cXG1haW50ZW5hbmNlXFxleHRyYWN0LXRhc2tzLWFwcGxpY2F0aW9uc1xcc2VhcmNoXFxleHRyYWN0LXRhc2tzLWFwcGxpY2F0aW9ucy1zZWFyY2guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxvQkFBb0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbnRlbmFuY2UvZXh0cmFjdC10YXNrcy1hcHBsaWNhdGlvbnMvc2VhcmNoL2V4dHJhY3QtdGFza3MtYXBwbGljYXRpb25zLXNlYXJjaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAucGFkZGluZy1jbGFzcyB7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAwLjVlbTtcclxuICB9XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { ExportService } from '../../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { ExtractTaskApplicationInputDTO } from '../../../../shared/types/api-input-types/airworthiness-management/extract-task-application-input-dto.interface';\r\nimport { TaskApplicationVOOutputDTO } from '../../../../shared/types/api-output-types/airworthiness-management/task-application-vo-output-dto.interface';\r\nimport { BidoEquipmentOVSOutputDTO } from '../../../../shared/types/api-output-types/fleet-management/bido-equipment-ovs-output-dto';\r\nimport { BidoEquipmentDTOId } from '../../../../shared/types/api-types/bido-equipment-dto-id.interface';\r\nimport { BireTaskDTO } from '../../../../shared/types/api-types/bire-task-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\n\r\nimport { ExtractTasksApplicationsSearchService } from './extract-tasks-applications-search.service';\r\n\r\ninterface BidoEquipmentOVSOutputDTOCustom {\r\n  asset?: string;\r\n  familyVariantCode?: string;\r\n  registration?: string;\r\n  pnCode?: string;\r\n  equipmentDesignation?: string;\r\n  equipmentFunction?: string;\r\n  sn?: string;\r\n  fatherEquipment?: string;\r\n  ownerCustomerCode?: string;\r\n  operatorCustomerCode?: string;\r\n  location?: string;\r\n  operationalStatus?: string;\r\n  equipmentCode?: string;\r\n  _expand?: boolean;\r\n}\r\n\r\ninterface BireTaskDTOCustom {\r\n  taskCode?: string;\r\n  code?: string;\r\n  version?: string;\r\n  taskVersion?: string;\r\n  taskDesignation?: string;\r\n  taskChapter?: string;\r\n  taskSection?: string;\r\n  taskSubject?: string;\r\n  taskTask?: string;\r\n  taskSubTask?: string;\r\n  taskStatus?: string;\r\n  taskApplicabilityCode?: string;\r\n  repairCenterCode?: string;\r\n  groupCode?: string;\r\n  taskTypeCode?: string;\r\n  overhaul?: boolean;\r\n  _expand?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-extract-tasks-applications-search',\r\n  styleUrls: ['./extract-tasks-applications-search.component.scss'],\r\n  templateUrl: './extract-tasks-applications-search.component.html'\r\n})\r\nexport class ExtractTasksApplicationsSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  private static readonly TASK_TABLE_EXPORT_NAME: string = 'task-list';\r\n\r\n  public toDate: Date;\r\n\r\n  // Asset Table\r\n  public assetsCols: TableColumn[];\r\n  public assetsList: BidoEquipmentOVSOutputDTOCustom[];\r\n  public selectedAssets: BidoEquipmentOVSOutputDTOCustom[];\r\n\r\n  // Task Table\r\n  public tasksCols: TableColumn[];\r\n  public tasksList: BireTaskDTOCustom[];\r\n  public selectedTasks: BireTaskDTOCustom[];\r\n\r\n  // Extract Task Table\r\n  public extractTableCols: TableColumn[];\r\n  public extractTableList: TaskApplicationVOOutputDTO[];\r\n\r\n  // Visiblity Params\r\n  public showItemTaskSearchPopup: boolean;\r\n  public dialogAddAssetVisible: boolean;\r\n  public panelLoading: boolean;\r\n\r\n  private propertyFunctions: LabelValue<string>[];\r\n  private propertyStatus: LabelValue<string>[];\r\n  private taskTypeList: LabelValue<string>[];\r\n  private taskStatusList: LabelValue<string>[];\r\n  private taskGroupList: LabelValue<string>[];\r\n  private modApplicabilityList: LabelValue<string>[];\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public sessionService: SessionService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly exportService: ExportService,\r\n    private readonly extractTasksApplicationsSearchService: ExtractTasksApplicationsSearchService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.MAI_EXTRACT_TASKS_APPLICATIONS;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.displayComponentContext('global.search', true);\r\n\r\n    this.loadDropdowns();\r\n    this.loadTableColumns();\r\n    this.init();\r\n  }\r\n\r\n  private init() {\r\n    this.assetsList = [];\r\n    this.selectedAssets = [];\r\n    this.tasksList = [];\r\n    this.selectedTasks = [];\r\n    this.extractTableList = [];\r\n  }\r\n\r\n  public refresh() {\r\n    this.init();\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Load Dropdowns\r\n   *************************************************************************/\r\n  private loadDropdowns() {\r\n    const getTaskTypeMap = this.propertiesService.getValue(GenericPropertyConstants.TASK_TYPE_MAP);\r\n    const getFuncObjectStatusMap = this.propertiesService.getValue(GenericPropertyConstants.FUNC_OBJECT_STATUS_MAP);\r\n    const applicability = this.propertiesService.getValue(GenericPropertyConstants.TASK_APPLICABILITY_CODE_MAP);\r\n    const propertyStatus = this.propertiesService.getValue(GenericPropertyConstants.OPERATIONAL_STATUS_MAP);\r\n    const propertyFunction = this.propertiesService.getValue(GenericPropertyConstants.ITEM_FAMILY_CODE_MAP);\r\n    const getTaskGroupMap = this.extractTasksApplicationsSearchService.getTaskGroups();\r\n\r\n    forkJoin([\r\n      getTaskTypeMap,\r\n      getFuncObjectStatusMap,\r\n      applicability,\r\n      propertyStatus,\r\n      propertyFunction,\r\n      getTaskGroupMap\r\n    ]).subscribe(\r\n      ([\r\n        getTaskTypeResult,\r\n        getFuncObjectStatusResult,\r\n        getApplicability,\r\n        getPropertyStatus,\r\n        getPropertyFunction,\r\n        getTaskGroupResult\r\n      ]) => {\r\n        this.taskTypeList = getTaskTypeResult.filter((obj) => {\r\n          return obj.value !== AWPropertiesConstants.TASK_TYPE_VISIT_KEY;\r\n        });\r\n        this.taskStatusList = getFuncObjectStatusResult;\r\n        this.modApplicabilityList = getApplicability;\r\n        this.propertyStatus = getPropertyStatus;\r\n        this.propertyFunctions = getPropertyFunction;\r\n        this.taskGroupList = getTaskGroupResult;\r\n      }\r\n    );\r\n  }\r\n\r\n  private formatKeyToLabel(key: string | undefined, list: LabelValue<string>[]) {\r\n    if (!!key) {\r\n      const selectedData = list.find((data) => data.value === key);\r\n\r\n      return !!selectedData && !!selectedData.label ? selectedData.label : '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Table Columns\r\n   *************************************************************************/\r\n  private loadTableColumns() {\r\n    this.assetsCols = [\r\n      { field: 'asset', alignment: 'left' },\r\n      { field: 'familyVariantCode', alignment: 'left' },\r\n      { field: 'pnCode', alignment: 'left' },\r\n      { field: 'equipmentDesignation', alignment: 'left' },\r\n      { field: 'equipmentFunction', alignment: 'left' },\r\n      { field: 'sn', alignment: 'left' },\r\n      { field: 'fatherEquipment', alignment: 'left' },\r\n      { field: 'operationalStatus', alignment: 'left' }\r\n    ];\r\n\r\n    this.tasksCols = [\r\n      { field: 'code', alignment: 'left', width: '10%' },\r\n      { field: 'version', alignment: 'left', width: '10%' },\r\n      { field: 'taskDesignation', alignment: 'left', width: '25%' },\r\n      { field: 'taskTask', alignment: 'left', width: '10%' },\r\n      { field: 'taskSubTask', alignment: 'left', width: '10%' },\r\n      { field: 'taskStatus', alignment: 'left', width: '5%' },\r\n      { field: 'taskApplicabilityCode', alignment: 'left', width: '15%' },\r\n      { field: 'taskTypeCode', alignment: 'left', width: '15%' }\r\n    ];\r\n\r\n    this.extractTableCols = [\r\n      { field: 'taskCode', alignment: 'left', width: '10%' },\r\n      { field: 'taskVersion', alignment: 'left', width: '10%' },\r\n      { field: 'taskDescription', alignment: 'left', width: '35%' },\r\n      { field: 'taskType', alignment: 'left', width: '10%' },\r\n      { field: 'assetPn', alignment: 'left', width: '10%' },\r\n      { field: 'assetSn', alignment: 'left', width: '10%' },\r\n      { field: 'assetItem', alignment: 'left', width: '15%' }\r\n    ];\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Asset Table and Dialog Operations\r\n   *************************************************************************/\r\n  public deleteSelectedAsset() {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey('confirmDeleteSelectedAssets'),\r\n      accept: () => {\r\n        this.selectedAssets.forEach((element) => {\r\n          const indexInDisplayedList = this.assetsList.indexOf(element);\r\n          this.assetsList.splice(indexInDisplayedList, 1);\r\n        });\r\n        this.selectedAssets = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public showAssetDialog() {\r\n    this.dialogAddAssetVisible = true;\r\n  }\r\n\r\n  public onAddAsset(newAssetList: BidoEquipmentOVSOutputDTO[]): void {\r\n    let isFound = false;\r\n    newAssetList.forEach((data) => {\r\n      this.assetsList.filter((row) => {\r\n        if (row.equipmentCode === data.equipmentCode) {\r\n          isFound = true;\r\n        }\r\n      });\r\n    });\r\n\r\n    if (isFound) {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('duplicateAsset'));\r\n    } else {\r\n      newAssetList.forEach((data) => {\r\n        this.assetsList.push({\r\n          asset: data.equipmentCode,\r\n          equipmentCode: data.equipmentCode,\r\n          equipmentDesignation: data.equipmentDesignation,\r\n          equipmentFunction: this.formatKeyToLabel(data.equipmentFunction, this.propertyFunctions),\r\n          familyVariantCode: data.familyVariantCode,\r\n          fatherEquipment: data.fatherEquipment,\r\n          location: undefined,\r\n          operationalStatus: this.formatKeyToLabel(data.operationalStatus, this.propertyStatus),\r\n          operatorCustomerCode: data.operatorCustomerCode,\r\n          ownerCustomerCode: data.ownerCustomerCode,\r\n          pnCode: data.pnCode,\r\n          registration: data.registration,\r\n          sn: data.sn,\r\n          _expand: false\r\n        });\r\n      });\r\n\r\n      // Setting asset name\r\n      this.assetsList.forEach((row) => {\r\n        if (!!row && !!row.equipmentCode) {\r\n          this.fetchEquipmentName(row.equipmentCode, (name) => {\r\n            row.asset = name as string;\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public toggleResultTableRowDetailsVisibility(row: BidoEquipmentOVSOutputDTOCustom): void {\r\n    row._expand = !row._expand;\r\n  }\r\n\r\n  private fetchEquipmentName(assetCode: string, callback) {\r\n    const equipmentId: BidoEquipmentDTOId = {\r\n      equipmentCode: assetCode\r\n    };\r\n    this.extractTasksApplicationsSearchService.getEquipmentName(equipmentId).subscribe((res) => {\r\n      callback(res);\r\n    });\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Task Table and Dialog Operations\r\n   *************************************************************************/\r\n  public deleteSelectedTasks() {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey('confirmDeleteSelectedTasks'),\r\n      accept: () => {\r\n        this.selectedTasks.forEach((element) => {\r\n          const indexInDisplayedList = this.tasksList.indexOf(element);\r\n          this.tasksList.splice(indexInDisplayedList, 1);\r\n        });\r\n        this.selectedTasks = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public openTaskDialog() {\r\n    this.showItemTaskSearchPopup = true;\r\n  }\r\n\r\n  public addTask(taskListAdded: BireTaskDTO[]) {\r\n    this.showItemTaskSearchPopup = false;\r\n\r\n    let isFound = false;\r\n    taskListAdded.forEach((data) => {\r\n      this.tasksList.filter((row) => {\r\n        if (row.taskCode === data.taskCode) {\r\n          isFound = true;\r\n        }\r\n      });\r\n    });\r\n\r\n    if (isFound) {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('duplicateTask'));\r\n    } else {\r\n      taskListAdded.forEach((task) => {\r\n        this.tasksList.push({\r\n          groupCode: this.formatKeyToLabel(task.groupCode, this.taskGroupList),\r\n          overhaul: task.overhaul,\r\n          repairCenterCode: task.repairCenterCode,\r\n          taskApplicabilityCode: this.formatKeyToLabel(task.taskApplicabilityCode, this.modApplicabilityList),\r\n          taskChapter: task.taskChapter,\r\n          taskCode: task.taskCode,\r\n          code: task.taskCode,\r\n          taskDesignation: task.taskDesignation,\r\n          taskSection: task.taskSection,\r\n          taskStatus: this.formatKeyToLabel(task.taskStatus, this.taskStatusList),\r\n          taskSubTask: task.taskSubTask,\r\n          taskSubject: task.taskSubject,\r\n          taskTask: task.taskTask,\r\n          taskTypeCode: this.formatKeyToLabel(task.taskTypeCode, this.taskTypeList),\r\n          taskVersion: task.taskVersion,\r\n          version: task.taskVersion,\r\n          _expand: false\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public toggleTaskTableRowDetailsVisibility(row: BireTaskDTOCustom): void {\r\n    row._expand = !row._expand;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Extract Tasks\r\n   *************************************************************************/\r\n  public search() {\r\n    if (this.validate()) {\r\n      const assetList: string[] = [];\r\n      this.assetsList.forEach((row) => {\r\n        if (!!row && !!row.equipmentCode) {\r\n          assetList.push(row.equipmentCode);\r\n        }\r\n      });\r\n\r\n      this.panelLoading = true;\r\n      const extractTaskApplicationInputDTO: ExtractTaskApplicationInputDTO = {\r\n        selectedEquipmentCodes: assetList,\r\n        selectedTaskKeys: this.tasksList,\r\n        toDate: this.toDate\r\n      };\r\n\r\n      this.extractTasksApplicationsSearchService\r\n        .extractTasksApplicationsFromAssetCodeListAndTaskKeyList(extractTaskApplicationInputDTO)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.panelLoading = false;\r\n          })\r\n        )\r\n        .subscribe((res) => {\r\n          this.extractTableList = res;\r\n        });\r\n    }\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Validate Screen\r\n   *************************************************************************/\r\n  private validate(): boolean {\r\n    const MAX_ALLOWED_SIZE = 10;\r\n    if (this.assetsList.length === 0) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('noAssetSelected'));\r\n\r\n      return false;\r\n    }\r\n\r\n    if (this.tasksList.length === 0) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('noTaskSelected'));\r\n\r\n      return false;\r\n    }\r\n\r\n    if (this.assetsList.length > MAX_ALLOWED_SIZE) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('assetSelectionLimitReached'));\r\n\r\n      return false;\r\n    }\r\n\r\n    if (this.tasksList.length > MAX_ALLOWED_SIZE) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('taskSelectionLimitReached'));\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Extract Task Application Table Operations\r\n   *************************************************************************/\r\n  public exportTable() {\r\n    const table: TaskApplicationVOOutputDTO[] = this.extractTableList.map((data) => {\r\n      return {\r\n        taskCode: data.taskCode,\r\n        taskVersion: data.taskVersion,\r\n        taskDescription: data.taskDescription,\r\n        taskType: data.taskType,\r\n        counterCode: data.counterCode,\r\n        taskPeriodicity: data.taskPeriodicity,\r\n        ageing: data.ageing,\r\n        unitCode: data.unitCode,\r\n        assetPn: data.assetPn,\r\n        assetSn: data.assetSn,\r\n        assetDescription: data.assetDescription,\r\n        assetItem: data.assetItem,\r\n        topAircraftRegistration: data.topAircraftRegistration,\r\n        nha: data.nha,\r\n        nextTerm: data.nextTerm,\r\n        wpNumber: data.wpNumber,\r\n        woCode: data.woCode\r\n      };\r\n    });\r\n\r\n    this.exportService.toExcel(\r\n      table,\r\n      ExtractTasksApplicationsSearchComponent.TASK_TABLE_EXPORT_NAME,\r\n      this.componentData.componentId\r\n    );\r\n  }\r\n\r\n  public toggleExtractTaskTableRowDetailsVisibility(row: BireTaskDTOCustom): void {\r\n    row._expand = !row._expand;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AirworthinessManagementApi } from '../../../../shared/api/airworthiness-management.api';\r\nimport { FleetManagementApi } from '../../../../shared/api/fleet-management.api';\r\nimport { TaskManagementApi } from '../../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { ExtractTaskApplicationInputDTO } from '../../../../shared/types/api-input-types/airworthiness-management/extract-task-application-input-dto.interface';\r\nimport { TaskApplicationVOOutputDTO } from '../../../../shared/types/api-output-types/airworthiness-management/task-application-vo-output-dto.interface';\r\nimport { BidoEquipmentDTOId } from '../../../../shared/types/api-types/bido-equipment-dto-id.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class ExtractTasksApplicationsSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly airworthinessManagementApi: AirworthinessManagementApi,\r\n    private readonly taskManagementApi: TaskManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  /**************************************************************************\r\n   * API call to extract tasks applications\r\n   *************************************************************************/\r\n  public extractTasksApplicationsFromAssetCodeListAndTaskKeyList(\r\n    input: ExtractTaskApplicationInputDTO\r\n  ): Observable<TaskApplicationVOOutputDTO[]> {\r\n    return super.post<ExtractTaskApplicationInputDTO, TaskApplicationVOOutputDTO[]>(\r\n      this.airworthinessManagementApi.extractTasksApplicationsFromAssetCodeListAndTaskKeyList,\r\n      input\r\n    );\r\n  }\r\n\r\n  public getTaskGroups(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.taskManagementApi.findAllBireTaskGroups);\r\n  }\r\n\r\n  public getEquipmentName(bidoEquipmentDTOId: BidoEquipmentDTOId): Observable<string> {\r\n    return super.post<BidoEquipmentDTOId, string>(this.fleetManagementApi.getEquipmentName, bidoEquipmentDTOId);\r\n  }\r\n}\r\n"],"sourceRoot":""}