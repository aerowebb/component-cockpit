{"version":3,"sources":["webpack:///./node_modules/@angular/material/esm5/checkbox.es5.js","webpack:///./node_modules/@angular/material/esm5/radio.es5.js","webpack:///./node_modules/primeng/multiselect.js","webpack:///./src/app/shared/components/table/column-def.directive.ts","webpack:///./src/app/shared/components/table/header-column-def.directive.ts","webpack:///./src/app/shared/components/table/row-expansion-def.directive.ts","webpack:///./src/app/shared/components/table/table-actions-def.directive.ts","webpack:///./src/app/shared/components/table/table-data-source.ts","webpack:///./src/app/shared/components/table/table.component.html","webpack:///./src/app/shared/components/table/table.component.scss","webpack:///./src/app/shared/components/table/table.component.ts","webpack:///./src/app/shared/components/table/table.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACmP;AACjN;AACe;AACa;AAC+B;AACsD;AACtE;AACpB;AACV;;AAE/C;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA,UAAU;AACV;AACA,oCAAoC,4DAAc;;AAElD;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU,cAAc,oBAAoB,EAAE;AAC/D;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb,4BAA4B,4EAAa,CAAC,yEAAU,CAAC,iFAAkB,CAAC,4EAAa;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,wCAAwC,0DAAY;AACpD;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,2BAA2B,EAAE;AACjF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,+CAA+C,EAAE;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,kBAAkB,mFAAqB,QAAQ,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,4BAA4B,EAAE;AACnD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS,UAAU;AACnC,+5BAA+5B,mBAAmB,kkBAAkkB;AACp/C,yEAAyE,GAAG,UAAU,IAAI,WAAW,4CAA4C,OAAO,UAAU,KAAK,WAAW,yDAAyD,OAAO,2BAA2B,IAAI,kDAAkD,KAAK,qBAAqB,0DAA0D,SAAS,oBAAoB,MAAM,gDAAgD,KAAK,qBAAqB,yDAAyD,KAAK,iDAAiD,oBAAoB,GAAG,6BAA6B,wDAAwD,KAAK,kDAAkD,UAAU,oBAAoB,GAAG,UAAU,yBAAyB,wDAAwD,KAAK,kDAAkD,UAAU,wBAAwB,GAAG,UAAU,0BAA0B,wDAAwD,KAAK,kDAAkD,UAAU,yBAAyB,GAAG,UAAU,qBAAqB,wDAAwD,KAAK,kDAAkD,UAAU,oBAAoB,GAAG,UAAU,0BAA0B,0DAA0D,GAAG,iCAAiC,UAAU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AACA;AACA,cAAc,uEAAuE;AACrF;;AAE0P;AAC1P;;;;;;;;;;;;;AC9sBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AACe;AACa;AACO;AAC4J;AAC9K;AACsE;AAC5C;AAC9B;;AAE/C;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU,cAAc,sBAAsB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,mBAAmB,EAAE;AAC1C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,oBAAoB,EAAE;AAC3C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mDAAmD,8BAA8B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,kBAAkB,OAAO,oDAAM,EAAE;AACjC,mBAAmB,OAAO,6DAAe,SAAS,gEAAU,cAAc,uBAAuB,EAAE,IAAI,oBAAoB,IAAI;AAC/H,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,yBAAyB,OAAO,mDAAK,EAAE;AACvC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,+BAA+B,yEAAU,CAAC,iFAAkB,CAAC,4EAAa;AAC1E;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,kCAAkC,mFAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,oBAAoB,EAAE;AAC3C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,mCAAmC,mFAAqB;AACxD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,mFAAqB;AAClD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,+CAA+C,EAAE;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS,UAAU;AACnC,2ZAA2Z,mBAAmB,qmBAAqmB;AACnhC,gDAAgD,qBAAqB,wCAAwC,UAAU,iBAAiB,eAAe,oBAAoB,mBAAmB,mBAAmB,sBAAsB,qBAAqB,sBAAsB,qBAAqB,kBAAkB,WAAW,YAAY,cAAc,wBAAwB,sBAAsB,YAAY,OAAO,kBAAkB,MAAM,mCAAmC,WAAW,iBAAiB,mBAAmB,kBAAkB,iDAAiD,gBAAgB,wBAAwB,kBAAkB,sBAAsB,YAAY,OAAO,kBAAkB,MAAM,4DAA4D,WAAW,sBAAsB,iDAAiD,gBAAgB,2CAA2C,oBAAoB,kCAAkC,2CAA2C,mBAAmB,yBAAyB,qBAAqB,QAAQ,oBAAoB,iBAAiB,gBAAgB,mCAAmC,kBAAkB,eAAe,gDAAgD,SAAS,eAAe,kBAAkB,0DAA0D,gBAAgB,iBAAiB,yDAAyD,eAAe,oCAAoC,kBAAkB,sBAAsB,qBAAqB,YAAY,WAAW,UAAU,oBAAoB,0FAA0F,YAAY,6BAA6B,WAAW,YAAY,eAAe,wDAAwD,YAAY,oFAAoF,YAAY,yGAAyG,UAAU,oBAAoB,wDAAwD,cAAc,iBAAiB,SAAS,SAAS;AACnoE;AACA,mCAAmC,+DAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qCAAqC,qEAAuB;AAC5D,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,oCAAoC,OAAO,sDAAQ,EAAE,GAAG;AACjE,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,OAAO,8DAAY,EAAE;AAC9B,SAAS,OAAO,kFAAyB,EAAE;AAC3C,SAAS,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACzG,MAAM;AACN;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,yBAAyB;AAC1D,0BAA0B,OAAO,mDAAK,8BAA8B;AACpE,2BAA2B,OAAO,mDAAK,+BAA+B;AACtE,mBAAmB,OAAO,mDAAK,EAAE;AACjC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,yBAAyB,OAAO,mDAAK,EAAE;AACvC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,yBAAyB,OAAO,uDAAS,oBAAoB;AAC7D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY,EAAE,sEAAe,EAAE,sEAAe;AAC5E,6DAA6D,sEAAe;AAC5E;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAE+J;AAC/J;;;;;;;;;;;;;ACp2BA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0GAAsC,G;;;;;;;;;;;;;;;;;;;;;;;;ACNO;AAK9D;IAGE,4BAA0B,QAA8B;QAA9B,aAAQ,GAAR,QAAQ,CAAsB;IAAG,CAAC;IAErD,oCAAO,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IANmB;QAAnB,2DAAK,CAAC,WAAW,CAAC;;oDAAqB;IAD7B,kBAAkB;QAH9B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;SACxB,CAAC;yCAIoC,yDAAW;OAHpC,kBAAkB,CAQ9B;IAAD,yBAAC;CAAA;AAR8B;;;;;;;;;;;;;;;;;;;;;;;;;ACLwB;AAKvD;IACE,kCAA0B,QAA8B;QAA9B,aAAQ,GAAR,QAAQ,CAAsB;IAAG,CAAC;IADjD,wBAAwB;QAHpC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;SAC9B,CAAC;yCAEoC,yDAAW;OADpC,wBAAwB,CAEpC;IAAD,+BAAC;CAAA;AAFoC;;;;;;;;;;;;;;;;;;;;;;;;;ACLkB;AAKvD;IACE,kCAA0B,QAA8B;QAA9B,aAAQ,GAAR,QAAQ,CAAsB;IAAG,CAAC;IADjD,wBAAwB;QAHpC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;SAC9B,CAAC;yCAEoC,yDAAW;OADpC,wBAAwB,CAEpC;IAAD,+BAAC;CAAA;AAFoC;;;;;;;;;;;;;;;;;;;;;;;;;ACLkB;AAKvD;IACE,kCAA0B,QAA8B;QAA9B,aAAQ,GAAR,QAAQ,CAAsB;IAAG,CAAC;IADjD,wBAAwB;QAHpC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;SAC9B,CAAC;yCAEoC,yDAAW;OADpC,wBAAwB,CAEpC;IAAD,+BAAC;CAAA;AAFoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLc;AAGA;AACI;AACA;AAEvD,IAAY,eAIX;AAJD,WAAY,eAAe;IACzB,oCAAiB;IACjB,gCAAa;IACb,kCAAe;AACjB,CAAC,EAJW,eAAe,KAAf,eAAe,QAI1B;AA0BD;IAuBE,yBAAmB,EAoBlB;YAnBC,oBAAO,EACP,sCAAgB,EAChB,gDAAqB,EACrB,cAAI,EACJ,oCAAe,EACf,oCAAe,EACf,8BAAY,EACZ,0CAAkB,EAClB,0BAAU;QATZ,iBA2CC;QAtBC,IAAI,CAAC,gBAAgB,GAAG,+DAAW,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAE,gBAA4B,CAAC,CAAC,CAAC,IAAI,CAAC;QACvG,IAAI,CAAC,qBAAqB,GAAG,+DAAW,CAAC,SAAS,CAAC,qBAAqB,CAAC;YACvE,CAAC,CAAE,qBAAiC;YACpC,CAAC,CAAC,IAAI,CAAC;QACT,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,+DAAW,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAE,eAA2B,CAAC,CAAC,CAAC,IAAI,CAAC;QACpG,IAAI,CAAC,eAAe,GAAG,+DAAW,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAE,eAA2B,CAAC,CAAC,CAAC,IAAI,CAAC;QACpG,IAAI,CAAC,YAAY,GAAG,YAAY,IAAI,eAAe,CAAC,sBAAsB,CAAC;QAC3E,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAEzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAxB,CAAwB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAE3E,IAAI,CAAC,WAAW,GAAG,IAAI,oDAAe,CAAM,IAAI,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAE7C,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAID,sBAAW,iCAAI;QAFf,6EAA6E;aAE7E;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAED,sBAAW,sCAAS;aAApB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAW,0CAAa;aAAxB;YACE,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;aAED,UAAyB,aAAiD;YACxE,sEAAsE;YACtE,8CAA8C;YAC9C,oBAAoB;YACpB,yDAAyD;YACzD,yBAAyB;YACzB,UAAU;YACV,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB;gBACzC,CAAC,CAAC,aAAa;gBACf,CAAC,CAAC,aAAa;oBACf,CAAC,CAAC,CAAE,aAA2D,CAAC,CAAC,IAAI;oBACrE,CAAC,CAAC,EAAE,CAAC;QACT,CAAC;;;OAdA;IAgBD,sBAAW,+CAAkB;aAA7B;YACE,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QACnC,CAAC;;;OAAA;IAED,sBAAW,oCAAO;aAAlB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IAED,sBAAW,oCAAO;aAAlB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QAClC,CAAC;;;OAAA;IAED,sBAAW,6CAAgB;aAA3B;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;QACxC,CAAC;;;OAAA;IAED,sBAAW,0CAAa;aAAxB;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI;gBACzB,IAAM,aAAa,gBAAQ,IAAI,CAAE,CAAC;gBAClC,OAAO,aAAa,CAAC,QAAQ,CAAC;gBAC9B,OAAO,aAAa,CAAC,GAAG,CAAC;gBAEzB,OAAO,aAAa,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC;;;OAAA;IAED,6EAA6E;IAEtE,iCAAO,GAAd,UAAe,SAAc;QAA7B,iBAIC;QAHC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAxB,CAAwB,CAAC,CAAC,CAAC,CAAC;QAE1F,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEM,kDAAwB,GAA/B,UAAgC,KAAa,EAAE,aAAoC;QAChF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,MAAM,IAAK,aAAM,CAAC,KAAK,KAAK,KAAK,EAAtB,CAAsB,CAAY,CAAC,aAAa,GAAG,aAAa,CAAC;QAEhG,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEM,kDAAwB,GAA/B,UAAgC,KAAa;QAC3C,IAAI,YAAY,GAAa,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,KAAK,CAAW,EAArB,CAAqB,CAAC,CAAC;QAC/E,qBAAqB;QACrB,YAAY,GAAG,SAAI,IAAI,GAAG,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,CAAC;QAEjD,IAAM,MAAM,GAAyB,YAAY,CAAC,GAAG,CAAC,UAAC,KAAK,IAAyB,QAAC,EAAE,KAAK,SAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAzB,CAAyB,CAAC,CAAC;QAEhH,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC/C,CAAC;IAEM,oCAAU,GAAjB,UAAkB,YAAgD;QAChE,IAAM,eAAe,GAAG,YAAY,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,GAAG,EAAR,CAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,QAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAnC,CAAmC,CAAC,CAAC,CAAC;QAEnF,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEM,6CAAmB,GAA1B;QACE,IAAI,CAAC,2DAAS,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAC1C,IAAM,YAAY,YAAO,IAAI,CAAC,aAAa,CAAC,CAAC;YAC7C,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YAExB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SAC/B;IACH,CAAC;IAEM,oCAAU,GAAjB,UAAkB,UAAmB;QAArC,iBA6CC;QA5CC,gBAAgB;QAChB,IAAI,CAAC,UAAU,IAAI,+DAAW,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YAClD,IAAI,CAAC,KAAK,YAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjC;aAAM,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAC,IAAI;gBACrC,IAAM,kBAAkB,GAAG,KAAI,CAAC,kBAA8B,CAAC;gBAE/D,OAAO,kBAAkB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAM,uBAAqB,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;YACvD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAC,IAAI;gBACrC,YAAI,CAAC,OAAO,CAAC,IAAI,CACf,UAAC,MAAM;oBACL,cAAS,IAA+C,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,QAAQ;wBAChF,IAA+C,CAAC,MAAM,CAAC,KAAK,CAAY;6BACxE,WAAW,EAAE;6BACb,QAAQ,CAAC,uBAAqB,CAAC;gBAHlC,CAGkC,CACrC;YAND,CAMC,CACF,CAAC;SACH;QAED,yBAAyB;QACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI;YAClC,IAAM,wBAAwB,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAClD,UAAC,MAAM,IAAK,aAAM,CAAC,sBAAsB,IAAI,CAAC,2DAAS,CAAC,OAAO,CAAC,MAAM,CAAC,sBAAsB,CAAC,EAAlF,CAAkF,CAC/F,CAAC;YAEF,OAAO,CACL,2DAAS,CAAC,OAAO,CAAC,wBAAwB,CAAC;gBAC3C,wBAAwB,CAAC,KAAK,CAAC,UAAC,MAAM;oBACpC,OAAC,MAAM,CAAC,sBAAoC;yBACzC,GAAG,CACF,UAAC,qBAAqB;wBACpB,OAAE,MAAM,CAAC,aAAuC,CAAC,IAAI,CACnD,UAAC,mBAAmB,IAAK,0BAAmB,CAAC,KAAK,KAAK,qBAAqB,EAAnD,CAAmD,CACrD,CAAC,KAAK;oBAF/B,CAE+B,CAClC;yBACA,QAAQ,CAAG,IAA+C,CAAC,MAAM,CAAC,KAAK,CAAW,CAAC;gBAPtF,CAOsF,CACvF,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEM,qCAAW,GAAlB,UAAmB,YAA4C,EAAE,SAAY;QAC3E,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAM,GAAG,GAAG,UAAC,IAAwC;YACnD,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,EAA7B,CAA6B,CAAC,CAAC;YAC7E,IAAI,YAAY,KAAK,CAAC,CAAC,EAAE;gBACvB,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC;QAEF,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEhB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEM,iCAAO,GAAd,UAAe,OAAY;QAA3B,iBAUC;QATC,wBAAwB;QACxB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM;YAC1B,MAAM,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAEzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAxB,CAAwB,CAAC,CAAC,CAAC;QAElE,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEM,gCAAM,GAAb;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,6EAA6E;IAErE,oCAAU,GAAlB,UAAmB,IAAO;QACxB,oBAAY,IAAI,IAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,IAAG;IAC9D,CAAC;IAEO,oCAAU,GAAlB;QACE,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IAEO,kCAAQ,GAAhB,UAAiB,OAA2C;QAC1D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,KAAK,YAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IA5PuB,sCAAsB,GAAW,EAAE,CAAC;IA6P9D,sBAAC;CAAA;AA9P2B;;;;;;;;;;;;ACrC5B,6QAA6Q,wCAAwC,2NAA2N,WAAW,yCAAyC,wPAAwP,2BAA2B,y0BAAy0B,kEAAkE,0GAA0G,uIAAuI,qCAAqC,0LAA0L,m5BAAm5B,mBAAmB,gIAAgI,8BAA8B,uBAAuB,6CAA6C,wIAAwI,mIAAmI,kuDAAkuD,8BAA8B,4FAA4F,8GAA8G,WAAW,iDAAiD,qGAAqG,sBAAsB,wQAAwQ,qBAAqB,uUAAuU,WAAW,mBAAmB,qF;;;;;;;;;;;ACAx0M,uCAAuC,kBAAkB,wBAAwB,wBAAwB,iCAAiC,EAAE,wCAAwC,0BAA0B,2BAA2B,uBAAuB,qBAAqB,EAAE,8CAA8C,oBAAoB,0BAA0B,4BAA4B,mBAAmB,EAAE,oDAAoD,sCAAsC,qCAAqC,uCAAuC,yBAAyB,wCAAwC,4BAA4B,sCAAsC,0BAA0B,uBAAuB,6BAA6B,2BAA2B,6BAA6B,gCAAgC,sBAAsB,6BAA6B,0DAA0D,qBAAqB,2EAA2E,EAAE,+EAA+E,yBAAyB,2BAA2B,EAAE,qEAAqE,yBAAyB,2BAA2B,EAAE,sEAAsE,yBAAyB,2BAA2B,EAAE,0EAA0E,yBAAyB,2BAA2B,EAAE,0DAA0D,uCAAuC,wBAAwB,sBAAsB,EAAE,+DAA+D,qBAAqB,EAAE,wCAAwC,mBAAmB,gCAAgC,EAAE,uCAAuC,qBAAqB,EAAE,qBAAqB,mCAAmC,oCAAoC,EAAE,2CAA2C,iBAAiB,EAAE,6CAA6C,4BAA4B,sBAAsB,4BAA4B,gCAAgC,EAAE,+CAA+C,uCAAuC,EAAE,wDAAwD,6CAA6C,6CAA6C,EAAE,qBAAqB,qCAAqC,kCAAkC,EAAE,kCAAkC,qBAAqB,EAAE,+BAA+B,oBAAoB,0BAA0B,0BAA0B,EAAE,wCAAwC,qBAAqB,EAAE,mCAAmC,sBAAsB,EAAE,0FAA0F,2BAA2B,EAAE,yDAAyD,wBAAwB,kBAAkB,wBAAwB,4BAA4B,EAAE,qCAAqC,mBAAmB,EAAE,uCAAuC,kBAAkB,wBAAwB,4BAA4B,oBAAoB,qBAAqB,uBAAuB,gBAAgB,EAAE,wDAAwD,kCAAkC,EAAE,4CAA4C,kBAAkB,wBAAwB,EAAE,oDAAoD,uBAAuB,EAAE,mDAAmD,wBAAwB,EAAE,gEAAgE,wBAAwB,EAAE,iDAAiD,kBAAkB,EAAE,oCAAoC,8BAA8B,EAAE,2FAA2F,2CAA2C,EAAE,+BAA+B,sCAAsC,EAAE,+CAA+C,8CAA8C,EAAE,qCAAqC,2CAA2C,6BAA6B,EAAE,kDAAkD,2CAA2C,6BAA6B,EAAE,qCAAqC,gCAAgC,oBAAoB,EAAE,kCAAkC,8CAA8C,2CAA2C,EAAE,sEAAsE,mCAAmC,EAAE,oCAAoC,kCAAkC,wBAAwB,EAAE,kCAAkC,0CAA0C,2CAA2C,EAAE,+CAA+C,+k+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACct+J;AACe;AACO;AACkC;AAExB;AAEK;AACa;AACA;AACA;AAC8C;AAcvH;IA4CE;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAExC,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,4BAA4B,EAAE,CAAC;IACtC,CAAC;uBAjDU,cAAc;IAmDlB,2CAAkB,GAAzB;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEM,oCAAW,GAAlB,UAAmB,OAAsB;QAAzC,iBAaC;QAZC,IAAI,OAAO,CAAC,UAAU,EAAE;YACtB,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,+BAA+B;gBAC/B,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;aACrC;YACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBAC9F,iDAAiD;gBACjD,IAAI,IAAI,CAAC,MAAM,IAAI,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE;oBACnC,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;iBACtB;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAID,sBAAW,uDAA2B;QAFtC,6EAA6E;aAE7E;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,MAAM,IAAK,sEAAW,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,EAA3C,CAA2C,CAAC,CAAC;QAC/F,CAAC;;;OAAA;IAEM,wCAAe,GAAtB,UAAuB,KAAY;QACjC,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAEM,0CAAiB,GAAxB,UAAyB,KAAY,EAAE,YAAe;QACpD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,KAAK,SAAE,YAAY,gBAAE,CAAC,CAAC;IACvD,CAAC;IAEM,oDAA2B,GAAlC;QACE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;IAC/B,CAAC;IAEM,oCAAW,GAAlB,UAAmB,KAAkD;QACnE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM;YACrC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,IAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,MAAM,IAAK,aAAM,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,KAAK,EAAlC,CAAkC,CAAC,CAAC;QACjG,YAA+B,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;IACzD,CAAC;IAEM,6CAAoB,GAA3B,UAA4B,UAAkB;QAC5C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAEM,kCAAS,GAAhB,UAAiB,KAAuD;QACtE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE;YACrC,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;SACxC;QAED,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAE3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,aAAa,EAAE,YAAY,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IACtG,CAAC;IAEM,6BAAI,GAAX,UAAY,KAAmB;QAC7B,IAAM,iBAAiB,GAAG,UAAC,KAAQ,EAAE,KAAQ,EAAE,KAAa;YAC1D,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YAE5B,IAAI,MAAc,CAAC;YAEnB,IAAI,CAAC,+DAAW,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,+DAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACnE,MAAM,GAAG,CAAC,CAAC,CAAC;aACb;iBAAM,IAAI,+DAAW,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,+DAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC1E,MAAM,GAAG,CAAC,CAAC;aACZ;iBAAM,IAAI,CAAC,+DAAW,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,+DAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC3E,MAAM,GAAG,CAAC,CAAC;aACZ;iBAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBACnE,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;aACvC;iBAAM;gBACL,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;aACvE;YAED,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC;QAEF,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,IAAI,iBAAiB,CAAC;QAEnE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,KAAK,EAAE,KAAK,IAAK,YAAK,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAzD,CAAyD,CAAC,CAAC;IAC/F,CAAC;IAEM,sCAAa,GAApB,UAAqB,KAAY;QAC/B,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;YAEvC,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,EAAE,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;YAEtC,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;SACtD;IACH,CAAC;IAEM,qDAA4B,GAAnC;QACE,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;IACjD,CAAC;IAEM,oCAAW,GAAlB,UAAmB,KAAuD;QACxE,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAE5B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,aAAa,EAAE,YAAY,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,6EAA6E;IAErE,6BAAI,GAAZ;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QAEpC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;QAEtC,IAAI,CAAC,WAAW,GAAG,IAAI,0DAAY,EAAoD,CAAC;QACxF,IAAI,CAAC,aAAa,GAAG,IAAI,0DAAY,EAAqC,CAAC;QAC3E,IAAI,CAAC,iBAAiB,GAAG,IAAI,0DAAY,EAAqC,CAAC;IACjF,CAAC;IAEO,sCAAa,GAArB;QAAA,iBAOC;QANC,IAAI,CAAC,eAAe,GAAG,+DAAW,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;QACrG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,QAAQ;YAC/B,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC7D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,+DAAW,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;QAC9G,IAAI,CAAC,oBAAoB,GAAG,+DAAW,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;IACtH,CAAC;IAEO,qDAA4B,GAApC;QAAA,iBAaC;QAZC,IAAI,CAAC,iBAAiB,GAAG,IAAI,4CAAO,EAAU,CAAC;QAC/C,IAAI,CAAC,iBAAiB;aACnB,IAAI,CACH,mEAAY,CAAC,gBAAc,CAAC,yBAAyB,CAAC,EACtD,2EAAoB,EAAE,EACtB,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAC7B;aACA,SAAS,CAAC,UAAC,UAAU;YACpB,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;YAErB,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,mDAA0B,GAAlC,UAAmC,eAAwB;QACzD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI;YAChC,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;;IA9MuB,wCAAyB,GAAW,GAAG,CAAC;IAGhE;QADC,kEAAY,CAAC,qFAAwB,CAAC;kCACpB,qFAAwB;sDAAC;IAG5C;QADC,qEAAe,CAAC,wEAAkB,CAAC;kCACjB,uDAAS;sDAAqB;IAGjD;QADC,kEAAY,CAAC,qFAAwB,CAAC;kCACf,qFAAwB;2DAAC;IAGjD;QADC,kEAAY,CAAC,qFAAwB,CAAC;kCACf,qFAAwB;2DAAC;IAGjD;QADC,2DAAK,EAAE;kCACW,kEAAU;sDAAI;IAGjC;QADC,4DAAM,EAAE;kCACW,0DAAY;uDAAmD;IAGnF;QADC,4DAAM,EAAE;kCACa,0DAAY;yDAAoC;IAGtE;QADC,4DAAM,EAAE;kCACiB,0DAAY;6DAAoC;IAG1E;QADC,+DAAS,CAAC,mDAAK,CAAC;kCACH,mDAAK;iDAAC;IA5BT,cAAc;QAN1B,+DAAS,CAAC;YACT,eAAe,EAAE,qEAAuB,CAAC,MAAM;YAC/C,QAAQ,EAAE,SAAS;YAEnB,qHAAqC;;SACtC,CAAC;;OACW,cAAc,CAgN1B;IAAD,qBAAC;CAAA;AAhN0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCc;AACsB;AACN;AACD;AACU;AAEa;AACR;AAEX;AACa;AACA;AACA;AACtB;AAEnD,+EAA+E;AAC/E,UAAU;AACV,+EAA+E;AAC/E,IAAM,gBAAgB,GAAG,CAAC,4EAAiB,EAAE,sEAAc,EAAE,qEAAiB,EAAE,yDAAkB,CAAC,CAAC;AAEpG,+EAA+E;AAC/E,aAAa;AACb,+EAA+E;AAC/E,IAAM,UAAU,GAAG,CAAC,gEAAc,CAAC,CAAC;AAEpC,+EAA+E;AAC/E,aAAa;AACb,+EAA+E;AAC/E,IAAM,UAAU,GAAG,CAAC,wEAAkB,EAAE,qFAAwB,EAAE,qFAAwB,EAAE,sFAAwB,CAAC,CAAC;AAOtH;IAAA;IAA0B,CAAC;IAAd,WAAW;QALvB,8DAAQ,CAAC;YACR,YAAY,WAAM,UAAU,EAAK,UAAU,CAAC;YAC5C,OAAO,WAAM,UAAU,EAAK,UAAU,CAAC;YACvC,OAAO,YAAG,uFAAyB,EAAE,+EAAqB,GAAK,gBAAgB,CAAC;SACjF,CAAC;OACW,WAAW,CAAG;IAAD,kBAAC;CAAA;AAAH","file":"default~administration-administration-module~administration-attributes-attributes-module~administrat~f071b799.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, Inject, Input, NgZone, Optional, Output, ViewChild, ViewEncapsulation, Directive, NgModule } from '@angular/core';\nimport { __extends } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, CheckboxRequiredValidator, NG_VALIDATORS } from '@angular/forms';\nimport { MatRipple, mixinColor, mixinDisabled, mixinDisableRipple, mixinTabIndex, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @type {?}\n */\nvar MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for checkbox components.\n/** @type {?} */\nvar nextUniqueId = 0;\n// TODO(josephperrott): Revert to constants for ripple radius once 2018 Checkbox updates have\n// landed.\n// The radius for the checkbox's ripple, in pixels.\n/** @type {?} */\nvar calculatedRippleRadius = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nvar MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatCheckbox; }),\n    multi: true\n};\n/** @enum {number} */\nvar TransitionCheckState = {\n    /** The initial state of the component before any user interaction. */\n    Init: 0,\n    /** The state representing the component when it's becoming checked. */\n    Checked: 1,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked: 2,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate: 3,\n};\nTransitionCheckState[TransitionCheckState.Init] = 'Init';\nTransitionCheckState[TransitionCheckState.Checked] = 'Checked';\nTransitionCheckState[TransitionCheckState.Unchecked] = 'Unchecked';\nTransitionCheckState[TransitionCheckState.Indeterminate] = 'Indeterminate';\n/**\n * Change event object emitted by MatCheckbox.\n */\nvar  /**\n * Change event object emitted by MatCheckbox.\n */\nMatCheckboxChange = /** @class */ (function () {\n    function MatCheckboxChange() {\n    }\n    return MatCheckboxChange;\n}());\n// Boilerplate for applying mixins to MatCheckbox.\n/**\n * \\@docs-private\n */\nvar  \n// Boilerplate for applying mixins to MatCheckbox.\n/**\n * \\@docs-private\n */\nMatCheckboxBase = /** @class */ (function () {\n    function MatCheckboxBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatCheckboxBase;\n}());\n/** @type {?} */\nvar _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase)), 'accent'));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nvar MatCheckbox = /** @class */ (function (_super) {\n    __extends(MatCheckbox, _super);\n    function MatCheckbox(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _clickAction, _animationMode) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._focusMonitor = _focusMonitor;\n        _this._ngZone = _ngZone;\n        _this._clickAction = _clickAction;\n        _this._animationMode = _animationMode;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n         * take precedence so this may be omitted.\n         */\n        _this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        _this.ariaLabelledby = null;\n        _this._uniqueId = \"mat-checkbox-\" + ++nextUniqueId;\n        /**\n         * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n         */\n        _this.id = _this._uniqueId;\n        /**\n         * Whether the label should appear after or before the checkbox. Defaults to 'after'\n         */\n        _this.labelPosition = 'after';\n        /**\n         * Name value will be applied to the input element if present\n         */\n        _this.name = null;\n        /**\n         * Event emitted when the checkbox's `checked` value changes.\n         */\n        _this.change = new EventEmitter();\n        /**\n         * Event emitted when the checkbox's `indeterminate` value changes.\n         */\n        _this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        _this._onTouched = function () { };\n        _this._currentAnimationClass = '';\n        _this._currentCheckState = TransitionCheckState.Init;\n        _this._controlValueAccessorChangeFn = function () { };\n        _this._checked = false;\n        _this._disabled = false;\n        _this._indeterminate = false;\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        _this._focusMonitor.monitor(elementRef, true).subscribe(function (focusOrigin) {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(function () { return _this._onTouched(); });\n            }\n        });\n        return _this;\n    }\n    Object.defineProperty(MatCheckbox.prototype, \"inputId\", {\n        /** Returns the unique id for the visual hidden input. */\n        get: /**\n         * Returns the unique id for the visual hidden input.\n         * @return {?}\n         */\n        function () { return (this.id || this._uniqueId) + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCheckbox.prototype, \"required\", {\n        /** Whether the checkbox is required. */\n        get: /**\n         * Whether the checkbox is required.\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatCheckbox.prototype.ngAfterViewChecked = /**\n     * @return {?}\n     */\n    function () {\n        this._calculateRippleRadius();\n    };\n    /**\n     * @return {?}\n     */\n    MatCheckbox.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    };\n    Object.defineProperty(MatCheckbox.prototype, \"checked\", {\n        /**\n         * Whether the checkbox is checked.\n         */\n        get: /**\n         * Whether the checkbox is checked.\n         * @return {?}\n         */\n        function () { return this._checked; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value != this.checked) {\n                this._checked = value;\n                this._changeDetectorRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCheckbox.prototype, \"disabled\", {\n        /**\n         * Whether the checkbox is disabled. This fully overrides the implementation provided by\n         * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n         */\n        get: /**\n         * Whether the checkbox is disabled. This fully overrides the implementation provided by\n         * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var newValue = coerceBooleanProperty(value);\n            if (newValue !== this.disabled) {\n                this._disabled = newValue;\n                this._changeDetectorRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCheckbox.prototype, \"indeterminate\", {\n        /**\n         * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n         * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n         * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n         * set to false.\n         */\n        get: /**\n         * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n         * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n         * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n         * set to false.\n         * @return {?}\n         */\n        function () { return this._indeterminate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var changed = value != this._indeterminate;\n            this._indeterminate = value;\n            if (changed) {\n                if (this._indeterminate) {\n                    this._transitionCheckState(TransitionCheckState.Indeterminate);\n                }\n                else {\n                    this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n                }\n                this.indeterminateChange.emit(this._indeterminate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatCheckbox.prototype._isRippleDisabled = /**\n     * @return {?}\n     */\n    function () {\n        return this.disableRipple || this.disabled;\n    };\n    /** Method being called whenever the label text changes. */\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    MatCheckbox.prototype._onLabelTextChange = /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    function () {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and it's children.\n        this._changeDetectorRef.detectChanges();\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatCheckbox.prototype.writeValue = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.checked = !!value;\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatCheckbox.prototype.registerOnChange = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatCheckbox.prototype.registerOnTouched = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._onTouched = fn;\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    MatCheckbox.prototype.setDisabledState = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    /**\n     * @return {?}\n     */\n    MatCheckbox.prototype._getAriaChecked = /**\n     * @return {?}\n     */\n    function () {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    };\n    /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    MatCheckbox.prototype._transitionCheckState = /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    function (newState) {\n        /** @type {?} */\n        var oldState = this._currentCheckState;\n        /** @type {?} */\n        var element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            /** @type {?} */\n            var animationClass_1 = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(function () {\n                setTimeout(function () {\n                    element.classList.remove(animationClass_1);\n                }, 1000);\n            });\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatCheckbox.prototype._emitChangeEvent = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    };\n    /** Toggles the `checked` state of the checkbox. */\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    MatCheckbox.prototype.toggle = /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    function () {\n        this.checked = !this.checked;\n    };\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    MatCheckbox.prototype._onInputClick = /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then(function () {\n                    _this._indeterminate = false;\n                    _this.indeterminateChange.emit(_this._indeterminate);\n                });\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    };\n    /** Focuses the checkbox. */\n    /**\n     * Focuses the checkbox.\n     * @return {?}\n     */\n    MatCheckbox.prototype.focus = /**\n     * Focuses the checkbox.\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard');\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatCheckbox.prototype._onInteractionEvent = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    };\n    /**\n     * @private\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    MatCheckbox.prototype._getAnimationClassForCheckStateTransition = /**\n     * @private\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    function (oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        /** @type {?} */\n        var animSuffix = '';\n        switch (oldState) {\n            case TransitionCheckState.Init:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === TransitionCheckState.Checked) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == TransitionCheckState.Indeterminate) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case TransitionCheckState.Unchecked:\n                animSuffix = newState === TransitionCheckState.Checked ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case TransitionCheckState.Checked:\n                animSuffix = newState === TransitionCheckState.Unchecked ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case TransitionCheckState.Indeterminate:\n                animSuffix = newState === TransitionCheckState.Checked ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return \"mat-checkbox-anim-\" + animSuffix;\n    };\n    // TODO(josephperrott): Revert to constants for ripple radius once 2018 Checkbox updates have\n    // landed.\n    /**\n     * Calculate the radius for the ripple based on the ripple elements width.  Only calculated once\n     * for the application.\n     */\n    // TODO(josephperrott): Revert to constants for ripple radius once 2018 Checkbox updates have\n    // landed.\n    /**\n     * Calculate the radius for the ripple based on the ripple elements width.  Only calculated once\n     * for the application.\n     * @private\n     * @return {?}\n     */\n    MatCheckbox.prototype._calculateRippleRadius = \n    // TODO(josephperrott): Revert to constants for ripple radius once 2018 Checkbox updates have\n    // landed.\n    /**\n     * Calculate the radius for the ripple based on the ripple elements width.  Only calculated once\n     * for the application.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!calculatedRippleRadius) {\n            /** @type {?} */\n            var rippleWidth = this._elementRef.nativeElement.querySelector('.mat-checkbox-ripple').clientWidth || 0;\n            calculatedRippleRadius = rippleWidth / 2;\n        }\n        this.ripple.radius = calculatedRippleRadius;\n    };\n    MatCheckbox.decorators = [\n        { type: Component, args: [{selector: 'mat-checkbox',\n                    template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label><div class=\\\"mat-checkbox-inner-container\\\" [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\"><input #input class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\" [id]=\\\"inputId\\\" [required]=\\\"required\\\" [checked]=\\\"checked\\\" [attr.value]=\\\"value\\\" [disabled]=\\\"disabled\\\" [attr.name]=\\\"name\\\" [tabIndex]=\\\"tabIndex\\\" [indeterminate]=\\\"indeterminate\\\" [attr.aria-label]=\\\"ariaLabel || null\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" [attr.aria-checked]=\\\"_getAriaChecked()\\\" (change)=\\\"_onInteractionEvent($event)\\\" (click)=\\\"_onInputClick($event)\\\"><div matRipple class=\\\"mat-checkbox-ripple\\\" [matRippleTrigger]=\\\"label\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\" [matRippleRadius]=\\\"20\\\" [matRippleCentered]=\\\"true\\\" [matRippleAnimation]=\\\"{enterDuration: 150}\\\"><div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div></div><div class=\\\"mat-checkbox-frame\\\"></div><div class=\\\"mat-checkbox-background\\\"><svg version=\\\"1.1\\\" focusable=\\\"false\\\" class=\\\"mat-checkbox-checkmark\\\" viewBox=\\\"0 0 24 24\\\" xml:space=\\\"preserve\\\"><path class=\\\"mat-checkbox-checkmark-path\\\" fill=\\\"none\\\" stroke=\\\"white\\\" d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/></svg><div class=\\\"mat-checkbox-mixedmark\\\"></div></div></div><span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\"><span style=\\\"display:none\\\">&nbsp;</span><ng-content></ng-content></span></label>\",\n                    styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.91026}50%{animation-timing-function:cubic-bezier(0,0,.2,.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0,0,0,1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(.4,0,1,1);stroke-dashoffset:0}to{stroke-dashoffset:-22.91026}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0,0,.2,.1);opacity:1;transform:rotate(0)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(.14,0,0,1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0,0,.2,.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(.14,0,0,1);opacity:1;transform:rotate(0)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}100%,32.8%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0,0,.2,.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}@media (-ms-high-contrast:active){.mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0,0,.2,.1),opacity 90ms cubic-bezier(0,0,.2,.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.91026;stroke-dasharray:22.91026;stroke-width:2.13333px}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0);border-radius:2px}@media (-ms-high-contrast:active){.mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0s mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0s mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0s mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0s mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0s mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:.5s linear 0s mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:.5s linear 0s mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:.3s linear 0s mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\"],\n                    exportAs: 'matCheckbox',\n                    host: {\n                        'class': 'mat-checkbox',\n                        '[id]': 'id',\n                        '[attr.tabindex]': 'null',\n                        '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                        '[class.mat-checkbox-checked]': 'checked',\n                        '[class.mat-checkbox-disabled]': 'disabled',\n                        '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                        '[class._mat-animation-noopable]': \"_animationMode === 'NoopAnimations'\",\n                    },\n                    providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                    inputs: ['disableRipple', 'color', 'tabIndex'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                },] },\n    ];\n    /** @nocollapse */\n    MatCheckbox.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: FocusMonitor },\n        { type: NgZone },\n        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatCheckbox.propDecorators = {\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        id: [{ type: Input }],\n        required: [{ type: Input }],\n        labelPosition: [{ type: Input }],\n        name: [{ type: Input }],\n        change: [{ type: Output }],\n        indeterminateChange: [{ type: Output }],\n        value: [{ type: Input }],\n        _inputElement: [{ type: ViewChild, args: ['input',] }],\n        ripple: [{ type: ViewChild, args: [MatRipple,] }],\n        checked: [{ type: Input }],\n        disabled: [{ type: Input }],\n        indeterminate: [{ type: Input }]\n    };\n    return MatCheckbox;\n}(_MatCheckboxMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MatCheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nvar MatCheckboxRequiredValidator = /** @class */ (function (_super) {\n    __extends(MatCheckboxRequiredValidator, _super);\n    function MatCheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MatCheckboxRequiredValidator.decorators = [\n        { type: Directive, args: [{\n                    selector: \"mat-checkbox[required][formControlName],\\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]\",\n                    providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': 'required ? \"\" : null' }\n                },] },\n    ];\n    return MatCheckboxRequiredValidator;\n}(CheckboxRequiredValidator));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatCheckboxModule = /** @class */ (function () {\n    function MatCheckboxModule() {\n    }\n    MatCheckboxModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule, MatRippleModule, MatCommonModule, ObserversModule],\n                    exports: [MatCheckbox, MatCheckboxRequiredValidator, MatCommonModule],\n                    declarations: [MatCheckbox, MatCheckboxRequiredValidator],\n                },] },\n    ];\n    return MatCheckboxModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, TransitionCheckState, MatCheckboxChange, MatCheckboxBase, _MatCheckboxMixinBase, MatCheckbox, MAT_CHECKBOX_CLICK_ACTION, MatCheckboxModule, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckboxRequiredValidator };\n//# sourceMappingURL=checkbox.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinColor, mixinDisableRipple, mixinTabIndex, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for radio components.\n/** @type {?} */\nvar nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n * @type {?}\n */\nvar MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatRadioGroup; }),\n    multi: true\n};\n/**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nvar  /**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nMatRadioChange = /** @class */ (function () {\n    function MatRadioChange(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n    return MatRadioChange;\n}());\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nvar MatRadioGroup = /** @class */ (function () {\n    function MatRadioGroup(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /**\n         * Selected value for the radio group.\n         */\n        this._value = null;\n        /**\n         * The HTML name attribute applied to radio buttons in this group.\n         */\n        this._name = \"mat-radio-group-\" + nextUniqueId++;\n        /**\n         * The currently selected radio button. Should match value.\n         */\n        this._selected = null;\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         */\n        this._labelPosition = 'after';\n        /**\n         * Whether the radio group is disabled.\n         */\n        this._disabled = false;\n        /**\n         * Whether the radio group is required.\n         */\n        this._required = false;\n        /**\n         * The method to be called in order to update ngModel\n         */\n        this._controlValueAccessorChangeFn = function () { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * \\@docs-private\n         */\n        this.onTouched = function () { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    Object.defineProperty(MatRadioGroup.prototype, \"name\", {\n        /** Name of the radio button group. All radio buttons inside this group will use this name. */\n        get: /**\n         * Name of the radio button group. All radio buttons inside this group will use this name.\n         * @return {?}\n         */\n        function () { return this._name; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._name = value;\n            this._updateRadioButtonNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"labelPosition\", {\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        get: /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         * @return {?}\n         */\n        function () {\n            return this._labelPosition;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._labelPosition = v === 'before' ? 'before' : 'after';\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"value\", {\n        /**\n         * Value for the radio-group. Should equal the value of the selected radio button if there is\n         * a corresponding radio button with a matching value. If there is not such a corresponding\n         * radio button, this value persists to be applied in case a new radio button is added with a\n         * matching value.\n         */\n        get: /**\n         * Value for the radio-group. Should equal the value of the selected radio button if there is\n         * a corresponding radio button with a matching value. If there is not such a corresponding\n         * radio button, this value persists to be applied in case a new radio button is added with a\n         * matching value.\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) {\n            if (this._value !== newValue) {\n                // Set this before proceeding to ensure no circular loop occurs with selection.\n                this._value = newValue;\n                this._updateSelectedRadioFromValue();\n                this._checkSelectedRadioButton();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatRadioGroup.prototype._checkSelectedRadioButton = /**\n     * @return {?}\n     */\n    function () {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    };\n    Object.defineProperty(MatRadioGroup.prototype, \"selected\", {\n        /**\n         * The currently selected radio button. If set to a new radio button, the radio group value\n         * will be updated to match the new selected button.\n         */\n        get: /**\n         * The currently selected radio button. If set to a new radio button, the radio group value\n         * will be updated to match the new selected button.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        set: /**\n         * @param {?} selected\n         * @return {?}\n         */\n        function (selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n            this._checkSelectedRadioButton();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"disabled\", {\n        /** Whether the radio group is disabled */\n        get: /**\n         * Whether the radio group is disabled\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"required\", {\n        /** Whether the radio group is required */\n        get: /**\n         * Whether the radio group is required\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = coerceBooleanProperty(value);\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.ngAfterContentInit = /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    function () {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    };\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    MatRadioGroup.prototype._touch = /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    function () {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatRadioGroup.prototype._updateRadioButtonNames = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._radios) {\n            this._radios.forEach(function (radio) {\n                radio.name = _this.name;\n            });\n        }\n    };\n    /** Updates the `selected` radio button from the internal _value state. */\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @private\n     * @return {?}\n     */\n    MatRadioGroup.prototype._updateSelectedRadioFromValue = /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // If the value already matches the selected radio, do nothing.\n        /** @type {?} */\n        var isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(function (radio) {\n                radio.checked = _this.value === radio.value;\n                if (radio.checked) {\n                    _this._selected = radio;\n                }\n            });\n        }\n    };\n    /** Dispatch change event with current selection and group value. */\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    MatRadioGroup.prototype._emitChangeEvent = /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    function () {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange((/** @type {?} */ (this._selected)), this._value));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioGroup.prototype._markRadiosForCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._radios) {\n            this._radios.forEach(function (radio) { return radio._markForCheck(); });\n        }\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    MatRadioGroup.prototype.writeValue = /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    };\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.registerOnChange = /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.registerOnTouched = /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.setDisabledState = /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    };\n    MatRadioGroup.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-radio-group',\n                    exportAs: 'matRadioGroup',\n                    providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                    host: {\n                        'role': 'radiogroup',\n                        'class': 'mat-radio-group',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatRadioGroup.ctorParameters = function () { return [\n        { type: ChangeDetectorRef }\n    ]; };\n    MatRadioGroup.propDecorators = {\n        change: [{ type: Output }],\n        _radios: [{ type: ContentChildren, args: [forwardRef(function () { return MatRadioButton; }), { descendants: true },] }],\n        name: [{ type: Input }],\n        labelPosition: [{ type: Input }],\n        value: [{ type: Input }],\n        selected: [{ type: Input }],\n        disabled: [{ type: Input }],\n        required: [{ type: Input }]\n    };\n    return MatRadioGroup;\n}());\n// Boilerplate for applying mixins to MatRadioButton.\n/**\n * \\@docs-private\n */\nvar  \n// Boilerplate for applying mixins to MatRadioButton.\n/**\n * \\@docs-private\n */\nMatRadioButtonBase = /** @class */ (function () {\n    function MatRadioButtonBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatRadioButtonBase;\n}());\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\n/** @type {?} */\nvar _MatRadioButtonMixinBase = mixinColor(mixinDisableRipple(mixinTabIndex(MatRadioButtonBase)), 'accent');\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nvar MatRadioButton = /** @class */ (function (_super) {\n    __extends(MatRadioButton, _super);\n    function MatRadioButton(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._changeDetector = _changeDetector;\n        _this._focusMonitor = _focusMonitor;\n        _this._radioDispatcher = _radioDispatcher;\n        _this._animationMode = _animationMode;\n        _this._uniqueId = \"mat-radio-\" + ++nextUniqueId;\n        /**\n         * The unique ID for the radio button.\n         */\n        _this.id = _this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        _this.change = new EventEmitter();\n        /**\n         * Whether this radio is checked.\n         */\n        _this._checked = false;\n        /**\n         * Value assigned to this radio.\n         */\n        _this._value = null;\n        /**\n         * Unregister function for _radioDispatcher\n         */\n        _this._removeUniqueSelectionListener = function () { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        _this.radioGroup = radioGroup;\n        _this._removeUniqueSelectionListener =\n            _radioDispatcher.listen(function (id, name) {\n                if (id !== _this.id && name === _this.name) {\n                    _this.checked = false;\n                }\n            });\n        return _this;\n    }\n    Object.defineProperty(MatRadioButton.prototype, \"checked\", {\n        /** Whether this radio button is checked. */\n        get: /**\n         * Whether this radio button is checked.\n         * @return {?}\n         */\n        function () { return this._checked; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var newCheckedState = coerceBooleanProperty(value);\n            if (this._checked !== newCheckedState) {\n                this._checked = newCheckedState;\n                if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                    this.radioGroup.selected = this;\n                }\n                else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                    // When unchecking the selected radio button, update the selected radio\n                    // property on the group.\n                    this.radioGroup.selected = null;\n                }\n                if (newCheckedState) {\n                    // Notify all radio buttons with the same name to un-check.\n                    this._radioDispatcher.notify(this.id, this.name);\n                }\n                this._changeDetector.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"value\", {\n        /** The value of this radio button. */\n        get: /**\n         * The value of this radio button.\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._value !== value) {\n                this._value = value;\n                if (this.radioGroup !== null) {\n                    if (!this.checked) {\n                        // Update checked when the value changed to match the radio group's value\n                        this.checked = this.radioGroup.value === value;\n                    }\n                    if (this.checked) {\n                        this.radioGroup.selected = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"labelPosition\", {\n        /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n        get: /**\n         * Whether the label should appear after or before the radio button. Defaults to 'after'\n         * @return {?}\n         */\n        function () {\n            return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._labelPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"disabled\", {\n        /** Whether the radio button is disabled. */\n        get: /**\n         * Whether the radio button is disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            /** @type {?} */\n            var newDisabledState = coerceBooleanProperty(value);\n            if (this._disabled !== newDisabledState) {\n                this._disabled = newDisabledState;\n                this._changeDetector.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"required\", {\n        /** Whether the radio button is required. */\n        get: /**\n         * Whether the radio button is required.\n         * @return {?}\n         */\n        function () {\n            return this._required || (this.radioGroup && this.radioGroup.required);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"inputId\", {\n        /** ID of the native input element inside `<mat-radio-button>` */\n        get: /**\n         * ID of the native input element inside `<mat-radio-button>`\n         * @return {?}\n         */\n        function () { return (this.id || this._uniqueId) + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    /** Focuses the radio button. */\n    /**\n     * Focuses the radio button.\n     * @return {?}\n     */\n    MatRadioButton.prototype.focus = /**\n     * Focuses the radio button.\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard');\n    };\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    MatRadioButton.prototype._markForCheck = /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    function () {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(function (focusOrigin) {\n            if (!focusOrigin && _this.radioGroup) {\n                _this.radioGroup._touch();\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    };\n    /** Dispatch change event with current value. */\n    /**\n     * Dispatch change event with current value.\n     * @private\n     * @return {?}\n     */\n    MatRadioButton.prototype._emitChangeEvent = /**\n     * Dispatch change event with current value.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this.change.emit(new MatRadioChange(this, this._value));\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype._isRippleDisabled = /**\n     * @return {?}\n     */\n    function () {\n        return this.disableRipple || this.disabled;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatRadioButton.prototype._onInputClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    MatRadioButton.prototype._onInputChange = /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        /** @type {?} */\n        var groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            this.radioGroup._touch();\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    };\n    MatRadioButton.decorators = [\n        { type: Component, args: [{selector: 'mat-radio-button',\n                    template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label><div class=\\\"mat-radio-container\\\"><div class=\\\"mat-radio-outer-circle\\\"></div><div class=\\\"mat-radio-inner-circle\\\"></div><div mat-ripple class=\\\"mat-radio-ripple\\\" [matRippleTrigger]=\\\"label\\\" [matRippleDisabled]=\\\"_isRippleDisabled()\\\" [matRippleCentered]=\\\"true\\\" [matRippleRadius]=\\\"20\\\" [matRippleAnimation]=\\\"{enterDuration: 150}\\\"><div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div></div><input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\" [id]=\\\"inputId\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [tabIndex]=\\\"tabIndex\\\" [attr.name]=\\\"name\\\" [required]=\\\"required\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" [attr.aria-describedby]=\\\"ariaDescribedby\\\" (change)=\\\"_onInputChange($event)\\\" (click)=\\\"_onInputClick($event)\\\"></div><div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\"><span style=\\\"display:none\\\">&nbsp;</span><ng-content></ng-content></div></label>\",\n                    styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(.5)}@media (-ms-high-contrast:active){.mat-radio-checked .mat-radio-inner-circle{border:solid 10px}}.mat-radio-label-content{display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple,.mat-radio-persistent-ripple{opacity:0}@media (hover:none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}\"],\n                    inputs: ['color', 'disableRipple', 'tabIndex'],\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRadioButton',\n                    host: {\n                        'class': 'mat-radio-button',\n                        '[class.mat-radio-checked]': 'checked',\n                        '[class.mat-radio-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        // Needs to be -1 so the `focus` event still fires.\n                        '[attr.tabindex]': '-1',\n                        '[attr.id]': 'id',\n                        // Note: under normal conditions focus shouldn't land on this element, however it may be\n                        // programmatically set, for example inside of a focus trap, in this case we want to forward\n                        // the focus to the native element.\n                        '(focus)': '_inputElement.nativeElement.focus()',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatRadioButton.ctorParameters = function () { return [\n        { type: MatRadioGroup, decorators: [{ type: Optional }] },\n        { type: ElementRef },\n        { type: ChangeDetectorRef },\n        { type: FocusMonitor },\n        { type: UniqueSelectionDispatcher },\n        { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n    ]; };\n    MatRadioButton.propDecorators = {\n        id: [{ type: Input }],\n        name: [{ type: Input }],\n        ariaLabel: [{ type: Input, args: ['aria-label',] }],\n        ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n        ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n        checked: [{ type: Input }],\n        value: [{ type: Input }],\n        labelPosition: [{ type: Input }],\n        disabled: [{ type: Input }],\n        required: [{ type: Input }],\n        change: [{ type: Output }],\n        _inputElement: [{ type: ViewChild, args: ['input',] }]\n    };\n    return MatRadioButton;\n}(_MatRadioButtonMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatRadioModule = /** @class */ (function () {\n    function MatRadioModule() {\n    }\n    MatRadioModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule, MatRippleModule, MatCommonModule],\n                    exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                    declarations: [MatRadioGroup, MatRadioButton],\n                },] },\n    ];\n    return MatRadioModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatRadioModule, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioChange, MatRadioGroup, MatRadioButtonBase, _MatRadioButtonMixinBase, MatRadioButton };\n//# sourceMappingURL=radio.es5.js.map\n","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/multiselect/multiselect\"));","import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[columnDef]'\r\n})\r\nexport class ColumnDefDirective {\r\n  @Input('columnDef') public name: string;\r\n\r\n  public constructor(public template: TemplateRef<unknown>) {}\r\n\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[headerColumnDef]'\r\n})\r\nexport class HeaderColumnDefDirective {\r\n  public constructor(public template: TemplateRef<unknown>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[rowExpansionDef]'\r\n})\r\nexport class RowExpansionDefDirective {\r\n  public constructor(public template: TemplateRef<unknown>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[tableActionsDef]'\r\n})\r\nexport class TableActionsDefDirective {\r\n  public constructor(public template: TemplateRef<unknown>) {}\r\n}\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { LabelValue } from '../../types/label-value.interface';\r\nimport { ListUtils } from '../../utils/list-utils';\r\nimport { ObjectUtils } from '../../utils/object-utils';\r\nimport { StringUtils } from '../../utils/string-utils';\r\n\r\nexport enum ColumnAlignment {\r\n  CENTER = 'center',\r\n  LEFT = 'left',\r\n  RIGHT = 'right'\r\n}\r\n\r\nexport interface Column {\r\n  field: string;\r\n  alignment?: ColumnAlignment;\r\n  referenceData?: LabelValue<unknown>[];\r\n  translateKey?: string;\r\n  width?: string;\r\n}\r\n\r\nexport interface ColumnWithFilter {\r\n  _selectedReferenceData?: unknown[];\r\n}\r\n\r\nexport interface ColumnWithSort {\r\n  _sorted?: number;\r\n}\r\n\r\nexport interface DataWithCheck {\r\n  _checked: boolean;\r\n}\r\n\r\nexport interface DataWithId {\r\n  _id: string;\r\n}\r\n\r\nexport class TableDataSource<T extends Object> {\r\n  private static readonly DEFAULT_ITEMS_PER_PAGE: number = 20;\r\n\r\n  public readonly allowMultiSelect: boolean;\r\n  public readonly allowResizableColumns: boolean;\r\n  public readonly columns: (Column & ColumnWithFilter & ColumnWithSort)[];\r\n  public readonly enablePaginator: boolean;\r\n  public readonly enableSelection: boolean;\r\n  public readonly itemsPerPage: number;\r\n  public readonly customGlobalFilter?: (currentData: T, globalSearchText: string | undefined) => boolean;\r\n  public readonly customSort?: (data1: T, data2: T, field: string) => number;\r\n\r\n  public readonly data$: Observable<T[]>;\r\n\r\n  public isLoading: boolean;\r\n\r\n  private readonly dataSubject: BehaviorSubject<T[]>;\r\n\r\n  private counter: number;\r\n  private _data: (T & DataWithCheck & DataWithId)[];\r\n  private _dataSelection: (T & DataWithCheck & DataWithId)[];\r\n  private _dataSrc: (T & DataWithCheck & DataWithId)[];\r\n\r\n  public constructor({\r\n    columns,\r\n    allowMultiSelect,\r\n    allowResizableColumns,\r\n    data,\r\n    enablePaginator,\r\n    enableSelection,\r\n    itemsPerPage,\r\n    customGlobalFilter,\r\n    customSort\r\n  }: {\r\n    columns: (Column & ColumnWithFilter & ColumnWithSort)[];\r\n    allowMultiSelect?: boolean;\r\n    allowResizableColumns?: boolean;\r\n    data?: T[];\r\n    enablePaginator?: boolean;\r\n    enableSelection?: boolean;\r\n    itemsPerPage?: number;\r\n    customGlobalFilter?: (currentData: T, globalSearchText: string | undefined) => boolean;\r\n    customSort?: (data1: T, data2: T, field: string) => number;\r\n  }) {\r\n    this.allowMultiSelect = ObjectUtils.isDefined(allowMultiSelect) ? (allowMultiSelect as boolean) : true;\r\n    this.allowResizableColumns = ObjectUtils.isDefined(allowResizableColumns)\r\n      ? (allowResizableColumns as boolean)\r\n      : true;\r\n    this.columns = columns;\r\n    this.enablePaginator = ObjectUtils.isDefined(enablePaginator) ? (enablePaginator as boolean) : true;\r\n    this.enableSelection = ObjectUtils.isDefined(enableSelection) ? (enableSelection as boolean) : true;\r\n    this.itemsPerPage = itemsPerPage || TableDataSource.DEFAULT_ITEMS_PER_PAGE;\r\n    this.customGlobalFilter = customGlobalFilter;\r\n    this.customSort = customSort;\r\n\r\n    this.isLoading = false;\r\n\r\n    this.counter = 0;\r\n    this._dataSelection = [];\r\n\r\n    this._setData(data ? data.map((rawData) => this.createData(rawData)) : []);\r\n\r\n    this.dataSubject = new BehaviorSubject<T[]>(this._data);\r\n    this.data$ = this.dataSubject.asObservable();\r\n\r\n    this.update();\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public get data(): (T & DataWithCheck & DataWithId)[] {\r\n    return this._data;\r\n  }\r\n\r\n  public get dataCount(): number {\r\n    return this._dataSrc.length;\r\n  }\r\n\r\n  public get dataSelection(): (T & DataWithCheck & DataWithId)[] {\r\n    return this._dataSelection;\r\n  }\r\n\r\n  public set dataSelection(dataSelection: (T & DataWithCheck & DataWithId)[]) {\r\n    // FIXME: remove type assertion (1) when primeng dependency is removed\r\n    // this._dataSelection = this.allowMultiSelect\r\n    //   ? dataSelection\r\n    //   : dataSelection && !ListUtils.isEmpty(dataSelection)\r\n    //   ? [dataSelection[0]]\r\n    //   : [];\r\n    this._dataSelection = this.allowMultiSelect\r\n      ? dataSelection\r\n      : dataSelection\r\n      ? [(dataSelection as unknown) as T & DataWithCheck & DataWithId] // 1\r\n      : [];\r\n  }\r\n\r\n  public get dataSelectionCount(): number {\r\n    return this.dataSelection.length;\r\n  }\r\n\r\n  public get dataSrc(): (T & DataWithCheck & DataWithId)[] {\r\n    return this._dataSrc;\r\n  }\r\n\r\n  public get hasData(): boolean {\r\n    return this._dataSrc.length > 0;\r\n  }\r\n\r\n  public get hasDataSelection(): boolean {\r\n    return this._dataSelection.length > 0;\r\n  }\r\n\r\n  public get sanitizedData(): T[] {\r\n    return this._data.map((data) => {\r\n      const sanitizedData = { ...data };\r\n      delete sanitizedData._checked;\r\n      delete sanitizedData._id;\r\n\r\n      return sanitizedData;\r\n    });\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public addData(dataToAdd: T[]): void {\r\n    this._setData(this._dataSrc.concat(dataToAdd.map((rawData) => this.createData(rawData))));\r\n\r\n    this.update();\r\n  }\r\n\r\n  public addReferenceDataToColumn(field: string, referenceData: LabelValue<unknown>[]): void {\r\n    (this.columns.find((column) => column.field === field) as Column).referenceData = referenceData;\r\n\r\n    this.update();\r\n  }\r\n\r\n  public addContentFilterToColumn(field: string): void {\r\n    let filterValues: string[] = this.dataSrc.map((data) => data[field] as string);\r\n    // Removing duplicate\r\n    filterValues = [...new Set(filterValues)].sort();\r\n\r\n    const filter: LabelValue<string>[] = filterValues.map((value): LabelValue<string> => ({ value, label: value }));\r\n\r\n    this.addReferenceDataToColumn(field, filter);\r\n  }\r\n\r\n  public deleteData(dataToDelete: (T & DataWithCheck & DataWithId)[]): void {\r\n    const dataToDeleteIds = dataToDelete.map((data) => data._id);\r\n    this._setData(this._dataSrc.filter((data) => !dataToDeleteIds.includes(data._id)));\r\n\r\n    this.update();\r\n  }\r\n\r\n  public deleteDataSelection(): void {\r\n    if (!ListUtils.isEmpty(this.dataSelection)) {\r\n      const dataToDelete = [...this.dataSelection];\r\n      this.dataSelection = [];\r\n\r\n      this.deleteData(dataToDelete);\r\n    }\r\n  }\r\n\r\n  public filterData(searchText?: string): void {\r\n    // Global filter\r\n    if (!searchText || StringUtils.isEmpty(searchText)) {\r\n      this._data = [...this._dataSrc];\r\n    } else if (this.customGlobalFilter) {\r\n      this._data = this._dataSrc.filter((data) => {\r\n        const customFilterMethod = this.customGlobalFilter as Function;\r\n\r\n        return customFilterMethod(data, searchText);\r\n      });\r\n    } else {\r\n      const capitalizedSearchText = searchText.toUpperCase();\r\n      this._data = this._dataSrc.filter((data) =>\r\n        this.columns.some(\r\n          (column) =>\r\n            typeof ((data as unknown) as { [key: string]: unknown })[column.field] === 'string' &&\r\n            (((data as unknown) as { [key: string]: unknown })[column.field] as string)\r\n              .toUpperCase()\r\n              .includes(capitalizedSearchText)\r\n        )\r\n      );\r\n    }\r\n\r\n    // Columns reference data\r\n    this._data = this._data.filter((data) => {\r\n      const columnsWithReferenceData = this.columns.filter(\r\n        (column) => column._selectedReferenceData && !ListUtils.isEmpty(column._selectedReferenceData)\r\n      );\r\n\r\n      return (\r\n        ListUtils.isEmpty(columnsWithReferenceData) ||\r\n        columnsWithReferenceData.every((column) =>\r\n          (column._selectedReferenceData as unknown[])\r\n            .map(\r\n              (selectedReferenceData) =>\r\n                ((column.referenceData as LabelValue<unknown>[]).find(\r\n                  (columnReferenceData) => columnReferenceData.value === selectedReferenceData\r\n                ) as LabelValue<unknown>).label\r\n            )\r\n            .includes(((data as unknown) as { [key: string]: unknown })[column.field] as string)\r\n        )\r\n      );\r\n    });\r\n\r\n    this.update();\r\n  }\r\n\r\n  public replaceData(dataToRemove: T & DataWithCheck & DataWithId, dataToAdd: T): void {\r\n    const createdData = this.createData(dataToAdd);\r\n    const aux = (list: (T & DataWithCheck & DataWithId)[]) => {\r\n      const oldDataIndex = list.findIndex((data) => data._id === dataToRemove._id);\r\n      if (oldDataIndex !== -1) {\r\n        list.splice(oldDataIndex, 1, createdData);\r\n      }\r\n    };\r\n\r\n    aux(this._dataSrc);\r\n    aux(this._data);\r\n\r\n    this.update();\r\n  }\r\n\r\n  public setData(newData: T[]): void {\r\n    // Clear prior selection\r\n    this.columns.forEach((column) => {\r\n      column._selectedReferenceData = [];\r\n    });\r\n    this._dataSelection = [];\r\n\r\n    this._setData(newData.map((rawData) => this.createData(rawData)));\r\n\r\n    this.update();\r\n  }\r\n\r\n  public update(): void {\r\n    this.dataSubject.next(this._data);\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  private createData(data: T): T & DataWithCheck & DataWithId {\r\n    return { ...data, _checked: false, _id: this.generateId() };\r\n  }\r\n\r\n  private generateId(): string {\r\n    return (this.counter++).toString();\r\n  }\r\n\r\n  private _setData(newData: (T & DataWithCheck & DataWithId)[]): void {\r\n    this._dataSrc = newData;\r\n    this._data = [...this._dataSrc];\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"table-header\\\">\\r\\n  <div class=\\\"table-global-filter\\\" *ngIf=\\\"dataSource.dataCount > 0\\\">\\r\\n    <label><i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i></label>\\r\\n\\r\\n    <input\\r\\n      type=\\\"text\\\"\\r\\n      placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n      (input)=\\\"onUpdateGlobalFilter($event.target.value)\\\"\\r\\n    />\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"table-actions\\\" *ngIf=\\\"actionsTemplate\\\">\\r\\n    <ng-container\\r\\n      *ngTemplateOutlet=\\\"actionsTemplate; context: { selectedData: dataSource.dataSelection }\\\"\\r\\n    ></ng-container>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <i\\r\\n      class=\\\"fa fa-fw fa-filter filter-toggle aw-icon aw-icon-with-border\\\"\\r\\n      aria-hidden=\\\"true\\\"\\r\\n      (click)=\\\"toggleColumnFilterVisibility()\\\"\\r\\n      [ngClass]=\\\"{ active: showColumnFilter }\\\"\\r\\n      *ngIf=\\\"hasColumnsWithReferenceData && dataSource.dataCount > 0\\\"\\r\\n    ></i>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<p-table\\r\\n  class=\\\"table\\\"\\r\\n  dataKey=\\\"_id\\\"\\r\\n  [columns]=\\\"dataSource.columns\\\"\\r\\n  [customSort]=\\\"enableCustomSort\\\"\\r\\n  [paginator]=\\\"dataSource.enablePaginator\\\"\\r\\n  [resizableColumns]=\\\"dataSource.allowResizableColumns\\\"\\r\\n  [rows]=\\\"dataSource.itemsPerPage\\\"\\r\\n  [selectionMode]=\\\"dataSource.enableSelection ? (dataSource.allowMultiSelect ? 'multiple' : 'single') : null\\\"\\r\\n  [value]=\\\"dataSource.data$ | async\\\"\\r\\n  [(selection)]=\\\"dataSource.dataSelection\\\"\\r\\n  (onRowSelect)=\\\"dataSource.enableSelection && selectRow($event)\\\"\\r\\n  (onRowUnselect)=\\\"dataSource.enableSelection && unselectRow($event)\\\"\\r\\n  (onSort)=\\\"onSortTable($event)\\\"\\r\\n  (sortFunction)=\\\"sort($event)\\\"\\r\\n  [ngClass]=\\\"{ 'no-paginator': dataSource.dataCount <= dataSource.itemsPerPage }\\\"\\r\\n>\\r\\n  <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n    <span *ngIf=\\\"!dataSource.isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n    <div *ngIf=\\\"dataSource.isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n      <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n      <div class=\\\"lds-hourglass\\\"></div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n    <ng-container *ngIf=\\\"headerTemplate; else fallbackBlock\\\">\\r\\n      <ng-container *ngTemplateOutlet=\\\"headerTemplate\\\"></ng-container>\\r\\n    </ng-container>\\r\\n    <ng-template #fallbackBlock>\\r\\n      <tr>\\r\\n        <th class=\\\"checkbox-col\\\" *ngIf=\\\"dataSource.enableSelection && dataSource.allowMultiSelect\\\">\\r\\n          <mat-checkbox\\r\\n            [checked]=\\\"dataSource.dataSelectionCount === dataSource.dataCount\\\"\\r\\n            [indeterminate]=\\\"dataSource.dataSelectionCount < dataSource.dataCount && dataSource.dataSelectionCount > 0\\\"\\r\\n            (click)=\\\"toggleAllRows($event)\\\"\\r\\n            *ngIf=\\\"dataSource.dataCount > 0\\\"\\r\\n          ></mat-checkbox>\\r\\n        </th>\\r\\n        <th class=\\\"checkbox-col\\\" *ngIf=\\\"dataSource.enableSelection && !dataSource.allowMultiSelect\\\"></th>\\r\\n\\r\\n        <th\\r\\n          class=\\\"col\\\"\\r\\n          pResizableColumn\\r\\n          [pSortableColumn]=\\\"col\\\"\\r\\n          [ngStyle]=\\\"{ width: col.width }\\\"\\r\\n          *ngFor=\\\"let col of columns\\\"\\r\\n        >\\r\\n          <div>\\r\\n            <span class=\\\"label\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n              {{ col.translateKey || col.field | translate }}\\r\\n            </span>\\r\\n\\r\\n            <i\\r\\n              class=\\\"ui-sortable-column-icon pi pi-fw\\\"\\r\\n              [ngClass]=\\\"{\\r\\n                'pi-sort-up': col['_sorted'] === 1,\\r\\n                'pi-sort-down': col['_sorted'] === -1\\r\\n              }\\\"\\r\\n            ></i>\\r\\n          </div>\\r\\n        </th>\\r\\n\\r\\n        <th class=\\\"row-expansion-col\\\" *ngIf=\\\"rowExpansionTemplate\\\"></th>\\r\\n      </tr>\\r\\n\\r\\n      <tr *ngIf=\\\"showColumnFilter\\\">\\r\\n        <th class=\\\"checkbox-col\\\" *ngIf=\\\"dataSource.enableSelection\\\">\\r\\n          <i class=\\\"fa fa-fw fa-filter filter-toggle\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </th>\\r\\n\\r\\n        <th *ngFor=\\\"let col of columns\\\">\\r\\n          <p-multiSelect\\r\\n            appendTo=\\\"body\\\"\\r\\n            [defaultLabel]=\\\"'all' | translate\\\"\\r\\n            [options]=\\\"col.referenceData\\\"\\r\\n            [(ngModel)]=\\\"col._selectedReferenceData\\\"\\r\\n            (onChange)=\\\"onSelectColumnReferenceData()\\\"\\r\\n            *ngIf=\\\"col.referenceData\\\"\\r\\n          ></p-multiSelect>\\r\\n        </th>\\r\\n\\r\\n        <th class=\\\"row-expansion-col\\\" *ngIf=\\\"rowExpansionTemplate\\\"></th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-expanded=\\\"expanded\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n    <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n      <td class=\\\"checkbox-col\\\" *ngIf=\\\"dataSource.enableSelection && dataSource.allowMultiSelect\\\">\\r\\n        <mat-checkbox [(ngModel)]=\\\"rowData['_checked']\\\" (click)=\\\"onClickCheckbox($event)\\\"></mat-checkbox>\\r\\n      </td>\\r\\n      <td class=\\\"checkbox-col\\\" *ngIf=\\\"dataSource.enableSelection && !dataSource.allowMultiSelect\\\">\\r\\n        <mat-radio-group [(ngModel)]=\\\"rowData['_checked']\\\">\\r\\n          <mat-radio-button [value]=\\\"true\\\" (click)=\\\"onClickCheckbox($event)\\\"></mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n      </td>\\r\\n\\r\\n      <td class=\\\"ui-resizable-column\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\" *ngFor=\\\"let col of columns\\\">\\r\\n        <ng-container *ngIf=\\\"bodyTemplates[col.field]; else fallbackBlock\\\">\\r\\n          <ng-container\\r\\n            *ngTemplateOutlet=\\\"bodyTemplates[col.field]; context: { cellData: rowData[col.field], rowData: rowData }\\\"\\r\\n          ></ng-container>\\r\\n        </ng-container>\\r\\n        <ng-template #fallbackBlock>{{ rowData[col.field] }}</ng-template>\\r\\n      </td>\\r\\n\\r\\n      <td class=\\\"row-expansion-toggler\\\" *ngIf=\\\"rowExpansionTemplate\\\">\\r\\n        <a href=\\\"#\\\" [pRowToggler]=\\\"rowData\\\" (click)=\\\"onClickRowToggler($event, rowData)\\\">\\r\\n          <i class=\\\"material-icons\\\" [ngClass]=\\\"{ expanded: expanded }\\\">chevron_right</i>\\r\\n        </a>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-template pTemplate=\\\"rowexpansion\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n    <tr>\\r\\n      <td [attr.colspan]=\\\"columns.length + 2\\\">\\r\\n        <ng-container *ngTemplateOutlet=\\\"rowExpansionTemplate; context: { rowData: rowData }\\\"></ng-container>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </ng-template>\\r\\n</p-table>\\r\\n\"","module.exports = \":host .table-header {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  margin-bottom: calc(8px / 2); }\\n  :host .table-header .filter-toggle {\\n    font-size: 1.125rem;\\n    line-height: 1.75rem;\\n    margin-left: 8px;\\n    width: 1.75rem; }\\n  :host .table-header .table-global-filter {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: baseline;\\n    flex-grow: 1; }\\n  :host .table-header .table-global-filter input {\\n      background-color: transparent;\\n      border-bottom-color: #595959;\\n      border-left-color: transparent;\\n      border-radius: 0;\\n      border-right-color: transparent;\\n      border-style: solid;\\n      border-top-color: transparent;\\n      border-width: 1px;\\n      color: inherit;\\n      font-family: inherit;\\n      font-size: inherit;\\n      font-weight: inherit;\\n      line-height: 1.42857143;\\n      outline: none;\\n      padding: 2px 0 4px 0;\\n      transition: border-bottom-color 0.25s ease-in-out;\\n      width: 15rem;\\n      transition: border-bottom-color 0.25s ease-in-out, width 0.5s ease; }\\n  :host .table-header .table-global-filter input::-webkit-input-placeholder {\\n        color: #595959;\\n        font-weight: 400; }\\n  :host .table-header .table-global-filter input:-moz-placeholder {\\n        color: #595959;\\n        font-weight: 400; }\\n  :host .table-header .table-global-filter input::-moz-placeholder {\\n        color: #595959;\\n        font-weight: 400; }\\n  :host .table-header .table-global-filter input:-ms-input-placeholder {\\n        color: #595959;\\n        font-weight: 400; }\\n  :host .table-header .table-global-filter input:focus {\\n        border-bottom-color: #01579b;\\n        outline: none;\\n        width: 100%; }\\n  :host .table-header .table-global-filter + .table-actions {\\n      flex-grow: 0; }\\n  :host .table-header .table-actions {\\n    flex-grow: 1;\\n    justify-content: flex-end; }\\n  :host .table td,\\n:host .table th {\\n  text-align: left; }\\n  :host .table td {\\n  border-left-color: transparent;\\n  border-right-color: transparent; }\\n  :host .table td.row-expansion-toggler {\\n    padding: 0; }\\n  :host .table td.row-expansion-toggler a {\\n      align-items: center;\\n      display: flex;\\n      flex-direction: row;\\n      justify-content: center; }\\n  :host .table td.row-expansion-toggler a i {\\n        transition: 0.1s ease-in-out; }\\n  :host .table td.row-expansion-toggler a i.expanded {\\n          -webkit-transform: rotate(90deg);\\n                  transform: rotate(90deg); }\\n  :host .table th {\\n  border-bottom-color: transparent;\\n  border-top-color: transparent; }\\n  :host .table th.checkbox-col {\\n    width: 2.75rem; }\\n  :host .table th.col > div {\\n    display: flex;\\n    flex-direction: row;\\n    white-space: nowrap; }\\n  :host .table th.col > div > .label {\\n      flex-grow: 1; }\\n  :host .table th.col > div .pi {\\n      display: none; }\\n  :host .table th.col > div .pi.pi-sort-down, :host .table th.col > div .pi.pi-sort-up {\\n        display: initial; }\\n  :host .table .checkbox-col > *:not(mat-radio-group) {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center; }\\n  :host .table .row-expansion-col {\\n  width: 2.75rem; }\\n  :host .aw-table-loading-indicator {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: flex-start;\\n  margin-top: 8px;\\n  min-height: 40px;\\n  position: relative;\\n  width: 8rem; }\\n  :host .aw-table-loading-indicator .loading-message {\\n    margin-right: calc(8px * 2); }\\n  ::ng-deep .table-header .table-actions {\\n  display: flex;\\n  flex-direction: row; }\\n  ::ng-deep .table-header .table-actions .aw-btn {\\n    margin-left: 8px; }\\n  ::ng-deep .table-header .table-actions button {\\n    margin-right: 8px; }\\n  ::ng-deep .table-header .table-actions button:last-of-type {\\n      margin-right: 0; }\\n  ::ng-deep .table.no-paginator .ui-paginator {\\n  display: none; }\\n  ::ng-deep .table .ui-paginator {\\n  border-color: transparent; }\\n  ::ng-deep .table .ui-paginator .ui-paginator-pages .ui-paginator-page.ui-state-active {\\n    background-color: #01579b !important; }\\n  ::ng-deep .table tbody tr {\\n  background-color: #fff !important; }\\n  ::ng-deep .table tbody tr:last-of-type td {\\n    border-bottom-color: #f4f4f4 !important; }\\n  ::ng-deep .table tbody tr:hover {\\n    background-color: #f2f2f2 !important;\\n    color: #000 !important; }\\n  ::ng-deep .table tbody tr.ui-state-highlight {\\n    background-color: #dbdada !important;\\n    color: #000 !important; }\\n  ::ng-deep .table tbody tr:focus {\\n    background-color: initial;\\n    outline: none; }\\n  ::ng-deep .table tbody tr td {\\n    border-bottom-color: #f4f4f4 !important;\\n    border-top-color: #f4f4f4 !important; }\\n  ::ng-deep .table tbody tr td:not(.row-expansion-toggler) a:hover {\\n      text-decoration: underline; }\\n  ::ng-deep .table tbody tr td a {\\n      color: #01579b !important;\\n      cursor: pointer; }\\n  ::ng-deep .table thead tr th {\\n  border-left-color: #f4f4f4 !important;\\n  border-right-color: #f4f4f4 !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  QueryList,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '../../utils/object-utils';\r\n\r\nimport { ColumnDefDirective } from './column-def.directive';\r\nimport { HeaderColumnDefDirective } from './header-column-def.directive';\r\nimport { RowExpansionDefDirective } from './row-expansion-def.directive';\r\nimport { TableActionsDefDirective } from './table-actions-def.directive';\r\nimport { Column, ColumnWithSort, DataWithCheck, DataWithId, TableDataSource as DataSource } from './table-data-source';\r\n\r\ninterface SortEvent<T> {\r\n  data: T[];\r\n  field: Column;\r\n  order: number;\r\n}\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'a-table',\r\n  styleUrls: ['./table.component.scss'],\r\n  templateUrl: './table.component.html'\r\n})\r\nexport class TableComponent<T extends DataWithId & DataWithCheck> implements AfterContentInit, OnChanges {\r\n  private static readonly SEARCH_TEXT_DEBOUNCE_TIME: number = 250;\r\n\r\n  @ContentChild(TableActionsDefDirective)\r\n  public actionsDef: TableActionsDefDirective;\r\n\r\n  @ContentChildren(ColumnDefDirective)\r\n  public columnsDef: QueryList<ColumnDefDirective>;\r\n\r\n  @ContentChild(HeaderColumnDefDirective)\r\n  public headerColumnDef: HeaderColumnDefDirective;\r\n\r\n  @ContentChild(RowExpansionDefDirective)\r\n  public rowExpansionDef: RowExpansionDefDirective;\r\n\r\n  @Input()\r\n  public dataSource: DataSource<T>;\r\n\r\n  @Output()\r\n  public onRowSelect: EventEmitter<{ event: Event; selectedData: T; index: number }>;\r\n\r\n  @Output()\r\n  public onRowUnselect: EventEmitter<{ event: Event; selectedData: T }>;\r\n\r\n  @Output()\r\n  public onRowTogglerClick: EventEmitter<{ event: Event; selectedData: T }>;\r\n\r\n  @ViewChild(Table)\r\n  public table: Table;\r\n\r\n  public enableCustomSort: boolean;\r\n  public showColumnFilter: boolean;\r\n  public showColumnFilterToggle: boolean;\r\n\r\n  public actionsTemplate: TemplateRef<unknown> | undefined;\r\n  public bodyTemplates: { [column: string]: TemplateRef<unknown> };\r\n  public headerTemplate: TemplateRef<unknown> | undefined;\r\n  public rowExpansionTemplate: TemplateRef<unknown> | undefined;\r\n\r\n  private readonly _unsubscribe: Subject<void>;\r\n  private dataSubscription: Subscription;\r\n\r\n  private searchTextChanged: Subject<string>;\r\n\r\n  public constructor() {\r\n    this._unsubscribe = new Subject<void>();\r\n\r\n    this.init();\r\n    this.registerSearchTextObservable();\r\n  }\r\n\r\n  public ngAfterContentInit(): void {\r\n    this.initTemplates();\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.dataSource) {\r\n      if (this.dataSubscription) {\r\n        // Remove previous subscription\r\n        this.dataSubscription.unsubscribe();\r\n      }\r\n      this.dataSubscription = this.dataSource.data$.pipe(takeUntil(this._unsubscribe)).subscribe((data) => {\r\n        // Reset pagination if page is after last element\r\n        if (data.length <= this.table.first) {\r\n          this.table.first = 0;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public get hasColumnsWithReferenceData(): boolean {\r\n    return this.dataSource.columns.some((column) => ObjectUtils.isDefined(column.referenceData));\r\n  }\r\n\r\n  public onClickCheckbox(event: Event): void {\r\n    event.preventDefault();\r\n  }\r\n\r\n  public onClickRowToggler(event: Event, selectedData: T): void {\r\n    this.onRowTogglerClick.emit({ event, selectedData });\r\n  }\r\n\r\n  public onSelectColumnReferenceData(): void {\r\n    this.dataSource.filterData();\r\n  }\r\n\r\n  public onSortTable(event: { field: { field: string }; order: number }): void {\r\n    this.dataSource.columns.forEach((column) => {\r\n      column._sorted = 0;\r\n    });\r\n\r\n    const sortedColumn = this.dataSource.columns.find((column) => column.field === event.field.field);\r\n    (sortedColumn as ColumnWithSort)._sorted = event.order;\r\n  }\r\n\r\n  public onUpdateGlobalFilter(searchText: string): void {\r\n    this.searchTextChanged.next(searchText);\r\n  }\r\n\r\n  public selectRow(event: { originalEvent: Event; data: T; index: number }): void {\r\n    if (!this.dataSource.allowMultiSelect) {\r\n      this.updateAllRowsCheckProperty(false);\r\n    }\r\n\r\n    event.data._checked = true;\r\n\r\n    this.onRowSelect.emit({ event: event.originalEvent, selectedData: event.data, index: event.index });\r\n  }\r\n\r\n  public sort(event: SortEvent<T>) {\r\n    const defaultSortMethod = (data1: T, data2: T, field: string) => {\r\n      const value1 = data1[field];\r\n      const value2 = data2[field];\r\n\r\n      let result: number;\r\n\r\n      if (!ObjectUtils.isDefined(value1) && ObjectUtils.isDefined(value2)) {\r\n        result = -1;\r\n      } else if (ObjectUtils.isDefined(value1) && !ObjectUtils.isDefined(value2)) {\r\n        result = 1;\r\n      } else if (!ObjectUtils.isDefined(value1) && !ObjectUtils.isDefined(value2)) {\r\n        result = 0;\r\n      } else if (typeof value1 === 'string' && typeof value2 === 'string') {\r\n        result = value1.localeCompare(value2);\r\n      } else {\r\n        result = JSON.stringify(value1).localeCompare(JSON.stringify(value2));\r\n      }\r\n\r\n      return result;\r\n    };\r\n\r\n    const sortMethod = this.dataSource.customSort || defaultSortMethod;\r\n\r\n    event.data.sort((data1, data2) => event.order * sortMethod(data1, data2, event.field.field));\r\n  }\r\n\r\n  public toggleAllRows(event: Event): void {\r\n    event.preventDefault();\r\n\r\n    if (this.dataSource.dataSelectionCount > 0) {\r\n      this.updateAllRowsCheckProperty(false);\r\n\r\n      this.dataSource.dataSelection = [];\r\n    } else {\r\n      this.updateAllRowsCheckProperty(true);\r\n\r\n      this.dataSource.dataSelection = this.dataSource.data;\r\n    }\r\n  }\r\n\r\n  public toggleColumnFilterVisibility(): void {\r\n    this.showColumnFilter = !this.showColumnFilter;\r\n  }\r\n\r\n  public unselectRow(event: { originalEvent: Event; data: T; index: number }): void {\r\n    event.data._checked = false;\r\n\r\n    this.onRowUnselect.emit({ event: event.originalEvent, selectedData: event.data });\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  private init(): void {\r\n    this.enableCustomSort = true;\r\n    this.showColumnFilter = false;\r\n    this.showColumnFilterToggle = false;\r\n\r\n    this.actionsTemplate = undefined;\r\n    this.bodyTemplates = {};\r\n    this.headerTemplate = undefined;\r\n    this.rowExpansionTemplate = undefined;\r\n\r\n    this.onRowSelect = new EventEmitter<{ event: Event; selectedData: T; index: number }>();\r\n    this.onRowUnselect = new EventEmitter<{ event: Event; selectedData: T }>();\r\n    this.onRowTogglerClick = new EventEmitter<{ event: Event; selectedData: T }>();\r\n  }\r\n\r\n  private initTemplates(): void {\r\n    this.actionsTemplate = ObjectUtils.isDefined(this.actionsDef) ? this.actionsDef.template : undefined;\r\n    this.columnsDef.forEach((template) => {\r\n      this.bodyTemplates[template.getName()] = template.template;\r\n    });\r\n    this.headerTemplate = ObjectUtils.isDefined(this.headerColumnDef) ? this.headerColumnDef.template : undefined;\r\n    this.rowExpansionTemplate = ObjectUtils.isDefined(this.rowExpansionDef) ? this.rowExpansionDef.template : undefined;\r\n  }\r\n\r\n  private registerSearchTextObservable(): void {\r\n    this.searchTextChanged = new Subject<string>();\r\n    this.searchTextChanged\r\n      .pipe(\r\n        debounceTime(TableComponent.SEARCH_TEXT_DEBOUNCE_TIME),\r\n        distinctUntilChanged(),\r\n        takeUntil(this._unsubscribe)\r\n      )\r\n      .subscribe((searchText) => {\r\n        this.table.first = 0;\r\n\r\n        this.dataSource.filterData(searchText);\r\n      });\r\n  }\r\n\r\n  private updateAllRowsCheckProperty(newCheckedValue: boolean): void {\r\n    this.dataSource.data.forEach((data) => {\r\n      data._checked = newCheckedValue;\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { TableModule as PrimeNGTableModule } from 'primeng/table';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\n\r\nimport { ColumnDefDirective } from './column-def.directive';\r\nimport { HeaderColumnDefDirective } from './header-column-def.directive';\r\nimport { RowExpansionDefDirective } from './row-expansion-def.directive';\r\nimport { TableActionsDefDirective } from './table-actions-def.directive';\r\nimport { TableComponent } from './table.component';\r\n\r\n// ////////////////////////////////////////////////////////////////////////////\r\n// Modules\r\n// ////////////////////////////////////////////////////////////////////////////\r\nconst EXTERNAL_MODULES = [MatCheckboxModule, MatRadioModule, MultiSelectModule, PrimeNGTableModule];\r\n\r\n// ////////////////////////////////////////////////////////////////////////////\r\n// Components\r\n// ////////////////////////////////////////////////////////////////////////////\r\nconst COMPONENTS = [TableComponent];\r\n\r\n// ////////////////////////////////////////////////////////////////////////////\r\n// Directives\r\n// ////////////////////////////////////////////////////////////////////////////\r\nconst DIRECTIVES = [ColumnDefDirective, HeaderColumnDefDirective, RowExpansionDefDirective, TableActionsDefDirective];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DIRECTIVES],\r\n  exports: [...COMPONENTS, ...DIRECTIVES],\r\n  imports: [AngularCommonSharedModule, AppCommonSharedModule, ...EXTERNAL_MODULES]\r\n})\r\nexport class TableModule {}\r\n"],"sourceRoot":""}