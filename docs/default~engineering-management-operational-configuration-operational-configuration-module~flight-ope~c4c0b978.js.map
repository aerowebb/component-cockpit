{"version":3,"sources":["webpack:///./node_modules/primeng/components/slider/slider.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,mBAAmB,mBAAO,CAAC,8EAAmB;AAC9C,cAAc,mBAAO,CAAC,oEAAgB;AACtC;AACA;AACA,gDAAgD,eAAe,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAA4C;AAC9E;AACA,kCAAkC,0CAA0C;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6CAA6C;AACpG;AACA;AACA,uDAAuD,2CAA2C;AAClG;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oCAAoC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kCAAkC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,oOAAoO,wLAAwL,8EAA8E,iJAAiJ,iFAAiF,oKAAoK,4BAA4B,sKAAsK,2BAA2B,mVAAmV,8HAA8H,yVAAyV,mDAAmD,gBAAgB,yCAAyC,yVAAyV,+CAA+C,gBAAgB,yCAAyC;AAClgF;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,kC","file":"default~engineering-management-operational-configuration-operational-configuration-module~flight-ope~c4c0b978.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar forms_1 = require(\"@angular/forms\");\nexports.SLIDER_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return Slider; }),\n    multi: true\n};\nvar Slider = /** @class */ (function () {\n    function Slider(el, renderer, ngZone, cd) {\n        this.el = el;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.cd = cd;\n        this.min = 0;\n        this.max = 100;\n        this.orientation = 'horizontal';\n        this.onChange = new core_1.EventEmitter();\n        this.onSlideEnd = new core_1.EventEmitter();\n        this.handleValues = [];\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n        this.handleIndex = 0;\n    }\n    Slider.prototype.onMouseDown = function (event, index) {\n        if (this.disabled) {\n            return;\n        }\n        this.dragging = true;\n        this.updateDomData();\n        this.sliderHandleClick = true;\n        this.handleIndex = index;\n        this.bindDragListeners();\n        event.preventDefault();\n    };\n    Slider.prototype.onTouchStart = function (event, index) {\n        if (this.disabled) {\n            return;\n        }\n        var touchobj = event.changedTouches[0];\n        this.startHandleValue = (this.range) ? this.handleValues[index] : this.handleValue;\n        this.dragging = true;\n        this.handleIndex = index;\n        if (this.orientation === 'horizontal') {\n            this.startx = parseInt(touchobj.clientX, 10);\n            this.barWidth = this.el.nativeElement.children[0].offsetWidth;\n        }\n        else {\n            this.starty = parseInt(touchobj.clientY, 10);\n            this.barHeight = this.el.nativeElement.children[0].offsetHeight;\n        }\n        event.preventDefault();\n    };\n    Slider.prototype.onTouchMove = function (event, index) {\n        if (this.disabled) {\n            return;\n        }\n        var touchobj = event.changedTouches[0], handleValue = 0;\n        if (this.orientation === 'horizontal') {\n            handleValue = Math.floor(((parseInt(touchobj.clientX, 10) - this.startx) * 100) / (this.barWidth)) + this.startHandleValue;\n        }\n        else {\n            handleValue = Math.floor(((this.starty - parseInt(touchobj.clientY, 10)) * 100) / (this.barHeight)) + this.startHandleValue;\n        }\n        this.setValueFromHandle(event, handleValue);\n        event.preventDefault();\n    };\n    Slider.prototype.onTouchEnd = function (event, index) {\n        if (this.disabled) {\n            return;\n        }\n        this.dragging = false;\n        if (this.range)\n            this.onSlideEnd.emit({ originalEvent: event, values: this.values });\n        else\n            this.onSlideEnd.emit({ originalEvent: event, value: this.value });\n        event.preventDefault();\n    };\n    Slider.prototype.onBarClick = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        if (!this.sliderHandleClick) {\n            this.updateDomData();\n            this.handleChange(event);\n        }\n        this.sliderHandleClick = false;\n    };\n    Slider.prototype.handleChange = function (event) {\n        var handleValue = this.calculateHandleValue(event);\n        this.setValueFromHandle(event, handleValue);\n    };\n    Slider.prototype.bindDragListeners = function () {\n        var _this = this;\n        this.ngZone.runOutsideAngular(function () {\n            if (!_this.dragListener) {\n                _this.dragListener = _this.renderer.listen('document', 'mousemove', function (event) {\n                    if (_this.dragging) {\n                        _this.ngZone.run(function () {\n                            _this.handleChange(event);\n                        });\n                    }\n                });\n            }\n            if (!_this.mouseupListener) {\n                _this.mouseupListener = _this.renderer.listen('document', 'mouseup', function (event) {\n                    if (_this.dragging) {\n                        _this.dragging = false;\n                        _this.ngZone.run(function () {\n                            if (_this.range) {\n                                _this.onSlideEnd.emit({ originalEvent: event, values: _this.values });\n                            }\n                            else {\n                                _this.onSlideEnd.emit({ originalEvent: event, value: _this.value });\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    };\n    Slider.prototype.unbindDragListeners = function () {\n        if (this.dragListener) {\n            this.dragListener();\n        }\n        if (this.mouseupListener) {\n            this.mouseupListener();\n        }\n    };\n    Slider.prototype.setValueFromHandle = function (event, handleValue) {\n        var newValue = this.getValueFromHandle(handleValue);\n        if (this.range) {\n            if (this.step) {\n                this.handleStepChange(newValue, this.values[this.handleIndex]);\n            }\n            else {\n                this.handleValues[this.handleIndex] = handleValue;\n                this.updateValue(newValue, event);\n            }\n        }\n        else {\n            if (this.step) {\n                this.handleStepChange(newValue, this.value);\n            }\n            else {\n                this.handleValue = handleValue;\n                this.updateValue(newValue, event);\n            }\n        }\n    };\n    Slider.prototype.handleStepChange = function (newValue, oldValue) {\n        var diff = (newValue - oldValue);\n        var val = oldValue;\n        if (diff < 0) {\n            val = oldValue + Math.ceil(newValue / this.step - oldValue / this.step) * this.step;\n        }\n        else if (diff > 0) {\n            val = oldValue + Math.floor(newValue / this.step - oldValue / this.step) * this.step;\n        }\n        this.updateValue(val);\n        this.updateHandleValue();\n    };\n    Slider.prototype.writeValue = function (value) {\n        if (this.range)\n            this.values = value || [0, 0];\n        else\n            this.value = value || 0;\n        this.updateHandleValue();\n        this.cd.markForCheck();\n    };\n    Slider.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    Slider.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    Slider.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    Object.defineProperty(Slider.prototype, \"rangeStartLeft\", {\n        get: function () {\n            return this.isVertical() ? 'auto' : this.handleValues[0] + '%';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Slider.prototype, \"rangeStartBottom\", {\n        get: function () {\n            return this.isVertical() ? this.handleValues[0] + '%' : 'auto';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Slider.prototype, \"rangeEndLeft\", {\n        get: function () {\n            return this.isVertical() ? 'auto' : this.handleValues[1] + '%';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Slider.prototype, \"rangeEndBottom\", {\n        get: function () {\n            return this.isVertical() ? this.handleValues[1] + '%' : 'auto';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Slider.prototype.isVertical = function () {\n        return this.orientation === 'vertical';\n    };\n    Slider.prototype.updateDomData = function () {\n        var rect = this.el.nativeElement.children[0].getBoundingClientRect();\n        this.initX = rect.left + domhandler_1.DomHandler.getWindowScrollLeft();\n        this.initY = rect.top + domhandler_1.DomHandler.getWindowScrollTop();\n        this.barWidth = this.el.nativeElement.children[0].offsetWidth;\n        this.barHeight = this.el.nativeElement.children[0].offsetHeight;\n    };\n    Slider.prototype.calculateHandleValue = function (event) {\n        if (this.orientation === 'horizontal')\n            return ((event.pageX - this.initX) * 100) / (this.barWidth);\n        else\n            return (((this.initY + this.barHeight) - event.pageY) * 100) / (this.barHeight);\n    };\n    Slider.prototype.updateHandleValue = function () {\n        if (this.range) {\n            this.handleValues[0] = (this.values[0] < this.min ? 0 : this.values[0] - this.min) * 100 / (this.max - this.min);\n            this.handleValues[1] = (this.values[1] > this.max ? 100 : this.values[1] - this.min) * 100 / (this.max - this.min);\n        }\n        else {\n            if (this.value < this.min)\n                this.handleValue = 0;\n            else if (this.value > this.max)\n                this.handleValue = 100;\n            else\n                this.handleValue = (this.value - this.min) * 100 / (this.max - this.min);\n        }\n    };\n    Slider.prototype.updateValue = function (val, event) {\n        if (this.range) {\n            var value = val;\n            if (this.handleIndex == 0) {\n                if (value < this.min) {\n                    value = this.min;\n                    this.handleValues[0] = 0;\n                }\n                else if (value > this.values[1]) {\n                    value = this.values[1];\n                    this.handleValues[0] = this.handleValues[1];\n                }\n            }\n            else {\n                if (value > this.max) {\n                    value = this.max;\n                    this.handleValues[1] = 100;\n                }\n                else if (value < this.values[0]) {\n                    value = this.values[0];\n                    this.handleValues[1] = this.handleValues[0];\n                }\n            }\n            this.values[this.handleIndex] = this.getNormalizedValue(value);\n            this.onModelChange(this.values);\n            this.onChange.emit({ event: event, values: this.values });\n        }\n        else {\n            if (val < this.min) {\n                val = this.min;\n                this.handleValue = 0;\n            }\n            else if (val > this.max) {\n                val = this.max;\n                this.handleValue = 100;\n            }\n            this.value = this.getNormalizedValue(val);\n            this.onModelChange(this.value);\n            this.onChange.emit({ event: event, value: this.value });\n        }\n    };\n    Slider.prototype.getValueFromHandle = function (handleValue) {\n        return (this.max - this.min) * (handleValue / 100) + this.min;\n    };\n    Slider.prototype.getDecimalsCount = function (value) {\n        if (value && Math.floor(value) !== value)\n            return value.toString().split(\".\")[1].length || 0;\n        return 0;\n    };\n    Slider.prototype.getNormalizedValue = function (val) {\n        var decimalsCount = this.getDecimalsCount(this.step);\n        if (decimalsCount > 0) {\n            return +val.toFixed(decimalsCount);\n        }\n        else {\n            return Math.floor(val);\n        }\n    };\n    Slider.prototype.ngOnDestroy = function () {\n        this.unbindDragListeners();\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Slider.prototype, \"animate\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Slider.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Slider.prototype, \"min\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Slider.prototype, \"max\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Slider.prototype, \"orientation\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Slider.prototype, \"step\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Slider.prototype, \"range\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Slider.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Slider.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Slider.prototype, \"onChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Slider.prototype, \"onSlideEnd\", void 0);\n    Slider = __decorate([\n        core_1.Component({\n            selector: 'p-slider',\n            template: \"\\n        <div [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" [ngClass]=\\\"{'ui-slider ui-widget ui-widget-content ui-corner-all':true,'ui-state-disabled':disabled,\\n            'ui-slider-horizontal':orientation == 'horizontal','ui-slider-vertical':orientation == 'vertical','ui-slider-animate':animate}\\\"\\n            (click)=\\\"onBarClick($event)\\\">\\n            <span *ngIf=\\\"range && orientation == 'horizontal'\\\" class=\\\"ui-slider-range ui-widget-header ui-corner-all\\\" [ngStyle]=\\\"{'left':handleValues[0] + '%',width: (handleValues[1] - handleValues[0] + '%')}\\\"></span>\\n            <span *ngIf=\\\"range && orientation == 'vertical'\\\" class=\\\"ui-slider-range ui-widget-header ui-corner-all\\\" [ngStyle]=\\\"{'bottom':handleValues[0] + '%',height: (handleValues[1] - handleValues[0] + '%')}\\\"></span>\\n            <span *ngIf=\\\"!range && orientation=='vertical'\\\" class=\\\"ui-slider-range ui-slider-range-min ui-widget-header ui-corner-all\\\" [ngStyle]=\\\"{'height': handleValue + '%'}\\\"></span>\\n            <span *ngIf=\\\"!range && orientation=='horizontal'\\\" class=\\\"ui-slider-range ui-slider-range-min ui-widget-header ui-corner-all\\\" [ngStyle]=\\\"{'width': handleValue + '%'}\\\"></span>\\n            <span *ngIf=\\\"!range\\\" class=\\\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\\\" (mousedown)=\\\"onMouseDown($event)\\\" (touchstart)=\\\"onTouchStart($event)\\\" (touchmove)=\\\"onTouchMove($event)\\\" (touchend)=\\\"onTouchEnd($event)\\\"\\n                [style.transition]=\\\"dragging ? 'none': null\\\" [ngStyle]=\\\"{'left': orientation == 'horizontal' ? handleValue + '%' : null,'bottom': orientation == 'vertical' ? handleValue + '%' : null}\\\"></span>\\n            <span *ngIf=\\\"range\\\" (mousedown)=\\\"onMouseDown($event,0)\\\" (touchstart)=\\\"onTouchStart($event,0)\\\" (touchmove)=\\\"onTouchMove($event,0)\\\" (touchend)=\\\"onTouchEnd($event)\\\" [style.transition]=\\\"dragging ? 'none': null\\\" class=\\\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\\\" \\n                [ngStyle]=\\\"{'left': rangeStartLeft, 'bottom': rangeStartBottom}\\\" [ngClass]=\\\"{'ui-slider-handle-active':handleIndex==0}\\\"></span>\\n            <span *ngIf=\\\"range\\\" (mousedown)=\\\"onMouseDown($event,1)\\\" (touchstart)=\\\"onTouchStart($event,1)\\\" (touchmove)=\\\"onTouchMove($event,1)\\\" (touchend)=\\\"onTouchEnd($event)\\\" [style.transition]=\\\"dragging ? 'none': null\\\" class=\\\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\\\" \\n                [ngStyle]=\\\"{'left': rangeEndLeft, 'bottom': rangeEndBottom}\\\" [ngClass]=\\\"{'ui-slider-handle-active':handleIndex==1}\\\"></span>\\n        </div>\\n    \",\n            providers: [exports.SLIDER_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.Renderer2, core_1.NgZone, core_1.ChangeDetectorRef])\n    ], Slider);\n    return Slider;\n}());\nexports.Slider = Slider;\nvar SliderModule = /** @class */ (function () {\n    function SliderModule() {\n    }\n    SliderModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [Slider],\n            declarations: [Slider]\n        })\n    ], SliderModule);\n    return SliderModule;\n}());\nexports.SliderModule = SliderModule;\n//# sourceMappingURL=slider.js.map"],"sourceRoot":""}