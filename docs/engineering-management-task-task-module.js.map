{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/primeng/components/inputtextarea/inputtextarea.js","webpack:///./node_modules/primeng/components/keyfilter/keyfilter.js","webpack:///./node_modules/primeng/components/message/message.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./node_modules/primeng/treetable.js","webpack:///./src/app/main/engineering-management/task/form/dialog-associated-tasks-popup/dialog-associated-tasks-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/dialog-associated-tasks-popup/dialog-associated-tasks-popup.component.ts","webpack:///./src/app/main/engineering-management/task/form/dialog-evolutions-popup/dialog-evolutions-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/dialog-evolutions-popup/dialog-evolutions-popup.component.ts","webpack:///./src/app/main/engineering-management/task/form/dialog-item-versions-popup/dialog-item-versions-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/dialog-item-versions-popup/dialog-item-versions-popup.component.ts","webpack:///./src/app/main/engineering-management/task/form/dialog-measure-formula-popup/dialog-measure-formula-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/dialog-measure-formula-popup/dialog-measure-formula-popup.component.ts","webpack:///./src/app/main/engineering-management/task/form/dialog-measure-popup/dialog-measure-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/dialog-measure-popup/dialog-measure-popup.component.ts","webpack:///./src/app/main/engineering-management/task/form/dialog-measure-popup/dialog-measure-search-popup/dialog-measure-search-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/dialog-measure-popup/dialog-measure-search-popup/dialog-measure-search-popup.component.ts","webpack:///./src/app/main/engineering-management/task/form/dialog-measure-tool-popup/dialog-measure-tool-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/dialog-measure-tool-popup/dialog-measure-tool-popup.component.ts","webpack:///./src/app/main/engineering-management/task/form/dialog-operations-popup/dialog-operations-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/dialog-operations-popup/dialog-operations-popup.component.ts","webpack:///./src/app/main/engineering-management/task/form/dialog-qualifications-popup/dialog-qualifications-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/dialog-qualifications-popup/dialog-qualifications-popup.component.ts","webpack:///./src/app/main/engineering-management/task/form/dialog-search-evolution-popup/dialog-search-evolution-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/dialog-search-evolution-popup/dialog-search-evolution-popup.component.ts","webpack:///./src/app/main/engineering-management/task/form/dialog-tils-popup/dialog-tils-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/dialog-tils-popup/dialog-tils-popup.component.ts","webpack:///./src/app/main/engineering-management/task/form/task-form.component.html","webpack:///./src/app/main/engineering-management/task/form/task-form.component.scss","webpack:///./src/app/main/engineering-management/task/form/task-form.component.ts","webpack:///./src/app/main/engineering-management/task/form/task-form.service.ts","webpack:///./src/app/main/engineering-management/task/form/task-import-popup/task-import-popup.component.html","webpack:///./src/app/main/engineering-management/task/form/task-import-popup/task-import-popup.component.ts","webpack:///./src/app/main/engineering-management/task/search/task-search.component.html","webpack:///./src/app/main/engineering-management/task/search/task-search.component.ts","webpack:///./src/app/main/engineering-management/task/search/task-search.service.ts","webpack:///./src/app/main/engineering-management/task/task.module.ts","webpack:///./src/app/shared/constants/task-fields-constants.ts","webpack:///./src/app/shared/utils/array-utils.ts","webpack:///./src/app/shared/utils/bido-family-variant-utils.ts","webpack:///./src/app/shared/utils/bire-family-variant-utils.ts","webpack:///./src/app/shared/utils/file-utils.ts","webpack:///./src/app/shared/utils/settings-utils.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+GAAe,GAAG,IAAqC,CAAC,iCAAO,EAAE,oCAAC,CAAC;AAAA;AAAA;AAAA,oGAAC,CAAC,KAAK,EAA6E,CAAC,kBAAkB,aAAa,gBAAgB,+BAA+B,WAAW,4FAA4F,WAAW,kEAAkE,4DAA4D,YAAY,IAAI,kBAAkB,yBAAyB,0DAA0D,kBAAkB,sBAAsB,yCAAyC,UAAU,cAAc,yBAAyB,iEAAiE,cAAc,IAAI,yCAAyC,SAAS,0CAA0C,0FAA0F,qOAAqO,0DAA0D,uDAAuD,iNAAiN,0BAA0B,4BAA4B,KAAK,KAAK,gDAAgD,mFAAmF,sBAAsB,KAAK,kCAAkC,iDAAiD,KAAK,GAAG,mBAAmB,8HAA8H,oIAAoI,2CAA2C,qBAAqB,uBAAuB,eAAe,0BAA0B,GAAG,wBAAwB,yCAAyC,oBAAoB,KAAK,gDAAgD,4DAA4D,qBAAqB,OAAO,EAAE,oBAAoB,KAA0B,qBAAqB;;AAEr/E,yC;;;;;;;;;;;;ACFa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,cAAc,mBAAO,CAAC,oEAAgB;AACtC,eAAe,mBAAO,CAAC,uEAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,yC;;;;;;;;;;;;ACrHa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,mBAAmB,mBAAO,CAAC,8EAAmB;AAC9C,cAAc,mBAAO,CAAC,oEAAgB;AACtC;AACA;AACA,gDAAgD,kBAAkB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;AC/Ka;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;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","file":"engineering-management-task-task-module.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar common_1 = require(\"@angular/common\");\nvar InputTextarea = /** @class */ (function () {\n    function InputTextarea(el, ngModel) {\n        this.el = el;\n        this.ngModel = ngModel;\n        this.onResize = new core_1.EventEmitter();\n    }\n    InputTextarea.prototype.ngDoCheck = function () {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize();\n        }\n    };\n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    InputTextarea.prototype.onInput = function (e) {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.updateFilledState = function () {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    };\n    InputTextarea.prototype.onFocus = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.onBlur = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.resize = function (event) {\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n        this.onResize.emit(event || {});\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], InputTextarea.prototype, \"autoResize\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], InputTextarea.prototype, \"onResize\", void 0);\n    __decorate([\n        core_1.HostListener('input', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onInput\", null);\n    __decorate([\n        core_1.HostListener('focus', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onFocus\", null);\n    __decorate([\n        core_1.HostListener('blur', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onBlur\", null);\n    InputTextarea = __decorate([\n        core_1.Directive({\n            selector: '[pInputTextarea]',\n            host: {\n                '[class.ui-inputtext]': 'true',\n                '[class.ui-corner-all]': 'true',\n                '[class.ui-inputtextarea-resizable]': 'autoResize',\n                '[class.ui-state-default]': 'true',\n                '[class.ui-widget]': 'true',\n                '[class.ui-state-filled]': 'filled'\n            }\n        }),\n        __param(1, core_1.Optional()),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, forms_1.NgModel])\n    ], InputTextarea);\n    return InputTextarea;\n}());\nexports.InputTextarea = InputTextarea;\nvar InputTextareaModule = /** @class */ (function () {\n    function InputTextareaModule() {\n    }\n    InputTextareaModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [InputTextarea],\n            declarations: [InputTextarea]\n        })\n    ], InputTextareaModule);\n    return InputTextareaModule;\n}());\nexports.InputTextareaModule = InputTextareaModule;\n//# sourceMappingURL=inputtextarea.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar forms_1 = require(\"@angular/forms\");\nexports.KEYFILTER_VALIDATOR = {\n    provide: forms_1.NG_VALIDATORS,\n    useExisting: core_1.forwardRef(function () { return KeyFilter; }),\n    multi: true\n};\nvar KeyFilter = /** @class */ (function () {\n    function KeyFilter(el) {\n        this.el = el;\n    }\n    KeyFilter_1 = KeyFilter;\n    Object.defineProperty(KeyFilter.prototype, \"pattern\", {\n        get: function () {\n            return this._pattern;\n        },\n        set: function (_pattern) {\n            this._pattern = _pattern;\n            this.regex = KeyFilter_1.DEFAULT_MASKS[this._pattern] || this._pattern;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    KeyFilter.prototype.isNavKeyPress = function (e) {\n        var k = e.keyCode;\n        k = domhandler_1.DomHandler.getBrowser().safari ? (KeyFilter_1.SAFARI_KEYS[k] || k) : k;\n        return (k >= 33 && k <= 40) || k == KeyFilter_1.KEYS.RETURN || k == KeyFilter_1.KEYS.TAB || k == KeyFilter_1.KEYS.ESC;\n    };\n    ;\n    KeyFilter.prototype.isSpecialKey = function (e) {\n        var k = e.keyCode;\n        var c = e.charCode;\n        return k == 9 || k == 13 || k == 27 || k == 16 || k == 17 || (k >= 18 && k <= 20) ||\n            (domhandler_1.DomHandler.getBrowser().opera && !e.shiftKey && (k == 8 || (k >= 33 && k <= 35) || (k >= 36 && k <= 39) || (k >= 44 && k <= 45)));\n    };\n    KeyFilter.prototype.getKey = function (e) {\n        var k = e.keyCode || e.charCode;\n        return domhandler_1.DomHandler.getBrowser().safari ? (KeyFilter_1.SAFARI_KEYS[k] || k) : k;\n    };\n    KeyFilter.prototype.getCharCode = function (e) {\n        return e.charCode || e.keyCode || e.which;\n    };\n    ;\n    KeyFilter.prototype.onKeyPress = function (e) {\n        if (this.pValidateOnly) {\n            return;\n        }\n        var browser = domhandler_1.DomHandler.getBrowser();\n        if (e.ctrlKey || e.altKey) {\n            return;\n        }\n        var k = this.getKey(e);\n        if (k == 13) {\n            return;\n        }\n        if (browser.mozilla && (this.isNavKeyPress(e) || k == KeyFilter_1.KEYS.BACKSPACE || (k == KeyFilter_1.KEYS.DELETE && e.charCode == 0))) {\n            return;\n        }\n        var c = this.getCharCode(e);\n        var cc = String.fromCharCode(c);\n        var ok = true;\n        if (browser.mozilla && (this.isSpecialKey(e) || !cc)) {\n            return;\n        }\n        ok = this.regex.test(cc);\n        if (!ok) {\n            e.preventDefault();\n        }\n    };\n    KeyFilter.prototype.onPaste = function (e) {\n        var clipboardData = e.clipboardData || window.clipboardData.getData('text');\n        if (clipboardData) {\n            var pastedText = clipboardData;\n            if (!this.regex.test(pastedText)) {\n                e.preventDefault();\n            }\n        }\n    };\n    KeyFilter.prototype.validate = function (c) {\n        if (this.pValidateOnly) {\n            var value = this.el.nativeElement.value;\n            if (value && !this.regex.test(value)) {\n                return {\n                    validatePattern: false\n                };\n            }\n        }\n    };\n    var KeyFilter_1;\n    KeyFilter.DEFAULT_MASKS = {\n        pint: /[\\d]/,\n        'int': /[\\d\\-]/,\n        pnum: /[\\d\\.]/,\n        money: /[\\d\\.\\s,]/,\n        num: /[\\d\\-\\.]/,\n        hex: /[0-9a-f]/i,\n        email: /[a-z0-9_\\.\\-@]/i,\n        alpha: /[a-z_]/i,\n        alphanum: /[a-z0-9_]/i\n    };\n    KeyFilter.KEYS = {\n        TAB: 9,\n        RETURN: 13,\n        ESC: 27,\n        BACKSPACE: 8,\n        DELETE: 46\n    };\n    KeyFilter.SAFARI_KEYS = {\n        63234: 37,\n        63235: 39,\n        63232: 38,\n        63233: 40,\n        63276: 33,\n        63277: 34,\n        63272: 46,\n        63273: 36,\n        63275: 35 // end\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], KeyFilter.prototype, \"pValidateOnly\", void 0);\n    __decorate([\n        core_1.Input('pKeyFilter'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], KeyFilter.prototype, \"pattern\", null);\n    __decorate([\n        core_1.HostListener('keypress', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [KeyboardEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], KeyFilter.prototype, \"onKeyPress\", null);\n    __decorate([\n        core_1.HostListener('paste', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], KeyFilter.prototype, \"onPaste\", null);\n    KeyFilter = KeyFilter_1 = __decorate([\n        core_1.Directive({\n            selector: '[pKeyFilter]',\n            providers: [exports.KEYFILTER_VALIDATOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\n    ], KeyFilter);\n    return KeyFilter;\n}());\nexports.KeyFilter = KeyFilter;\nvar KeyFilterModule = /** @class */ (function () {\n    function KeyFilterModule() {\n    }\n    KeyFilterModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [KeyFilter],\n            declarations: [KeyFilter]\n        })\n    ], KeyFilterModule);\n    return KeyFilterModule;\n}());\nexports.KeyFilterModule = KeyFilterModule;\n//# sourceMappingURL=keyfilter.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar UIMessage = /** @class */ (function () {\n    function UIMessage() {\n    }\n    Object.defineProperty(UIMessage.prototype, \"icon\", {\n        get: function () {\n            var icon = null;\n            if (this.severity) {\n                switch (this.severity) {\n                    case 'success':\n                        icon = 'pi pi-check';\n                        break;\n                    case 'info':\n                        icon = 'pi pi-info-circle';\n                        break;\n                    case 'error':\n                        icon = 'pi pi-times';\n                        break;\n                    case 'warn':\n                        icon = 'pi pi-exclamation-triangle';\n                        break;\n                    default:\n                        icon = 'pi pi-info-circle';\n                        break;\n                }\n            }\n            return icon;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], UIMessage.prototype, \"severity\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], UIMessage.prototype, \"text\", void 0);\n    UIMessage = __decorate([\n        core_1.Component({\n            selector: 'p-message',\n            template: \"\\n        <div aria-live=\\\"polite\\\" class=\\\"ui-message ui-widget ui-corner-all\\\" *ngIf=\\\"severity\\\"\\n        [ngClass]=\\\"{'ui-message-info': (severity === 'info'),\\n                'ui-message-warn': (severity === 'warn'),\\n                'ui-message-error': (severity === 'error'),\\n                'ui-message-success': (severity === 'success')}\\\">\\n            <span class=\\\"ui-message-icon\\\" [ngClass]=\\\"icon\\\"></span>\\n            <span class=\\\"ui-message-text\\\" [innerHTML]=\\\"text\\\"></span>\\n        </div>\\n    \"\n        })\n    ], UIMessage);\n    return UIMessage;\n}());\nexports.UIMessage = UIMessage;\nvar MessageModule = /** @class */ (function () {\n    function MessageModule() {\n    }\n    MessageModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [UIMessage],\n            declarations: [UIMessage]\n        })\n    ], MessageModule);\n    return MessageModule;\n}());\nexports.MessageModule = MessageModule;\n//# sourceMappingURL=message.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/treetable/treetable\"));","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div\\r\\n          class=\\\"form-group\\\"\\r\\n          [ngClass]=\\\"{\\r\\n            required: !isReadOnlyForm,\\r\\n            disabled: isReadOnlyForm || associatedTasks.bireTaskDTO.taskCode !== undefined\\r\\n          }\\\"\\r\\n        >\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskCode\\\" | translate }}</label>\\r\\n\\r\\n          <div\\r\\n            class=\\\"form-control form-control-with-modal\\\"\\r\\n            [ngClass]=\\\"{ disabled: isReadOnlyForm || associatedTasks.bireTaskDTO.taskCode !== undefined }\\\"\\r\\n          >\\r\\n            <div\\r\\n              class=\\\"form-control-data\\\"\\r\\n              (click)=\\\"associatedTasks.bireTaskDTO.taskCode === undefined && openTaskTableDialog()\\\"\\r\\n            >\\r\\n              {{ associatedTasks.bireTaskDTO.taskCode }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"!!associatedTasks.bireTaskDTO.taskCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"\\r\\n                  associatedTasks.bireTaskDTO.taskCode = undefined;\\r\\n                  associatedTasks.bireTaskDTO.taskVersion = undefined;\\r\\n                  associatedTasks.bireTaskDTO.taskDesignation = undefined;\\r\\n                  associatedTasks.bireTaskDTO.groupCode = undefined;\\r\\n                  associatedTasks.bireTaskDTO.taskTypeCode = undefined\\r\\n                \\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"associatedTasks.bireTaskDTO.taskCode === undefined && openTaskTableDialog()\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"associatedTasks.bireTaskDTO.taskVersion\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskVersion\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"associatedTasks.bireTaskDTO.taskVersion\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"associatedTasks.bireTaskDTO.taskDesignation\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskDesignation\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"associatedTasks.bireTaskDTO.taskDesignation\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"associatedTasks.bireTaskDTO.groupCode\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".groupCode\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"taskGroups\\\"\\r\\n              [(ngModel)]=\\\"associatedTasks.bireTaskDTO.groupCode\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"associatedTasks.bireTaskDTO.taskTypeCode\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskTypeCode\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"taskTypes\\\"\\r\\n              [(ngModel)]=\\\"associatedTasks.bireTaskDTO.taskTypeCode\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"isDisplayLinkType\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".linkType\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"linkTypes\\\"\\r\\n              [(ngModel)]=\\\"associatedTasks.linkType\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".sequenceNo\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"associatedTasks.sequenceNumber\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"associate()\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      [disabled]=\\\"!isValidAssociation()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-task\\r\\n  *ngIf=\\\"showTaskTableDialog\\\"\\r\\n  [(display)]=\\\"showTaskTableDialog\\\"\\r\\n  (onSelected)=\\\"onSelectedTask($event)\\\"\\r\\n></aw-dialog-search-task>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { DialogTableData } from '../../../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { TableColumnFilterMode } from '../../../../../shared/enums/table-column-filter-mode.enum';\r\nimport { TableSelectionMode } from '../../../../../shared/enums/table-selection-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { BireTaskDTO } from '../../../../../shared/types/api-types/bire-task-dto.interface';\r\nimport { BireTaskLinkPopupOutput } from '../../../../../shared/types/api-types/bire-task-link-popup-output.interface';\r\nimport { LinkedTaskDTO } from '../../../../../shared/types/api-types/linked-task-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { TableColumn } from '../../../../../shared/types/table-column.interface';\r\nimport { TaskFormService } from '../task-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-associated-tasks-popup',\r\n  templateUrl: './dialog-associated-tasks-popup.component.html'\r\n})\r\nexport class DialogAssociatedTasksPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public associatedTasks: LinkedTaskDTO;\r\n\r\n  @Input()\r\n  public linkTypes: LabelValue<string>[] | null;\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public onAssociated: EventEmitter<BireTaskLinkPopupOutput>;\r\n\r\n  @Input()\r\n  public isDisplayLinkType: boolean | false;\r\n\r\n  public taskGroups: LabelValue<string>[];\r\n  public taskTypes: LabelValue<string>[];\r\n  public selectedLinkType: string | undefined;\r\n  public sequenceNumber: number;\r\n  public displayValue: boolean;\r\n\r\n  public taskTableData: DialogTableData<BireTaskDTO>;\r\n  public showTaskTableDialog: boolean;\r\n  public resultsTable: BireTaskDTO[];\r\n\r\n  public keyMap: Map<string, Observable<LabelValue<string>[]>>;\r\n\r\n  public showNewTask: boolean;\r\n  @Input()\r\n  public isNewForm: boolean;\r\n\r\n  public constructor(\r\n    private readonly taskFormService: TaskFormService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogAssociatedTasksPopupComponent');\r\n\r\n    this.onAssociated = new EventEmitter<BireTaskLinkPopupOutput>();\r\n\r\n    this.showTaskTableDialog = false;\r\n\r\n    this.taskGroups = [];\r\n    this.resultsTable = [];\r\n    this.selectedLinkType = undefined;\r\n    this.loadTaskGroups();\r\n    this.loadTaskTypes();\r\n\r\n    this.showNewTask = false;\r\n\r\n    this.keyMap = new Map<string, Observable<LabelValue<string>[]>>();\r\n    this.keyMap.set(\r\n      'taskApplicabilityCode',\r\n      this.propertiesService.getValue(GenericPropertyConstants.TASK_APPLICABILITY_CODE_MAP)\r\n    );\r\n    this.keyMap.set('taskTypeCode', this.propertiesService.getValue(GenericPropertyConstants.TASK_TYPE_MAP));\r\n    this.keyMap.set('taskStatus', this.propertiesService.getValue(GenericPropertyConstants.FUNC_OBJECT_STATUS_MAP));\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (!this.associatedTasks) {\r\n      this.associatedTasks = {\r\n        bireTaskDTO: {\r\n          taskCode: undefined,\r\n          taskVersion: undefined\r\n        },\r\n        linkType: undefined,\r\n        sequenceNumber: undefined\r\n      };\r\n    }\r\n  }\r\n\r\n  public createNewTask(): void {\r\n    this.showNewTask = true;\r\n  }\r\n\r\n  public onNewTaskHide(): void {\r\n    this.showNewTask = false;\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public openTaskTableDialog(): void {\r\n    this.showTaskTableDialog = true;\r\n    this.initTaskTableData();\r\n  }\r\n\r\n  public associate(): void {\r\n    if (!!this.linkTypes && !!this.associatedTasks && !!this.associatedTasks.bireTaskDTO) {\r\n      const outputParam: BireTaskLinkPopupOutput = {\r\n        task: this.associatedTasks.bireTaskDTO,\r\n        taskTask: {\r\n          taskCode: this.associatedTasks.bireTaskDTO.taskCode,\r\n          taskVersion: this.associatedTasks.bireTaskDTO.taskVersion,\r\n          sequenceNumber: this.associatedTasks.sequenceNumber,\r\n          taskLinkCode: this.isDisplayLinkType ? this.associatedTasks.linkType : this.linkTypes[0].value,\r\n          groupCode: this.associatedTasks.bireTaskDTO.groupCode\r\n        }\r\n      };\r\n\r\n      this.onAssociated.emit(outputParam);\r\n    } else {\r\n      super.throwUnboundLocalError('associate', 'this.linkTypes');\r\n    }\r\n    this.display = false;\r\n  }\r\n\r\n  private initTaskTableData(): void {\r\n    const taskTableCols: TableColumn[] = [\r\n      { field: 'taskCode', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'taskVersion', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'taskDesignation', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'taskChapter', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'taskSection', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'taskSubject', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'taskTask', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'taskSubTask', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'taskStatus', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'taskApplicabilityDate', alignment: 'center', filterMode: TableColumnFilterMode.Input, isDate: true },\r\n      { field: 'taskApplicabilityCode', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'repairCenterCode', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'groupCode', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'taskTypeCode', alignment: 'center', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'overhaul', alignment: 'center', filterMode: TableColumnFilterMode.Input }\r\n    ];\r\n\r\n    this.taskTableData = {\r\n      componentId: 'DialogTask',\r\n      tableCols: taskTableCols,\r\n      tableRows: this.taskFormService.findBireTasksByCriteria(),\r\n      dataKey: undefined,\r\n      selectionMode: TableSelectionMode.Single,\r\n      globalFilter: true\r\n    };\r\n  }\r\n\r\n  private loadTaskGroups(): void {\r\n    this.taskFormService.getTaskGroups().subscribe(\r\n      (results) => {\r\n        this.taskGroups = results.filter((taskGroup) => taskGroup.value != undefined) || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getComponentName() + 'errorOnGetTaskGroups');\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadTaskTypes(): void {\r\n    this.propertiesService.getValue('getTaskTypeMap').subscribe(\r\n      (results) => {\r\n        this.taskTypes = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getComponentName() + '.errorOnGetTaskTypes');\r\n      }\r\n    );\r\n  }\r\n\r\n  public isValidAssociation(): boolean {\r\n    if (!this.isDisplayLinkType) {\r\n      if (\r\n        !!this.associatedTasks &&\r\n        !!this.associatedTasks.bireTaskDTO &&\r\n        this.associatedTasks.bireTaskDTO.taskCode &&\r\n        this.associatedTasks.bireTaskDTO.taskVersion\r\n      ) {\r\n        return true;\r\n      }\r\n    } else if (\r\n      !!this.associatedTasks &&\r\n      !!this.associatedTasks.bireTaskDTO &&\r\n      this.associatedTasks.bireTaskDTO.taskCode &&\r\n      this.associatedTasks.bireTaskDTO.taskVersion &&\r\n      this.associatedTasks.linkType\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Task Dialog\r\n   *************************************************************************/\r\n\r\n  public onSelectedTask(task: BireTaskDTO): void {\r\n    if (!!this.associatedTasks && !!this.associatedTasks.bireTaskDTO && task) {\r\n      if (task.groupCode) {\r\n        const taskGroup: LabelValue<string>[] = this.taskGroups.filter((group) => group.label === task.groupCode);\r\n        if (taskGroup[0]) {\r\n          task.groupCode = taskGroup[0].value;\r\n        }\r\n      }\r\n      if (task.taskTypeCode) {\r\n        const taskType: LabelValue<string>[] = this.taskTypes.filter((type) => type.label === task.taskTypeCode);\r\n        if (taskType[0]) {\r\n          task.taskTypeCode = taskType[0].value;\r\n        }\r\n      }\r\n      this.associatedTasks.bireTaskDTO.taskCode = task.taskCode;\r\n      this.associatedTasks.bireTaskDTO.taskVersion = task.taskVersion;\r\n      this.associatedTasks.bireTaskDTO.taskDesignation = task.taskDesignation;\r\n      this.associatedTasks.bireTaskDTO.groupCode = task.groupCode;\r\n      this.associatedTasks.bireTaskDTO.taskTypeCode = task.taskTypeCode;\r\n    } else {\r\n      super.throwUnboundLocalError('onSelectedTask', 'this.associatedTasks');\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".evolutionNumber\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOnlyForm }\\\">\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"openEvolutionDialog()\\\">{{ evolution.evolutionNumber }}</div>\\r\\n\\r\\n            <div *ngIf=\\\"evolution.evolutionNumber\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"evolution.evolutionNumber = undefined; evolution.evolutionRevisionNumber = undefined\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openEvolutionDialog()\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        *ngIf=\\\"evolution.evolutionRevisionNumber !== undefined && evolution.evolutionRevisionNumber !== null\\\"\\r\\n        class=\\\"row\\\"\\r\\n      >\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".evolutionRevisionNumber\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"evolution.evolutionRevisionNumber\\\" [disabled]=\\\"true\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskEvolutionTypeCode\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"linkTypes\\\"\\r\\n              [(ngModel)]=\\\"evolution.taskEvolutionTypeCode\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.close\\\" | translate }}</button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" color=\\\"primary\\\" mat-raised-button [disabled]=\\\"!isValidEvolution()\\\" (click)=\\\"add()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-evolution-popup\\r\\n  *ngIf=\\\"showEvolutionTableDialog\\\"\\r\\n  [evolutionNumber]=\\\"evolution.evolutionNumber\\\"\\r\\n  [evolutionRevisionNumber]=\\\"evolution.evolutionRevisionNumber\\\"\\r\\n  [(display)]=\\\"showEvolutionTableDialog\\\"\\r\\n  (onSelected)=\\\"onSelectedEvolution($event)\\\"\\r\\n>\\r\\n</aw-dialog-search-evolution-popup>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { BireEvolutionDTO } from '../../../../../shared/types/api-types/bire-evolution-dto.interface';\r\nimport { BireTaskEvolutionDTO } from '../../../../../shared/types/api-types/bire-task-evolution-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { TaskFormService } from '../task-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-evolutions-popup',\r\n  templateUrl: './dialog-evolutions-popup.component.html'\r\n})\r\nexport class DialogEvolutionsPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public evolution: BireTaskEvolutionDTO;\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public onAdded: EventEmitter<BireTaskEvolutionDTO>;\r\n\r\n  public linkTypes: LabelValue<string>[];\r\n\r\n  public showEvolutionTableDialog: boolean;\r\n\r\n  public evolutionTypes: LabelValue<string>[];\r\n\r\n  public evolutionLevels: LabelValue<string>[];\r\n\r\n  public constructor(\r\n    public propertiesService: PropertiesService,\r\n    public messageService: MessageService,\r\n    public taskFormService: TaskFormService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogEvolutionsPopupComponent');\r\n\r\n    this.onAdded = new EventEmitter<BireTaskEvolutionDTO>();\r\n\r\n    this.showEvolutionTableDialog = false;\r\n\r\n    this.linkTypes = [];\r\n    this.loadLinkTypes();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.evolution) {\r\n      this.evolution = {};\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public openEvolutionDialog(): void {\r\n    this.showEvolutionTableDialog = true;\r\n  }\r\n\r\n  public add(): void {\r\n    if (!!this.evolution) {\r\n      this.onAdded.emit(this.evolution);\r\n      this.display = false;\r\n    }\r\n  }\r\n\r\n  public isValidEvolution(): boolean {\r\n    if (\r\n      !!this.evolution &&\r\n      this.evolution.evolutionNumber &&\r\n      this.evolution.evolutionRevisionNumber &&\r\n      this.evolution.taskEvolutionTypeCode &&\r\n      this.evolution.evolutionNumber.trim().length !== 0 &&\r\n      this.evolution.evolutionRevisionNumber.trim().length !== 0 &&\r\n      this.evolution.taskEvolutionTypeCode.trim().length !== 0\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private loadLinkTypes(): void {\r\n    this.propertiesService.getValue('getTaskEvolutionTypeMap').subscribe(\r\n      (results) => {\r\n        this.linkTypes = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getComponentName() + '.errorOnGetEvolutionLinkTypes');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Evolution Dialog\r\n   *************************************************************************/\r\n\r\n  public onSelectedEvolution(bireEvolutionDTO: BireEvolutionDTO): void {\r\n    if (!!this.evolution && bireEvolutionDTO) {\r\n      this.evolution.evolutionNumber = bireEvolutionDTO.evolutionNumber;\r\n      this.evolution.evolutionRevisionNumber = bireEvolutionDTO.evolutionRevisionNumber;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".itemGroup\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"openItemTableDialog()\\\">\\r\\n              {{ item.chapter }} <span *ngIf=\\\"item.section\\\">- {{ item.section }}</span>\\r\\n              <span *ngIf=\\\"item.subject\\\">- {{ item.subject }}</span> <span *ngIf=\\\"item.sheet\\\">- {{ item.sheet }}</span>\\r\\n              <span *ngIf=\\\"item.marks\\\">- {{ item.marks }}</span>\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngIf=\\\"item.chapter && item.section && item.subject && item.sheet && item.marks\\\"\\r\\n              class=\\\"btn-clear-wrapper\\\"\\r\\n            >\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"\\r\\n                  item.chapter = undefined;\\r\\n                  item.section = undefined;\\r\\n                  item.subject = undefined;\\r\\n                  item.sheet = undefined;\\r\\n                  item.marks = undefined;\\r\\n                  item.versionNumber = undefined\\r\\n                \\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openItemTableDialog()\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".versionNumber\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"versions\\\"\\r\\n              [(ngModel)]=\\\"item.versionNumber\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm || !item.chapter\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              (onClick)=\\\"checkFamilyVariantAndItem()\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskItemTypeCode\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"linkTypes\\\"\\r\\n              [(ngModel)]=\\\"item.taskItemTypeCode\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"add()\\\"\\r\\n      [disabled]=\\\"!isValidItem()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-item\\r\\n  *ngIf=\\\"showItemTableDialog\\\"\\r\\n  [(display)]=\\\"showItemTableDialog\\\"\\r\\n  (onValidated)=\\\"onSelectedItem($event)\\\"\\r\\n></aw-dialog-search-item>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { DialogTableData } from '../../../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { BireItemDTOId } from '../../../../../shared/types/api-types/bire-item-dto-id.interface';\r\nimport { BireItemDTO } from '../../../../../shared/types/api-types/bire-item-dto.interface';\r\nimport { BireTaskItemDTO } from '../../../../../shared/types/api-types/bire-task-item-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { TaskFormService } from '../task-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-item-versions-popup',\r\n  templateUrl: './dialog-item-versions-popup.component.html'\r\n})\r\nexport class DialogItemVersionsPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public item: BireTaskItemDTO;\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public onAdded: EventEmitter<BireTaskItemDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public itemGroup: string; // concatenate chapter-section-subject-sheet-marks\r\n\r\n  public versions: LabelValue<string>[];\r\n  public linkTypes: LabelValue<string>[];\r\n\r\n  public displayValue: boolean;\r\n\r\n  public itemTableData: DialogTableData<BireItemDTO>;\r\n  public showItemTableDialog: boolean;\r\n\r\n  public inputBireItemDTOId: BireItemDTOId;\r\n\r\n  public resultsTable: BireItemDTO[];\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly taskFormService: TaskFormService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogItemVersionsPopupComponent');\r\n\r\n    this.onAdded = new EventEmitter<BireTaskItemDTO>();\r\n\r\n    this.versions = [];\r\n\r\n    this.linkTypes = [];\r\n    this.loadLinkTypes();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.item) {\r\n      this.item = {};\r\n    }\r\n    this.init();\r\n  }\r\n\r\n  private init(): void {\r\n    if (!!this.item) {\r\n      if (\r\n        !!this.item &&\r\n        !!this.item.familyCode &&\r\n        !!this.item.variantCode &&\r\n        !!this.item.structureType &&\r\n        !!this.item.chapter &&\r\n        !!this.item.section &&\r\n        !!this.item.subject &&\r\n        !!this.item.sheet &&\r\n        !!this.item.marks\r\n      ) {\r\n        const versionInput: BireItemDTOId = {\r\n          familyCode: this.item.familyCode,\r\n          variantCode: this.item.variantCode,\r\n          structureType: this.item.structureType,\r\n          chapter: this.item.chapter,\r\n          section: this.item.section,\r\n          subject: this.item.subject,\r\n          sheet: this.item.sheet,\r\n          marks: this.item.marks\r\n        };\r\n\r\n        this.loadVersions(versionInput);\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('ngOnInit', 'this.item');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public isValidItem(): boolean {\r\n    if (\r\n      !!this.item &&\r\n      this.item.familyCode &&\r\n      this.item.chapter &&\r\n      this.item.versionNumber &&\r\n      this.item.taskItemTypeCode\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public openItemTableDialog(): void {\r\n    this.showItemTableDialog = true;\r\n  }\r\n\r\n  public add(): void {\r\n    if (!!this.item) {\r\n      this.onAdded.emit(this.item);\r\n      this.display = false;\r\n    } else {\r\n      super.throwUnboundLocalError('add', 'this.item');\r\n    }\r\n  }\r\n\r\n  public checkFamilyVariantAndItem() {\r\n    if (!!this.item && !this.item.chapter) {\r\n      this.messageService.showErrorMessage(this.getComponentName() + '.selectFamilyVariantAndItem');\r\n    }\r\n  }\r\n\r\n  private loadVersions(bireItemDTOId: BireItemDTOId): void {\r\n    this.taskFormService.findBireItemVersionsByItem(bireItemDTOId).subscribe(\r\n      (results) => {\r\n        this.versions = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getComponentName() + '.errorOnFindItemVersions');\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadLinkTypes(): void {\r\n    this.propertiesService.getValue('getTaskItemTypeMap').subscribe(\r\n      (results) => {\r\n        this.linkTypes = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getComponentName() + '.errorOnGetEvolutionLinkTypes');\r\n      }\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Item Dialog\r\n   *************************************************************************/\r\n\r\n  public onSelectedItem(item: BireItemDTO): void {\r\n    if (!!this.item && item) {\r\n      this.item.familyCode = item.familyCode;\r\n      this.item.variantCode = item.variantCode;\r\n      this.item.structureType = item.structureType;\r\n      this.item.chapter = item.chapter;\r\n      this.item.section = item.section;\r\n      this.item.subject = item.subject;\r\n      this.item.sheet = item.sheet;\r\n      this.item.marks = item.marks;\r\n\r\n      if (\r\n        !!item &&\r\n        !!item.familyCode &&\r\n        !!item.variantCode &&\r\n        !!item.structureType &&\r\n        !!item.chapter &&\r\n        !!item.section &&\r\n        !!item.subject &&\r\n        !!item.sheet &&\r\n        !!item.marks\r\n      ) {\r\n        this.inputBireItemDTOId = {\r\n          familyCode: item.familyCode,\r\n          variantCode: item.variantCode,\r\n          structureType: item.structureType,\r\n          chapter: item.chapter,\r\n          section: item.section,\r\n          subject: item.subject,\r\n          sheet: item.sheet,\r\n          marks: item.marks\r\n        };\r\n\r\n        this.loadVersions(this.inputBireItemDTOId);\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('onSelectedItem', 'this.item');\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"70\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      {{ getComponentName() + \\\".measurePoint\\\" | translate }} :\\r\\n\\r\\n      <span class=\\\"measure-code-result\\\"> {{ selectedMeasurePointTitle }} ({{ selectedMeasurePoint }}) </span>\\r\\n    </div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".measurePoint\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [(ngModel)]=\\\"document.measurePoint1\\\"\\r\\n              [options]=\\\"measurePoints1\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".operator\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [(ngModel)]=\\\"document.operator\\\"\\r\\n              [options]=\\\"operators\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode && !!document.operator }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".measurePoint\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [(ngModel)]=\\\"document.measurePoint2\\\"\\r\\n              [options]=\\\"measurePoints2\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <button type=\\\"button\\\" mat-raised-button (click)=\\\"addOperator()\\\" [disabled]=\\\"!isPageValid()\\\">\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".formulaResult\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <textarea pInputTextarea [rows]=\\\"6\\\" class=\\\"aw-textarea\\\" [(ngModel)]=\\\"document.formula\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n  <a-footer>\\r\\n    <button mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BireTaskMeasurementPointTableDTO } from '../../../../../shared/types/api-output-types/task-management/bire-task-measurement-point-table-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\n\r\ninterface MeasurePoint {\r\n  measurePoint1?: string;\r\n  operator?: string;\r\n  measurePoint2?: string;\r\n  formula?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-measure-formula-popup',\r\n  styleUrls: ['../task-form.component.scss'],\r\n  templateUrl: './dialog-measure-formula-popup.component.html'\r\n})\r\nexport class DialogMeasureFormulaPopupComponent extends DialogComponent implements OnInit {\r\n  public static readonly BOOLEAN: string = 'BOOL';\r\n  public static readonly TEXT: string = 'TEXT';\r\n  @Input()\r\n  public measureList: BireTaskMeasurementPointTableDTO[];\r\n  @Input()\r\n  public selectedMeasurePoint: string;\r\n  @Input()\r\n  public selectedMeasurePointFormula: string;\r\n  @Input()\r\n  public selectedMeasurePointTitle: string;\r\n  @Output()\r\n  public onValidated: EventEmitter<string>;\r\n  public document: MeasurePoint;\r\n  public operators: LabelValue<string>[];\r\n  public measurePoints1: LabelValue<string>[];\r\n  public measurePoints2: LabelValue<string>[];\r\n  public readonly component: typeof DialogMeasureFormulaPopupComponent;\r\n  public constructor(public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Write, 'DialogMeasureFormulaPopupComponent');\r\n    this.onValidated = new EventEmitter<string>();\r\n    this.operators = [];\r\n    this.measurePoints1 = [];\r\n    this.measurePoints2 = [];\r\n    this.component = DialogMeasureFormulaPopupComponent;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.document = {};\r\n    this.loadMeasurementPoints1();\r\n    this.loadOperators();\r\n    this.loadMeasurementPoints2();\r\n    this.document.formula = this.selectedMeasurePointFormula;\r\n  }\r\n\r\n  private loadMeasurementPoints1() {\r\n    if (this.measureList) {\r\n      this.measurePoints1 = [];\r\n      const measures = [...this.measureList];\r\n      measures.forEach((obj) => {\r\n        if (\r\n          obj.counterCode &&\r\n          obj.unitCode &&\r\n          obj.unitCode !== this.component.BOOLEAN &&\r\n          obj.unitCode !== this.component.TEXT\r\n        ) {\r\n          if (!!obj.counterRemarks) {\r\n            this.measurePoints1.push({ label: `${obj.counterRemarks} (${obj.counterCode})`, value: obj.counterCode });\r\n          } else {\r\n            this.measurePoints1.push({ label: `(${obj.counterCode})`, value: obj.counterCode });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadMeasurementPoints2() {\r\n    if (this.measureList) {\r\n      this.measurePoints2 = [];\r\n      const measures = [...this.measureList];\r\n      measures.forEach((obj) => {\r\n        if (\r\n          obj.counterCode &&\r\n          obj.unitCode &&\r\n          obj.unitCode !== this.component.BOOLEAN &&\r\n          obj.unitCode !== this.component.TEXT\r\n        ) {\r\n          if (!!obj.counterRemarks) {\r\n            this.measurePoints2.push({ label: `${obj.counterRemarks} (${obj.counterCode})`, value: obj.counterCode });\r\n          } else {\r\n            this.measurePoints2.push({ label: `(${obj.counterCode})`, value: obj.counterCode });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadOperators() {\r\n    this.operators = [];\r\n    this.operators.push({ label: '+', value: '+' });\r\n    this.operators.push({ label: '-', value: '-' });\r\n    this.operators.push({ label: '/', value: '/' });\r\n    this.operators.push({ label: '*', value: '*' });\r\n  }\r\n\r\n  public addOperator(): void {\r\n    let formula = !!this.document.formula ? this.document.formula : '';\r\n    if (!!this.document.measurePoint1) {\r\n      formula = !!formula ? `${formula};[${this.document.measurePoint1}]` : `[${this.document.measurePoint1}]`;\r\n    }\r\n    if (!!this.document.operator && !!this.document.measurePoint2) {\r\n      formula = `${formula};(${this.document.operator});[${this.document.measurePoint2}]`;\r\n    }\r\n    this.document.formula = formula;\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.document.formula);\r\n    this.display = false;\r\n  }\r\n\r\n  public isPageValid(): boolean {\r\n    let isValidPage = true;\r\n    if (!!this.document.operator) {\r\n      isValidPage = !!this.document.measurePoint2;\r\n    }\r\n\r\n    if (!!this.document.measurePoint2) {\r\n      isValidPage = !!this.document.operator;\r\n    }\r\n\r\n    return isValidPage && !!this.document.measurePoint1;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"50\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".measureTaskLink\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".measurePoint\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode || isWriteOpenMode }\\\">\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"showMeasurementPointDialog()\\\">\\r\\n              {{ bireTaskMeasurementDTO.counterCode }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"bireTaskMeasurementDTO.counterCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"bireTaskMeasurementDTO.counterCode = undefined\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"showMeasurementPointDialog()\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".sequence\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              #sequenceNumber=\\\"ngModel\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"bireTaskMeasurementDTO.sequenceNumber\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n              [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n              [pValidateOnly]=\\\"true\\\"\\r\\n            />\\r\\n            <p-message\\r\\n              *ngIf=\\\"sequenceNumber.invalid && (sequenceNumber.dirty || sequenceNumber.touched)\\\"\\r\\n              severity=\\\"error\\\"\\r\\n              [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n            ></p-message>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".group\\\" | translate }}</label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"bireTaskMeasurementDTO.groupCode\\\"\\r\\n              [disabled]=\\\"\\r\\n                isReadOpenMode ||\\r\\n                (isWriteOpenMode &&\\r\\n                  hasRefMeasurementLinked &&\\r\\n                  !!bireTaskMeasurementDTO &&\\r\\n                  bireTaskMeasurementDTO.unitCode === component.BOOLEAN)\\r\\n              \\\"\\r\\n              [ngClass]=\\\"{\\r\\n                'background-grey':\\r\\n                  !isCreateOpenMode &&\\r\\n                  hasRefMeasurementLinked &&\\r\\n                  !!bireTaskMeasurementDTO &&\\r\\n                  bireTaskMeasurementDTO.unitCode === component.BOOLEAN &&\\r\\n                  !!bireTaskMeasurementDTO.groupCode\\r\\n              }\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".description\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <textarea\\r\\n              pInputTextarea\\r\\n              [rows]=\\\"2\\\"\\r\\n              class=\\\"aw-textarea\\\"\\r\\n              [(ngModel)]=\\\"bireTaskMeasurementDTO.description\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".additionalDescription\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <textarea\\r\\n              pInputTextarea\\r\\n              [rows]=\\\"2\\\"\\r\\n              class=\\\"aw-textarea\\\"\\r\\n              [(ngModel)]=\\\"bireTaskMeasurementDTO.additionalDescription\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        *ngIf=\\\"\\r\\n          !!bireTaskMeasurementDTO.unitCode &&\\r\\n          bireTaskMeasurementDTO.unitCode !== component.BOOLEAN &&\\r\\n          bireTaskMeasurementDTO.unitCode !== component.TEXT\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".minValue\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <input\\r\\n                #min=\\\"ngModel\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"aw-input\\\"\\r\\n                [(ngModel)]=\\\"bireTaskMeasurementDTO.minValue\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n                [pValidateOnly]=\\\"true\\\"\\r\\n              />\\r\\n              <p-message\\r\\n                *ngIf=\\\"min.invalid && (min.dirty || min.touched)\\\"\\r\\n                severity=\\\"error\\\"\\r\\n                [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n              ></p-message>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".maxValue\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <input\\r\\n                #max=\\\"ngModel\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"aw-input\\\"\\r\\n                [(ngModel)]=\\\"bireTaskMeasurementDTO.maxValue\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n                [pValidateOnly]=\\\"true\\\"\\r\\n              />\\r\\n              <p-message\\r\\n                *ngIf=\\\"max.invalid && (max.dirty || max.touched)\\\"\\r\\n                severity=\\\"error\\\"\\r\\n                [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n              ></p-message>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.close\\\" | translate }}</button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"disableButton()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n<aw-dialog-measure-search-popup\\r\\n  *ngIf=\\\"showAddMeasurementPointSearchDialog\\\"\\r\\n  [(display)]=\\\"showAddMeasurementPointSearchDialog\\\"\\r\\n  [data]=\\\"bireMeasurementRefDTO\\\"\\r\\n  [openMode]=\\\"measureSearchDialogOpenMode\\\"\\r\\n  (onMeasurementRowSelected)=\\\"onMeasurementRow($event)\\\"\\r\\n>\\r\\n</aw-dialog-measure-search-popup>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { InputValidationService } from '../../../../../shared/services/input-validation.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BireTaskMeasurementPointTableDTO } from '../../../../../shared/types/api-output-types/task-management/bire-task-measurement-point-table-dto.interface';\r\nimport { BireMeasureReferenceDTO } from '../../../../../shared/types/api-types/bire-measure-reference-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-measure-popup',\r\n  templateUrl: './dialog-measure-popup.component.html',\r\n  styleUrls: ['../task-form.component.scss']\r\n})\r\nexport class DialogMeasurePopupComponent extends DialogComponent implements OnInit {\r\n  public static readonly BOOLEAN: string = 'BOOL';\r\n  public static readonly TEXT: string = 'TEXT';\r\n\r\n  @Input('openMode')\r\n  public set openMode(mode: ComponentOpenMode) {\r\n    if (!!mode) {\r\n      this.measureSearchDialogOpenMode = mode;\r\n    } else {\r\n      this.measureSearchDialogOpenMode = ComponentOpenMode.Create;\r\n    }\r\n  }\r\n\r\n  @Input('data')\r\n  public set rowData(data: BireTaskMeasurementPointTableDTO) {\r\n    if (!!data) {\r\n      this.bireTaskMeasurementDTO = data;\r\n    } else {\r\n      this.bireTaskMeasurementDTO = {};\r\n    }\r\n  }\r\n\r\n  @Input() public hasRefMeasurementLinked: boolean;\r\n\r\n  @Output() public onValidatedMeasurementPoint: EventEmitter<BireTaskMeasurementPointTableDTO>;\r\n\r\n  public types: LabelValue<string>[];\r\n  public showAddMeasurementPointSearchDialog: boolean;\r\n  public bireTaskMeasurementDTO: BireTaskMeasurementPointTableDTO;\r\n  public bireMeasurementRefDTO: BireMeasureReferenceDTO;\r\n  public measureSearchDialogOpenMode: ComponentOpenMode;\r\n  public readonly component: typeof DialogMeasurePopupComponent;\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    public inputValidationService: InputValidationService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogMeasurePopupComponent');\r\n    this.onValidatedMeasurementPoint = new EventEmitter<BireTaskMeasurementPointTableDTO>();\r\n    this.component = DialogMeasurePopupComponent;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.updateOpenMode(this.measureSearchDialogOpenMode);\r\n  }\r\n\r\n  public showMeasurementPointDialog(): void {\r\n    if (this.isCreateOpenMode) {\r\n      this.showAddMeasurementPointSearchDialog = true;\r\n    } else {\r\n      this.showAddMeasurementPointSearchDialog = false;\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    if (!!this.bireTaskMeasurementDTO) {\r\n      this.onValidatedMeasurementPoint.emit(this.bireTaskMeasurementDTO);\r\n      this.display = false;\r\n    }\r\n  }\r\n\r\n  public onMeasurementRow(rowData: BireMeasureReferenceDTO): void {\r\n    if (!!rowData && !!this.bireTaskMeasurementDTO) {\r\n      this.bireTaskMeasurementDTO.counterCode = rowData.counterCode;\r\n      this.bireTaskMeasurementDTO.unitCode = rowData.unitCode;\r\n      this.bireTaskMeasurementDTO.counterRemarks = rowData.counterRemarks;\r\n    }\r\n  }\r\n\r\n  public disableButton(): boolean {\r\n    if (!!this.bireTaskMeasurementDTO.counterCode && !!this.bireTaskMeasurementDTO.sequenceNumber) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"60\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".measureAdvancedSearch\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"search-dialog-container\\\">\\r\\n      <div class=\\\"section search-criteria-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">{{ \\\"global.search\\\" | translate }}</h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <div class=\\\"column\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">{{ getComponentName() + \\\".unit\\\" | translate }}</label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"unitCodeList\\\"\\r\\n                    [(ngModel)]=\\\"bireMeasureRefDTO.unitCode\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group flex--2\\\">\\r\\n                <label class=\\\"form-label\\\">{{ getComponentName() + \\\".description\\\" | translate }}</label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"bireMeasureRefDTO.counterRemarks\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-control\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row search-criteria-footer\\\">\\r\\n              <div class=\\\"search-actions\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"search()\\\">\\r\\n                  <span>{{ \\\"global.toSearch\\\" | translate }}</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"section\\\">\\r\\n        <h4 class=\\\"section-title\\\">\\r\\n          {{ \\\"global.results\\\" | translate }} ({{\\r\\n            measurementPointTableDataSource ? measurementPointTableDataSource.dataCount : 0\\r\\n          }})\\r\\n        </h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <a-table [dataSource]=\\\"measurementPointTableDataSource\\\"> </a-table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n  <a-footer>\\r\\n    <button mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!measurementPointTableDataSource.hasDataSelection\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../../shared/services/session.service';\r\nimport { BireMeasureReferenceDTO } from '../../../../../../shared/types/api-types/bire-measure-reference-dto.interface';\r\nimport { DialogComponent } from '../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { ArrayUtils } from '../../../../../../shared/utils/array-utils';\r\nimport { TaskFormService } from '../../task-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-measure-search-popup',\r\n  templateUrl: './dialog-measure-search-popup.component.html'\r\n})\r\nexport class DialogMeasureSearchPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input('data')\r\n  public set setData(data: BireMeasureReferenceDTO) {\r\n    if (!!data) {\r\n      this.bireMeasureRefDTO = data;\r\n    } else {\r\n      this.bireMeasureRefDTO = {};\r\n    }\r\n  }\r\n  @Output() public onMeasurementRowSelected: EventEmitter<BireMeasureReferenceDTO>;\r\n\r\n  public bireMeasureRefDTO: BireMeasureReferenceDTO;\r\n\r\n  public measurementPointTableDataSource: TableDataSource<BireMeasureReferenceDTO>;\r\n  public unitCodeList: SelectItem[];\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly taskFormService: TaskFormService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogMeasureSearchPopupComponent');\r\n    this.initMeasurementPointTableDataSource();\r\n\r\n    this.onMeasurementRowSelected = new EventEmitter<BireMeasureReferenceDTO>();\r\n\r\n    this.unitCodeList = [];\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.updateOpenMode(this.openMode);\r\n    this.bindDropDownList();\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    if (\r\n      this.measurementPointTableDataSource.hasDataSelection &&\r\n      this.measurementPointTableDataSource.dataSelectionCount === 1\r\n    ) {\r\n      this.onMeasurementRowSelected.emit(this.measurementPointTableDataSource.dataSelection[0]);\r\n      this.display = false;\r\n    }\r\n  }\r\n\r\n  private bindDropDownList(): void {\r\n    this.taskFormService.findAllBireUnitMeasures().subscribe((result) => {\r\n      if (!!result) {\r\n        const labelValue: LabelValue<String>[] = [];\r\n        result.forEach((res: LabelValue<string>) => {\r\n          labelValue.push({\r\n            label: res.label,\r\n            value: res.value\r\n          });\r\n        });\r\n        this.unitCodeList = labelValue.sort(ArrayUtils.compareValues('label'));\r\n      }\r\n    });\r\n  }\r\n\r\n  public search(): void {\r\n    this.measurementPointTableDataSource.setData([]);\r\n    this.taskFormService.findBireMeasureReferencesBySearchCriteria(this.bireMeasureRefDTO).subscribe((results) => {\r\n      if (results) {\r\n        this.measurementPointTableDataSource.setData(results);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initMeasurementPointTableDataSource(): void {\r\n    this.measurementPointTableDataSource = new TableDataSource({\r\n      allowMultiSelect: false,\r\n      columns: [\r\n        {\r\n          field: 'counterCode',\r\n          translateKey: this.getTranslateKey('counterCode'),\r\n          width: '15%'\r\n        },\r\n        {\r\n          field: 'unitCode',\r\n          translateKey: this.getTranslateKey('unit'),\r\n          width: '15%'\r\n        },\r\n        {\r\n          field: 'counterRemarks',\r\n          translateKey: this.getTranslateKey('description'),\r\n          width: '70%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"60\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".searchPart\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"search-dialog-container\\\">\\r\\n      <div class=\\\"section\\\">\\r\\n        <h4 class=\\\"section-title\\\">{{ \\\"global.search\\\" | translate }}</h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <div class=\\\"column\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".partType\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"pnTypeList\\\"\\r\\n                    [(ngModel)]=\\\"selectedPnType\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".partNumber\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchCriteria.pnCode\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".partDesignation\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchCriteria.partDesignation\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row search-criteria-footer\\\">\\r\\n              <div class=\\\"search-actions\\\">\\r\\n                <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"search()\\\">\\r\\n                  {{ \\\"global.toSearch\\\" | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"section\\\">\\r\\n        <h4 class=\\\"section-title\\\">\\r\\n          {{ \\\"global.results\\\" | translate }} ({{ partNumberTableDataSource ? partNumberTableDataSource.dataCount : 0 }})\\r\\n        </h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <a-table [dataSource]=\\\"partNumberTableDataSource\\\"> </a-table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { TableDataSource } from '../../../../../shared/components/table/table-data-source';\r\nimport { AWPropertiesConstants } from '../../../../../shared/constants/aw-properties-constants';\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { PnTaskSearchInput } from '../../../../../shared/types/api-input-types/task-management/pn-task-search-input.interface';\r\nimport { BirePnDTO } from '../../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { ListUtils } from '../../../../../shared/utils/list-utils';\r\nimport { StringUtils } from '../../../../../shared/utils/string-utils';\r\nimport { TaskFormService } from '../task-form.service';\r\n\r\ninterface ItemRow {\r\n  partType: string;\r\n  partNumber: string;\r\n  partDesignation: string;\r\n  _obj: BirePnDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-measure-tool-popup',\r\n  templateUrl: './dialog-measure-tool-popup.component.html'\r\n})\r\nexport class DialogMeasureToolPopupComponent extends DialogComponent implements OnInit {\r\n  @Input() public searchInput: PnTaskSearchInput;\r\n\r\n  @Output() public onValidated: EventEmitter<BirePnDTO>;\r\n\r\n  public partNumberTableDataSource: TableDataSource<ItemRow>;\r\n\r\n  public pnTypeList: SelectItem[];\r\n  public selectedPnType: string | undefined;\r\n  private pnTypeMap: LabelValue<string>[];\r\n\r\n  public searchCriteria: PnTaskSearchInput;\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly translateService: TranslateService,\r\n    private readonly taskFormService: TaskFormService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogMeasureToolPopupComponent');\r\n    this.initTableDataSource();\r\n\r\n    this.onValidated = new EventEmitter<BirePnDTO>();\r\n    this.searchCriteria = {};\r\n    this.selectedPnType = AWPropertiesConstants.PN_TYPE_INGREDIENT_KEY;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    const selectedRow =\r\n      this.partNumberTableDataSource.dataSelectionCount === 1\r\n        ? this.partNumberTableDataSource.dataSelection[0]._obj\r\n        : undefined;\r\n    this.onValidated.emit(selectedRow);\r\n    this.display = false;\r\n  }\r\n\r\n  public search(): void {\r\n    this.partNumberTableDataSource.setData([]);\r\n    this.taskFormService.findPartNumbersAssociatedWithTaskOperations(this.searchCriteria).subscribe((results) => {\r\n      if (!!results) {\r\n        this.partNumberTableDataSource.setData(results.map((row) => this.createItemRow(row)));\r\n      }\r\n    });\r\n  }\r\n\r\n  private createItemRow(obj: BirePnDTO): ItemRow {\r\n    const birePnDTO: BirePnDTO = obj;\r\n\r\n    let pnType: string | undefined;\r\n    this.pnTypeMap.forEach((element: LabelValue<string>) => {\r\n      if (birePnDTO.pnType && birePnDTO.pnType === element.value) {\r\n        pnType = element.label;\r\n      }\r\n    });\r\n\r\n    const itemRow: ItemRow = {\r\n      partNumber: StringUtils.orEmpty(birePnDTO.pnCode),\r\n      partType: StringUtils.orEmpty(pnType),\r\n      partDesignation: StringUtils.orEmpty(birePnDTO.articleDesignation),\r\n      _obj: obj\r\n    };\r\n\r\n    return itemRow;\r\n  }\r\n\r\n  private init(): void {\r\n    if (!!this.searchInput) {\r\n      this.searchCriteria.taskCode = this.searchInput.taskCode;\r\n      this.searchCriteria.taskVersion = this.searchInput.taskVersion;\r\n    }\r\n\r\n    this.handlePnType();\r\n  }\r\n\r\n  private handlePnType(): void {\r\n    this.selectedPnType = undefined;\r\n    this.propertiesService.getValue(GenericPropertyConstants.PN_TYPE_MAP).subscribe((results) => {\r\n      this.pnTypeMap = ListUtils.orEmpty(results);\r\n      this.pnTypeList = ListUtils.orEmpty(results).map((elt: LabelValue<string>) => {\r\n        if (elt.value === AWPropertiesConstants.PN_TYPE_INGREDIENT_KEY) {\r\n          elt.label = this.translateService.instant(this.getTranslateKey('ingredientTool'));\r\n        }\r\n\r\n        return {\r\n          label: elt.label,\r\n          value: elt.value\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  private initTableDataSource(): void {\r\n    this.partNumberTableDataSource = new TableDataSource({\r\n      allowMultiSelect: false,\r\n      columns: [\r\n        {\r\n          field: 'partType',\r\n          translateKey: this.getTranslateKey('partType'),\r\n          width: '25%'\r\n        },\r\n        {\r\n          field: 'partNumber',\r\n          translateKey: this.getTranslateKey('partNumber'),\r\n          width: '25%'\r\n        },\r\n        {\r\n          field: 'partDesignation',\r\n          translateKey: this.getTranslateKey('partDesignation'),\r\n          width: '50%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm, disabled: isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".opeCode\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOnlyForm }\\\">\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"!isReadOnlyForm && openOperationTableDialog()\\\">\\r\\n              {{ operation.opeCode }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"operation.opeCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"\\r\\n                  operation.opeCode = undefined; operation.opeVersion = undefined; operation.rangeCode = undefined\\r\\n                \\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"!isReadOnlyForm && openOperationTableDialog()\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"operation.opeVersion\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".opeVersion\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"operation.opeVersion\\\" [disabled]=\\\"true\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"operation.rangeCode\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".rangeCode\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"operation.rangeCode\\\" [disabled]=\\\"true\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"add()\\\"\\r\\n      [disabled]=\\\"!isValidOperation()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-table\\r\\n  *ngIf=\\\"showOperationTableDialog\\\"\\r\\n  [data]=\\\"operationTableData\\\"\\r\\n  [(display)]=\\\"showOperationTableDialog\\\"\\r\\n  (onSelected)=\\\"onSelectedOperation($event)\\\"\\r\\n></aw-dialog-table>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { DialogTableData } from '../../../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { TableColumnFilterMode } from '../../../../../shared/enums/table-column-filter-mode.enum';\r\nimport { TableSelectionMode } from '../../../../../shared/enums/table-selection-mode.enum';\r\nimport { BireOperationDTO } from '../../../../../shared/types/api-types/bire-operation-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { TableColumn } from '../../../../../shared/types/table-column.interface';\r\nimport { TaskFormService } from '../task-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-operations-popup',\r\n  templateUrl: './dialog-operations-popup.component.html'\r\n})\r\nexport class DialogOperationsPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public operation: BireOperationDTO;\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public onAdded: EventEmitter<BireOperationDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public operationTableData: DialogTableData<BireOperationDTO>;\r\n  public showOperationTableDialog: boolean;\r\n\r\n  public constructor(private readonly taskFormService: TaskFormService) {\r\n    super(ComponentOpenMode.Write, 'DialogOperationsPopupComponent');\r\n\r\n    this.onAdded = new EventEmitter<BireOperationDTO>();\r\n\r\n    this.showOperationTableDialog = false;\r\n\r\n    this.initOperationTableData();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.operation) {\r\n      this.operation = {};\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public openOperationTableDialog(): void {\r\n    this.showOperationTableDialog = true;\r\n  }\r\n\r\n  public add(): void {\r\n    if (!!this.operation) {\r\n      this.onAdded.emit(this.operation);\r\n      this.display = false;\r\n    } else {\r\n      super.throwUnboundLocalError('add', 'this.operation');\r\n    }\r\n  }\r\n\r\n  private initOperationTableData(): void {\r\n    const operationTableCols: TableColumn[] = [\r\n      { field: 'opeCode', alignment: 'left', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeVersion', alignment: 'left', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'rangeCode', alignment: 'left', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeDesignation', alignment: 'left', filterMode: TableColumnFilterMode.Input }\r\n    ];\r\n\r\n    this.operationTableData = {\r\n      componentId: 'DialogOperation',\r\n      tableCols: operationTableCols,\r\n      tableRows: this.taskFormService.findBireOperationsBySearchCriteria({}),\r\n      dataKey: undefined,\r\n      selectionMode: TableSelectionMode.Single,\r\n      globalFilter: true\r\n    };\r\n  }\r\n\r\n  public isValidOperation(): boolean {\r\n    if (!!this.operation && this.operation.opeCode && this.operation.opeVersion && this.operation.rangeCode) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Operation Dialog\r\n   *************************************************************************/\r\n\r\n  public onSelectedOperation(operation: BireOperationDTO): void {\r\n    if (!!this.operation && operation) {\r\n      this.operation.opeCode = operation.opeCode;\r\n      this.operation.opeVersion = operation.opeVersion;\r\n      this.operation.rangeCode = operation.rangeCode;\r\n      this.operation.opeDesignation = operation.opeDesignation;\r\n      this.operation.opeDurationTime = operation.opeDurationTime;\r\n      this.operation.opeManHour = operation.opeManHour;\r\n      this.operation.opeQualification = operation.opeQualification;\r\n      this.operation.opeCost = operation.opeCost;\r\n    } else {\r\n      super.throwUnboundLocalError('onSelectedOperation', 'this.operation');\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".qualificationCode\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOnlyForm }\\\">\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"quickSearchQualification()\\\">\\r\\n              {{ qualification.qualificationCode }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"qualification.qualificationCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"qualification.qualificationCode = undefined; qualification.qualificationName = undefined\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"quickSearchQualification()\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"qualification.qualificationName\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".qualificationName\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"qualification.qualificationName\\\" [disabled]=\\\"true\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"add()\\\"\\r\\n      [disabled]=\\\"!qualification.qualificationCode\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-qualification\\r\\n  *ngIf=\\\"showQuickSearchQualificationPopup\\\"\\r\\n  [(display)]=\\\"showQuickSearchQualificationPopup\\\"\\r\\n  [qualification-code]=\\\"qualification.qualificationCode\\\"\\r\\n  (onSelected)=\\\"setSelectedQualification($event)\\\"\\r\\n></aw-dialog-search-qualification>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { BireQualificationDTO } from '../../../../../shared/types/api-types/bire-qualification-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-qualifications-popup',\r\n  templateUrl: './dialog-qualifications-popup.component.html'\r\n})\r\nexport class DialogQualificationsPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public qualification: BireQualificationDTO;\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public onAdded: EventEmitter<BireQualificationDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public linkTypes: LabelValue<string>[];\r\n\r\n  public displayValue: boolean;\r\n\r\n  public showQuickSearchQualificationPopup: boolean;\r\n\r\n  public constructor() {\r\n    super(ComponentOpenMode.Write, 'DialogQualificationsPopupComponent');\r\n\r\n    this.onAdded = new EventEmitter<BireQualificationDTO>();\r\n    this.showQuickSearchQualificationPopup = false;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.qualification) {\r\n      this.qualification = {};\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public add(): void {\r\n    this.onAdded.emit(this.qualification);\r\n    this.display = false;\r\n  }\r\n\r\n  public quickSearchQualification(): void {\r\n    this.showQuickSearchQualificationPopup = true;\r\n  }\r\n\r\n  public setSelectedQualification(event: BireQualificationDTO): void {\r\n    this.qualification = event;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"70\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"search-dialog-container\\\">\\r\\n      <div class=\\\"section search-criteria-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">{{ \\\"global.search\\\" | translate }}</h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <div class=\\\"column\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".evolutionNumber\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchCriteria.evolutionNumber\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".evolutionRevisionNumber\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchCriteria.evolutionRevisionNumber\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".evolutionSummary\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchCriteria.evolutionSummary\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row search-criteria-footer\\\">\\r\\n              <div class=\\\"search-actions\\\">\\r\\n                <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"search()\\\">\\r\\n                  <span>{{ \\\"global.toSearch\\\" | translate }}</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"section\\\">\\r\\n        <h4 class=\\\"section-title\\\">\\r\\n          {{ \\\"global.results\\\" | translate }} ({{ evolutionTableDataSource ? evolutionTableDataSource.dataCount : 0 }})\\r\\n        </h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <a-table [dataSource]=\\\"evolutionTableDataSource\\\"> </a-table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!evolutionTableDataSource.dataSelection\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { BireEvolutionDTO } from '../../../../../shared/types/api-types/bire-evolution-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { TaskFormService } from '../task-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-search-evolution-popup',\r\n  templateUrl: 'dialog-search-evolution-popup.component.html'\r\n})\r\nexport class DialogSearchEvolutionPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public evolutionNumber: string | undefined;\r\n\r\n  @Input()\r\n  public evolutionRevisionNumber: string | undefined;\r\n\r\n  @Output()\r\n  public onSelected: EventEmitter<BireEvolutionDTO>;\r\n\r\n  public evolutionTableLoading: boolean;\r\n  public searchCriteria: BireEvolutionDTO;\r\n  public evolutionTableDataSource: TableDataSource<BireEvolutionDTO>;\r\n\r\n  public constructor(private readonly taskFormService: TaskFormService) {\r\n    super(ComponentOpenMode.Write, 'DialogSearchEvolutionPopupComponent');\r\n    this.init();\r\n    this.initEvolutionTableDataSource();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (!!this.evolutionNumber) {\r\n      this.searchCriteria.evolutionNumber = this.evolutionNumber;\r\n    }\r\n    if (!!this.evolutionRevisionNumber) {\r\n      this.searchCriteria.evolutionRevisionNumber = this.evolutionRevisionNumber;\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    super.closeDialog();\r\n  }\r\n\r\n  public search(): void {\r\n    this.clearTable();\r\n\r\n    this.evolutionTableLoading = true;\r\n    this.taskFormService.findBireEvolutionsByEvolutionCriteria(this.searchCriteria).subscribe((result) => {\r\n      this.evolutionTableDataSource.addData(result.list);\r\n      this.evolutionTableLoading = false;\r\n    });\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onSelected.emit(this.evolutionTableDataSource.dataSelection[0]);\r\n    super.closeDialog();\r\n  }\r\n\r\n  private clearTable(): void {\r\n    this.evolutionTableLoading = false;\r\n  }\r\n\r\n  private init(): void {\r\n    this.searchCriteria = {};\r\n    this.onSelected = new EventEmitter<BireEvolutionDTO>();\r\n    this.clearTable();\r\n  }\r\n\r\n  private initEvolutionTableDataSource(): void {\r\n    this.evolutionTableDataSource = new TableDataSource({\r\n      allowMultiSelect: false,\r\n      columns: [\r\n        {\r\n          field: 'evolutionNumber',\r\n          translateKey: this.getTranslateKey('evolutionNumber'),\r\n          width: '12.5%'\r\n        },\r\n        {\r\n          field: 'evolutionRevisionNumber',\r\n          translateKey: this.getTranslateKey('evolutionRevisionNumber'),\r\n          width: '12.5%'\r\n        },\r\n        {\r\n          field: 'statusState',\r\n          translateKey: this.getTranslateKey('statusState'),\r\n          width: '15%'\r\n        },\r\n        {\r\n          field: 'evolutionSummary',\r\n          translateKey: this.getTranslateKey('evolutionSummary'),\r\n          width: '70%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"25\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".technicalLevel\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"technicalLevels\\\"\\r\\n              [(ngModel)]=\\\"til.technicalLevel\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              (onChange)=\\\"onTilSelected($event)\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"til.tilDescription\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".tilDescription\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"til.tilDescription\\\" [disabled]=\\\"true\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"add()\\\"\\r\\n      [disabled]=\\\"!til.tilName\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { BireTilDTO } from '../../../../../shared/types/api-types/bire-til-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { TaskFormService } from '../task-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-tils-popup',\r\n  templateUrl: './dialog-tils-popup.component.html'\r\n})\r\nexport class DialogTilsPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public tilInput: BireTilDTO | null;\r\n\r\n  public til: BireTilDTO;\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public onAdded: EventEmitter<BireTilDTO>;\r\n\r\n  public readonly componentId: string;\r\n\r\n  public technicalLevels: LabelValue<number>[];\r\n\r\n  public tilNames: LabelValue<string>[];\r\n\r\n  public descriptions: LabelValue<number>[];\r\n\r\n  public displayValue: boolean;\r\n\r\n  public constructor(private readonly taskFormService: TaskFormService) {\r\n    super(ComponentOpenMode.Write, 'DialogTilsPopupComponent');\r\n\r\n    this.onAdded = new EventEmitter<BireTilDTO>();\r\n\r\n    this.descriptions = [];\r\n\r\n    this.technicalLevels = [];\r\n\r\n    this.tilNames = [];\r\n    this.til = {};\r\n    this.loadTechnicalLevels();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (this.tilInput === null) {\r\n      this.tilInput = {};\r\n    }\r\n    if (!this.til) {\r\n      this.til = {};\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public add(): void {\r\n    this.onAdded.emit(this.til);\r\n    this.display = false;\r\n  }\r\n\r\n  private loadTechnicalLevels(): void {\r\n    this.taskFormService.findAllBireTils().subscribe((results) => {\r\n      results.forEach((result) => {\r\n        if (result.technicalLevel !== null && result.technicalLevel !== undefined && !!result.tilName) {\r\n          const tempName: LabelValue<number> = {\r\n            value: result.technicalLevel,\r\n            label: result.tilName\r\n          };\r\n\r\n          this.technicalLevels.push(tempName);\r\n        } else {\r\n          super.throwUnboundLocalError('loadTechnicalLevels', 'result.technicalLevel && result.tilName');\r\n        }\r\n\r\n        if (result.technicalLevel !== null && result.technicalLevel !== undefined) {\r\n        const tempDescription: LabelValue<number> = {\r\n          value: result.technicalLevel,\r\n          label: result.tilDescription || ''\r\n        };\r\n\r\n        this.descriptions.push(tempDescription);\r\n        } else {\r\n          super.throwUnboundLocalError('loadTechnicalLevels', 'result.technicalLevel');\r\n        }\r\n      });\r\n\r\n      if (!!this.tilInput) {\r\n        this.til = this.tilInput;\r\n      }\r\n    });\r\n  }\r\n\r\n  public onTilSelected(event: LabelValue<number>) {\r\n    if (event.value === null) {\r\n      this.til.tilName = undefined;\r\n      this.til.tilDescription = undefined;\r\n    } else {\r\n      this.til.tilName = this.technicalLevels.filter((name) => name.value === event.value)[0].label;\r\n      this.til.tilDescription = this.descriptions.filter((description) => description.value === event.value)[0].label;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\" *ngIf=\\\"!isCreateOpenMode && componentData && componentData.id\\\">- {{ subtitle }}</div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!isCreateOpenMode && previousTaskVersion\\\">\\r\\n        <a (click)=\\\"openTaskForm(previousTaskVersion)\\\">\\r\\n          <span>- {{ previousTaskVersion.taskCode }}:{{ previousTaskVersion.taskVersion }}</span>\\r\\n          <span *ngIf=\\\"previousTaskVersionLastMP\\\"> // {{ previousTaskVersionLastMP.programCode }}</span>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"object-status\\\" *ngIf=\\\"task.taskStatus\\\" (click)=\\\"showStatus()\\\">\\r\\n      {{ task.taskStatus | formatSelectOption: statuses }}\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button mat-raised-button id=\\\"edit\\\" *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\" (click)=\\\"editTask()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancelTask()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" class=\\\"btn-with-spinner\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"saveTask()\\\">\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"openStatusUpdatesPopup()\\\">{{ \\\"updates\\\" | translate }}</button>\\r\\n      <button *ngIf=\\\"showUpgradeButton\\\" type=\\\"button\\\" mat-menu-item (click)=\\\"upgradeTask()\\\">\\r\\n        {{ getComponentName() + \\\".upgrade\\\" | translate }}\\r\\n      </button>\\r\\n      <button mat-menu-item (click)=\\\"refresh()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">{{ \\\"addToFavorite\\\" | translate }}</button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <span [ngClass]=\\\"{ highlight: highlightHome }\\\">{{ \\\"home\\\" | translate }}</span>\\r\\n        </ng-template>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--6 grid-cell--no-padding\\\">\\r\\n            <div class=\\\"grid-row\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container\\\">\\r\\n                      <h3 class=\\\"grid-cell-title\\\">\\r\\n                        {{ \\\"page.mainData\\\" | translate }}\\r\\n                      </h3>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content\\\">\\r\\n                    <div class=\\\"column\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div id=\\\"taskCode\\\" class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskCode\\\" | translate }} </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"task.taskCode\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n                              maxlength=\\\"50\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"taskVersion\\\" class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskVersion\\\" | translate }} </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"task.taskVersion\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n                              maxlength=\\\"50\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"taskType\\\" class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskType\\\" | translate }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.TASK_TYPE) }\\\"\\r\\n                          >\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"taskTypes\\\"\\r\\n                              [(ngModel)]=\\\"task.taskTypeCode\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div id=\\\"applicabilityDate\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ \\\"global.applicabilityDate\\\" | translate }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.APPLICABILITY_DATE) }\\\"\\r\\n                          >\\r\\n                            <p-calendar\\r\\n                              showButtonBar=\\\"true\\\"\\r\\n                              [monthNavigator]=\\\"true\\\"\\r\\n                              [yearNavigator]=\\\"true\\\"\\r\\n                              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                              class=\\\"aw-calendar\\\"\\r\\n                              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                              [(ngModel)]=\\\"task.taskApplicabilityDate\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-calendar>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"taskGroups\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".group\\\" | translate }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.TASK_GROUP) }\\\"\\r\\n                          >\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown  fixed-width\\\"\\r\\n                              [options]=\\\"taskGroups\\\"\\r\\n                              [(ngModel)]=\\\"task.groupCode\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"taskApplicabilityCode\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".taskApplicabilityCode\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.APPLICABILITY_CODE) }\\\"\\r\\n                          >\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown  fixed-width\\\"\\r\\n                              [options]=\\\"applicabilities\\\"\\r\\n                              [(ngModel)]=\\\"task.taskApplicabilityCode\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div id=\\\"taskDesignation\\\" class=\\\"form-group flex--2\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".taskDesignation\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.DESIGNATION) }\\\"\\r\\n                          >\\r\\n                            <div *ngIf=\\\"taskDesignationDiff && isReadOpenMode\\\" [innerHTML]=\\\"taskDesignationDiff\\\"></div>\\r\\n                            <textarea\\r\\n                              *ngIf=\\\"!taskDesignationDiff || !isReadOpenMode\\\"\\r\\n                              pInputTextarea\\r\\n                              [rows]=\\\"3\\\"\\r\\n                              class=\\\"aw-textarea\\\"\\r\\n                              [(ngModel)]=\\\"task.taskDesignation\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"1000\\\"\\r\\n                            ></textarea>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"isCritical\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".isCritical\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-checkbox\\r\\n                              class=\\\"aw-checkbox\\\"\\r\\n                              binary=\\\"true\\\"\\r\\n                              [(ngModel)]=\\\"isCritical\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              (onChange)=\\\"changeIsCriticalDynamicAttribute()\\\"\\r\\n                            ></p-checkbox>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-row\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container\\\">\\r\\n                      <h3 class=\\\"grid-cell-title\\\">\\r\\n                        {{ \\\"page.additionalData\\\" | translate }}\\r\\n                      </h3>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content\\\">\\r\\n                    <div class=\\\"column\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div id=\\\"mroCenter\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".mroCenter\\\" | translate }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.MRO_CENTER) }\\\"\\r\\n                          >\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown  fixed-width\\\"\\r\\n                              [options]=\\\"mroCenters\\\"\\r\\n                              [(ngModel)]=\\\"task.repairCenterCode\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"inspectionPerEsm\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".inspectionPerEsm\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.INSPECTION_ESM) }\\\"\\r\\n                          >\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"task.inspectionPerEsm\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"300\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"overhaul\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".overhaul\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-checkbox\\r\\n                              class=\\\"aw-checkbox\\\"\\r\\n                              binary=\\\"true\\\"\\r\\n                              [(ngModel)]=\\\"task.overhaul\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.OVERHAUL) }\\\"\\r\\n                            ></p-checkbox>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div id=\\\"taskZone\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".taskZone\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\" [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.ZONE) }\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"task.taskZone\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"300\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"isCostSettingEnabled\\\" id=\\\"cost\\\" class=\\\"form-group cost-field\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".cost\\\" | translate }}\\r\\n                            <span *ngIf=\\\"currency\\\">({{ currency }})</span>\\r\\n                          </label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.TOTAL_COST) }\\\"\\r\\n                          >\\r\\n                            <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"true\\\" [ngModel]=\\\"totalCost\\\" />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\"></div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div id=\\\"taskDescription\\\" class=\\\"form-group flex--3\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".taskDescription\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.DESCRIPTION) }\\\"\\r\\n                          >\\r\\n                            <div *ngIf=\\\"taskDescriptionDiff && isReadOpenMode\\\" [innerHTML]=\\\"taskDescriptionDiff\\\"></div>\\r\\n                            <textarea\\r\\n                              *ngIf=\\\"!taskDescriptionDiff || !isReadOpenMode\\\"\\r\\n                              pInputTextarea\\r\\n                              [rows]=\\\"5\\\"\\r\\n                              class=\\\"aw-textarea\\\"\\r\\n                              [(ngModel)]=\\\"task.taskDescription\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              [maxlength]=\\\"15000\\\"\\r\\n                            ></textarea>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-cell--6 grid-cell--no-padding\\\">\\r\\n            <div class=\\\"grid-row\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container\\\">\\r\\n                      <h3 class=\\\"grid-cell-title\\\">\\r\\n                        {{ componentData.componentId + \\\".referenceManual\\\" | translate }}\\r\\n                      </h3>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content\\\">\\r\\n                    <div class=\\\"column\\\">\\r\\n                      <div class=\\\"row\\\" [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.REFERENCE_MANUAL) }\\\">\\r\\n                        <div id=\\\"taskChapter\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".taskChapter\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"task.taskChapter\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"5\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"taskSection\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".taskSection\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"task.taskSection\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"5\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"taskSubject\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".taskSubject\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"task.taskSubject\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"6\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"taskTask\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".taskTask\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"task.taskTask\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"50\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"taskSubTask\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".taskSubTask\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"task.taskSubTask\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"50\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-row\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container\\\">\\r\\n                      <h3 class=\\\"grid-cell-title\\\">\\r\\n                        {{ componentData.componentId + \\\".maintenancePrograms\\\" | translate }} ({{\\r\\n                          maintenanceProgramsTableDataSource ? maintenanceProgramsTableDataSource.dataCount : 0\\r\\n                        }})\\r\\n                      </h3>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <div\\r\\n                        class=\\\"section-content\\\"\\r\\n                        [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.MAINTENANCE_PROGRAMS) }\\\"\\r\\n                      >\\r\\n                        <a-table [dataSource]=\\\"maintenanceProgramsTableDataSource\\\">\\r\\n                          <ng-template columnDef=\\\"programCode\\\" let-rowData=\\\"rowData\\\">\\r\\n                            <a (click)=\\\"openMaintenanceProgramsForm(rowData)\\\">{{ rowData.programCode }}</a>\\r\\n                          </ng-template>\\r\\n                        </a-table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-row\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container\\\">\\r\\n                      <h3 class=\\\"grid-cell-title\\\">\\r\\n                        {{ componentData.componentId + \\\".shopManuals\\\" | translate }} ({{\\r\\n                          shopManualsTableDataSource ? shopManualsTableDataSource.dataCount : 0\\r\\n                        }})\\r\\n                      </h3>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <a-table [dataSource]=\\\"shopManualsTableDataSource\\\"> </a-table>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <span [ngClass]=\\\"{ highlight: highlightTaskCard }\\\">{{ getComponentName() + \\\".taskCard\\\" | translate }}</span>\\r\\n        </ng-template>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--12\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ getComponentName() + \\\".ope\\\" | translate }}\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <h4 class=\\\"section-title\\\">\\r\\n                    {{ componentData.componentId + \\\".operation\\\" | translate }} ({{\\r\\n                      operationTableDataSource ? operationTableDataSource.dataCount : 0\\r\\n                    }})\\r\\n                  </h4>\\r\\n\\r\\n                  <div class=\\\"section-content\\\" [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.OPERATIONS) }\\\">\\r\\n                    <a-table [dataSource]=\\\"operationTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && operationTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteOperation()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"operationTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"openOperation()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.open\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && !operationTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"createOperation()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.add\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"ope\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <a (click)=\\\"openOperationForm(rowData)\\\">{{ rowData.ope }}</a>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--6\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".superiorTasks\\\" | translate }} ({{\\r\\n                      superiorTableDataSource ? superiorTableDataSource.dataCount : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div\\r\\n                    class=\\\"section-content\\\"\\r\\n                    [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.SUPERIOR_TASKS) }\\\"\\r\\n                  >\\r\\n                    <a-table [dataSource]=\\\"superiorTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && superiorTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteSuperiorTask()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && superiorTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"editSuperiorTask()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.edit\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"superiorTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"openSuperiorTask()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.open\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && !superiorTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"createSuperiorTask()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.add\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"taskCode\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <a (click)=\\\"openTaskForm(rowData)\\\">{{ rowData.taskCode }}</a>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-cell--6\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".topDownTaskStructure\\\" | translate }}\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div\\r\\n                    class=\\\"section-content\\\"\\r\\n                    [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.TOP_DOWN_STRUCTURE) }\\\"\\r\\n                  >\\r\\n                    <p-treeTable\\r\\n                      #ptreetableTopDown\\r\\n                      class=\\\"aw-tree-table2\\\"\\r\\n                      [value]=\\\"topDownTreeTable\\\"\\r\\n                      [columns]=\\\"topDownTaskStructureTableCols\\\"\\r\\n                      selectionMode=\\\"checkbox\\\"\\r\\n                      [(selection)]=\\\"selectedTopDownNodes\\\"\\r\\n                      (onNodeSelect)=\\\"onRowSelected($event.node)\\\"\\r\\n                      (onNodeUnselect)=\\\"onRowUnSelected($event.node)\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                        <span *ngIf=\\\"!isLoadingTopDownTreeTable\\\"> &nbsp;</span>\\r\\n\\r\\n                        <div *ngIf=\\\"isLoadingTopDownTreeTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                          <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                          <div class=\\\"lds-hourglass\\\"></div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"caption\\\">\\r\\n                        <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedTopDownNodes.length > 0 }\\\">\\r\\n                          <div class=\\\"aw-table-global-filter\\\">\\r\\n                            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </label>\\r\\n\\r\\n                            <input\\r\\n                              #ptreetableTopDownGlobalFilter\\r\\n                              class=\\\"aw-table-global-filter-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                              (input)=\\\"ptreetableTopDown.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"aw-table-actions\\\">\\r\\n                            <button\\r\\n                              *ngIf=\\\"\\r\\n                                !isReadOpenMode &&\\r\\n                                selectedTopDownNodes.length === 1 &&\\r\\n                                selectedTopDownNodes[0].parent !== null\\r\\n                              \\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              color=\\\"warn\\\"\\r\\n                              (click)=\\\"deleteTopDownTask()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.delete\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"!isReadOpenMode && selectedTopDownNodes.length === 1\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"editTopDownTask()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.edit\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"selectedTopDownNodes.length === 1\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"openTopDownTask()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.open\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"!isReadOpenMode && selectedTopDownNodes.length === 0\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"createTopDownTask()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.add\\\" | translate }}\\r\\n                            </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                        <colgroup>\\r\\n                          <col class=\\\"aw-table-checkbox-wrapper\\\" [ngClass]=\\\"{ 'display--none': isReadOpenMode }\\\" />\\r\\n                          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                          <th class=\\\"aw-table-checkbox-wrapper\\\" [ngClass]=\\\"{ 'display--none': isReadOpenMode }\\\">\\r\\n                            <p-treeTableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-treeTableHeaderCheckbox>\\r\\n                          </th>\\r\\n\\r\\n                          <th ttResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                            {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                          </th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n                        <tr>\\r\\n                          <td class=\\\"aw-table-checkbox-wrapper\\\" [ngClass]=\\\"{ 'display--none': isReadOpenMode }\\\">\\r\\n                            <p-treeTableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowNode\\\"></p-treeTableCheckbox>\\r\\n                          </td>\\r\\n\\r\\n                          <td *ngFor=\\\"let col of columns; let i = index\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                            <p-treeTableToggler [rowNode]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableToggler>\\r\\n\\r\\n                            <span [ngSwitch]=\\\"col.field\\\">\\r\\n                              <a *ngSwitchCase=\\\"'taskCode'\\\" (click)=\\\"openTaskForm(rowData['bireTaskDTO'])\\\">{{\\r\\n                                rowData[\\\"bireTaskDTO\\\"][col.field]\\r\\n                              }}</a>\\r\\n\\r\\n                              <span *ngSwitchCase=\\\"'sequenceNumber'\\\"> {{ rowData[col.field] }} </span>\\r\\n\\r\\n                              <span *ngSwitchDefault> {{ rowData[\\\"bireTaskDTO\\\"][col.field] }} </span>\\r\\n                            </span>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-treeTable>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--6\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".anterior\\\" | translate }} ({{\\r\\n                      anteriorTaskTableDataSource ? anteriorTaskTableDataSource.dataCount : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div\\r\\n                    class=\\\"section-content\\\"\\r\\n                    [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.ANTERIOR_TASKS) }\\\"\\r\\n                  >\\r\\n                    <a-table [dataSource]=\\\"anteriorTaskTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && anteriorTaskTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteAnterior()\\\"\\r\\n                          [disabled]=\\\"!anteriorTaskTableDataSource.hasDataSelection\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && anteriorTaskTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"editAnterior()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.edit\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"anteriorTaskTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"openMaintenancePrograms()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.open\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && !anteriorTaskTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"createAnterior()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.add\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"taskCode\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <a (click)=\\\"openTaskForm(rowData)\\\">{{ rowData.taskCode }}</a>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-cell--6\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".posterior\\\" | translate }} ({{\\r\\n                      posteriorTaskTableDataSource ? posteriorTaskTableDataSource.dataCount : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div\\r\\n                    class=\\\"section-content\\\"\\r\\n                    [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.POSTERIOR_TASKS) }\\\"\\r\\n                  >\\r\\n                    <a-table [dataSource]=\\\"posteriorTaskTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && posteriorTaskTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deletePosterior()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && posteriorTaskTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"editPosterior()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.edit\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"posteriorTaskTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"openPosterior()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.open\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && !posteriorTaskTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"createPosterior()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.add\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"taskCode\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <a (click)=\\\"openTaskForm(rowData)\\\">{{ rowData.taskCode }}</a>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--12\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".linkedTasks\\\" | translate }} ({{\\r\\n                      linkedTaskTableDataSource ? linkedTaskTableDataSource.dataCount : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div\\r\\n                    class=\\\"section-content\\\"\\r\\n                    [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.LINKED_TASK) }\\\"\\r\\n                  >\\r\\n                    <a-table [dataSource]=\\\"linkedTaskTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && linkedTaskTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteLinkedTasks()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && linkedTaskTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"editLinkedTasks()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.edit\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"linkedTaskTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"openLinkedTasks()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.open\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && !linkedTaskTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"createLinkedTasks()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.add\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"taskCode\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <a (click)=\\\"openTaskForm(rowData)\\\">{{ rowData.taskCode }}</a>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <span [ngClass]=\\\"{ highlight: highlightImpacts }\\\">{{ getComponentName() + \\\".impacts\\\" | translate }}</span>\\r\\n        </ng-template>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--6\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".evolutions\\\" | translate }} ({{\\r\\n                      evolutionsTableDataSource ? evolutionsTableDataSource.dataCount : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div class=\\\"section-content\\\" [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.EVOLUTIONS) }\\\">\\r\\n                    <a-table [dataSource]=\\\"evolutionsTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && evolutionsTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteEvolution()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && evolutionsTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"openEvolution()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.open\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && !evolutionsTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"createEvolution()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.add\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"evolutionNumber\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <a (click)=\\\"openEvolutionForm(rowData)\\\">{{ rowData.evolutionNumber }}</a>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-cell--6\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".maintainedItems\\\" | translate }} ({{\\r\\n                      maintainedItemsTableDataSource ? maintainedItemsTableDataSource.dataCount : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div class=\\\"section-content\\\" [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.ITEMLINKED) }\\\">\\r\\n                    <a-table [dataSource]=\\\"maintainedItemsTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && maintainedItemsTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteMaintainedItem()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && maintainedItemsTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"openMaintainedItem()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.open\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && !maintainedItemsTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"createMaintainedItem()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.add\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"item\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <a (click)=\\\"openItem(rowData)\\\">{{ rowData.item }}</a>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"field\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <a (click)=\\\"openField(rowData)\\\">{{ rowData.field }}</a>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <span [ngClass]=\\\"{ highlight: highlightPrerequisites }\\\"\\r\\n            >{{ getComponentName() + \\\".prerequisites\\\" | translate }}\\r\\n          </span>\\r\\n        </ng-template>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--6\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".qualifications\\\" | translate }} ({{\\r\\n                      qualificationsTableDataSource ? qualificationsTableDataSource.dataCount : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div\\r\\n                    class=\\\"section-content\\\"\\r\\n                    [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.ASSOCIATED_QUALIFICATIONS) }\\\"\\r\\n                  >\\r\\n                    <a-table [dataSource]=\\\"qualificationsTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && qualificationsTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteQualification()\\\"\\r\\n                          [disabled]=\\\"!qualificationsTableDataSource.hasDataSelection\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && qualificationsTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"openQualification()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.open\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && !qualificationsTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"createQualification()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.add\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-cell--6\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".til\\\" | translate }} ({{\\r\\n                      tilTableDataSource ? tilTableDataSource.dataCount : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div\\r\\n                    class=\\\"section-content\\\"\\r\\n                    [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.TECHNICAL_LEVEL) }\\\"\\r\\n                  >\\r\\n                    <a-table [dataSource]=\\\"tilTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && tilTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteTil()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && tilTableDataSource.dataSelectionCount === 1\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"openTil()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.open\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"!isReadOpenMode && !tilTableDataSource.hasDataSelection\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"createTil()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.add\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <span [ngClass]=\\\"{ highlight: highlightAttributes }\\\"> {{ \\\"attributes\\\" | translate }}</span>\\r\\n        </ng-template>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div id=\\\"attributesPanel\\\" class=\\\"grid-cell--12\\\">\\r\\n            <div #attributesAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".attributes\\\" | translate }}\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div\\r\\n                class=\\\"grid-cell-content grid-cell-content-with-section\\\"\\r\\n                [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.ATTRIBUTES) }\\\"\\r\\n              >\\r\\n                <aw-dynamic-attributes [attributes]=\\\"dynamicAttributesForTask\\\" [isReadOpenMode]=\\\"isReadOpenMode\\\">\\r\\n                </aw-dynamic-attributes>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <span [ngClass]=\\\"{ highlight: highlightDocuments }\\\">{{ \\\"documents\\\" | translate }}</span>\\r\\n        </ng-template>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--12\\\" (click)=\\\"selectPageTocEntry(component.DOCUMENTS_ANCHOR_ID)\\\">\\r\\n            <div\\r\\n              class=\\\"grid-cell grid-cell--container\\\"\\r\\n              [ngClass]=\\\"{ active: isPageTocEntrySelected(component.DOCUMENTS_ANCHOR_ID) }\\\"\\r\\n            >\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ getComponentName() + \\\".documents\\\" | translate }} ({{\\r\\n                      documentsTableDataSource ? documentsTableDataSource.dataCount : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content\\\" [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.DOCUMENTS) }\\\">\\r\\n                <a-table [dataSource]=\\\"documentsTableDataSource\\\">\\r\\n                  <ng-template tableActionsDef>\\r\\n                    <button\\r\\n                      *ngIf=\\\"!isReadOpenMode && documentsTableDataSource.hasDataSelection\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      color=\\\"warn\\\"\\r\\n                      (click)=\\\"deleteDocuments()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.delete\\\" | translate }}\\r\\n                    </button>\\r\\n\\r\\n                    <button\\r\\n                      *ngIf=\\\"!isReadOpenMode && documentsTableDataSource.dataSelectionCount === 1\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"editDocument()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.edit\\\" | translate }}\\r\\n                    </button>\\r\\n\\r\\n                    <button\\r\\n                      *ngIf=\\\"!isReadOpenMode && !documentsTableDataSource.hasDataSelection\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"addDocument()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.add\\\" | translate }}\\r\\n                    </button>\\r\\n                  </ng-template>\\r\\n                  <ng-template columnDef=\\\"docName\\\" let-rowData=\\\"rowData\\\">\\r\\n                    <a (click)=\\\"downloadDocument(rowData)\\\">{{ rowData.docName }}</a>\\r\\n                  </ng-template>\\r\\n                  <ng-template columnDef=\\\"docExtension\\\" let-rowData=\\\"rowData\\\">\\r\\n                    {{ showDocExtension(rowData) }}\\r\\n                  </ng-template>\\r\\n                  <ng-template columnDef=\\\"docPublicationDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                    {{ rowData.docPublicationDate | date: \\\"yyyy/MM/dd\\\":\\\"\\\":translateService.currentLang }}\\r\\n                  </ng-template>\\r\\n                  <ng-template columnDef=\\\"docSource\\\" let-rowData=\\\"rowData\\\">\\r\\n                    {{ rowData.docSource }}\\r\\n                    <i\\r\\n                      *ngIf=\\\"validateUrl(rowData.docSource)\\\"\\r\\n                      class=\\\"fa fa-fw fa-external-link aw-icon aw-icon-with-border\\\"\\r\\n                      aria-hidden=\\\"true\\\"\\r\\n                      pTooltip=\\\"{{ 'global.open' | translate }}\\\"\\r\\n                      tooltipPosition=\\\"top\\\"\\r\\n                      (click)=\\\"openUrl(rowData.docSource)\\\"\\r\\n                    ></i>\\r\\n                  </ng-template>\\r\\n                </a-table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          <span [ngClass]=\\\"{ highlight: highlightMeasurementPoint }\\\">{{ \\\"measurementPoints\\\" | translate }}</span>\\r\\n        </ng-template>\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div\\r\\n            #measurementPointsAnchor\\r\\n            class=\\\"grid-cell--12\\\"\\r\\n            (click)=\\\"selectPageTocEntry(component.MEASUREMENT_POINTS_ANCHOR_ID)\\\"\\r\\n          >\\r\\n            <div\\r\\n              class=\\\"grid-cell grid-cell--container\\\"\\r\\n              [ngClass]=\\\"{ active: isPageTocEntrySelected(component.MEASUREMENT_POINTS_ANCHOR_ID) }\\\"\\r\\n            >\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ getComponentName() + \\\".measurementPoints\\\" | translate }} ({{\\r\\n                      measurementPointsTableDataSource ? measurementPointsTableDataSource.dataCount : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div\\r\\n                class=\\\"grid-cell-content\\\"\\r\\n                [ngClass]=\\\"{ highlight: isUpdatedField(TaskFieldsConstant.MEASUREMENT_POINT) }\\\"\\r\\n              >\\r\\n                <a-table [dataSource]=\\\"measurementPointsTableDataSource\\\">\\r\\n                  <ng-template tableActionsDef>\\r\\n                    <button\\r\\n                      mat-raised-button\\r\\n                      *ngIf=\\\"!isReadOpenMode && measurementPointsTableDataSource.hasDataSelection\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      (click)=\\\"deleteMeasurementPoints(measurementPointsTableDataSource.dataSelection)\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.delete\\\" | translate }}\\r\\n                    </button>\\r\\n\\r\\n                    <button\\r\\n                      mat-raised-button\\r\\n                      *ngIf=\\\"!isReadOpenMode && measurementPointsTableDataSource.dataSelectionCount === 1\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      (click)=\\\"updateMeasurementPoint()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.update\\\" | translate }}\\r\\n                    </button>\\r\\n\\r\\n                    <button\\r\\n                      mat-raised-button\\r\\n                      color=\\\"warn\\\"\\r\\n                      *ngIf=\\\"measurementPointsTableDataSource.dataSelectionCount === 1\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      (click)=\\\"openMeasurementPoint()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.open\\\" | translate }}\\r\\n                    </button>\\r\\n\\r\\n                    <button\\r\\n                      *ngIf=\\\"!isReadOpenMode && !measurementPointsTableDataSource.hasDataSelection\\\"\\r\\n                      mat-raised-button\\r\\n                      type=\\\"button\\\"\\r\\n                      (click)=\\\"addMeasurementPoint()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.add\\\" | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                      *ngIf=\\\"!isReadOpenMode && measurementPointsTableDataSource.dataSelectionCount === 1\\\"\\r\\n                      mat-raised-button\\r\\n                      type=\\\"button\\\"\\r\\n                      (click)=\\\"toolMeasurementPoint()\\\"\\r\\n                    >\\r\\n                      {{ getComponentName() + \\\".tool\\\" | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                      mat-raised-button\\r\\n                      *ngIf=\\\"!isReadOpenMode && showMeasurementPointLinkButton()\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      (click)=\\\"linkMeasurementPoints()\\\"\\r\\n                    >\\r\\n                      {{ getComponentName() + \\\".link\\\" | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                      mat-raised-button\\r\\n                      *ngIf=\\\"!isReadOpenMode && showMeasurementPointUnLinkButton()\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      (click)=\\\"unLinkMeasurementPoints()\\\"\\r\\n                    >\\r\\n                      {{ getComponentName() + \\\".unLink\\\" | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                      *ngIf=\\\"!isReadOpenMode && showMeasurementPointFormulaButton()\\\"\\r\\n                      mat-raised-button\\r\\n                      type=\\\"button\\\"\\r\\n                      (click)=\\\"formulaMeasurementPoint()\\\"\\r\\n                    >\\r\\n                      {{ getComponentName() + \\\".formula\\\" | translate }}\\r\\n                    </button>\\r\\n                  </ng-template>\\r\\n                </a-table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n\\r\\n    <aw-dialog-search-operation\\r\\n      *ngIf=\\\"showOperationDialog\\\"\\r\\n      [(display)]=\\\"showOperationDialog\\\"\\r\\n      (onValidated)=\\\"onAddOperation($event)\\\"\\r\\n    ></aw-dialog-search-operation>\\r\\n\\r\\n    <aw-dialog-operations-popup\\r\\n      *ngIf=\\\"showOperationFormDialog\\\"\\r\\n      [(display)]=\\\"showOperationFormDialog\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyOperationDialog\\\"\\r\\n      [operation]=\\\"currentOperation\\\"\\r\\n    ></aw-dialog-operations-popup>\\r\\n\\r\\n    <aw-dialog-evolutions-popup\\r\\n      *ngIf=\\\"showEvolutionsDialog\\\"\\r\\n      [evolution]=\\\"currentEvolution\\\"\\r\\n      [(display)]=\\\"showEvolutionsDialog\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyEvolutionsDialog\\\"\\r\\n      (onAdded)=\\\"onAddEvolution($event)\\\"\\r\\n    >\\r\\n    </aw-dialog-evolutions-popup>\\r\\n\\r\\n    <aw-dialog-item-versions-popup\\r\\n      *ngIf=\\\"showMaintainedItemsDialog\\\"\\r\\n      [item]=\\\"currentMaintainedItem\\\"\\r\\n      [(display)]=\\\"showMaintainedItemsDialog\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyMaintainedItemsDialog\\\"\\r\\n      (onAdded)=\\\"onAddedMaintainedItem($event)\\\"\\r\\n    ></aw-dialog-item-versions-popup>\\r\\n\\r\\n    <aw-dialog-search-qualification\\r\\n      *ngIf=\\\"showQualificationsDialog\\\"\\r\\n      [(display)]=\\\"showQualificationsDialog\\\"\\r\\n      (onSelected)=\\\"onAddedQualification($event)\\\"\\r\\n    >\\r\\n    </aw-dialog-search-qualification>\\r\\n\\r\\n    <aw-dialog-tils-popup\\r\\n      *ngIf=\\\"showTilDialog\\\"\\r\\n      [tilInput]=\\\"currentTil\\\"\\r\\n      [(display)]=\\\"showTilDialog\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyTilDialog\\\"\\r\\n      (onAdded)=\\\"onAddedTil($event)\\\"\\r\\n    ></aw-dialog-tils-popup>\\r\\n\\r\\n    <aw-dialog-associated-tasks-popup\\r\\n      *ngIf=\\\"showSuperiorTasksDialog\\\"\\r\\n      [isNewForm]=\\\"isCreateOpenMode\\\"\\r\\n      [linkTypes]=\\\"superior\\\"\\r\\n      [isDisplayLinkType]=\\\"false\\\"\\r\\n      [associatedTasks]=\\\"currentSuperiorTask\\\"\\r\\n      [(display)]=\\\"showSuperiorTasksDialog\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlySuperiorTasksDialog\\\"\\r\\n      (onAssociated)=\\\"onAssociatedSuperiorTask($event)\\\"\\r\\n    ></aw-dialog-associated-tasks-popup>\\r\\n\\r\\n    <aw-dialog-associated-tasks-popup\\r\\n      *ngIf=\\\"showTopDownTasksDialog\\\"\\r\\n      [linkTypes]=\\\"topDown\\\"\\r\\n      [isNewForm]=\\\"isCreateOpenMode\\\"\\r\\n      [isDisplayLinkType]=\\\"false\\\"\\r\\n      [associatedTasks]=\\\"currentTopDownTask\\\"\\r\\n      [(display)]=\\\"showTopDownTasksDialog\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyTopDownTasksDialog\\\"\\r\\n      (onAssociated)=\\\"onAssociatedTopDownTask($event)\\\"\\r\\n    >\\r\\n    </aw-dialog-associated-tasks-popup>\\r\\n\\r\\n    <aw-dialog-associated-tasks-popup\\r\\n      *ngIf=\\\"showAnteriorTasksDialog\\\"\\r\\n      [linkTypes]=\\\"anterior\\\"\\r\\n      [isNewForm]=\\\"isCreateOpenMode\\\"\\r\\n      [isDisplayLinkType]=\\\"false\\\"\\r\\n      [associatedTasks]=\\\"currentAnterior\\\"\\r\\n      [(display)]=\\\"showAnteriorTasksDialog\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyAnteriorDialog\\\"\\r\\n      (onAssociated)=\\\"onAssociatedAnteriorTask($event)\\\"\\r\\n    ></aw-dialog-associated-tasks-popup>\\r\\n\\r\\n    <aw-dialog-associated-tasks-popup\\r\\n      *ngIf=\\\"showPosteriorDialog\\\"\\r\\n      [linkTypes]=\\\"posterior\\\"\\r\\n      [isNewForm]=\\\"isCreateOpenMode\\\"\\r\\n      [isDisplayLinkType]=\\\"false\\\"\\r\\n      [associatedTasks]=\\\"currentPosterior\\\"\\r\\n      [(display)]=\\\"showPosteriorDialog\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyPosteriorDialog\\\"\\r\\n      (onAssociated)=\\\"onAssociatedPosteriorTask($event)\\\"\\r\\n    >\\r\\n    </aw-dialog-associated-tasks-popup>\\r\\n\\r\\n    <aw-dialog-associated-tasks-popup\\r\\n      *ngIf=\\\"showLinkedTasksDialog\\\"\\r\\n      [linkTypes]=\\\"linked\\\"\\r\\n      [isNewForm]=\\\"isCreateOpenMode\\\"\\r\\n      [isDisplayLinkType]=\\\"true\\\"\\r\\n      [associatedTasks]=\\\"currentLinkedTask\\\"\\r\\n      [(display)]=\\\"showLinkedTasksDialog\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyLinkedTasksDialog\\\"\\r\\n      (onAssociated)=\\\"onAssociatedLinkedTask($event)\\\"\\r\\n    >\\r\\n    </aw-dialog-associated-tasks-popup>\\r\\n\\r\\n    <aw-task-import-popup\\r\\n      *ngIf=\\\"showDocumentDialog\\\"\\r\\n      [document]=\\\"currentDocument\\\"\\r\\n      [(display)]=\\\"showDocumentDialog\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyDocumentDialog\\\"\\r\\n      (onValidated)=\\\"updateDocument($event)\\\"\\r\\n    ></aw-task-import-popup>\\r\\n\\r\\n    <aw-status-update-history\\r\\n      *ngIf=\\\"showStatusUpdatesPopup\\\"\\r\\n      [object]=\\\"task\\\"\\r\\n      [data]=\\\"tableStatusUpdatesData\\\"\\r\\n      [deleteApi]=\\\"deleteApi\\\"\\r\\n      [(display)]=\\\"showStatusUpdatesPopup\\\"\\r\\n      [keyMap]=\\\"updatesKeyMap\\\"\\r\\n      [isStatusEditable]=\\\"false\\\"\\r\\n      (onUpdated)=\\\"updateObjectStatusFromStatusUpdatesHistory($event)\\\"\\r\\n    >\\r\\n    </aw-status-update-history>\\r\\n\\r\\n    <aw-dynamic-attributes-history\\r\\n      *ngIf=\\\"showDynamicAttributesHistoric\\\"\\r\\n      [attributes]=\\\"dynamicAttributesForTask\\\"\\r\\n      [history]=\\\"dynamicAttributesHistoric\\\"\\r\\n      showDelete=\\\"true\\\"\\r\\n      [deleteApi]=\\\"taskHistoryApi.removeHBireTaskAttribute\\\"\\r\\n      [(display)]=\\\"showDynamicAttributesHistoric\\\"\\r\\n    ></aw-dynamic-attributes-history>\\r\\n\\r\\n    <aw-task-import-popup\\r\\n      *ngIf=\\\"showAddDocumentDialog\\\"\\r\\n      [document]=\\\"currentDocument\\\"\\r\\n      [(display)]=\\\"showAddDocumentDialog\\\"\\r\\n      [isReadOnlyForm]=\\\"isReadOnlyDocumentDialog\\\"\\r\\n      (onValidated)=\\\"addNewDocument($event)\\\"\\r\\n    ></aw-task-import-popup>\\r\\n\\r\\n    <aw-dialog-measure-popup\\r\\n      *ngIf=\\\"showMeasurementPointDialog\\\"\\r\\n      [(display)]=\\\"showMeasurementPointDialog\\\"\\r\\n      [openMode]=\\\"measurementPointDialogOpenMode\\\"\\r\\n      [hasRefMeasurementLinked]=\\\"isLinkedRefMeasurementCode\\\"\\r\\n      [data]=\\\"measurementPointRowData\\\"\\r\\n      (onValidatedMeasurementPoint)=\\\"onValidatedMeasurementRow($event)\\\"\\r\\n    ></aw-dialog-measure-popup>\\r\\n    <aw-dialog-measure-tool-popup\\r\\n      *ngIf=\\\"showAddMeasurementPointToolDialog\\\"\\r\\n      [(display)]=\\\"showAddMeasurementPointToolDialog\\\"\\r\\n      (onValidated)=\\\"setSelectedTool($event)\\\"\\r\\n      [searchInput]=\\\"pnTaskSearchInput\\\"\\r\\n    >\\r\\n    </aw-dialog-measure-tool-popup>\\r\\n\\r\\n    <aw-dialog-measure-formula-popup\\r\\n      *ngIf=\\\"showAddMeasurementPointFormulaDialog\\\"\\r\\n      [selectedMeasurePoint]=\\\"\\r\\n        measurementPointsTableDataSource.dataSelection[0] &&\\r\\n        measurementPointsTableDataSource.dataSelection[0].counterCode\\r\\n      \\\"\\r\\n      [selectedMeasurePointTitle]=\\\"\\r\\n        measurementPointsTableDataSource.dataSelection[0] &&\\r\\n        measurementPointsTableDataSource.dataSelection[0].counterRemarks\\r\\n      \\\"\\r\\n      [selectedMeasurePointFormula]=\\\"\\r\\n        measurementPointsTableDataSource.dataSelection[0] && measurementPointsTableDataSource.dataSelection[0].formula\\r\\n      \\\"\\r\\n      [measureList]=\\\"measurementPointsTableDataSource.dataSrc\\\"\\r\\n      [(display)]=\\\"showAddMeasurementPointFormulaDialog\\\"\\r\\n      (onValidated)=\\\"setFormula($event)\\\"\\r\\n    ></aw-dialog-measure-formula-popup>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host .grid-cell-content.grid-cell-content-with-section.description {\\n  width: 100%; }\\n\\n:host .section-margin {\\n  margin-top: 30px; }\\n\\n:host .highlight {\\n  border-bottom: solid yellow; }\\n\\n:host .background-grey {\\n  background: #595959 !important; }\\n\\n:host .measure-code-result {\\n  color: dodgerblue !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9lbmdpbmVlcmluZy1tYW5hZ2VtZW50L3Rhc2svZm9ybS9kOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGdpdGh1Yl9wYWdlcy9zcmNcXGFwcFxcbWFpblxcZW5naW5lZXJpbmctbWFuYWdlbWVudFxcdGFza1xcZm9ybVxcdGFzay1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBSVEsV0FBVyxFQUFBOztBQUpuQjtFQVNJLGdCQUFnQixFQUFBOztBQVRwQjtFQWdCSSwyQkFBMkIsRUFBQTs7QUFoQi9CO0VBb0JJLDhCQUE0QyxFQUFBOztBQXBCaEQ7RUF1QkksNEJBQTRCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2VuZ2luZWVyaW5nLW1hbmFnZW1lbnQvdGFzay9mb3JtL3Rhc2stZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJjb25zdGFudHNcIjtcclxuXHJcbjpob3N0IHtcclxuICAuZ3JpZC1jZWxsLWNvbnRlbnQge1xyXG4gICAgJi5ncmlkLWNlbGwtY29udGVudC13aXRoLXNlY3Rpb24ge1xyXG4gICAgICAmLmRlc2NyaXB0aW9uIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAuc2VjdGlvbi1tYXJnaW4ge1xyXG4gICAgbWFyZ2luLXRvcDogMzBweDtcclxuICB9XHJcblxyXG4gIC5oaWdobGlnaHQge1xyXG4gICAgLy8gLXdlYmtpdC1ib3gtc2hhZG93OiAwIDhweCA2cHggLTZweCB5ZWxsb3c7XHJcbiAgICAvLyAgLW1vei1ib3gtc2hhZG93OiAwIDhweCA2cHggLTZweCB5ZWxsb3c7XHJcbiAgICAvLyAgICAgIGJveC1zaGFkb3c6IDAgOHB4IDZweCAtNnB4IHllbGxvdztcclxuICAgIGJvcmRlci1ib3R0b206IHNvbGlkIHllbGxvdztcclxuICB9XHJcblxyXG4gIC5iYWNrZ3JvdW5kLWdyZXkge1xyXG4gICAgYmFja2dyb3VuZDogJHNlY29uZGFyeS10ZXh0LWNvbG9yICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIC5tZWFzdXJlLWNvZGUtcmVzdWx0IHtcclxuICAgIGNvbG9yOiBkb2RnZXJibHVlICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LabelValueHelper } from '../../../../modules/purchase-contract/utils/label-value-helper';\r\nimport { TaskHistoryApi } from '../../../../shared/api/task-history.api';\r\nimport { PageTocService } from '../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { PageTocEntry } from '../../../../shared/components/component-sidebar/types/page-toc-entry.interface';\r\nimport { DialogTableData } from '../../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { DynamicAttributesService } from '../../../../shared/components/dynamic-attributes/dynamic-attributes.service';\r\nimport { DynamicAttributeType } from '../../../../shared/components/dynamic-attributes/enums/dynamic-attribute-type.enum';\r\nimport { DynamicAttributes } from '../../../../shared/components/dynamic-attributes/types/dynamic-attributes.interface';\r\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { BireUnitMeasureConstants } from '../../../../shared/constants/bire-unit-measure-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { TaskFieldsConstant } from '../../../../shared/constants/task-fields-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { TableColumnFilterMode } from '../../../../shared/enums/table-column-filter-mode.enum';\r\nimport { TableSelectionMode } from '../../../../shared/enums/table-selection-mode.enum';\r\nimport { FormatSelectOptionPipe } from '../../../../shared/pipes/format-select-option.pipe';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { DavFieldService } from '../../../../shared/services/dassault/field.service';\r\nimport { DateService } from '../../../../shared/services/date.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { UpdateHistoricService } from '../../../../shared/services/update-historic.service';\r\nimport { PnTaskSearchInput } from '../../../../shared/types/api-input-types/task-management/pn-task-search-input.interface';\r\nimport { BireTaskMeasurementPointTableDTO } from '../../../../shared/types/api-output-types/task-management/bire-task-measurement-point-table-dto.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\nimport { BireDocumentDTOId } from '../../../../shared/types/api-types/bire-document-dto-id.interface';\r\nimport { BireDocumentDTO } from '../../../../shared/types/api-types/bire-document-dto.interface';\r\nimport { BireEvolutionDTOId } from '../../../../shared/types/api-types/bire-evolution-dto-id.interface';\r\nimport { BireItemDTOId } from '../../../../shared/types/api-types/bire-item-dto-id.interface';\r\nimport { BireItemDTO } from '../../../../shared/types/api-types/bire-item-dto.interface';\r\nimport { BireMaintenancePlanDTOId } from '../../../../shared/types/api-types/bire-maintenance-plan-dto-id.interface';\r\nimport { BireMaintenancePlanDTO } from '../../../../shared/types/api-types/bire-maintenance-plan-dto.interface';\r\nimport { BireOperationDTOId } from '../../../../shared/types/api-types/bire-operation-dto-id.interface';\r\nimport { BireOperationDTO } from '../../../../shared/types/api-types/bire-operation-dto.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { BireQualifTaskDTOId } from '../../../../shared/types/api-types/bire-qualif-task-dto-id.interface';\r\nimport { BireQualificationDTO } from '../../../../shared/types/api-types/bire-qualification-dto.interface';\r\nimport { BireSmTaskDTO } from '../../../../shared/types/api-types/bire-sm-task-dto.interface';\r\nimport { BireTaskAttributeDTOId } from '../../../../shared/types/api-types/bire-task-attribute-dto-id.interface';\r\nimport { BireTaskAttributeDTO } from '../../../../shared/types/api-types/bire-task-attribute-dto.interface';\r\nimport { BireTaskDTOId } from '../../../../shared/types/api-types/bire-task-dto-id.interface';\r\nimport { BireTaskDTO } from '../../../../shared/types/api-types/bire-task-dto.interface';\r\nimport { BireTaskEvolutionDTOId } from '../../../../shared/types/api-types/bire-task-evolution-dto-id.interface';\r\nimport { BireTaskEvolutionDTO } from '../../../../shared/types/api-types/bire-task-evolution-dto.interface';\r\nimport { BireTaskItemDTOId } from '../../../../shared/types/api-types/bire-task-item-dto-id.interface';\r\nimport { BireTaskItemDTO } from '../../../../shared/types/api-types/bire-task-item-dto.interface';\r\nimport { BireTaskItemWithItemDTO } from '../../../../shared/types/api-types/bire-task-item-with-item-dto.interface';\r\nimport { BireTaskLinkPopupOutput } from '../../../../shared/types/api-types/bire-task-link-popup-output.interface';\r\nimport { BireTaskMeasureDTOId } from '../../../../shared/types/api-types/bire-task-measure-dto-id.inteface';\r\nimport { BireTaskMeasureDTO } from '../../../../shared/types/api-types/bire-task-measure-dto.interface';\r\nimport { BireTaskTaskDTOId } from '../../../../shared/types/api-types/bire-task-task-dto-id.interface';\r\nimport { BireTaskTaskDTO } from '../../../../shared/types/api-types/bire-task-task-dto.interface';\r\nimport { BireTilDTO } from '../../../../shared/types/api-types/bire-til-dto.interface';\r\nimport { BireTilTaskDTOId } from '../../../../shared/types/api-types/bire-til-task-dto-id.interface';\r\nimport { BireTilTaskDTO } from '../../../../shared/types/api-types/bire-til-task-dto.interface';\r\nimport { GetMaintainanceProgramWithTaskDTO } from '../../../../shared/types/api-types/get-maintainance-program-with-task-dto.interface';\r\nimport { HBireTaskAttributeDTO } from '../../../../shared/types/api-types/h-bire-task-attribute-dto.interface';\r\nimport { HBireTaskDTO } from '../../../../shared/types/api-types/h-bire-task-dto.interface';\r\nimport { LinkedTaskDTO } from '../../../../shared/types/api-types/linked-task-dto.interface';\r\nimport { LinkedTasksTableDTO } from '../../../../shared/types/api-types/linked-tasks-table-dto.interface';\r\nimport { ObjectStatusDTO } from '../../../../shared/types/api-types/object-status-dto.interface';\r\nimport { SaveTaskScreenInput } from '../../../../shared/types/api-types/save-task-screen-input.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { BireFamilyVariantUtil } from '../../../../shared/utils/bire-family-variant-utils';\r\nimport { DTOUtils } from '../../../../shared/utils/dto-utils';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\nimport { LabelValueUtils } from '../../../../shared/utils/label-value-utils';\r\nimport { ListUtils } from '../../../../shared/utils/list-utils';\r\nimport { ObjectUtils } from '../../../../shared/utils/object-utils';\r\nimport { SettingsUtils } from '../../../../shared/utils/settings-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\nimport { UrlUtils } from '../../../../shared/utils/url-utils';\r\nimport { WorkflowUtils } from '../../../../shared/utils/workflow-utils';\r\nimport { ObjectStatusComponent } from '../../../object-status/object-status.component';\r\nimport { OverlayService } from '../../../overlay/overlay.service';\r\nimport { OperationTabData } from '../../operation/types/operation-tab-data.interface';\r\nimport { TaskSearchService } from '../search/task-search.service';\r\n\r\nimport { TaskFormService } from './task-form.service';\r\n\r\ninterface EvolutionRow {\r\n  evolutionNumber: string;\r\n  evolutionRevisionNumber: string;\r\n  designation: string;\r\n  taskEvolutionTypeCode: string;\r\n  _obj: BireTaskEvolutionDTO;\r\n}\r\n\r\ninterface DocumentRow {\r\n  docCode?: string;\r\n  docExtension?: string;\r\n  docName?: string;\r\n  docCategory?: string;\r\n  docPublicationDate?: string;\r\n  docSize?: string;\r\n  docSource?: string;\r\n  _obj: BireDocumentDTO;\r\n}\r\n\r\ninterface MaintainedItemRow {\r\n  designation: string;\r\n  familyVariant: string;\r\n  linkType: string;\r\n  item: string;\r\n  versionNumber: string;\r\n  field: string;\r\n  _obj: BireTaskItemDTO;\r\n}\r\n\r\n// @ts-ignore\r\ndeclare var diff_match_patch;\r\n\r\n@Component({\r\n  selector: 'aw-task-form',\r\n  templateUrl: './task-form.component.html',\r\n  styleUrls: ['./task-form.component.scss']\r\n})\r\nexport class TaskFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public static readonly DOCUMENTS_ANCHOR_ID: string = 'documentsAnchor';\r\n  public static readonly GENERAL_ANCHOR_ID: string = 'generalAnchor';\r\n  public static readonly DESCRIPTION_ANCHOR_ID: string = 'descriptionTabAnchor';\r\n  public static readonly IMPACTS_ANCHOR_ID: string = 'impactsAnchor';\r\n  public static readonly MAIN_INFORMATION_ANCHOR_ID: string = 'mainInformationAnchor';\r\n  public static readonly MANUALS_ANCHOR_ID: string = 'manualsAnchor';\r\n  public static readonly PREREQUISITES_ANCHOR_ID: string = 'prerequisitesAnchor';\r\n  public static readonly TASK_CARD_ANCHOR_ID: string = 'taskCardAnchor';\r\n  public static readonly MEASUREMENT_POINTS_ANCHOR_ID: string = 'measurementPointsAnchor';\r\n  public static readonly LINK_MEASURE_ROW = 'Linked';\r\n  public static readonly MAINTENANCE_PROGRAM_TYPE_RMP: number = 0;\r\n\r\n  public static readonly TASK_LINK_CODE_SELF: string = '-1';\r\n  public static readonly BOOLEAN: string = 'BOOL';\r\n  public static readonly TEXT: string = 'TEXT';\r\n\r\n  public readonly component: typeof TaskFormComponent;\r\n\r\n  public componentContext: string;\r\n  public subtitle: string;\r\n  public workflowStatus: LabelValue<string>[];\r\n  public taskStatus: LabelValue<string>[];\r\n  public propertyObjectStatus: LabelValue<string>[];\r\n  public propertyStatus: LabelValue<string>[];\r\n\r\n  // For object status/updates popup\r\n  public showStatusUpdatesPopup: boolean;\r\n  public tableStatusUpdatesData: DialogTableData<HBireTaskDTO>;\r\n  public deleteApi: string;\r\n  public updatesKeyMap: Map<string, Observable<LabelValue<string>[]>>;\r\n\r\n  // Tab id\r\n  public readonly tabTaskFieldsId: string;\r\n  public readonly tabTaskCardId: string;\r\n  public readonly tabImpactsId: string;\r\n  public readonly tabManualsId: string;\r\n  public readonly tabPrerequisitesId: string;\r\n  public readonly tabDocumentsId: string;\r\n  public readonly tabAttributesId: string;\r\n\r\n  public currentTabId: string;\r\n\r\n  // Sub-tab id\r\n  public readonly tabStructureId: string;\r\n  public readonly tabOtherLinksId: string;\r\n\r\n  public currentSubTabId: string;\r\n\r\n  public task: BireTaskDTO;\r\n  public taskVersion: number;\r\n\r\n  // Task fields tab\r\n  public subContracting: string;\r\n  public taskTypes: LabelValue<string>[];\r\n  public applicabilities: LabelValue<string>[];\r\n  public mroCenters: LabelValue<string>[];\r\n  public taskGroups: LabelValue<string>[];\r\n\r\n  // Task card tab\r\n  public bireTaskLinkAddedList: BireTaskTaskDTO[];\r\n  public bireTaskLinkUpdatedList: BireTaskTaskDTO[];\r\n  public bireTaskLinkDeletedList: BireTaskTaskDTOId[];\r\n\r\n  public currentOperation: BireOperationDTO | undefined;\r\n  public operationAdded: BireOperationDTO[];\r\n  public operationRemoved: BireOperationDTOId[];\r\n  public currentOperationIndex: number | undefined;\r\n  public operationTableDataSource: TableDataSource<BireOperationDTO>;\r\n\r\n  public isReadOnlyOperationDialog: boolean;\r\n  public showOperationDialog: boolean;\r\n\r\n  public currentTaskSelfLink?: LinkedTaskDTO;\r\n\r\n  public superiorTaskTable: LinkedTaskDTO[];\r\n  public selectedSuperiorTask: LinkedTaskDTO[];\r\n  public currentSuperiorTask: LinkedTaskDTO | undefined;\r\n  public currentSuperiorTaskIndex: number | undefined;\r\n  public isReadOnlySuperiorTasksDialog: boolean; // common dialog for associated tasks tab\r\n  public showSuperiorTasksDialog: boolean;\r\n  public superiorTableDataSource: TableDataSource<BireTaskDTO>;\r\n\r\n  public topDownTaskInput: BireTaskDTO;\r\n  public topDownTreeTable: TreeNode[];\r\n  public selectedTopDownNodes: TreeNode[];\r\n  public selectedTopDownNodesStore: TreeNode[];\r\n  public topDownTaskStructureTableCols: TableColumn[];\r\n  public currentTopDownTask: LinkedTaskDTO | undefined;\r\n  public currentTopDownTaskIndex: number | undefined;\r\n  public isReadOnlyTopDownTasksDialog: boolean; // common dialog for associated tasks tab\r\n  public showTopDownTasksDialog: boolean;\r\n  public isLoadingTopDownTreeTable: boolean;\r\n\r\n  public anteriorTable: LinkedTaskDTO[];\r\n  public selectedAnterior: LinkedTaskDTO[];\r\n  public currentAnterior: LinkedTaskDTO | undefined;\r\n  public currentAnteriorIndex: number | undefined;\r\n  public isReadOnlyAnteriorDialog: boolean; // common dialog for associated tasks tab\r\n  public showAnteriorTasksDialog: boolean;\r\n  public anteriorTaskTableDataSource: TableDataSource<BireTaskDTO>;\r\n\r\n  public posteriorTable: LinkedTaskDTO[];\r\n  public posteriorTableCols: TableColumn[];\r\n  public selectedPosterior: LinkedTaskDTO[];\r\n  public currentPosterior: LinkedTaskDTO | undefined;\r\n  public currentPosteriorIndex: number | undefined;\r\n  public isReadOnlyPosteriorDialog: boolean; // common dialog for associated tasks tab\r\n  public showPosteriorDialog: boolean;\r\n  public posteriorTaskTableDataSource: TableDataSource<BireTaskDTO>;\r\n\r\n  public linkedTasksInput; // assign\r\n  public linkedTasksTable: LinkedTaskDTO[];\r\n  public selectedLinkedTasks: LinkedTaskDTO[];\r\n  public currentLinkedTask: LinkedTaskDTO | undefined;\r\n  public currentLinkedTaskIndex: number | undefined;\r\n  public isReadOnlyLinkedTasksDialog: boolean; // common dialog for associated tasks tab\r\n  public showLinkedTasksDialog: boolean;\r\n  public linkedTaskTableDataSource: TableDataSource<LinkedTasksTableDTO>;\r\n\r\n  // Impacts tab\r\n  public currentEvolution: BireTaskEvolutionDTO | undefined;\r\n  public evolutionAdded: BireTaskEvolutionDTO[];\r\n  public evolutionRemoved: BireTaskEvolutionDTOId[];\r\n  public currentEvolutionIndex: number | undefined;\r\n  public evolutionsTableDataSource: TableDataSource<EvolutionRow>;\r\n\r\n  public showEvolutionsDialog: boolean;\r\n  public isReadOnlyEvolutionsDialog: boolean;\r\n\r\n  public currentMaintainedItem: BireTaskItemDTO | undefined;\r\n  public maintainedItemAdded: BireTaskItemDTO[];\r\n  public maintainedItemRemoved: BireTaskItemDTOId[];\r\n  public currentMaintainedItemIndex: number | undefined;\r\n  public maintainedItemsTableDataSource: TableDataSource<MaintainedItemRow>;\r\n\r\n  public structureType: LabelValue<string>[];\r\n\r\n  public showMaintainedItemsDialog: boolean;\r\n  public isReadOnlyMaintainedItemsDialog: boolean;\r\n\r\n  // Manuals tab\r\n  public shopManualsTableDataSource: TableDataSource<BireSmTaskDTO>;\r\n\r\n  public maintenanceProgramsTableDataSource: TableDataSource<GetMaintainanceProgramWithTaskDTO>;\r\n\r\n  // Prerequisites tab\r\n  public qualificationsInput: BireQualificationDTO;\r\n  public currentQualifications: BireQualificationDTO | undefined;\r\n  public qualificationAdded: BireQualificationDTO[];\r\n  public qualificationRemoved: BireQualifTaskDTOId[];\r\n  public currentQualificationsIndex: number | undefined;\r\n  public qualificationsTableDataSource: TableDataSource<BireQualificationDTO>;\r\n\r\n  public showQualificationsDialog: boolean;\r\n  public isReadOnlyQualificationsDialog: boolean;\r\n\r\n  public currentTil: BireTilDTO | undefined;\r\n  public tilAdded: BireTilTaskDTO[];\r\n  public tilRemoved: BireTilTaskDTOId[];\r\n  public currentTilIndex: number | undefined;\r\n  public tilTableDataSource: TableDataSource<BireTilDTO>;\r\n\r\n  private tilName: string[];\r\n  private technicalLevel: string[];\r\n  private tilDescription: string[];\r\n\r\n  public showTilDialog: boolean;\r\n  public isReadOnlyTilDialog: boolean;\r\n\r\n  // Documents tab\r\n  public currentDocument: BireDocumentDTO | undefined;\r\n  public currentDocumentIndex: number | undefined;\r\n  public bireDocumentDisplayed: DocumentRow[];\r\n  public documentsAdded: BireDocumentDTO[];\r\n  public documentsRemoved: BireDocumentDTOId[];\r\n  public documentsUpdated: BireDocumentDTO[];\r\n  public documentsTableDataSource: TableDataSource<BireDocumentDTO>;\r\n  public documentCategories: LabelValue<string>[];\r\n\r\n  public showDocumentDialog: boolean;\r\n  public showAddDocumentDialog: boolean;\r\n  public isReadOnlyDocumentDialog: boolean;\r\n\r\n  // Measurement Points tab\r\n  public measurementPointsTableDataSource: TableDataSource<BireTaskMeasurementPointTableDTO>;\r\n  public bireMeasurementRefDTO: BireTaskMeasurementPointTableDTO | undefined;\r\n  public measurementPointRowData: BireTaskMeasurementPointTableDTO | undefined;\r\n  public showMeasurementPointDialog: boolean;\r\n  public measurementPointDialogOpenMode: ComponentOpenMode;\r\n  private createUpdateBireTaskMeasurementList: BireTaskMeasurementPointTableDTO[];\r\n  private removeBireTaskMeasurementList: BireTaskMeasureDTOId[];\r\n  public isLinkedRefMeasurementCode: boolean;\r\n\r\n  public measurementPointsAdded: BireTaskMeasureDTO[];\r\n  public showAddMeasurementPointToolDialog: boolean;\r\n  public showAddMeasurementPointFormulaDialog: boolean;\r\n  public pnTaskSearchInput: PnTaskSearchInput;\r\n\r\n  // Attributes tab\r\n  public attributeIdValueMap: Map<string, string>;\r\n  public bireAttributesForTask: BireAttributeDTO[];\r\n  public bireTaskAttributes: BireTaskAttributeDTO[];\r\n  public dynamicAttributesForTask: DynamicAttributes[];\r\n  public newAttributeDisplayed: string;\r\n\r\n  public statuses: LabelValue<string>[];\r\n  public evolutionLinkTypes: LabelValue<string>[];\r\n  public itemLinkTypes: LabelValue<string>[];\r\n\r\n  public associatedLinkTypes: LabelValue<string>[];\r\n\r\n  public technicalLevels: LabelValue<string> | undefined;\r\n  public descriptions: LabelValue<string>[];\r\n\r\n  public keyMap: Map<string, Observable<LabelValue<string>[]>>;\r\n\r\n  public superior: LabelValue<string>[];\r\n  public anterior: LabelValue<string>[];\r\n  public posterior: LabelValue<string>[];\r\n  public topDown: LabelValue<string>[];\r\n  public linked: LabelValue<string>[];\r\n\r\n  public totalCost: number;\r\n  public currency: string;\r\n  public isCritical: boolean;\r\n\r\n  public getTaskItemTypeMap: LabelValue<string>[];\r\n\r\n  public newQualification: boolean;\r\n  public showOperationFormDialog: boolean;\r\n  public selectedPnType?: string;\r\n\r\n  public highlightUpdate: boolean;\r\n  public updatedFieldIds: string[];\r\n  public previousTaskVersion: BireTaskDTO;\r\n  public taskDescriptionDiff: string;\r\n  public taskDesignationDiff: string;\r\n  public readonly TaskFieldsConstant = TaskFieldsConstant;\r\n  public highlightHome: boolean;\r\n  public highlightTaskCard: boolean;\r\n  public highlightImpacts: boolean;\r\n  public highlightPrerequisites: boolean;\r\n  public highlightAttributes: boolean;\r\n  public highlightDocuments: boolean;\r\n  public highlightMeasurementPoint: boolean;\r\n  public previousTaskVersionLastMP: GetMaintainanceProgramWithTaskDTO;\r\n  public showUpgradeButton: boolean;\r\n\r\n  public dmp: { diff_main: Function; diff_cleanupSemantic: Function; diff_prettyHtml: Function };\r\n\r\n  // Dynamic historic\r\n  public showDynamicAttributesHistoric: boolean;\r\n  public dynamicAttributesHistoric: Observable<HBireTaskAttributeDTO[]>;\r\n\r\n  // Table of content ***********************************************************\r\n\r\n  @ViewChild(TaskFormComponent.DOCUMENTS_ANCHOR_ID)\r\n  public documentsEltRef: ElementRef;\r\n\r\n  @ViewChild(TaskFormComponent.GENERAL_ANCHOR_ID)\r\n  public generalEltRef: ElementRef;\r\n\r\n  @ViewChild(TaskFormComponent.DESCRIPTION_ANCHOR_ID)\r\n  public descriptionElRef: ElementRef;\r\n\r\n  @ViewChild(TaskFormComponent.IMPACTS_ANCHOR_ID)\r\n  public impactsEltRef: ElementRef;\r\n\r\n  @ViewChild(TaskFormComponent.MAIN_INFORMATION_ANCHOR_ID)\r\n  public mainInformationEltRef: ElementRef;\r\n\r\n  @ViewChild(TaskFormComponent.MANUALS_ANCHOR_ID)\r\n  public manualsEltRef: ElementRef;\r\n\r\n  @ViewChild(TaskFormComponent.PREREQUISITES_ANCHOR_ID)\r\n  public prerequisitesEltRef: ElementRef;\r\n\r\n  @ViewChild(TaskFormComponent.TASK_CARD_ANCHOR_ID)\r\n  public taskCardEltRef: ElementRef;\r\n\r\n  @ViewChild(TaskFormComponent.MEASUREMENT_POINTS_ANCHOR_ID)\r\n  public measurementPointsEltRef: ElementRef;\r\n\r\n  public toc: PageTocEntry[];\r\n\r\n  // ****************************************************************************\r\n  public showSaveSpinner: boolean;\r\n  public bireUnitMeasureConstants: typeof BireUnitMeasureConstants;\r\n  public isCostSettingEnabled: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    pageTocService: PageTocService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public sessionService: SessionService,\r\n    public translateService: TranslateService,\r\n    private readonly taskFormService: TaskFormService,\r\n    private readonly taskSearchService: TaskSearchService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly dynamicAttributesService: DynamicAttributesService,\r\n    private readonly updateHistoricService: UpdateHistoricService,\r\n    private readonly taskHistoryApi: TaskHistoryApi,\r\n    private readonly dateService: DateService,\r\n    private readonly davFieldService: DavFieldService,\r\n    private readonly _overlayService: OverlayService,\r\n    private readonly _formatSelectOption: FormatSelectOptionPipe\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Read,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n\r\n    this.component = TaskFormComponent;\r\n    this.selectedPnType = AWPropertiesConstants.PN_TYPE_INGREDIENT_KEY;\r\n    this.bireUnitMeasureConstants = BireUnitMeasureConstants;\r\n\r\n    super.registerPageTocEntryObservable();\r\n\r\n    // Dynamic historic\r\n    this.showDynamicAttributesHistoric = false;\r\n\r\n    this.tabTaskFieldsId = 'fields';\r\n    this.tabTaskCardId = 'card';\r\n    this.tabImpactsId = 'impacts';\r\n    this.tabManualsId = 'manuals';\r\n    this.tabPrerequisitesId = 'prerequisites';\r\n    this.tabDocumentsId = 'documents';\r\n    this.tabAttributesId = 'attributes';\r\n\r\n    this.tabStructureId = 'structure';\r\n    this.tabOtherLinksId = 'other';\r\n\r\n    this.currentTabId = this.tabTaskFieldsId;\r\n    this.currentSubTabId = this.tabStructureId;\r\n\r\n    this.currentOperation = undefined;\r\n    this.currentOperationIndex = undefined;\r\n    this.isReadOnlyOperationDialog = true;\r\n    this.showOperationDialog = false;\r\n\r\n    this.currentSuperiorTask = undefined;\r\n    this.currentSuperiorTaskIndex = undefined;\r\n    this.isReadOnlySuperiorTasksDialog = true;\r\n    this.showSuperiorTasksDialog = false;\r\n\r\n    this.currentTopDownTask = undefined;\r\n    this.currentTopDownTaskIndex = undefined;\r\n    this.isReadOnlyTopDownTasksDialog = true;\r\n    this.showTopDownTasksDialog = false;\r\n\r\n    this.currentAnterior = undefined;\r\n    this.currentAnteriorIndex = undefined;\r\n    this.isReadOnlyAnteriorDialog = true;\r\n    this.showAnteriorTasksDialog = false;\r\n\r\n    this.currentPosterior = undefined;\r\n    this.currentPosteriorIndex = undefined;\r\n    this.isReadOnlyPosteriorDialog = true;\r\n    this.showPosteriorDialog = false;\r\n\r\n    this.currentLinkedTask = undefined;\r\n    this.currentLinkedTaskIndex = undefined;\r\n    this.isReadOnlyLinkedTasksDialog = true;\r\n    this.showLinkedTasksDialog = false;\r\n\r\n    this.currentEvolution = undefined;\r\n    this.currentEvolutionIndex = undefined;\r\n    this.isReadOnlyEvolutionsDialog = true;\r\n    this.showEvolutionsDialog = false;\r\n\r\n    this.currentMaintainedItem = undefined;\r\n    this.currentMaintainedItemIndex = undefined;\r\n    this.isReadOnlyMaintainedItemsDialog = true;\r\n    this.showMaintainedItemsDialog = false;\r\n\r\n    this.currentQualifications = undefined;\r\n    this.currentQualificationsIndex = undefined;\r\n    this.isReadOnlyQualificationsDialog = true;\r\n    this.showQualificationsDialog = false;\r\n\r\n    this.currentTil = undefined;\r\n    this.currentTilIndex = undefined;\r\n    this.isReadOnlyTilDialog = true;\r\n    this.showTilDialog = false;\r\n\r\n    this.currentDocument = undefined;\r\n    this.currentDocumentIndex = undefined;\r\n    this.isReadOnlyDocumentDialog = true;\r\n    this.showDocumentDialog = false;\r\n    this.showAddDocumentDialog = false;\r\n    this.bireDocumentDisplayed = [];\r\n\r\n    this.newQualification = false;\r\n    this.highlightUpdate = false;\r\n    this.dmp = new diff_match_patch();\r\n    this.showMeasurementPointDialog = false;\r\n    this.measurementPointRowData = undefined;\r\n\r\n    this.measurementPointDialogOpenMode = ComponentOpenMode.Create;\r\n\r\n    this.showAddMeasurementPointToolDialog = false;\r\n    this.showAddMeasurementPointFormulaDialog = false;\r\n    this.init();\r\n\r\n    this.initCostSettingDisplay();\r\n    this.initOperationTableDataSource();\r\n    this.initEvolutionsTableDataSource();\r\n    this.initMaintainedItemsTableDataSource();\r\n    this.initShopManualsTableDataSource();\r\n    this.initMaintenanceProgramsTableDataSource();\r\n    this.initQualificationsTableDataSource();\r\n    this.initTilTableDataSource();\r\n    this.initDocumentsTableDataSource();\r\n    this.initSuperiorTableDataSource();\r\n    this.initAnteriorTaskTableDataSource();\r\n    this.initPosteriorTaskTableDataSource();\r\n    this.initMeasurementPointsTableDataSource();\r\n    this.initLinkedTaskTableDataSource();\r\n\r\n    this.totalCost = 0;\r\n    this.showUpgradeButton = false;\r\n    this.loadCurrency();\r\n\r\n    this.setTableCols();\r\n\r\n    this.loadTaskType();\r\n    this.loadStatus();\r\n    this.loadApplicability();\r\n    this.loadMROCenter();\r\n    this.loadTaskGroup();\r\n\r\n    this.loadLinkTypes();\r\n    this.loadStructureTypes();\r\n    this.loadAssociatedTaskLinkTypes();\r\n\r\n    this.loadTechnicalLevels();\r\n\r\n    this.loadDocumentTaskCategories();\r\n\r\n    // Lang change events\r\n    this.translateService.onLangChange.subscribe((_: LangChangeEvent) => {\r\n      this.bireAttributesForTask = [];\r\n      this.dynamicAttributesForTask = [];\r\n      this.getBireAttributesForTask();\r\n    });\r\n    this.isLoadingTopDownTreeTable = false;\r\n\r\n    this.userWorkflowSubject.subscribe((userWorkflow) => {\r\n      this.updateWorkflowStatusList();\r\n    });\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'TaskFormComponent';\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.setContext();\r\n    this.loadTask();\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.reloadTask();\r\n    this.setContext();\r\n  }\r\n\r\n  private setContext(openMode?: number) {\r\n    if (!this.componentData.objectId) {\r\n      this.componentContext = 'tab.createMode';\r\n      this.componentData.openMode = ComponentOpenMode.Create;\r\n    } else {\r\n      const componentInputData = this.serializationService.deserialize(this.componentData.objectId) as BireTaskDTO;\r\n      this.componentContext = `${componentInputData.taskCode} - ${componentInputData.taskVersion}`;\r\n      this.componentData.openMode = ComponentOpenMode.Read;\r\n    }\r\n    this.updateOpenMode(openMode ? openMode : this.componentData.openMode);\r\n    this.displayComponentContext(this.componentContext, this.isCreateOpenMode);\r\n    this.setTableOfContent();\r\n  }\r\n\r\n  public cancelTask(): void {\r\n    if (this.isCreateOpenMode) {\r\n      this.init();\r\n      this.initAttributeValue();\r\n    } else {\r\n      this.reloadTask();\r\n      this.updateOpenMode(ComponentOpenMode.Read);\r\n    }\r\n  }\r\n\r\n  private initAttributeValue(): void {\r\n    const leafs = this.dynamicAttributesService.getLeafs(this.dynamicAttributesForTask);\r\n\r\n    leafs.forEach((attribute) => {\r\n      attribute.value = undefined;\r\n    });\r\n  }\r\n\r\n  public editTask(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public loadTask(): void {\r\n    this.linkedTaskTableDataSource.setData([]);\r\n    if (!!this.componentData.objectId) {\r\n      const taskTemp: BireTaskDTOId = {\r\n        taskCode: this.serializationService.deserialize(this.componentData.objectId).taskCode,\r\n        taskVersion: this.serializationService.deserialize(this.componentData.objectId).taskVersion\r\n      };\r\n\r\n      this.subtitle = taskTemp.taskCode + ':' + taskTemp.taskVersion;\r\n\r\n      this.taskFormService.findBireTask(taskTemp).subscribe(\r\n        (result) => {\r\n          this.task = result || {};\r\n          if (this.task.taskApplicabilityDate) {\r\n            this.task.taskApplicabilityDate = new Date(this.task.taskApplicabilityDate.toString());\r\n          }\r\n\r\n          if (this.task && this.task.taskCode && this.task.taskVersion) {\r\n            this.taskVersion = Number(this.task.taskVersion);\r\n            const id: BireTaskDTOId = {\r\n              taskCode: this.task.taskCode,\r\n              taskVersion: this.task.taskVersion\r\n            };\r\n\r\n            const taskId: BireTaskDTO = {\r\n              taskCode: this.task.taskCode,\r\n              taskVersion: this.task.taskVersion\r\n            };\r\n\r\n            // Task fields tab\r\n            this.getSubContracting(taskId);\r\n\r\n            // Task Card tab\r\n            this.loadOperationTable(id);\r\n            this.loadAssociatedTasksTables(taskId);\r\n\r\n            // Impacts tab\r\n            this.loadEvolutionsTable(id);\r\n            this.loadItemsTable(id);\r\n\r\n            // Manuals tab\r\n            this.loadShopManualsTable(id);\r\n            this.loadMaintenanceProgramsTable(id, taskId);\r\n\r\n            // Prerequisites tab\r\n            this.loadQualificationsTable(taskId);\r\n            this.loadTilTable(taskId);\r\n\r\n            // Documents tab\r\n            this.loadDocumentsTable(id);\r\n\r\n            // Attributes tab\r\n            this.getBireTaskAttributes();\r\n            // Measurement Points tab\r\n            this.loadMeasurementPointsTable(id);\r\n            // Load changes\r\n            this.isHighlightTaskUpdate(taskTemp);\r\n\r\n            if (!this.task.taskStatus) {\r\n              this.task.taskStatus = AWPropertiesConstants.FUNC_OBJECT_STATUS_ON_GOING_KEY;\r\n            }\r\n          }\r\n        },\r\n        () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadTask'));\r\n        }\r\n      );\r\n    } else {\r\n      if (!this.task.taskStatus) {\r\n        this.task.taskStatus = AWPropertiesConstants.FUNC_OBJECT_STATUS_ON_GOING_KEY;\r\n      }\r\n    }\r\n  }\r\n\r\n  public reloadTask(): void {\r\n    this.init();\r\n    this.loadTask();\r\n  }\r\n\r\n  /**\r\n   * upgradeButtonVisibility() - This function is used to display upgrade button for creating new version of Task.\r\n   * @param currentTask - Current Task Input\r\n   * @param maintenanceProgramTableResult - Maintenance program Table Result\r\n   *\r\n   * If length of value is zero, then it is a RMP.\r\n   */\r\n  public upgradeButtonVisibility(currentTask: BireTaskDTOId, maintenanceProgram: GetMaintainanceProgramWithTaskDTO[]) {\r\n    maintenanceProgram.forEach((elements) => {\r\n      const planDTO: BireMaintenancePlanDTO = { planCode: elements.planCode };\r\n      this.taskFormService.findBirePlanAttributesByPlanCode(planDTO).subscribe((value) => {\r\n        if (\r\n          value.length === TaskFormComponent.MAINTENANCE_PROGRAM_TYPE_RMP &&\r\n          elements.statusState === AWPropertiesConstants.FUNC_OBJECT_STATUS_APPROVED_KEY\r\n        ) {\r\n          this.taskFormService.checkAndReturnNewVersionNumberByTask(currentTask).subscribe((result) => {\r\n            if (!!result) {\r\n              this.showUpgradeButton = true;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public isValidTask(): boolean {\r\n    if (\r\n      this.task.taskTypeCode &&\r\n      this.task.taskCode &&\r\n      this.task.taskVersion &&\r\n      this.task.taskTypeCode.trim().length !== 0 &&\r\n      this.task.taskCode.trim().length !== 0 &&\r\n      this.task.taskVersion.trim().length !== 0\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public saveTask(): void {\r\n    if (!!this.task.taskCode && !!this.task.taskVersion && !!this.task.taskTypeCode) {\r\n      const task: BireTaskDTOId = {\r\n        taskCode: this.task.taskCode,\r\n        taskVersion: this.task.taskVersion\r\n      };\r\n      if (\r\n        StringUtils.isNullOrEmpty(this.task.taskCode) ||\r\n        StringUtils.isNullOrEmpty(this.task.taskVersion) ||\r\n        StringUtils.isNullOrEmpty(this.task.taskTypeCode)\r\n      ) {\r\n        this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n      } else {\r\n        if (!!task) {\r\n          if (this.componentData.openMode === ComponentOpenMode.Create) {\r\n            // creation\r\n            this.taskFormService.findBireTask(task).subscribe((res) => {\r\n              // If task not found, create it\r\n              if (!res) {\r\n                this.save();\r\n              } else {\r\n                this.messageService.showErrorMessage(this.getTranslateKey('taskAlreadyExists'));\r\n              }\r\n            });\r\n          } else {\r\n            // updation\r\n            this.taskFormService.findBireTask(task).subscribe((res) => {\r\n              // If task found, update it\r\n              if (res) {\r\n                this.save();\r\n              } else {\r\n                this.messageService.showErrorMessage('global.internalServerError');\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.missingFields');\r\n    }\r\n  }\r\n\r\n  public changeIsCriticalDynamicAttribute() {\r\n    this.dynamicAttributesForTask[0].attributes.forEach((result, index) => {\r\n      this.dynamicAttributesForTask[0].attributes[index].value = this.isCritical;\r\n    });\r\n  }\r\n\r\n  private save(): void {\r\n    this.qualificationAdded.forEach((qual) => {\r\n      if (!!qual.averageHourRate) {\r\n        const rate = qual.averageHourRate.split(' ');\r\n        qual.averageHourRate = rate[0];\r\n      }\r\n    });\r\n\r\n    if (!!this.task.taskCode && !!this.task.taskVersion && !!this.dynamicAttributesForTask) {\r\n      const bireTaskAttributes = this.dynamicAttributesService.toBireTaskAttribute(\r\n        this.task.taskCode,\r\n        this.task.taskVersion,\r\n        this.dynamicAttributesForTask\r\n      );\r\n\r\n      const removedItems = [...this.maintainedItemRemoved];\r\n\r\n      removedItems.forEach((item) => {\r\n        this.structureType.forEach((str) => {\r\n          if (str.label === item.structureType) {\r\n            item.structureType = str.value;\r\n          }\r\n        });\r\n\r\n        this.getTaskItemTypeMap.forEach((taskItem) => {\r\n          if (taskItem.label === item.taskItemTypeCode) {\r\n            item.taskItemTypeCode = taskItem.value;\r\n          }\r\n        });\r\n      });\r\n\r\n      this.createUpdateBireTaskMeasurementList = [];\r\n      this.measurementPointsTableDataSource.dataSrc.forEach((mpoint) => {\r\n        this.createUpdateBireTaskMeasurementList.push({\r\n          counterCode: mpoint.counterCode,\r\n          taskCode: this.task.taskCode,\r\n          taskVersion: this.task.taskVersion,\r\n          sequenceNumber: mpoint.sequenceNumber,\r\n          groupCode: mpoint.groupCode,\r\n          formula: mpoint.formula,\r\n          toolPartNumber: mpoint.toolPartNumber,\r\n          minValue: mpoint.minValue,\r\n          maxValue: mpoint.maxValue,\r\n          description: mpoint.description,\r\n          additionalDescription: mpoint.additionalDescription\r\n        });\r\n      });\r\n\r\n      const saveTaskId: SaveTaskScreenInput = {\r\n        bireTaskDTO: this.task,\r\n\r\n        bireOperationAddedList: this.operationAdded,\r\n        bireOperationDeletedList: this.operationRemoved,\r\n\r\n        bireTaskEvolutionAddedList: this.evolutionAdded,\r\n        bireTaskEvolutionDeletedList: this.evolutionRemoved,\r\n\r\n        bireTilTaskAddedList: this.tilAdded,\r\n        bireTilTaskDeletedList: this.tilRemoved,\r\n\r\n        bireQualificationAddedList: this.qualificationAdded,\r\n        bireQualificationDeletedList: this.qualificationRemoved,\r\n\r\n        bireTaskItemAddedList: this.maintainedItemAdded,\r\n        bireTaskItemDeletedList: removedItems,\r\n\r\n        bireDocumentAddedList: this.documentsAdded,\r\n        bireDocumentDeletedList: this.documentsRemoved,\r\n        bireDocumentUpdatedList: this.documentsUpdated,\r\n\r\n        bireTaskMeasureAddedList: this.measurementPointsAdded,\r\n\r\n        bireTaskAttributeUpdatedList: bireTaskAttributes,\r\n\r\n        // TODO: Add a proper list for that\r\n        bireTaskLinkAddedList: this.bireTaskLinkAddedList,\r\n        bireTaskLinkUpdatedList: this.bireTaskLinkUpdatedList,\r\n        bireTaskLinkDeletedList: this.bireTaskLinkDeletedList,\r\n        createUpdateBireTaskMeasurementList: this.createUpdateBireTaskMeasurementList,\r\n        removeBireTaskMeasurementList: this.removeBireTaskMeasurementList\r\n      };\r\n\r\n      this.showSaveSpinner = true;\r\n      this.taskFormService.saveTask(saveTaskId).subscribe(\r\n        (result) => {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveTask'));\r\n          this.updateOpenMode(ComponentOpenMode.Read);\r\n          this.componentData.objectId = this.serializationService.serialize(this.task);\r\n          this.refresh();\r\n          this.showSaveSpinner = false;\r\n        },\r\n        (error) => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnSaveTask'));\r\n          this.showSaveSpinner = false;\r\n        }\r\n      );\r\n    } else {\r\n      super.throwUnboundLocalError(\r\n        'saveTask',\r\n        'this.task.taskCode && this.task.taskVersion && this.dynamicAttributesForTask'\r\n      );\r\n    }\r\n  }\r\n\r\n  private init(): void {\r\n    this.task = {};\r\n\r\n    // Historic popup\r\n    this.showStatusUpdatesPopup = false;\r\n    this.updatesKeyMap = new Map<string, Observable<LabelValue<string>[]>>();\r\n\r\n    this.keyMap = new Map<string, Observable<LabelValue<string>[]>>();\r\n    this.keyMap.set('structureType', this.propertiesService.getValue('getStructureTypeMap'));\r\n    this.keyMap.set('itemType', this.propertiesService.getValue('getItemTypeMap'));\r\n    this.keyMap.set('itemFamilyCode', this.propertiesService.getValue(GenericPropertyConstants.ITEM_FAMILY_CODE_MAP));\r\n    this.keyMap.set('taskItemTypeCode', this.propertiesService.getValue('getTaskItemTypeMap'));\r\n\r\n    this.deleteApi = this.taskHistoryApi.removeBireTaskHistory;\r\n\r\n    this.bireTaskLinkAddedList = [];\r\n    this.bireTaskLinkUpdatedList = [];\r\n    this.bireTaskLinkDeletedList = [];\r\n\r\n    this.operationAdded = [];\r\n    this.operationRemoved = [];\r\n\r\n    this.superiorTaskTable = [];\r\n    this.selectedSuperiorTask = [];\r\n\r\n    this.topDownTaskInput = {};\r\n    this.topDownTreeTable = [];\r\n    this.selectedTopDownNodes = [];\r\n    this.selectedTopDownNodesStore = [];\r\n\r\n    this.anteriorTable = [];\r\n    this.selectedAnterior = [];\r\n\r\n    this.posteriorTable = [];\r\n    this.selectedPosterior = [];\r\n\r\n    this.linkedTasksInput = {};\r\n    this.linkedTasksTable = [];\r\n    this.selectedLinkedTasks = [];\r\n\r\n    this.documentsAdded = [];\r\n    this.documentsRemoved = [];\r\n    this.documentsUpdated = [];\r\n\r\n    this.evolutionAdded = [];\r\n    this.evolutionRemoved = [];\r\n\r\n    this.maintainedItemAdded = [];\r\n    this.maintainedItemRemoved = [];\r\n\r\n    this.qualificationAdded = [];\r\n    this.qualificationRemoved = [];\r\n\r\n    this.tilAdded = [];\r\n    this.tilRemoved = [];\r\n    this.tilName = [];\r\n    this.tilDescription = [];\r\n    this.technicalLevels = undefined;\r\n    this.technicalLevel = [];\r\n\r\n    this.createUpdateBireTaskMeasurementList = [];\r\n    this.removeBireTaskMeasurementList = [];\r\n\r\n    this.attributeIdValueMap = new Map<string, string>();\r\n    this.bireAttributesForTask = [];\r\n    this.dynamicAttributesForTask = [];\r\n    this.bireTaskAttributes = [];\r\n    this.getBireAttributesForTask();\r\n\r\n    this.getTaskItemTypeMap = [];\r\n    this.getTaskItemTypeMaps();\r\n  }\r\n\r\n  private getTaskItemTypeMaps(): void {\r\n    this.propertiesService.getValue('getTaskItemTypeMap').subscribe((results) => {\r\n      this.getTaskItemTypeMap = results || [];\r\n    });\r\n  }\r\n\r\n  private getSubContracting(bireTaskDTO: BireTaskDTO): void {\r\n    this.taskFormService.getSubContracting(bireTaskDTO).subscribe((result) => {\r\n      this.subContracting = result || '';\r\n    });\r\n  }\r\n\r\n  private loadOperationTable(bireTaskDTOId: BireTaskDTOId) {\r\n    let total = 0;\r\n    this.taskFormService.findBireTaskOperationsByTask(bireTaskDTOId).subscribe(\r\n      (results) => {\r\n        results.forEach((res) => {\r\n          res.ope = `${res.opeCode}-${res.opeVersion}`;\r\n        });\r\n        this.operationTableDataSource.setData(results || []);\r\n        this.sortOperationTable();\r\n\r\n        results.forEach((result) => {\r\n          const cost = result.opeCost != undefined ? Number.parseInt(result.opeCost.toString(), 0) : undefined;\r\n          if (cost !== undefined) {\r\n            total = total + cost;\r\n          }\r\n        });\r\n        this.totalCost = total;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnFindTaskOperations'));\r\n      }\r\n    );\r\n    this.operationTableDataSource.setData(this.operationTableDataSource.dataSrc);\r\n  }\r\n\r\n  private loadAssociatedTasksTables(task: BireTaskDTO) {\r\n    this.isLoadingTopDownTreeTable = true;\r\n    this.taskFormService.getTaskLinkInAdequate(task).subscribe((result) => {\r\n      this.isLoadingTopDownTreeTable = false;\r\n      if (\r\n        !!result.superiorTasks &&\r\n        !!result.taskTreeNode &&\r\n        !!result.anteriorInSequence &&\r\n        !!result.posteriorInSequence &&\r\n        !!result.linkedTasks\r\n      ) {\r\n        this.convertTaskTypeInTreeNode(result.taskTreeNode);\r\n        this.setTaskInNodes(result.taskTreeNode);\r\n\r\n        this.currentTaskSelfLink = result.currentTask;\r\n\r\n        const superiorTasks: LinkedTaskDTO[] = result.superiorTasks;\r\n        superiorTasks.forEach((superiorTask) => {\r\n          if (!!superiorTask.bireTaskDTO) {\r\n            this.superiorTableDataSource.addData([superiorTask.bireTaskDTO]);\r\n          } else {\r\n            super.throwUnboundLocalError('loadAssociatedTaskTables', 'superiorTask.bireTaskDTO');\r\n          }\r\n        });\r\n\r\n        superiorTasks.forEach((superiorTask) => {\r\n          if (!!superiorTask.bireTaskDTO) {\r\n            const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n              (group) => !!superiorTask.bireTaskDTO && group.value === superiorTask.bireTaskDTO.groupCode\r\n            );\r\n            if (superiorTask.bireTaskDTO.groupCode && taskGroup) {\r\n              superiorTask.bireTaskDTO.groupCode = taskGroup[0].label;\r\n            }\r\n\r\n            const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n              (type) => !!superiorTask.bireTaskDTO && type.value === superiorTask.bireTaskDTO.taskTypeCode\r\n            );\r\n            if (superiorTask.bireTaskDTO.taskTypeCode && taskType) {\r\n              superiorTask.bireTaskDTO.taskTypeCode = taskType[0].label;\r\n            }\r\n\r\n            const temp: LinkedTaskDTO = {\r\n              bireTaskDTO: {\r\n                taskCode: superiorTask.bireTaskDTO.taskCode,\r\n                taskVersion: superiorTask.bireTaskDTO.taskVersion,\r\n                taskDesignation: superiorTask.bireTaskDTO.taskDesignation,\r\n                groupCode: superiorTask.bireTaskDTO.groupCode,\r\n                taskTypeCode: superiorTask.bireTaskDTO.taskTypeCode\r\n              },\r\n              linkType: superiorTask.linkType,\r\n              sequenceNumber: superiorTask.sequenceNumber\r\n            };\r\n            this.superiorTaskTable.push(temp);\r\n          } else {\r\n            super.throwUnboundLocalError('loadAssociatedTaskTables', 'superiorTask.bireTaskDTO');\r\n          }\r\n        });\r\n        this.superiorTableDataSource.setData(superiorTasks.map((superiorTask) => superiorTask.bireTaskDTO));\r\n        this.topDownTreeTable = [];\r\n        this.topDownTreeTable.push(result.taskTreeNode);\r\n        this.topDownTreeTable = [...this.topDownTreeTable];\r\n        this.topDownTreeTable[0].expanded = true;\r\n\r\n        const anteriorTasks: LinkedTaskDTO[] = result.anteriorInSequence;\r\n        const anteriorTasksRows: BireTaskDTO[] = [];\r\n        anteriorTasks.forEach((anteriorTask) => {\r\n          if (!!anteriorTask.bireTaskDTO) {\r\n            const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n              (group) => !!anteriorTask.bireTaskDTO && group.value === anteriorTask.bireTaskDTO.groupCode\r\n            );\r\n            if (anteriorTask.bireTaskDTO.groupCode && taskGroup) {\r\n              anteriorTask.bireTaskDTO.groupCode = taskGroup[0].label;\r\n            }\r\n\r\n            const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n              (type) => !!anteriorTask.bireTaskDTO && type.value === anteriorTask.bireTaskDTO.taskTypeCode\r\n            );\r\n            if (anteriorTask.bireTaskDTO.taskTypeCode && taskType) {\r\n              anteriorTask.bireTaskDTO.taskTypeCode = taskType[0].label;\r\n            }\r\n\r\n            if (!!anteriorTask.sequenceNumber) {\r\n              anteriorTask.bireTaskDTO.sequenceNumber = anteriorTask.sequenceNumber;\r\n            }\r\n\r\n            anteriorTasksRows.push(anteriorTask.bireTaskDTO);\r\n\r\n            const temp: LinkedTaskDTO = {\r\n              bireTaskDTO: {\r\n                taskCode: anteriorTask.bireTaskDTO.taskCode,\r\n                taskVersion: anteriorTask.bireTaskDTO.taskVersion,\r\n                taskDesignation: anteriorTask.bireTaskDTO.taskDesignation,\r\n                groupCode: anteriorTask.bireTaskDTO.groupCode,\r\n                taskTypeCode: anteriorTask.bireTaskDTO.taskTypeCode\r\n              },\r\n              linkType: anteriorTask.linkType,\r\n              sequenceNumber: anteriorTask.sequenceNumber,\r\n              linkedTaskMain: anteriorTask.linkedTaskMain\r\n            };\r\n            this.anteriorTable.push(temp);\r\n          } else {\r\n            super.throwUnboundLocalError('loadAssociatedTaskTables', 'anteriorTask.bireTaskDTO');\r\n          }\r\n        });\r\n        this.anteriorTaskTableDataSource.setData(anteriorTasksRows);\r\n\r\n        const posteriorTasks: LinkedTaskDTO[] = result.posteriorInSequence;\r\n        const posteriorTasksRows: BireTaskDTO[] = [];\r\n        posteriorTasks.forEach((posteriorTask) => {\r\n          if (!!posteriorTask.bireTaskDTO) {\r\n            const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n              (group) => !!posteriorTask.bireTaskDTO && group.value === posteriorTask.bireTaskDTO.groupCode\r\n            );\r\n            if (posteriorTask.bireTaskDTO.groupCode && taskGroup) {\r\n              posteriorTask.bireTaskDTO.groupCode = taskGroup[0].label;\r\n            }\r\n            const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n              (type) => !!posteriorTask.bireTaskDTO && type.value === posteriorTask.bireTaskDTO.taskTypeCode\r\n            );\r\n            if (posteriorTask.bireTaskDTO.taskTypeCode && taskType) {\r\n              posteriorTask.bireTaskDTO.taskTypeCode = taskType[0].label;\r\n            }\r\n\r\n            if (!!posteriorTask.sequenceNumber) {\r\n              posteriorTask.bireTaskDTO.sequenceNumber = posteriorTask.sequenceNumber;\r\n            }\r\n\r\n            posteriorTasksRows.push(posteriorTask.bireTaskDTO);\r\n\r\n            const temp: LinkedTaskDTO = {\r\n              bireTaskDTO: {\r\n                taskCode: posteriorTask.bireTaskDTO.taskCode,\r\n                taskVersion: posteriorTask.bireTaskDTO.taskVersion,\r\n                taskDesignation: posteriorTask.bireTaskDTO.taskDesignation,\r\n                groupCode: posteriorTask.bireTaskDTO.groupCode,\r\n                taskTypeCode: posteriorTask.bireTaskDTO.taskTypeCode\r\n              },\r\n              linkType: posteriorTask.linkType,\r\n              sequenceNumber: posteriorTask.sequenceNumber,\r\n              linkedTaskMain: posteriorTask.linkedTaskMain\r\n            };\r\n            this.posteriorTable.push(temp);\r\n          } else {\r\n            super.throwUnboundLocalError('loadAssociatedTaskTables', 'posteriorTask.bireTaskDTO');\r\n          }\r\n        });\r\n        this.posteriorTaskTableDataSource.setData(posteriorTasksRows);\r\n\r\n        const linkedTasks: LinkedTaskDTO[] = result.linkedTasks;\r\n\r\n        linkedTasks.forEach((linkedTask) => {\r\n          if (!!linkedTask.bireTaskDTO) {\r\n            const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n              (group) => !!linkedTask.bireTaskDTO && group.value === linkedTask.bireTaskDTO.groupCode\r\n            );\r\n            if (linkedTask.bireTaskDTO.groupCode && taskGroup && taskGroup.length > 0) {\r\n              linkedTask.bireTaskDTO.groupCode = taskGroup[0].label;\r\n            }\r\n\r\n            const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n              (type) => !!linkedTask.bireTaskDTO && type.value === linkedTask.bireTaskDTO.taskTypeCode\r\n            );\r\n            if (linkedTask.bireTaskDTO.taskTypeCode && taskType && taskType.length > 0) {\r\n              linkedTask.bireTaskDTO.taskTypeCode = taskType[0].label;\r\n            }\r\n\r\n            let linkType: string | undefined;\r\n            if (this.linked !== undefined && this.linked.length > 0 && linkedTasks.length > 0) {\r\n              linkType = LabelValueHelper.getLabelByValue(this.linked, linkedTask.linkType);\r\n            }\r\n\r\n            if (!!linkType && !!linkedTask.bireTaskDTO.taskCode && !!linkedTask.bireTaskDTO.taskVersion) {\r\n              const linkedInput: LinkedTasksTableDTO = {\r\n                linkType,\r\n                taskCode: linkedTask.bireTaskDTO.taskCode,\r\n                taskVersion: linkedTask.bireTaskDTO.taskVersion,\r\n                taskDesignation: linkedTask.bireTaskDTO.taskDesignation,\r\n                taskGroup: linkedTask.bireTaskDTO.groupCode,\r\n                taskType: linkedTask.bireTaskDTO.taskTypeCode\r\n              };\r\n\r\n              this.linkedTaskTableDataSource.addData([linkedInput]);\r\n\r\n              const temp: LinkedTaskDTO = {\r\n                bireTaskDTO: {\r\n                  taskCode: linkedTask.bireTaskDTO.taskCode,\r\n                  taskVersion: linkedTask.bireTaskDTO.taskVersion,\r\n                  taskDesignation: linkedTask.bireTaskDTO.taskDesignation,\r\n                  groupCode: linkedTask.bireTaskDTO.groupCode,\r\n                  taskTypeCode: linkedTask.bireTaskDTO.taskTypeCode\r\n                },\r\n                linkType: linkedTask.linkType,\r\n                sequenceNumber: linkedTask.sequenceNumber\r\n              };\r\n              this.linkedTasksTable.push(temp);\r\n            } else {\r\n              super.throwUnboundLocalError(\r\n                'loadAssociatedTaskTables',\r\n                'linkType && linkedTask.bireTaskDTO.taskCode && linkedTask.bireTaskDTO.taskVersion'\r\n              );\r\n            }\r\n          } else {\r\n            super.throwUnboundLocalError('loadAssociatedTaskTables', 'linkedTask.bireTaskDTO');\r\n          }\r\n        });\r\n      } else {\r\n        super.throwUnboundLocalError(\r\n          'loadAssociatedTasksTables',\r\n          `result.superiorTasks &&\r\n           result.taskTreeNode &&\r\n           result.anteriorInSequence &&\r\n           result.posteriorInSequence &&\r\n           result.linkedTasks`\r\n        );\r\n      }\r\n    });\r\n    this.superiorTableDataSource.setData(this.superiorTableDataSource.dataSrc);\r\n    this.linkedTaskTableDataSource.setData(this.linkedTaskTableDataSource.dataSrc);\r\n\r\n    // Adding object status if necessary\r\n    if (!!this.task.taskStatus && !this.getLabelValueByValue(this.propertyStatus, this.task.taskStatus)) {\r\n      const currentState = this.getLabelValueByValue(this.propertyObjectStatus, this.task.taskStatus);\r\n      if (currentState) {\r\n        this.taskStatus.unshift(currentState);\r\n        this.updateWorkflowStatusList();\r\n      }\r\n    }\r\n  }\r\n\r\n  private getLabelValueByValue<T>(references: LabelValue<T>[], value: T): LabelValue<T> | undefined {\r\n    return references.find((lv) => lv.value === value);\r\n  }\r\n\r\n  private updateWorkflowStatusList() {\r\n    this.workflowStatus = WorkflowUtils.filterWorkflowStatusList(\r\n      this.userWorkflow,\r\n      this.taskStatus,\r\n      this.task.taskStatus\r\n    );\r\n  }\r\n\r\n  private convertTaskTypeInTreeNode(node: TreeNode): void {\r\n    LabelValueUtils.stringValueToLabel(node.data.bireTaskDTO, 'taskTypeCode', this.taskTypes);\r\n    if (!!node.children && node.children.length > 0) {\r\n      node.children.forEach((child) => this.convertTaskTypeInTreeNode(child));\r\n    }\r\n  }\r\n\r\n  private setTaskInNodes(node: TreeNode): void {\r\n    node.data.bireTaskDTO.task = `${node.data.bireTaskDTO.taskCode}-${node.data.bireTaskDTO.taskVersion}`;\r\n    if (!!node.children && node.children.length > 0) {\r\n      node.children.forEach((child) => this.setTaskInNodes(child));\r\n    }\r\n  }\r\n\r\n  private loadEvolutionsTable(bireTaskDTOId: BireTaskDTOId) {\r\n    this.taskFormService.findBireTaskEvolutionsByTask(bireTaskDTOId).subscribe((results) => {\r\n      this.evolutionsTableDataSource.setData(\r\n        ListUtils.orEmpty(results).map((result) => this.createEvolutionRow(result))\r\n      );\r\n      this.fillDesignationInEvolutionTable();\r\n    });\r\n    this.evolutionsTableDataSource.setData(this.evolutionsTableDataSource.dataSrc);\r\n  }\r\n\r\n  private loadItemsTable(bireTaskDTOId: BireTaskDTOId) {\r\n    this.maintainedItemsTableDataSource.setData([]);\r\n    this.maintainedItemsTableDataSource.isLoading = true;\r\n    this.taskFormService.findBireTaskItemsWithItemByTask(bireTaskDTOId).subscribe((results) => {\r\n      this.maintainedItemsTableDataSource.isLoading = false;\r\n      this.maintainedItemsTableDataSource.setData(\r\n        ListUtils.orEmpty(results).map((result) => this.createMaintainedItemRow(result))\r\n      );\r\n    });\r\n  }\r\n\r\n  private loadShopManualsTable(bireTaskDTOId: BireTaskDTOId) {\r\n    this.taskFormService.findBireSmTasksByTask(bireTaskDTOId).subscribe(\r\n      (results) => {\r\n        this.shopManualsTableDataSource.setData(results || []);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnFindShopManuals'));\r\n      }\r\n    );\r\n  }\r\n  /**\r\n   * loadMaintenanceProgramsTable() - This function is used to load Maintenance Program Table.\r\n   * @param bireTaskDTOId - Current Task Id\r\n   * @param bireTaskDTO - Current Task\r\n   */\r\n  private loadMaintenanceProgramsTable(bireTaskDTOId: BireTaskDTOId, bireTaskDTO: BireTaskDTO) {\r\n    this.taskFormService.findBireMaintenanceProgramsByTask(bireTaskDTO).subscribe(\r\n      (results) => {\r\n        this.upgradeButtonVisibility(bireTaskDTOId, results);\r\n        this.maintenanceProgramsTableDataSource.setData(results || []);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnFindMaintenancePrograms'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadQualificationsTable(bireTaskDTO: BireTaskDTO) {\r\n    this.taskFormService.findBireQualificationsBySearchCriteria(bireTaskDTO).subscribe(\r\n      (results) => {\r\n        if (results) {\r\n          results.list.forEach((res) => {\r\n            if (!!res.averageHourRate) {\r\n              res.averageHourRate = `${res.averageHourRate} ${this.currency}`;\r\n            }\r\n          });\r\n          this.qualificationsTableDataSource.setData(results.list || []);\r\n        }\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnFindQualifications'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadTilTable(bireTaskDTO: BireTaskDTO) {\r\n    this.taskFormService.findBireTilTasksByTask(bireTaskDTO).subscribe(\r\n      (results) => {\r\n        this.tilTableDataSource.setData(results || []);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnFindTilTasks'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadDocumentsTable(bireTaskDTOId: BireTaskDTOId) {\r\n    this.documentsTableDataSource.setData([]);\r\n    this.documentsTableDataSource.isLoading = true;\r\n    this.taskFormService.findBireDocumentsByTask(bireTaskDTOId).subscribe(\r\n      (results) => {\r\n        this.documentsTableDataSource.isLoading = false;\r\n        this.documentsTableDataSource.setData(results || []);\r\n        this.bireDocumentDisplayed = [];\r\n        this.documentsTableDataSource.dataSrc.forEach((doc) => {\r\n          LabelValueUtils.stringValueToLabel(doc, 'docCategory', this.documentCategories);\r\n          this.bireDocumentDisplayed.push(this.getCustomDocumentRow(doc));\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnFindDocuments'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private initOperationTableDataSource(): void {\r\n    this.operationTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'opeSequenceNumber',\r\n          translateKey: this.getTranslateKey('opeSequenceNumber'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'ope',\r\n          translateKey: this.getTranslateKey('ope'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'opeVersion',\r\n          translateKey: this.getTranslateKey('opeVersion'),\r\n          width: '7.5%'\r\n        },\r\n        {\r\n          field: 'opeDesignation',\r\n          translateKey: this.getTranslateKey('opeDesignation'),\r\n          width: '27.5%'\r\n        },\r\n        {\r\n          field: 'opeDurationTime',\r\n          translateKey: this.getTranslateKey('opeDurationTime'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'opeManHour',\r\n          translateKey: this.getTranslateKey('opeManHour'),\r\n          width: '7.5%'\r\n        },\r\n        {\r\n          field: 'opeQualification',\r\n          translateKey: this.getTranslateKey('opeQualification'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'opeCost',\r\n          translateKey: this.getTranslateKey('opeCost'),\r\n          width: '7.5%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n  private initEvolutionsTableDataSource(): void {\r\n    this.evolutionsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'evolutionNumber',\r\n          translateKey: this.getTranslateKey('evolutionNumber'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'evolutionRevisionNumber',\r\n          translateKey: this.getTranslateKey('evolutionRevisionNumber'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'designation',\r\n          translateKey: this.getTranslateKey('designation'),\r\n          width: '40%'\r\n        },\r\n        {\r\n          field: 'taskEvolutionTypeCode',\r\n          translateKey: this.getTranslateKey('taskEvolutionTypeCode'),\r\n          width: '20%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n  private initMaintainedItemsTableDataSource(): void {\r\n    this.maintainedItemsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'familyVariant',\r\n          translateKey: this.getTranslateKey('familyVariant'),\r\n          width: '22.5%'\r\n        },\r\n        {\r\n          field: 'item',\r\n          translateKey: this.getTranslateKey('item'),\r\n          width: '12.5%'\r\n        },\r\n        {\r\n          field: 'designation',\r\n          translateKey: this.getTranslateKey('designation'),\r\n          width: '40%'\r\n        },\r\n        {\r\n          field: 'versionNumber',\r\n          translateKey: this.getTranslateKey('versionNumber'),\r\n          width: '12.5%'\r\n        },\r\n        {\r\n          field: 'linkType',\r\n          translateKey: this.getTranslateKey('linkType'),\r\n          width: '12.5%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n    if (this.sessionService.isSpecificDassault) {\r\n      this.maintainedItemsTableDataSource = new TableDataSource({\r\n        allowMultiSelect: true,\r\n        columns: [\r\n          {\r\n            field: 'familyVariant',\r\n            translateKey: this.getTranslateKey('familyVariant'),\r\n            width: '12%'\r\n          },\r\n          {\r\n            field: 'item',\r\n            translateKey: this.getTranslateKey('item'),\r\n            width: '12%'\r\n          },\r\n          {\r\n            field: 'designation',\r\n            translateKey: this.getTranslateKey('designation'),\r\n            width: '40%'\r\n          },\r\n          {\r\n            field: 'versionNumber',\r\n            translateKey: this.getTranslateKey('versionNumber'),\r\n            width: '12%'\r\n          },\r\n          {\r\n            field: 'linkType',\r\n            translateKey: this.getTranslateKey('linkType'),\r\n            width: '12%'\r\n          },\r\n          {\r\n            field: 'field',\r\n            translateKey: this.getTranslateKey('field'),\r\n            width: '12%'\r\n          }\r\n        ],\r\n        data: []\r\n      });\r\n    }\r\n  }\r\n\r\n  private initShopManualsTableDataSource(): void {\r\n    this.shopManualsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'taskCode',\r\n          translateKey: this.getTranslateKey('taskCode'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'taskDescription',\r\n          translateKey: this.getTranslateKey('taskDescription'),\r\n          width: '45%'\r\n        },\r\n        {\r\n          field: 'smVersionStart',\r\n          translateKey: this.getTranslateKey('smVersionStart'),\r\n          width: '17.5%'\r\n        },\r\n        {\r\n          field: 'smVersionEnd',\r\n          translateKey: this.getTranslateKey('smVersionEnd'),\r\n          width: '17.5%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initMaintenanceProgramsTableDataSource(): void {\r\n    this.maintenanceProgramsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'programCode',\r\n          translateKey: this.getTranslateKey('programCode'),\r\n          width: '17.5%'\r\n        },\r\n        {\r\n          field: 'programName',\r\n          translateKey: this.getTranslateKey('programName'),\r\n          width: '17.5%'\r\n        },\r\n        {\r\n          field: 'programRevisionNumber',\r\n          translateKey: this.getTranslateKey('programRevisionNumber'),\r\n          width: '17.5%'\r\n        },\r\n        {\r\n          field: 'programDesignation',\r\n          translateKey: this.getTranslateKey('programDesignation'),\r\n          width: '17.5%'\r\n        },\r\n        {\r\n          field: 'reference',\r\n          translateKey: this.getTranslateKey('reference'),\r\n          width: '15%'\r\n        },\r\n        {\r\n          field: 'periodicity',\r\n          translateKey: this.getTranslateKey('periodicity'),\r\n          width: '15%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initQualificationsTableDataSource(): void {\r\n    this.qualificationsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'qualificationCode',\r\n          translateKey: this.getTranslateKey('qualificationCode'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'qualificationName',\r\n          translateKey: this.getTranslateKey('qualificationName'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'qualificationDescription',\r\n          translateKey: this.getTranslateKey('qualificationDescription'),\r\n          width: '50%'\r\n        },\r\n        {\r\n          field: 'averageHourRate',\r\n          translateKey: this.getTranslateKey('averageHourRate'),\r\n          width: '20%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initTilTableDataSource(): void {\r\n    this.tilTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'tilName',\r\n          translateKey: this.getTranslateKey('tilName'),\r\n          width: '25%'\r\n        },\r\n        {\r\n          field: 'tilDescription',\r\n          translateKey: this.getTranslateKey('tilDescription'),\r\n          width: '75%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initDocumentsTableDataSource(): void {\r\n    this.documentsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'docName',\r\n          translateKey: this.getTranslateKey('docName'),\r\n          width: '37.5%'\r\n        },\r\n        {\r\n          field: 'docCategory',\r\n          translateKey: this.getTranslateKey('docCategory'),\r\n          width: '10.5%'\r\n        },\r\n        {\r\n          field: 'docSource',\r\n          translateKey: this.getTranslateKey('docSource'),\r\n          width: '20.5%'\r\n        },\r\n        {\r\n          field: 'docExtension',\r\n          translateKey: this.getTranslateKey('docExtension'),\r\n          width: '10.5%'\r\n        },\r\n        {\r\n          field: 'docSize',\r\n          translateKey: this.getTranslateKey('docSize'),\r\n          width: '10.5%'\r\n        },\r\n        {\r\n          field: 'docPublicationDate',\r\n          translateKey: this.getTranslateKey('docPublicationDate'),\r\n          width: '10.5%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initMeasurementPointsTableDataSource(): void {\r\n    this.measurementPointsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'counterCode',\r\n          translateKey: this.getTranslateKey('measureCode'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'counterRemarks',\r\n          translateKey: this.getTranslateKey('mpTitle'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'description',\r\n          translateKey: this.getTranslateKey('mpDescription'),\r\n          width: '30%'\r\n        },\r\n        {\r\n          field: 'unitCode',\r\n          translateKey: this.getTranslateKey('unit'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'toolPartNumber',\r\n          translateKey: this.getTranslateKey('tool'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'formula',\r\n          translateKey: this.getTranslateKey('formula'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'sequenceNumber',\r\n          translateKey: this.getTranslateKey('sequence'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'groupCode',\r\n          translateKey: this.getTranslateKey('mpGroup'),\r\n          width: '10%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initSuperiorTableDataSource(): void {\r\n    this.superiorTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'taskCode',\r\n          translateKey: this.getTranslateKey('taskCode'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'taskVersion',\r\n          translateKey: this.getTranslateKey('taskVersion'),\r\n          width: '7.5%'\r\n        },\r\n        {\r\n          field: 'taskDesignation',\r\n          translateKey: this.getTranslateKey('taskDesignation'),\r\n          width: '47.5%'\r\n        },\r\n        {\r\n          field: 'groupCode',\r\n          translateKey: this.getTranslateKey('groupCode'),\r\n          width: '12.5%'\r\n        },\r\n        {\r\n          field: 'taskTypeCode',\r\n          translateKey: this.getTranslateKey('taskTypeCode'),\r\n          width: '12.5%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initAnteriorTaskTableDataSource(): void {\r\n    this.anteriorTaskTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'taskCode',\r\n          translateKey: this.getTranslateKey('taskCode'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'taskVersion',\r\n          translateKey: this.getTranslateKey('taskVersion'),\r\n          width: '7.5%'\r\n        },\r\n        {\r\n          field: 'taskDesignation',\r\n          translateKey: this.getTranslateKey('taskDesignation'),\r\n          width: '37.5%'\r\n        },\r\n        {\r\n          field: 'groupCode',\r\n          translateKey: this.getTranslateKey('groupCode'),\r\n          width: '12.5%'\r\n        },\r\n        {\r\n          field: 'taskTypeCode',\r\n          translateKey: this.getTranslateKey('taskTypeCode'),\r\n          width: '12.5%'\r\n        },\r\n        {\r\n          field: 'sequenceNumber',\r\n          translateKey: this.getTranslateKey('sequenceNumber'),\r\n          width: '10%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initPosteriorTaskTableDataSource(): void {\r\n    this.posteriorTaskTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'taskCode',\r\n          translateKey: this.getTranslateKey('taskCode'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'taskVersion',\r\n          translateKey: this.getTranslateKey('taskVersion'),\r\n          width: '7.5%'\r\n        },\r\n        {\r\n          field: 'taskDesignation',\r\n          translateKey: this.getTranslateKey('taskDesignation'),\r\n          width: '37.5%'\r\n        },\r\n        {\r\n          field: 'groupCode',\r\n          translateKey: this.getTranslateKey('groupCode'),\r\n          width: '12.5%'\r\n        },\r\n        {\r\n          field: 'taskTypeCode',\r\n          translateKey: this.getTranslateKey('taskTypeCode'),\r\n          width: '12.5%'\r\n        },\r\n        {\r\n          field: 'sequenceNumber',\r\n          translateKey: this.getTranslateKey('sequenceNumber'),\r\n          width: '10%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initLinkedTaskTableDataSource(): void {\r\n    this.linkedTaskTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'taskCode',\r\n          translateKey: this.getTranslateKey('taskCode'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'taskVersion',\r\n          translateKey: this.getTranslateKey('taskVersion'),\r\n          width: '7.5%'\r\n        },\r\n        {\r\n          field: 'taskDesignation',\r\n          translateKey: this.getTranslateKey('taskDesignation'),\r\n          width: '35%'\r\n        },\r\n        {\r\n          field: 'taskGroup',\r\n          translateKey: this.getTranslateKey('taskGroup'),\r\n          width: '12.5%'\r\n        },\r\n        {\r\n          field: 'taskType',\r\n          translateKey: this.getTranslateKey('taskType'),\r\n          width: '12.5%'\r\n        },\r\n        {\r\n          field: 'linkType',\r\n          translateKey: this.getTranslateKey('linkType'),\r\n          width: '12.5%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private setTableCols(): void {\r\n    this.topDownTaskStructureTableCols = [\r\n      { field: 'taskCode', alignment: 'left', width: '20%' },\r\n      { field: 'taskVersion', alignment: 'left', width: '7.5%' },\r\n      { field: 'taskDesignation', alignment: 'left', width: '37.5%' },\r\n      { field: 'groupCode', alignment: 'left', width: '12.5%' },\r\n      { field: 'taskTypeCode', alignment: 'left', width: '12.5%' },\r\n      { field: 'sequenceNumber', alignment: 'right', width: '10%' }\r\n    ];\r\n  }\r\n\r\n  private loadMROCenter(): void {\r\n    this.taskSearchService.findMROCenter().subscribe(\r\n      (results) => {\r\n        this.mroCenters = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorONGetMROCenter'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadTaskType(): void {\r\n    this.propertiesService.getValue('getTaskTypeMap').subscribe(\r\n      (results) => {\r\n        this.taskTypes = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('.errorOnGetTaskTypes'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadDocumentTaskCategories(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.DOC_TASK_CATEGORY_MAP).subscribe(\r\n      (results) => {\r\n        this.documentCategories = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('.errorOnGetDocumentTaskCategories'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadStatus(): void {\r\n    this.propertiesService.getValue('getFuncObjectStatusMap').subscribe(\r\n      (results) => {\r\n        this.statuses = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('.errorOnGetStatuses'));\r\n      }\r\n    );\r\n\r\n    this.taskFormService.getFuncObjectStatusMap().subscribe((results) => {\r\n      this.propertyStatus = results;\r\n      this.taskStatus = [...results];\r\n      this.updateWorkflowStatusList();\r\n    });\r\n\r\n    this.taskFormService.getObjectStatusMap().subscribe(\r\n      (results) => {\r\n        this.propertyObjectStatus = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetObjectStatus'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadApplicability(): void {\r\n    this.propertiesService.getValue('getTaskApplicabilityCodeMap').subscribe(\r\n      (results) => {\r\n        this.applicabilities = results || [];\r\n        this.task.taskApplicabilityCode = results[0].value;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('.errorOnGetApplicabilities'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadTaskGroup(): void {\r\n    this.taskSearchService.getTaskGroups().subscribe(\r\n      (results) => {\r\n        this.taskGroups = results.filter((taskGroup) => taskGroup.value != undefined) || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetTaskGroups'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadLinkTypes(): void {\r\n    this.propertiesService.getValue('getTaskEvolutionTypeMap').subscribe(\r\n      (results) => {\r\n        this.evolutionLinkTypes = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('.errorOnGetEvolutionLinkTypes'));\r\n      }\r\n    );\r\n\r\n    this.propertiesService.getValue('getTaskItemTypeMap').subscribe(\r\n      (results) => {\r\n        this.itemLinkTypes = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('.errorOnGetEvolutionLinkTypes'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadAssociatedTaskLinkTypes(): void {\r\n    this.propertiesService.getValue('getTaskLinkMap').subscribe(\r\n      (results) => {\r\n        if (this.translateService.currentLang === 'en') {\r\n          const linkType: LabelValue<string> = {\r\n            label: 'Download Structure',\r\n            value: '7'\r\n          };\r\n          results.push(linkType);\r\n        } else {\r\n          const linkType: LabelValue<string> = {\r\n            label: 'Structure descendante',\r\n            value: '7'\r\n          };\r\n          results.push(linkType);\r\n        }\r\n        this.associatedLinkTypes = results || [];\r\n        this.superior = this.associatedLinkTypes.filter((type) => type.value === '3');\r\n        this.topDown = this.associatedLinkTypes.filter((type) => type.value === '7');\r\n        this.anterior = this.associatedLinkTypes.filter((type) => type.value === '1');\r\n        this.posterior = this.associatedLinkTypes.filter((type) => type.value === '2');\r\n        this.linked = this.associatedLinkTypes.filter(\r\n          (type) => type.value === '4' || type.value === '5' || type.value === '6'\r\n        );\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('.errorOnGetEvolutionLinkTypes'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadStructureTypes(): void {\r\n    this.propertiesService.getValue('getStructureTypeMap').subscribe(\r\n      (results) => {\r\n        this.structureType = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadStructureType'));\r\n      }\r\n    );\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Task Fields tab\r\n   *************************************************************************/\r\n\r\n  public openTaskFieldsTab(): void {\r\n    this.currentTabId = this.tabTaskFieldsId;\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Task Card tab\r\n   *************************************************************************/\r\n\r\n  public openTaskCardTab(): void {\r\n    this.currentTabId = this.tabTaskCardId;\r\n    this.openStructureTab();\r\n  }\r\n\r\n  // Operation table\r\n\r\n  public createOperation(): void {\r\n    this.currentOperation = undefined;\r\n    this.isReadOnlyOperationDialog = false;\r\n    this.showOperationDialog = true;\r\n  }\r\n\r\n  public openOperation(): void {\r\n    if (this.operationTableDataSource.dataSelectionCount === 1) {\r\n      this.currentOperation = this.operationTableDataSource.dataSelection[0];\r\n      this.currentOperationIndex = undefined;\r\n      this.isReadOnlyOperationDialog = true;\r\n      this.showOperationFormDialog = true;\r\n    }\r\n  }\r\n\r\n  public openEditOperationDialog() {\r\n    if (this.operationTableDataSource.dataSelectionCount === 1) {\r\n      this.currentOperation = this.operationTableDataSource.dataSelection[0];\r\n      this.currentOperationIndex = undefined;\r\n      this.isReadOnlyOperationDialog = false;\r\n      this.showOperationFormDialog = true;\r\n    }\r\n  }\r\n\r\n  public openOperationForm(operation: BireOperationDTO): void {\r\n    // open operation form when operation screen is ready\r\n    if (!!operation && !!operation.opeCode && !!operation.opeVersion && !!operation.rangeCode) {\r\n      const operationFormId: BireOperationDTOId = {\r\n        opeCode: operation.opeCode,\r\n        opeVersion: operation.opeVersion,\r\n        rangeCode: operation.rangeCode\r\n      };\r\n      const labelKey = 'transaction.OperationFormComponent';\r\n      const data: OperationTabData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.ENG_OPERATION_FORM,\r\n        objectId: this.serializationService.serialize(operationFormId),\r\n        openMode: ComponentOpenMode.Read,\r\n        opeCode: operation.opeCode,\r\n        opeVersion: operation.opeVersion,\r\n        rangeCode: operation.rangeCode\r\n      };\r\n\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    }\r\n  }\r\n\r\n  public deleteOperation(): void {\r\n    const partialMessageKey =\r\n      this.operationTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedOperations'\r\n        : 'confirmDeleteSelectedOperation';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.operationTableDataSource.dataSelection.forEach((operation) => {\r\n          if (!!operation.rangeCode && !!operation.opeCode && !!operation.opeVersion) {\r\n            const operationId: BireOperationDTOId = {\r\n              rangeCode: operation.rangeCode,\r\n              opeCode: operation.opeCode,\r\n              opeVersion: operation.opeVersion\r\n            };\r\n            const operationsAddedWithoutSelection = this.operationAdded.filter((operationAdded) => {\r\n              return !DTOUtils.equalsBireOperationDTO(operation, operationAdded);\r\n            });\r\n            if (this.operationAdded.length !== operationsAddedWithoutSelection.length) {\r\n              this.operationAdded = operationsAddedWithoutSelection;\r\n            } else {\r\n              this.operationRemoved.push(operationId);\r\n            }\r\n          } else {\r\n            super.throwUnboundLocalError(\r\n              'deleteOperation',\r\n              'operation.rangeCode && operation.opeCode && operation.opeVersion'\r\n            );\r\n          }\r\n        });\r\n\r\n        this.operationTableDataSource.dataSrc.filter((operation) => {\r\n          return !this.operationTableDataSource.dataSelection.some((selOperation) => {\r\n            return DTOUtils.equalsBireOperationDTO(operation, selOperation);\r\n          });\r\n        });\r\n        this.sortOperationTable();\r\n        this.operationTableDataSource.deleteData(this.operationTableDataSource.dataSelection);\r\n        this.operationTableDataSource.setData(this.operationTableDataSource.dataSrc);\r\n        this.operationTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  // Structure tab\r\n\r\n  public openStructureTab(): void {\r\n    this.currentSubTabId = this.tabStructureId;\r\n  }\r\n\r\n  // 1. Superior task table\r\n\r\n  public createSuperiorTask(): void {\r\n    this.currentSuperiorTask = undefined;\r\n    this.isReadOnlySuperiorTasksDialog = false;\r\n    this.showSuperiorTasksDialog = true;\r\n  }\r\n\r\n  public editSuperiorTask(): void {\r\n    if (this.superiorTableDataSource.dataSelectionCount === 1) {\r\n      this.currentSuperiorTaskIndex = this.superiorTableDataSource.dataSrc.findIndex((superior) => {\r\n        return DTOUtils.equalsBireTaskDTO(superior, this.superiorTableDataSource.dataSelection[0]);\r\n      });\r\n\r\n      const selectedsuperior: BireTaskDTO = { ...this.superiorTableDataSource.dataSelection[0] };\r\n      const inSuperiorTable = this.superiorTaskTable.filter(\r\n        (superior) => superior.bireTaskDTO.taskCode === selectedsuperior.taskCode\r\n      );\r\n      const linkedSuperior: LinkedTaskDTO = {\r\n        bireTaskDTO: selectedsuperior,\r\n        linkType: undefined,\r\n        sequenceNumber: inSuperiorTable[0].sequenceNumber\r\n      };\r\n\r\n      const superiorTask = this.superiorTaskTable.filter((task) => {\r\n        if (!!task.bireTaskDTO) {\r\n          DTOUtils.equalsBireTaskDTO(task.bireTaskDTO, selectedsuperior);\r\n        }\r\n      });\r\n\r\n      if (superiorTask.length > 0 && superiorTask[0] !== null && superiorTask[0] !== undefined) {\r\n        linkedSuperior.linkType = superiorTask[0].linkType;\r\n        linkedSuperior.sequenceNumber = superiorTask[0].sequenceNumber;\r\n      }\r\n\r\n      this.currentSuperiorTask = { ...linkedSuperior };\r\n      const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n        (type) =>\r\n          !!this.currentSuperiorTask &&\r\n          !!this.currentSuperiorTask.bireTaskDTO &&\r\n          type.label === this.currentSuperiorTask.bireTaskDTO.taskTypeCode\r\n      );\r\n      if (taskType[0]) {\r\n        this.currentSuperiorTask.bireTaskDTO.taskTypeCode = taskType[0].value;\r\n      }\r\n\r\n      const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n        (group) =>\r\n          !!this.currentSuperiorTask &&\r\n          !!this.currentSuperiorTask.bireTaskDTO &&\r\n          group.label === this.currentSuperiorTask.bireTaskDTO.groupCode\r\n      );\r\n      if (taskGroup[0]) {\r\n        this.currentSuperiorTask.bireTaskDTO.groupCode = taskGroup[0].value;\r\n      }\r\n      this.isReadOnlySuperiorTasksDialog = false;\r\n      this.showSuperiorTasksDialog = true;\r\n      this.superiorTableDataSource.setData(this.superiorTableDataSource.dataSrc);\r\n    }\r\n  }\r\n\r\n  public openSuperiorTask(): void {\r\n    if (this.superiorTableDataSource.dataSelectionCount === 1) {\r\n      const selectedsuperior: BireTaskDTO = { ...this.superiorTableDataSource.dataSelection[0] };\r\n      const inSuperiorTable = this.superiorTaskTable.filter(\r\n        (superior) => superior.bireTaskDTO.taskCode === selectedsuperior.taskCode\r\n      );\r\n      const linkedSuperior: LinkedTaskDTO = {\r\n        bireTaskDTO: selectedsuperior,\r\n        linkType: undefined,\r\n        sequenceNumber: inSuperiorTable[0].sequenceNumber\r\n      };\r\n      const superiorTask = this.superiorTaskTable.filter((task) => {\r\n        if (!!task.bireTaskDTO) {\r\n          DTOUtils.equalsBireTaskDTO(task.bireTaskDTO, selectedsuperior);\r\n        }\r\n      });\r\n\r\n      if (!!superiorTask && !!superiorTask[0]) {\r\n        linkedSuperior.linkType = superiorTask[0].linkType;\r\n        linkedSuperior.sequenceNumber = superiorTask[0].sequenceNumber;\r\n      }\r\n\r\n      this.currentSuperiorTask = { ...linkedSuperior };\r\n      const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n        (type) =>\r\n          !!this.currentSuperiorTask &&\r\n          !!this.currentSuperiorTask.bireTaskDTO &&\r\n          type.label === this.currentSuperiorTask.bireTaskDTO.taskTypeCode\r\n      );\r\n      if (taskType[0]) {\r\n        this.currentSuperiorTask.bireTaskDTO.taskTypeCode = taskType[0].value;\r\n      }\r\n\r\n      const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n        (group) =>\r\n          !!this.currentSuperiorTask &&\r\n          !!this.currentSuperiorTask.bireTaskDTO &&\r\n          group.label === this.currentSuperiorTask.bireTaskDTO.groupCode\r\n      );\r\n      if (taskGroup[0]) {\r\n        this.currentSuperiorTask.bireTaskDTO.groupCode = taskGroup[0].value;\r\n      }\r\n\r\n      this.isReadOnlySuperiorTasksDialog = true;\r\n      this.showSuperiorTasksDialog = true;\r\n    }\r\n  }\r\n\r\n  public openTaskForm(task: BireTaskDTO): void {\r\n    const labelKey = 'transaction.TaskFormComponent';\r\n    const taskId: BireTaskDTO = {\r\n      taskCode: task.taskCode,\r\n      taskVersion: task.taskVersion\r\n    };\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: 'TaskFormComponent',\r\n      objectId: this.serializationService.serialize(taskId),\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public deleteSuperiorTask(): void {\r\n    const partialMessageKey =\r\n      this.selectedSuperiorTask.length > 1 ? 'confirmDeleteSelectedSuperiorTasks' : 'confirmDeleteSelectedSuperiorTask';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.superiorTableDataSource.dataSelection.forEach((task) => {\r\n          if (\r\n            !!task &&\r\n            !!task.taskCode &&\r\n            !!task.taskVersion &&\r\n            !!this.task &&\r\n            !!this.task.taskCode &&\r\n            !!this.task.taskVersion\r\n          ) {\r\n            const temp: BireTaskTaskDTOId = {\r\n              birTaskCode: task.taskCode,\r\n              birTaskVersion: task.taskVersion,\r\n              taskCode: this.task.taskCode,\r\n              taskVersion: this.task.taskVersion\r\n            };\r\n            const tasksAddedWithoutSelection = this.bireTaskLinkAddedList.filter((taskAdded) => {\r\n              return taskAdded.birTaskCode === task.taskCode && taskAdded.birTaskVersion === task.taskVersion;\r\n            });\r\n            if (this.bireTaskLinkAddedList.length !== tasksAddedWithoutSelection.length) {\r\n              this.bireTaskLinkAddedList = tasksAddedWithoutSelection;\r\n            } else {\r\n              this.bireTaskLinkDeletedList.push(temp);\r\n            }\r\n            this.superiorTableDataSource.setData(\r\n              this.superiorTableDataSource.dataSrc.filter((element) => !DTOUtils.equalsBireTaskDTO(element, task))\r\n            );\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSuperiorTask', 'task && Task');\r\n          }\r\n        });\r\n        this.superiorTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  // 2. Top-down Tasks Structure table\r\n\r\n  public onRowSelected(node: TreeNode): void {\r\n    this.deactivePartialSelection(node);\r\n    this.selectedTopDownNodesStore.push(node);\r\n    this.selectedTopDownNodes = [...this.selectedTopDownNodesStore];\r\n    this.topDownTreeTable = [...this.topDownTreeTable];\r\n    this.topDownTreeTable[0].expanded = true;\r\n    this.selectedTopDownNodes = [...this.selectedTopDownNodes];\r\n  }\r\n\r\n  public onRowUnSelected(node: TreeNode): void {\r\n    this.deactivePartialSelection(node);\r\n    this.selectedTopDownNodesStore = this.selectedTopDownNodesStore.filter((value) => value !== node);\r\n    this.selectedTopDownNodes = [...this.selectedTopDownNodesStore];\r\n    this.topDownTreeTable = [...this.topDownTreeTable];\r\n    this.selectedTopDownNodes = [...this.selectedTopDownNodes];\r\n  }\r\n\r\n  private deactivePartialSelection(node: TreeNode): void {\r\n    if (node.parent != undefined) {\r\n      node.parent.partialSelected = false;\r\n      this.deactivePartialSelection(node.parent);\r\n    }\r\n  }\r\n\r\n  public createTopDownTask(): void {\r\n    this.currentTopDownTask = undefined;\r\n    this.newQualification = true;\r\n    this.isReadOnlyTopDownTasksDialog = false;\r\n    this.showTopDownTasksDialog = true;\r\n  }\r\n\r\n  public editTopDownTask(): void {\r\n    if (this.selectedTopDownNodes.length === 1) {\r\n      this.newQualification = false;\r\n      this.currentTopDownTask = { ...this.selectedTopDownNodes[0].data };\r\n      if (!!this.currentTopDownTask) {\r\n        const bTaskDTO = { ...this.currentTopDownTask.bireTaskDTO };\r\n        LabelValueUtils.labelToStringValue(bTaskDTO, 'taskTypeCode', this.taskTypes);\r\n        this.currentTopDownTask.bireTaskDTO = bTaskDTO;\r\n        this.currentTopDownTask.linkType = '3';\r\n        if (!ObjectUtils.isDefined(this.selectedTopDownNodes[0].parent)) {\r\n          this.currentTopDownTask.linkType = TaskFormComponent.TASK_LINK_CODE_SELF;\r\n        }\r\n        this.isReadOnlyTopDownTasksDialog = false;\r\n        this.showTopDownTasksDialog = true;\r\n      } else {\r\n        super.throwUnboundLocalError('editTopDownTask', 'this.currentTopDownTask');\r\n      }\r\n    }\r\n  }\r\n\r\n  public openTopDownTask(): void {\r\n    if (this.selectedTopDownNodes.length === 1) {\r\n      this.currentTopDownTask = { ...this.selectedTopDownNodes[0].data };\r\n      if (!!this.currentTopDownTask) {\r\n        const bTaskDTO = { ...this.currentTopDownTask.bireTaskDTO };\r\n        LabelValueUtils.labelToStringValue(bTaskDTO, 'taskTypeCode', this.taskTypes);\r\n        this.currentTopDownTask.bireTaskDTO = bTaskDTO;\r\n        this.currentTopDownTask.linkType = '3';\r\n        this.isReadOnlyTopDownTasksDialog = true;\r\n        this.showTopDownTasksDialog = true;\r\n      } else {\r\n        super.throwUnboundLocalError('openTopDownTask', 'this.currentTopDownTask');\r\n      }\r\n    }\r\n  }\r\n\r\n  public deleteTopDownTask(): void {\r\n    const partialMessageKey =\r\n      this.selectedTopDownNodes.length > 1 ? 'confirmDeleteSelectedTopDownTasks' : 'confirmDeleteSelectedTopDownTask';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        if (!!this.selectedTopDownNodes) {\r\n          const selectedNode: TreeNode = this.selectedTopDownNodes[0];\r\n          if (!!selectedNode.parent) {\r\n            const parentOfSelectedNode: TreeNode = selectedNode.parent;\r\n            let siblingsOfSelectedNode = parentOfSelectedNode.children;\r\n            const inAddedList = this.bireTaskLinkAddedList.some(\r\n              (task) => task.birTaskCode === this.selectedTopDownNodes[0].data.bireTaskDTO.taskCode\r\n            );\r\n            if (inAddedList) {\r\n              this.bireTaskLinkAddedList = this.bireTaskLinkAddedList.filter(\r\n                (task) => task.birTaskCode !== this.selectedTopDownNodes[0].data.bireTaskDTO.taskCode\r\n              );\r\n            }\r\n            siblingsOfSelectedNode =\r\n              siblingsOfSelectedNode &&\r\n              siblingsOfSelectedNode.filter(\r\n                (sibling) => sibling.data.bireTaskDTO.taskCode !== selectedNode.data.bireTaskDTO.taskCode\r\n              );\r\n            const taskTaskId: BireTaskTaskDTOId = {\r\n              birTaskCode: selectedNode.data.bireTaskDTO.taskCode,\r\n              birTaskVersion: selectedNode.data.bireTaskDTO.taskVersion,\r\n              taskCode: selectedNode.parent.data.bireTaskDTO.taskCode,\r\n              taskVersion: selectedNode.parent.data.bireTaskDTO.taskVersion\r\n            };\r\n\r\n            this.bireTaskLinkDeletedList.push(taskTaskId);\r\n\r\n            parentOfSelectedNode.children = siblingsOfSelectedNode;\r\n            selectedNode.parent = parentOfSelectedNode;\r\n            this.selectedTopDownNodes = [];\r\n            this.selectedTopDownNodesStore = [];\r\n            this.topDownTreeTable = [...this.topDownTreeTable];\r\n            this.topDownTreeTable[0].expanded = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Other links tab\r\n\r\n  public openOtherLinksTab(): void {\r\n    this.currentSubTabId = this.tabOtherLinksId;\r\n  }\r\n\r\n  // 1. Anterior table\r\n\r\n  public createAnterior(): void {\r\n    this.currentAnterior = undefined;\r\n    this.isReadOnlyAnteriorDialog = false;\r\n    this.showAnteriorTasksDialog = true;\r\n  }\r\n\r\n  public editAnterior(): void {\r\n    if (this.anteriorTaskTableDataSource.dataSelectionCount === 1) {\r\n      this.currentAnteriorIndex = this.anteriorTaskTableDataSource.dataSrc.findIndex((anterior) => {\r\n        return DTOUtils.equalsBireTaskDTO(anterior, this.anteriorTaskTableDataSource.dataSelection[0]);\r\n      });\r\n      const selectedAnterior: BireTaskDTO = { ...this.anteriorTaskTableDataSource.dataSelection[0] };\r\n      const inAnteriorTable = this.anteriorTable.filter(\r\n        (anterior) => anterior.bireTaskDTO.taskCode === selectedAnterior.taskCode\r\n      );\r\n      const linkedAnterior: LinkedTaskDTO = {\r\n        bireTaskDTO: selectedAnterior,\r\n        linkType: undefined,\r\n        sequenceNumber: inAnteriorTable[0].sequenceNumber\r\n      };\r\n\r\n      const anteriorTask = this.anteriorTable.filter((task) => {\r\n        if (!!task.bireTaskDTO) {\r\n          DTOUtils.equalsBireTaskDTO(task.bireTaskDTO, selectedAnterior);\r\n        }\r\n      });\r\n\r\n      if (!!anteriorTask && !!anteriorTask[0]) {\r\n        linkedAnterior.linkType = anteriorTask[0].linkType;\r\n        linkedAnterior.sequenceNumber = anteriorTask[0].sequenceNumber;\r\n      }\r\n\r\n      this.currentAnterior = { ...linkedAnterior };\r\n      const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n        (type) =>\r\n          !!this.currentAnterior &&\r\n          !!this.currentAnterior.bireTaskDTO &&\r\n          type.label === this.currentAnterior.bireTaskDTO.taskTypeCode\r\n      );\r\n      if (taskType[0]) {\r\n        this.currentAnterior.bireTaskDTO.taskTypeCode = taskType[0].value;\r\n      }\r\n\r\n      const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n        (group) =>\r\n          !!this.currentAnterior &&\r\n          !!this.currentAnterior.bireTaskDTO &&\r\n          group.label === this.currentAnterior.bireTaskDTO.groupCode\r\n      );\r\n      if (taskGroup[0]) {\r\n        this.currentAnterior.bireTaskDTO.groupCode = taskGroup[0].value;\r\n      }\r\n      this.isReadOnlyAnteriorDialog = false;\r\n      this.showAnteriorTasksDialog = true;\r\n    }\r\n  }\r\n\r\n  public openAnterior(): void {\r\n    if (this.anteriorTaskTableDataSource.dataSelectionCount === 1) {\r\n      const selectedAnterior: BireTaskDTO = { ...this.anteriorTaskTableDataSource.dataSelection[0] };\r\n      const inAnteriorTable = this.anteriorTable.filter(\r\n        (anterior) => anterior.bireTaskDTO.taskCode === selectedAnterior.taskCode\r\n      );\r\n      const linkedAnterior: LinkedTaskDTO = {\r\n        bireTaskDTO: selectedAnterior,\r\n        linkType: undefined,\r\n        sequenceNumber: inAnteriorTable[0].sequenceNumber\r\n      };\r\n\r\n      const anteriorTask = this.anteriorTable.filter((task) => {\r\n        if (!!task.bireTaskDTO) {\r\n          DTOUtils.equalsBireTaskDTO(task.bireTaskDTO, selectedAnterior);\r\n        }\r\n      });\r\n\r\n      if (!!anteriorTask && !!anteriorTask[0]) {\r\n        linkedAnterior.linkType = anteriorTask[0].linkType;\r\n        linkedAnterior.sequenceNumber = anteriorTask[0].sequenceNumber;\r\n      }\r\n\r\n      this.currentAnterior = { ...linkedAnterior };\r\n      const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n        (type) =>\r\n          !!this.currentAnterior &&\r\n          !!this.currentAnterior.bireTaskDTO &&\r\n          type.label === this.currentAnterior.bireTaskDTO.taskTypeCode\r\n      );\r\n      if (taskType[0]) {\r\n        this.currentAnterior.bireTaskDTO.taskTypeCode = taskType[0].value;\r\n      }\r\n\r\n      const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n        (group) =>\r\n          !!this.currentAnterior &&\r\n          !!this.currentAnterior.bireTaskDTO &&\r\n          group.label === this.currentAnterior.bireTaskDTO.groupCode\r\n      );\r\n      if (taskGroup[0]) {\r\n        this.currentAnterior.bireTaskDTO.groupCode = taskGroup[0].value;\r\n      }\r\n      this.isReadOnlyAnteriorDialog = true;\r\n      this.showAnteriorTasksDialog = true;\r\n    }\r\n  }\r\n\r\n  private getLinkTaskByTask(\r\n    linkedTaskTable: LinkedTaskDTO[],\r\n    selectedAnterior: BireTaskDTO\r\n  ): LinkedTaskDTO | undefined {\r\n    return linkedTaskTable.find(\r\n      (task) => !!task.bireTaskDTO && DTOUtils.equalsBireTaskDTO(task.bireTaskDTO, selectedAnterior)\r\n    );\r\n  }\r\n\r\n  public deleteAnterior(): void {\r\n    const partialMessageKey =\r\n      this.selectedAnterior.length > 1 ? 'confirmDeleteSelectedAnteriors' : 'confirmDeleteSelectedAnterior';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.anteriorTaskTableDataSource.dataSelection.forEach((task) => {\r\n          if (\r\n            !!task &&\r\n            !!this.task &&\r\n            !!task.taskCode &&\r\n            !!task.taskVersion &&\r\n            !!this.task.taskCode &&\r\n            !!this.task.taskVersion\r\n          ) {\r\n            let temp: BireTaskTaskDTOId = {\r\n              birTaskCode: task.taskCode,\r\n              birTaskVersion: task.taskVersion,\r\n              taskCode: this.task.taskCode,\r\n              taskVersion: this.task.taskVersion\r\n            };\r\n            const anteriorTask = this.getLinkTaskByTask(this.anteriorTable, task);\r\n            if (anteriorTask && anteriorTask.linkedTaskMain) {\r\n              temp = {\r\n                birTaskCode: this.task.taskCode,\r\n                birTaskVersion: this.task.taskVersion,\r\n                taskCode: task.taskCode,\r\n                taskVersion: task.taskVersion\r\n              };\r\n            }\r\n\r\n            const tasksAddedWithoutSelection = this.bireTaskLinkAddedList.filter((taskAdded) => {\r\n              return taskAdded.birTaskCode === task.taskCode && taskAdded.birTaskVersion === task.taskVersion;\r\n            });\r\n            if (this.bireTaskLinkAddedList.length !== tasksAddedWithoutSelection.length) {\r\n              this.bireTaskLinkAddedList = tasksAddedWithoutSelection;\r\n            } else {\r\n              this.bireTaskLinkDeletedList.push(temp);\r\n            }\r\n            this.anteriorTaskTableDataSource.setData(\r\n              this.anteriorTaskTableDataSource.dataSrc.filter((element) => !DTOUtils.equalsBireTaskDTO(element, task))\r\n            );\r\n          } else {\r\n            super.throwUnboundLocalError('deleteAnterior', 'task && this.task');\r\n          }\r\n        });\r\n        this.anteriorTaskTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  // 2. Posterior table\r\n\r\n  public createPosterior(): void {\r\n    this.currentPosterior = undefined;\r\n    this.isReadOnlyPosteriorDialog = false;\r\n    this.showPosteriorDialog = true;\r\n  }\r\n\r\n  public editPosterior(): void {\r\n    if (this.posteriorTaskTableDataSource.dataSelectionCount === 1) {\r\n      this.currentPosteriorIndex = this.posteriorTaskTableDataSource.dataSrc.findIndex((posterior) => {\r\n        return DTOUtils.equalsBireTaskDTO(posterior, this.posteriorTaskTableDataSource.dataSelection[0]);\r\n      });\r\n      const selectedPosterior: BireTaskDTO = { ...this.posteriorTaskTableDataSource.dataSelection[0] };\r\n      const inPosteriorTable = this.posteriorTable.filter(\r\n        (posterior) => posterior.bireTaskDTO.taskCode === selectedPosterior.taskCode\r\n      );\r\n      const linkedPosterior: LinkedTaskDTO = {\r\n        bireTaskDTO: selectedPosterior,\r\n        linkType: undefined,\r\n        sequenceNumber: inPosteriorTable[0].sequenceNumber\r\n      };\r\n\r\n      const posteriorTask = this.posteriorTable.filter((task) => {\r\n        if (!!task.bireTaskDTO) {\r\n          DTOUtils.equalsBireTaskDTO(task.bireTaskDTO, selectedPosterior);\r\n        }\r\n      });\r\n\r\n      if (!!posteriorTask && !!posteriorTask[0]) {\r\n        linkedPosterior.linkType = posteriorTask[0].linkType;\r\n        linkedPosterior.sequenceNumber = posteriorTask[0].sequenceNumber;\r\n      }\r\n\r\n      this.currentPosterior = { ...linkedPosterior };\r\n\r\n      const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n        (type) =>\r\n          !!this.currentPosterior &&\r\n          !!this.currentPosterior.bireTaskDTO &&\r\n          type.label === this.currentPosterior.bireTaskDTO.taskTypeCode\r\n      );\r\n      if (taskType[0]) {\r\n        this.currentPosterior.bireTaskDTO.taskTypeCode = taskType[0].value;\r\n      }\r\n\r\n      const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n        (group) =>\r\n          !!this.currentPosterior &&\r\n          !!this.currentPosterior.bireTaskDTO &&\r\n          group.label === this.currentPosterior.bireTaskDTO.groupCode\r\n      );\r\n      if (taskGroup[0]) {\r\n        this.currentPosterior.bireTaskDTO.groupCode = taskGroup[0].value;\r\n      }\r\n      this.isReadOnlyPosteriorDialog = false;\r\n      this.showPosteriorDialog = true;\r\n      this.posteriorTaskTableDataSource.setData(this.posteriorTaskTableDataSource.dataSrc);\r\n    }\r\n  }\r\n\r\n  public openPosterior(): void {\r\n    if (this.posteriorTaskTableDataSource.dataSelectionCount === 1) {\r\n      const selectedPosterior: BireTaskDTO = { ...this.posteriorTaskTableDataSource.dataSelection[0] };\r\n      const inPosteriorTable = this.posteriorTable.filter(\r\n        (posterior) => posterior.bireTaskDTO.taskCode === selectedPosterior.taskCode\r\n      );\r\n      const linkedPosterior: LinkedTaskDTO = {\r\n        bireTaskDTO: selectedPosterior,\r\n        linkType: undefined,\r\n        sequenceNumber: inPosteriorTable[0].sequenceNumber\r\n      };\r\n\r\n      if (!!linkedPosterior && !!linkedPosterior[0]) {\r\n        linkedPosterior.linkType = linkedPosterior[0].linkType;\r\n        linkedPosterior.sequenceNumber = linkedPosterior[0].sequenceNumber;\r\n      }\r\n\r\n      this.currentPosterior = { ...linkedPosterior };\r\n      const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n        (type) =>\r\n          !!this.currentPosterior &&\r\n          !!this.currentPosterior.bireTaskDTO &&\r\n          type.label === this.currentPosterior.bireTaskDTO.taskTypeCode\r\n      );\r\n      if (taskType[0]) {\r\n        this.currentPosterior.bireTaskDTO.taskTypeCode = taskType[0].value;\r\n      }\r\n\r\n      const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n        (group) =>\r\n          !!this.currentPosterior &&\r\n          !!this.currentPosterior.bireTaskDTO &&\r\n          group.label === this.currentPosterior.bireTaskDTO.groupCode\r\n      );\r\n      if (taskGroup[0]) {\r\n        this.currentPosterior.bireTaskDTO.groupCode = taskGroup[0].value;\r\n      }\r\n\r\n      this.isReadOnlyPosteriorDialog = true;\r\n      this.showPosteriorDialog = true;\r\n    }\r\n  }\r\n\r\n  public deletePosterior(): void {\r\n    const partialMessageKey =\r\n      this.selectedPosterior.length > 1 ? 'confirmDeleteSelectedPosteriors' : 'confirmDeleteSelectedPosterior';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.posteriorTaskTableDataSource.dataSelection.forEach((task) => {\r\n          if (\r\n            !!task &&\r\n            !!this.task &&\r\n            !!task.taskCode &&\r\n            !!task.taskVersion &&\r\n            !!this.task.taskCode &&\r\n            !!this.task.taskVersion\r\n          ) {\r\n            let temp: BireTaskTaskDTOId = {\r\n              birTaskCode: task.taskCode,\r\n              birTaskVersion: task.taskVersion,\r\n              taskCode: this.task.taskCode,\r\n              taskVersion: this.task.taskVersion\r\n            };\r\n            const posteriorTask = this.getLinkTaskByTask(this.posteriorTable, task);\r\n            if (posteriorTask && posteriorTask.linkedTaskMain) {\r\n              temp = {\r\n                birTaskCode: this.task.taskCode,\r\n                birTaskVersion: this.task.taskVersion,\r\n                taskCode: task.taskCode,\r\n                taskVersion: task.taskVersion\r\n              };\r\n            }\r\n\r\n            const tasksAddedWithoutSelection = this.bireTaskLinkAddedList.filter((taskAdded) => {\r\n              return taskAdded.birTaskCode === task.taskCode && taskAdded.birTaskVersion === task.taskVersion;\r\n            });\r\n            if (this.bireTaskLinkAddedList.length !== tasksAddedWithoutSelection.length) {\r\n              this.bireTaskLinkAddedList = tasksAddedWithoutSelection;\r\n            } else {\r\n              this.bireTaskLinkDeletedList.push(temp);\r\n            }\r\n            this.posteriorTaskTableDataSource.setData(\r\n              this.posteriorTaskTableDataSource.dataSrc.filter((element) => !DTOUtils.equalsBireTaskDTO(element, task))\r\n            );\r\n          } else {\r\n            super.throwUnboundLocalError('deletePosterior', 'task && this.task');\r\n          }\r\n        });\r\n        this.posteriorTaskTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  // 3. Linked Tasks table\r\n\r\n  public createLinkedTasks(): void {\r\n    this.currentLinkedTask = undefined;\r\n    this.isReadOnlyLinkedTasksDialog = false;\r\n    this.showLinkedTasksDialog = true;\r\n  }\r\n\r\n  public editLinkedTasks(): void {\r\n    if (this.linkedTaskTableDataSource.dataSelectionCount === 1) {\r\n      this.currentLinkedTaskIndex = this.linkedTaskTableDataSource.dataSrc.findIndex((linked) => {\r\n        return DTOUtils.equalsBireTaskDTO(linked, this.linkedTaskTableDataSource.dataSelection[0]);\r\n      });\r\n      const selectedLinked: LinkedTasksTableDTO = { ...this.linkedTaskTableDataSource.dataSelection[0] };\r\n      const inLinkedTable = this.linkedTasksTable.filter(\r\n        (linked) => linked.bireTaskDTO.taskCode === selectedLinked.taskCode\r\n      );\r\n      const linkedLinked: LinkedTaskDTO = {\r\n        bireTaskDTO: {\r\n          taskCode: selectedLinked.taskCode,\r\n          taskVersion: selectedLinked.taskVersion,\r\n          taskDesignation: selectedLinked.taskDesignation,\r\n          groupCode: selectedLinked.taskGroup,\r\n          taskTypeCode: selectedLinked.taskType\r\n        },\r\n        linkType: selectedLinked.linkType,\r\n        sequenceNumber: inLinkedTable[0].sequenceNumber\r\n      };\r\n\r\n      const linkedTask = this.linkedTasksTable.filter((task) => {\r\n        if (!!task.bireTaskDTO) {\r\n          DTOUtils.equalsBireTaskDTO(task.bireTaskDTO, selectedLinked);\r\n        }\r\n      });\r\n\r\n      if (!!linkedTask && !!linkedTask[0]) {\r\n        linkedLinked.sequenceNumber = linkedTask[0].sequenceNumber;\r\n      }\r\n\r\n      this.currentLinkedTask = { ...linkedLinked };\r\n\r\n      if (this.currentLinkedTask.linkType) {\r\n        const linkType: LabelValue<string>[] = this.associatedLinkTypes.filter(\r\n          (type) => !!this.currentLinkedTask && type.label === this.currentLinkedTask.linkType\r\n        );\r\n        if (linkType[0]) {\r\n          this.currentLinkedTask.linkType = linkType[0].value;\r\n        }\r\n      }\r\n\r\n      if (!!this.currentLinkedTask.bireTaskDTO && this.currentLinkedTask.bireTaskDTO.taskTypeCode) {\r\n        const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n          (type) =>\r\n            !!this.currentLinkedTask &&\r\n            !!this.currentLinkedTask.bireTaskDTO &&\r\n            type.label === this.currentLinkedTask.bireTaskDTO.taskTypeCode\r\n        );\r\n        if (taskType[0]) {\r\n          this.currentLinkedTask.bireTaskDTO.taskTypeCode = taskType[0].value;\r\n        }\r\n      } else {\r\n        super.throwUnboundLocalError('editLinkedTasks', 'this.currentLinkedTask && this.currentLinkedTask.bireTaskDTO');\r\n      }\r\n\r\n      if (!!this.currentLinkedTask.bireTaskDTO && this.currentLinkedTask.bireTaskDTO.groupCode) {\r\n        const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n          (group) =>\r\n            !!this.currentLinkedTask &&\r\n            !!this.currentLinkedTask.bireTaskDTO &&\r\n            group.label === this.currentLinkedTask.bireTaskDTO.groupCode\r\n        );\r\n        if (taskGroup[0]) {\r\n          this.currentLinkedTask.bireTaskDTO.groupCode = taskGroup[0].value;\r\n        }\r\n      }\r\n      this.isReadOnlyLinkedTasksDialog = false;\r\n      this.showLinkedTasksDialog = true;\r\n      this.linkedTaskTableDataSource.setData(this.linkedTaskTableDataSource.dataSrc);\r\n    }\r\n  }\r\n\r\n  public openLinkedTasks(): void {\r\n    if (this.linkedTaskTableDataSource.dataSelectionCount === 1) {\r\n      const selectedLinked: LinkedTasksTableDTO = { ...this.linkedTaskTableDataSource.dataSelection[0] };\r\n      const inLinkedTable = this.linkedTasksTable.filter(\r\n        (linked) => linked.bireTaskDTO.taskCode === selectedLinked.taskCode\r\n      );\r\n      const linkedLinked: LinkedTaskDTO = {\r\n        bireTaskDTO: {\r\n          taskCode: selectedLinked.taskCode,\r\n          taskVersion: selectedLinked.taskVersion,\r\n          taskDesignation: selectedLinked.taskDesignation,\r\n          groupCode: selectedLinked.taskGroup,\r\n          taskTypeCode: selectedLinked.taskType\r\n        },\r\n        linkType: selectedLinked.linkType,\r\n        sequenceNumber: inLinkedTable[0].sequenceNumber\r\n      };\r\n\r\n      const linkedTask = this.linkedTasksTable.filter((task) => {\r\n        if (!!task.bireTaskDTO) {\r\n          DTOUtils.equalsBireTaskDTO(task.bireTaskDTO, selectedLinked);\r\n        }\r\n      });\r\n\r\n      if (!!linkedTask && !!linkedTask[0]) {\r\n        linkedLinked.sequenceNumber = linkedTask[0].sequenceNumber;\r\n      }\r\n\r\n      this.currentLinkedTask = { ...linkedLinked };\r\n\r\n      if (this.currentLinkedTask.linkType) {\r\n        const linkType: LabelValue<string>[] = this.associatedLinkTypes.filter(\r\n          (type) => !!this.currentLinkedTask && type.label === this.currentLinkedTask.linkType\r\n        );\r\n        if (linkType[0]) {\r\n          this.currentLinkedTask.linkType = linkType[0].value;\r\n        }\r\n      }\r\n\r\n      const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n        (type) =>\r\n          !!this.currentLinkedTask &&\r\n          !!this.currentLinkedTask.bireTaskDTO &&\r\n          type.label === this.currentLinkedTask.bireTaskDTO.taskTypeCode\r\n      );\r\n      if (taskType[0]) {\r\n        this.currentLinkedTask.bireTaskDTO.taskTypeCode = taskType[0].value;\r\n      }\r\n      const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n        (group) =>\r\n          !!this.currentLinkedTask &&\r\n          !!this.currentLinkedTask.bireTaskDTO &&\r\n          group.label === this.currentLinkedTask.bireTaskDTO.groupCode\r\n      );\r\n      if (taskGroup[0]) {\r\n        this.currentLinkedTask.bireTaskDTO.groupCode = taskGroup[0].value;\r\n      }\r\n      this.isReadOnlyLinkedTasksDialog = true;\r\n      this.showLinkedTasksDialog = true;\r\n    }\r\n  }\r\n\r\n  public deleteLinkedTasks(): void {\r\n    const partialMessageKey =\r\n      this.selectedLinkedTasks.length > 1 ? 'confirmDeleteSelectedLinkedTasks' : 'confirmDeleteSelectedLinkedTask';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.linkedTaskTableDataSource.dataSelection.forEach((task) => {\r\n          if (\r\n            !!task &&\r\n            !!this.task &&\r\n            !!task.taskCode &&\r\n            !!task.taskVersion &&\r\n            !!this.task.taskCode &&\r\n            !!this.task.taskVersion\r\n          ) {\r\n            const temp: BireTaskTaskDTOId = {\r\n              taskCode: this.task.taskCode,\r\n              taskVersion: this.task.taskVersion,\r\n              birTaskCode: task.taskCode,\r\n              birTaskVersion: task.taskVersion\r\n            };\r\n            const tasksAddedWithoutSelection = this.bireTaskLinkAddedList.filter((taskAdded) => {\r\n              return taskAdded.birTaskCode === task.taskCode && taskAdded.birTaskVersion === task.taskVersion;\r\n            });\r\n            if (this.bireTaskLinkAddedList.length !== tasksAddedWithoutSelection.length) {\r\n              this.bireTaskLinkAddedList = tasksAddedWithoutSelection;\r\n            } else {\r\n              this.bireTaskLinkDeletedList.push(temp);\r\n            }\r\n            this.linkedTaskTableDataSource.setData(\r\n              this.linkedTaskTableDataSource.dataSrc.filter((element) => !DTOUtils.equalsBireTaskDTO(element, task))\r\n            );\r\n          } else {\r\n            super.throwUnboundLocalError('deleteLinkedTasks', 'task && this.task');\r\n          }\r\n        });\r\n        this.linkedTaskTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Impacts tab\r\n   *************************************************************************/\r\n\r\n  public openImpactsTab(): void {\r\n    this.currentTabId = this.tabImpactsId;\r\n  }\r\n\r\n  // 1. Evolutions table\r\n\r\n  public createEvolution(): void {\r\n    this.currentEvolution = undefined;\r\n    this.isReadOnlyEvolutionsDialog = false;\r\n    this.showEvolutionsDialog = true;\r\n  }\r\n\r\n  public editEvolution(): void {\r\n    if (this.evolutionsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentEvolutionIndex = this.evolutionsTableDataSource.dataSrc.findIndex((evolution) => {\r\n        return DTOUtils.equalsBireTaskEvolutionDTO(evolution, this.evolutionsTableDataSource.dataSelection[0]);\r\n      });\r\n\r\n      this.currentEvolution = { ...this.evolutionsTableDataSource.dataSelection[0] };\r\n      this.isReadOnlyEvolutionsDialog = false;\r\n      this.showEvolutionsDialog = true;\r\n    }\r\n  }\r\n\r\n  public openEvolution(): void {\r\n    if (this.evolutionsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentEvolution = { ...this.evolutionsTableDataSource.dataSelection[0] };\r\n      const evolutionLinkType: LabelValue<string>[] = this.evolutionLinkTypes.filter(\r\n        (type) => !!this.currentEvolution && type.label === this.currentEvolution.taskEvolutionTypeCode\r\n      );\r\n      if (evolutionLinkType) {\r\n        this.currentEvolution.taskEvolutionTypeCode = evolutionLinkType[0].value;\r\n      }\r\n      this.currentEvolutionIndex = undefined;\r\n      this.isReadOnlyEvolutionsDialog = true;\r\n      this.showEvolutionsDialog = true;\r\n    }\r\n  }\r\n\r\n  public openEvolutionForm(evolution: BireTaskEvolutionDTO): void {\r\n    const labelKey = 'transaction.EvolutionFormComponent';\r\n    const evolutionId: BireEvolutionDTOId = {\r\n      evolutionNumber: evolution.evolutionNumber,\r\n      evolutionRevisionNumber: evolution.evolutionRevisionNumber\r\n    };\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: 'EvolutionFormComponent',\r\n      objectId: this.serializationService.serialize(evolutionId),\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public deleteEvolution(): void {\r\n    const partialMessageKey =\r\n      this.evolutionsTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedEvolutions'\r\n        : 'confirmDeleteSelectedEvolution';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.evolutionsTableDataSource.dataSelection.forEach((selectedEvolution) => {\r\n          selectedEvolution._obj.taskCode = this.task.taskCode;\r\n          selectedEvolution._obj.taskVersion = this.task.taskVersion;\r\n          if (!!this.evolutionAdded) {\r\n            const evolutionAddedWithoutSelection = this.evolutionAdded.filter((evolution) => {\r\n              return !DTOUtils.equalsBireTaskEvolutionDTO(selectedEvolution, evolution);\r\n            });\r\n            if (this.evolutionAdded.length !== evolutionAddedWithoutSelection.length) {\r\n              this.evolutionAdded = evolutionAddedWithoutSelection;\r\n              if (\r\n                !!selectedEvolution &&\r\n                !!selectedEvolution.evolutionRevisionNumber &&\r\n                !!selectedEvolution._obj.taskCode &&\r\n                !!selectedEvolution._obj.evolutionNumber &&\r\n                !!selectedEvolution._obj.taskVersion\r\n              ) {\r\n                const evolutionId: BireTaskEvolutionDTOId = {\r\n                  evolutionRevisionNumber: selectedEvolution.evolutionRevisionNumber,\r\n                  taskCode: selectedEvolution._obj.taskCode,\r\n                  evolutionNumber: selectedEvolution._obj.evolutionNumber,\r\n                  taskVersion: selectedEvolution._obj.taskVersion\r\n                };\r\n                this.evolutionRemoved.push(evolutionId);\r\n              }\r\n            } else {\r\n              const isRemoved = this.evolutionAdded.some((evolution) => {\r\n                return DTOUtils.equalsBireTaskEvolutionDTO(selectedEvolution, evolution);\r\n              });\r\n              if (\r\n                !isRemoved &&\r\n                !!selectedEvolution &&\r\n                !!selectedEvolution.evolutionRevisionNumber &&\r\n                !!selectedEvolution._obj.taskCode &&\r\n                !!selectedEvolution._obj.evolutionNumber &&\r\n                !!selectedEvolution._obj.taskVersion\r\n              ) {\r\n                const evolutionId: BireTaskEvolutionDTOId = {\r\n                  evolutionRevisionNumber: selectedEvolution.evolutionRevisionNumber,\r\n                  taskCode: selectedEvolution._obj.taskCode,\r\n                  evolutionNumber: selectedEvolution._obj.evolutionNumber,\r\n                  taskVersion: selectedEvolution._obj.taskVersion\r\n                };\r\n                this.evolutionRemoved.push(evolutionId);\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        this.evolutionsTableDataSource.setData(\r\n          this.evolutionsTableDataSource.dataSrc.filter((evolution) => {\r\n            return !this.evolutionsTableDataSource.dataSelection.some((selectedEvolution) => {\r\n              return DTOUtils.equalsBireTaskEvolutionDTO(evolution, selectedEvolution);\r\n            });\r\n          })\r\n        );\r\n        this.fillDesignationInEvolutionTable();\r\n\r\n        this.evolutionsTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  // 2. Maintained items table\r\n\r\n  public createMaintainedItem(): void {\r\n    this.currentMaintainedItem = undefined;\r\n    this.isReadOnlyMaintainedItemsDialog = false;\r\n    this.showMaintainedItemsDialog = true;\r\n  }\r\n\r\n  public editMaintainedItem(): void {\r\n    if (this.maintainedItemsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentMaintainedItemIndex = this.maintainedItemsTableDataSource.dataSrc.findIndex((item) => {\r\n        return DTOUtils.equalsBireTaskItemDTO(item, this.maintainedItemsTableDataSource.dataSelection[0]);\r\n      });\r\n\r\n      this.currentMaintainedItem = this.maintainedItemsTableDataSource.dataSelection[0];\r\n      this.isReadOnlyMaintainedItemsDialog = false;\r\n      this.showMaintainedItemsDialog = true;\r\n    }\r\n  }\r\n\r\n  public openMaintainedItem(): void {\r\n    if (this.maintainedItemsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentMaintainedItem = { ...this.maintainedItemsTableDataSource.dataSelection[0] };\r\n      const structureType: LabelValue<string>[] = this.structureType.filter(\r\n        (type) => !!this.currentMaintainedItem && type.label === this.currentMaintainedItem.structureType\r\n      );\r\n      const taskItemTypeCode: LabelValue<string>[] = this.itemLinkTypes.filter(\r\n        (type) => !!this.currentMaintainedItem && type.label === this.currentMaintainedItem.taskItemTypeCode\r\n      );\r\n      if (structureType) {\r\n        this.currentMaintainedItem.structureType = structureType[0].value;\r\n      }\r\n      if (taskItemTypeCode) {\r\n        this.currentMaintainedItem.taskItemTypeCode = taskItemTypeCode[0].value;\r\n      }\r\n      this.currentMaintainedItemIndex = undefined;\r\n      this.isReadOnlyMaintainedItemsDialog = true;\r\n      this.showMaintainedItemsDialog = true;\r\n    }\r\n  }\r\n\r\n  public deleteMaintainedItem(): void {\r\n    const partialMessageKey =\r\n      this.maintainedItemsTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedMaintainedItems'\r\n        : 'confirmDeleteSelectedMaintainedItem';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.maintainedItemsTableDataSource.dataSelection.forEach((selectedItem) => {\r\n          const itemsAddedWithoutSelection = this.maintainedItemAdded.filter((item) => {\r\n            return !DTOUtils.equalsBireTaskItemDTO(selectedItem, item);\r\n          });\r\n          if (this.maintainedItemAdded.length !== itemsAddedWithoutSelection.length) {\r\n            this.maintainedItemAdded = itemsAddedWithoutSelection;\r\n          } else {\r\n            const isRemoved = this.maintainedItemAdded.some((item) => {\r\n              return DTOUtils.equalsBireTaskItemDTO(selectedItem, item);\r\n            });\r\n            if (!isRemoved) {\r\n              if (\r\n                !!this.task &&\r\n                !!this.task.taskCode &&\r\n                !!this.task.taskVersion &&\r\n                !!selectedItem &&\r\n                !!selectedItem._obj.subject &&\r\n                !!selectedItem._obj.versionNumber &&\r\n                !!selectedItem._obj.chapter &&\r\n                !!selectedItem._obj.structureType &&\r\n                !!selectedItem._obj.variantCode &&\r\n                !!selectedItem._obj.familyCode &&\r\n                !!selectedItem._obj.marks &&\r\n                !!selectedItem._obj.sheet &&\r\n                !!selectedItem._obj.section &&\r\n                !!selectedItem._obj.taskItemTypeCode\r\n              ) {\r\n                const itemId: BireTaskItemDTOId = {\r\n                  taskCode: this.task.taskCode,\r\n                  subject: selectedItem._obj.subject,\r\n                  versionNumber: selectedItem._obj.versionNumber,\r\n                  chapter: selectedItem._obj.chapter,\r\n                  structureType: selectedItem._obj.structureType,\r\n                  variantCode: selectedItem._obj.variantCode,\r\n                  familyCode: selectedItem._obj.familyCode,\r\n                  marks: selectedItem._obj.marks,\r\n                  taskVersion: this.task.taskVersion,\r\n                  sheet: selectedItem._obj.sheet,\r\n                  section: selectedItem._obj.section,\r\n                  taskItemTypeCode: selectedItem._obj.taskItemTypeCode\r\n                };\r\n                this.maintainedItemRemoved.push(itemId);\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        this.maintainedItemsTableDataSource.setData(\r\n          this.maintainedItemsTableDataSource.dataSrc.filter((maintainedItem) => {\r\n            return !this.maintainedItemsTableDataSource.dataSelection.some((selectedItem) => {\r\n              return DTOUtils.equalsBireTaskItemDTO(maintainedItem, selectedItem);\r\n            });\r\n          })\r\n        );\r\n\r\n        this.maintainedItemsTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Manuals tab\r\n   *************************************************************************/\r\n\r\n  public openManualsTab(): void {\r\n    this.currentTabId = this.tabManualsId;\r\n  }\r\n\r\n  // Maintenance program table\r\n  public openMaintenancePrograms(): void {\r\n    if (this.maintenanceProgramsTableDataSource.dataSelectionCount === 1) {\r\n      // TODO open maintenance\r\n    }\r\n  }\r\n\r\n  public openMaintenanceProgramsForm(maintenanceRow: GetMaintainanceProgramWithTaskDTO): void {\r\n    // TODO open clicked maintenance program row\r\n    const openMode: ComponentOpenMode = ComponentOpenMode.Read;\r\n    if (!!maintenanceRow && !!maintenanceRow.programCode) {\r\n      const birePlanDTOId: BireMaintenancePlanDTOId = {\r\n        planCode: maintenanceRow.programCode\r\n      };\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.ENG_MAINTENANCE_PROGRAM_FORM,\r\n        openMode,\r\n        objectId: this.serializationService.serialize(birePlanDTOId)\r\n      };\r\n      const labelKey = 'transaction.' + data.componentId;\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    } else {\r\n      super.throwUnboundLocalError('openMaintenanceProgramsForm', 'maintenanceRow');\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Prerequisites tab\r\n   *************************************************************************/\r\n\r\n  public openPrerequisitesTab(): void {\r\n    this.currentTabId = this.tabPrerequisitesId;\r\n  }\r\n\r\n  // 1. Qualifications tab\r\n\r\n  public createQualification(): void {\r\n    this.currentQualifications = undefined;\r\n    this.isReadOnlyQualificationsDialog = false;\r\n    this.showQualificationsDialog = true;\r\n  }\r\n\r\n  public editQualification(): void {\r\n    if (this.qualificationsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentQualificationsIndex = this.qualificationsTableDataSource.dataSrc.findIndex((qualification) => {\r\n        return DTOUtils.equalsBireQualificationDTO(qualification, this.qualificationsTableDataSource.dataSelection[0]);\r\n      });\r\n      this.currentQualifications = this.qualificationsTableDataSource.dataSelection[0];\r\n      this.isReadOnlyQualificationsDialog = false;\r\n      this.showQualificationsDialog = true;\r\n    }\r\n  }\r\n\r\n  public openQualification(): void {\r\n    if (this.qualificationsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentQualifications = this.qualificationsTableDataSource.dataSelection[0];\r\n      this.currentQualificationsIndex = undefined;\r\n      this.isReadOnlyQualificationsDialog = true;\r\n      this.showQualificationsDialog = true;\r\n    }\r\n  }\r\n\r\n  public deleteQualification(): void {\r\n    const partialMessageKey =\r\n      this.qualificationsTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedQualifications'\r\n        : 'confirmDeleteSelectedQualification';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.qualificationsTableDataSource.dataSelection.forEach((selectedQualification) => {\r\n          if (\r\n            !!this.task &&\r\n            !!this.task.taskCode &&\r\n            !!this.task.taskVersion &&\r\n            !!selectedQualification &&\r\n            !!selectedQualification.qualificationCode\r\n          ) {\r\n            const qualificationId: BireQualifTaskDTOId = {\r\n              taskCode: this.task.taskCode,\r\n              taskVersion: this.task.taskVersion,\r\n              qualificationCode: selectedQualification.qualificationCode\r\n            };\r\n            const qualificationsAddedWithoutSelection = this.qualificationAdded.filter((addedQualification) => {\r\n              return !DTOUtils.equalsBireQualificationDTO(selectedQualification, addedQualification);\r\n            });\r\n            if (this.qualificationAdded.length !== qualificationsAddedWithoutSelection.length) {\r\n              this.qualificationAdded = qualificationsAddedWithoutSelection;\r\n              this.qualificationRemoved.push(qualificationId);\r\n            } else {\r\n              const isRemoved = this.qualificationAdded.some((addedQualificaiton) => {\r\n                return DTOUtils.equalsBireQualificationDTO(selectedQualification, addedQualificaiton);\r\n              });\r\n              if (!isRemoved) {\r\n                this.qualificationRemoved.push(qualificationId);\r\n              }\r\n            }\r\n          } else {\r\n            super.throwUnboundLocalError('deleteQualification', 'selectedQualification');\r\n          }\r\n        });\r\n\r\n        this.qualificationsTableDataSource.setData(\r\n          this.qualificationsTableDataSource.dataSrc.filter((qualification) => {\r\n            return !this.qualificationsTableDataSource.dataSelection.some((selectedQualification) => {\r\n              return DTOUtils.equalsBireQualificationDTO(qualification, selectedQualification);\r\n            });\r\n          })\r\n        );\r\n        this.qualificationsTableDataSource.setData(this.qualificationsTableDataSource.dataSrc);\r\n        this.qualificationsTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  // 2. TILs tab\r\n\r\n  public createTil(): void {\r\n    this.currentTil = undefined;\r\n    this.isReadOnlyTilDialog = false;\r\n    this.showTilDialog = true;\r\n    this.tilTableDataSource.setData(this.tilTableDataSource.dataSrc);\r\n  }\r\n\r\n  public editTil(): void {\r\n    if (this.tilTableDataSource.dataSelectionCount === 1) {\r\n      this.currentTilIndex = this.tilTableDataSource.dataSrc.findIndex((til) => {\r\n        return DTOUtils.equalsBireTilTaskDTO(til, this.tilTableDataSource.dataSelection[0]);\r\n      });\r\n      this.currentTil = this.tilTableDataSource.dataSelection[0];\r\n      this.isReadOnlyTilDialog = false;\r\n      this.showTilDialog = true;\r\n    }\r\n  }\r\n\r\n  public openTil(): void {\r\n    if (this.tilTableDataSource.dataSelectionCount === 1) {\r\n      this.currentTil = { ...this.tilTableDataSource.dataSelection[0] };\r\n      this.currentTilIndex = undefined;\r\n      this.isReadOnlyTilDialog = true;\r\n      this.showTilDialog = true;\r\n    }\r\n  }\r\n\r\n  private loadTechnicalLevels(): void {\r\n    this.taskFormService.findAllBireTils().subscribe((results: BireTilDTO[]) => {\r\n      results.forEach((result) => {\r\n        if (!!result && !!result.tilName && !!result.technicalLevel && !!result.tilDescription) {\r\n          this.tilName.push(result.tilName);\r\n\r\n          this.technicalLevel.push(result.technicalLevel.toString());\r\n\r\n          this.tilDescription.push(result.tilDescription);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public deleteTil(): void {\r\n    const partialMessageKey =\r\n      this.tilTableDataSource.dataSelectionCount > 1 ? 'confirmDeleteSelectedTils' : 'confirmDeleteSelectedTil';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.tilTableDataSource.dataSelection.forEach((tilSelected) => {\r\n          const tillAddedWithoutSelection = this.tilAdded.filter((addedTil) => {\r\n            return !DTOUtils.equalsBireTilTaskDTO(tilSelected, addedTil);\r\n          });\r\n          if (this.tilAdded.length !== tillAddedWithoutSelection.length) {\r\n            this.tilAdded = tillAddedWithoutSelection;\r\n            if (\r\n              !!this.task &&\r\n              !!this.task.taskCode &&\r\n              !!this.task.taskVersion &&\r\n              !!tilSelected &&\r\n              tilSelected.technicalLevel !== null &&\r\n              tilSelected.technicalLevel !== undefined\r\n            ) {\r\n              const tilId: BireTilTaskDTOId = {\r\n                taskCode: this.task.taskCode,\r\n                taskVersion: this.task.taskVersion,\r\n                technicalLevel: tilSelected.technicalLevel\r\n              };\r\n              this.tilRemoved.push(tilId);\r\n            }\r\n          } else {\r\n            const isRemoved = this.tilAdded.some((addedTil) => {\r\n              return DTOUtils.equalsBireTilTaskDTO(tilSelected, addedTil);\r\n            });\r\n            if (!isRemoved) {\r\n              if (\r\n                !!this.task &&\r\n                !!this.task.taskCode &&\r\n                !!this.task.taskVersion &&\r\n                !!tilSelected &&\r\n                tilSelected.technicalLevel !== null &&\r\n                tilSelected.technicalLevel !== undefined\r\n              ) {\r\n                const tilId: BireTilTaskDTOId = {\r\n                  taskCode: this.task.taskCode,\r\n                  taskVersion: this.task.taskVersion,\r\n                  technicalLevel: tilSelected.technicalLevel\r\n                };\r\n                this.tilRemoved.push(tilId);\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        this.tilTableDataSource.setData(\r\n          this.tilTableDataSource.dataSrc.filter((til) => {\r\n            return !this.tilTableDataSource.dataSelection.some((tilSelected) => {\r\n              return DTOUtils.equalsBireTilTaskDTO(til, tilSelected);\r\n            });\r\n          })\r\n        );\r\n        this.tilTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Documents tab\r\n   *************************************************************************/\r\n\r\n  public openDocumentsTab(): void {\r\n    this.currentTabId = this.tabDocumentsId;\r\n  }\r\n\r\n  public deleteDocuments(): void {\r\n    const partialMessageKey =\r\n      this.documentsTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedDocuments'\r\n        : 'confirmDeleteSelectedDocument';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.documentsTableDataSource.dataSelection.forEach((selectedDocument) => {\r\n          const documentsAddedWithoutSelection = this.documentsAdded.filter((documentAdded) => {\r\n            return !DTOUtils.equalsBireDocumentDTO(selectedDocument, documentAdded);\r\n          });\r\n          // list of added objects contains the selection\r\n          if (this.documentsAdded.length !== documentsAddedWithoutSelection.length) {\r\n            // Remove selection from added objects\r\n            this.documentsAdded = documentsAddedWithoutSelection;\r\n          } else {\r\n            const isRemoved = this.documentsAdded.some((documentAdded) => {\r\n              return DTOUtils.equalsBireDocumentDTO(selectedDocument, documentAdded);\r\n            });\r\n            if (!isRemoved && !!selectedDocument && !!selectedDocument.docCode) {\r\n              const documentId: BireDocumentDTOId = { docCode: selectedDocument.docCode };\r\n              this.documentsRemoved.push(documentId);\r\n            }\r\n          }\r\n        });\r\n\r\n        this.documentsTableDataSource.setData(\r\n          this.documentsTableDataSource.dataSrc.filter((document) => {\r\n            return !this.documentsTableDataSource.dataSelection.some((selectedDocument) => {\r\n              return DTOUtils.equalsBireDocumentDTO(document, selectedDocument);\r\n            });\r\n          })\r\n        );\r\n\r\n        this.documentsTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  private getCustomDocumentRow(newDocument: BireDocumentDTO): DocumentRow {\r\n    return {\r\n      _obj: newDocument,\r\n      docCode: newDocument.docCode,\r\n      docExtension: this.showDocExtension(newDocument),\r\n      docCategory: newDocument.docCategory,\r\n      docName: newDocument.docName,\r\n      docPublicationDate: this.dateService.dateToString(newDocument.docPublicationDate),\r\n      docSize: this.showDocSize(newDocument),\r\n      docSource: newDocument.docSource\r\n    };\r\n  }\r\n\r\n  public openUrl(url: string): void {\r\n    UrlUtils.openUrl(url);\r\n  }\r\n\r\n  public validateUrl(url: string): boolean {\r\n    return UrlUtils.validateUrl(url);\r\n  }\r\n\r\n  public addDocument(): void {\r\n    this.currentDocumentIndex = -1;\r\n    this.currentDocument = undefined;\r\n    this.isReadOnlyDocumentDialog = false;\r\n    this.showAddDocumentDialog = true;\r\n    this.documentsTableDataSource.setData(this.documentsTableDataSource.dataSrc);\r\n  }\r\n\r\n  public editDocument(): void {\r\n    if (this.documentsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocumentIndex = this.documentsTableDataSource.dataSrc.findIndex((document) => {\r\n        return DTOUtils.equalsBireDocumentDTO(document, this.documentsTableDataSource.dataSelection[0]);\r\n      });\r\n      this.currentDocument = { ...this.documentsTableDataSource.dataSelection[0] };\r\n      LabelValueUtils.labelToStringValue(this.currentDocument, 'docCategory', this.documentCategories);\r\n      this.isReadOnlyDocumentDialog = false;\r\n      this.showDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public openDocument(): void {\r\n    if (this.documentsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocument = { ...this.documentsTableDataSource.dataSelection[0] };\r\n      LabelValueUtils.labelToStringValue(this.currentDocument, 'docCategory', this.documentCategories);\r\n      this.currentDocumentIndex = undefined;\r\n      this.isReadOnlyDocumentDialog = true;\r\n      this.showDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public showDocExtension(document: BireDocumentDTO): string {\r\n    return FileUtils.getExtension(document.docName).toUpperCase();\r\n  }\r\n\r\n  public showDocSize(document: BireDocumentDTO): string {\r\n    return document.docFile ? FileUtils.getFormattedSize(document.docFile.length) : '';\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Attributes tab\r\n   *************************************************************************/\r\n\r\n  public openAttributesTab(): void {\r\n    this.currentTabId = this.tabAttributesId;\r\n  }\r\n\r\n  public getBireAttributesForTask(): void {\r\n    this.taskFormService.findBireAttributesByCategory(AWPropertiesConstants.MCH_ATTRIBUTE_CATEGORY_ALL_KEY).subscribe(\r\n      (results) => {\r\n        this.bireAttributesForTask.push(...results);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnFindAttributesByCategory'));\r\n      }\r\n    );\r\n    this.taskFormService.findBireAttributesByCategory(AWPropertiesConstants.MCH_ATTRIBUTE_CATEGORY_TASK_KEY).subscribe(\r\n      (results) => {\r\n        this.bireAttributesForTask.push(...results);\r\n        setTimeout(() => {\r\n          this.dynamicAttributesForTask = this.dynamicAttributesService.from(this.bireAttributesForTask);\r\n          this.getBireTaskAttributes();\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnFindAttributesByCategory'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public getBireTaskAttributes(): void {\r\n    this.taskFormService.findBireTaskAttributeByTask(this.task).subscribe(\r\n      (results) => {\r\n        this.bireTaskAttributes = results;\r\n        this.dynamicAttributesService.setValues(this.dynamicAttributesForTask, this.bireTaskAttributes);\r\n\r\n        this.dynamicAttributesForTask[0].attributes.forEach((result) => {\r\n          if (result.type === DynamicAttributeType.Boolean) {\r\n            this.isCritical = result.value as boolean;\r\n          } else if (result.type === DynamicAttributeType.Text) {\r\n            this.isCritical = result.value === 'true';\r\n          }\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnFindAttributesByTask'));\r\n      }\r\n    );\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Operations dialog\r\n   *************************************************************************/\r\n\r\n  public onAddOperation(operation: BireOperationDTO): void {\r\n    if (operation) {\r\n      const searchInDisplayedTable = this.operationTableDataSource.dataSrc.find(\r\n        (value) =>\r\n          value.opeCode === operation.opeCode &&\r\n          value.rangeCode === operation.rangeCode &&\r\n          value.opeDesignation === operation.opeDesignation\r\n      );\r\n\r\n      if (!searchInDisplayedTable) {\r\n        operation.ope = `${operation.opeCode}-${operation.opeVersion}`;\r\n        this.operationTableDataSource.setData([...this.operationTableDataSource.dataSrc, operation]);\r\n        this.sortOperationTable();\r\n        this.operationAdded.push(operation);\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('operationExists'));\r\n      }\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Evolutions dialog\r\n   *************************************************************************/\r\n\r\n  public onAddEvolution(evolution: BireTaskEvolutionDTO): void {\r\n    if (evolution) {\r\n      const searchInDisplayedTable = this.evolutionsTableDataSource.dataSrc.find(\r\n        (row) =>\r\n          row._obj.evolutionNumber === evolution.evolutionNumber &&\r\n          row._obj.evolutionRevisionNumber === evolution.evolutionRevisionNumber\r\n      );\r\n\r\n      if (!searchInDisplayedTable) {\r\n        this.evolutionsTableDataSource.setData([\r\n          ...this.evolutionsTableDataSource.dataSrc,\r\n          this.createEvolutionRow(evolution)\r\n        ]);\r\n        this.fillDesignationInEvolutionTable();\r\n        this.evolutionAdded.push(evolution);\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('evolutionExists'));\r\n      }\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Maintained items dialog\r\n   *************************************************************************/\r\n\r\n  public onAddedMaintainedItem(item: BireTaskItemDTO): void {\r\n    if (item) {\r\n      const searchInDisplayedTable = this.maintainedItemsTableDataSource.dataSrc.find(\r\n        (row) =>\r\n          row._obj.familyCode === item.familyCode &&\r\n          row._obj.structureType === item.structureType &&\r\n          row._obj.variantCode === item.variantCode &&\r\n          row._obj.chapter === item.chapter &&\r\n          row._obj.section === item.section &&\r\n          row._obj.subject === item.subject &&\r\n          row._obj.sheet === item.sheet &&\r\n          row._obj.marks === item.marks &&\r\n          row._obj.versionNumber === item.versionNumber &&\r\n          row._obj.taskItemTypeCode === item.taskItemTypeCode\r\n      );\r\n\r\n      if (!searchInDisplayedTable) {\r\n        this.maintainedItemAdded = [...this.maintainedItemAdded, item];\r\n\r\n        const input: BireItemDTOId = {\r\n          familyCode: item.familyCode,\r\n          chapter: StringUtils.orEmpty(item.chapter),\r\n          subject: StringUtils.orEmpty(item.subject),\r\n          variantCode: item.variantCode,\r\n          section: StringUtils.orEmpty(item.section),\r\n          sheet: StringUtils.orEmpty(item.sheet),\r\n          marks: StringUtils.orEmpty(item.marks),\r\n          structureType: StringUtils.orEmpty(item.structureType)\r\n        };\r\n\r\n        this.taskFormService.findBireItem(input).subscribe((result) => {\r\n          const taskItemWithItem: BireTaskItemWithItemDTO = item as BireTaskItemWithItemDTO;\r\n          taskItemWithItem.bireItemDTO = result;\r\n          this.maintainedItemsTableDataSource.setData([\r\n            ...this.maintainedItemsTableDataSource.dataSrc,\r\n            this.createMaintainedItemRow(taskItemWithItem)\r\n          ]);\r\n        });\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('itemExists'));\r\n      }\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Qualifications dialog\r\n   *************************************************************************/\r\n\r\n  public onAddedQualification(qualification: BireQualificationDTO): void {\r\n    if (qualification) {\r\n      const searchInDisplayedTable = this.qualificationsTableDataSource.dataSrc.find(\r\n        (value) =>\r\n          value.qualificationCode === qualification.qualificationCode &&\r\n          value.qualificationName === qualification.qualificationName &&\r\n          value.qualificationDescription === qualification.qualificationDescription\r\n      );\r\n\r\n      if (!searchInDisplayedTable) {\r\n        this.qualificationAdded.push(qualification);\r\n        this.qualificationsTableDataSource.setData([...this.qualificationsTableDataSource.dataSrc, qualification]);\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('qualificationExists'));\r\n      }\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Til dialog\r\n   *************************************************************************/\r\n\r\n  public onAddedTil(til: BireTilDTO): void {\r\n    if (til) {\r\n      const searchInDisplayedTable = this.tilTableDataSource.dataSrc.find(\r\n        (value) =>\r\n          value.technicalLevel === til.technicalLevel &&\r\n          value.tilName === til.tilName &&\r\n          value.tilDescription === til.tilDescription\r\n      );\r\n\r\n      const bireTilTask: BireTilTaskDTO = {\r\n        technicalLevel: til.technicalLevel\r\n      };\r\n\r\n      if (!searchInDisplayedTable) {\r\n        this.tilTableDataSource.addData([til]);\r\n        this.tilAdded.push(bireTilTask);\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('tilExists'));\r\n      }\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * SuperiorTask dialog\r\n   *************************************************************************/\r\n\r\n  public onAssociatedSuperiorTask(output: BireTaskLinkPopupOutput): void {\r\n    const isParentTask = !!output.task && output.task.taskCode === this.task.taskCode;\r\n\r\n    const inOtherAssociatedTaskTables =\r\n      (!!this.topDownTreeTable[0].children &&\r\n        this.topDownTreeTable[0].children.some(\r\n          (topDownTask) => !!output.task && topDownTask.data.bireTaskDTO.taskCode === output.task.taskCode\r\n        )) ||\r\n      this.anteriorTaskTableDataSource.dataSrc.some(\r\n        (anteriorTask) => !!output.task && anteriorTask.taskCode === output.task.taskCode\r\n      ) ||\r\n      this.posteriorTaskTableDataSource.dataSrc.some(\r\n        (posteriorTask) => !!output.task && posteriorTask.taskCode === output.task.taskCode\r\n      ) ||\r\n      this.linkedTaskTableDataSource.dataSrc.some(\r\n        (linkedTask) => !!output.task && linkedTask.taskCode === output.task.taskCode\r\n      );\r\n\r\n    if (isParentTask) {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('cannotLinkWithSelf'));\r\n    }\r\n    if (!inOtherAssociatedTaskTables && !isParentTask) {\r\n      if (this.currentSuperiorTaskIndex !== null && this.currentSuperiorTaskIndex !== undefined) {\r\n        const previousSuperiorTask: BireTaskDTO = this.superiorTableDataSource.dataSrc[this.currentSuperiorTaskIndex];\r\n        if (\r\n          !!output &&\r\n          !!output.task &&\r\n          !!output.taskTask &&\r\n          DTOUtils.equalsBireTaskDTO(output.task, previousSuperiorTask)\r\n        ) {\r\n          this.superiorTaskTable[this.currentSuperiorTaskIndex].sequenceNumber = output.taskTask.sequenceNumber;\r\n          const isInsideAddedList = this.bireTaskLinkAddedList.find(\r\n            (element) =>\r\n              !!output.taskTask &&\r\n              element.birTaskCode === output.taskTask.birTaskCode &&\r\n              element.birTaskVersion === output.taskTask.birTaskVersion &&\r\n              element.taskCode === output.taskTask.taskCode &&\r\n              element.taskVersion === output.taskTask.taskVersion\r\n          );\r\n          const isInsideUpdatedList = this.bireTaskLinkUpdatedList.find(\r\n            (element) =>\r\n              !!output.taskTask &&\r\n              element.birTaskCode === output.taskTask.birTaskCode &&\r\n              element.birTaskVersion === output.taskTask.birTaskVersion &&\r\n              element.taskCode === output.taskTask.taskCode &&\r\n              element.taskVersion === output.taskTask.taskVersion\r\n          );\r\n          output.taskTask.birTaskCode = output.task.taskCode;\r\n          output.taskTask.birTaskVersion = output.task.taskVersion;\r\n          output.taskTask.taskCode = this.task.taskCode;\r\n          output.taskTask.taskVersion = this.task.taskVersion;\r\n\r\n          if (isInsideAddedList) {\r\n            const index = this.bireTaskLinkAddedList.indexOf(isInsideAddedList);\r\n            this.bireTaskLinkAddedList[index] = output.taskTask;\r\n          } else if (isInsideUpdatedList) {\r\n            const index = this.bireTaskLinkUpdatedList.indexOf(isInsideUpdatedList);\r\n            this.bireTaskLinkUpdatedList[index] = output.taskTask;\r\n          } else {\r\n            this.bireTaskLinkUpdatedList.push(output.taskTask);\r\n          }\r\n          const temp: BireTaskDTO = { ...output.task };\r\n          if (output.task.taskTypeCode) {\r\n            const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n              (type) => !!output.task && type.value === output.task.taskTypeCode\r\n            );\r\n            if (taskType[0]) {\r\n              temp.taskTypeCode = taskType[0].label;\r\n            }\r\n          }\r\n          if (output.task.groupCode) {\r\n            const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n              (group) => !!output && !!output.task && group.value === output.task.groupCode\r\n            );\r\n            if (taskGroup[0]) {\r\n              temp.groupCode = taskGroup[0].label;\r\n            }\r\n          }\r\n          this.superiorTableDataSource.replaceData(\r\n            this.superiorTableDataSource.dataSrc[this.currentSuperiorTaskIndex],\r\n            temp\r\n          );\r\n        }\r\n      } else {\r\n        const searchInDisplayedTable = this.superiorTableDataSource.dataSrc.find(\r\n          (value) =>\r\n            !!output &&\r\n            !!output.task &&\r\n            value.taskCode === output.task.taskCode &&\r\n            value.taskVersion === output.task.taskVersion\r\n        );\r\n        if (!searchInDisplayedTable) {\r\n          if (output.task && output.taskTask) {\r\n            const linkedOutput: LinkedTaskDTO = {\r\n              bireTaskDTO: output.task,\r\n              linkType: output.taskTask.taskLinkCode,\r\n              sequenceNumber: output.taskTask.sequenceNumber\r\n            };\r\n            const temp: LinkedTaskDTO = { ...linkedOutput };\r\n            if (!!temp && !!temp.bireTaskDTO) {\r\n              if (output.task.taskTypeCode) {\r\n                const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n                  (type) => !!output && !!output.task && type.value === output.task.taskTypeCode\r\n                );\r\n                if (!!temp && !!temp.bireTaskDTO && taskType[0]) {\r\n                  temp.bireTaskDTO.taskTypeCode = taskType[0].label;\r\n                } else {\r\n                  super.throwUnboundLocalError('onAssociatedSuperiorTask', 'temp && temp.bireTaskDTO');\r\n                }\r\n              }\r\n              if (output.task.groupCode) {\r\n                const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n                  (group) => !!output && !!output.task && group.value === output.task.groupCode\r\n                );\r\n                if (!!temp && !!temp.bireTaskDTO && taskGroup[0]) {\r\n                  temp.bireTaskDTO.groupCode = taskGroup[0].label;\r\n                } else {\r\n                  super.throwUnboundLocalError('onAssociatedSuperiorTask', 'temp && temp.bireTaskDTO');\r\n                }\r\n              }\r\n              this.superiorTaskTable.push(temp);\r\n              this.superiorTableDataSource.addData([temp.bireTaskDTO]);\r\n              output.taskTask.birTaskCode = output.task.taskCode;\r\n              output.taskTask.birTaskVersion = output.task.taskVersion;\r\n              output.taskTask.taskCode = this.task.taskCode;\r\n              output.taskTask.taskVersion = this.task.taskVersion;\r\n\r\n              this.bireTaskLinkAddedList.push(output.taskTask);\r\n            } else {\r\n              super.throwUnboundLocalError('onAssociatedSuperiorTask', 'temp && temp.bireTaskDTO');\r\n            }\r\n          }\r\n        } else {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('superiorAlreadyExists'));\r\n        }\r\n      }\r\n\r\n      this.currentSuperiorTaskIndex = undefined;\r\n      this.superiorTableDataSource.setData(this.superiorTableDataSource.dataSrc);\r\n      this.superiorTableDataSource.dataSelection = [];\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * TopDownTask dialog\r\n   *************************************************************************/\r\n\r\n  public onAssociatedTopDownTask(output: BireTaskLinkPopupOutput): void {\r\n    const isParentTask = !!output.task && output.task.taskCode === this.task.taskCode;\r\n\r\n    const inOtherAssociatedTaskTables =\r\n      this.superiorTableDataSource.dataSrc.some(\r\n        (superiorTask) => !!output.task && superiorTask.taskCode === output.task.taskCode\r\n      ) ||\r\n      this.anteriorTaskTableDataSource.dataSrc.some(\r\n        (anteriorTask) => !!output.task && anteriorTask.taskCode === output.task.taskCode\r\n      ) ||\r\n      this.posteriorTaskTableDataSource.dataSrc.some(\r\n        (posteriorTask) => !!output.task && posteriorTask.taskCode === output.task.taskCode\r\n      ) ||\r\n      this.linkedTaskTableDataSource.dataSrc.some(\r\n        (linkedTask) => !!output.task && linkedTask.taskCode === output.task.taskCode\r\n      );\r\n\r\n    const isSelfLink =\r\n      this.currentTopDownTask && this.currentTopDownTask.linkType === TaskFormComponent.TASK_LINK_CODE_SELF;\r\n\r\n    if (isParentTask && !isSelfLink) {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('cannotLinkWithSelf'));\r\n    } else if (!inOtherAssociatedTaskTables) {\r\n      if (!!output.taskTask && !!output.task) {\r\n        output.taskTask.birTaskCode = output.task.taskCode;\r\n        output.taskTask.birTaskVersion = output.task.taskVersion;\r\n        output.taskTask.taskCode = this.task.taskCode;\r\n        output.taskTask.taskVersion = this.task.taskVersion;\r\n        output.task.task = `${output.task.taskCode}-${output.task.taskVersion}`;\r\n\r\n        if (isSelfLink) {\r\n          output.taskTask.taskLinkCode = TaskFormComponent.TASK_LINK_CODE_SELF;\r\n        }\r\n\r\n        const tempTableParentNode: TreeNode = { ...this.topDownTreeTable[0] };\r\n        const firstChildren = tempTableParentNode.children;\r\n\r\n        const newChild = {\r\n          bireTaskDTO: output.task,\r\n          linkType: output.taskTask && output.taskTask.taskLinkCode,\r\n          sequenceNumber: output.taskTask && output.taskTask.sequenceNumber\r\n        };\r\n\r\n        if (!!firstChildren) {\r\n          const inFirstChildren = firstChildren.filter(\r\n            (child) => !!output.task && child.data.bireTaskDTO.taskCode === output.task.taskCode\r\n          );\r\n          if (this.newQualification && inFirstChildren.length === 0 && !!output.taskTask) {\r\n            // new task\r\n\r\n            const newChildNode: TreeNode = {\r\n              children: [],\r\n              data: newChild,\r\n              parent: tempTableParentNode\r\n            };\r\n\r\n            LabelValueUtils.stringValueToLabel(newChildNode.data.bireTaskDTO, 'taskTypeCode', this.taskTypes);\r\n\r\n            firstChildren.push(newChildNode);\r\n            this.bireTaskLinkAddedList.push(output.taskTask);\r\n\r\n            this.topDownTreeTable[0] = { ...tempTableParentNode };\r\n            this.topDownTreeTable = [...this.topDownTreeTable];\r\n            this.topDownTreeTable[0].expanded = true;\r\n            this.onRowUnSelected(newChildNode);\r\n          } else {\r\n            const inAddedList = this.bireTaskLinkAddedList.filter(\r\n              (task) => !!output.task && task.taskCode === output.task.taskCode\r\n            );\r\n            const inUpdatedList = this.bireTaskLinkUpdatedList.filter(\r\n              (task) => !!output.task && task.taskCode === output.task.taskCode\r\n            );\r\n\r\n            if (inAddedList.length === 1 && !!output.taskTask) {\r\n              // updating newly added node\r\n\r\n              const indexInAddedList = this.bireTaskLinkAddedList.findIndex(\r\n                (task) => !!output.task && output.task.taskCode === task.taskCode\r\n              );\r\n              this.bireTaskLinkAddedList[indexInAddedList] = output.taskTask;\r\n            } else if (inUpdatedList.length === 1 && !!output.taskTask) {\r\n              // updating node existing in DB which has already been updated in this session\r\n\r\n              const indexInUpdatedList = this.bireTaskLinkUpdatedList.findIndex(\r\n                (task) => !!output.task && output.task.taskCode === task.taskCode\r\n              );\r\n              this.bireTaskLinkUpdatedList[indexInUpdatedList] = output.taskTask;\r\n            } else if (isSelfLink && !ObjectUtils.isDefined(this.currentTaskSelfLink)) {\r\n              this.bireTaskLinkAddedList.push(output.taskTask);\r\n            } else {\r\n              // updating node existing in DB for the first time\r\n\r\n              this.bireTaskLinkUpdatedList.push(output.taskTask);\r\n            }\r\n\r\n            this.selectedTopDownNodes[0].data.sequenceNumber = output.taskTask.sequenceNumber;\r\n\r\n            this.onRowUnSelected(this.selectedTopDownNodes[0]);\r\n          }\r\n        }\r\n\r\n        this.selectedTopDownNodes = [];\r\n      }\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Anterior dialog\r\n   *************************************************************************/\r\n\r\n  public onAssociatedAnteriorTask(output: BireTaskLinkPopupOutput): void {\r\n    const isParentTask = !!output.task && output.task.taskCode === this.task.taskCode;\r\n\r\n    const inOtherAssociatedTaskTables =\r\n      this.superiorTableDataSource.dataSrc.some(\r\n        (superiorTask) => !!output.task && superiorTask.taskCode === output.task.taskCode\r\n      ) ||\r\n      (!!this.topDownTreeTable[0].children &&\r\n        this.topDownTreeTable[0].children.some(\r\n          (topDownTask) => !!output.task && topDownTask.data.bireTaskDTO.taskCode === output.task.taskCode\r\n        )) ||\r\n      this.posteriorTaskTableDataSource.dataSrc.some(\r\n        (posteriorTask) => !!output.task && posteriorTask.taskCode === output.task.taskCode\r\n      ) ||\r\n      this.linkedTaskTableDataSource.dataSrc.some(\r\n        (linkedTask) => !!output.task && linkedTask.taskCode === output.task.taskCode\r\n      );\r\n\r\n    if (isParentTask) {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('cannotLinkWithSelf'));\r\n    }\r\n    if (!inOtherAssociatedTaskTables && !isParentTask) {\r\n      if (this.currentAnteriorIndex !== null && this.currentAnteriorIndex !== undefined) {\r\n        const previousAnteriorTask: BireTaskDTO = this.anteriorTaskTableDataSource.dataSrc[this.currentAnteriorIndex];\r\n        if (\r\n          !!output &&\r\n          !!output.task &&\r\n          !!output.taskTask &&\r\n          DTOUtils.equalsBireTaskDTO(output.task, previousAnteriorTask)\r\n        ) {\r\n          const anteriorTask = this.anteriorTable[this.currentAnteriorIndex];\r\n          anteriorTask.sequenceNumber = output.taskTask.sequenceNumber;\r\n          const isInsideAddedList = this.bireTaskLinkAddedList.find(\r\n            (element) =>\r\n              !!output &&\r\n              !!output.taskTask &&\r\n              element.birTaskCode === output.taskTask.birTaskCode &&\r\n              element.birTaskVersion === output.taskTask.birTaskVersion &&\r\n              element.taskCode === output.taskTask.taskCode &&\r\n              element.taskVersion === output.taskTask.taskVersion\r\n          );\r\n          const isInsideUpdatedList = this.bireTaskLinkUpdatedList.find(\r\n            (element) =>\r\n              !!output &&\r\n              !!output.taskTask &&\r\n              element.birTaskCode === output.taskTask.birTaskCode &&\r\n              element.birTaskVersion === output.taskTask.birTaskVersion &&\r\n              element.taskCode === output.taskTask.taskCode &&\r\n              element.taskVersion === output.taskTask.taskVersion\r\n          );\r\n\r\n          if (anteriorTask.linkedTaskMain) {\r\n            output.taskTask.birTaskCode = this.task.taskCode;\r\n            output.taskTask.birTaskVersion = this.task.taskVersion;\r\n            output.taskTask.taskLinkCode = anteriorTask.linkType;\r\n          } else {\r\n            output.taskTask.birTaskCode = output.task.taskCode;\r\n            output.taskTask.birTaskVersion = output.task.taskVersion;\r\n            output.taskTask.taskCode = this.task.taskCode;\r\n            output.taskTask.taskVersion = this.task.taskVersion;\r\n          }\r\n\r\n          if (isInsideAddedList) {\r\n            const index = this.bireTaskLinkAddedList.indexOf(isInsideAddedList);\r\n            this.bireTaskLinkAddedList[index] = output.taskTask;\r\n          } else if (isInsideUpdatedList) {\r\n            const index = this.bireTaskLinkUpdatedList.indexOf(isInsideUpdatedList);\r\n            this.bireTaskLinkUpdatedList[index] = output.taskTask;\r\n          } else {\r\n            this.bireTaskLinkUpdatedList.push(output.taskTask);\r\n          }\r\n          const temp: BireTaskDTO = { ...output.task };\r\n          if (output.task.taskTypeCode) {\r\n            const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n              (type) => !!output && !!output.task && type.value === output.task.taskTypeCode\r\n            );\r\n            if (taskType[0]) {\r\n              temp.taskTypeCode = taskType[0].label;\r\n            }\r\n          }\r\n          if (output.task.groupCode) {\r\n            const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n              (group) => !!output && !!output.task && group.value === output.task.groupCode\r\n            );\r\n            if (taskGroup[0]) {\r\n              temp.groupCode = taskGroup[0].label;\r\n            }\r\n          }\r\n          temp.sequenceNumber = output.taskTask.sequenceNumber;\r\n          this.anteriorTaskTableDataSource.replaceData(\r\n            this.anteriorTaskTableDataSource.dataSrc[this.currentAnteriorIndex],\r\n            temp\r\n          );\r\n        }\r\n      } else {\r\n        const searchInDisplayedTable = this.anteriorTaskTableDataSource.dataSrc.find(\r\n          (value) =>\r\n            !!output &&\r\n            !!output.task &&\r\n            value.taskCode === output.task.taskCode &&\r\n            value.taskVersion === output.task.taskVersion\r\n        );\r\n        if (!searchInDisplayedTable) {\r\n          if (output.task && output.taskTask) {\r\n            const linkedOutput: LinkedTaskDTO = {\r\n              bireTaskDTO: output.task,\r\n              linkType: output.taskTask.taskLinkCode,\r\n              sequenceNumber: output.taskTask.sequenceNumber\r\n            };\r\n            const temp: LinkedTaskDTO = { ...linkedOutput };\r\n            if (!!temp && !!temp.bireTaskDTO) {\r\n              if (output.task.taskTypeCode) {\r\n                const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n                  (type) => !!output && !!output.task && type.value === output.task.taskTypeCode\r\n                );\r\n                if (taskType[0]) {\r\n                  temp.bireTaskDTO.taskTypeCode = taskType[0].label;\r\n                }\r\n              }\r\n              if (output.task.groupCode) {\r\n                const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n                  (group) => !!output && !!output.task && group.value === output.task.groupCode\r\n                );\r\n                if (taskGroup[0]) {\r\n                  temp.bireTaskDTO.groupCode = taskGroup[0].label;\r\n                }\r\n              }\r\n              this.anteriorTable.push(temp);\r\n              temp.bireTaskDTO.sequenceNumber = output.taskTask.sequenceNumber;\r\n              this.anteriorTaskTableDataSource.addData([temp.bireTaskDTO]);\r\n              output.taskTask.birTaskCode = output.task.taskCode;\r\n              output.taskTask.birTaskVersion = output.task.taskVersion;\r\n              output.taskTask.taskCode = this.task.taskCode;\r\n              output.taskTask.taskVersion = this.task.taskVersion;\r\n\r\n              this.bireTaskLinkAddedList.push(output.taskTask);\r\n            } else {\r\n              super.throwUnboundLocalError('onAssociatedAnteriorTask', 'temp && temp.bireTaskDTO');\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.currentAnteriorIndex = undefined;\r\n      this.anteriorTaskTableDataSource.dataSelection = [];\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * PosteriorTask dialog\r\n   *************************************************************************/\r\n\r\n  public onAssociatedPosteriorTask(output: BireTaskLinkPopupOutput): void {\r\n    const isParentTask = !!output.task && output.task.taskCode === this.task.taskCode;\r\n\r\n    const inOtherAssociatedTaskTables =\r\n      this.superiorTableDataSource.dataSrc.some(\r\n        (superiorTask) => !!output.task && superiorTask.taskCode === output.task.taskCode\r\n      ) ||\r\n      (!!this.topDownTreeTable[0].children &&\r\n        this.topDownTreeTable[0].children.some(\r\n          (topDownTask) => !!output.task && topDownTask.data.bireTaskDTO.taskCode === output.task.taskCode\r\n        )) ||\r\n      this.anteriorTaskTableDataSource.dataSrc.some(\r\n        (anteriorTask) => !!output.task && anteriorTask.taskCode === output.task.taskCode\r\n      ) ||\r\n      this.linkedTaskTableDataSource.dataSrc.some(\r\n        (linkedTask) => !!output.task && linkedTask.taskCode === output.task.taskCode\r\n      );\r\n\r\n    if (isParentTask) {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('cannotLinkWithSelf'));\r\n    }\r\n    if (!inOtherAssociatedTaskTables && !isParentTask) {\r\n      if (this.currentPosteriorIndex !== null && this.currentPosteriorIndex !== undefined) {\r\n        const previousPosteriorTask: BireTaskDTO = this.posteriorTaskTableDataSource.dataSrc[\r\n          this.currentPosteriorIndex\r\n        ];\r\n        if (\r\n          !!output &&\r\n          !!output.task &&\r\n          !!output.taskTask &&\r\n          DTOUtils.equalsBireTaskDTO(output.task, previousPosteriorTask)\r\n        ) {\r\n          const posteriorTask = this.posteriorTable[this.currentPosteriorIndex];\r\n          posteriorTask.sequenceNumber = output.taskTask.sequenceNumber;\r\n          const isInsideAddedList = this.bireTaskLinkAddedList.find(\r\n            (element) =>\r\n              !!output &&\r\n              !!output.taskTask &&\r\n              element.birTaskCode === output.taskTask.birTaskCode &&\r\n              element.birTaskVersion === output.taskTask.birTaskVersion &&\r\n              element.taskCode === output.taskTask.taskCode &&\r\n              element.taskVersion === output.taskTask.taskVersion\r\n          );\r\n          const isInsideUpdatedList = this.bireTaskLinkUpdatedList.find(\r\n            (element) =>\r\n              !!output &&\r\n              !!output.taskTask &&\r\n              element.birTaskCode === output.taskTask.birTaskCode &&\r\n              element.birTaskVersion === output.taskTask.birTaskVersion &&\r\n              element.taskCode === output.taskTask.taskCode &&\r\n              element.taskVersion === output.taskTask.taskVersion\r\n          );\r\n\r\n          if (posteriorTask.linkedTaskMain) {\r\n            output.taskTask.birTaskCode = this.task.taskCode;\r\n            output.taskTask.birTaskVersion = this.task.taskVersion;\r\n            output.taskTask.taskLinkCode = posteriorTask.linkType;\r\n          } else {\r\n            output.taskTask.birTaskCode = output.task.taskCode;\r\n            output.taskTask.birTaskVersion = output.task.taskVersion;\r\n            output.taskTask.taskCode = this.task.taskCode;\r\n            output.taskTask.taskVersion = this.task.taskVersion;\r\n          }\r\n\r\n          if (isInsideAddedList) {\r\n            const index = this.bireTaskLinkAddedList.indexOf(isInsideAddedList);\r\n            this.bireTaskLinkAddedList[index] = output.taskTask;\r\n          } else if (isInsideUpdatedList) {\r\n            const index = this.bireTaskLinkUpdatedList.indexOf(isInsideUpdatedList);\r\n            this.bireTaskLinkUpdatedList[index] = output.taskTask;\r\n          } else {\r\n            this.bireTaskLinkUpdatedList.push(output.taskTask);\r\n          }\r\n          const temp: BireTaskDTO = { ...output.task };\r\n          if (output.task.taskTypeCode) {\r\n            const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n              (type) => !!output && !!output.task && type.value === output.task.taskTypeCode\r\n            );\r\n            if (taskType[0]) {\r\n              temp.taskTypeCode = taskType[0].label;\r\n            }\r\n          }\r\n          if (output.task.groupCode) {\r\n            const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n              (group) => !!output && !!output.task && group.value === output.task.groupCode\r\n            );\r\n            if (taskGroup[0]) {\r\n              temp.groupCode = taskGroup[0].label;\r\n            }\r\n          }\r\n          temp.sequenceNumber = output.taskTask.sequenceNumber;\r\n          this.posteriorTaskTableDataSource.replaceData(\r\n            this.posteriorTaskTableDataSource.dataSrc[this.currentPosteriorIndex],\r\n            temp\r\n          );\r\n        }\r\n      } else {\r\n        const searchInDisplayedTable = this.posteriorTaskTableDataSource.dataSrc.find(\r\n          (value) =>\r\n            !!output &&\r\n            !!output.task &&\r\n            value.taskCode === output.task.taskCode &&\r\n            value.taskVersion === output.task.taskVersion\r\n        );\r\n        if (!searchInDisplayedTable) {\r\n          if (output.task && output.taskTask) {\r\n            const linkedOutput: LinkedTaskDTO = {\r\n              bireTaskDTO: output.task,\r\n              linkType: output.taskTask.taskLinkCode,\r\n              sequenceNumber: output.taskTask.sequenceNumber\r\n            };\r\n            const temp: LinkedTaskDTO = { ...linkedOutput };\r\n            if (!!temp && !!temp.bireTaskDTO) {\r\n              if (output.task.taskTypeCode) {\r\n                const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n                  (type) => !!output && !!output.task && type.value === output.task.taskTypeCode\r\n                );\r\n                if (taskType[0]) {\r\n                  temp.bireTaskDTO.taskTypeCode = taskType[0].label;\r\n                }\r\n              }\r\n              if (output.task.groupCode) {\r\n                const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n                  (group) => !!output && !!output.task && group.value === output.task.groupCode\r\n                );\r\n                if (taskGroup[0]) {\r\n                  temp.bireTaskDTO.groupCode = taskGroup[0].label;\r\n                }\r\n              }\r\n              this.posteriorTable.push(temp);\r\n              temp.bireTaskDTO.sequenceNumber = output.taskTask.sequenceNumber;\r\n              this.posteriorTaskTableDataSource.addData([temp.bireTaskDTO]);\r\n              output.taskTask.birTaskCode = output.task.taskCode;\r\n              output.taskTask.birTaskVersion = output.task.taskVersion;\r\n              output.taskTask.taskCode = this.task.taskCode;\r\n              output.taskTask.taskVersion = this.task.taskVersion;\r\n\r\n              this.bireTaskLinkAddedList.push(output.taskTask);\r\n            } else {\r\n              super.throwUnboundLocalError('onAssociatedPosteriorTask', 'temp && temp.bireTaskDTO');\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.currentPosteriorIndex = undefined;\r\n      this.posteriorTaskTableDataSource.dataSelection = [];\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * LinkedTask dialog\r\n   *************************************************************************/\r\n\r\n  public onAssociatedLinkedTask(output: BireTaskLinkPopupOutput): void {\r\n    const isParentTask = !!output.task && output.task.taskCode === this.task.taskCode;\r\n\r\n    const inOtherAssociatedTaskTables =\r\n      this.superiorTableDataSource.dataSrc.some(\r\n        (superiorTask) => !!output.task && superiorTask.taskCode === output.task.taskCode\r\n      ) ||\r\n      (!!this.topDownTreeTable[0].children &&\r\n        this.topDownTreeTable[0].children.some(\r\n          (topDownTask) => !!output.task && topDownTask.data.bireTaskDTO.taskCode === output.task.taskCode\r\n        )) ||\r\n      this.anteriorTaskTableDataSource.dataSrc.some(\r\n        (anteriorTask) => !!output.task && anteriorTask.taskCode === output.task.taskCode\r\n      ) ||\r\n      this.posteriorTaskTableDataSource.dataSrc.some(\r\n        (posteriorTask) => !!output.task && posteriorTask.taskCode === output.task.taskCode\r\n      );\r\n\r\n    if (isParentTask) {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('cannotLinkWithSelf'));\r\n    }\r\n    if (!inOtherAssociatedTaskTables && !isParentTask) {\r\n      if (this.currentLinkedTaskIndex !== null && this.currentLinkedTaskIndex !== undefined) {\r\n        const previousLinkedTask: LinkedTasksTableDTO = this.linkedTaskTableDataSource.dataSrc[\r\n          this.currentLinkedTaskIndex\r\n        ];\r\n        if (\r\n          !!output &&\r\n          !!output.task &&\r\n          !!output.taskTask &&\r\n          !!output.taskTask.taskLinkCode &&\r\n          !!output.task.taskCode &&\r\n          !!output.task.taskVersion\r\n        ) {\r\n          const tempOutput: LinkedTasksTableDTO = {\r\n            linkType: output.taskTask.taskLinkCode,\r\n            taskCode: output.task.taskCode,\r\n            taskVersion: output.task.taskVersion,\r\n            taskDesignation: output.task.taskDesignation,\r\n            taskType: output.task.taskTypeCode,\r\n            taskGroup: output.task.groupCode\r\n          };\r\n          if (output.taskTask.taskLinkCode) {\r\n            const linkType: LabelValue<string>[] = this.associatedLinkTypes.filter(\r\n              (type) => !!output && !!output.taskTask && type.value === output.taskTask.taskLinkCode\r\n            );\r\n            if (linkType[0]) {\r\n              tempOutput.linkType = linkType[0].label;\r\n            }\r\n          }\r\n          if (output.task.taskTypeCode) {\r\n            const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n              (type) => !!output && !!output.task && type.value === output.task.taskTypeCode\r\n            );\r\n            if (taskType[0]) {\r\n              tempOutput.taskType = taskType[0].label;\r\n            }\r\n          }\r\n          if (output.task.groupCode) {\r\n            const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n              (group) => !!output && !!output.task && group.value === output.task.groupCode\r\n            );\r\n            if (taskGroup[0]) {\r\n              tempOutput.taskGroup = taskGroup[0].label;\r\n            }\r\n          }\r\n          if (DTOUtils.equalsLinkedTasksTableDTO(tempOutput, previousLinkedTask)) {\r\n            const isInsideAddedList = this.bireTaskLinkAddedList.find(\r\n              (element) =>\r\n                !!output &&\r\n                !!output.taskTask &&\r\n                element.birTaskCode === output.taskTask.birTaskCode &&\r\n                element.birTaskVersion === output.taskTask.birTaskVersion &&\r\n                element.taskCode === output.taskTask.taskCode &&\r\n                element.taskVersion === output.taskTask.taskVersion\r\n            );\r\n            const isInsideUpdatedList = this.bireTaskLinkUpdatedList.find(\r\n              (element) =>\r\n                !!output &&\r\n                !!output.taskTask &&\r\n                element.birTaskCode === output.taskTask.birTaskCode &&\r\n                element.birTaskVersion === output.taskTask.birTaskVersion &&\r\n                element.taskCode === output.taskTask.taskCode &&\r\n                element.taskVersion === output.taskTask.taskVersion\r\n            );\r\n\r\n            output.taskTask.birTaskCode = output.task.taskCode;\r\n            output.taskTask.birTaskVersion = output.task.taskVersion;\r\n            output.taskTask.taskCode = this.task.taskCode;\r\n            output.taskTask.taskVersion = this.task.taskVersion;\r\n\r\n            if (isInsideAddedList) {\r\n              const index = this.bireTaskLinkAddedList.indexOf(isInsideAddedList);\r\n              this.bireTaskLinkAddedList[index] = output.taskTask;\r\n            } else if (isInsideUpdatedList) {\r\n              const index = this.bireTaskLinkUpdatedList.indexOf(isInsideUpdatedList);\r\n              this.bireTaskLinkUpdatedList[index] = output.taskTask;\r\n            } else {\r\n              this.bireTaskLinkUpdatedList.push(output.taskTask);\r\n            }\r\n            const temp: LinkedTasksTableDTO = { ...tempOutput };\r\n\r\n            if (output.taskTask.taskLinkCode) {\r\n              const linkType: LabelValue<string>[] = this.associatedLinkTypes.filter(\r\n                (type) => !!output && !!output.taskTask && type.value === output.taskTask.taskLinkCode\r\n              );\r\n              if (linkType[0]) {\r\n                temp.linkType = linkType[0].label;\r\n              }\r\n            }\r\n\r\n            if (output.task.taskTypeCode) {\r\n              const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n                (type) => !!output && !!output.task && type.value === output.task.taskTypeCode\r\n              );\r\n              if (taskType[0]) {\r\n                temp.taskType = taskType[0].label;\r\n              }\r\n            }\r\n            if (output.task.groupCode) {\r\n              const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n                (group) => !!output && !!output.task && group.value === output.task.groupCode\r\n              );\r\n              if (taskGroup[0]) {\r\n                temp.taskGroup = taskGroup[0].label;\r\n              }\r\n            }\r\n            this.linkedTaskTableDataSource.replaceData(\r\n              this.linkedTaskTableDataSource.dataSrc[this.currentLinkedTaskIndex],\r\n              temp\r\n            );\r\n            this.linkedTasksTable[this.currentLinkedTaskIndex].sequenceNumber = output.taskTask.sequenceNumber;\r\n          }\r\n        }\r\n      } else {\r\n        const searchInDisplayedTable = this.linkedTaskTableDataSource.dataSrc.find(\r\n          (value) =>\r\n            !!output &&\r\n            !!output.task &&\r\n            value.taskCode === output.task.taskCode &&\r\n            value.taskVersion === output.task.taskVersion\r\n        );\r\n        if (!searchInDisplayedTable) {\r\n          if (output.task && output.taskTask) {\r\n            const linkedOutput: LinkedTaskDTO = {\r\n              bireTaskDTO: output.task,\r\n              linkType: output.taskTask.taskLinkCode,\r\n              sequenceNumber: output.taskTask.sequenceNumber\r\n            };\r\n            if (!!output.taskTask.taskLinkCode && !!output.task.taskCode && !!output.task.taskVersion) {\r\n              const tableOutput: LinkedTasksTableDTO = {\r\n                taskCode: output.task.taskCode,\r\n                taskVersion: output.task.taskVersion,\r\n                taskDesignation: output.task.taskDesignation,\r\n                taskType: output.task.taskTypeCode,\r\n                taskGroup: output.task.groupCode,\r\n                linkType: output.taskTask.taskLinkCode\r\n              };\r\n              const temp: LinkedTaskDTO = { ...linkedOutput };\r\n              if (!!temp && !!temp.bireTaskDTO) {\r\n                if (output.taskTask.taskLinkCode) {\r\n                  const linkType: LabelValue<string>[] = this.associatedLinkTypes.filter(\r\n                    (type) => !!output && !!output.taskTask && type.value === output.taskTask.taskLinkCode\r\n                  );\r\n                  if (linkType[0]) {\r\n                    temp.linkType = linkType[0].label;\r\n                    tableOutput.linkType = linkType[0].label;\r\n                  }\r\n                }\r\n\r\n                if (output.task.taskTypeCode) {\r\n                  const taskType: LabelValue<string>[] = this.taskTypes.filter(\r\n                    (type) => !!output && !!output.task && type.value === output.task.taskTypeCode\r\n                  );\r\n                  if (taskType[0]) {\r\n                    temp.bireTaskDTO.taskTypeCode = taskType[0].label;\r\n                    tableOutput.taskType = taskType[0].label;\r\n                  }\r\n                }\r\n                if (output.task.groupCode) {\r\n                  const taskGroup: LabelValue<string>[] = this.taskGroups.filter(\r\n                    (group) => !!output && !!output.task && group.value === output.task.groupCode\r\n                  );\r\n                  if (taskGroup[0]) {\r\n                    temp.bireTaskDTO.groupCode = taskGroup[0].label;\r\n                    tableOutput.taskGroup = taskGroup[0].label;\r\n                  }\r\n                }\r\n                this.linkedTasksTable.push(temp);\r\n                this.linkedTaskTableDataSource.addData([tableOutput]);\r\n                output.taskTask.birTaskCode = output.task.taskCode;\r\n                output.taskTask.birTaskVersion = output.task.taskVersion;\r\n                output.taskTask.taskCode = this.task.taskCode;\r\n                output.taskTask.taskVersion = this.task.taskVersion;\r\n\r\n                this.bireTaskLinkAddedList.push(output.taskTask);\r\n              }\r\n            } else {\r\n              super.throwUnboundLocalError('onAssociatedLinkedTask', 'temp && temp.bireTaskDTO');\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.currentLinkedTaskIndex = undefined;\r\n      this.linkedTaskTableDataSource.setData(this.linkedTaskTableDataSource.dataSrc);\r\n      this.linkedTaskTableDataSource.dataSelection = [];\r\n    }\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Document Dialog\r\n   *************************************************************************/\r\n\r\n  public addNewDocument(newDocument: BireDocumentDTO) {\r\n    const searchInDisplayedList = this.documentsTableDataSource.dataSrc.find(\r\n      (value) => value.docName === newDocument.docName\r\n    );\r\n    if (!searchInDisplayedList) {\r\n      this.documentsAdded.push(newDocument);\r\n      this.bireDocumentDisplayed.push(this.getCustomDocumentRow(newDocument));\r\n      const doc: BireDocumentDTO = { ...newDocument };\r\n      LabelValueUtils.stringValueToLabel(doc, 'docCategory', this.documentCategories);\r\n      this.documentsTableDataSource.addData([doc]);\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('warningOnFileExists'));\r\n    }\r\n  }\r\n\r\n  public updateDocument(updatedDocument: BireDocumentDTO): void {\r\n    if (\r\n      this.currentDocumentIndex !== null &&\r\n      this.currentDocumentIndex !== undefined &&\r\n      this.currentDocumentIndex >= 0\r\n    ) {\r\n      if (!this.hasDuplicateDocument(updatedDocument)) {\r\n        const inAddedList = this.documentsAdded.some((doc) => doc.docCode === updatedDocument.docCode);\r\n        const inUpdatedList = this.documentsUpdated.some((doc) => doc.docCode === updatedDocument.docCode);\r\n        if (inAddedList) {\r\n          // added but unsaved\r\n          const indexInAddedList = this.documentsAdded.findIndex((doc) => doc.docCode === updatedDocument.docCode);\r\n          this.documentsAdded[indexInAddedList] = updatedDocument;\r\n        } else if (inUpdatedList) {\r\n          // DB value already updated\r\n          const indexInUpdatedList = this.documentsUpdated.findIndex((doc) => doc.docCode === updatedDocument.docCode);\r\n          this.documentsUpdated[indexInUpdatedList] = updatedDocument;\r\n        } else {\r\n          // non updated DB value\r\n          this.documentsUpdated.push(updatedDocument);\r\n        }\r\n        const document: BireDocumentDTO = { ...updatedDocument };\r\n        LabelValueUtils.stringValueToLabel(document, 'docCategory', this.documentCategories);\r\n        this.documentsTableDataSource.replaceData(this.documentsTableDataSource.dataSelection[0], document);\r\n        this.bireDocumentDisplayed[this.currentDocumentIndex] = this.getCustomDocumentRow(updatedDocument);\r\n        this.documentsTableDataSource.dataSelection = [];\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('warningOnFileExists'));\r\n      }\r\n    }\r\n  }\r\n\r\n  private hasDuplicateDocument(rowData: BireDocumentDTO): boolean {\r\n    let measurementPointList = [...this.documentsTableDataSource.dataSrc];\r\n    if (this.documentsTableDataSource.hasDataSelection) {\r\n      const selectedMeasurementRow = this.documentsTableDataSource.dataSelection[0];\r\n\r\n      // Return all the rows except selected rows\r\n      measurementPointList = this.documentsTableDataSource.dataSrc.filter((mprow) => {\r\n        return selectedMeasurementRow.docName !== mprow.docName;\r\n      });\r\n    }\r\n\r\n    // check whether any other rows have same counter code of row data or not\r\n    const hasAnyDuplicateRow = measurementPointList.some((row) => {\r\n      return row.docName === rowData.docName;\r\n    });\r\n\r\n    return hasAnyDuplicateRow;\r\n  }\r\n\r\n  public downloadDocument(event): void {\r\n    FileUtils.downloadFile(event.docFile, event.docName);\r\n  }\r\n\r\n  // Currency\r\n  private loadCurrency(): void {\r\n    this.taskFormService.getLocalCurrency().subscribe((result) => {\r\n      const currencyRegexp = /^[a-zA-Z]+ \\(([A-Z]+)\\)$/;\r\n      const mo = result.match(currencyRegexp);\r\n      this.currency = mo ? mo[1] : result;\r\n    });\r\n  }\r\n\r\n  // History popup management\r\n  public openStatusUpdatesPopup() {\r\n    if (!!this.task && !!this.task.taskCode && !!this.task.taskVersion) {\r\n      const taskId: BireTaskDTOId = {\r\n        taskCode: this.task.taskCode,\r\n        taskVersion: this.task.taskVersion\r\n      };\r\n      this.showStatusUpdatesPopup = true;\r\n      const columns: TableColumn[] = [\r\n        { field: 'timestamp', width: '200px', filterMode: TableColumnFilterMode.Input, isDate: true },\r\n        { field: 'statusUser', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'action', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'statusState', width: '250px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'taskTypeCode', width: '250px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'taskDesignation', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'taskDescription', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'groupCode', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'repairCenterCode', width: '250px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'taskChapter', width: '250px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'taskSection', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'taskSubject', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'taskTask', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'taskSubTask', width: '250px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'taskStatus', width: '250px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'taskApplicabilityDate', width: '200px', filterMode: TableColumnFilterMode.Input, isDate: true },\r\n        { field: 'taskApplicabilityCode', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'overhaul', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n        { field: 'inspectionPerEsm', width: '200px', filterMode: TableColumnFilterMode.Input }\r\n      ];\r\n      this.updatesKeyMap.set('statusState', this.propertiesService.getValue('getFuncObjectStatusMap'));\r\n      this.updatesKeyMap.set('taskTypeCode', this.propertiesService.getValue('getTaskTypeMap'));\r\n      this.updatesKeyMap.set('taskStatus', this.propertiesService.getValue('getFuncObjectStatusMap'));\r\n      this.updatesKeyMap.set('taskApplicabilityCode', this.propertiesService.getValue('getTaskApplicabilityCodeMap'));\r\n      this.updatesKeyMap.set('repairCenterCode', this.taskSearchService.findMROCenter());\r\n      this.updatesKeyMap.set('groupCode', this.taskSearchService.getTaskGroups());\r\n      this.tableStatusUpdatesData = {\r\n        componentId: 'TaskFormComponent',\r\n        tableCols: columns,\r\n        tableRows: this.updateHistoricService.findBireTaskHistoric(taskId),\r\n        dataKey: undefined,\r\n        selectionMode: TableSelectionMode.Multiple,\r\n        globalFilter: false\r\n      };\r\n    } else {\r\n      super.throwUnboundLocalError('openStatusUpdatesPopup', 'this.task');\r\n    }\r\n  }\r\n\r\n  public updateObjectStatusFromStatusUpdatesHistory(event): void {\r\n    const input: ObjectStatusDTO = {\r\n      statusDate: event.statusDate,\r\n      statusState: event.statusState,\r\n      statusUser: event.statusUser\r\n    };\r\n    // tslint:disable-next-line:no-empty\r\n    this.taskFormService.updateStaus(input).subscribe(() => {});\r\n  }\r\n\r\n  public openHistoricAttributes(): void {\r\n    if (!!this.task && !!this.task.taskCode && !!this.task.taskVersion && !!this.dynamicAttributesForTask) {\r\n      this.showDynamicAttributesHistoric = true;\r\n\r\n      const attributeIds: BireTaskAttributeDTOId[] = this.dynamicAttributesService.toBireTaskAttributeId(\r\n        this.task.taskCode,\r\n        this.task.taskVersion,\r\n        this.dynamicAttributesForTask\r\n      );\r\n      this.dynamicAttributesHistoric = this.taskFormService.findHBireTaskAttributesByAttributeId(attributeIds);\r\n    } else {\r\n      super.throwUnboundLocalError(\r\n        'openHistoricAttributes',\r\n        'this.task && task.taskCode && this.task.taskVersion && this.dynamicAttributesForTask'\r\n      );\r\n    }\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  public openItem(input: MaintainedItemRow): void {\r\n    const objectId: BireItemDTO = {\r\n      familyCode: input._obj.familyCode,\r\n      chapter: input._obj.chapter,\r\n      section: input._obj.section,\r\n      sheet: input._obj.sheet,\r\n      marks: input._obj.marks,\r\n      subject: input._obj.subject,\r\n      structureType: input._obj.structureType,\r\n      variantCode: input._obj.variantCode\r\n    };\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.ENG_ITEM_FORM,\r\n      openMode: ComponentOpenMode.Read,\r\n      objectId: this.serializationService.serialize(objectId)\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public openField(input: MaintainedItemRow): void {\r\n    if (!!this.task.taskCode) {\r\n      const taskDmc: string = StringUtils.orEmpty(this.task.taskTask);\r\n      const familyVariantCode: string | undefined = BireFamilyVariantUtil.buildFamilyVariantCodeWithoutStructureType(\r\n        input._obj.familyCode,\r\n        input._obj.variantCode\r\n      );\r\n      if (!familyVariantCode) {\r\n        return;\r\n      }\r\n      this.davFieldService.buildTaskFieldLink({ familyVariantCode, taskDmc }).subscribe((data: string) => {\r\n        window.open(data);\r\n      });\r\n    }\r\n  }\r\n  public isHighlightTaskUpdate(taskTemp: BireTaskDTOId): void {\r\n    this.taskFormService.isHighlightUpdate().subscribe((result) => {\r\n      this.highlightUpdate = result;\r\n      if (result) {\r\n        this.getUpdatedFields(taskTemp);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getUpdatedFields(taskTemp: BireTaskDTOId): void {\r\n    this.taskFormService.getTaskLastUpdatedFields(taskTemp).subscribe((result) => {\r\n      this.updatedFieldIds = result;\r\n      if (this.updatedFieldIds.length > 0) {\r\n        this.getPrevisousTaskVersion(taskTemp);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPrevisousTaskVersion(taskTemp: BireTaskDTOId): void {\r\n    this.resetHightlightTabs();\r\n    this.taskFormService.getPreviousTaskByTaskVersion(taskTemp).subscribe((result) => {\r\n      if (result) {\r\n        this.taskFormService.findLastBireMaintenanceProgramsByTask(result).subscribe((lastMP) => {\r\n          this.previousTaskVersionLastMP = lastMP;\r\n        });\r\n        this.previousTaskVersion = result;\r\n        this.getDiff();\r\n      }\r\n    });\r\n  }\r\n\r\n  public isUpdatedField(field: string): boolean {\r\n    if (this.highlightUpdate && this.updatedFieldIds && this.updatedFieldIds.indexOf(field) !== -1) {\r\n      this.highlightTabs(field);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private resetHightlightTabs(): void {\r\n    this.highlightHome = false;\r\n    this.highlightTaskCard = false;\r\n    this.highlightImpacts = false;\r\n    this.highlightPrerequisites = false;\r\n    this.highlightAttributes = false;\r\n    this.highlightDocuments = false;\r\n    this.highlightMeasurementPoint = false;\r\n  }\r\n\r\n  private getDiff(): void {\r\n    if (!this.highlightUpdate) {\r\n      return;\r\n    }\r\n    const descDiff = this.dmp.diff_main(this.previousTaskVersion.taskDescription, this.task.taskDescription);\r\n    const designDiff = this.dmp.diff_main(this.previousTaskVersion.taskDesignation, this.task.taskDesignation);\r\n    this.dmp.diff_cleanupSemantic(designDiff);\r\n    this.dmp.diff_cleanupSemantic(descDiff);\r\n    this.taskDesignationDiff = this.dmp.diff_prettyHtml(designDiff);\r\n    this.taskDescriptionDiff = this.dmp.diff_prettyHtml(descDiff);\r\n  }\r\n\r\n  private highlightTabs(field: string): void {\r\n    if (field) {\r\n      if (field.startsWith(TaskFieldsConstant.TASK_CARD)) {\r\n        this.highlightTaskCard = true;\r\n      } else if (field.startsWith(TaskFieldsConstant.IMPACTS)) {\r\n        this.highlightImpacts = true;\r\n      } else if (field.startsWith(TaskFieldsConstant.PREREQUISITES)) {\r\n        this.highlightPrerequisites = true;\r\n      } else if (field.startsWith(TaskFieldsConstant.ATTRIBUTES)) {\r\n        this.highlightAttributes = true;\r\n      } else if (field.startsWith(TaskFieldsConstant.DOCUMENTS)) {\r\n        this.highlightDocuments = true;\r\n      } else if (field.startsWith(TaskFieldsConstant.MEASUREMENT_POINT)) {\r\n        this.highlightMeasurementPoint = true;\r\n      } else {\r\n        this.highlightHome = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  private createEvolutionRow(evolution: BireTaskEvolutionDTO): EvolutionRow {\r\n    const evolutionLinkType: LabelValue<string>[] = this.evolutionLinkTypes.filter(\r\n      (type) => type.value === evolution.taskEvolutionTypeCode\r\n    );\r\n    const evolutionRow: EvolutionRow = {\r\n      evolutionNumber: StringUtils.orEmpty(evolution.evolutionNumber),\r\n      evolutionRevisionNumber: StringUtils.orEmpty(evolution.evolutionRevisionNumber),\r\n      designation: '',\r\n      taskEvolutionTypeCode: evolutionLinkType.length ? evolutionLinkType[0].label : '',\r\n      _obj: evolution\r\n    };\r\n\r\n    return evolutionRow;\r\n  }\r\n\r\n  private createMaintainedItemRow(obj: BireTaskItemWithItemDTO): MaintainedItemRow {\r\n    const selectedLinkType = this.itemLinkTypes.find((type) => type.value === obj.taskItemTypeCode);\r\n    const selectedStructureType = this.structureType.find((structureType) => structureType.value === obj.structureType);\r\n\r\n    let familyVariant = StringUtils.orEmpty(obj.familyCode);\r\n    familyVariant +=\r\n      selectedStructureType && !StringUtils.isNullOrEmpty(selectedStructureType.label)\r\n        ? `-${StringUtils.orEmpty(selectedStructureType.label)}`\r\n        : '';\r\n    familyVariant += StringUtils.isNullOrEmpty(obj.variantCode) ? '' : `-${StringUtils.orEmpty(obj.variantCode)}`;\r\n\r\n    const item = `${obj.chapter}-${obj.section}-${obj.subject}-${obj.sheet}-${obj.marks}`;\r\n\r\n    const row: MaintainedItemRow = {\r\n      familyVariant,\r\n      item,\r\n      designation: !!obj.bireItemDTO && !!obj.bireItemDTO.name ? obj.bireItemDTO.name : '',\r\n      linkType: selectedLinkType ? StringUtils.orEmpty(selectedLinkType.label) : '',\r\n      versionNumber: StringUtils.orEmpty(obj.versionNumber),\r\n      field: this.translateService.instant(this.getTranslateKey('openField')),\r\n      _obj: obj\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  private fillDesignationInEvolutionTable(): void {\r\n    this.evolutionsTableDataSource.dataSrc.forEach((row) => {\r\n      const input: BireEvolutionDTOId = {\r\n        evolutionRevisionNumber: row._obj.evolutionRevisionNumber,\r\n        evolutionNumber: row._obj.evolutionNumber\r\n      };\r\n      this.taskFormService.findBireEvolution(input).subscribe(\r\n        (result) => {\r\n          row.designation = StringUtils.orEmpty(result.evolutionSummary);\r\n        },\r\n        () => {\r\n          row.designation = '';\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  private setTableOfContent(): void {\r\n    const documentsKey = this.getTranslateKey('documents');\r\n    const generalKey = this.getTranslateKey('general');\r\n    const descriptionKey = this.getTranslateKey('taskDescription');\r\n    const impactsKey = this.getTranslateKey('impacts');\r\n    const mainInformationKey = this.getTranslateKey('mainData');\r\n    const manualsKey = this.getTranslateKey('manuals');\r\n    const prerequisitesKey = this.getTranslateKey('prerequisites');\r\n    const taskCardKey = this.getTranslateKey('taskCard');\r\n    const measurementPointsKey = this.getTranslateKey('measurementPoints');\r\n    this.translateService\r\n      .get([\r\n        documentsKey,\r\n        generalKey,\r\n        descriptionKey,\r\n        impactsKey,\r\n        mainInformationKey,\r\n        manualsKey,\r\n        prerequisitesKey,\r\n        taskCardKey,\r\n        measurementPointsKey\r\n      ])\r\n      .subscribe((results: string[]) => {\r\n        const documentsLabel = !!results ? results[documentsKey] : 'Documents';\r\n        const generalLabel = !!results ? results[generalKey] : 'General';\r\n        const descriptionLabel = !!results ? results[descriptionKey] : 'Description';\r\n        const impactsLabel = !!results ? results[impactsKey] : 'Impacts';\r\n        const mainInformationLabel = !!results ? results[mainInformationKey] : 'Main Information';\r\n        const manualsLabel = !!results ? results[manualsKey] : 'Manuals';\r\n        const prerequisitesLabel = !!results ? results[prerequisitesKey] : 'Prerequisites';\r\n        const taskCardLabel = !!results ? results[taskCardKey] : 'Task Card';\r\n        const measurementPointsLabel = !!results ? results[measurementPointsKey] : 'Measurement Points';\r\n\r\n        this.toc = [\r\n          {\r\n            id: 'mainInformationAnchor',\r\n            anchor: this.mainInformationEltRef,\r\n            label: mainInformationLabel\r\n          },\r\n          {\r\n            id: 'taskCardAnchor',\r\n            anchor: this.taskCardEltRef,\r\n            label: taskCardLabel\r\n          },\r\n          {\r\n            id: 'generalAnchor',\r\n            anchor: this.generalEltRef,\r\n            label: generalLabel\r\n          },\r\n          {\r\n            id: 'descriptionTabAnchor',\r\n            anchor: this.descriptionElRef,\r\n            label: descriptionLabel\r\n          },\r\n          {\r\n            id: 'impactsAnchor',\r\n            anchor: this.impactsEltRef,\r\n            label: impactsLabel\r\n          },\r\n          {\r\n            id: 'manualsAnchor',\r\n            anchor: this.manualsEltRef,\r\n            label: manualsLabel\r\n          },\r\n          {\r\n            id: 'prerequisitesAnchor',\r\n            anchor: this.prerequisitesEltRef,\r\n            label: prerequisitesLabel\r\n          },\r\n          {\r\n            id: 'documentsAnchor',\r\n            anchor: this.documentsEltRef,\r\n            label: documentsLabel\r\n          },\r\n          {\r\n            id: 'measurementPointsAnchor',\r\n            anchor: this.measurementPointsEltRef,\r\n            label: measurementPointsLabel\r\n          }\r\n        ];\r\n        super.selectPageTocEntry(this.component.MAIN_INFORMATION_ANCHOR_ID);\r\n      });\r\n  }\r\n\r\n  private sortOperationTable(): void {\r\n    this.operationTableDataSource.dataSrc.sort((e1, e2) => {\r\n      if (!ObjectUtils.isDefined(e1.opeSequenceNumber)) {\r\n        return 1;\r\n      } else if (!ObjectUtils.isDefined(e2.opeSequenceNumber)) {\r\n        return -1;\r\n      } else {\r\n        const s1 = e1.opeSequenceNumber as number;\r\n        const s2 = e2.opeSequenceNumber as number;\r\n\r\n        return s1 < s2 ? -1 : s1 > s2 ? 1 : 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Measurement Points\r\n   *************************************************************************/\r\n  private loadMeasurementPointsTable(bireTaskDTOId: BireTaskDTOId) {\r\n    this.measurementPointsTableDataSource.setData([]);\r\n    this.taskFormService.findAllBireTaskMeasurementPoint(bireTaskDTOId).subscribe(\r\n      (results) => {\r\n        if (!!results) {\r\n          this.measurementPointsTableDataSource.setData(results);\r\n          this.sortMeasurementPointsTable();\r\n        }\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnFindTilTasks'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private sortMeasurementPointsTable(): void {\r\n    this.measurementPointsTableDataSource.dataSrc.sort((a, b) => {\r\n      if (!!a.groupCode && !!b.groupCode && a.groupCode !== b.groupCode) {\r\n        const groupCodeA = a.groupCode.toLowerCase();\r\n        const groupCodeB = b.groupCode.toLowerCase();\r\n\r\n        return groupCodeA > groupCodeB ? 1 : -1;\r\n      } else if (!a.groupCode && b.groupCode && b.groupCode.toLowerCase()) {\r\n        return -1;\r\n      } else if (!b.groupCode && a.groupCode && a.groupCode.toLowerCase()) {\r\n        return 1;\r\n      } else {\r\n        return !!a.sequenceNumber && !!b.sequenceNumber ? a.sequenceNumber - b.sequenceNumber : 0;\r\n      }\r\n    });\r\n\r\n    this.measurementPointsTableDataSource.setData(this.measurementPointsTableDataSource.dataSrc);\r\n  }\r\n\r\n  private getMaxLinkedGroupNumber(): number {\r\n    let maxLinkedGroupId = 0;\r\n    const linkNumber: number[] = [];\r\n    this.measurementPointsTableDataSource.dataSrc.forEach((row) => {\r\n      if (!!row.groupCode && row.groupCode.indexOf(this.component.LINK_MEASURE_ROW) === 0) {\r\n        const linkRow = Number(row.groupCode.replace(this.component.LINK_MEASURE_ROW, '').trim());\r\n        linkNumber.push(linkRow);\r\n      }\r\n    });\r\n\r\n    if (linkNumber.length > 0) {\r\n      maxLinkedGroupId = Math.max(...linkNumber);\r\n    }\r\n\r\n    return maxLinkedGroupId;\r\n  }\r\n\r\n  public addMeasurementPoint(): void {\r\n    this.measurementPointRowData = undefined;\r\n    this.measurementPointDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showMeasurementPointDialog = true;\r\n  }\r\n\r\n  public updateMeasurementPoint(): void {\r\n    if (\r\n      this.measurementPointsTableDataSource.hasDataSelection &&\r\n      this.measurementPointsTableDataSource.dataSelectionCount === 1\r\n    ) {\r\n      this.measurementPointRowData = { ...this.measurementPointsTableDataSource.dataSelection[0] };\r\n      const counterCode = this.measurementPointRowData.counterCode;\r\n\r\n      this.isLinkedRefMeasurementCode = this.measurementPointsTableDataSource.dataSrc\r\n        .filter((row) => {\r\n          return !!row.counterCode && row.counterCode !== counterCode;\r\n        })\r\n        .some((mpoint) => {\r\n          return (\r\n            !!this.measurementPointRowData &&\r\n            mpoint.unitCode === this.component.BOOLEAN &&\r\n            !!mpoint.groupCode &&\r\n            mpoint.groupCode === this.measurementPointRowData.groupCode\r\n          );\r\n        });\r\n\r\n      this.measurementPointDialogOpenMode = ComponentOpenMode.Write;\r\n      this.showMeasurementPointDialog = true;\r\n    }\r\n  }\r\n\r\n  public openMeasurementPoint(): void {\r\n    if (this.measurementPointsTableDataSource.dataSelectionCount === 1) {\r\n      this.measurementPointDialogOpenMode = ComponentOpenMode.Read;\r\n      this.measurementPointRowData = { ...this.measurementPointsTableDataSource.dataSelection[0] };\r\n      this.showMeasurementPointDialog = true;\r\n    }\r\n  }\r\n\r\n  public onValidatedMeasurementRow(rowData: BireTaskMeasurementPointTableDTO): void {\r\n    if (!!rowData) {\r\n      if (!this.hasDuplicateMeasureCode(rowData)) {\r\n        if (this.measurementPointsTableDataSource.hasDataSelection) {\r\n          this.measurementPointsTableDataSource.replaceData(\r\n            this.measurementPointsTableDataSource.dataSelection[0],\r\n            rowData\r\n          );\r\n\r\n          this.measurementPointsTableDataSource.dataSelection = [];\r\n        } else {\r\n          this.measurementPointsTableDataSource.addData([rowData]);\r\n        }\r\n\r\n        this.measurementPointRowData = undefined;\r\n        this.sortMeasurementPointsTable();\r\n\r\n        this.removeBireTaskMeasurementList.forEach((element, index) => {\r\n          if (element.counterCode === rowData.counterCode) {\r\n            this.removeBireTaskMeasurementList.splice(index, 1);\r\n          }\r\n        });\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('duplicateMeasureCode'));\r\n      }\r\n    }\r\n  }\r\n\r\n  private hasDuplicateMeasureCode(rowData: BireTaskMeasurementPointTableDTO): boolean {\r\n    let measurementPointList = [...this.measurementPointsTableDataSource.dataSrc];\r\n    if (this.measurementPointsTableDataSource.hasDataSelection) {\r\n      const selectedMeasurementRow = this.measurementPointsTableDataSource.dataSelection[0];\r\n\r\n      // Return all the rows except selected rows\r\n      measurementPointList = this.measurementPointsTableDataSource.dataSrc.filter((mprow) => {\r\n        return selectedMeasurementRow.counterCode !== mprow.counterCode;\r\n      });\r\n    }\r\n\r\n    // check whether any other rows have same counter code of row data or not\r\n    const hasAnyDuplicateRow = measurementPointList.some((row) => {\r\n      return row.counterCode === rowData.counterCode;\r\n    });\r\n\r\n    return hasAnyDuplicateRow;\r\n  }\r\n  public showMeasurementPointFormulaButton(): boolean {\r\n    let hasRowsBooleanType = false;\r\n    if (\r\n      this.measurementPointsTableDataSource.dataSelectionCount === 1 &&\r\n      this.measurementPointsTableDataSource.dataSelection[0].unitCode &&\r\n      this.measurementPointsTableDataSource.dataSelection[0].unitCode !== this.component.BOOLEAN &&\r\n      this.measurementPointsTableDataSource.dataSelection[0].unitCode !== this.component.TEXT\r\n    ) {\r\n      hasRowsBooleanType = true;\r\n    }\r\n\r\n    return hasRowsBooleanType;\r\n  }\r\n  public showMeasurementPointLinkButton(): boolean {\r\n    let hasRowsBooleanType = false;\r\n    if (\r\n      this.measurementPointsTableDataSource.hasDataSelection &&\r\n      this.measurementPointsTableDataSource.dataSelectionCount > 1\r\n    ) {\r\n      hasRowsBooleanType = this.measurementPointsTableDataSource.dataSelection.every((mpRow) => {\r\n        return mpRow.unitCode === this.component.BOOLEAN && !mpRow.groupCode;\r\n      });\r\n    }\r\n\r\n    return hasRowsBooleanType;\r\n  }\r\n\r\n  public showMeasurementPointUnLinkButton(): boolean {\r\n    let hasRowsLinked = false;\r\n    if (this.measurementPointsTableDataSource.dataSelectionCount === 1) {\r\n      hasRowsLinked = this.measurementPointsTableDataSource.dataSelection.some((mpRow) => {\r\n        return !!mpRow.groupCode && mpRow.unitCode === this.component.BOOLEAN;\r\n      });\r\n    }\r\n\r\n    return hasRowsLinked;\r\n  }\r\n\r\n  public deleteMeasurementPoints(selectedRows: BireTaskMeasurementPointTableDTO[]): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(\r\n        selectedRows.length === 1 ? 'confirmDeleteSelectedMeasurementPoint' : 'confirmDeleteSelectedMeasurementPoints'\r\n      ),\r\n      accept: () => {\r\n        selectedRows.map((receipt) =>\r\n          this.removeBireTaskMeasurementList.push({\r\n            counterCode: receipt.counterCode as string,\r\n            taskCode: this.task.taskCode as string,\r\n            taskVersion: this.task.taskVersion as string\r\n          })\r\n        );\r\n\r\n        const measurementPointList = this.measurementPointsTableDataSource.dataSrc.filter((mprow) => {\r\n          return !selectedRows.some((deletedRow) => {\r\n            return deletedRow.counterCode === mprow.counterCode && deletedRow.sequenceNumber === mprow.sequenceNumber;\r\n          });\r\n        });\r\n\r\n        this.measurementPointsTableDataSource.setData(measurementPointList);\r\n        this.sortMeasurementPointsTable();\r\n      }\r\n    });\r\n  }\r\n\r\n  public linkMeasurementPoints(): void {\r\n    if (this.measurementPointsTableDataSource.dataSelectionCount > 1) {\r\n      const maxLinkedGroupId = this.getMaxLinkedGroupNumber() + 1;\r\n      this.measurementPointsTableDataSource.dataSelection.forEach((mpoint) => {\r\n        mpoint.groupCode = `${this.component.LINK_MEASURE_ROW} ${maxLinkedGroupId}`;\r\n      });\r\n    }\r\n  }\r\n\r\n  public unLinkMeasurementPoints(): void {\r\n    if (this.measurementPointsTableDataSource.dataSelectionCount === 1) {\r\n      const relatedGroupCodeList = this.measurementPointsTableDataSource.dataSrc.filter((mpoint) => {\r\n        return mpoint.groupCode === (this.measurementPointsTableDataSource.dataSelection[0].groupCode as string);\r\n      });\r\n      if (!!relatedGroupCodeList) {\r\n        relatedGroupCodeList.forEach((mpoints) => {\r\n          mpoints.groupCode = undefined;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public toolMeasurementPoint(): void {\r\n    if (this.task) {\r\n      this.pnTaskSearchInput = {\r\n        taskCode: this.task.taskCode,\r\n        taskVersion: this.task.taskVersion\r\n      };\r\n    }\r\n    this.showAddMeasurementPointToolDialog = true;\r\n  }\r\n  public formulaMeasurementPoint(): void {\r\n    this.showAddMeasurementPointFormulaDialog = true;\r\n  }\r\n\r\n  public setSelectedTool(event: BirePnDTO) {\r\n    this.measurementPointsTableDataSource.dataSelection[0].toolPartNumber = !!event ? event.pnCode : '';\r\n    this.measurementPointsTableDataSource.update();\r\n  }\r\n\r\n  public setFormula(event: string) {\r\n    this.measurementPointsTableDataSource.dataSelection[0].formula = event;\r\n    this.measurementPointsTableDataSource.update();\r\n  }\r\n\r\n  public showStatus(): void {\r\n    const overlayRef = this._overlayService.openWithPositionCenter<string | undefined>({\r\n      content: ObjectStatusComponent,\r\n      data: {\r\n        currentAuthor: this.task.statusUser,\r\n        currentDate: this.task.statusDate,\r\n        currentStatus: {\r\n          label: this._formatSelectOption.transform(this.task.taskStatus, this.workflowStatus),\r\n          value: this.task.taskStatus\r\n        },\r\n        nextStatuses: this.workflowStatus\r\n      }\r\n    });\r\n\r\n    overlayRef.afterClosed$.subscribe({\r\n      next: (event) => {\r\n        if (event.data) {\r\n          this.task.taskStatus = event.data;\r\n          this.saveTask();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * upgradeTask() - This function is used to create Task with the new Version.\r\n   * @returns void\r\n   */\r\n  public upgradeTask(): void {\r\n    if (!!this.componentData.objectId) {\r\n      const currentTask: BireTaskDTOId = {\r\n        taskCode: this.serializationService.deserialize(this.componentData.objectId).taskCode,\r\n        taskVersion: this.serializationService.deserialize(this.componentData.objectId).taskVersion\r\n      };\r\n      this.taskFormService.checkAndReturnNewVersionNumberByTask(currentTask).subscribe((newTaskVersion) => {\r\n        const partialMessageKey = this.getTranslateKey('upgradeConfirmation');\r\n        // TODO: need to add util to get complete plan code\r\n        this.confirmationService.confirm({\r\n          interpolateParams: { taskversion: `${currentTask.taskCode} : ${newTaskVersion}` },\r\n          messageKey: partialMessageKey,\r\n          accept: () => {\r\n            this.taskFormService.checkNewVersionNumberAndUpgradeBireTaskData(currentTask).subscribe((upgradeTask) => {\r\n              if (!!this.componentData) {\r\n                this.componentData.objectId = this.serializationService.serialize({\r\n                  taskCode: upgradeTask.taskCode,\r\n                  taskVersion: upgradeTask.taskVersion\r\n                });\r\n              }\r\n              this.ngOnInit();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public initCostSettingDisplay(): void {\r\n    this.propertiesService\r\n      .getValue(GenericPropertyConstants.AEROWEBB_CONFIGURATION_MAP)\r\n      .subscribe((awConfiguration) => {\r\n        this.isCostSettingEnabled = SettingsUtils.isPropertyEnabled(\r\n          awConfiguration,\r\n          AWPropertiesConstants.DISPLAY_COST\r\n        );\r\n      });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AircraftMaintenanceApi } from '../../../../shared/api/aircraft-maintenance.api';\r\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\r\nimport { StatusManagementApi } from '../../../../shared/api/status-management.api';\r\nimport { TaskBusinessApi } from '../../../../shared/api/task-business.api';\r\nimport { TaskHistoryApi } from '../../../../shared/api/task-history.api';\r\nimport { TaskManagementApi } from '../../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { FindBireEvolutionsByEvolutionCriteriaInput } from '../../../../shared/types/api-input-types/product-structure-management/find-bire-evolutions-by-evolution-criteria-input.interface';\r\nimport { FindBireItemsBySearchCriteriaInput } from '../../../../shared/types/api-input-types/product-structure-management/find-bire-items-by-search-criteria-input.interface';\r\nimport { FindFamilyVariantInput } from '../../../../shared/types/api-input-types/product-structure-management/find-family-variant-input.interface';\r\nimport { FindBireQualificationsBySearchCriteriaInput } from '../../../../shared/types/api-input-types/task-management/find-bire-qualifications-by-search-criteria-input.interface';\r\nimport { PnTaskSearchInput } from '../../../../shared/types/api-input-types/task-management/pn-task-search-input.interface';\r\nimport { BireTaskMeasurementPointTableDTO } from '../../../../shared/types/api-output-types/task-management/bire-task-measurement-point-table-dto.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\nimport { BireDocumentDTO } from '../../../../shared/types/api-types/bire-document-dto.interface';\r\nimport { BireEvolutionDTOId } from '../../../../shared/types/api-types/bire-evolution-dto-id.interface';\r\nimport { BireEvolutionDTO } from '../../../../shared/types/api-types/bire-evolution-dto.interface';\r\nimport { BireItemDTOId } from '../../../../shared/types/api-types/bire-item-dto-id.interface';\r\nimport { BireItemDTO } from '../../../../shared/types/api-types/bire-item-dto.interface';\r\nimport { BireMaintenancePlanDTO } from '../../../../shared/types/api-types/bire-maintenance-plan-dto.interface';\r\nimport { BireMeasureReferenceDTO } from '../../../../shared/types/api-types/bire-measure-reference-dto.interface';\r\nimport { BireOperationDTO } from '../../../../shared/types/api-types/bire-operation-dto.interface';\r\nimport { BirePlanAttributeDTO } from '../../../../shared/types/api-types/bire-plan-attribute-dto.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { BireQualificationDTO } from '../../../../shared/types/api-types/bire-qualification-dto.interface';\r\nimport { BireSmTaskDTO } from '../../../../shared/types/api-types/bire-sm-task-dto.interface';\r\nimport { BireTaskAttributeDTOId } from '../../../../shared/types/api-types/bire-task-attribute-dto-id.interface';\r\nimport { BireTaskAttributeDTO } from '../../../../shared/types/api-types/bire-task-attribute-dto.interface';\r\nimport { BireTaskDTOId } from '../../../../shared/types/api-types/bire-task-dto-id.interface';\r\nimport { BireTaskDTO } from '../../../../shared/types/api-types/bire-task-dto.interface';\r\nimport { BireTaskEvolutionDTO } from '../../../../shared/types/api-types/bire-task-evolution-dto.interface';\r\nimport { BireTaskItemWithItemDTO } from '../../../../shared/types/api-types/bire-task-item-with-item-dto.interface';\r\nimport { BireTilDTO } from '../../../../shared/types/api-types/bire-til-dto.interface';\r\nimport { FamilyVariantDTO } from '../../../../shared/types/api-types/family-variant-dto.interface';\r\nimport { FindBireTaskByCriteriaInput } from '../../../../shared/types/api-types/find-bire-task-by-criteria-input.interface';\r\nimport { GetMaintainanceProgramWithTaskDTO } from '../../../../shared/types/api-types/get-maintainance-program-with-task-dto.interface';\r\nimport { GetTaskLinkInAdequateTableDTO } from '../../../../shared/types/api-types/get-task-link-in-adequate-table-dto.interface';\r\nimport { HBireTaskAttributeDTO } from '../../../../shared/types/api-types/h-bire-task-attribute-dto.interface';\r\nimport { ObjectStatusDTO } from '../../../../shared/types/api-types/object-status-dto.interface';\r\nimport { SaveTaskScreenInput } from '../../../../shared/types/api-types/save-task-screen-input.interface';\r\nimport { SearchResultsDTO } from '../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class TaskFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly taskHistoryApi: TaskHistoryApi,\r\n    private readonly taskManagementApi: TaskManagementApi,\r\n    private readonly taskBusinessApi: TaskBusinessApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly aircraftMaintenanceApi: AircraftMaintenanceApi,\r\n    private readonly statusManagementApi: StatusManagementApi,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBireTaskOperationsByTask(bireTaskDTOId: BireTaskDTOId): Observable<BireOperationDTO[]> {\r\n    return super.post<BireTaskDTOId, BireOperationDTO[]>(\r\n      this.taskManagementApi.findBireTaskOperationsByTask,\r\n      bireTaskDTOId\r\n    );\r\n  }\r\n\r\n  public getSubContracting(bireTaskDTO: BireTaskDTO): Observable<string> {\r\n    return super.post<BireTaskDTO, string>(this.aircraftMaintenanceApi.getSubcontractingTypeByTask, bireTaskDTO);\r\n  }\r\n\r\n  public getTaskLinkInAdequate(bireTaskDTO: BireTaskDTO): Observable<GetTaskLinkInAdequateTableDTO> {\r\n    return super.post<BireTaskDTO, GetTaskLinkInAdequateTableDTO>(\r\n      this.taskManagementApi.getTaskLinkInAdequate,\r\n      bireTaskDTO\r\n    );\r\n  }\r\n\r\n  public findBireTaskEvolutionsByTask(bireTaskDTOId: BireTaskDTOId): Observable<BireTaskEvolutionDTO[]> {\r\n    return super.post<BireTaskDTOId, BireTaskEvolutionDTO[]>(\r\n      this.taskManagementApi.findBireTaskEvolutionsByTask,\r\n      bireTaskDTOId\r\n    );\r\n  }\r\n\r\n  public findBireTaskItemsWithItemByTask(bireTaskDTOId: BireTaskDTOId): Observable<BireTaskItemWithItemDTO[]> {\r\n    return super.post<BireTaskDTOId, BireTaskItemWithItemDTO[]>(\r\n      this.taskManagementApi.findBireTaskItemsWithItemByTask,\r\n      bireTaskDTOId\r\n    );\r\n  }\r\n\r\n  public findBireSmTasksByTask(bireTaskDTOId: BireTaskDTOId): Observable<BireSmTaskDTO[]> {\r\n    return super.post<BireTaskDTOId, BireSmTaskDTO[]>(this.taskManagementApi.findBireSmTasksByTask, bireTaskDTOId);\r\n  }\r\n\r\n  public findBireQualificationsBySearchCriteria(\r\n    bireTaskDTO: BireTaskDTO\r\n  ): Observable<SearchResultsDTO<BireQualificationDTO>> {\r\n    const params: FindBireQualificationsBySearchCriteriaInput = {\r\n      bireTask: bireTaskDTO,\r\n      bireQualification: {}\r\n    };\r\n\r\n    return super.post<FindBireQualificationsBySearchCriteriaInput, SearchResultsDTO<BireQualificationDTO>>(\r\n      this.taskManagementApi.findBireQualificationsBySearchCriteria,\r\n      params\r\n    );\r\n  }\r\n\r\n  public findBireDocumentsByTask(bireTaskDTOId: BireTaskDTOId): Observable<BireDocumentDTO[]> {\r\n    return super.post<BireTaskDTOId, BireDocumentDTO[]>(this.taskManagementApi.findBireDocumentsByTask, bireTaskDTOId);\r\n  }\r\n\r\n  public findBireTilTasksByTask(bireTaskDTO: BireTaskDTO): Observable<BireTilDTO[]> {\r\n    return super.post<BireTaskDTO, BireTilDTO[]>(this.taskManagementApi.findBireTilTasksByTask, bireTaskDTO);\r\n  }\r\n\r\n  public findBireMaintenanceProgramsByTask(bireTaskDTO: BireTaskDTO): Observable<GetMaintainanceProgramWithTaskDTO[]> {\r\n    return super.post<BireTaskDTO, GetMaintainanceProgramWithTaskDTO[]>(\r\n      this.taskManagementApi.findBireMaintenanceProgramsByTask,\r\n      bireTaskDTO\r\n    );\r\n  }\r\n\r\n  public findLastBireMaintenanceProgramsByTask(\r\n    bireTaskDTO: BireTaskDTO\r\n  ): Observable<GetMaintainanceProgramWithTaskDTO> {\r\n    return super.post<BireTaskDTO, GetMaintainanceProgramWithTaskDTO>(\r\n      this.taskManagementApi.findLastBireMaintenanceProgramsByTask,\r\n      bireTaskDTO\r\n    );\r\n  }\r\n\r\n  public findAllBireTils(): Observable<BireTilDTO[]> {\r\n    return super.post<void, BireTilDTO[]>(this.taskManagementApi.findAllBireTils);\r\n  }\r\n\r\n  public getTaskGroups(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.taskManagementApi.findAllBireTaskGroups);\r\n  }\r\n\r\n  public findBireOperationsBySearchCriteria(\r\n    criteria: BireOperationDTO\r\n  ): Observable<SearchResultsDTO<BireOperationDTO>> {\r\n    return super.post<BireOperationDTO, SearchResultsDTO<BireOperationDTO>>(\r\n      this.taskManagementApi.findBireOperationsBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public findBireTasksByCriteria(): Observable<SearchResultsDTO<BireTaskDTO>> {\r\n    const criteria = {\r\n      bireTaskDTO: {\r\n        taskCode: '',\r\n        taskVersion: ''\r\n      },\r\n      familyCode: '',\r\n      structureType: '',\r\n      variantCode: '',\r\n      taskTypeCodeExcluded: ''\r\n    };\r\n\r\n    return super.post<FindBireTaskByCriteriaInput, SearchResultsDTO<BireTaskDTO>>(\r\n      this.taskManagementApi.findBireTasksByCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public findBireTask(input: BireTaskDTOId): Observable<BireTaskDTO> {\r\n    return super.post<BireTaskDTOId, BireTaskDTO>(this.taskManagementApi.findBireTask, input);\r\n  }\r\n\r\n  public findBireEvolutionsByEvolutionCriteria(\r\n    criteria: BireEvolutionDTO,\r\n    familyCode?: string,\r\n    structureType?: string,\r\n    variantCode?: string\r\n  ): Observable<SearchResultsDTO<BireEvolutionDTO>> {\r\n    const params: FindBireEvolutionsByEvolutionCriteriaInput = {\r\n      bireEvolutionDTO: criteria,\r\n      familyCode,\r\n      structureType,\r\n      variantCode\r\n    };\r\n\r\n    return super.post<FindBireEvolutionsByEvolutionCriteriaInput, SearchResultsDTO<BireEvolutionDTO>>(\r\n      this.productStructureManagementApi.findBireEvolutionsByEvolutionCriteria,\r\n      params\r\n    );\r\n  }\r\n\r\n  public findBireItemsBySearchCriteria(\r\n    familyCode: string,\r\n    structureType: string,\r\n    variantCode: string\r\n  ): Observable<SearchResultsDTO<BireItemDTO>> {\r\n    const params: FindBireItemsBySearchCriteriaInput = {\r\n      bireItemDTOCriteria: {\r\n        familyCode,\r\n        structureType,\r\n        variantCode\r\n      },\r\n      pnCode: undefined,\r\n      attribute: undefined\r\n    };\r\n\r\n    return super.post<FindBireItemsBySearchCriteriaInput, SearchResultsDTO<BireItemDTO>>(\r\n      this.productStructureManagementApi.findBireItemsBySearchCriteria,\r\n      params\r\n    );\r\n  }\r\n\r\n  public findFamilyVariant(input: FindFamilyVariantInput): Observable<FamilyVariantDTO[]> {\r\n    return super.post<FindFamilyVariantInput, FamilyVariantDTO[]>(\r\n      this.productStructureManagementApi.findFamilyVariant,\r\n      input\r\n    );\r\n  }\r\n\r\n  public findBireAttributesByCategory(category: string): Observable<BireAttributeDTO[]> {\r\n    return super.post<string, BireAttributeDTO[]>(\r\n      this.productStructureManagementApi.findBireAttributesByCategory,\r\n      category\r\n    );\r\n  }\r\n\r\n  public findBireTaskAttributeByTask(task: BireTaskDTO): Observable<BireTaskAttributeDTO[]> {\r\n    const taskId: BireTaskDTOId = {\r\n      taskCode: task.taskCode as string,\r\n      taskVersion: task.taskVersion as string\r\n    };\r\n\r\n    return super.post<BireTaskDTOId, BireTaskAttributeDTO[]>(\r\n      this.taskManagementApi.findBireTaskAttributeByTask,\r\n      taskId\r\n    );\r\n  }\r\n\r\n  public saveTask(task: SaveTaskScreenInput): Observable<boolean> {\r\n    return super.post<SaveTaskScreenInput, boolean>(this.taskManagementApi.saveTask, task);\r\n  }\r\n\r\n  public findBireItemVersionsByItem(item: BireItemDTOId): Observable<LabelValue<string>[]> {\r\n    return super.post<BireItemDTOId, LabelValue<string>[]>(\r\n      this.productStructureManagementApi.findBireItemVersionsByItem,\r\n      item\r\n    );\r\n  }\r\n\r\n  public getLocalCurrency(): Observable<string> {\r\n    return super.post<void, string>(this.taskManagementApi.getLocalCurrency);\r\n  }\r\n\r\n  public getFuncObjectStatusMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue('getFuncObjectStatusMap');\r\n  }\r\n\r\n  public getObjectStatusMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue('getObjectStatusMap');\r\n  }\r\n\r\n  public findHBireTaskAttributesByAttributeId(ids: BireTaskAttributeDTOId[]): Observable<HBireTaskAttributeDTO[]> {\r\n    return super.post<BireTaskAttributeDTOId[], HBireTaskAttributeDTO[]>(\r\n      this.taskHistoryApi.findHBireTaskAttributesByAttributeId,\r\n      ids\r\n    );\r\n  }\r\n\r\n  public findBireEvolution(input: BireEvolutionDTOId): Observable<BireEvolutionDTO> {\r\n    return super.post<BireEvolutionDTOId, BireEvolutionDTO>(\r\n      this.productStructureManagementApi.findBireEvolution,\r\n      input\r\n    );\r\n  }\r\n\r\n  public findBireItem(input: BireItemDTOId): Observable<BireItemDTO> {\r\n    return super.post<BireItemDTOId, BireItemDTO>(this.productStructureManagementApi.findBireItem, input);\r\n  }\r\n\r\n  public updateStaus(input: ObjectStatusDTO): Observable<void> {\r\n    return super.post<ObjectStatusDTO, void>(this.statusManagementApi.updateStatusGlobal, input);\r\n  }\r\n\r\n  public findAllBireUnitMeasures(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.productStructureManagementApi.findAllBireUnitMeasures);\r\n  }\r\n\r\n  public findBireMeasureReferencesBySearchCriteria(\r\n    bireMeasureReferenceDTO: BireMeasureReferenceDTO\r\n  ): Observable<BireMeasureReferenceDTO[]> {\r\n    return super.post<BireMeasureReferenceDTO, BireMeasureReferenceDTO[]>(\r\n      this.productStructureManagementApi.findBireMeasureReferencesBySearchCriteria,\r\n      bireMeasureReferenceDTO\r\n    );\r\n  }\r\n\r\n  public findAllBireTaskMeasurementPoint(input: BireTaskDTOId): Observable<BireTaskMeasurementPointTableDTO[]> {\r\n    return super.post<BireTaskDTOId, BireTaskMeasurementPointTableDTO[]>(\r\n      this.taskManagementApi.findAllBireTaskMeasurementPoint,\r\n      input\r\n    );\r\n  }\r\n\r\n  public getTaskLastUpdatedFields(input: BireTaskDTOId): Observable<string[]> {\r\n    return super.post<BireTaskDTOId, string[]>(this.taskBusinessApi.getTaskLastUpdatedFields, input);\r\n  }\r\n\r\n  public getPreviousTaskByTaskVersion(input: BireTaskDTO): Observable<BireTaskDTO> {\r\n    return super.post<BireTaskDTO, BireTaskDTO>(this.taskBusinessApi.getPreviousTaskByTaskVersion, input);\r\n  }\r\n\r\n  public isHighlightUpdate(): Observable<boolean> {\r\n    return super.post<void, boolean>(this.taskBusinessApi.isHighlightUpdate);\r\n  }\r\n\r\n  public findPartNumbersAssociatedWithTaskOperations(input: PnTaskSearchInput): Observable<BirePnDTO[]> {\r\n    return super.post<PnTaskSearchInput, BirePnDTO[]>(\r\n      this.taskManagementApi.findPartNumbersAssociatedWithTaskOperations,\r\n      input\r\n    );\r\n  }\r\n  /**\r\n   * checkNewVersionNumberAndUpgradeBireTaskData() - This function is used to return information of new Task Version.\r\n   * @param input - Current Task Id\r\n   */\r\n  public checkNewVersionNumberAndUpgradeBireTaskData(input: BireTaskDTOId): Observable<BireTaskDTO> {\r\n    return super.post<BireTaskDTOId, BireTaskDTO>(\r\n      this.taskBusinessApi.checkNewVersionNumberAndUpgradeBireTaskData,\r\n      input\r\n    );\r\n  }\r\n  /**\r\n   * checkAndReturnNewVersionNumberByTask() - This function is used to return new version of Task.\r\n   * @param input - Current Task Id\r\n   */\r\n  public checkAndReturnNewVersionNumberByTask(input: BireTaskDTOId): Observable<string> {\r\n    return super.post<BireTaskDTOId, string>(this.taskBusinessApi.checkAndReturnNewVersionNumberByTask, input);\r\n  }\r\n  /**\r\n   * findBirePlanAttributesByPlanCode() - This function is used to check Plan Type.\r\n   * @param bireMaintenancePlanDTO - Plan Code\r\n   */\r\n  public findBirePlanAttributesByPlanCode(\r\n    bireMaintenancePlanDTO: BireMaintenancePlanDTO\r\n  ): Observable<BirePlanAttributeDTO[]> {\r\n    return super.post<BireMaintenancePlanDTO, BirePlanAttributeDTO[]>(\r\n      this.taskManagementApi.findBirePlanAttributesByPlanCode,\r\n      bireMaintenancePlanDTO\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".docManagement\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docName\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n          <div class=\\\"form-control-data\\\">\\r\\n            {{ document.docName }}\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"btn-file-upload-wrapper\\\">\\r\\n            <p-fileUpload\\r\\n              #fileUploader\\r\\n              *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n              class=\\\"aw-fileupload\\\"\\r\\n              name=\\\"document[]\\\"\\r\\n              customUpload=\\\"true\\\"\\r\\n              mode=\\\"basic\\\"\\r\\n              auto=\\\"true\\\"\\r\\n              chooseLabel=\\\"\\\"\\r\\n              (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n            ></p-fileUpload>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docCategory\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown\\r\\n            class=\\\"aw-dropdown fixed-width\\\"\\r\\n            [options]=\\\"categories\\\"\\r\\n            [(ngModel)]=\\\"document.docCategory\\\"\\r\\n            [showClear]=\\\"false\\\"\\r\\n            placeholder=\\\"&nbsp;\\\"\\r\\n            [disabled]=\\\"isReadOnlyForm\\\"\\r\\n          ></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docSource\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"document.docSource\\\" [disabled]=\\\"isReadOnlyForm\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docPublicationDate\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-calendar\\r\\n            showButtonBar=\\\"true\\\"\\r\\n            [monthNavigator]=\\\"true\\\"\\r\\n            [yearNavigator]=\\\"true\\\"\\r\\n            [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n            class=\\\"aw-calendar\\\"\\r\\n            [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n            [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n            [(ngModel)]=\\\"document.docPublicationDate\\\"\\r\\n            [disabled]=\\\"isReadOnlyForm\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n          ></p-calendar>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docDescription\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <textarea\\r\\n            class=\\\"aw-textarea\\\"\\r\\n            [rows]=\\\"3\\\"\\r\\n            pInputTextarea\\r\\n            [(ngModel)]=\\\"document.docDescription\\\"\\r\\n            [disabled]=\\\"isReadOnlyForm\\\"\\r\\n          ></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      [disabled]=\\\"!document.docFile && !document.docSource\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FileUpload } from 'primeng/fileupload';\r\n\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BireDocumentDTO } from '../../../../../shared/types/api-types/bire-document-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { FileUtils } from '../../../../../shared/utils/file-utils';\r\n\r\n@Component({\r\n  selector: 'aw-task-import-popup',\r\n  templateUrl: './task-import-popup.component.html'\r\n})\r\nexport class TaskImportPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Output() public displayChange: EventEmitter<boolean>;\r\n  @Input() public document: BireDocumentDTO;\r\n  @Input() public isReadOnlyForm: boolean;\r\n  @Output() public onValidated: EventEmitter<BireDocumentDTO>;\r\n\r\n  public readonly componentId: string;\r\n  public displayValue: boolean;\r\n  public categories: LabelValue<string>[];\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'SbadFormComponent');\r\n\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BireDocumentDTO>();\r\n\r\n    this.loadCategories();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (!this.document) {\r\n      this.document = {};\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.document);\r\n    this.display = false;\r\n  }\r\n\r\n  private loadCategories(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.DOC_TASK_CATEGORY_MAP).subscribe(\r\n      (results) => {\r\n        this.categories = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.componentId + '.errorOnGetDocumentTaskCategories');\r\n      }\r\n    );\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (event.files) {\r\n      const file: File = event.files[0];\r\n      FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n        if (fileContent) {\r\n          this.document.docFile = fileContent;\r\n          this.document.docName = file.name;\r\n          this.document.docPublicationDate = new Date();\r\n          this.document.docType = FileUtils.getExtension(file.name).toUpperCase();\r\n        }\r\n      });\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ \\\"page.searchPage\\\" | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewTask()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row search-criteria-header\\\">\\r\\n                  <i\\r\\n                    class=\\\"fa fa-fw fa-undo aw-icon aw-icon-with-border search-criteria-action\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    pTooltip=\\\"{{ 'global.reset' | translate }}\\\"\\r\\n                    tooltipPosition=\\\"top\\\"\\r\\n                    (click)=\\\"resetSearchCriteria()\\\"\\r\\n                  ></i>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".familyVariant\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"familyVariants\\\"\\r\\n                        [(ngModel)]=\\\"familyVariantSearchObject\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        (keyup.enter)=\\\"search()\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".taskMaintenanceProgram\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"taskMaintenanceProgram\\\"\\r\\n                        [(ngModel)]=\\\"maintenanceProgramSearchObject\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        (keyup.enter)=\\\"search()\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".notApproved\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-checkbox binary=\\\"true\\\" class=\\\"aw-checkbox\\\" [(ngModel)]=\\\"notApproved\\\"></p-checkbox>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".taskCode\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.taskCode\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".taskVersion\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.taskVersion\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".repairCenterCode\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"mroCenters\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.repairCenterCode\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        (keyup.enter)=\\\"search()\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".taskStatus\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"statuses\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.taskStatus\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        (keyup.enter)=\\\"search()\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".taskTypeCode\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"taskTypes\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.taskTypeCode\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        (keyup.enter)=\\\"search()\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".groupCode\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"taskGroups\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.groupCode\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        (keyup.enter)=\\\"search()\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"advanced-criteria\\\" [ngClass]=\\\"{ 'display--none': !showAdvancedCriteria }\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"display--flex-row flex--1\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".taskChapter\\\" | translate }} </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.taskChapter\\\" />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".taskSection\\\" | translate }} </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.taskSection\\\" />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".taskSubject\\\" | translate }} </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.taskSubject\\\" />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".taskTask\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.taskTask\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".taskSubTask\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.taskSubTask\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".taskDesignation\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.taskDesignation\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".taskDescription\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.taskDescription\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".taskApplicabilityCode\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"applicabilities\\\"\\r\\n                          [(ngModel)]=\\\"searchObject.taskApplicabilityCode\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          (keyup.enter)=\\\"search()\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <button mat-button (click)=\\\"showAdvancedCriteria = !showAdvancedCriteria\\\">\\r\\n                    <ng-container *ngIf=\\\"showAdvancedCriteria\\\">\\r\\n                      <mat-icon>remove</mat-icon>\\r\\n                      {{ \\\"global.collapseCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"!showAdvancedCriteria\\\">\\r\\n                      <mat-icon>add</mat-icon>\\r\\n                      {{ \\\"global.expandCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                  </button>\\r\\n\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      class=\\\"btn-with-spinner\\\"\\r\\n                      (click)=\\\"search()\\\"\\r\\n                      color=\\\"primary\\\"\\r\\n                      appKeyPress\\r\\n                      [keyCode]=\\\"'Enter'\\\"\\r\\n                      (keyPress)=\\\"search()\\\"\\r\\n                    >\\r\\n                      <span *ngIf=\\\"isLoading\\\" class=\\\"lds-hourglass\\\"></span>\\r\\n                      {{ \\\"global.toSearch\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }} ({{ taskTableDataSource ? taskTableDataSource.dataCount : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <a-table [dataSource]=\\\"taskTableDataSource\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    *ngIf=\\\"\\r\\n                      taskTableDataSource && taskTableDataSource.dataCount > 0 && !taskTableDataSource.hasDataSelection\\r\\n                    \\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportTable()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"hasManageAccessRight && taskTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteTasks()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"taskTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openSelectedTasks()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n                <ng-template columnDef=\\\"taskCode\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <a (click)=\\\"openTaskLink(rowData)\\\"> {{ rowData.taskCode }} </a>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Table } from 'primeng/table';\r\n\r\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { BidoFunctionTypeConstants } from '../../../../shared/constants/bido-function-type-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../../shared/services/date.service';\r\nimport { ExportService } from '../../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { FindFamilyVariantInput } from '../../../../shared/types/api-input-types/product-structure-management/find-family-variant-input.interface';\r\nimport { BireTaskDTOId } from '../../../../shared/types/api-types/bire-task-dto-id.interface';\r\nimport { BireTaskDTO } from '../../../../shared/types/api-types/bire-task-dto.interface';\r\nimport { FindBireTaskByCriteriaInput } from '../../../../shared/types/api-types/find-bire-task-by-criteria-input.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { LabelValueUtils } from '../../../../shared/utils/label-value-utils';\r\n\r\nimport { TaskSearchService } from './task-search.service';\r\n\r\ninterface TaskDataExport {\r\n  taskCode?: string;\r\n  taskVersion?: string;\r\n  taskDesignation?: string;\r\n  taskChapter?: string;\r\n  taskSection?: string;\r\n  taskSubject?: string;\r\n  taskTask?: string;\r\n  taskSubTask?: string;\r\n  taskStatus?: string;\r\n  taskApplicabilityDate?: Date;\r\n  taskApplicabilityCode?: string;\r\n  repairCenterCode?: string;\r\n  groupCode?: string;\r\n  taskTypeCode?: string;\r\n  overhaul?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-task-search',\r\n  templateUrl: './task-search.component.html'\r\n})\r\nexport class TaskSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public readonly componentId: string;\r\n\r\n  public filteredRowsNb: number;\r\n\r\n  public familyVariantSearchObject: string | undefined;\r\n  public familyVariants: LabelValue<string>[];\r\n  public familyCode: string;\r\n  public variantCode: string;\r\n  public structureType: string;\r\n\r\n  public mroCenters: LabelValue<string>[];\r\n  public statuses: LabelValue<string>[];\r\n  public taskTypes: LabelValue<string>[];\r\n  public taskGroups: LabelValue<string>[];\r\n  public applicabilities: LabelValue<string>[];\r\n  public searchObject: BireTaskDTO;\r\n  public showAdvancedCriteria: boolean;\r\n  public isLoading: boolean = false;\r\n  public taskTableDataSource: TableDataSource<BireTaskDTO>;\r\n\r\n  public notApproved: boolean;\r\n\r\n  public maintenanceProgramSearchObject: string | undefined;\r\n  public taskMaintenanceProgram: LabelValue<string>[];\r\n  public maintenanceProgramPlanCode: string;\r\n\r\n  @ViewChild('resultsContainerAnchor')\r\n  public resultsContainerAnchor: ElementRef;\r\n\r\n  private readonly resultsTableExportName: string;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public translateService: TranslateService,\r\n    private readonly taskSearchService: TaskSearchService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly exportService: ExportService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly dateService: DateService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.filteredRowsNb = 0;\r\n\r\n    this.familyVariants = [];\r\n    this.familyCode = '';\r\n    this.variantCode = '';\r\n    this.structureType = '';\r\n\r\n    this.mroCenters = [];\r\n    this.statuses = [];\r\n    this.taskTypes = [];\r\n    this.taskGroups = [];\r\n    this.applicabilities = [];\r\n    this.familyVariantSearchObject = undefined;\r\n    this.searchObject = {};\r\n    this.showAdvancedCriteria = false;\r\n    this.resultsTableExportName = 'task-search-list';\r\n\r\n    this.maintenanceProgramSearchObject = undefined;\r\n    this.taskMaintenanceProgram = [];\r\n    this.notApproved = false;\r\n\r\n    this.loadFamilyVariant();\r\n    this.loadMROCenter();\r\n    this.loadStatus();\r\n    this.loadTaskType();\r\n    this.loadTaskGroup();\r\n    this.loadApplicability();\r\n    this.initTaskTableDataSource();\r\n\r\n    this.loadTaskMaintenanceProgram();\r\n  }\r\n\r\n  private initTaskTableDataSource(): void {\r\n    this.taskTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'taskCode',\r\n          translateKey: this.getTranslateKey('taskCode'),\r\n          width: '16%'\r\n        },\r\n        {\r\n          field: 'taskVersion',\r\n          translateKey: this.getTranslateKey('taskVersion'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'taskDesignation',\r\n          translateKey: this.getTranslateKey('taskDesignation'),\r\n          width: '30%'\r\n        },\r\n        {\r\n          field: 'taskStatus',\r\n          translateKey: this.getTranslateKey('taskStatus'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'taskTypeCode',\r\n          translateKey: this.getTranslateKey('taskTypeCode'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'groupCode',\r\n          translateKey: this.getTranslateKey('groupCode'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'taskApplicabilityDateString',\r\n          translateKey: this.getTranslateKey('taskApplicabilityDateString'),\r\n          width: '14%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ENG_TASK_SEARCH;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public deleteTasks(): void {\r\n    const partialMessageKey =\r\n      this.taskTableDataSource.dataSelectionCount > 1 ? 'confirmDeleteSelectedTasks' : 'confirmDeleteSelectedTask';\r\n\r\n    const tasks = new Array<BireTaskDTOId>();\r\n    this.taskTableDataSource.dataSelection.forEach((task) => {\r\n      if (!!task && !!task.taskCode && !!task.taskVersion) {\r\n        const taskId: BireTaskDTOId = {\r\n          taskCode: task.taskCode,\r\n          taskVersion: task.taskVersion\r\n        };\r\n        tasks.push(taskId);\r\n      } else {\r\n        super.throwUnboundLocalError('deleteTasks', 'task && task.taskCode && task.taskVersion');\r\n      }\r\n    });\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.taskSearchService.removeBireTask(tasks).subscribe(() => {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteTask'));\r\n          this.taskTableDataSource.dataSelection = [];\r\n          this.search();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public exportTable(): void {\r\n    const taskExportData: TaskDataExport[] = [];\r\n    this.taskTableDataSource.dataSrc.forEach((task) => {\r\n      const item: TaskDataExport = {\r\n        taskCode: task.taskCode,\r\n        taskVersion: task.taskVersion,\r\n        taskDesignation: task.taskDesignation,\r\n        taskChapter: task.taskChapter,\r\n        taskSection: task.taskSection,\r\n        taskSubject: task.taskSubject,\r\n        taskTask: task.taskTask,\r\n        taskSubTask: task.taskSubTask,\r\n        taskStatus: task.taskStatus,\r\n        taskApplicabilityDate: task.taskApplicabilityDate,\r\n        taskApplicabilityCode: task.taskApplicabilityCode,\r\n        repairCenterCode: task.repairCenterCode,\r\n        groupCode: task.groupCode,\r\n        taskTypeCode: task.taskTypeCode,\r\n        overhaul: task.overhaul\r\n      };\r\n      taskExportData.push(item);\r\n    });\r\n    this.exportService.toExcel(taskExportData, this.resultsTableExportName, this.componentData.componentId);\r\n  }\r\n\r\n  public openNewTask(): void {\r\n    this.openTask(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  public openTaskLink(task: BireTaskDTO): void {\r\n    if (task) {\r\n      if (task.taskCode && task.taskCode.trim().length > 0) {\r\n        this.openTask(task, ComponentOpenMode.Read);\r\n      } else {\r\n        this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingTaskCode'));\r\n      }\r\n    }\r\n  }\r\n\r\n  public openSelectedTasks(): void {\r\n    this.taskTableDataSource.dataSelection.forEach((task) => {\r\n      if (task) {\r\n        if (task.taskCode && task.taskCode.trim().length > 0) {\r\n          this.openTask(task, ComponentOpenMode.Read);\r\n        } else {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingTaskCode'));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public resetResultsTable(table: Table): void {\r\n    table.reset();\r\n    table.filters = {};\r\n  }\r\n\r\n  public resetSearchCriteria(): void {\r\n    this.searchObject = {};\r\n    this.familyVariantSearchObject = undefined;\r\n    this.maintenanceProgramSearchObject = undefined;\r\n  }\r\n\r\n  public search(): void {\r\n    this.isLoading = true;\r\n    super.scrollToAnchor(this.resultsContainerAnchor);\r\n\r\n    this.taskTableDataSource.dataSelection = [];\r\n    this.taskTableDataSource.setData([]);\r\n    let familyCode = '';\r\n    let structureType = '';\r\n    let variantCode = '';\r\n\r\n    let maintenanceProgramPlanCode = '';\r\n\r\n    if (this.familyVariantSearchObject != undefined) {\r\n      const familyVariantParam: string[] = this.familyVariantSearchObject.split('-');\r\n      const param0 = 0;\r\n      const param1 = 1;\r\n      const param2 = 2;\r\n      familyCode = familyVariantParam[param0];\r\n      structureType = familyVariantParam[param1];\r\n      variantCode = familyVariantParam[param2];\r\n    }\r\n\r\n    if (this.maintenanceProgramSearchObject != undefined) {\r\n      maintenanceProgramPlanCode = this.maintenanceProgramSearchObject;\r\n    }\r\n\r\n    const searchId: FindBireTaskByCriteriaInput = {\r\n      bireTaskDTO: this.searchObject,\r\n      familyCode,\r\n      structureType,\r\n      variantCode,\r\n      notApproved: this.notApproved,\r\n      maintenanceProgramPlanCode\r\n    };\r\n\r\n    this.taskSearchService.findBireTasksByCriteria(searchId).subscribe((results) => {\r\n      if (results) {\r\n        this.isLoading = false;\r\n        results.list.forEach((res) => {\r\n          res.taskApplicabilityDateString = this.dateService.dateToString(res.taskApplicabilityDate);\r\n        });\r\n        this.taskTableDataSource.setData(results.list);\r\n\r\n        this.taskTableDataSource.dataSrc.forEach((element) => {\r\n          LabelValueUtils.stringValueToLabel<BireTaskDTO>(element, 'taskApplicabilityCode', this.applicabilities);\r\n          LabelValueUtils.stringValueToLabel<BireTaskDTO>(element, 'taskTypeCode', this.taskTypes);\r\n          LabelValueUtils.stringValueToLabel<BireTaskDTO>(element, 'repairCenterCode', this.mroCenters);\r\n          LabelValueUtils.stringValueToLabel<BireTaskDTO>(element, 'taskStatus', this.statuses);\r\n          LabelValueUtils.stringValueToLabel<BireTaskDTO>(element, 'groupCode', this.taskGroups);\r\n        });\r\n        this.filteredRowsNb = this.taskTableDataSource.dataCount;\r\n\r\n        super.differ(() => {\r\n          super.scrollToAnchor(this.resultsContainerAnchor);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onFilter(event: any): void {\r\n    this.filteredRowsNb = event.filteredValue.length;\r\n  }\r\n\r\n  public openTask(object: BireTaskDTO | undefined, openMode: ComponentOpenMode): void {\r\n    if (object != undefined) {\r\n      const labelKey = 'transaction.TaskFormComponent';\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: 'TaskFormComponent',\r\n        objectId: this.serializationService.serialize(object),\r\n        openMode\r\n      };\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    } else {\r\n      const labelKey = 'transaction.TaskFormComponent';\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: 'TaskFormComponent',\r\n        objectId: undefined,\r\n        openMode\r\n      };\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    }\r\n  }\r\n\r\n  private loadFamilyVariant(): void {\r\n    const id: FindFamilyVariantInput = {\r\n      useCase: BidoFunctionTypeConstants.UC_MCH_TASK,\r\n      module: BidoFunctionTypeConstants.MODULE_FAMILY\r\n    };\r\n\r\n    this.taskSearchService.findFamilyVariant(id).subscribe((results) => {\r\n      if (results) {\r\n        results.forEach((result) => {\r\n          if (!!result.labelValueDTO) {\r\n            this.familyVariants.push(result.labelValueDTO);\r\n          } else {\r\n            super.throwUnboundLocalError('loadFamilyVariant', 'result.labelValueDTO');\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadMROCenter(): void {\r\n    this.taskSearchService.findMROCenter().subscribe((results) => {\r\n      this.mroCenters = results || [];\r\n    });\r\n  }\r\n\r\n  private loadStatus(): void {\r\n    this.propertiesService.getValue('getFuncObjectStatusMap').subscribe((results) => {\r\n      this.statuses = results || [];\r\n    });\r\n  }\r\n\r\n  private loadTaskType(): void {\r\n    this.propertiesService.getValue('getTaskTypeMap').subscribe((results) => {\r\n      this.taskTypes = results || [];\r\n    });\r\n  }\r\n\r\n  private loadTaskGroup(): void {\r\n    this.taskSearchService.getTaskGroups().subscribe((results) => {\r\n      this.taskGroups = results.filter((taskGroup) => taskGroup.value != undefined) || [];\r\n    });\r\n  }\r\n\r\n  private loadApplicability(): void {\r\n    this.propertiesService.getValue('getTaskApplicabilityCodeMap').subscribe((results) => {\r\n      this.applicabilities = results || [];\r\n    });\r\n  }\r\n\r\n  private loadTaskMaintenanceProgram(): void {\r\n    this.taskSearchService.getMaintenanceProgram().subscribe((results) => {\r\n      this.taskMaintenanceProgram = results || [];\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\r\nimport { TaskManagementApi } from '../../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { FindFamilyVariantInput } from '../../../../shared/types/api-input-types/product-structure-management/find-family-variant-input.interface';\r\nimport { BireTaskDTOId } from '../../../../shared/types/api-types/bire-task-dto-id.interface';\r\nimport { BireTaskDTO } from '../../../../shared/types/api-types/bire-task-dto.interface';\r\nimport { FamilyVariantDTO } from '../../../../shared/types/api-types/family-variant-dto.interface';\r\nimport { FindBireTaskByCriteriaInput } from '../../../../shared/types/api-types/find-bire-task-by-criteria-input.interface';\r\nimport { SearchResultsDTO } from '../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class TaskSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly taskManagementApi: TaskManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBireTasksByCriteria(criteria: FindBireTaskByCriteriaInput): Observable<SearchResultsDTO<BireTaskDTO>> {\r\n    return super.post<FindBireTaskByCriteriaInput, SearchResultsDTO<BireTaskDTO>>(\r\n      this.taskManagementApi.findBireTasksByCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public findFamilyVariant(input: FindFamilyVariantInput): Observable<FamilyVariantDTO[]> {\r\n    return super.post<FindFamilyVariantInput, FamilyVariantDTO[]>(\r\n      this.productStructureManagementApi.findFamilyVariant,\r\n      input\r\n    );\r\n  }\r\n\r\n  public findMROCenter(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.productStructureManagementApi.findAllBireSiteForTask);\r\n  }\r\n\r\n  public getTaskGroups(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.taskManagementApi.findAllBireTaskGroups);\r\n  }\r\n\r\n  public removeBireTask(bireTaskDTOId: BireTaskDTOId[]): Observable<boolean> {\r\n    return super.post<BireTaskDTOId[], boolean>(this.taskManagementApi.removeBireTask, bireTaskDTOId);\r\n  }\r\n\r\n  public getMaintenanceProgram(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.taskManagementApi.findAllAvailableRMP);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DialogBireDocumentModule } from '../../../shared/components/dialog-bire-document/dialog-bire-document.module';\r\nimport { DialogSearchEvolutionModule } from '../../../shared/components/dialog-search-evolution/dialog-search-evolution.module';\r\nimport { DialogSearchItemModule } from '../../../shared/components/dialog-search-item/dialog-search-item.module';\r\nimport { DialogSearchOperationModule } from '../../../shared/components/dialog-search-operation/dialog-search-operation.module';\r\nimport { DialogSearchPartModule } from '../../../shared/components/dialog-search-part/dialog-search-part.module';\r\nimport { DialogSearchQualificationModule } from '../../../shared/components/dialog-search-qualification/dialog-search-qualification.module';\r\nimport { DialogSearchTaskModule } from '../../../shared/components/dialog-search-task/dialog-search-task.module';\r\nimport { DialogTableModule } from '../../../shared/components/dialog-table/dialog-table.module';\r\nimport { DynamicAttributesHistoryModule } from '../../../shared/components/dynamic-attributes-history/dynamic-attributes-history.module';\r\nimport { DynamicAttributesModule } from '../../../shared/components/dynamic-attributes/dynamic-attributes.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { StatusUpdateHistoryModule } from '../../../shared/components/status-update-history/status-update-history.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { DialogAssociatedTasksPopupComponent } from './form/dialog-associated-tasks-popup/dialog-associated-tasks-popup.component';\r\nimport { DialogEvolutionsPopupComponent } from './form/dialog-evolutions-popup/dialog-evolutions-popup.component';\r\nimport { DialogItemVersionsPopupComponent } from './form/dialog-item-versions-popup/dialog-item-versions-popup.component';\r\nimport { DialogMeasureFormulaPopupComponent } from './form/dialog-measure-formula-popup/dialog-measure-formula-popup.component';\r\nimport { DialogMeasurePopupComponent } from './form/dialog-measure-popup/dialog-measure-popup.component';\r\nimport { DialogMeasureSearchPopupComponent } from './form/dialog-measure-popup/dialog-measure-search-popup/dialog-measure-search-popup.component';\r\nimport { DialogMeasureToolPopupComponent } from './form/dialog-measure-tool-popup/dialog-measure-tool-popup.component';\r\nimport { DialogOperationsPopupComponent } from './form/dialog-operations-popup/dialog-operations-popup.component';\r\nimport { DialogQualificationsPopupComponent } from './form/dialog-qualifications-popup/dialog-qualifications-popup.component';\r\nimport { DialogSearchEvolutionPopupComponent } from './form/dialog-search-evolution-popup/dialog-search-evolution-popup.component';\r\nimport { DialogTilsPopupComponent } from './form/dialog-tils-popup/dialog-tils-popup.component';\r\nimport { TaskFormComponent } from './form/task-form.component';\r\nimport { TaskFormService } from './form/task-form.service';\r\nimport { TaskImportPopupComponent } from './form/task-import-popup/task-import-popup.component';\r\nimport { TaskSearchComponent } from './search/task-search.component';\r\nimport { TaskSearchService } from './search/task-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DropdownModule,\r\n  ListboxModule,\r\n  FileUploadModule,\r\n  PrimeNgTableModule,\r\n  TooltipModule,\r\n  KeyFilterModule,\r\n  MessageModule,\r\n  TreeTableModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [\r\n  ComponentSidebarModule,\r\n  DialogBireDocumentModule,\r\n  DialogSearchEvolutionModule,\r\n  DialogSearchItemModule,\r\n  DialogSearchOperationModule,\r\n  DialogSearchQualificationModule,\r\n  DialogSearchTaskModule,\r\n  DialogTableModule,\r\n  DynamicAttributesHistoryModule,\r\n  DynamicAttributesModule,\r\n  ModalModule,\r\n  StatusUpdateHistoryModule,\r\n  TableModule,\r\n  DialogSearchPartModule\r\n];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [\r\n  DialogAssociatedTasksPopupComponent,\r\n  DialogEvolutionsPopupComponent,\r\n  DialogItemVersionsPopupComponent,\r\n  DialogOperationsPopupComponent,\r\n  DialogMeasurePopupComponent,\r\n  DialogMeasureSearchPopupComponent,\r\n  DialogMeasureToolPopupComponent,\r\n  DialogMeasureFormulaPopupComponent,\r\n  DialogQualificationsPopupComponent,\r\n  DialogTilsPopupComponent,\r\n  DialogSearchEvolutionPopupComponent,\r\n  TaskImportPopupComponent\r\n];\r\n\r\nconst DYNAMIC_COMPONENTS = [TaskFormComponent, TaskSearchComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [TaskFormService, TaskSearchService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class TaskModule {}\r\n","export class TaskFieldsConstant {\r\n  public static readonly DESIGNATION = 'designation';\r\n  public static readonly DESCRIPTION = 'description';\r\n  public static readonly ATA_ITEM = 'ataItem';\r\n  public static readonly TASK_GROUP = 'taskGroup';\r\n  public static readonly TASK_TYPE = 'taskType';\r\n  public static readonly TASK_REFERENCE = 'taskReference';\r\n  public static readonly TASK_VALIDATION_LEVEL = 'validationLevel';\r\n  public static readonly STATUS = 'status';\r\n  public static readonly APPLICABILITY_DATE = 'applicabilityDate';\r\n  public static readonly GENERAL_SECTION = 'generalSection';\r\n  public static readonly MRO_CENTER = 'MROCenter';\r\n  public static readonly INSPECTION_ESM = 'General.InspectionESM';\r\n  public static readonly OVERHAUL = 'General.Overhaul';\r\n  public static readonly ZONE = 'General.Zone';\r\n  public static readonly APPLICABILITY_CODE = 'General.ApplicabilityCode';\r\n  public static readonly SUB_CONTRACTING = 'General.SubContracting';\r\n  public static readonly TOTAL_COST = 'General.TotalCost';\r\n  public static readonly REFERENCE_MANUAL = 'General.ReferenceManual';\r\n  public static readonly ATTRIBUTES = 'General.Attributs';\r\n  public static readonly OPERATIONS = 'TaskCard.Operations';\r\n  public static readonly EVOLUTIONS = 'Impacts.Evolutions';\r\n  public static readonly ITEMLINKED = 'Impacts.ItemVersions';\r\n  public static readonly TECHNICAL_LEVEL = 'Prerequisites.TechnicalLevel';\r\n  public static readonly DOCUMENTS = 'Documents';\r\n  public static readonly MAINTENANCE_PROGRAMS = 'Manuals.MaintenancePrograms';\r\n  public static readonly TOP_DOWN_STRUCTURE = 'TaskCard.TopDownStructure';\r\n  public static readonly SUPERIOR_TASKS = 'TaskCard.SuperiorTasks';\r\n  public static readonly ANTERIOR_TASKS = 'TaskCard.AnteriorInSequence';\r\n  public static readonly POSTERIOR_TASKS = 'TaskCard.PosteriorInSequence';\r\n  public static readonly LINKED_TASK = 'TaskCard.LinkedTasks';\r\n  public static readonly SHOP_MANUALS = 'Manuals.ShopManuals';\r\n  public static readonly ASSOCIATED_QUALIFICATIONS = 'Prerequisites.AssociatedQualifications';\r\n  public static readonly TASK_CARD = 'TaskCard';\r\n  public static readonly IMPACTS = 'Impacts';\r\n  public static readonly PREREQUISITES = 'Prerequisites';\r\n  public static readonly MEASUREMENT_POINT = 'MeasurementPoint';\r\n}\r\n","export class ArrayUtils {\r\n    public static compareValues(key: string, order = 'asc') {\r\n    return (a, b) => {\r\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n            // property doesn't exist on either object\r\n            return 0;\r\n        }\r\n\r\n        const varA = (typeof a[key] === 'string') ? a[key].toUpperCase() : a[key];\r\n        const varB = (typeof b[key] === 'string') ? b[key].toUpperCase() : b[key];\r\n\r\n        let comparison = 0;\r\n        if (varA > varB) {\r\n            comparison = 1;\r\n        } else if (varA < varB) {\r\n            comparison = -1;\r\n        }\r\n\r\n        return (\r\n            (order === 'desc') ? (comparison * -1) : comparison\r\n        );\r\n    };\r\n    }\r\n}\r\n","import { StringUtils } from '../../shared/utils/string-utils';\r\n\r\nexport class BidoFamilyVariantUtils {\r\n  public static buildFamilyVariantCode(\r\n    familyCode: string | undefined,\r\n    variantCode: string | undefined\r\n  ): string | undefined {\r\n    if (StringUtils.isNullOrEmpty(familyCode) || StringUtils.isNullOrEmpty(variantCode)) {\r\n      return undefined;\r\n    } else {\r\n      return `${familyCode}-${variantCode}`;\r\n    }\r\n  }\r\n\r\n  public static getFamilyCodeFromFamilyVariantCode(familyVariantCode: string | undefined): string | undefined {\r\n    return !!familyVariantCode && familyVariantCode.indexOf('-') > -1\r\n      ? familyVariantCode.substring(0, familyVariantCode.indexOf('-'))\r\n      : undefined;\r\n  }\r\n\r\n  public static getVariantCodeFromFamilyVariantCode(familyVariantCode: string | undefined): string | undefined {\r\n    return !!familyVariantCode && familyVariantCode.indexOf('-') > -1\r\n      ? familyVariantCode.substring(familyVariantCode.indexOf('-') + 1)\r\n      : undefined;\r\n  }\r\n}\r\n","export class BireFamilyVariantUtil {\r\n  private static readonly FAMILY_VARIANT_SEPARATOR = '-';\r\n\r\n  public static buildFamilyVariantCodeWithStructureType(\r\n    familyCode: string | undefined,\r\n    structureType: string | undefined,\r\n    variantCode: string | undefined\r\n  ): string | undefined {\r\n    if (!!familyCode && !!structureType && !!variantCode) {\r\n      return (\r\n        familyCode +\r\n        BireFamilyVariantUtil.FAMILY_VARIANT_SEPARATOR +\r\n        structureType +\r\n        BireFamilyVariantUtil.FAMILY_VARIANT_SEPARATOR +\r\n        variantCode\r\n      );\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public static buildFamilyVariantCodeWithoutStructureType(\r\n    familyCode: string | undefined,\r\n    variantCode: string | undefined\r\n  ): string | undefined {\r\n    if (!!familyCode && !!variantCode) {\r\n      return familyCode + BireFamilyVariantUtil.FAMILY_VARIANT_SEPARATOR + variantCode;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n","import * as FileSaver from 'file-saver';\r\n\r\nimport { NumberUtils } from './number-utils';\r\n\r\nexport class FileUtils {\r\n  public static readonly KIBIOCTET: number = 1024;\r\n  public static readonly KILOOCTET: number = 1000;\r\n\r\n  public static downloadFile(file: Uint8Array | undefined, fileName: string | undefined): void {\r\n    if (!!file && !!fileName) {\r\n      const byteCharacters = atob(file.toString());\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n\r\n      FileSaver.saveAs(new Blob([new Uint8Array(byteNumbers)]), fileName);\r\n    }\r\n  }\r\n\r\n  public static getExtension(fileName: string | undefined): string {\r\n    return !!fileName && fileName.includes('.') ? fileName.substring(fileName.lastIndexOf('.') + 1) : '';\r\n  }\r\n\r\n  public static getFileContentAsBase64(file: File | undefined, callback: (fileContent: Uint8Array) => void): void {\r\n    if (!!file) {\r\n      const reader: FileReader = new FileReader();\r\n      reader.onloadend = () => {\r\n        let fileContent: any = reader.result; // tslint:disable-line:no-any\r\n        fileContent = fileContent.substring((fileContent.indexOf(',') as number) + 1); // Remove data:*/*;base64,\r\n        callback(fileContent);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  public static getFormattedSize(size: number | undefined): string {\r\n    if (!!size) {\r\n      return size / FileUtils.KILOOCTET < FileUtils.KILOOCTET\r\n        ? `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET)} Ko`\r\n        : `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET / FileUtils.KILOOCTET)} Mo`;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n","import { LabelValue } from '../types/label-value.interface';\r\n\r\nimport { StringUtils } from './string-utils';\r\n\r\nexport class SettingsUtils {\r\n  public static isPropertyEnabled(settings: LabelValue<string>[], propertyInput: string): boolean {\r\n    const selectedProperty = settings.find((property) => property.value === propertyInput);\r\n\r\n    return (\r\n      !!selectedProperty &&\r\n      !StringUtils.isNullOrEmpty(selectedProperty.label) &&\r\n      (selectedProperty.label.trim().toUpperCase() === 'X' ||\r\n        selectedProperty.label === '1' ||\r\n        selectedProperty.label.trim().toUpperCase() === 'TRUE')\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}