{"version":3,"sources":["webpack:///./src/app/main/administration/enterprise-map/enterprise-map.component.html","webpack:///./src/app/main/administration/enterprise-map/enterprise-map.component.scss","webpack:///./src/app/main/administration/enterprise-map/enterprise-map.component.ts","webpack:///./src/app/main/administration/enterprise-map/enterprise-map.module.ts","webpack:///./src/app/main/administration/enterprise-map/enterprise-map.service.ts","webpack:///./src/app/shared/enums/enterprise-type.enum.ts"],"names":[],"mappings":"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","file":"administration-enterprise-map-enterprise-map-module.js","sourcesContent":["module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".company\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"companyList\\\"\\r\\n                        [(ngModel)]=\\\"selectedCompany\\\"\\r\\n                        (onChange)=\\\"loadEnterpriseMapData()\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group \\\"></div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-tree class=\\\"orgChart\\\" [value]=\\\"treeNode\\\" layout=\\\"horizontal\\\">\\r\\n                <ng-template let-node pTemplate=\\\"blueBox\\\">\\r\\n                  <div class=\\\"node-header\\\">{{ componentData.componentId + \\\".\\\" + node.label | translate }}</div>\\r\\n                  <ul>\\r\\n                    <li *ngFor=\\\"let w of node.data\\\">{{ w }}</li>\\r\\n                  </ul>\\r\\n                </ng-template>\\r\\n                <ng-template let-node pTemplate=\\\"default\\\"> {{ node.label }} </ng-template>\\r\\n              </p-tree>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host .grid-row .grid-cell--12 .grid-cell .grid-cell-content {\\n  align-items: center;\\n  justify-content: center; }\\n  :host .grid-row .grid-cell--12 .grid-cell .grid-cell-content .orgChart .node-header {\\n    background-color: #006ea9;\\n    color: #ffffff;\\n    margin: -8px -14px 0;\\n    padding: 0.5em 0.7em; }\\n  :host .grid-row .grid-cell--12 .grid-cell .grid-cell-content .orgChart ul {\\n    list-style: none;\\n    margin-left: 0;\\n    padding-left: 0; }\\n  :host .grid-row .grid-cell--12 .grid-cell .grid-cell-content .orgChart ul li {\\n      list-style-type: none;\\n      margin: 0;\\n      padding: 0;\\n      text-align: left; }\\n  ::ng-deep .ui-tree {\\n  border: 0px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi9lbnRlcnByaXNlLW1hcC9kOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGdpdGh1Yl9wYWdlcy9zcmNcXGFwcFxcbWFpblxcYWRtaW5pc3RyYXRpb25cXGVudGVycHJpc2UtbWFwXFxlbnRlcnByaXNlLW1hcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQU1VLG1CQUFtQjtFQUNuQix1QkFBdUIsRUFBQTtFQVBqQztJQVVjLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2Qsb0JBQW9CO0lBQ3BCLG9CQUFvQixFQUFBO0VBYmxDO0lBaUJjLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsZUFBZSxFQUFBO0VBbkI3QjtNQXNCZ0IscUJBQXFCO01BQ3JCLFNBQVM7TUFDVCxVQUFVO01BQ1YsZ0JBQWdCLEVBQUE7RUFTaEM7RUFDRSxzQkFBc0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vZW50ZXJwcmlzZS1tYXAvZW50ZXJwcmlzZS1tYXAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgLy8gQ2VudGVyIGNvbnRlbnRcclxuICAuZ3JpZC1yb3cge1xyXG4gICAgLmdyaWQtY2VsbC0tMTIge1xyXG4gICAgICAuZ3JpZC1jZWxsIHtcclxuICAgICAgICAuZ3JpZC1jZWxsLWNvbnRlbnQge1xyXG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgLm9yZ0NoYXJ0IHtcclxuICAgICAgICAgICAgLm5vZGUtaGVhZGVyIHtcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA2ZWE5O1xyXG4gICAgICAgICAgICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogLThweCAtMTRweCAwO1xyXG4gICAgICAgICAgICAgIHBhZGRpbmc6IDAuNWVtIDAuN2VtO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB1bCB7XHJcbiAgICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcblxyXG4gICAgICAgICAgICAgIGxpIHtcclxuICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG46Om5nLWRlZXAgLnVpLXRyZWUge1xyXG4gIGJvcmRlcjogMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TreeNode } from 'primeng/api';\r\n\r\nimport { ComponentConstants } from '../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { EnterpriseType } from '../../../shared/enums/enterprise-type.enum';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\n\r\nimport { EnterpriseMapService } from './enterprise-map.service';\r\n\r\n@Component({\r\n  selector: 'aw-enterprise-map',\r\n  templateUrl: './enterprise-map.component.html',\r\n  styleUrls: ['./enterprise-map.component.scss']\r\n})\r\nexport class EnterpriseMapComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public treeNode: TreeNode[] = [];\r\n  public companyList: LabelValue<string>[];\r\n  public selectedCompany: string;\r\n\r\n  public readonly enterpriseType: typeof EnterpriseType;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly enterpriseMapService: EnterpriseMapService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.enterpriseType = EnterpriseType;\r\n\r\n    this.companyList = [];\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_ENTERPRISE_MAP;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.loadDropDown();\r\n  }\r\n\r\n  /**\r\n   * Filling the company list\r\n   */\r\n  private loadDropDown() {\r\n    this.enterpriseMapService.getCompanyList().subscribe((result: LabelValue<string>[]) => {\r\n      this.companyList = result;\r\n      this.selectedCompany = result[0].value;\r\n      this.loadEnterpriseMapData();\r\n    });\r\n  }\r\n\r\n  /* Generating organisation chart\r\n   * and grouping warehouse or Work Center in a single block\r\n   * to avoid too large displays\r\n   */\r\n  public loadEnterpriseMapData() {\r\n    this.enterpriseMapService.enterpriseMap(this.selectedCompany).subscribe((result: TreeNode) => {\r\n      if (result != undefined) {\r\n        // Enterprise exists\r\n        const etsNode: TreeNode = {\r\n          // Enterprise node : parent node\r\n          label: result.label, // Ets name\r\n          expanded: true, // Expand Map (button hidden)\r\n          children: []\r\n        };\r\n\r\n        if (result.children) {\r\n          result.children.forEach((companyItem) => {\r\n            // Company node, belonging to Entreprise\r\n            const company: TreeNode = {\r\n              label: companyItem.label, // Company name\r\n              expanded: false, // Expand Map (button hidden)\r\n              children: []\r\n            };\r\n\r\n            // Warehouses & Work Centers children that will be added to Company\r\n            const warehousesChild: TreeNode = {\r\n              data: [],\r\n              label: EnterpriseType.WAREHOUSE,\r\n              type: 'blueBox'\r\n            };\r\n            const workCentersChild: TreeNode = {\r\n              data: [],\r\n              label: EnterpriseType.WORKCENTER,\r\n              type: 'blueBox'\r\n            };\r\n            // Record each label to corresponding child\r\n            if (!!companyItem.children) {\r\n              companyItem.children.forEach((w) => {\r\n                if (w.type === EnterpriseType.WAREHOUSE) {\r\n                  warehousesChild.data.push(w.label);\r\n                }\r\n                if (w.type === EnterpriseType.WORKCENTER) {\r\n                  workCentersChild.data.push(w.label);\r\n                }\r\n              });\r\n\r\n              // Add warehouses and work centers to company children\r\n              if (!!company.children) {\r\n                if (warehousesChild.data.length > 0) {\r\n                  company.children.push(warehousesChild);\r\n                }\r\n                if (workCentersChild.data.length > 0) {\r\n                  company.children.push(workCentersChild);\r\n                }\r\n              }\r\n              // Add Company to its Entreprise\r\n              if (!!etsNode.children) {\r\n                etsNode.children.push(company);\r\n              }\r\n            }\r\n          });\r\n          this.treeNode = [];\r\n          this.treeNode.push(etsNode);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TreeModule } from 'primeng/tree';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { EnterpriseMapComponent } from './enterprise-map.component';\r\nimport { EnterpriseMapService } from './enterprise-map.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [DropdownModule, TreeModule, TooltipModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst DYNAMIC_COMPONENTS = [EnterpriseMapComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [EnterpriseMapService];\r\n\r\n@NgModule({\r\n  declarations: [...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class EnterpriseMapModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtCompanyApi } from '../../../shared/api/bidt-company.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class EnterpriseMapService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtCompanyApi: BidtCompanyApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public enterpriseMap(id: string): Observable<TreeNode> {\r\n    return super.post<string, TreeNode>(this.bidtCompanyApi.enterpriseMap, id);\r\n  }\r\n\r\n  public getCompanyList(): Observable<LabelValue<string>[]> {\r\n    return super.post<{}, LabelValue<string>[]>(this.bidtCompanyApi.getCompanyList);\r\n  }\r\n}\r\n","export enum EnterpriseType {\r\n  WAREHOUSE = 'WAREHOUSE',\r\n  WORKCENTER = 'WORKCENTER'\r\n}\r\n"],"sourceRoot":""}