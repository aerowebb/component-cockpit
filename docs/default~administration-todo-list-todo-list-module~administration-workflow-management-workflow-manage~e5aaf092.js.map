{"version":3,"sources":["webpack:///./node_modules/primeng/dialog.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./src/app/main/administration/attributes/search/attributes-search.service.ts","webpack:///./src/app/main/administration/workflow-management/form/dialog-import-scenario/dialog-import-scenario.component.html","webpack:///./src/app/main/administration/workflow-management/form/dialog-import-scenario/dialog-import-scenario.component.ts","webpack:///./src/app/main/administration/workflow-management/form/dialog-import-scenario/dialog-imported-message/dialog-imported-message.component.html","webpack:///./src/app/main/administration/workflow-management/form/dialog-import-scenario/dialog-imported-message/dialog-imported-message.component.ts","webpack:///./src/app/main/administration/workflow-management/form/workflow-management-form.component.html","webpack:///./src/app/main/administration/workflow-management/form/workflow-management-form.component.scss","webpack:///./src/app/main/administration/workflow-management/form/workflow-management-form.component.ts","webpack:///./src/app/main/administration/workflow-management/form/workflow-management-form.service.ts","webpack:///./src/app/main/administration/workflow-management/search/workflow-management-search.component.html","webpack:///./src/app/main/administration/workflow-management/search/workflow-management-search.component.scss","webpack:///./src/app/main/administration/workflow-management/search/workflow-management-search.component.ts","webpack:///./src/app/main/administration/workflow-management/search/workflow-management-search.service.ts","webpack:///./src/app/main/administration/workflow-management/workflow-management.module.ts","webpack:///./src/app/shared/api/bidt-func-object.api.ts","webpack:///./src/app/shared/api/workflow-export.api.ts","webpack:///./src/app/shared/api/workflow-import.api.ts","webpack:///./src/app/shared/types/api-types/bidt-scenario.api.ts"],"names":[],"mappings":"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","file":"default~administration-todo-list-todo-list-module~administration-workflow-management-workflow-manage~e5aaf092.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dialog/dialog\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { BidoAttributeDTOId } from '../../../../shared/types/api-types/bido-attribute-dto-id.interface';\r\nimport { BidoAttributeDTO } from '../../../../shared/types/api-types/bido-attribute-dto.interface';\r\nimport { BireAttributeDTOId } from '../../../../shared/types/api-types/bire-attribute-dto-id.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\n\r\n@Injectable()\r\nexport class AttributesSearchService extends AbstractAwHttpService {\r\n\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getAllEngineeringAttributeList(): Observable<BireAttributeDTO[]> {\r\n    return super.post<void, BireAttributeDTO[]>(this.productStructureManagementApi.\r\n     findBireAttributes);\r\n  }\r\n\r\n  public getEngineeringAttributeList(category : string): Observable<BireAttributeDTO[]> {\r\n   return super.post<string, BireAttributeDTO[]>(this.productStructureManagementApi.\r\n    findBireAttributesByCategory, category);\r\n}\r\n\r\n  public getAllFleetAttributeList(): Observable<BidoAttributeDTO[]> {\r\n    return super.post<void, BidoAttributeDTO[]>(this.fleetManagementApi.\r\n      findBidoAttributes);\r\n  }\r\n\r\n  public getFleetAttributeList(category : string): Observable<BidoAttributeDTO[]> {\r\n  return super.post<string, BidoAttributeDTO[]>(this.fleetManagementApi.\r\n    findBidoAttributesByAttributeCategory, category);\r\n}\r\n  public removeEngineeringAttributes(selectedAttribute : BireAttributeDTOId[]): Observable<void> {\r\n  return super.post<BireAttributeDTOId[], void>(this.productStructureManagementApi.\r\n    removeBireAttribute, selectedAttribute);\r\n}\r\n\r\n  public removeFleetAttributes(selectedAttribute : BidoAttributeDTOId[]): Observable<void> {\r\n  return super.post<BidoAttributeDTOId[], void>(this.fleetManagementApi.\r\n    removeBidoAttribute, selectedAttribute);\r\n}\r\n\r\n\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".fileToImport\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control form-control-with-modal\\\">\\r\\n          <div class=\\\"form-control-data\\\">\\r\\n            {{ fileName }}\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"btn-file-upload-wrapper\\\">\\r\\n            <p-fileUpload\\r\\n              #fileUploader\\r\\n              class=\\\"aw-fileupload\\\"\\r\\n              name=\\\"document[]\\\"\\r\\n              customUpload=\\\"true\\\"\\r\\n              mode=\\\"basic\\\"\\r\\n              auto=\\\"true\\\"\\r\\n              chooseLabel=\\\"\\\"\\r\\n              (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n            >\\r\\n            </p-fileUpload>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">\\r\\n          {{ getComponentName() + \\\".deleteScenCurrentData\\\" | translate }}\\r\\n        </label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-checkbox binary=\\\"true\\\" class=\\\"aw-checkbox\\\" [(ngModel)]=\\\"file.deletion\\\"></p-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" mat-raised-button class=\\\"btn-with-spinner\\\" [disabled]=\\\"!fileName\\\" (click)=\\\"importFile()\\\">\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showImportSpinner\\\"></span>\\r\\n      {{ getComponentName() + \\\".import\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-imported-message\\r\\n  *ngIf=\\\"showImportMsgDialog\\\"\\r\\n  [importReportMessage]=\\\"importMessage\\\"\\r\\n  [(display)]=\\\"showImportMsgDialog\\\"\\r\\n  (onClose)=\\\"onCloseMsgDialog($event)\\\"\\r\\n></aw-dialog-imported-message>\\r\\n\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FileUpload } from 'primeng/components/fileupload/fileupload';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { ImportWorkflowFromExcelDTO } from '../../../../../shared/types/api-input-types/administration-workflow-management/import-workflow-from-excel-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { FileUtils } from '../../../../../shared/utils/file-utils';\r\nimport { WorkflowManagementFormService } from '../workflow-management-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-import-scenario',\r\n  templateUrl: './dialog-import-scenario.component.html'\r\n})\r\nexport class DialogImportScenarioComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public onValidate: EventEmitter<string>;\r\n\r\n  // Fields\r\n  public file: ImportWorkflowFromExcelDTO;\r\n  public fileName: string | undefined;\r\n\r\n  // Report Report Dialog\r\n  public showImportMsgDialog: boolean;\r\n  public importMessage: string;\r\n\r\n  // Loader\r\n  public showImportSpinner: boolean;\r\n\r\n  public constructor(\r\n    private readonly workflowManagementFormService: WorkflowManagementFormService,\r\n    public messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogImportScenarioComponent');\r\n    this.file = {};\r\n    this.onValidate = new EventEmitter<string>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    // TODO\r\n  }\r\n\r\n  /*************************************************************************\r\n   * UPLOAD FILE\r\n   *************************************************************************/\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (event.files) {\r\n      const file: File = event.files[0];\r\n      {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          if (fileContent) {\r\n            this.file = {\r\n              excelSource: fileContent,\r\n              fileName: file.name,\r\n              deletion: this.file.deletion\r\n            };\r\n\r\n            this.fileName = this.file.fileName;\r\n          }\r\n        });\r\n      }\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * IMPORT FILE\r\n   *************************************************************************/\r\n  public importFile() {\r\n    this.showImportSpinner = true;\r\n    this.workflowManagementFormService.importWorkflowFromExcel(this.file).subscribe(\r\n      (resp: string) => {\r\n        this.importMessage = resp;\r\n        this.showImportMsgDialog = true;\r\n        this.showImportSpinner = false;\r\n        this.onValidate.emit();\r\n      },\r\n      (error) => {\r\n        this.messageService.showErrorMessage('global.internalServerError');\r\n        this.showImportSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  public onCloseMsgDialog() {\r\n    this.closeDialog();\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [rows]=\\\"10\\\"\\r\\n          [cols]=\\\"30\\\"\\r\\n          [disabled]=\\\"true\\\"\\r\\n          pInputTextarea\\r\\n          [(ngModel)]=\\\"importReportMessage\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"close()\\\">{{ \\\"global.close\\\" | translate }}</button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { DialogComponent } from '../../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-imported-message',\r\n  templateUrl: './dialog-imported-message.component.html'\r\n})\r\nexport class DialogImportedMessageComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public onClose: EventEmitter<string>;\r\n\r\n  @Input()\r\n  public importReportMessage: string;\r\n\r\n  public constructor() {\r\n    super(ComponentOpenMode.Read, 'DialogImportedMessageComponent');\r\n    this.onClose = new EventEmitter();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    return;\r\n  }\r\n\r\n  public close() {\r\n    this.onClose.emit();\r\n    this.closeDialog();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle-\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ subtitle }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"editScenario()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancel()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveScenario()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-menu-item (click)=\\\"reload()\\\">\\r\\n        {{ \\\"global.refresh\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div\\r\\n          #mainInformationAnchor\\r\\n          class=\\\"grid-cell--12\\\"\\r\\n          (click)=\\\"selectPageTocEntry(component.MAIN_INFORMATION_ANCHOR_ID)\\\"\\r\\n        >\\r\\n          <div\\r\\n            class=\\\"grid-cell grid-cell--container\\\"\\r\\n            [ngClass]=\\\"{ active: isPageTocEntrySelected(component.MAIN_INFORMATION_ANCHOR_ID) }\\\"\\r\\n          >\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"page.mainData\\\" | translate }}\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ \\\"global.name\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"aw-input\\\"\\r\\n                    [disabled]=\\\"!isCreateOpenMode\\\"\\r\\n                    maxlength=\\\"100\\\"\\r\\n                    [(ngModel)]=\\\"bidtScenario.name\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ componentData.componentId + \\\".bidtFuncObjectIdStr\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"functionObjectList\\\"\\r\\n                    [(ngModel)]=\\\"selectedFuncObjectId\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [disabled]=\\\"!isCreateOpenMode\\\"\\r\\n                    (onChange)=\\\"onFuncObjectChange()\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ componentData.componentId + \\\".initialStatusStr\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    *ngIf=\\\"statusObjectList\\\"\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"statusObjectList\\\"\\r\\n                    [(ngModel)]=\\\"bidtScenario.initialStatusKey\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [disabled]=\\\"!isCreateOpenMode\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ componentData.componentId + \\\".assignmentOfProfiles\\\" | translate }}\\r\\n                  ({{ profilesTableDataSource ? profilesTableDataSource.dataCount : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <!-- Assignment of profiles table -->\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div style=\\\"width: 100%\\\">\\r\\n                    <a-table [dataSource]=\\\"profilesTableDataSource\\\">\\r\\n                      <ng-template columnDef=\\\"isAffected\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <div class=\\\"ui-g-12\\\">\\r\\n                          <p-checkbox\\r\\n                            value=\\\"profilesList\\\"\\r\\n                            [(ngModel)]=\\\"rowData.isAffected\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            binary=\\\"true\\\"\\r\\n                          >\\r\\n                          </p-checkbox>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ componentData.componentId + \\\".controlsManagement\\\" | translate }}\\r\\n                  ({{ controlMgmtTableDataSource ? controlMgmtTableDataSource.dataCount : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <!-- Controls management table -->\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div style=\\\"width: 100%\\\">\\r\\n                    <a-table [dataSource]=\\\"controlMgmtTableDataSource\\\">\\r\\n                      <ng-template columnDef=\\\"isManaged\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <div class=\\\"ui-g-12\\\">\\r\\n                          <p-checkbox\\r\\n                            value=\\\"controlsManagement\\\"\\r\\n                            [(ngModel)]=\\\"rowData.isManaged\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            binary=\\\"true\\\"\\r\\n                          >\\r\\n                          </p-checkbox>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template columnDef=\\\"isVisible\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <div class=\\\"ui-g-12\\\">\\r\\n                          <p-checkbox\\r\\n                            value=\\\"controlsManagement\\\"\\r\\n                            [(ngModel)]=\\\"rowData.isVisible\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            binary=\\\"true\\\"\\r\\n                          >\\r\\n                          </p-checkbox>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template columnDef=\\\"isReadOnly\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <div class=\\\"ui-g-12\\\">\\r\\n                          <p-checkbox\\r\\n                            value=\\\"controlsManagement\\\"\\r\\n                            [(ngModel)]=\\\"rowData.isReadOnly\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            binary=\\\"true\\\"\\r\\n                          >\\r\\n                          </p-checkbox>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template columnDef=\\\"isMandatory\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <div class=\\\"ui-g-12\\\">\\r\\n                          <p-checkbox\\r\\n                            value=\\\"controlsManagement\\\"\\r\\n                            [(ngModel)]=\\\"rowData.isMandatory\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            binary=\\\"true\\\"\\r\\n                          >\\r\\n                          </p-checkbox>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template columnDef=\\\"groupName\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <span pTooltip=\\\"{{ rowData['description'] }}\\\" tooltipPosition=\\\"bottom\\\">\\r\\n                          {{ rowData.groupName }}\\r\\n                        </span>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!-- Target Status table -->\\r\\n              <div class=\\\"section\\\" *ngIf=\\\"showTargetStatusTable()\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <h4 class=\\\"section-title\\\">\\r\\n                    {{ componentData.componentId + \\\".assignmentOfTargetStatus\\\" | translate }}\\r\\n                    ({{ targetStatusTableDataSource ? targetStatusTableDataSource.dataCount : 0 }})\\r\\n                  </h4>\\r\\n                  <a-table [dataSource]=\\\"targetStatusTableDataSource\\\">\\r\\n                    <ng-template columnDef=\\\"isAffected\\\" let-rowData=\\\"rowData\\\">\\r\\n                      <div class=\\\"ui-g-12\\\">\\r\\n                        <p-checkbox\\r\\n                          value=\\\"targetStatus\\\"\\r\\n                          [(ngModel)]=\\\"rowData.isAffected\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          binary=\\\"true\\\"\\r\\n                        >\\r\\n                        </p-checkbox>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vd29ya2Zsb3ctbWFuYWdlbWVudC9mb3JtL3dvcmtmbG93LW1hbmFnZW1lbnQtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { PageTocService } from '../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { PageTocEntry } from '../../../../shared/components/component-sidebar/types/page-toc-entry.interface';\r\nimport { ColumnAlignment, TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { FunctionObjectConstants } from '../../../../shared/constants/function-object-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { SaveWorkflowManagementInputDTO } from '../../../../shared/types/api-input-types/administration-workflow-management/save-workflow-management-input-dto.interface';\r\nimport { BidtScenarioControlGroupCustomDTO } from '../../../../shared/types/api-output-types/administration-workflow-management/bidt-scenario-control-group-custom-dto.interface';\r\nimport { BidtScenarioDataCustomOutputDTO } from '../../../../shared/types/api-output-types/administration-workflow-management/bidt-scenario-data-custom-output-dto.interface';\r\nimport { BidtScenarioProfileGroupDTO } from '../../../../shared/types/api-output-types/administration-workflow-management/bidt-scenario-profile-group-dto.interface ';\r\nimport { BidtScenarioTargetStatusGroupDTO } from '../../../../shared/types/api-output-types/administration-workflow-management/bidt-scenario-target-status-group-dto.interface';\r\nimport { AttributeDTO } from '../../../../shared/types/api-types/attribute-dto.interface';\r\nimport { BidoAttributeDTO } from '../../../../shared/types/api-types/bido-attribute-dto.interface';\r\nimport { BidtControlGroupDTO } from '../../../../shared/types/api-types/bidt-control-group-dto.interface';\r\nimport { BidtScenarioDTO } from '../../../../shared/types/api-types/bidt-scenario-dto.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { ObjectUtils } from '../../../../shared/utils/object-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\nimport { AttributeField, WorkflowUtils } from '../../../../shared/utils/workflow-utils';\r\nimport { AttributesSearchService } from '../../attributes/search/attributes-search.service';\r\n\r\nimport { LabelValueKey, WorkflowManagementFormService } from './workflow-management-form.service';\r\n\r\ninterface BidtScenarioControlGroupCustomUIDTO {\r\n  bidtControlGroupData?: BidtControlGroupDTO;\r\n  bidtControlGroupId?: number;\r\n  bidtScenarioId?: number;\r\n  isMandatory?: boolean;\r\n  isVisible?: boolean;\r\n  isReadOnly?: boolean;\r\n  isManaged?: boolean;\r\n  groupName?: string;\r\n  description?: string | undefined;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-workflow-management-form',\r\n  styleUrls: ['./workflow-management-form.component.scss'],\r\n  templateUrl: './workflow-management-form.component.html'\r\n})\r\nexport class WorkflowManagementFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public static readonly MAIN_DATA_ANCHOR_ID: string = 'mainDataAnchor';\r\n  public static readonly MAIN_INFORMATION_ANCHOR_ID: string = 'mainInformationAnchor';\r\n\r\n  public readonly component: typeof WorkflowManagementFormComponent;\r\n\r\n  @ViewChild(WorkflowManagementFormComponent.MAIN_INFORMATION_ANCHOR_ID)\r\n  public mainInformationEltRef: ElementRef;\r\n\r\n  @ViewChild(WorkflowManagementFormComponent.MAIN_DATA_ANCHOR_ID)\r\n  public mainDataEltRef: ElementRef;\r\n\r\n  public toc: PageTocEntry[];\r\n\r\n  // Screen object\r\n  public bidtScenario: BidtScenarioDTO;\r\n\r\n  // Table\r\n  public isLoadingData: boolean;\r\n\r\n  public targetStatusTableDataSource: TableDataSource<BidtScenarioTargetStatusGroupDTO>;\r\n  public profilesTableDataSource: TableDataSource<BidtScenarioProfileGroupDTO>;\r\n  public controlMgmtTableDataSource: TableDataSource<BidtScenarioControlGroupCustomUIDTO>;\r\n  private forbiddenAttributeControls: BidtScenarioControlGroupCustomUIDTO[];\r\n\r\n  // Dropdown\r\n  public functionObjectList: LabelValueKey<string>[];\r\n  public selectedFuncObjectId: string | undefined;\r\n  public statusObjectList: LabelValue<string>[] | undefined;\r\n  public currentStatusObjectListKey: string | undefined;\r\n\r\n  // Attributes\r\n  private bireAttributes: BireAttributeDTO[] = [];\r\n  private bidoAttributes: BidoAttributeDTO[] = [];\r\n\r\n  public showSaveSpinner: boolean;\r\n  public subtitle: string;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    pageTocService: PageTocService,\r\n    public translateService: TranslateService,\r\n    private readonly workflowManagementFormService: WorkflowManagementFormService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly attributesSearchService: AttributesSearchService\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Write,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n    this.component = WorkflowManagementFormComponent;\r\n    this.initTargetStatusTableDataSource();\r\n    this.initProfilesTableDataSource();\r\n    this.initcontrolMgmtTableDataSource();\r\n    super.registerPageTocEntryObservable();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_WORKFLOW_MANAGEMENT_FORM;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.updateOpenMode(this.componentData.openMode);\r\n\r\n    this.setTableOfContent();\r\n    this.init();\r\n  }\r\n\r\n  /*************************************************************************\r\n   * INIT\r\n   *************************************************************************/\r\n  private init() {\r\n    this.selectedFuncObjectId = undefined;\r\n    this.forbiddenAttributeControls = [];\r\n    this.bidtScenario = {};\r\n\r\n    this.loadDropdowns();\r\n    this.loadAttributes();\r\n    this.load();\r\n  }\r\n\r\n  /*************************************************************************\r\n   * SETTING TABLE OF CONTENTS\r\n   *************************************************************************/\r\n  private setTableOfContent(): void {\r\n    const mainDataKey = 'page.mainData';\r\n    const generalKey = 'global.general';\r\n    this.translateService.get([mainDataKey, generalKey]).subscribe((results: string[]) => {\r\n      const mainDataLabel: string = !!results ? (results[mainDataKey] as string) : 'Main Information';\r\n      const generalLabel: string = !!results ? (results[generalKey] as string) : 'General';\r\n\r\n      this.toc = [\r\n        {\r\n          id: 'mainInformationAnchor',\r\n          anchor: this.mainInformationEltRef,\r\n          label: mainDataLabel\r\n        },\r\n        {\r\n          id: 'mainDataAnchor',\r\n          anchor: this.mainDataEltRef,\r\n          label: generalLabel\r\n        }\r\n      ];\r\n\r\n      super.selectPageTocEntry(this.component.MAIN_INFORMATION_ANCHOR_ID);\r\n    });\r\n  }\r\n\r\n  /*************************************************************************\r\n   * INTI TABLE COLS\r\n   *************************************************************************/\r\n  private initTargetStatusTableDataSource(): void {\r\n    this.targetStatusTableDataSource = new TableDataSource({\r\n      enableSelection: false,\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'statusName',\r\n          translateKey: this.getTranslateKey('statusName'),\r\n          width: '90%'\r\n        },\r\n        {\r\n          field: 'isAffected',\r\n          translateKey: this.getTranslateKey('isAffected'),\r\n          alignment: ColumnAlignment.CENTER,\r\n          width: '10%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initProfilesTableDataSource(): void {\r\n    this.profilesTableDataSource = new TableDataSource({\r\n      enableSelection: false,\r\n      allowMultiSelect: true,\r\n      itemsPerPage: 6,\r\n      columns: [\r\n        {\r\n          field: 'profileName',\r\n          translateKey: this.getTranslateKey('profileName'),\r\n          width: '40%'\r\n        },\r\n        {\r\n          field: 'profileComment',\r\n          translateKey: this.getTranslateKey('profileComment'),\r\n          width: '40%'\r\n        },\r\n        {\r\n          field: 'isAffected',\r\n          translateKey: this.getTranslateKey('isAffected'),\r\n          alignment: ColumnAlignment.CENTER,\r\n          width: '20%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initcontrolMgmtTableDataSource(): void {\r\n    this.controlMgmtTableDataSource = new TableDataSource({\r\n      enableSelection: false,\r\n      allowMultiSelect: false,\r\n      columns: [\r\n        {\r\n          field: 'isManaged',\r\n          translateKey: this.getTranslateKey('isManaged'),\r\n          alignment: ColumnAlignment.CENTER,\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'groupName',\r\n          translateKey: this.getTranslateKey('groupName'),\r\n          width: '60%'\r\n        },\r\n        {\r\n          field: 'isVisible',\r\n          translateKey: this.getTranslateKey('isVisible'),\r\n          alignment: ColumnAlignment.CENTER,\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'isReadOnly',\r\n          translateKey: this.getTranslateKey('isReadOnly'),\r\n          alignment: ColumnAlignment.CENTER,\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'isMandatory',\r\n          translateKey: this.getTranslateKey('isMandatory'),\r\n          alignment: ColumnAlignment.CENTER,\r\n          width: '10%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  /*************************************************************************\r\n   * SCREEN OPERAIONS\r\n   *************************************************************************/\r\n  public reload() {\r\n    this.init();\r\n  }\r\n\r\n  public editScenario() {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public cancel() {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n\r\n    this.reload();\r\n  }\r\n\r\n  /*************************************************************************\r\n   * LOAD DROPDOWNS DATA\r\n   *************************************************************************/\r\n  private loadDropdowns() {\r\n    this.workflowManagementFormService.getInternationalizedFuncObject().subscribe(\r\n      (response) => (this.functionObjectList = response),\r\n      (error) => {\r\n        this.messageService.showErrorMessage('global.internalServerError');\r\n      }\r\n    );\r\n  }\r\n\r\n  private getFunctionObjectKey(): string | undefined {\r\n    const labelValue =\r\n      this.functionObjectList && this.functionObjectList.find((lv) => lv.value === `${this.selectedFuncObjectId}`);\r\n\r\n    return labelValue && labelValue.key;\r\n  }\r\n\r\n  private getStatusObjectListKey(): string | undefined {\r\n    return FunctionObjectConstants.getPropertyListKeyByFuncObjKey(this.getFunctionObjectKey());\r\n  }\r\n\r\n  private loadStatusList() {\r\n    const propertyListKey = FunctionObjectConstants.getPropertyListKeyByFuncObjKey(this.getFunctionObjectKey());\r\n    if (propertyListKey) {\r\n      this.propertiesService.getValue(propertyListKey).subscribe(\r\n        (results) => {\r\n          this.statusObjectList = [...results];\r\n          this.currentStatusObjectListKey = propertyListKey;\r\n          this.targetStatusTableDataSource.setData(\r\n            this.statusObjectList.map((lv) => ({\r\n              statusName: lv.label,\r\n              statusKey: lv.value,\r\n              isAffected: false\r\n            }))\r\n          );\r\n          this.statusObjectList.unshift({\r\n            value: WorkflowUtils.ALL_STATUS,\r\n            label: this.translateService.instant(this.getTranslateKey('allStatus'))\r\n          });\r\n        },\r\n        (error) => {\r\n          this.messageService.showErrorMessage('global.internalServerError');\r\n        }\r\n      );\r\n    } else {\r\n      this.statusObjectList = undefined;\r\n      this.currentStatusObjectListKey = undefined;\r\n    }\r\n  }\r\n\r\n  public showTargetStatusTable(): boolean {\r\n    return !!this.statusObjectList && this.bidtScenario.initialStatusKey !== WorkflowUtils.ALL_STATUS;\r\n  }\r\n\r\n  /*************************************************************************\r\n   * LOAD ATTRIBUTES\r\n   *************************************************************************/\r\n\r\n  private loadAttributes() {\r\n    forkJoin({\r\n      resultsBire: this.attributesSearchService.getAllEngineeringAttributeList(),\r\n      resultsBido: this.attributesSearchService.getAllFleetAttributeList()\r\n    }).subscribe((results) => {\r\n      if (results) {\r\n        this.bireAttributes = results.resultsBire;\r\n        this.bidoAttributes = results.resultsBido;\r\n        this.fillControlMgmtTable([...this.controlMgmtTableDataSource.dataSrc, ...this.forbiddenAttributeControls]);\r\n      }\r\n    });\r\n  }\r\n\r\n  /*************************************************************************\r\n   * LOAD TABLES DATA\r\n   *************************************************************************/\r\n  private load() {\r\n    const bidtScenarioDTO: BidtScenarioDTO = {\r\n      id: undefined\r\n    };\r\n    if (!!this.componentData.objectId) {\r\n      bidtScenarioDTO.id = this.serializationService.deserialize(this.componentData.objectId);\r\n    } else {\r\n      this.displayComponentContext('tab.createMode', this.isCreateOpenMode);\r\n    }\r\n\r\n    this.isLoadingData = true;\r\n\r\n    this.workflowManagementFormService.searchScenarioByCriteria(bidtScenarioDTO).subscribe(\r\n      (response: BidtScenarioDataCustomOutputDTO) => {\r\n        if (!!response) {\r\n          if (!!response.bidtScenarioDTO) {\r\n            this.bidtScenario = response.bidtScenarioDTO as BidtScenarioDTO;\r\n            this.selectedFuncObjectId = !!this.bidtScenario.bidtFuncObjectId\r\n              ? this.bidtScenario.bidtFuncObjectId.toString()\r\n              : undefined;\r\n\r\n            this.loadStatusList();\r\n            this.displayComponentContext(this.bidtScenario.name as string, this.isCreateOpenMode);\r\n            this.subtitle = this.bidtScenario.name as string;\r\n          }\r\n\r\n          if (!!response.bidtScenProfileGroupList && response.bidtScenProfileGroupList.length > 0) {\r\n            this.profilesTableDataSource.setData(response.bidtScenProfileGroupList);\r\n            this.profilesTableDataSource.update();\r\n          }\r\n\r\n          if (\r\n            ObjectUtils.isDefined(bidtScenarioDTO.id) && // Ignoring target status list in creation mode.\r\n            !!response.bidtScenStatusGroupList &&\r\n            response.bidtScenStatusGroupList.length > 0\r\n          ) {\r\n            this.targetStatusTableDataSource.setData(response.bidtScenStatusGroupList);\r\n            this.targetStatusTableDataSource.update();\r\n          }\r\n\r\n          if (!!response.bidtScenarioControlGroupList && response.bidtScenarioControlGroupList.length > 0) {\r\n            this.fillControlMgmtTable(response.bidtScenarioControlGroupList);\r\n          }\r\n        }\r\n        this.profilesTableDataSource.update();\r\n        this.isLoadingData = false;\r\n      },\r\n      (error) => {\r\n        this.messageService.showErrorMessage('global.internalServerError');\r\n        this.isLoadingData = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  private fillControlMgmtTable(data: BidtScenarioControlGroupCustomDTO[]) {\r\n    const controlMgmtList: BidtScenarioControlGroupCustomUIDTO[] = data.map((row) => ({\r\n      bidtControlGroupData: row.bidtControlGroupData,\r\n      bidtControlGroupId: row.bidtControlGroupId,\r\n      bidtScenarioId: row.bidtScenarioId,\r\n      description: row.bidtControlGroupData\r\n        ? this.translateControlKey(row.bidtControlGroupData.description)\r\n        : undefined,\r\n      isManaged: !!row.isManaged ? row.isManaged : false,\r\n      isMandatory: !!row.isMandatory ? row.isMandatory : false,\r\n      isReadOnly: !!row.isReadOnly ? row.isReadOnly : false,\r\n      isVisible: !!row.isVisible ? row.isVisible : false,\r\n      groupName: row.bidtControlGroupData ? this.translateControlKey(row.bidtControlGroupData.name) : undefined\r\n    }));\r\n\r\n    // Removing lines without name => Attribute unknown or fordidden (by mandant)\r\n    this.forbiddenAttributeControls = controlMgmtList.filter((row) => row.groupName === undefined);\r\n\r\n    controlMgmtList.sort((a, b) => {\r\n      if (a.groupName) {\r\n        if (b.groupName) {\r\n          return a.groupName.localeCompare(b.groupName);\r\n        } else {\r\n          return 1;\r\n        }\r\n      } else {\r\n        return -1;\r\n      }\r\n    });\r\n    this.controlMgmtTableDataSource.setData(controlMgmtList.filter((row) => row.groupName !== undefined));\r\n    this.controlMgmtTableDataSource.update();\r\n  }\r\n\r\n  private translateControlKey(key: string | undefined): string | undefined {\r\n    let translation: string | undefined;\r\n    if (key) {\r\n      const attibuteField = WorkflowUtils.controlGroupTranslationKeyToAttributeField(key);\r\n      translation = attibuteField\r\n        ? this.translateAttribute(attibuteField)\r\n        : this.translateService.instant(this.getTranslateKey(key));\r\n    }\r\n\r\n    return translation;\r\n  }\r\n\r\n  private translateAttribute(attributeField: AttributeField): string | undefined {\r\n    let translation: string | undefined;\r\n    let attributes: AttributeDTO[] | undefined;\r\n    if (attributeField.attributeOrigin === WorkflowUtils.ORIGIN_BIRE) {\r\n      attributes = this.bireAttributes;\r\n    } else if (attributeField.attributeOrigin === WorkflowUtils.ORIGIN_BIDO) {\r\n      attributes = this.bidoAttributes;\r\n    }\r\n\r\n    if (attributes) {\r\n      const attributeValue: AttributeDTO | undefined = attributes.find(\r\n        (attribute: AttributeDTO) => attribute.attributeId === attributeField.attributeId\r\n      );\r\n      if (attributeValue) {\r\n        translation = this.translateService.instant(\r\n          this.getTranslateKey(`attributeControl.${attributeField.attributeField}`),\r\n          {\r\n            content:\r\n              attributeValue[\r\n                `attribute${StringUtils.firstLetterToUpper(\r\n                  attributeField.attributeField\r\n                )}${StringUtils.firstLetterToUpper(this.translateService.currentLang)}`\r\n              ] || ''\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    return translation;\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Fetch Control Management Table List\r\n   *************************************************************************/\r\n  public onFuncObjectChange() {\r\n    this.fetchControlMgmtList();\r\n\r\n    if (this.getStatusObjectListKey() !== this.currentStatusObjectListKey) {\r\n      if (this.bidtScenario) {\r\n        // Removing status that are not relevant anymore\r\n        this.bidtScenario.initialStatusKey = undefined;\r\n        this.bidtScenario.targetStatusKeyList = undefined;\r\n      }\r\n      this.loadStatusList();\r\n    }\r\n  }\r\n\r\n  public fetchControlMgmtList() {\r\n    if (!!this.selectedFuncObjectId) {\r\n      this.bidtScenario.bidtFuncObjectId = parseInt(this.selectedFuncObjectId, 10);\r\n      this.workflowManagementFormService\r\n        .getControlMgmtTableData(this.bidtScenario)\r\n        .subscribe((response: BidtScenarioDataCustomOutputDTO) => {\r\n          if (!!response && !!response.bidtScenarioControlGroupList) {\r\n            this.fillControlMgmtTable(response.bidtScenarioControlGroupList);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * SAVE\r\n   *************************************************************************/\r\n  public saveScenario(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.isCreateOpenMode) {\r\n        this.bidtScenario.bidtFuncObjectId = parseInt(this.selectedFuncObjectId as string, 10);\r\n        this.bidtScenario.id = undefined;\r\n      }\r\n\r\n      const saveWorkflowManagementInputDTO: SaveWorkflowManagementInputDTO = {\r\n        bidtScenarioDataCustomOutputDTO: {\r\n          bidtScenarioDTO: this.bidtScenario,\r\n          bidtScenProfileGroupList: this.profilesTableDataSource.dataSrc,\r\n          bidtScenStatusGroupList: this.targetStatusTableDataSource.dataSrc,\r\n          bidtScenarioControlGroupList: [...this.controlMgmtTableDataSource.dataSrc, ...this.forbiddenAttributeControls]\r\n        },\r\n        isScenarioUpdated: this.openMode === ComponentOpenMode.Create ? false : true\r\n      };\r\n\r\n      this.showSaveSpinner = true;\r\n      this.workflowManagementFormService.saveWorkflowManagement(saveWorkflowManagementInputDTO).subscribe(\r\n        (response) => {\r\n          this.showSaveSpinner = false;\r\n\r\n          if (this.isCreateOpenMode && !!response) {\r\n            this.componentData.objectId = this.serializationService.serialize(response);\r\n          }\r\n\r\n          this.updateOpenMode(ComponentOpenMode.Read);\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('onSaveSuccess'));\r\n          this.reload();\r\n        },\r\n        (error) => {\r\n          this.messageService.showErrorMessage('global.errorOnSave');\r\n          this.showSaveSpinner = false;\r\n        }\r\n      );\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  private isScreenValidated(): boolean {\r\n    if (!!this.selectedFuncObjectId && !!this.bidtScenario.name) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { BidtFuncObjectApi } from '../../../../shared/api/bidt-func-object.api';\r\nimport { WorkflowImportApi } from '../../../../shared/api/workflow-import.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { ImportWorkflowFromExcelDTO } from '../../../../shared/types/api-input-types/administration-workflow-management/import-workflow-from-excel-dto.interface';\r\nimport { SaveWorkflowManagementInputDTO } from '../../../../shared/types/api-input-types/administration-workflow-management/save-workflow-management-input-dto.interface';\r\nimport { BidtScenarioDataCustomOutputDTO } from '../../../../shared/types/api-output-types/administration-workflow-management/bidt-scenario-data-custom-output-dto.interface';\r\nimport { BidtScenarioDTO } from '../../../../shared/types/api-types/bidt-scenario-dto.interface';\r\nimport { BidtScenarioApi } from '../../../../shared/types/api-types/bidt-scenario.api';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\n\r\nexport interface LabelValueKey<T> extends LabelValue<T> {\r\n  key: string;\r\n}\r\n\r\n@Injectable()\r\nexport class WorkflowManagementFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtScenarioApi: BidtScenarioApi,\r\n    private readonly bidtFuncObjectApi: BidtFuncObjectApi,\r\n    private readonly workflowImportApi: WorkflowImportApi,\r\n    private readonly translateService: TranslateService\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public searchScenarioByCriteria(bidtScenarioDTO: BidtScenarioDTO): Observable<BidtScenarioDataCustomOutputDTO> {\r\n    return super.post<BidtScenarioDTO, BidtScenarioDataCustomOutputDTO>(\r\n      this.bidtScenarioApi.searchScenarioByCriteria,\r\n      bidtScenarioDTO\r\n    );\r\n  }\r\n\r\n  public getControlMgmtTableData(bidtScenarioDTO: BidtScenarioDTO): Observable<BidtScenarioDataCustomOutputDTO> {\r\n    return super.post<BidtScenarioDTO, BidtScenarioDataCustomOutputDTO>(\r\n      this.bidtScenarioApi.getControlMgmtTableData,\r\n      bidtScenarioDTO\r\n    );\r\n  }\r\n\r\n  public findAll(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.bidtFuncObjectApi.findAll);\r\n  }\r\n\r\n  public getInternationalizedFuncObject(): Observable<LabelValueKey<string>[]> {\r\n    return this.findAll().pipe(\r\n      map((response: LabelValue<string>[]) => {\r\n        return response.map((lv) => ({\r\n          value: lv.value,\r\n          key: lv.label,\r\n          label: this.translateService.instant(`FuncObject.${lv.label}`)\r\n        }));\r\n      })\r\n    );\r\n  }\r\n\r\n  public saveWorkflowManagement(dto: SaveWorkflowManagementInputDTO): Observable<number> {\r\n    return super.post<SaveWorkflowManagementInputDTO, number>(this.bidtScenarioApi.saveWorkflowManagement, dto);\r\n  }\r\n\r\n  public importWorkflowFromExcel(dto: ImportWorkflowFromExcelDTO): Observable<string> {\r\n    return super.post<ImportWorkflowFromExcelDTO, string>(this.workflowImportApi.importWorkflowFromExcel, dto);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button type=\\\"button\\\" mat-menu-item class=\\\"btn-with-spinner\\\" (click)=\\\"exportTable()\\\">\\r\\n        <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showExportSpinner\\\"></span>\\r\\n        {{ \\\"global.export\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button type=\\\"button\\\" mat-menu-item (click)=\\\"importTable()\\\">\\r\\n        {{ \\\"global.import\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button type=\\\"button\\\" mat-menu-item (click)=\\\"refresh()\\\">\\r\\n        {{ \\\"global.refresh\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }} ({{ workflowTableDataSource.dataCount }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <a-table [dataSource]=\\\"workflowTableDataSource\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteSelectedScenario(workflowTableDataSource.dataSelection)\\\"\\r\\n                    *ngIf=\\\"hasManageAccessRight && workflowTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openSelectedScenario(workflowTableDataSource.dataSelection)\\\"\\r\\n                    *ngIf=\\\"workflowTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"duplicateSelectedScenario()\\\"\\r\\n                    *ngIf=\\\"workflowTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.duplicate\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openNewScenario()\\\"\\r\\n                    *ngIf=\\\"!workflowTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.add\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"bidtFuncObjectLabel\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <span>{{ \\\"FuncObject.\\\" + rowData.bidtFuncObjectLabel | translate }}</span>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"targetStatusKeyList\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <span\\r\\n                    *ngIf=\\\"!!rowData.targetStatusKeyList && rowData.targetStatusKeyList.length > 0\\\"\\r\\n                    pTooltip=\\\"{{ rowData['targetStatusTooltip'] }}\\\"\\r\\n                    tooltipPosition=\\\"bottom\\\"\\r\\n                  >\\r\\n                    {{ rowData.selectedStatusLabel }}\\r\\n                  </span>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"bidtScenarioProfileList\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <span\\r\\n                    *ngIf=\\\"!!rowData.bidtScenarioProfileList && rowData.bidtScenarioProfileList.length > 0\\\"\\r\\n                    pTooltip=\\\"{{ rowData['profileTooltip'] }}\\\"\\r\\n                    tooltipPosition=\\\"bottom\\\"\\r\\n                  >\\r\\n                    {{ rowData.selectedProfileVal }}\\r\\n                  </span>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-dialog-import-scenario\\r\\n  *ngIf=\\\"showImportDialog\\\"\\r\\n  [(display)]=\\\"showImportDialog\\\"\\r\\n  (onValidate)=\\\"onImportScenario($event)\\\"\\r\\n></aw-dialog-import-scenario>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vd29ya2Zsb3ctbWFuYWdlbWVudC9zZWFyY2gvd29ya2Zsb3ctbWFuYWdlbWVudC1zZWFyY2guY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { BidtScenarioFindByCriteriaInputDTO } from '../../../../shared/types/api-input-types/administration-workflow-management/bidt-scenario-find-by-criteria-input-dto.interface';\r\nimport { BidtScenarioUIDTO } from '../../../../shared/types/api-output-types/administration-workflow-management/bidt-scenario-ui-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\nimport { WorkflowUtils } from '../../../../shared/utils/workflow-utils';\r\n\r\nimport { WorkflowManagementSearchService } from './workflow-management-search.service';\r\n\r\ninterface BidtScenarioUICustomDTO {\r\n  bidtScenarioProfileList?: LabelValue<string>[];\r\n  selectedProfileVal?: string;\r\n  selectedProfileLabel?: string;\r\n  profileTooltip?: string;\r\n  targetStatusKeyList?: LabelValue<string>[];\r\n  targetStatusTooltip?: string;\r\n  selectedStatusVal?: string;\r\n  selectedStatusLabel?: string;\r\n  bidtFuncObjectId?: number;\r\n  name?: string;\r\n  id?: number;\r\n  description?: string;\r\n  initialStatusKey?: string;\r\n  initialStatusLabel?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-workflow-management-search',\r\n  styleUrls: ['./workflow-management-search.component.scss'],\r\n  templateUrl: './workflow-management-search.component.html'\r\n})\r\nexport class WorkflowManagementSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  // Table\r\n  public workflowTableDataSource: TableDataSource<BidtScenarioUICustomDTO>;\r\n\r\n  public showExportSpinner: boolean;\r\n  public showTableLoadingSpinner: boolean;\r\n\r\n  public showImportDialog: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly translateService: TranslateService,\r\n    private readonly workflowManagementSearchService: WorkflowManagementSearchService,\r\n    private readonly confirmationService: ConfirmationService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    this.initWorkflowTableDataSource();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_WORKFLOW_MANAGEMENT_SEARCH;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.displayComponentContext('global.search', true);\r\n    this.init();\r\n  }\r\n\r\n  /*************************************************************************\r\n   * SCREEN OPERATIONS\r\n   *************************************************************************/\r\n  private init() {\r\n    this.load();\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.init();\r\n  }\r\n\r\n  /*************************************************************************\r\n   * SET SCENARIO TABLE COLUMNS\r\n   *************************************************************************/\r\n  private initWorkflowTableDataSource(): void {\r\n    this.workflowTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'name',\r\n          translateKey: this.getTranslateKey('name'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'bidtFuncObjectLabel',\r\n          translateKey: this.getTranslateKey('bidtFuncObjectLabel'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'initialStatusLabel',\r\n          translateKey: this.getTranslateKey('initialStatusLabel'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'targetStatusKeyList',\r\n          translateKey: this.getTranslateKey('targetStatusKeyList'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'bidtScenarioProfileList',\r\n          translateKey: this.getTranslateKey('bidtScenarioProfileList'),\r\n          width: '20%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  /*************************************************************************\r\n   * LOAD SCENARIO TABLE RESULTS\r\n   *************************************************************************/\r\n  private load(): void {\r\n    const bidtScenarioFindByCriteriaInputDTO: BidtScenarioFindByCriteriaInputDTO = {\r\n      bidtScenarioDTO: {}\r\n    };\r\n    this.showTableLoadingSpinner = true;\r\n    this.workflowManagementSearchService.findByCriteria(bidtScenarioFindByCriteriaInputDTO).subscribe(\r\n      (response: BidtScenarioUIDTO[]) => {\r\n        if (!!response && response.length > 0) {\r\n          response.forEach((res) => {\r\n            if (!!res && !!res.bidtScenarioProfileList) {\r\n              res.selectedProfileVal = res.bidtScenarioProfileList[0].value;\r\n              this.setProfile(res);\r\n            }\r\n\r\n            // TODO: need confirmation of this behavior as always [...] is displayed in legacy\r\n            if (!!res && !!res.targetStatusKeyList && res.targetStatusKeyList.length > 0) {\r\n              res.selectedStatusLabel = '[...]';\r\n            }\r\n\r\n            this.setTooltip(res);\r\n\r\n            res.selectedStatusLabel = '';\r\n            if (res.targetStatusKeyList) {\r\n              for (let i = 0; i < res.targetStatusKeyList.length; i++) {\r\n                if (res.targetStatusKeyList[i].label !== '[...]') {\r\n                  if (i === res.targetStatusKeyList.length - 1) {\r\n                    res.selectedStatusLabel = res.selectedStatusLabel + res.targetStatusKeyList[i].label;\r\n                  } else {\r\n                    res.selectedStatusLabel = res.selectedStatusLabel + res.targetStatusKeyList[i].label + ', ';\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            res.selectedProfileVal = '';\r\n            if (res.bidtScenarioProfileList) {\r\n              for (let i = 0; i < res.bidtScenarioProfileList.length; i++) {\r\n                if (res.bidtScenarioProfileList[i].label !== '[...]') {\r\n                  if (i === res.bidtScenarioProfileList.length - 1) {\r\n                    res.selectedProfileVal = res.selectedProfileVal + res.bidtScenarioProfileList[i].label;\r\n                  } else {\r\n                    res.selectedProfileVal = res.selectedProfileVal + res.bidtScenarioProfileList[i].label + ', ';\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            if (WorkflowUtils.ALL_STATUS === res.initialStatusKey) {\r\n              res.initialStatusLabel = this.translateService.instant(this.getTranslateKey('allStatus'));\r\n            }\r\n          });\r\n        }\r\n\r\n        this.workflowTableDataSource.setData(response);\r\n        this.workflowTableDataSource.update();\r\n\r\n        this.showTableLoadingSpinner = false;\r\n      },\r\n      (error) => {\r\n        this.showTableLoadingSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  private setTooltip(rowData: BidtScenarioUICustomDTO) {\r\n    const profileTooltip: string[] = [];\r\n    if (!!rowData && !!rowData.bidtScenarioProfileList && rowData.bidtScenarioProfileList.length > 0) {\r\n      rowData.bidtScenarioProfileList.forEach((res) => {\r\n        if (res.label !== '[...]') {\r\n          profileTooltip.push(res.label as string);\r\n        }\r\n      });\r\n\r\n      rowData.profileTooltip = profileTooltip.toString();\r\n    }\r\n\r\n    const statusTootip: string[] = [];\r\n    if (!!rowData && !!rowData.targetStatusKeyList && rowData.targetStatusKeyList.length > 0) {\r\n      rowData.targetStatusKeyList.forEach((res) => {\r\n        if (res.label !== '[...]') {\r\n          statusTootip.push(res.label as string);\r\n        }\r\n      });\r\n\r\n      rowData.targetStatusTooltip = statusTootip.toString();\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * EXPORT TABLE\r\n   *************************************************************************/\r\n  public exportTable(): void {\r\n    this.showExportSpinner = true;\r\n    this.workflowManagementSearchService.generateXlsWorkFlow().subscribe(\r\n      (result) => {\r\n        FileUtils.downloadFile(result.fileContent, result.fileName);\r\n        this.showExportSpinner = false;\r\n      },\r\n      (error) => {\r\n        this.showExportSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  /*************************************************************************\r\n   * IMPORT TABLE\r\n   *************************************************************************/\r\n  public importTable(): void {\r\n    this.showImportDialog = true;\r\n  }\r\n\r\n  public onImportScenario($event) {\r\n    this.refresh();\r\n  }\r\n\r\n  /*************************************************************************\r\n   * OPEN/CREATE SCENARIO\r\n   *************************************************************************/\r\n  public openNewScenario() {\r\n    this.openScenario(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  public openSelectedScenario() {\r\n    this.workflowTableDataSource.dataSelection.forEach((scenario) => {\r\n      if (!!scenario) {\r\n        this.openScenario(scenario, ComponentOpenMode.Read);\r\n      }\r\n    });\r\n  }\r\n\r\n  public duplicateSelectedScenario() {\r\n    this.workflowTableDataSource.dataSelection.forEach((scenario) => {\r\n      if (!!scenario) {\r\n        this.openScenario(scenario, ComponentOpenMode.Create);\r\n      }\r\n    });\r\n  }\r\n\r\n  private openScenario(objectId: BidtScenarioUIDTO | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.ADM_WORKFLOW_MANAGEMENT_FORM,\r\n      openMode\r\n    };\r\n    if (!!objectId && !!objectId.id) {\r\n      data.objectId = this.serializationService.serialize(objectId.id);\r\n    }\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  /*************************************************************************\r\n   * DELETE SCENARIO\r\n   *************************************************************************/\r\n  public deleteSelectedScenario(): void {\r\n    const confirmMessageKey =\r\n      this.workflowTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedScenarios'\r\n        : 'confirmDeleteSelectedScenario';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(confirmMessageKey),\r\n      accept: () => {\r\n        const idList: number[] = [];\r\n        this.workflowTableDataSource.dataSelection.forEach((row) => {\r\n          idList.push(row.id as number);\r\n        });\r\n        this.workflowManagementSearchService.deleteScenId(idList).subscribe(\r\n          (result) => {\r\n            this.workflowTableDataSource.dataSelection = [];\r\n            this.refresh();\r\n          },\r\n          (error) => {\r\n            this.messageService.showSuccessMessage(this.getTranslateKey('errorOnDeletion'));\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Filtering\r\n   */\r\n  public setProfile(rowData: BidtScenarioUIDTO) {\r\n    if (!!rowData && !!rowData.bidtScenarioProfileList) {\r\n      if (!!rowData.selectedProfileVal) {\r\n        rowData.selectedProfileLabel = rowData.bidtScenarioProfileList.filter((row) => {\r\n          return row.value === rowData.selectedProfileVal;\r\n        })[0].label;\r\n      } else {\r\n        rowData.selectedProfileLabel = '[...]';\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { WorkflowExportApi } from '../../../../shared/api/workflow-export.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { BidtScenarioFindByCriteriaInputDTO } from '../../../../shared/types/api-input-types/administration-workflow-management/bidt-scenario-find-by-criteria-input-dto.interface';\r\nimport { BidtScenarioUIDTO } from '../../../../shared/types/api-output-types/administration-workflow-management/bidt-scenario-ui-dto.interface';\r\nimport { BidtScenarioApi } from '../../../../shared/types/api-types/bidt-scenario.api';\r\nimport { FileContentDTO } from '../../../../shared/types/api-types/file-content-dto.interface';\r\n\r\n@Injectable()\r\nexport class WorkflowManagementSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtScenarioApi: BidtScenarioApi,\r\n    private readonly workflowExportApi: WorkflowExportApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  /**\r\n   * Search table records\r\n   */\r\n  public findByCriteria(\r\n    bidtScenarioFindByCriteriaInputDTO: BidtScenarioFindByCriteriaInputDTO\r\n  ): Observable<BidtScenarioUIDTO[]> {\r\n    return super.post<BidtScenarioFindByCriteriaInputDTO, BidtScenarioUIDTO[]>(\r\n      this.bidtScenarioApi.findByCriteria,\r\n      bidtScenarioFindByCriteriaInputDTO\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Export Workflow\r\n   */\r\n  public generateXlsWorkFlow(): Observable<FileContentDTO> {\r\n    return super.post<void, FileContentDTO>(this.workflowExportApi.generateXlsWorkFlow);\r\n  }\r\n\r\n  /**\r\n   * Delete selected records\r\n   */\r\n  public deleteScenId(idList: number[]): Observable<number[]> {\r\n    return super.post<number[], number[]>(this.bidtScenarioApi.delete, idList);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { BidtFuncObjectApi } from '../../../shared/api/bidt-func-object.api';\r\nimport { WorkflowExportApi } from '../../../shared/api/workflow-export.api';\r\nimport { WorkflowImportApi } from '../../../shared/api/workflow-import.api';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { PageTocService } from '../../../shared/components/component-sidebar/page-toc.service';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { BidtScenarioApi } from '../../../shared/types/api-types/bidt-scenario.api';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { AttributesSearchService } from '../attributes/search/attributes-search.service';\r\n\r\nimport { DialogImportScenarioComponent } from './form/dialog-import-scenario/dialog-import-scenario.component';\r\nimport { DialogImportedMessageComponent } from './form/dialog-import-scenario/dialog-imported-message/dialog-imported-message.component';\r\nimport { WorkflowManagementFormComponent } from './form/workflow-management-form.component';\r\nimport { WorkflowManagementFormService } from './form/workflow-management-form.service';\r\nimport { WorkflowManagementSearchComponent } from './search/workflow-management-search.component';\r\nimport { WorkflowManagementSearchService } from './search/workflow-management-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  TooltipModule,\r\n  DropdownModule,\r\n  PrimeNgTableModule,\r\n  CheckboxModule,\r\n  ComponentSidebarModule,\r\n  DialogModule,\r\n  ModalModule,\r\n  FileUploadModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [TableModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogImportScenarioComponent, DialogImportedMessageComponent];\r\n\r\nconst DYNAMIC_COMPONENTS = [WorkflowManagementFormComponent, WorkflowManagementSearchComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [\r\n  WorkflowManagementFormService,\r\n  WorkflowManagementSearchService,\r\n  PageTocService,\r\n  AttributesSearchService\r\n];\r\n\r\nexport const API_PROVIDERS = [BidtScenarioApi, WorkflowExportApi, BidtFuncObjectApi, WorkflowImportApi];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES, ...API_PROVIDERS]\r\n})\r\nexport class WorkflowManagementModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AbstractApi } from './abstract.api';\r\n\r\n@Injectable()\r\nexport class BidtFuncObjectApi extends AbstractApi {\r\n  private static readonly baseUrl: string = '/bidt_func_object';\r\n\r\n  public readonly findAll: string = super.appendToBaseUrl('/find_all');\r\n\r\n  // public readonly delete: string = super.appendToBaseUrl('/delete');\r\n\r\n  // public readonly getById: string = super.appendToBaseUrl('/get_by_id');\r\n\r\n  // public readonly addOrUpdate: string = super.appendToBaseUrl('/add_or_update');\r\n\r\n  public constructor() {\r\n    super(BidtFuncObjectApi.baseUrl);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AbstractApi } from './abstract.api';\r\n\r\n@Injectable()\r\nexport class WorkflowExportApi extends AbstractApi {\r\n  private static readonly baseUrl: string = '/workflow_export';\r\n\r\n  public readonly generateXlsWorkFlow: string = super.appendToBaseUrl('/generate_xls_work_flow');\r\n\r\n  public constructor() {\r\n    super(WorkflowExportApi.baseUrl);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AbstractApi } from './abstract.api';\r\n\r\n@Injectable()\r\nexport class WorkflowImportApi extends AbstractApi {\r\n  private static readonly baseUrl: string = '/workflow_import';\r\n\r\n  // public readonly getXLS: string = super.appendToBaseUrl('/get_xls');\r\n\r\n  public readonly importWorkflowFromExcel: string = super.appendToBaseUrl('/import_workflow_from_excel');\r\n\r\n  public constructor() {\r\n    super(WorkflowImportApi.baseUrl);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AbstractApi } from '../../api/abstract.api';\r\n\r\n@Injectable()\r\nexport class BidtScenarioApi extends AbstractApi {\r\n  private static readonly baseUrl: string = '/bidt_scenario';\r\n\r\n  public readonly findByCriteria: string = super.appendToBaseUrl('/find_by_criteria');\r\n\r\n  // public readonly findByFuncObjectIdAndInitialStatusKeyAndProfileList: string = super.appendToBaseUrl('/find_by_func_object_id_and_initial_status_key_and_profile_list');\r\n\r\n  public readonly delete: string = super.appendToBaseUrl('/delete');\r\n\r\n  // public readonly getById: string = super.appendToBaseUrl('/get_by_id');\r\n\r\n  // public readonly addOrUpdate: string = super.appendToBaseUrl('/add_or_update');\r\n\r\n  // public readonly findByFuncObjectId: string = super.appendToBaseUrl('/find_by_func_object_id');\r\n\r\n  // public readonly deleteByFuncObjectId: string = super.appendToBaseUrl('/delete_by_func_object_id');\r\n\r\n  public readonly searchScenarioByCriteria: string = super.appendToBaseUrl('/search_scenario_by_criteria');\r\n\r\n  public readonly getControlMgmtTableData: string = super.appendToBaseUrl('/get_control_mgmt_table_data');\r\n\r\n  public readonly saveWorkflowManagement: string = super.appendToBaseUrl('/save_workflow_management');\r\n\r\n  public readonly getTodoList: string = super.appendToBaseUrl('/todo_list');\r\n\r\n  public constructor() {\r\n    super(BidtScenarioApi.baseUrl);\r\n  }\r\n}\r\n"],"sourceRoot":""}