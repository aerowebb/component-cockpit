{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./node_modules/primeng/inputswitch.js","webpack:///./node_modules/primeng/progressbar.js","webpack:///./node_modules/primeng/selectbutton.js","webpack:///./src/app/main/logistics/manufacturing-batch/form/document-upload-dialog/document-upload-dialog.component.html","webpack:///./src/app/main/logistics/manufacturing-batch/form/document-upload-dialog/document-upload-dialog.component.scss","webpack:///./src/app/main/logistics/manufacturing-batch/form/document-upload-dialog/document-upload-dialog.component.ts","webpack:///./src/app/main/logistics/manufacturing-batch/form/manufacturing-batch-form.component.html","webpack:///./src/app/main/logistics/manufacturing-batch/form/manufacturing-batch-form.component.scss","webpack:///./src/app/main/logistics/manufacturing-batch/form/manufacturing-batch-form.component.ts","webpack:///./src/app/main/logistics/manufacturing-batch/form/manufacturing-batch-form.service.ts","webpack:///./src/app/main/logistics/manufacturing-batch/manufacturing-batch.module.ts","webpack:///./src/app/main/logistics/manufacturing-batch/search/manufacturing-batch-search.component.html","webpack:///./src/app/main/logistics/manufacturing-batch/search/manufacturing-batch-search.component.scss","webpack:///./src/app/main/logistics/manufacturing-batch/search/manufacturing-batch-search.component.ts","webpack:///./src/app/main/logistics/manufacturing-batch/search/manufacturing-batch-search.service.ts","webpack:///./src/app/shared/enums/table-selection-mode.enum.ts","webpack:///./src/app/shared/utils/file-utils.ts"],"names":[],"mappings":"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","file":"logistics-manufacturing-batch-manufacturing-batch-module.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputswitch/inputswitch\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/progressbar/progressbar\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/selectbutton/selectbutton\"));","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".docManagement\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docName\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"document.docName\\\" [disabled]=\\\"isReadOpenMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docPublicationDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"document.docPublicationDate\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docEndOfValidityDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"document.docEndOfValidityDate\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docType\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"types\\\"\\r\\n          [(ngModel)]=\\\"document.docCategory\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docDescription\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          pInputTextarea\\r\\n          [rows]=\\\"3\\\"\\r\\n          [(ngModel)]=\\\"document.docDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbG9naXN0aWNzL21hbnVmYWN0dXJpbmctYmF0Y2gvZm9ybS9kb2N1bWVudC11cGxvYWQtZGlhbG9nL2RvY3VtZW50LXVwbG9hZC1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidoDocumentationDTO } from '../../../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-document-upload-dialog',\r\n  templateUrl: './document-upload-dialog.component.html',\r\n  styleUrls: ['./document-upload-dialog.component.scss']\r\n})\r\nexport class DocumentUploadDialogComponent extends DialogComponent implements OnInit {\r\n  @Input() public document: BidoDocumentationDTO;\r\n  @Input() public openMode: ComponentOpenMode;\r\n  @Input() public types: SelectItem[];\r\n  @Output() public onValidated: EventEmitter<BidoDocumentationDTO>;\r\n\r\n  public constructor(public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DocumentUploadDialogComponent');\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidoDocumentationDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.document) {\r\n      this.document = {};\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.document);\r\n    this.closeDialog();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <!-- <div *ngIf=\\\"\\\" class=\\\"page-subtitle\\\">\\r\\n            - {{  }}\\r\\n          </div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div class=\\\"object-status\\\" *ngIf=\\\"\\\" (click)=\\\"showStatus()\\\">\\r\\n        {{  | formatSelectOption:  }}\\r\\n      </div> -->\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button *ngIf=\\\"!isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button>\\r\\n      {{ getComponentName() + \\\".delotir\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button>\\r\\n      {{ getComponentName() + \\\".report\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"editBatch()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      id=\\\"cancel\\\"\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"onCancel()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"saveBatch()\\\">\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"reloadBatch()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">{{ \\\"addToFavorite\\\" | translate }}</button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <!-- Home -->\\r\\n        <mat-tab id=\\\"homeTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container loading-indicator\\\">\\r\\n                    <div class=\\\"grid-cell-title\\\">\\r\\n                      <span>{{ componentData.componentId + \\\".mainInfo\\\" | translate }}</span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".familyVariant\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            maxlength=\\\"35\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            [(ngModel)]=\\\"equipment.bidoEquipmentDTO.familyVariantCode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".batchNumber\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            maxlength=\\\"35\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            [(ngModel)]=\\\"equipment.bidoEquipmentDTO.batchNumber\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".partNumber\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            maxlength=\\\"35\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            [(ngModel)]=\\\"equipment.bidoEquipmentDTO.pnCode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".quantity\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            maxlength=\\\"35\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            [(ngModel)]=\\\"equipment.bidoEquipmentDTO.quantity\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".operationalStatus\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            [(ngModel)]=\\\"equipment.bidoEquipmentDTO.operationalStatus\\\"\\r\\n                            [options]=\\\"statusList\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group flex--2\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".designation\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            maxlength=\\\"35\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            [(ngModel)]=\\\"equipment.bidoEquipmentDTO.equipmentDesignation\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".expirationDate\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-calendar\\r\\n                            showButtonBar=\\\"true\\\"\\r\\n                            [monthNavigator]=\\\"true\\\"\\r\\n                            [yearNavigator]=\\\"true\\\"\\r\\n                            [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                            class=\\\"aw-calendar\\\"\\r\\n                            [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                            [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                            [(ngModel)]=\\\"mainInfo.expirationDate\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-calendar>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".owner\\\" | translate }}</label>\\r\\n\\r\\n                        <div\\r\\n                          class=\\\"form-control form-control-with-modal\\\"\\r\\n                          [ngClass]=\\\"{ disabled: isReadOpenMode || !isCreateOpenMode }\\\"\\r\\n                        >\\r\\n                          <div class=\\\"form-control-data\\\" (click)=\\\"isCreateOpenMode ? searchOwners() : ''\\\">\\r\\n                            {{ equipment.bidoEquipmentDTO.ownerCustomerCode }}\\r\\n                            <span *ngIf=\\\"ownerCustomerName\\\">({{ ownerCustomerName }})</span>\\r\\n                          </div>\\r\\n\\r\\n                          <div *ngIf=\\\"equipment.bidoEquipmentDTO.ownerCustomerCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                            <i\\r\\n                              class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              (click)=\\\"\\r\\n                                equipment.bidoEquipmentDTO.ownerCustomerCode = undefined; ownerCustomerName = undefined\\r\\n                              \\\"\\r\\n                            ></i>\\r\\n                          </div>\\r\\n                          <div class=\\\"btn-search-wrapper\\\">\\r\\n                            <i\\r\\n                              class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              (click)=\\\"searchOwners()\\\"\\r\\n                            ></i>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".operator\\\" | translate }}</label>\\r\\n\\r\\n                        <div\\r\\n                          class=\\\"form-control form-control-with-modal\\\"\\r\\n                          [ngClass]=\\\"{ disabled: isReadOpenMode || !isCreateOpenMode }\\\"\\r\\n                        >\\r\\n                          <div class=\\\"form-control-data\\\" (click)=\\\"isCreateOpenMode ? searchOperators() : ''\\\">\\r\\n                            {{ equipment.bidoEquipmentDTO.operatorCustomerCode }}\\r\\n                            <span *ngIf=\\\"operatorCustomerName\\\">({{ operatorCustomerName }})</span>\\r\\n                          </div>\\r\\n\\r\\n                          <div *ngIf=\\\"equipment.bidoEquipmentDTO.operatorCustomerCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                            <i\\r\\n                              class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              (click)=\\\"\\r\\n                                equipment.bidoEquipmentDTO.operatorCustomerCode = undefined;\\r\\n                                operatorCustomerName = undefined\\r\\n                              \\\"\\r\\n                            ></i>\\r\\n                          </div>\\r\\n                          <div class=\\\"btn-search-wrapper\\\">\\r\\n                            <i\\r\\n                              class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              (click)=\\\"searchOperators()\\\"\\r\\n                            ></i>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Engineering References -->\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".engineeringReferences\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content  grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".itemCode\\\" | translate }}</label>\\r\\n                      <div class=\\\"form-control display--flex-row\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input flex--1\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.chapter\\\"\\r\\n                          maxlength=\\\"2\\\"\\r\\n                        />\\r\\n                        <span style=\\\"margin-top:10px\\\" class=\\\"separator\\\">-</span>\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input flex--1\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.section\\\"\\r\\n                          maxlength=\\\"2\\\"\\r\\n                        />\\r\\n                        <span style=\\\"margin-top:10px\\\" class=\\\"separator\\\">-</span>\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input flex--1\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.subject\\\"\\r\\n                          maxlength=\\\"2\\\"\\r\\n                        />\\r\\n                        <span style=\\\"margin-top:10px\\\" class=\\\"separator\\\">-</span>\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input flex--1\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.sheet\\\"\\r\\n                          maxlength=\\\"5\\\"\\r\\n                        />\\r\\n                        <span style=\\\"margin-top:10px\\\" class=\\\"separator\\\">-</span>\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input flex--1\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.marks\\\"\\r\\n                          maxlength=\\\"5\\\"\\r\\n                        />\\r\\n\\r\\n                        <div class=\\\"btn-search-wrapper\\\" *ngIf=\\\"!isReadOpenMode\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group general-field\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".itemNumber\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"equipment.itemNumber\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group general-field\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".functionCode\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.functionCode\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".position\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"propertyPositions\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.equiPosition\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".function\\\" | translate }}</label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"propertyFunctions\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.equipmentFunction\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".lifeRestriction\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          binary=\\\"true\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.lifeRestriction\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        >\\r\\n                        </p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group general-field\\\">\\r\\n                      <label class=\\\"form-label\\\">{{\\r\\n                        componentData.componentId + \\\".manufacturingConfiguration\\\" | translate\\r\\n                      }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"equipment.bidoEquipmentDTO.manufacturingConfiguration\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container loading-indicator \\\">\\r\\n                    <div class=\\\"grid-cell-title\\\">\\r\\n                      <span>{{ componentData.componentId + \\\".geographicalLocation\\\" | translate }}</span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".zone\\\" | translate }}</label>\\r\\n\\r\\n                          <div *ngIf=\\\"isCreateOpenMode\\\" class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"propertyZones\\\"\\r\\n                              [(ngModel)]=\\\"equipment.bidoEquipmentDTO.zone\\\"\\r\\n                              (onChange)=\\\"changeZone()\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n\\r\\n                          <div\\r\\n                            *ngIf=\\\"!isCreateOpenMode\\\"\\r\\n                            class=\\\"form-control form-control-with-modal\\\"\\r\\n                            [ngClass]=\\\"{ disabled: isReadOpenMode }\\\"\\r\\n                          >\\r\\n                            <div class=\\\"form-control-data\\\" (click)=\\\"!isReadOpenMode ? searchGeoLocation() : ''\\\">\\r\\n                              {{ equipment.bidoEquipmentDTO.zone }}\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"equipment.bidoEquipmentDTO.zone\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                              <i\\r\\n                                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                                aria-hidden=\\\"true\\\"\\r\\n                                (click)=\\\"equipment.bidoEquipmentDTO.zone = undefined\\\"\\r\\n                              ></i>\\r\\n                            </div>\\r\\n                            <div class=\\\"btn-search-wrapper\\\">\\r\\n                              <i\\r\\n                                class=\\\"fa fa-fw fa-edit aw-icon btn-search\\\"\\r\\n                                aria-hidden=\\\"true\\\"\\r\\n                                (click)=\\\"searchGeoLocation()\\\"\\r\\n                              ></i>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".country\\\" | translate }}</label>\\r\\n\\r\\n                          <div *ngIf=\\\"isCreateOpenMode\\\" class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"propertyCountries\\\"\\r\\n                              [(ngModel)]=\\\"equipment.bidoEquipmentDTO.country\\\"\\r\\n                              (onChange)=\\\"changeCountry()\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"!isCreateOpenMode\\\" class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              [(ngModel)]=\\\"equipment.bidoEquipmentDTO.country\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".location\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"propertyLocations\\\"\\r\\n                              [(ngModel)]=\\\"locationValue\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container loading-indicator \\\">\\r\\n                    <div class=\\\"grid-cell-title\\\">\\r\\n                      <span>{{ componentData.componentId + \\\".usCounters\\\" | translate }}</span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".usage\\\" | translate }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"\\r\\n                              !equipment.usageCounterCalculationDTO.usageValue ||\\r\\n                              equipment.usageCounterCalculationDTO.usageValue === NOT_ACTIVATED\\r\\n                                ? COLOR_RED\\r\\n                                : COLOR_GREEN\\r\\n                            \\\"\\r\\n                          >\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"equipment.usageCounterCalculationDTO.usageValue\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".storage\\\" | translate }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"\\r\\n                              !equipment.usageCounterCalculationDTO.storageValue ||\\r\\n                              equipment.usageCounterCalculationDTO.storageValue === NOT_ACTIVATED\\r\\n                                ? COLOR_RED\\r\\n                                : COLOR_GREEN\\r\\n                            \\\"\\r\\n                          >\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"equipment.usageCounterCalculationDTO.storageValue\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".usageStorage\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"form-control\\\"\\r\\n                            [ngClass]=\\\"\\r\\n                              !equipment.usageCounterCalculationDTO.usageStorageValue ||\\r\\n                              equipment.usageCounterCalculationDTO.usageStorageValue === NOT_ACTIVATED\\r\\n                                ? COLOR_RED\\r\\n                                : COLOR_GREEN\\r\\n                            \\\"\\r\\n                          >\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"equipment.usageCounterCalculationDTO.usageStorageValue\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"!isCreateOpenMode\\\" id=\\\"structureTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".batchInfo\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div *ngIf=\\\"!isCreateOpenMode\\\">\\r\\n            <div class=\\\"grid-row\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container loading-indicator\\\">\\r\\n                      <div class=\\\"grid-cell-title\\\">\\r\\n                        {{ getComponentName() + \\\".generatedBatches\\\" | translate }} ({{\\r\\n                          gereratedBatcheTableDataSource.dataCount\\r\\n                        }})\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content\\\">\\r\\n                    <a-table [dataSource]=\\\"gereratedBatcheTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <button type=\\\"button\\\" mat-raised-button *ngIf=\\\"gereratedBatcheTableDataSource.hasDataSelection\\\">\\r\\n                          {{ \\\"global.open\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template columnDef=\\\"batchNumber\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <a>{{ rowData.batchNumber }}</a>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"location\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <span class=\\\"label-info\\\">\\r\\n                          <a> {{ rowData.location }}</a>\\r\\n                          >\\r\\n                        </span>\\r\\n                        <span> {{ rowData[\\\"locationDescription\\\"] }}</span>\\r\\n                      </ng-template>\\r\\n                      <ng-template columnDef=\\\"emplacement\\\" let-rowData=\\\"rowData\\\">\\r\\n                        <span class=\\\"label-info\\\">\\r\\n                          <a> {{ rowData.emplacement }}</a>\\r\\n                        </span>\\r\\n                        <span> {{ rowData[\\\"emplacementDesc\\\"] }}</span>\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n\\r\\n        <mat-tab *ngIf=\\\"!isCreateOpenMode\\\" id=\\\"additionalTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".tabGeneral\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container loading-indicator \\\">\\r\\n                    <div class=\\\"grid-cell-title\\\">\\r\\n                      <span>{{ componentData.componentId + \\\".tabGeneral\\\" | translate }}</span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"column\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".assetCode\\\" | translate }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <input\\r\\n                                type=\\\"text\\\"\\r\\n                                maxlength=\\\"25\\\"\\r\\n                                class=\\\"aw-input\\\"\\r\\n                                [(ngModel)]=\\\"equipment.bidoEquipmentDTO.equipmentCode\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".eisDate\\\" | translate }}</label>\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-calendar\\r\\n                                showButtonBar=\\\"true\\\"\\r\\n                                [monthNavigator]=\\\"true\\\"\\r\\n                                [yearNavigator]=\\\"true\\\"\\r\\n                                [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                                class=\\\"aw-calendar\\\"\\r\\n                                [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                                [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                                [(ngModel)]=\\\"equipment.bidoEquipmentDTO.eisDate\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                [maxDate]=\\\"maxDate\\\"\\r\\n                              ></p-calendar>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <!-- TODO : propagate method  -->\\r\\n                          <!-- <div *ngIf=\\\"!isCreateOpenMode && !isReadOpenMode\\\" class=\\\"form-group\\\" style=\\\"margin-top:48px\\\">\\r\\n                            <i\\r\\n                              class=\\\"fa fa-fw fa-level-down aw-icon aw-icon-with-border\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              pTooltip=\\\"{{ componentData.componentId + '.propagate' | translate }}\\\"\\r\\n                              tooltipPosition=\\\"top\\\"\\r\\n                              (click)=\\\"propagate()\\\"\\r\\n                            ></i>\\r\\n                          </div> -->\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".model\\\" | translate }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <input\\r\\n                                type=\\\"text\\\"\\r\\n                                class=\\\"aw-input\\\"\\r\\n                                [disabled]=\\\"true\\\"\\r\\n                                [(ngModel)]=\\\"equipmentModelCodeAndName\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{\\r\\n                              componentData.componentId + \\\".manufacturer\\\" | translate\\r\\n                            }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <input\\r\\n                                type=\\\"text\\\"\\r\\n                                maxlength=\\\"35\\\"\\r\\n                                class=\\\"aw-input\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                [(ngModel)]=\\\"equipment.bidoEquipmentDTO.snManufacturer\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group general-field\\\">\\r\\n                            <label class=\\\"form-label\\\">{{\\r\\n                              componentData.componentId + \\\".manufacturingDate\\\" | translate\\r\\n                            }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-calendar\\r\\n                                showButtonBar=\\\"true\\\"\\r\\n                                [monthNavigator]=\\\"true\\\"\\r\\n                                [yearNavigator]=\\\"true\\\"\\r\\n                                [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                                class=\\\"aw-calendar\\\"\\r\\n                                [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                                [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                                [(ngModel)]=\\\"equipment.bidoEquipmentDTO.manufacturingDate\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              >\\r\\n                              </p-calendar>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{\\r\\n                              componentData.componentId + \\\".configurationTracked\\\" | translate\\r\\n                            }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-checkbox\\r\\n                                class=\\\"aw-checkbox\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                [(ngModel)]=\\\"configurationTracked\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".rating\\\" | translate }}</label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <input\\r\\n                                type=\\\"text\\\"\\r\\n                                class=\\\"aw-input\\\"\\r\\n                                [disabled]=\\\"true\\\"\\r\\n                                [(ngModel)]=\\\"equipmentRatingCodeAndName\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <aw-dynamic-attributes [showHistory]=\\\"true\\\"> </aw-dynamic-attributes>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"!isCreateOpenMode\\\" id=\\\"documentTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".tabDocument\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".tabDocument\\\" | translate }} ({{\\r\\n                        documentTableDataSource ? documentTableDataSource.dataCount : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <a-table [dataSource]=\\\"documentTableDataSource\\\">\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"documentTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"downloadFiles()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.download\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && documentTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteDocuments()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && documentTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editDocument()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && documentTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openDocument()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n                      <p-fileUpload\\r\\n                        #fileUploader\\r\\n                        *ngIf=\\\"!isReadOpenMode && !documentTableDataSource.hasDataSelection\\\"\\r\\n                        chooseLabel=\\\"{{ 'global.upload' | translate }}\\\"\\r\\n                        name=\\\"document[]\\\"\\r\\n                        customUpload=\\\"true\\\"\\r\\n                        mode=\\\"basic\\\"\\r\\n                        auto=\\\"true\\\"\\r\\n                        (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                      ></p-fileUpload>\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"docEndOfValidityDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.docEndOfValidityDate | date: \\\"shortDate\\\":\\\"\\\":translateService.currentLang }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"docExtension\\\" let-rowData=\\\"rowData\\\">\\r\\n                      <span> {{ showDocExtension(rowData) }} </span>\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"docPublicationDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                      <span>\\r\\n                        {{ rowData.docPublication | date: \\\"shortDate\\\":\\\"\\\":translateService.currentLang }}\\r\\n                      </span>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-document-upload-dialog\\r\\n  *ngIf=\\\"showAddDocumentDialog\\\"\\r\\n  [(display)]=\\\"showAddDocumentDialog\\\"\\r\\n  [openMode]=\\\"documentDialogOpenMode\\\"\\r\\n  [document]=\\\"currentDocument\\\"\\r\\n  [types]=\\\"documentTypes\\\"\\r\\n  (onValidated)=\\\"addNewDocument($event)\\\"\\r\\n>\\r\\n</aw-document-upload-dialog>\\r\\n\"","module.exports = \":host .label-info {\\n  display: flex; }\\n\\n:host .procurement-type--in {\\n  color: #4caf50;\\n  -webkit-transform: rotate(320deg);\\n          transform: rotate(320deg); }\\n\\n:host .procurement-type--out {\\n  color: #f6685e;\\n  -webkit-transform: rotate(45deg);\\n          transform: rotate(45deg); }\\n\\n:host .procurement-type--transfer {\\n  color: #006ea9; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvbWFudWZhY3R1cmluZy1iYXRjaC9mb3JtL2Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZ2l0aHViX3BhZ2VzL3NyY1xcYXBwXFxtYWluXFxsb2dpc3RpY3NcXG1hbnVmYWN0dXJpbmctYmF0Y2hcXGZvcm1cXG1hbnVmYWN0dXJpbmctYmF0Y2gtZm9ybS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvbWFudWZhY3R1cmluZy1iYXRjaC9mb3JtL2Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZ2l0aHViX3BhZ2VzL3NyY1xcc3R5bGVzXFxfY29uc3RhbnRzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFFSSxhQUFhLEVBQUE7O0FBRmpCO0VBS0ksY0Nja0I7RURibEIsaUNBQXlCO1VBQXpCLHlCQUF5QixFQUFBOztBQU43QjtFQVVJLGNDWWdCO0VEWGhCLGdDQUF3QjtVQUF4Qix3QkFBd0IsRUFBQTs7QUFYNUI7RUFlSSxjQ1NnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvbWFudWZhY3R1cmluZy1iYXRjaC9mb3JtL21hbnVmYWN0dXJpbmctYmF0Y2gtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJjb25zdGFudHNcIjtcclxuXHJcbjpob3N0IHtcclxuICAubGFiZWwtaW5mbyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gIH1cclxuICAucHJvY3VyZW1lbnQtdHlwZS0taW4ge1xyXG4gICAgY29sb3I6ICRncmVlbi1saWdodDE7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzMjBkZWcpO1xyXG4gIH1cclxuXHJcbiAgLnByb2N1cmVtZW50LXR5cGUtLW91dCB7XHJcbiAgICBjb2xvcjogJHJlZC1saWdodDE7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgfVxyXG5cclxuICAucHJvY3VyZW1lbnQtdHlwZS0tdHJhbnNmZXIge1xyXG4gICAgY29sb3I6ICRibHVlLWRhcmsxO1xyXG4gIH1cclxufVxyXG4iLCIkcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4kc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XHJcbiRwcmltYXJ5LXRleHQtY29sb3I6ICMwMDA7XHJcbiRzZWNvbmRhcnktdGV4dC1jb2xvcjogIzU5NTk1OTtcclxuJGFjY2VudC1jb2xvcjogIzAxNTc5YjtcclxuXHJcbiRib2R5LWJhY2tncm91bmQtY29sb3I6ICNlOGViZWQ7XHJcbiR0b3BiYXItY29sb3I6ICNmYWZhZmE7XHJcblxyXG4vLyAkcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjMWUxZTFlO1xyXG4vLyAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7XHJcbi8vICRwcmltYXJ5LXRleHQtY29sb3I6ICNlOGU4ZTg7XHJcbi8vICRzZWNvbmRhcnktdGV4dC1jb2xvcjogI2ZmZjtcclxuLy8gJGFjY2VudC1jb2xvcjogIzljZGNmZTtcclxuXHJcbiRib3JkZXItY29sb3I6ICRzZWNvbmRhcnktdGV4dC1jb2xvcjtcclxuJGJvcmRlci1jb2xvci0tZGlzYWJsZWQ6IHRyYW5zcGFyZW50O1xyXG4kYm9yZGVyLWNvbG9yLS1mb2N1czogJGFjY2VudC1jb2xvcjtcclxuJGJvcmRlci1jb2xvci0taG92ZXI6ICMxYTFhMWE7XHJcblxyXG4kZ3JlZW4tZGFyazE6ICMyNzYzMmE7XHJcbiRncmVlbi1saWdodDE6ICM0Y2FmNTA7XHJcbiRvcmFuZ2U6ICNmZmMxMDc7XHJcbiRyZWQtZGFyazE6ICNhODI1MjU7XHJcbiRyZWQtbGlnaHQxOiAjZjY2ODVlO1xyXG4kYmx1ZS1saWdodDE6ICNiOGQwZTg7XHJcbiRibHVlLWRhcmsxOiAjMDA2ZWE5O1xyXG4kZ3JleTE6ICNjOGQ0ZDY7XHJcbiR5ZWxsb3cxOiAjZGRkZjAwO1xyXG5cclxuJGNyaXRpY2FsLXZhbHVlLWRhcms6ICNmYmE2NDM7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG4kY3JpdGljYWwtdmFsdWUtbGlnaHQ6ICNmZWNjOGU7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG4kY2FsZW5kYXIteWVsbG93OiAjZWZlZmIwOyAvLyBUT0RPOiByZW1vdmUgaXRcclxuJGJhZC12YWx1ZS1kYXJrOiAjZmY2NzU4OyAvLyBUT0RPOiByZW1vdmUgaXRcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbiRib3JkZXItcmFkaXVzOiA0cHg7XHJcbiRib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4kYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiRmb250LWZhbWlseTogXCJMYXRvTGF0aW5XZWJcIjtcclxuJGZvbnQtc2l6ZTogMC44NzVyZW07XHJcbiRmb250LXdlaWdodDogNDAwO1xyXG4kbGluZS1oZWlnaHQ6IDEuNDI4NTcxNDI5O1xyXG4kbWFyZ2luLXZhbHVlOiA4cHg7XHJcbiRwYWdlLW1heC13aWR0aDogMTM2NnB4O1xyXG4kYXR0cmlidXRlcy1jb2x1bW4td2lkdGgtNDogNDtcclxuJGF0dHJpYnV0ZXMtY29sdW1uLXdpZHRoLTM6IDM7XHJcbiRhdHRyaWJ1dGVzLWNvbHVtbi13aWR0aC0yOiAyO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuJGxlZnQtc2lkZWJhci13aWR0aC0tY29sbGFwc2VkOiA1MHB4O1xyXG4kbGVmdC1zaWRlYmFyLXdpZHRoLS1leHBhbmRlZDogMjIwcHg7XHJcbiRyaWdodC1zaWRlYmFyLXdpZHRoLS1jb2xsYXBzZWQ6IDUwcHg7XHJcbiRyaWdodC1zaWRlYmFyLXdpZHRoLS1leHBhbmRlZDogMjIwcHg7XHJcbiR0b3BiYXItaGVpZ2h0OiA0MHB4O1xyXG4kbWFpbmJhci1ib3JkZXItY29sb3I6IGRhcmtlbigkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3IsIDUlKTtcclxuJG1haW5iYXItYm9yZGVyLXdpZHRoOiAycHg7XHJcbiRwYWdlLWhlYWRlci1oZWlnaHQ6IDUuNXJlbTtcclxuJGZvcm0tY29udHJvbC1oZWlnaHQ6IDIuNXJlbTtcclxuJGNoZWNrYm94LWhlaWdodDogMS4yNXJlbTtcclxuJHJhZGlvYnV0dG9uLWhlaWdodDogMS4yNXJlbTtcclxuIl19 */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { FileUpload } from 'primeng/fileupload';\r\n\r\nimport { PropertiesService } from '../../../..//shared/services/properties.service';\r\nimport { PageTocService } from '../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { DialogTableData } from '../../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { AppConstants } from '../../../../shared/constants/app-constants';\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { BidoAttributeConstants } from '../../../../shared/constants/bido-attribute-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { TableSelectionMode } from '../../../../shared/enums/table-selection-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../../shared/services/date.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { AssetInputDto } from '../../../../shared/types/api-input-types/fleet-management/asset-input-dto.interface';\r\nimport { AssetOutputDto } from '../../../../shared/types/api-output-types/fleet-management/asset-output-dto.interface';\r\nimport { BidoDocumentationTableOutputDTO } from '../../../../shared/types/api-output-types/fleet-management/bido-documentation-table-output-dto.interface';\r\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types//bido-customer-dto.interface';\r\nimport { BidoDocumentationDTOId } from '../../../../shared/types/api-types/bido-documentation-dto-id.interface';\r\nimport { BidoDocumentationDTO } from '../../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BidoNotificationDTO } from '../../../../shared/types/api-types/bido-notification-dto.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\nimport { StockTableDto } from '../../../../shared/types/api-types/stock-table-dto.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\nimport { SelectItemUtils } from '../../../../shared/utils/select-item-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\nimport { LogisticsService } from '../../logistics.service';\r\nimport { ManufacturingBatchSearchService } from '../search/manufacturing-batch-search.service';\r\n\r\nimport { ManufacturingBatchFormService } from './manufacturing-batch-form.service';\r\n\r\ninterface MainInformation {\r\n  partNumber?: string;\r\n  batchNumber?: string;\r\n  quantity?: string;\r\n  familyVariant?: string;\r\n  designation?: string;\r\n  expirationDate?: string;\r\n  operationalStatus?: string;\r\n}\r\ninterface GeneratedBatchRow {\r\n  batchNumber: string;\r\n  quantity?: number;\r\n  creationDate?: Date;\r\n  batchOriginQty?: number;\r\n  operationalStatus?: string;\r\n  location?: string;\r\n  locationDescription?: string;\r\n  emplacement?: string;\r\n  emplacementDesc?: string;\r\n  warehouseDes?: string;\r\n}\r\n\r\ninterface DocumentTableRow {\r\n  docName?: string;\r\n  docPublicationDate?: string;\r\n  docEndOfValidityDate?: string;\r\n  docDescription?: string;\r\n  docExtension?: string;\r\n  docCode?: string;\r\n  docCategory?: string;\r\n  _obj?: BidoDocumentationDTO;\r\n}\r\n@Component({\r\n  selector: 'aw-manufacturing-batch-form',\r\n  styleUrls: ['./manufacturing-batch-form.component.scss'],\r\n  templateUrl: './manufacturing-batch-form.component.html'\r\n})\r\nexport class ManufacturingBatchFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public TABLE_PAGINATION_DEFAULT_ROWS: number = AppConstants.TABLE_PAGINATION_DEFAULT_ROWS;\r\n  public equipment: AssetOutputDto;\r\n  public equipmentModelCodeAndName: string | undefined;\r\n  public equipmentRatingCodeAndName: string | undefined;\r\n  public mainInfo: MainInformation;\r\n  public awPropertiesConstants: typeof AWPropertiesConstants;\r\n\r\n  public configurationTracked: boolean;\r\n  public locationValue: string | undefined;\r\n  public propertyLocations: LabelValue<string>[];\r\n  public propertyPositions: LabelValue<string>[];\r\n  public propertyZones: LabelValue<string>[];\r\n  public propertyCountries: LabelValue<string>[];\r\n  public propertyFunctions: LabelValue<string>[];\r\n  public statusList: LabelValue<string>[];\r\n  public appConstants: typeof AppConstants;\r\n\r\n  public bidoStockDisplayed: StockTableDto[] | undefined;\r\n  public stockTableCols: TableColumn[];\r\n  public stockTableColsExpanded: TableColumn[];\r\n\r\n  public ownerCustomerName: string | undefined;\r\n  public maxDate: Date;\r\n  public context: string;\r\n  public showSaveSpinner: boolean;\r\n\r\n  // Color\r\n  public COLOR_NONE: string = '';\r\n  public COLOR_RED: string = 'red';\r\n  public COLOR_GREEN: string = 'green';\r\n  public COLOR_YELLOW: string = 'yellow';\r\n  public NOT_ACTIVATED: string = 'Not Activated';\r\n\r\n  public documents: BidoDocumentationTableOutputDTO[];\r\n  public documentTypes: SelectItem[];\r\n\r\n  public gereratedBatcheTableDataSource: TableDataSource<GeneratedBatchRow>;\r\n  public documentTableDataSource: TableDataSource<DocumentTableRow>;\r\n  public toc;\r\n  public selectedAnchor: string | undefined;\r\n  public operatorCustomerName: string | undefined;\r\n  public assetCode: string;\r\n\r\n  public dialogTableDataOwner: DialogTableData<BidoCustomerDTO>;\r\n  public dialogTableDataOperator: DialogTableData<BidoCustomerDTO>;\r\n\r\n  private documentsAdded: BidoDocumentationTableOutputDTO[];\r\n  private documentsUpdated: BidoDocumentationTableOutputDTO[];\r\n  public currentDocumentIndex: number;\r\n  public addedDocumentIndex: number;\r\n  public currentDocument: BidoDocumentationDTO | undefined;\r\n  public documentDialogOpenMode: ComponentOpenMode;\r\n  public showAddDocumentDialog: Boolean;\r\n  private eventAdded: BidoNotificationDTO[];\r\n\r\n  @ViewChild('mainAnchor')\r\n  public mainAnchor: ElementRef;\r\n\r\n  @ViewChild('gereratedBatches')\r\n  public gereratedBatches: ElementRef;\r\n\r\n  @ViewChild('generalAnchor')\r\n  public generalAnchor: ElementRef;\r\n\r\n  @ViewChild('stockAnchor')\r\n  public stockAnchor: ElementRef;\r\n\r\n  @ViewChild('documentAnchor')\r\n  public documentAnchor: ElementRef;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    pageTocService: PageTocService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public readonly sessionService: SessionService,\r\n    private readonly dateService: DateService,\r\n    public readonly translateService: TranslateService,\r\n    private readonly manufacturingBatchFormService: ManufacturingBatchFormService,\r\n    private readonly manufacturingBatchSearchService: ManufacturingBatchSearchService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly logisticsService: LogisticsService\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Read,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n\r\n    super.registerPageTocEntryObservable();\r\n    this.appConstants = AppConstants;\r\n    this.initInput();\r\n    this.initializeTableHeader();\r\n    this.loadDocumentTypes();\r\n    this.fillDropDown();\r\n    this.awPropertiesConstants = AWPropertiesConstants;\r\n\r\n    this.translateService.onLangChange.subscribe((_: LangChangeEvent) => {\r\n      /* Change the DropDownList content regarding the langage */\r\n      this.fillDropDown();\r\n    });\r\n  }\r\n\r\n  private initInput(): void {\r\n    this.mainInfo = {};\r\n    this.toc = [];\r\n    this.bidoStockDisplayed = [];\r\n    this.propertyLocations = [];\r\n    this.propertyPositions = [];\r\n    this.propertyZones = [];\r\n    this.propertyCountries = [];\r\n    this.propertyFunctions = [];\r\n    this.documents = [];\r\n    this.documentTypes = [];\r\n    this.equipment = {\r\n      bidoEquipmentDTO: {},\r\n      measureTableDtos: [],\r\n      bidoDocumentationTableOutputDTOs: [],\r\n      stockOutputDto: {},\r\n      superiorAsset: {},\r\n      usageCounterCalculationDTO: {},\r\n      saveUsageEquipment: {\r\n        updateBidoEquipmentUsageDTOList: []\r\n      }\r\n    };\r\n    this.documentsAdded = [];\r\n    this.documentsUpdated = [];\r\n    this.currentDocumentIndex = -1;\r\n    this.addedDocumentIndex = -1;\r\n    this.documentDialogOpenMode = ComponentOpenMode.Read;\r\n    this.showAddDocumentDialog = false;\r\n    this.eventAdded = [];\r\n  }\r\n\r\n  private onSavedAsset(): void {\r\n    this.eventAdded = [];\r\n    this.documentsAdded = [];\r\n    this.documents = [];\r\n    this.documentsUpdated = [];\r\n    this.documentTableDataSource.dataSelection = [];\r\n    super.updateOpenMode(ComponentOpenMode.Read);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_MANUFACTURING_BATCH_FORM;\r\n  }\r\n\r\n  // Documents\r\n  private loadDocumentTypes(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.DOC_ASSET_CATEGORY_MAP).subscribe((results) => {\r\n      this.documentTypes = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    if (this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n    }\r\n    if (this.componentData && this.componentData.objectId) {\r\n      this.manufacturingBatchSearchService.getMfgBatchList({}).subscribe((batchList) => {\r\n        if (batchList && batchList.length) {\r\n          batchList.forEach((batch) => {\r\n            if (!!this.componentData.objectId) {\r\n              if (\r\n                batch.batchNumber ===\r\n                  (this.serializationService.deserialize(this.componentData.objectId) as {\r\n                    customerCode: string;\r\n                  }).customerCode ||\r\n                ''\r\n              ) {\r\n                if (!!batch.equipmentCode) {\r\n                  this.assetCode = batch.equipmentCode;\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n        this.init();\r\n      });\r\n    }\r\n    this.initializeSideBar();\r\n  }\r\n\r\n  private init() {\r\n    this.loadManufacturingBatch();\r\n  }\r\n\r\n  public cancelBatch(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n\r\n    this.reloadBatch();\r\n  }\r\n\r\n  public editBatch(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public reloadBatch(): void {\r\n    this.init();\r\n  }\r\n\r\n  public isSelectedAnchor(anchorId: string): boolean {\r\n    return anchorId === this.selectedAnchor;\r\n  }\r\n\r\n  public setSelectedAnchor(anchorId: string): void {\r\n    this.pageTocService.setAnchorSelected(anchorId);\r\n\r\n    this.selectedAnchor = anchorId;\r\n  }\r\n\r\n  public searchOperators() {\r\n    const itemCol: TableColumn[] = [\r\n      { field: 'customerCode', alignment: 'left' },\r\n      { field: 'customerName', alignment: 'left' }\r\n    ];\r\n    const bidoCustomerDTO: BidoCustomerDTO = {\r\n      isOwner: false,\r\n      isOperator: true\r\n    };\r\n    this.dialogTableDataOperator = {\r\n      componentId: 'PartnerPopupDialog',\r\n      tableCols: itemCol,\r\n      tableRows: this.manufacturingBatchFormService.findBidoCustomersBySearchCriteria(bidoCustomerDTO),\r\n      dataKey: undefined,\r\n      selectionMode: TableSelectionMode.Single,\r\n      globalFilter: true\r\n    };\r\n  }\r\n\r\n  public searchOwners() {\r\n    const itemCol: TableColumn[] = [\r\n      { field: 'customerCode', alignment: 'left' },\r\n      { field: 'customerName', alignment: 'left' }\r\n    ];\r\n    const bidoCustomerDTO: BidoCustomerDTO = {\r\n      isOwner: true,\r\n      isOperator: false\r\n    };\r\n    this.dialogTableDataOwner = {\r\n      componentId: 'PartnerPopupDialog',\r\n      tableCols: itemCol,\r\n      tableRows: this.manufacturingBatchFormService.findBidoCustomersBySearchCriteria(bidoCustomerDTO),\r\n      dataKey: undefined,\r\n      selectionMode: TableSelectionMode.Single,\r\n      globalFilter: true\r\n    };\r\n  }\r\n\r\n  private loadManufacturingBatch(): void {\r\n    if (!!this.assetCode) {\r\n      const assetId: AssetInputDto = {\r\n        bidoEquipmentDTOId: {\r\n          equipmentCode: this.assetCode\r\n        },\r\n        assetfunction: ' '\r\n      };\r\n      this.manufacturingBatchFormService.findBidoEquipmentAlternative(assetId).subscribe(\r\n        (result) => {\r\n          if (result) {\r\n            this.equipment = { ...result };\r\n            if (this.equipment && this.equipment.bidoEquipmentDTO) {\r\n              if (this.componentData) {\r\n                this.context = [\r\n                  StringUtils.isNullOrEmpty(this.equipment.bidoEquipmentDTO.pnCode)\r\n                    ? ''\r\n                    : `P/N ${this.equipment.bidoEquipmentDTO.pnCode}`,\r\n                  StringUtils.isNullOrEmpty(this.equipment.bidoEquipmentDTO.sn)\r\n                    ? ''\r\n                    : `S/N ${this.equipment.bidoEquipmentDTO.sn}`\r\n                ]\r\n                  .filter((s) => !StringUtils.isEmpty(s))\r\n                  .join(' | ');\r\n\r\n                if (!!this.equipment.bidoEquipmentDTO.equipmentDesignation) {\r\n                  this.context = [\r\n                    StringUtils.isNullOrEmpty(this.context) ? '' : this.context,\r\n                    this.equipment.bidoEquipmentDTO.equipmentDesignation\r\n                  ]\r\n                    .filter((s) => !StringUtils.isEmpty(s))\r\n                    .join(' | ');\r\n                }\r\n                this.displayComponentContext(this.context, this.isCreateOpenMode);\r\n              }\r\n              this.equipment.bidoEquipmentDTO.quantity = this.equipment.bidoEquipmentDTO.quantity\r\n                ? Math.trunc(this.equipment.bidoEquipmentDTO.quantity)\r\n                : undefined;\r\n              this.ownerCustomerName = this.equipment.ownerCustomerName;\r\n              this.equipment.bidoEquipmentDTO.equipmentFunction = !!this.equipment.bidoEquipmentDTO.equipmentFunction\r\n                ? this.equipment.bidoEquipmentDTO.equipmentFunction\r\n                : undefined;\r\n              this.operatorCustomerName = this.equipment.operatorCustomerName;\r\n              if (!!this.equipment.bidoEquipmentDTO.bidoEquipmentAttributeList) {\r\n                const locationData = this.equipment.bidoEquipmentDTO.bidoEquipmentAttributeList.filter((el) => {\r\n                  if (el.attributeId === BidoAttributeConstants.ASSET_LOCATION.toString()) {\r\n                    return el;\r\n                  }\r\n                });\r\n                this.locationValue = !!locationData[0] ? locationData[0].attributeValue : undefined;\r\n              }\r\n              this.loadGenreatedBatchList();\r\n            }\r\n            this.loadStocks();\r\n            this.loadDocuments();\r\n          }\r\n          if (!!this.equipment.modelCode && !!this.equipment.modelName) {\r\n            this.equipmentModelCodeAndName = this.equipment.modelCode + ' - ' + this.equipment.modelName;\r\n          }\r\n          if (!!this.equipment.ratingCode && !!this.equipment.ratingName) {\r\n            this.equipmentRatingCodeAndName = this.equipment.ratingCode + ' - ' + this.equipment.ratingName;\r\n          }\r\n        },\r\n        (err) => {\r\n          this.messageService.showErrorMessage(err.error.errorDetail);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private initializeSideBar() {\r\n    this.toc = [\r\n      {\r\n        id: 'mainAnchor',\r\n        anchor: this.mainAnchor,\r\n        label: this.translateService.instant(this.getTranslateKey('informationPrincipales'))\r\n      },\r\n      {\r\n        id: 'gereratedBatches',\r\n        anchor: this.gereratedBatches,\r\n        label: this.translateService.instant(this.getTranslateKey('generatedBatches'))\r\n      },\r\n      {\r\n        id: 'generalAnchor',\r\n        anchor: this.generalAnchor,\r\n        label: this.translateService.instant(this.getTranslateKey('tabGeneral'))\r\n      },\r\n      {\r\n        id: 'stockAnchor',\r\n        anchor: this.stockAnchor,\r\n        label: this.translateService.instant(this.getTranslateKey('stock'))\r\n      },\r\n      {\r\n        id: 'documentAnchor',\r\n        anchor: this.documentAnchor,\r\n        label: this.translateService.instant(this.getTranslateKey('document'))\r\n      }\r\n    ];\r\n    setTimeout(() => {\r\n      this.setSelectedAnchor('mainAnchor');\r\n    });\r\n  }\r\n\r\n  private loadGenreatedBatchList() {\r\n    if (!!this.equipment.bidoEquipmentDTO.equipmentCode) {\r\n      this.manufacturingBatchFormService\r\n        .getGeneratedBatchList(this.equipment.bidoEquipmentDTO.equipmentCode)\r\n        .subscribe((result) => {\r\n          if (result && result.length) {\r\n            this.mapGeneratedBatchList(result);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  private mapGeneratedBatchList(result: BidoEquipmentDTO[]): void {\r\n    result.forEach((element) => {\r\n      const subAssemblyObj: GeneratedBatchRow = {\r\n        batchNumber: element.batchNumber || '',\r\n        quantity: element.quantity || undefined,\r\n        creationDate: element.manufacturingDate,\r\n        operationalStatus: element.operationalStatus,\r\n        location:\r\n          element.stockInformationDTO && element.stockInformationDTO.siteText\r\n            ? element.stockInformationDTO.siteText\r\n            : '',\r\n        warehouseDes: element.stockInformationDTO && element.stockInformationDTO.warehouseText,\r\n        emplacementDesc: element.stockInformationDTO && element.stockInformationDTO.storageBinText,\r\n        emplacement: element.stockInformationDTO && element.stockInformationDTO.storageBinId\r\n      };\r\n      if (this.mainInfo && this.mainInfo.quantity) {\r\n        subAssemblyObj.batchOriginQty = parseInt(this.mainInfo.quantity, 10);\r\n        const newQuantityValue = parseInt(this.mainInfo.quantity, 10) - (subAssemblyObj.quantity || 0);\r\n        this.mainInfo.quantity = newQuantityValue.toString();\r\n      }\r\n      this.gereratedBatcheTableDataSource.addData([subAssemblyObj]);\r\n    });\r\n  }\r\n\r\n  private initializeTableHeader(): void {\r\n    this.gereratedBatcheTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'batchNumber',\r\n          translateKey: this.getTranslateKey('batchNumber')\r\n        },\r\n        {\r\n          field: 'quantity',\r\n          translateKey: this.getTranslateKey('partNumber')\r\n        },\r\n        {\r\n          field: 'creationDate',\r\n          translateKey: this.getTranslateKey('familyVariant')\r\n        },\r\n        {\r\n          field: 'operationalStatus',\r\n          translateKey: this.getTranslateKey('operationalStatus')\r\n        },\r\n        {\r\n          field: 'location',\r\n          translateKey: this.getTranslateKey('eisDate')\r\n        },\r\n        {\r\n          field: 'emplacement',\r\n          translateKey: this.getTranslateKey('assetCode')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.documentTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'docName',\r\n          translateKey: this.getTranslateKey('docName')\r\n        },\r\n        {\r\n          field: 'docPublicationDate',\r\n          translateKey: this.getTranslateKey('docPublicationDate')\r\n        },\r\n        {\r\n          field: 'docEndOfValidityDate',\r\n          translateKey: this.getTranslateKey('docEndOfValidityDate')\r\n        },\r\n        {\r\n          field: 'docCategory',\r\n          translateKey: this.getTranslateKey('docCategory')\r\n        },\r\n        {\r\n          field: 'docDescription',\r\n          translateKey: this.getTranslateKey('docDescription')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n\r\n    this.stockTableCols = [\r\n      { field: 'code', alignment: 'left', width: '10%' },\r\n      { field: 'stockMvtDate', alignment: 'left', width: '11%' },\r\n      { field: 'stockMvtWay', alignment: 'left', width: '7%' },\r\n      { field: 'mvtStatus', alignment: 'left', width: '12%' },\r\n      { field: 'site', alignment: 'left', width: '25%' },\r\n      { field: 'warehouse', alignment: 'left', width: '25%' },\r\n      { field: 'document', alignment: 'left', width: '10%' }\r\n    ];\r\n  }\r\n\r\n  private loadStocks(): void {\r\n    if (!!this.equipment.stockOutputDto && !!this.bidoStockDisplayed) {\r\n      this.bidoStockDisplayed = this.equipment.stockOutputDto.stockTableDtos;\r\n    }\r\n  }\r\n\r\n  public loadDocuments() {\r\n    this.documentTableDataSource.setData([]);\r\n    if (!!this.equipment.bidoDocumentationTableOutputDTOs) {\r\n      this.documents = this.equipment.bidoDocumentationTableOutputDTOs;\r\n      this.equipment.bidoDocumentationTableOutputDTOs.forEach((doc) => {\r\n        if (!!doc.bidoDocumentationDTO) {\r\n          const selectedDocumentType = this.documentTypes.find(\r\n            (documentType) =>\r\n              !!doc.bidoDocumentationDTO &&\r\n              !!doc.bidoDocumentationDTO.docCategory &&\r\n              (documentType.value as string) === doc.bidoDocumentationDTO.docCategory\r\n          );\r\n          const newDoc: DocumentTableRow = {\r\n            docExtension: FileUtils.getExtension(doc.bidoDocumentationDTO.docName).toUpperCase(),\r\n            docName: doc.bidoDocumentationDTO.docName,\r\n            docPublicationDate: this.dateService.dateToString(doc.bidoDocumentationDTO.docPublicationDate),\r\n            docDescription: doc.bidoDocumentationDTO.docDescription,\r\n            docEndOfValidityDate: this.dateService.dateToString(doc.bidoDocumentationDTO.docEndOfValidityDate),\r\n            docCategory: !!selectedDocumentType ? StringUtils.orEmpty(selectedDocumentType.label) : '',\r\n            docCode: doc.bidoDocumentationDTO.docCode,\r\n            _obj: doc.bidoDocumentationDTO\r\n          };\r\n          this.documentTableDataSource.addData([newDoc]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private fillDropDown() {\r\n    this.propertiesService.getValue(GenericPropertyConstants.BATCH_EQUIPMENT_STATUS_MAP).subscribe((results) => {\r\n      this.statusList = results;\r\n    });\r\n    this.manufacturingBatchFormService.getCountryZoneMap().subscribe(\r\n      (results) => {\r\n        results.forEach((element) => {\r\n          let zoneElement: LabelValue<string>;\r\n          let countryElement: LabelValue<string>;\r\n          const keyCountry: string = element.value;\r\n          const mapLabel: string[] = element.label.split(';');\r\n          const zone: string = mapLabel[1];\r\n          const country: string = mapLabel[0];\r\n          // this.countryZoneMap.set(country, zone);\r\n\r\n          zoneElement = {\r\n            label: zone,\r\n            value: zone\r\n          };\r\n          countryElement = {\r\n            label: country,\r\n            value: keyCountry\r\n          };\r\n          if (!this.propertyZones.find((value) => value.label === zoneElement.label)) {\r\n            this.propertyZones.push(zoneElement);\r\n          }\r\n\r\n          this.propertyCountries.push(countryElement);\r\n          // this.propertyAllCountries.push(countryElement);\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetCountryZone'));\r\n      }\r\n    );\r\n\r\n    const bireId: BireAttributeDTO = {\r\n      attributeId: BidoAttributeConstants.ASSET_LOCATION.toString()\r\n    };\r\n    this.manufacturingBatchFormService.getAssetSourceSystemIdList(bireId).subscribe(\r\n      (results) => {\r\n        this.propertyLocations = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetLocation'));\r\n      }\r\n    );\r\n\r\n    this.manufacturingBatchFormService.getEquipmentFunctionList().subscribe(\r\n      (results) => {\r\n        this.propertyFunctions = results.filter((el) => {\r\n          if (\r\n            el.value !== AWPropertiesConstants.FAMILY_FUNCTION_AIRCRAFT_KEY &&\r\n            el.value !== AWPropertiesConstants.FAMILY_FUNCTION_ENGINE_KEY &&\r\n            el.value !== AWPropertiesConstants.FAMILY_FUNCTION_TOOL_KEY\r\n          ) {\r\n            return el;\r\n          }\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFunction'));\r\n      }\r\n    );\r\n\r\n    this.manufacturingBatchFormService.getPositionMap().subscribe(\r\n      (results) => {\r\n        this.propertyPositions = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetPosition'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public saveBatch(): void {\r\n    if (this.isCreateOpenMode) {\r\n      this.logisticsService.addOrUpdateBatch(this.equipment.bidoEquipmentDTO).subscribe({\r\n        next: (equipmentValue) => {\r\n          this.updateOpenMode(ComponentOpenMode.Read);\r\n        }\r\n      });\r\n    } else {\r\n      this.updateAsset();\r\n    }\r\n  }\r\n\r\n  public onCancel(): void {\r\n    super.updateOpenMode(ComponentOpenMode.Read);\r\n    this.reloadBatch();\r\n  }\r\n\r\n  private updateAsset(): void {\r\n    const assetOutputDto: AssetOutputDto = {\r\n      bidoEquipmentDTO: this.equipment.bidoEquipmentDTO,\r\n      createBidoDocumentationTableOutputDTOs: this.documentsAdded,\r\n      updateBidoDocumentationTableOutputDTOs: this.documentsUpdated,\r\n      removeBidoDocumentationId: this.equipment.removeBidoDocumentationId,\r\n      stockOutputDto: {},\r\n      usageCounterCalculationDTO: {},\r\n      superiorAsset: {},\r\n      bidoEquipmentAttributeDTOList: this.equipment.bidoEquipmentAttributeDTOList,\r\n      itemNumber: this.equipment.itemNumber,\r\n      modelCode: this.equipment.modelCode,\r\n      modelName: this.equipment.modelName,\r\n      ratingCode: this.equipment.ratingCode,\r\n      ratingName: this.equipment.ratingName\r\n    };\r\n    const bidoNotificationDTO: BidoNotificationDTO[] = this.eventAdded;\r\n    this.showSaveSpinner = true;\r\n    this.logisticsService.updateAsset(assetOutputDto).subscribe(\r\n      () => {\r\n        this.onSavedAsset();\r\n        this.createBidoNotification(bidoNotificationDTO);\r\n        this.reloadBatch();\r\n        this.showSaveSpinner = false;\r\n        this.messageService.showSuccessMessage('global.successOnSave');\r\n      },\r\n      (err) => {\r\n        this.messageService.showErrorMessage(err.errorDesc);\r\n        this.showSaveSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  private createBidoNotification(bidoNotificationDTO: BidoNotificationDTO[]): void {\r\n    this.logisticsService.createBidoNotification(bidoNotificationDTO).subscribe(() => {\r\n      this.onSavedAsset();\r\n    });\r\n  }\r\n\r\n  public downloadFiles(): void {\r\n    this.documentTableDataSource.dataSelection.forEach((documentRow) => {\r\n      if (!!documentRow._obj) {\r\n        FileUtils.downloadFile(documentRow._obj.docFile, documentRow._obj.docName);\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteDocuments(): void {\r\n    const partialMessageKey =\r\n      this.documentTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedDocuments'\r\n        : 'confirmDeleteSelectedDocument';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const temp: BidoDocumentationDTOId[] = [];\r\n        this.documentTableDataSource.dataSelection.forEach((data) => {\r\n          if (!!data && !!data._obj && !!data._obj.docCode) {\r\n            const codeId: BidoDocumentationDTOId = {\r\n              docCode: data._obj.docCode\r\n            };\r\n            temp.push(codeId);\r\n          }\r\n        });\r\n        this.equipment.removeBidoDocumentationId = temp;\r\n\r\n        this.documentTableDataSource.setData(\r\n          this.documentTableDataSource.dataSrc.filter((data) => {\r\n            return !this.documentTableDataSource.dataSelection.some((row) => {\r\n              return data.docName === row.docName;\r\n            });\r\n          })\r\n        );\r\n\r\n        this.documents = this.documents.filter((data) => {\r\n          return !this.documentTableDataSource.dataSelection.some((row) => {\r\n            return !!data.bidoDocumentationDTO && data.bidoDocumentationDTO.docName === row.docName;\r\n          });\r\n        });\r\n\r\n        this.documentsAdded = this.documentsAdded.filter((data) => {\r\n          return !this.documentTableDataSource.dataSelection.some((row) => {\r\n            return !!data.bidoDocumentationDTO && data.bidoDocumentationDTO.docName === row.docName;\r\n          });\r\n        });\r\n        this.documentsUpdated = this.documentsUpdated.filter((data) => {\r\n          return !this.documentTableDataSource.dataSelection.some((row) => {\r\n            return !!data.bidoDocumentationDTO && data.bidoDocumentationDTO.docName === row.docName;\r\n          });\r\n        });\r\n\r\n        this.documentTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    let flag = false;\r\n    if (!!event.files) {\r\n      const file: File = event.files[0];\r\n      this.documents.forEach((document) => {\r\n        if (!!document.bidoDocumentationDTO) {\r\n          if (document.bidoDocumentationDTO.docName === file.name) {\r\n            flag = true;\r\n          }\r\n        }\r\n      });\r\n      if (flag) {\r\n        this.messageService.showWarningMessage('global.warningOnFileExists');\r\n      } else {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          const fileNameParts = file.name && file.name.includes('.') ? file.name.split('.') : [];\r\n          const docType = fileNameParts.length > 0 ? fileNameParts[fileNameParts.length - 1].toUpperCase() : undefined;\r\n\r\n          if (!!fileContent) {\r\n            const document: BidoDocumentationDTO = {\r\n              docType,\r\n              docFile: fileContent,\r\n              docName: file.name,\r\n              docPublicationDate: new Date(),\r\n              equipmentCode: this.equipment.bidoEquipmentDTO.equipmentCode\r\n            };\r\n            const bidoDoc: BidoDocumentationTableOutputDTO = {\r\n              bidoDocumentationDTO: document\r\n            };\r\n            this.documents = [...this.documents, bidoDoc];\r\n            this.documentsAdded = [...this.documentsAdded, bidoDoc];\r\n\r\n            this.documentTableDataSource.addData([this.addData(document)]);\r\n          }\r\n        });\r\n      }\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public openDocument(): void {\r\n    if (this.documentTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocumentIndex = -1;\r\n      this.addedDocumentIndex = -1;\r\n      this.currentDocument = this.documentTableDataSource.dataSelection[0]._obj;\r\n      this.documentDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showAddDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public editDocument(): void {\r\n    if (this.documentTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocumentIndex = this.documents.findIndex((list) => {\r\n        return (\r\n          !!list.bidoDocumentationDTO &&\r\n          !!this.documentTableDataSource.dataSelection[0].docName &&\r\n          list.bidoDocumentationDTO.docName === this.documentTableDataSource.dataSelection[0].docName\r\n        );\r\n      });\r\n      this.addedDocumentIndex = this.documentsAdded.findIndex((list) => {\r\n        return (\r\n          !!list.bidoDocumentationDTO &&\r\n          !!this.documentTableDataSource.dataSelection[0].docName &&\r\n          list.bidoDocumentationDTO.docName === this.documentTableDataSource.dataSelection[0].docName\r\n        );\r\n      });\r\n      this.currentDocument = { ...this.documentTableDataSource.dataSelection[0]._obj };\r\n      this.documentDialogOpenMode = ComponentOpenMode.Write;\r\n      this.showAddDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public addData(newDocument: BidoDocumentationDTO): DocumentTableRow {\r\n    const selectedDocumentType = this.documentTypes.find(\r\n      (documentType) => !!newDocument.docCategory && (documentType.value as string) === newDocument.docCategory\r\n    );\r\n    const row: DocumentTableRow = {\r\n      docName: newDocument.docName,\r\n      docDescription: newDocument.docDescription,\r\n      docCategory: !!selectedDocumentType ? StringUtils.orEmpty(selectedDocumentType.label) : '',\r\n      docPublicationDate: this.dateService.dateToString(newDocument.docPublicationDate),\r\n      docEndOfValidityDate: this.dateService.dateToString(newDocument.docEndOfValidityDate),\r\n      _obj: newDocument\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  public addNewDocument(newDocument: BidoDocumentationDTO) {\r\n    const bidoDoc: BidoDocumentationTableOutputDTO = {\r\n      bidoDocumentationDTO: newDocument\r\n    };\r\n    let fileExists = true;\r\n    if (!!newDocument) {\r\n      this.documentTableDataSource.dataSrc.forEach((doc, i) => {\r\n        if (doc.docName === newDocument.docName) {\r\n          if (this.currentDocumentIndex === i) {\r\n            fileExists = true;\r\n          } else {\r\n            fileExists = false;\r\n            this.messageService.showWarningMessage('global.warningOnFileExists');\r\n          }\r\n        }\r\n      });\r\n      if (fileExists) {\r\n        if (this.currentDocumentIndex !== -1) {\r\n          this.documents[this.currentDocumentIndex] = bidoDoc;\r\n          this.documentTableDataSource[this.currentDocumentIndex] = this.addData(newDocument);\r\n          const updatedDocumentIndex = this.documentsUpdated.findIndex((obj) => {\r\n            return (\r\n              !!obj.bidoDocumentationDTO &&\r\n              !!obj.bidoDocumentationDTO.docName &&\r\n              !!bidoDoc.bidoDocumentationDTO &&\r\n              !!bidoDoc.bidoDocumentationDTO.docName &&\r\n              obj.bidoDocumentationDTO.docName === bidoDoc.bidoDocumentationDTO.docName\r\n            );\r\n          });\r\n          if (newDocument.docCode) {\r\n            if (updatedDocumentIndex !== -1) {\r\n              this.documentsUpdated[updatedDocumentIndex] = bidoDoc;\r\n            } else {\r\n              this.documentsUpdated = [...this.documentsUpdated, bidoDoc];\r\n            }\r\n          } else {\r\n            if (this.addedDocumentIndex !== -1) {\r\n              this.documentsAdded[this.addedDocumentIndex] = bidoDoc;\r\n            } else {\r\n              this.documentsAdded = [...this.documentsAdded, bidoDoc];\r\n            }\r\n          }\r\n        } else {\r\n          const isAdded = this.documentsAdded.some((documentAdded) => this.areSameDocument(documentAdded, bidoDoc));\r\n          if (isAdded) {\r\n            this.messageService.showWarningMessage('global.warningOnDocumentExists');\r\n          } else {\r\n            this.documents = [...this.documents, bidoDoc];\r\n            this.documentsAdded = [...this.documentsAdded, bidoDoc];\r\n            this.documentTableDataSource.addData([this.addData(newDocument)]);\r\n          }\r\n        }\r\n      }\r\n      this.documentTableDataSource.dataSelection = [];\r\n    }\r\n  }\r\n\r\n  private areSameDocument(\r\n    obj1: BidoDocumentationTableOutputDTO | undefined,\r\n    obj2: BidoDocumentationTableOutputDTO | undefined\r\n  ): boolean {\r\n    if (!obj1 || !obj2) {\r\n      return false;\r\n    } else {\r\n      return (\r\n        !!obj1.bidoDocumentationDTO &&\r\n        !!obj1.bidoDocumentationDTO.docName &&\r\n        !!obj2.bidoDocumentationDTO &&\r\n        !!obj2.bidoDocumentationDTO.docName &&\r\n        obj1.bidoDocumentationDTO.docName === obj2.bidoDocumentationDTO.docName\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AssetManagementApi } from '../../../../shared/api/asset-management.api';\r\nimport { BidoEquipmentApi } from '../../../../shared/api/bido-equipment.api';\r\nimport { FleetManagementApi } from '../../../../shared/api/fleet-management.api';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { DateService } from '../../../../shared/services/date.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { AssetInputDto } from '../../../../shared/types/api-input-types/fleet-management/asset-input-dto.interface';\r\nimport { AssetOutputDto } from '../../../../shared/types/api-output-types/fleet-management/asset-output-dto.interface';\r\nimport { BidoAttributeDTOId } from '../../../../shared/types/api-types/bido-attribute-dto-id.interface';\r\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class ManufacturingBatchFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    public dateService: DateService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly bidoEquipmentApi: BidoEquipmentApi,\r\n    private readonly assetManagementApi: AssetManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getGeneratedBatchList(assetCode: string): Observable<BidoEquipmentDTO[]> {\r\n    const equipmentObj = {\r\n      equipmentCode: assetCode\r\n    };\r\n\r\n    return super.post<object, BidoEquipmentDTO[]>(this.bidoEquipmentApi.findSubBatches, equipmentObj);\r\n  }\r\n\r\n  public getCountryZoneMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue('getCountryZoneMap');\r\n  }\r\n\r\n  public getPositionMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue('getPositionMap');\r\n  }\r\n\r\n  public getEquipmentFunctionList(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue(GenericPropertyConstants.ITEM_FAMILY_CODE_MAP);\r\n  }\r\n\r\n  public findCountriesByZone(zone: string): Observable<LabelValue<string>[]> {\r\n    return super.post<string, LabelValue<string>[]>(this.fleetManagementApi.findCountriesByZone, zone);\r\n  }\r\n  public findZoneByCountries(country: string): Observable<LabelValue<string>[]> {\r\n    return super.post<string, LabelValue<string>[]>(this.fleetManagementApi.findZoneByCountries, country);\r\n  }\r\n\r\n  public getAssetSourceSystemIdList(bireId: BidoAttributeDTOId): Observable<LabelValue<string>[]> {\r\n    return super.post<BidoAttributeDTOId, LabelValue<string>[]>(\r\n      this.fleetManagementApi.getAssetSourceSystemIdList,\r\n      bireId\r\n    );\r\n  }\r\n\r\n  public findBidoCustomersBySearchCriteria(criteria: BidoCustomerDTO): Observable<SearchResultsDTO<BidoCustomerDTO>> {\r\n    return super.post<BidoCustomerDTO, SearchResultsDTO<BidoCustomerDTO>>(\r\n      this.fleetManagementApi.findBidoCustomersBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public findBidoEquipmentAlternative(asset: AssetInputDto): Observable<AssetOutputDto> {\r\n    return super.post<AssetInputDto, AssetOutputDto>(this.assetManagementApi.getAssetByCode, asset);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DynamicAttributesModule } from '../../../shared/components/dynamic-attributes/dynamic-attributes.module';\r\nimport { ManageSearchCriteriaModule } from '../../../shared/components/manage-search-criteria/manage-search-criteria.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { DocumentUploadDialogComponent } from './form/document-upload-dialog/document-upload-dialog.component';\r\nimport { ManufacturingBatchFormComponent } from './form/manufacturing-batch-form.component';\r\nimport { ManufacturingBatchFormService } from './form/manufacturing-batch-form.service';\r\nimport { ManufacturingBatchSearchComponent } from './search/manufacturing-batch-search.component';\r\nimport { ManufacturingBatchSearchService } from './search/manufacturing-batch-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  FileUploadModule,\r\n  TooltipModule,\r\n  DropdownModule,\r\n  PrimeNgTableModule,\r\n  CheckboxModule,\r\n  SelectButtonModule,\r\n  CalendarModule,\r\n  InputSwitchModule,\r\n  ProgressBarModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [TableModule, ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [];\r\n\r\nconst DYNAMIC_COMPONENTS = [\r\n  ManufacturingBatchFormComponent,\r\n  ManufacturingBatchSearchComponent,\r\n  DocumentUploadDialogComponent\r\n];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [ManufacturingBatchFormService, ManufacturingBatchSearchService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicAttributesModule,\r\n    ComponentSidebarModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ManageSearchCriteriaModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class ManufacturingBatchModule {}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewManufacturing()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">{{ \\\"addToFavorite\\\" | translate }}</button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <!-- TODO -->\\r\\n                <!-- <div class=\\\"row search-criteria-header\\\">\\r\\n                  <aw-manage-search-criteria></aw-manage-search-criteria>\\r\\n                </div> -->\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".partNumber\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"manufacturingInputObj.pnCode\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".batchNumber\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"manufacturingInputObj.batchNumber\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".designation\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"manufacturingInputObj.designation\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".operationalStatus\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [(ngModel)]=\\\"manufacturingInputObj.operationalStatus\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        [options]=\\\"statusList\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".eisDate\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"manufacturingInputObj.eisDate\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\"></div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      color=\\\"primary\\\"\\r\\n                      (click)=\\\"search()\\\"\\r\\n                      appKeyPress\\r\\n                      [keyCode]=\\\"'Enter'\\\"\\r\\n                      (keyPress)=\\\"search()\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".toSearch\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"results\\\" | translate }} ({{ mfgBatchTableDataSource.dataCount }})</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <a-table [dataSource]=\\\"mfgBatchTableDataSource\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportMfgBatchTable()\\\"\\r\\n                    *ngIf=\\\"mfgBatchTableDataSource.hasData && !mfgBatchTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteMfgBatch(mfgBatchTableDataSource.dataSelection)\\\"\\r\\n                    *ngIf=\\\"hasManageAccessRight && mfgBatchTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openMfgBatchDetails(mfgBatchTableDataSource.dataSelection)\\\"\\r\\n                    *ngIf=\\\"mfgBatchTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"batchNumber\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <a (click)=\\\"openMfgBatchDetail(rowData.batchNumber)\\\">{{ rowData.batchNumber }}</a>\\r\\n                </ng-template>\\r\\n                <ng-template columnDef=\\\"partNumber\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <a> {{ rowData.partNumber }}</a>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host .search-criteria-footer {\\n  justify-content: flex-end; }\\n\\n:host .custom-width {\\n  max-width: -webkit-fit-content;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvbWFudWZhY3R1cmluZy1iYXRjaC9zZWFyY2gvZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxhcHBcXG1haW5cXGxvZ2lzdGljc1xcbWFudWZhY3R1cmluZy1iYXRjaFxcc2VhcmNoXFxtYW51ZmFjdHVyaW5nLWJhdGNoLXNlYXJjaC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLHlCQUF5QixFQUFBOztBQUY3QjtFQUtJLDhCQUFzQjtFQUF0QiwyQkFBc0I7RUFBdEIsc0JBQXNCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2xvZ2lzdGljcy9tYW51ZmFjdHVyaW5nLWJhdGNoL3NlYXJjaC9tYW51ZmFjdHVyaW5nLWJhdGNoLXNlYXJjaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAuc2VhcmNoLWNyaXRlcmlhLWZvb3RlciB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gIH1cclxuICAuY3VzdG9tLXdpZHRoIHtcclxuICAgIG1heC13aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\n\r\nimport { ManufacturingBatchSearchService } from './manufacturing-batch-search.service';\r\n\r\ninterface MfgBatchRow {\r\n  batchNumber: string;\r\n  partNumber?: string;\r\n  designation?: string;\r\n  operationalStatus?: string;\r\n  eisDate?: Date;\r\n  assetCode?: string;\r\n  quantity?: number;\r\n}\r\n\r\ninterface ManufacturingBatchInput {\r\n  pnCode?: string;\r\n  batchNumber?: string;\r\n  designation?: string;\r\n  eisDate?: Date;\r\n  operationalStatus?: string;\r\n  familyVariant?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-manufacturing-batch-search',\r\n  styleUrls: ['./manufacturing-batch-search.component.scss'],\r\n  templateUrl: './manufacturing-batch-search.component.html'\r\n})\r\nexport class ManufacturingBatchSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public mfgBatchTableDataSource: TableDataSource<MfgBatchRow>;\r\n  public manufacturingInputObj: ManufacturingBatchInput;\r\n\r\n  public statusList: LabelValue<string>[];\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly manufacturingBatchSearchService: ManufacturingBatchSearchService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    this.initMfgBatchTableDataSource();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_MANUFACTURING_BATCH_SEARCH;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.manufacturingInputObj = {};\r\n    this.loadDropdowns();\r\n  }\r\n\r\n  private loadDropdowns(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.BATCH_EQUIPMENT_STATUS_MAP).subscribe((results) => {\r\n      this.statusList = results;\r\n    });\r\n  }\r\n\r\n  public search(): void {\r\n    this.mfgBatchTableDataSource.setData([]);\r\n    const bidoEquipmentObject = this.getBidoEquipmentObject();\r\n    this.manufacturingBatchSearchService.getMfgBatchList(bidoEquipmentObject).subscribe((result) => {\r\n      if (result && result.length) {\r\n        this.mapBidoEqupmentOutput(result);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getOprationalStatus(status: string): string {\r\n    const result = this.statusList.find(({ value }) => value === status);\r\n\r\n    return result ? result.label : '';\r\n  }\r\n\r\n  private mapBidoEqupmentOutput(result: BidoEquipmentDTO[]): void {\r\n    const resultsTable: MfgBatchRow[] = [];\r\n    result.forEach((element) => {\r\n      const tableObject: MfgBatchRow = {\r\n        batchNumber: element.batchNumber || '',\r\n        partNumber: element.pnCode,\r\n        designation: element.equipmentDesignation,\r\n        operationalStatus: this.getOprationalStatus(element.operationalStatus || ''),\r\n        eisDate: element.manufacturingDate,\r\n        assetCode: element.equipmentCode,\r\n        quantity: element.quantity\r\n      };\r\n      resultsTable.push(tableObject);\r\n    });\r\n    this.mfgBatchTableDataSource.setData(resultsTable);\r\n  }\r\n\r\n  private getBidoEquipmentObject(): BidoEquipmentDTO {\r\n    const bidoObject: BidoEquipmentDTO = {\r\n      pnCode: this.manufacturingInputObj.pnCode,\r\n      batchNumber: this.manufacturingInputObj.batchNumber,\r\n      equipmentDesignation: this.manufacturingInputObj.designation,\r\n      operationalStatus: this.manufacturingInputObj.operationalStatus,\r\n      manufacturingDate: this.manufacturingInputObj.eisDate\r\n    };\r\n\r\n    return bidoObject;\r\n  }\r\n\r\n  public openMfgBatchDetail(batchNumber: string) {\r\n    this.manufacturingBatchSearchService.openMfgBatch(batchNumber);\r\n  }\r\n\r\n  public openMfgBatchDetails(mfgBatchRows: MfgBatchRow[]) {\r\n    mfgBatchRows.forEach((mfgBatch) => {\r\n      this.manufacturingBatchSearchService.openMfgBatch(mfgBatch.assetCode);\r\n    });\r\n  }\r\n\r\n  private initMfgBatchTableDataSource(): void {\r\n    this.mfgBatchTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'batchNumber',\r\n          translateKey: this.getTranslateKey('batchNumber')\r\n        },\r\n        {\r\n          field: 'partNumber',\r\n          translateKey: this.getTranslateKey('partNumber')\r\n        },\r\n        {\r\n          field: 'quantity',\r\n          translateKey: this.getTranslateKey('quantity')\r\n        },\r\n        {\r\n          field: 'designation',\r\n          translateKey: this.getTranslateKey('designation')\r\n        },\r\n        {\r\n          field: 'operationalStatus',\r\n          translateKey: this.getTranslateKey('operationalStatus')\r\n        },\r\n        {\r\n          field: 'eisDate',\r\n          translateKey: this.getTranslateKey('eisDate')\r\n        },\r\n        {\r\n          field: 'assetCode',\r\n          translateKey: this.getTranslateKey('assetCode')\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open manufacturing screen form\r\n   */\r\n  public openNewManufacturing(): void {\r\n    this.openManufacturing(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  private openManufacturing(objectId: string | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_MANUFACTURING_BATCH_FORM,\r\n      openMode\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidoEquipmentApi } from '../../../../shared/api/bido-equipment.api';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\n\r\n@Injectable()\r\nexport class ManufacturingBatchSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly serializationService: SerializationService,\r\n    private readonly bidoEquipmentApi: BidoEquipmentApi,\r\n    private readonly tabService: TabService\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public getMfgBatchList(equipmentObj: BidoEquipmentDTO): Observable<BidoEquipmentDTO[]> {\r\n    return super.post<BidoEquipmentDTO, BidoEquipmentDTO[]>(\r\n      this.bidoEquipmentApi.findManufacturingBatchesByCriteria,\r\n      equipmentObj\r\n    );\r\n  }\r\n\r\n  public openMfgBatch(objectId: string | undefined): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_MANUFACTURING_BATCH_FORM,\r\n      objectId: objectId ? this.serializationService.serialize({ customerCode: objectId }) : undefined,\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n}\r\n","export enum TableSelectionMode {\r\n  Multiple = 'multiple',\r\n  Single = 'single'\r\n}\r\n","import * as FileSaver from 'file-saver';\r\n\r\nimport { NumberUtils } from './number-utils';\r\n\r\nexport class FileUtils {\r\n  public static readonly KIBIOCTET: number = 1024;\r\n  public static readonly KILOOCTET: number = 1000;\r\n\r\n  public static downloadFile(file: Uint8Array | undefined, fileName: string | undefined): void {\r\n    if (!!file && !!fileName) {\r\n      const byteCharacters = atob(file.toString());\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n\r\n      FileSaver.saveAs(new Blob([new Uint8Array(byteNumbers)]), fileName);\r\n    }\r\n  }\r\n\r\n  public static getExtension(fileName: string | undefined): string {\r\n    return !!fileName && fileName.includes('.') ? fileName.substring(fileName.lastIndexOf('.') + 1) : '';\r\n  }\r\n\r\n  public static getFileContentAsBase64(file: File | undefined, callback: (fileContent: Uint8Array) => void): void {\r\n    if (!!file) {\r\n      const reader: FileReader = new FileReader();\r\n      reader.onloadend = () => {\r\n        let fileContent: any = reader.result; // tslint:disable-line:no-any\r\n        fileContent = fileContent.substring((fileContent.indexOf(',') as number) + 1); // Remove data:*/*;base64,\r\n        callback(fileContent);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  public static getFormattedSize(size: number | undefined): string {\r\n    if (!!size) {\r\n      return size / FileUtils.KILOOCTET < FileUtils.KILOOCTET\r\n        ? `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET)} Ko`\r\n        : `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET / FileUtils.KILOOCTET)} Mo`;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}