{"version":3,"sources":["webpack:///./node_modules/primeng/inputtextarea.js","webpack:///./node_modules/primeng/slider.js","webpack:///./node_modules/primeng/splitbutton.js","webpack:///./node_modules/rxjs/internal/Observer.js","webpack:///./node_modules/rxjs/internal/Subscriber.js","webpack:///./node_modules/rxjs/internal/Subscription.js","webpack:///./node_modules/rxjs/internal/config.js","webpack:///./node_modules/rxjs/internal/operators/finalize.js","webpack:///./node_modules/rxjs/internal/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/internal/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/internal/util/hostReportError.js","webpack:///./node_modules/rxjs/internal/util/isArray.js","webpack:///./node_modules/rxjs/internal/util/isFunction.js","webpack:///./node_modules/rxjs/internal/util/isObject.js","webpack:///./src/app/main/maintenance/forecast/forecast.module.ts","webpack:///./src/app/main/maintenance/forecast/form/assets-required-availabilities/assets-required-availabilities.component.html","webpack:///./src/app/main/maintenance/forecast/form/assets-required-availabilities/assets-required-availabilities.component.ts","webpack:///./src/app/main/maintenance/forecast/form/defect-dialog/defect-dialog.component.html","webpack:///./src/app/main/maintenance/forecast/form/defect-dialog/defect-dialog.component.ts","webpack:///./src/app/main/maintenance/forecast/form/event-group-dialog/event-group-dialog.component.html","webpack:///./src/app/main/maintenance/forecast/form/event-group-dialog/event-group-dialog.component.ts","webpack:///./src/app/main/maintenance/forecast/form/forecast-filter-list/forecast-filter-list.component.html","webpack:///./src/app/main/maintenance/forecast/form/forecast-filter-list/forecast-filter-list.component.ts","webpack:///./src/app/main/maintenance/forecast/form/forecast-form.component.html","webpack:///./src/app/main/maintenance/forecast/form/forecast-form.component.scss","webpack:///./src/app/main/maintenance/forecast/form/forecast-form.component.ts","webpack:///./src/app/main/maintenance/forecast/form/forecast-form.service.ts","webpack:///./src/app/main/maintenance/forecast/form/forecast-global-filter/forecast-global-filter.component.html","webpack:///./src/app/main/maintenance/forecast/form/forecast-global-filter/forecast-global-filter.component.ts","webpack:///./src/app/main/maintenance/forecast/form/forecast-legend-dialog/forecast-legend-dialog.component.html","webpack:///./src/app/main/maintenance/forecast/form/forecast-legend-dialog/forecast-legend-dialog.component.scss","webpack:///./src/app/main/maintenance/forecast/form/forecast-legend-dialog/forecast-legend-dialog.component.ts","webpack:///./src/app/main/maintenance/forecast/form/forecast-project-header-dialog/forecast-project-header-dialog.component.html","webpack:///./src/app/main/maintenance/forecast/form/forecast-project-header-dialog/forecast-project-header-dialog.component.ts","webpack:///./src/app/main/maintenance/forecast/form/planned-date-dialog/planned-date-dialog.component.html","webpack:///./src/app/main/maintenance/forecast/form/planned-date-dialog/planned-date-dialog.component.ts","webpack:///./src/app/main/maintenance/forecast/form/resources-availabilities/resources-availabilities.component.html","webpack:///./src/app/main/maintenance/forecast/form/resources-availabilities/resources-availabilities.component.ts","webpack:///./src/app/main/maintenance/forecast/form/scheduled-event-dialog/scheduled-event-dialog.component.html","webpack:///./src/app/main/maintenance/forecast/form/scheduled-event-dialog/scheduled-event-dialog.component.ts","webpack:///./src/app/main/maintenance/forecast/form/unscheduled-event-dialog/unscheduled-event-dialog.component.html","webpack:///./src/app/main/maintenance/forecast/form/unscheduled-event-dialog/unscheduled-event-dialog.component.ts","webpack:///./src/app/main/maintenance/forecast/form/work-package-dialog/work-package-dialog.component.html","webpack:///./src/app/main/maintenance/forecast/form/work-package-dialog/work-package-dialog.component.ts","webpack:///./src/app/main/maintenance/forecast/search/forecast-search.component.html","webpack:///./src/app/main/maintenance/forecast/search/forecast-search.component.scss","webpack:///./src/app/main/maintenance/forecast/search/forecast-search.component.ts","webpack:///./src/app/main/maintenance/forecast/search/forecast-search.service.ts","webpack:///./src/app/shared/components/dialog-search-fleet/dialog-search-fleet.component.html","webpack:///./src/app/shared/components/dialog-search-fleet/dialog-search-fleet.component.ts","webpack:///./src/app/shared/components/dialog-search-fleet/dialog-search-fleet.module.ts","webpack:///./src/app/shared/components/dialog-search-fleet/dialog-search-fleet.service.ts","webpack:///./src/app/shared/constants/bsde-attribute-constants.interface.ts","webpack:///./src/app/shared/constants/bsde-event-type-constants.ts","webpack:///./src/app/shared/utils/bido-equipment-utils.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kHAA0C,G;;;;;;;;;;;;ACN3D;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sFAA4B,G;;;;;;;;;;;;ACN7C;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0GAAsC,G;;;;;;;;;;;;ACN1C;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,wDAAU;AACjC,wBAAwB,mBAAO,CAAC,oFAAwB;AACxD;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,2BAA2B;AAC3B;AACA,oC;;;;;;;;;;;;ACjBa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,0EAAmB;AAC9C,iBAAiB,mBAAO,CAAC,4DAAY;AACrC,qBAAqB,mBAAO,CAAC,oEAAgB;AAC7C,qBAAqB,mBAAO,CAAC,4FAAiC;AAC9D,eAAe,mBAAO,CAAC,wDAAU;AACjC,wBAAwB,mBAAO,CAAC,oFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,aAAa;AAClmDAAmD,6CAA6C;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;;;;;ACrPa;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,oEAAgB;AACxC,iBAAiB,mBAAO,CAAC,sEAAiB;AAC1C,mBAAmB,mBAAO,CAAC,0EAAmB;AAC9C,4BAA4B,mBAAO,CAAC,4FAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAiC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA,+CAA+C,mGAAmG,EAAE;AACpJ;AACA,wC;;;;;;;;;;;;ACxIa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,kC;;;;;;;;;;;;ACnBa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AAC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","file":"maintenance-forecast-forecast-module.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputtextarea/inputtextarea\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/slider/slider\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/splitbutton/splitbutton\"));","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError_1.hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isFunction_1 = require(\"./util/isFunction\");\nvar Observer_1 = require(\"./Observer\");\nvar Subscription_1 = require(\"./Subscription\");\nvar rxSubscriber_1 = require(\"../internal/symbol/rxSubscriber\");\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config_1.config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError_1.hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError_1.hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexports.SafeSubscriber = SafeSubscriber;\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray_1 = require(\"./util/isArray\");\nvar isObject_1 = require(\"./util/isObject\");\nvar isFunction_1 = require(\"./util/isFunction\");\nvar UnsubscriptionError_1 = require(\"./util/UnsubscriptionError\");\nvar Subscription = (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError_1.UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexports.config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = new Error();\n            console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nvar Subscription_1 = require(\"../Subscription\");\nfunction finalize(callback) {\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\n}\nexports.finalize = finalize;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\nvar FinallySubscriber = (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        var _this = _super.call(this, destination) || this;\n        _this.add(new Subscription_1.Subscription(callback));\n        return _this;\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finalize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rxSubscriber = typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random();\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction UnsubscriptionErrorImpl(errors) {\n    Error.call(this);\n    this.message = errors ?\n        errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n}\nUnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\nexports.UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\nexports.hostReportError = hostReportError;\n//# sourceMappingURL=hostReportError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isObject(x) {\n    return x !== null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { SliderModule } from 'primeng/slider';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { UnitConversionMatrixApi } from '../../../shared/api/unit-matrix-conversion.api';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { DialogSearchEquipmentModule } from '../../../shared/components/dialog-search-equipment/dialog-search-equipment.module';\r\nimport { DialogSearchEvolutionModule } from '../../../shared/components/dialog-search-evolution/dialog-search-evolution.module';\r\nimport { DialogSearchFleetModule } from '../../../shared/components/dialog-search-fleet/dialog-search-fleet.module';\r\nimport { DialogSearchTaskModule } from '../../../shared/components/dialog-search-task/dialog-search-task.module';\r\nimport { ManageSearchCriteriaModule } from '../../../shared/components/manage-search-criteria/manage-search-criteria.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { SchedulerModule } from '../../../shared/components/scheduler/scheduler.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { UnitConversionMatrixService } from '../../engineering-management/unit-conversion-matrix/unit-conversion-matrix.service';\r\nimport { ProcurementRequestsTableModule } from '../procurement-request/procurement-requests-table.module';\r\n\r\nimport { AssetRequiredAvailabilitiesForecastFormDialogComponent } from './form/assets-required-availabilities/assets-required-availabilities.component';\r\nimport { DefectForecastFormDialogComponent } from './form/defect-dialog/defect-dialog.component';\r\nimport { EventGroupForecastFormDialogComponent } from './form/event-group-dialog/event-group-dialog.component';\r\nimport { FilterListForecastFormComponent } from './form/forecast-filter-list/forecast-filter-list.component';\r\nimport { ForecastFormComponent } from './form/forecast-form.component';\r\nimport { ForecastFormService } from './form/forecast-form.service';\r\nimport { GlobalFilterForecastFormComponent } from './form/forecast-global-filter/forecast-global-filter.component';\r\nimport { LegendForecastFormDialogComponent } from './form/forecast-legend-dialog/forecast-legend-dialog.component';\r\nimport { ForecastProjectHeaderDialogComponent } from './form/forecast-project-header-dialog/forecast-project-header-dialog.component';\r\nimport { PlannedDateForecastFormDialogComponent } from './form/planned-date-dialog/planned-date-dialog.component';\r\nimport { ResourcesAvailabilitiesForecastFormDialogComponent } from './form/resources-availabilities/resources-availabilities.component';\r\nimport { ScheduledEventForecastFormDialogComponent } from './form/scheduled-event-dialog/scheduled-event-dialog.component';\r\nimport { UnscheduledEventForecastFormDialogComponent } from './form/unscheduled-event-dialog/unscheduled-event-dialog.component';\r\nimport { WorkPackageForecastFormDialogComponent } from './form/work-package-dialog/work-package-dialog.component';\r\nimport { ForecastSearchComponent } from './search/forecast-search.component';\r\nimport { ForecastSearchService } from './search/forecast-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DropdownModule,\r\n  MultiSelectModule,\r\n  OverlayPanelModule,\r\n  SelectButtonModule,\r\n  SliderModule,\r\n  SplitButtonModule,\r\n  TableModule,\r\n  TooltipModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [\r\n  ProcurementRequestsTableModule,\r\n  DialogSearchEquipmentModule,\r\n  DialogSearchEvolutionModule,\r\n  DialogSearchFleetModule,\r\n  DialogSearchTaskModule,\r\n  ModalModule,\r\n  SchedulerModule\r\n];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [\r\n  AssetRequiredAvailabilitiesForecastFormDialogComponent,\r\n  DefectForecastFormDialogComponent,\r\n  EventGroupForecastFormDialogComponent,\r\n  FilterListForecastFormComponent,\r\n  GlobalFilterForecastFormComponent,\r\n  LegendForecastFormDialogComponent,\r\n  PlannedDateForecastFormDialogComponent,\r\n  ResourcesAvailabilitiesForecastFormDialogComponent,\r\n  ScheduledEventForecastFormDialogComponent,\r\n  UnscheduledEventForecastFormDialogComponent,\r\n  WorkPackageForecastFormDialogComponent,\r\n  ForecastProjectHeaderDialogComponent\r\n];\r\n\r\nconst DYNAMIC_COMPONENTS = [ForecastFormComponent, ForecastSearchComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [ForecastFormService, ForecastSearchService, UnitConversionMatrixService, UnitConversionMatrixApi];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ManageSearchCriteriaModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class ForecastModule {}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"50\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <p-table\\r\\n      [resizableColumns]=\\\"true\\\"\\r\\n      #ptableAssets\\r\\n      class=\\\"aw-table2\\\"\\r\\n      [columns]=\\\"availabilitiesTableColList\\\"\\r\\n      [value]=\\\"availabilitiesTable\\\"\\r\\n      [(selection)]=\\\"availabilitiesTableSelection\\\"\\r\\n      [scrollable]=\\\"true\\\"\\r\\n    >\\r\\n      <ng-template pTemplate=\\\"caption\\\">\\r\\n        <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': availabilitiesTableSelection.length > 0 }\\\">\\r\\n          <div class=\\\"aw-table-global-filter\\\">\\r\\n            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </label>\\r\\n\\r\\n            <input\\r\\n              class=\\\"aw-table-global-filter-input\\\"\\r\\n              type=\\\"text\\\"\\r\\n              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n              (input)=\\\"ptableAssets.filterGlobal($event.target.value, 'contains')\\\"\\r\\n            />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"aw-table-actions\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"availabilitiesTableSelection.length > 0\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteSelectedRows()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"availabilitiesTableSelection.length === 0\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addAvailabilities()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n        <colgroup>\\r\\n          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n        </colgroup>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n        <tr>\\r\\n          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n          </th>\\r\\n          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n            <span *ngIf=\\\"col.field !== 'number'\\\">\\r\\n              {{ getComponentName() + \\\".\\\" + col.field | translate }}\\r\\n            </span>\\r\\n            <span *ngIf=\\\"col.field === 'number'\\\">\\r\\n              #\\r\\n            </span>\\r\\n          </th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n          </td>\\r\\n          <td\\r\\n            *ngFor=\\\"let col of columns\\\"\\r\\n            pEditableColumn\\r\\n            [ngSwitch]=\\\"col.field\\\"\\r\\n            [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n          >\\r\\n            <span *ngSwitchCase=\\\"'availabilityStartDate'\\\">\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                  ></p-calendar>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                    disabled\\r\\n                  ></p-calendar>\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </span>\\r\\n            <span *ngSwitchCase=\\\"'availabilityEndDate'\\\">\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                    disabled\\r\\n                  ></p-calendar>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                    disabled\\r\\n                  ></p-calendar>\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </span>\\r\\n            <span *ngSwitchCase=\\\"'availabilityCode'\\\">\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"assetList\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [style]=\\\"{ width: '100%' }\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                  ></p-dropdown>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"assetList\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    [disabled]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                  ></p-dropdown>\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </span>\\r\\n            <span *ngSwitchCase=\\\"'availabilityPerWeek'\\\">\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData[col.field]\\\" required />\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  {{ rowData[col.field] }}\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </span>\\r\\n            <span *ngSwitchCase=\\\"'availabilityPerWeekEnd'\\\">\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData[col.field]\\\" required />\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  {{ rowData[col.field] }}\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </span>\\r\\n            <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"saveSpinner\\\"></span>\\r\\n      {{ \\\"validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { finalize } from 'rxjs/internal/operators/finalize';\r\n\r\nimport { AWPropertiesConstants } from '../../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BsdeAvailabilityInput } from '../../../../../shared/types/api-input-types/project-management/bsde-availability-input.interface';\r\nimport { BidoEquipmentDTO } from '../../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BsdeAvailabilityDTOCustom } from '../../../../../shared/types/api-types/bsde-availability-dto-custom.interface';\r\nimport { BsdeAvailabilityDTOId } from '../../../../../shared/types/api-types/bsde-availability-dto-id.interface';\r\nimport { BsdeAvailabilityDTO } from '../../../../../shared/types/api-types/bsde-availability-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { TableColumn } from '../../../../../shared/types/table-column.interface';\r\nimport { BidoEquipmentUtils } from '../../../../../shared/utils/bido-equipment-utils';\r\nimport { ForecastFormService } from '../forecast-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-forecast-form-assets-required-availabilities',\r\n  templateUrl: './assets-required-availabilities.component.html'\r\n})\r\nexport class AssetRequiredAvailabilitiesForecastFormDialogComponent extends DialogComponent implements OnInit {\r\n  private static readonly AVAILABILITY_TYPE = AWPropertiesConstants.AVAILABILITY_TYPE_QUALIFICATION;\r\n\r\n  @Input() private readonly projectId: number;\r\n  @Input() public topAssetList: BidoEquipmentDTO[];\r\n\r\n  public availabilitiesTable: BsdeAvailabilityDTOCustom[];\r\n  public availabilitiesTableSelection: BsdeAvailabilityDTOCustom[];\r\n  public availabilitiesTableColList: TableColumn[];\r\n\r\n  public saveSpinner: boolean;\r\n\r\n  public assetList: LabelValue<string>[];\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly forcastFormService: ForecastFormService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'AssetRequiredAvailabilitiesForecastFormDialogComponent');\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.assetList = [];\r\n    this.availabilitiesTableColList = [\r\n      { field: 'number', alignment: 'center', width: '5%' },\r\n      { field: 'availabilityStartDate', alignment: 'left', width: '10%' },\r\n      { field: 'availabilityEndDate', alignment: 'left', width: '10%' },\r\n      { field: 'availabilityCode', alignment: 'left', width: '30%' },\r\n      { field: 'availabilityPerWeek', alignment: 'left', width: '15%' },\r\n      { field: 'availabilityPerWeekEnd', alignment: 'left', width: '15%' }\r\n    ];\r\n\r\n    this.loadAssetList();\r\n    this.availabilitiesTableSelection = [];\r\n    this.loadAvailabilityData();\r\n  }\r\n\r\n  private loadAssetList() {\r\n    this.topAssetList.forEach((dto) => {\r\n      this.assetList.push({\r\n        label: BidoEquipmentUtils.createAssetRepresentation(dto),\r\n        value: dto.equipmentCode as string\r\n      });\r\n    });\r\n\r\n    // Remove asset drop down in case assets are <= 1\r\n    if (this.assetList.length <= 1) {\r\n      const AVAILABILITY_CODE_COL_INDEX = 3;\r\n      this.availabilitiesTableColList.splice(AVAILABILITY_CODE_COL_INDEX, 1);\r\n    }\r\n  }\r\n\r\n  /************************************\r\n   * Load Dialog data\r\n   ************************************/\r\n  private loadAvailabilityData() {\r\n    this.availabilitiesTable = [];\r\n    const input: BsdeAvailabilityInput = {\r\n      projectId: this.projectId,\r\n      availabilityType: AssetRequiredAvailabilitiesForecastFormDialogComponent.AVAILABILITY_TYPE\r\n    };\r\n    this.forcastFormService\r\n      .findBsdeAvailabilitysByProjectAndAvailabilityTypeAndAvailabilityCode(input)\r\n      .subscribe((res) => {\r\n        res.forEach((row) => {\r\n          const availabilityEndDates = this.getAvailabilityEndDate(res, row);\r\n          this.availabilitiesTable.push({\r\n            availabilityCode: row.availabilityCode,\r\n            availabilityId: row.availabilityId,\r\n            availabilityPerWeek: row.availabilityPerWeek,\r\n            availabilityPerWeekEnd: row.availabilityPerWeekEnd,\r\n            availabilityStartDate: row.availabilityStartDate,\r\n            availabilityType: row.availabilityType,\r\n            projectId: row.projectId,\r\n            isUnavailable: row.isUnavailable,\r\n            availabilityEndDate: availabilityEndDates\r\n          });\r\n        });\r\n        this.resetTableCounter();\r\n      });\r\n  }\r\n\r\n  /************************************\r\n   * Add Entry\r\n   ************************************/\r\n  public addAvailabilities() {\r\n    this.availabilitiesTable.push({\r\n      number: this.availabilitiesTable.length === 0 ? 1 : this.availabilitiesTable.length + 1,\r\n      availabilityPerWeek: 0,\r\n      availabilityPerWeekEnd: 0,\r\n      availabilityType: AssetRequiredAvailabilitiesForecastFormDialogComponent.AVAILABILITY_TYPE,\r\n      projectId: this.projectId.toString()\r\n    });\r\n  }\r\n\r\n  // Sort acc to date\r\n  private dateSelectionEvent() {\r\n    this.availabilitiesTable = this.availabilitiesTable.sort((a, b): number => {\r\n      if (!!b.availabilityStartDate && !!a.availabilityStartDate) {\r\n        return a.availabilityStartDate.getTime() - b.availabilityStartDate.getTime();\r\n      }\r\n\r\n      return -1;\r\n    });\r\n\r\n    this.resetTableCounter();\r\n  }\r\n\r\n  /************************************\r\n   * Validate Dialog and Save\r\n   ************************************/\r\n  public validate() {\r\n    if (this.validateTable()) {\r\n      this.saveSpinner = true;\r\n      this.dateSelectionEvent();\r\n      this.forcastFormService\r\n        .createOrUpdateBsdeAvailability(this.availabilitiesTable as BsdeAvailabilityDTO[])\r\n        .pipe(\r\n          finalize(() => {\r\n            this.saveSpinner = false;\r\n          })\r\n        )\r\n        .subscribe((res) => {\r\n          this.loadAvailabilityData();\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('onSaveSuccess'));\r\n        });\r\n    }\r\n  }\r\n\r\n  /************************************\r\n   * Table Validation\r\n   ************************************/\r\n  private validateTable() {\r\n    const WORKING_DAY_HOUR_LIMIT = 23;\r\n    let validation = true;\r\n    let errorMsg = '';\r\n\r\n    this.availabilitiesTable.forEach((res) => {\r\n      if (res.availabilityPerWeek === null || res.availabilityPerWeekEnd === null) {\r\n        errorMsg = this.getTranslateKey('weekMandatoryFields');\r\n        validation = false;\r\n      }\r\n\r\n      if (\r\n        (!!res.availabilityPerWeek && res.availabilityPerWeek > WORKING_DAY_HOUR_LIMIT) ||\r\n        (!!res.availabilityPerWeekEnd && res.availabilityPerWeekEnd > WORKING_DAY_HOUR_LIMIT)\r\n      ) {\r\n        errorMsg = this.getTranslateKey('valueCannotBeGreaterThanWorkingDayHourLimit');\r\n        validation = false;\r\n      }\r\n\r\n      if (!res.availabilityStartDate) {\r\n        errorMsg = this.getTranslateKey('startDateMandatory');\r\n        validation = false;\r\n      }\r\n\r\n      if (this.assetList.length === 0 && !res.availabilityCode) {\r\n        errorMsg = this.getTranslateKey('assetMandatory');\r\n        validation = false;\r\n      } else if (this.assetList.length === 1) {\r\n        res.availabilityCode = this.assetList[0].value;\r\n      }\r\n    });\r\n\r\n    if (!!errorMsg) {\r\n      this.messageService.showErrorMessage(errorMsg);\r\n    }\r\n\r\n    return validation;\r\n  }\r\n\r\n  /************************************\r\n   * Delete Rows\r\n   ************************************/\r\n  public deleteSelectedRows() {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey('confirmDeleteSelectedAvailabilities'),\r\n      accept: () => {\r\n        const id: BsdeAvailabilityDTOId[] = [];\r\n        const cloneTable = [...this.availabilitiesTable];\r\n        this.availabilitiesTableSelection.forEach((res) => {\r\n          if (!!res) {\r\n            if (!!res.availabilityId) {\r\n              id.push({\r\n                availabilityId: res.availabilityId\r\n              });\r\n            }\r\n            cloneTable.splice((res.number as number) - 1, 1);\r\n          }\r\n        });\r\n        this.forcastFormService.removeBsdeAvailability(id).subscribe((res) => {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('onDeleteSuccess'));\r\n          this.loadAvailabilityData();\r\n          this.availabilitiesTableSelection = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /************************************\r\n   * Reset Table Counter\r\n   ************************************/\r\n  private resetTableCounter() {\r\n    this.availabilitiesTable.forEach((res, index) => {\r\n      res.number = index + 1;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * getAvailabilityEndDate() - This function is used to calculate the Availabilty End Date field.\r\n   * @param results - Availability Data List\r\n   * @param rowData - Availability Data Row\r\n   */\r\n  private getAvailabilityEndDate(results: BsdeAvailabilityDTO[], rowData: BsdeAvailabilityDTO) {\r\n    let nextDateFound: Date | undefined;\r\n    if (!!rowData.availabilityStartDate) {\r\n      results.forEach((elements) => {\r\n        if (\r\n          rowData.availabilityCode === elements.availabilityCode &&\r\n          elements.availabilityStartDate &&\r\n          rowData.availabilityStartDate &&\r\n          elements.availabilityStartDate > rowData.availabilityStartDate\r\n        ) {\r\n          if (!nextDateFound || (!!nextDateFound && elements.availabilityStartDate < nextDateFound)) {\r\n            nextDateFound = elements.availabilityStartDate;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (!!nextDateFound) {\r\n      const nextStartDate = new Date(nextDateFound);\r\n      nextStartDate.setDate(nextStartDate.getDate() - 1);\r\n\r\n      return nextStartDate;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">\\r\\n          {{ \\\"name\\\" | translate }}\\r\\n        </label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"notification.notificationSubject\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">\\r\\n          {{ \\\"description\\\" | translate }}\\r\\n        </label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"aw-input\\\"\\r\\n            [disabled]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"notification.bidoNotificationTypeDTO.typeDescription\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">\\r\\n          {{ \\\"code\\\" | translate }}\\r\\n        </label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"notification.notificationCode\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">\\r\\n          {{ \\\"notToExceedDate\\\" | translate }}\\r\\n        </label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-calendar\\r\\n            showButtonBar=\\\"true\\\"\\r\\n            [monthNavigator]=\\\"true\\\"\\r\\n            [yearNavigator]=\\\"true\\\"\\r\\n            [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n            class=\\\"aw-calendar\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n            [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n            [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n            [showTime]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"defect.nteDate\\\"\\r\\n            [disabled]=\\\"true\\\"\\r\\n          ></p-calendar>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">\\r\\n          {{ getComponentName() + \\\".delayCategory\\\" | translate }}\\r\\n        </label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"delayCategory\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">\\r\\n          {{ getComponentName() + \\\".authorizedDelay\\\" | translate }}\\r\\n        </label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"authorizedDelay\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"close\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { MaintenanceForecastingDefect } from '../../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-defect.interface';\r\nimport { BidoNotificationDTO } from '../../../../../shared/types/api-types/bido-notification-dto.interface';\r\nimport { DeferredDefectEventDTO } from '../../../../../shared/types/api-types/deferred-defect-event-dto.interface';\r\nimport { DeferredDefectInfoDTO } from '../../../../../shared/types/api-types/deferred-defect-info-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { ObjectUtils } from '../../../../../shared/utils/object-utils';\r\nimport { EventModel } from '../forecast-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-forecast-form-defect',\r\n  templateUrl: './defect-dialog.component.html'\r\n})\r\nexport class DefectForecastFormDialogComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public eventModel: EventModel<MaintenanceForecastingDefect>;\r\n\r\n  public authorizedDelay: string | undefined;\r\n  public defect: DeferredDefectEventDTO;\r\n  public delayCategory: string | undefined;\r\n  public notification: BidoNotificationDTO;\r\n\r\n  public constructor(public sessionService: SessionService) {\r\n    super(ComponentOpenMode.Write, 'DefectForecastFormDialogComponent');\r\n\r\n    this.init();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.defect = this.eventModel._obj.deferredDefectEvent;\r\n    this.notification = this.eventModel._obj.deferredDefectEvent.bidoNotificationData as BidoNotificationDTO;\r\n    if (ObjectUtils.isDefined(this.defect.deferredDefectInfo)) {\r\n      const deferredDefectInfo = this.defect.deferredDefectInfo as DeferredDefectInfoDTO;\r\n      this.authorizedDelay = deferredDefectInfo.delayValue;\r\n      this.delayCategory = deferredDefectInfo.delayCategory;\r\n    }\r\n  }\r\n\r\n  private init(): void {\r\n    this.authorizedDelay = undefined;\r\n    this.delayCategory = undefined;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"90\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <p-table\\r\\n      [resizableColumns]=\\\"true\\\"\\r\\n      #ptableEvents\\r\\n      class=\\\"aw-table2\\\"\\r\\n      [columns]=\\\"eventTableColList\\\"\\r\\n      [value]=\\\"eventTable\\\"\\r\\n      [(selection)]=\\\"eventTableSelection\\\"\\r\\n      [scrollable]=\\\"true\\\"\\r\\n      (onHeaderCheckboxToggle)=\\\"onSelectAllRows($event)\\\"\\r\\n      (onRowSelect)=\\\"onSelectRow()\\\"\\r\\n      (onRowUnselect)=\\\"onUnselectRow()\\\"\\r\\n    >\\r\\n      <ng-template pTemplate=\\\"caption\\\">\\r\\n        <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': eventTableSelection.length > 0 }\\\">\\r\\n          <div class=\\\"aw-table-global-filter\\\">\\r\\n            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </label>\\r\\n\\r\\n            <input\\r\\n              class=\\\"aw-table-global-filter-input\\\"\\r\\n              type=\\\"text\\\"\\r\\n              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n              (input)=\\\"ptableEvents.filterGlobal($event.target.value, 'contains')\\\"\\r\\n            />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"aw-table-actions\\\">\\r\\n            <button\\r\\n              *ngIf=\\\"showRemoveFromWorkPackage\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"removeSelectionFromWorkPackage()\\\"\\r\\n            >\\r\\n              {{ \\\"removeFromWorkPackage\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <p-splitButton\\r\\n              *ngIf=\\\"showAddToWorkPackage\\\"\\r\\n              [label]=\\\"'addToWorkPackage' | translate\\\"\\r\\n              class=\\\"aw-split-btn aw-table-action\\\"\\r\\n              [model]=\\\"workPackageItemList\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-splitButton>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"eventTableSelection.length > 0\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"updatePlannedDate()\\\"\\r\\n            >\\r\\n              {{ getComponentName() + \\\".updatePlannedDate\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button *ngIf=\\\"eventTableSelection.length === 1\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"editEvent()\\\">\\r\\n              {{ getComponentName() + \\\".editMainInformation\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button *ngIf=\\\"eventTableSelection.length === 1\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"openEvent()\\\">\\r\\n              {{ \\\"openObject\\\" | translate: { value: eventTableSelection[0].formattedType } }}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n        <colgroup>\\r\\n          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n        </colgroup>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n        <tr>\\r\\n          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n          </th>\\r\\n\\r\\n          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n            {{ getComponentName() + \\\".\\\" + col.field | translate }}\\r\\n          </th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n          </td>\\r\\n\\r\\n          <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n            {{ rowData[col.field] }}\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"close\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-forecast-form-defect\\r\\n  *ngIf=\\\"showDefectDialog\\\"\\r\\n  [(display)]=\\\"showDefectDialog\\\"\\r\\n  [eventModel]=\\\"selectedEventModel\\\"\\r\\n></aw-dialog-forecast-form-defect>\\r\\n\\r\\n<aw-dialog-forecast-form-planned-date\\r\\n  *ngIf=\\\"showPlannedDateDialog\\\"\\r\\n  [(display)]=\\\"showPlannedDateDialog\\\"\\r\\n  (onSelected)=\\\"onSelectedPlannedDate($event)\\\"\\r\\n></aw-dialog-forecast-form-planned-date>\\r\\n\\r\\n<aw-dialog-forecast-form-scheduled-event\\r\\n  *ngIf=\\\"showScheduledEventDialog\\\"\\r\\n  [(display)]=\\\"showScheduledEventDialog\\\"\\r\\n  [eventModel]=\\\"selectedEventModel\\\"\\r\\n></aw-dialog-forecast-form-scheduled-event>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\nimport { EventModel as GenericEventModel } from '../../../../../shared/components/scheduler/event-model.interface';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { DateService } from '../../../../../shared/services/date.service';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { MaintenanceForecastingDefect } from '../../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-defect.interface';\r\nimport { MaintenanceForecastingScheduledEvent } from '../../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-scheduled-event.interface';\r\nimport { MaintenanceForecastingUnscheduledEvent } from '../../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-unscheduled-event.interface';\r\nimport { MaintenanceForecastingWorkPackage } from '../../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-work-package.interface';\r\nimport { BidmProjectDTO } from '../../../../../shared/types/api-types/bidm-project-dto.interface';\r\nimport { BidoNotificationDTO } from '../../../../../shared/types/api-types/bido-notification-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { TableColumn } from '../../../../../shared/types/table-column.interface';\r\nimport { ListUtils } from '../../../../../shared/utils/list-utils';\r\nimport { ObjectUtils } from '../../../../../shared/utils/object-utils';\r\nimport { StringUtils } from '../../../../../shared/utils/string-utils';\r\nimport {\r\n  EventGroupModel,\r\n  EventModel,\r\n  EventModelType,\r\n  ForecastFormService,\r\n  MaintenanceForecastingUpcomingEvent\r\n} from '../forecast-form.service';\r\n\r\ninterface EventRow {\r\n  eventDescription: string;\r\n  eventName: string;\r\n  eventType: string;\r\n  formattedType: string;\r\n  plannedDate: string;\r\n  workPackage: string;\r\n  _obj: EventModel<MaintenanceForecastingUpcomingEvent>;\r\n  _type: EventModelType;\r\n  _workPackages: BidmProjectDTO[];\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-forecast-form-event-group',\r\n  templateUrl: './event-group-dialog.component.html'\r\n})\r\nexport class EventGroupForecastFormDialogComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public eventCategoryList: LabelValue<string>[];\r\n\r\n  @Input()\r\n  public eventModel: EventGroupModel;\r\n\r\n  @Input()\r\n  public taskTypeList: LabelValue<string>[];\r\n\r\n  @Input()\r\n  public eventList: GenericEventModel[];\r\n\r\n  public eventTable: EventRow[];\r\n  public eventTableColList: TableColumn[];\r\n  public eventTableSelection: EventRow[];\r\n  public workPackageItemList: MenuItem[];\r\n\r\n  public selectedEventModel: EventModel<MaintenanceForecastingUpcomingEvent> | undefined;\r\n\r\n  public showAddToWorkPackage: boolean;\r\n  public showDefectDialog: boolean;\r\n  public showPlannedDateDialog: boolean;\r\n  public showRemoveFromWorkPackage: boolean;\r\n  public showScheduledEventDialog: boolean;\r\n  public showUnscheduledEventDialog: boolean;\r\n\r\n  private workPackagePrefix: string;\r\n\r\n  public constructor(\r\n    public forecastFormService: ForecastFormService,\r\n    public sessionService: SessionService,\r\n    private readonly dateService: DateService,\r\n    private readonly messageService: MessageService,\r\n    private readonly translateService: TranslateService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'EventGroupForecastFormDialogComponent');\r\n\r\n    this.init();\r\n\r\n    this.setEventTableColList();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.setEventTable();\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public editEvent(): void {\r\n    if (this.forecastFormService.isDefectSchedulerEventType(this.eventTableSelection[0]._type)) {\r\n      this.showDefectDialog = true;\r\n    } else if (this.forecastFormService.isScheduledEventSchedulerEventType(this.eventTableSelection[0]._type)) {\r\n      this.showScheduledEventDialog = true;\r\n    } else if (this.forecastFormService.isUnscheduledEventSchedulerEventType(this.eventTableSelection[0]._type)) {\r\n      this.showUnscheduledEventDialog = true;\r\n    }\r\n\r\n    this.selectedEventModel = this.eventTableSelection[0]._obj;\r\n  }\r\n\r\n  public onSelectAllRows(event: { checked: boolean }): void {\r\n    if (event.checked) {\r\n      this.onSelectRow();\r\n    } else {\r\n      this.onUnselectRow();\r\n    }\r\n  }\r\n\r\n  public onSelectedPlannedDate(date: Date): void {\r\n    if (this.forecastFormService.isValidPlannedDateForEventGroup(this.eventModel, date)) {\r\n      this.forecastFormService.updateEventGroupPlannedDate({\r\n        eventGroup: this.eventModel,\r\n        events: this.eventTableSelection.map((event) => event._obj),\r\n        plannedDate: date\r\n      });\r\n    } else {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('warningOnChosenDatePosteriorToSomeNotToExceedDate'));\r\n    }\r\n  }\r\n\r\n  public onSelectRow(): void {\r\n    this.calculateAddToWorkPackageVisibility();\r\n    this.calculateRemoveFromWorkPackageVisibility();\r\n\r\n    if (this.showAddToWorkPackage) {\r\n      this.workPackageItemList = this.eventTableSelection\r\n        .map((selection) => selection._workPackages)\r\n        .reduce((acc, val) => acc.concat(val), [])\r\n        .filter((v, i, a) => a.indexOf(v) === i)\r\n        .sort(this.forecastFormService.sortWorkPackages)\r\n        .map((workPackage) => {\r\n          return {\r\n            label: `${this.workPackagePrefix} ${workPackage.projectNumber}`,\r\n            command: () => {\r\n              this.addSelectionToWorkPackage(workPackage);\r\n            }\r\n          };\r\n        });\r\n    }\r\n  }\r\n\r\n  public onUnselectRow(): void {\r\n    this.calculateAddToWorkPackageVisibility();\r\n    this.calculateRemoveFromWorkPackageVisibility();\r\n  }\r\n\r\n  public openEvent(): void {\r\n    this.forecastFormService.openEvent(this.eventTableSelection[0]._obj);\r\n    this.closeDialog();\r\n  }\r\n\r\n  public removeSelectionFromWorkPackage(): void {\r\n    const eventModel = this.eventTableSelection[0]._obj as\r\n      | EventModel<MaintenanceForecastingDefect>\r\n      | EventModel<MaintenanceForecastingScheduledEvent>\r\n      | EventModel<MaintenanceForecastingUnscheduledEvent>;\r\n\r\n    this.forecastFormService.removeEventsFromWorkPackage({\r\n      events: this.eventTableSelection.map((selection) => selection._obj),\r\n      workPackage: eventModel._obj.affectedWorkPackage as BidmProjectDTO\r\n    });\r\n\r\n    this.closeDialog();\r\n  }\r\n\r\n  public updatePlannedDate(): void {\r\n    this.showPlannedDateDialog = true;\r\n  }\r\n\r\n  private addSelectionToWorkPackage(workPackage: BidmProjectDTO): void {\r\n    this.forecastFormService.addEventsToWorkPackage({\r\n      events: this.eventTableSelection.map((selection) => selection._obj),\r\n      workPackage\r\n    });\r\n\r\n    this.closeDialog();\r\n  }\r\n\r\n  private buildEventRowFromDefect(eventModel: EventModel<MaintenanceForecastingDefect>): EventRow {\r\n    const event = eventModel._obj.deferredDefectEvent.bidoNotificationData as BidoNotificationDTO;\r\n\r\n    const eventName = `${event.bidoNotificationTypeDTO.typeDescription} (${event.notificationCode})`;\r\n    const eventType = this.forecastFormService.getEventCategoryLabel(event, this.eventCategoryList);\r\n\r\n    return {\r\n      eventName,\r\n      eventType,\r\n      eventDescription: '',\r\n      formattedType: this.translateService.instant(this.forecastFormService.getUpcomingEventKey(eventModel)) as string,\r\n      plannedDate: this.dateService.dateToString(eventModel._obj.deferredDefectEvent.plannedDate),\r\n      workPackage: this.formatWorkPackage(eventModel._obj.affectedWorkPackage),\r\n      _obj: eventModel,\r\n      _type: EventModelType.DEFECT,\r\n      _workPackages: this.getAvailableWorkPackagesForEvent(eventModel)\r\n    };\r\n  }\r\n\r\n  private buildEventRowFromDefectList(): EventRow[] {\r\n    return ListUtils.orEmpty(this.eventModel.defectList).map((defect) => this.buildEventRowFromDefect(defect));\r\n  }\r\n\r\n  private buildEventRowFromScheduledEvent(\r\n    eventModel: EventModel<MaintenanceForecastingScheduledEvent>,\r\n    eventType: EventModelType\r\n  ): EventRow {\r\n    return {\r\n      eventDescription: StringUtils.orEmpty(eventModel._obj.bireTask.taskDesignation),\r\n      eventName: `${eventModel._obj.bireTask.taskCode}-${eventModel._obj.bireTask.taskVersion}`,\r\n      eventType: this.forecastFormService.getTaskTypeLabel(eventModel._obj.bireTask, this.taskTypeList),\r\n      formattedType: this.translateService.instant(this.forecastFormService.getUpcomingEventKey(eventModel)) as string,\r\n      plannedDate: this.dateService.dateToString(eventModel._obj.bsdeScheduledEvent.plannedDate),\r\n      workPackage: this.formatWorkPackage(eventModel._obj.affectedWorkPackage),\r\n      _obj: eventModel,\r\n      _type: eventType,\r\n      _workPackages: this.getAvailableWorkPackagesForEvent(eventModel)\r\n    };\r\n  }\r\n\r\n  private buildEventRowFromLlpAlertList(): EventRow[] {\r\n    return ListUtils.orEmpty(this.eventModel.llpAlertList).map((event) =>\r\n      this.buildEventRowFromScheduledEvent(event, EventModelType.LLP_ALERT)\r\n    );\r\n  }\r\n\r\n  private buildEventRowFromScheduledEventList(): EventRow[] {\r\n    return ListUtils.orEmpty(this.eventModel.scheduledEventList).map((event) =>\r\n      this.buildEventRowFromScheduledEvent(event, EventModelType.SCHEDULED_EVENT)\r\n    );\r\n  }\r\n\r\n  private buildEventRowFromUnscheduledEvent(\r\n    eventModel: EventModel<MaintenanceForecastingUnscheduledEvent>,\r\n    eventType: EventModelType\r\n  ): EventRow {\r\n    return {\r\n      eventDescription: StringUtils.orEmpty(eventModel._obj.bireTask.taskDesignation),\r\n      eventName: `${eventModel._obj.bireTask.taskCode}-${eventModel._obj.bireTask.taskVersion}`,\r\n      eventType: this.forecastFormService.getTaskTypeLabel(eventModel._obj.bireTask, this.taskTypeList),\r\n      formattedType: this.translateService.instant(this.forecastFormService.getUpcomingEventKey(eventModel)) as string,\r\n      plannedDate: this.dateService.dateToString(eventModel._obj.bsdeEvent.plannedDate),\r\n      workPackage: this.formatWorkPackage(eventModel._obj.affectedWorkPackage),\r\n      _obj: eventModel,\r\n      _type: eventType,\r\n      _workPackages: this.getAvailableWorkPackagesForEvent(eventModel)\r\n    };\r\n  }\r\n\r\n  private calculateAddToWorkPackageVisibility(): void {\r\n    this.showAddToWorkPackage =\r\n      this.eventTableSelection.length > 0 &&\r\n      this.eventTableSelection.every((selection) => {\r\n        const eventModel = selection._obj as\r\n          | EventModel<MaintenanceForecastingDefect>\r\n          | EventModel<MaintenanceForecastingScheduledEvent>\r\n          | EventModel<MaintenanceForecastingUnscheduledEvent>;\r\n\r\n        return (\r\n          !ObjectUtils.isDefined(eventModel._obj.affectedWorkPackage) && !ListUtils.isEmpty(selection._workPackages)\r\n        );\r\n      });\r\n  }\r\n\r\n  private calculateRemoveFromWorkPackageVisibility(): void {\r\n    this.showRemoveFromWorkPackage =\r\n      this.eventTableSelection.length > 0 &&\r\n      this.eventTableSelection.every((selection) => {\r\n        const eventModel = selection._obj as\r\n          | EventModel<MaintenanceForecastingDefect>\r\n          | EventModel<MaintenanceForecastingScheduledEvent>\r\n          | EventModel<MaintenanceForecastingUnscheduledEvent>;\r\n\r\n        return ObjectUtils.isDefined(eventModel._obj.affectedWorkPackage);\r\n      });\r\n  }\r\n\r\n  private getAvailableWorkPackagesForEvent(selectedEvent: GenericEventModel): BidmProjectDTO[] {\r\n    return this.eventList\r\n      .filter((event) => event.resourceId === selectedEvent.resourceId)\r\n      .filter((event) => this.forecastFormService.isWorkPackageSchedulerEventType(event.eventType))\r\n      .map((event) => (event as EventModel<MaintenanceForecastingWorkPackage>)._obj.bidmProject);\r\n  }\r\n\r\n  private buildEventRowFromSnChangeList(): EventRow[] {\r\n    return ListUtils.orEmpty(this.eventModel.snChangeList).map((event) =>\r\n      this.buildEventRowFromUnscheduledEvent(event, EventModelType.SN_CHANGE)\r\n    );\r\n  }\r\n\r\n  private buildEventRowFromUnscheduledEventList(): EventRow[] {\r\n    return ListUtils.orEmpty(this.eventModel.unscheduledEventList).map((event) =>\r\n      this.buildEventRowFromUnscheduledEvent(event, EventModelType.UNSCHEDULED_EVENT)\r\n    );\r\n  }\r\n\r\n  private formatWorkPackage(workPackage?: BidmProjectDTO): string {\r\n    const workPackagePrefix = this.translateService.instant('workPackageNumberShort');\r\n\r\n    return ObjectUtils.isDefined(workPackage)\r\n      ? `${workPackagePrefix} ${(workPackage as BidmProjectDTO).projectNumber}`\r\n      : '';\r\n  }\r\n\r\n  private init(): void {\r\n    this.eventTable = [];\r\n    this.eventTableSelection = [];\r\n    this.workPackagePrefix = this.translateService.instant('workPackageNumberShort') as string;\r\n\r\n    this.selectedEventModel = undefined;\r\n\r\n    this.showAddToWorkPackage = false;\r\n    this.showDefectDialog = false;\r\n    this.showPlannedDateDialog = false;\r\n    this.showRemoveFromWorkPackage = false;\r\n    this.showScheduledEventDialog = false;\r\n    this.showUnscheduledEventDialog = false;\r\n  }\r\n\r\n  private setEventTable(): void {\r\n    this.eventTable = [\r\n      ...this.buildEventRowFromDefectList(),\r\n      ...this.buildEventRowFromLlpAlertList(),\r\n      ...this.buildEventRowFromScheduledEventList(),\r\n      ...this.buildEventRowFromSnChangeList(),\r\n      ...this.buildEventRowFromUnscheduledEventList()\r\n    ];\r\n  }\r\n\r\n  private setEventTableColList(): void {\r\n    this.eventTableColList = [\r\n      { field: 'eventName', alignment: 'left', width: '15%' },\r\n      { field: 'eventDescription', alignment: 'left', width: '55%' },\r\n      { field: 'eventType', alignment: 'left', width: '10%' },\r\n      { field: 'plannedDate', alignment: 'left', width: '10%' },\r\n      { field: 'workPackage', alignment: 'left', width: '10%' }\r\n    ];\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"scheduler-filters-toggler\\\">\\r\\n  <i\\r\\n    class=\\\"fa fa-fw fa-filter aw-icon aw-icon-with-border aw-icon-with-overlay\\\"\\r\\n    aria-hidden=\\\"true\\\"\\r\\n    pTooltip=\\\"{{ overlayVisible ? 'hideFilters' : ('showFilters' | translate) }}\\\"\\r\\n    tooltipPosition=\\\"top\\\"\\r\\n    [ngClass]=\\\"{ active: overlayVisible }\\\"\\r\\n    (click)=\\\"opFilters.toggle($event)\\\"\\r\\n  ></i>\\r\\n</div>\\r\\n\\r\\n<p-overlayPanel #opFilters styleClass=\\\"aw-overlay\\\" (onShow)=\\\"showOverlay()\\\" (onHide)=\\\"hideOverlay()\\\" appendTo=\\\"body\\\">\\r\\n  <div class=\\\"section\\\">\\r\\n    <h4 class=\\\"section-title\\\">\\r\\n      {{ \\\"upcomingEvents\\\" | translate }}\\r\\n    </h4>\\r\\n\\r\\n    <div class=\\\"section-content\\\">\\r\\n      <div class=\\\"form-group form-group-no-margin\\\">\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-selectButton\\r\\n            [(ngModel)]=\\\"forecastFormService.forecastFiltering.upcomingEventTypeList\\\"\\r\\n            [options]=\\\"upcomingEventTypeList\\\"\\r\\n            multiple=\\\"multiple\\\"\\r\\n            (onChange)=\\\"filterForecast()\\\"\\r\\n          ></p-selectButton>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"section\\\">\\r\\n    <h4 class=\\\"section-title\\\">\\r\\n      {{ getComponentName() + \\\".upcomingEventAssignment\\\" | translate }}\\r\\n    </h4>\\r\\n\\r\\n    <div class=\\\"section-content\\\">\\r\\n      <div class=\\\"form-group form-group-no-margin\\\">\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-selectButton\\r\\n            [(ngModel)]=\\\"forecastFormService.forecastFiltering.upcomingEventStatusList\\\"\\r\\n            [options]=\\\"upcomingEventStatusList\\\"\\r\\n            multiple=\\\"multiple\\\"\\r\\n            (onChange)=\\\"filterForecast()\\\"\\r\\n          ></p-selectButton>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"section\\\">\\r\\n    <h4 class=\\\"section-title\\\">\\r\\n      {{ \\\"workPackages\\\" | translate }}\\r\\n    </h4>\\r\\n\\r\\n    <div class=\\\"section-content\\\">\\r\\n      <div class=\\\"form-group form-group-no-margin\\\">\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-selectButton\\r\\n            [(ngModel)]=\\\"forecastFormService.forecastFiltering.workPackageStatusList\\\"\\r\\n            [options]=\\\"filteredWorkPackageStatusList\\\"\\r\\n            multiple=\\\"multiple\\\"\\r\\n            (onChange)=\\\"filterForecast()\\\"\\r\\n          ></p-selectButton>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</p-overlayPanel>\\r\\n\"","import { Component, Input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { AWPropertiesConstants } from '../../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { BidoEquipmentDTO } from '../../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { GenericComponent } from '../../../../../shared/types/generic-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { BidoEquipmentUtils } from '../../../../../shared/utils/bido-equipment-utils';\r\nimport { ForecastFormService, UpcomingEventStatus } from '../forecast-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-forecast-form-filter-list',\r\n  templateUrl: './forecast-filter-list.component.html'\r\n})\r\nexport class FilterListForecastFormComponent extends GenericComponent {\r\n  @Input('topAssetList')\r\n  public set topBidoEquipmentList(value: BidoEquipmentDTO[]) {\r\n    if (value) {\r\n      this.topAssetList = value.map((elt) => {\r\n        return {\r\n          label: BidoEquipmentUtils.toString(elt),\r\n          value: elt\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  public upcomingEventTypeList: LabelValue<string>[];\r\n\r\n  @Input()\r\n  public set workPackageStatusList(value: LabelValue<string>[]) {\r\n    if (value) {\r\n      this.filteredWorkPackageStatusList = value.filter(\r\n        (elt) => elt.value !== AWPropertiesConstants.AIRM_PROJECT_STATUS_LINE_MAINTENANCE\r\n      );\r\n    }\r\n  }\r\n\r\n  public filteredWorkPackageStatusList: LabelValue<string>[];\r\n  public overlayVisible: boolean;\r\n  public topAssetList: LabelValue<BidoEquipmentDTO>[];\r\n  public upcomingEventStatusList: LabelValue<UpcomingEventStatus>[];\r\n\r\n  public constructor(\r\n    public forecastFormService: ForecastFormService,\r\n    private readonly translateService: TranslateService\r\n  ) {\r\n    super(ComponentOpenMode.Write);\r\n\r\n    this.init();\r\n    this.setUpcomingEventStatusList();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'FilterListForecastFormComponent';\r\n  }\r\n\r\n  public filterForecast(): void {\r\n    this.forecastFormService.filterForecast();\r\n  }\r\n\r\n  public hideOverlay(): void {\r\n    this.overlayVisible = false;\r\n  }\r\n\r\n  public showOverlay(): void {\r\n    this.overlayVisible = true;\r\n  }\r\n\r\n  private init(): void {\r\n    this.filteredWorkPackageStatusList = [];\r\n    this.overlayVisible = false;\r\n    this.topAssetList = [];\r\n  }\r\n\r\n  private setUpcomingEventStatusList(): void {\r\n    const upcomingEventAssignmentInPastKey = this.getTranslateKey('upcomingEventAssignmentInPast');\r\n    const upcomingEventAssignmentNokKey = this.getTranslateKey('upcomingEventAssignmentNok');\r\n    const upcomingEventAssignmentOkKey = this.getTranslateKey('upcomingEventAssignmentOk');\r\n    const upcomingEventAssignmentWarnKey = this.getTranslateKey('upcomingEventAssignmentWarn');\r\n    this.translateService\r\n      .get([\r\n        upcomingEventAssignmentInPastKey,\r\n        upcomingEventAssignmentNokKey,\r\n        upcomingEventAssignmentOkKey,\r\n        upcomingEventAssignmentWarnKey\r\n      ])\r\n      .subscribe({\r\n        next: (results: object) => {\r\n          this.upcomingEventStatusList = [\r\n            {\r\n              label: results[upcomingEventAssignmentOkKey] as string,\r\n              value: UpcomingEventStatus.OK\r\n            },\r\n            {\r\n              label: results[upcomingEventAssignmentWarnKey] as string,\r\n              value: UpcomingEventStatus.WARN\r\n            },\r\n            {\r\n              label: results[upcomingEventAssignmentNokKey] as string,\r\n              value: UpcomingEventStatus.NOK\r\n            },\r\n            {\r\n              label: results[upcomingEventAssignmentInPastKey] as string,\r\n              value: UpcomingEventStatus.IN_PAST\r\n            }\r\n          ];\r\n        }\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n          - {{ componentContext }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button *ngIf=\\\"!isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"manageForecastProject()\\\">\\r\\n      {{ componentData.componentId + \\\".editProjectHeader\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isCreateOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"launchOptimizer()\\\">\\r\\n      {{ componentData.componentId + \\\".launchOptimizer\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item [matMenuTriggerFor]=\\\"navigations\\\">{{ \\\"goTo\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"displayAssetRequiredAvailabilitiesDialog()\\\">\\r\\n        {{ getComponentName() + \\\".configureAssetRequiredAvailabilities\\\" | translate }}\\r\\n      </button>\\r\\n      <button mat-menu-item (click)=\\\"displayResourcesdAvailabilitiesDialog()\\\">\\r\\n        {{ getComponentName() + \\\".configureResourcesAvailabilities\\\" | translate }}\\r\\n      </button>\\r\\n      <button mat-menu-item (click)=\\\"reloadForecast(forecastProjectId)\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n    <mat-menu #navigations=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"openMaterialAvailabilityForAllWorkPackage()\\\">\\r\\n        {{ \\\"materialAvailability\\\" | translate }}\\r\\n      </button>\\r\\n      <button mat-menu-item (click)=\\\"openStaffPlanning()\\\">\\r\\n        {{ \\\"staffPlanning\\\" | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"grid-row\\\" *ngIf=\\\"!isCreateOpenMode\\\">\\r\\n      <div class=\\\"grid-cell--6 main-block-read-only\\\">\\r\\n        <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n          <div class=\\\"grid-cell-header\\\">\\r\\n            <div class=\\\"grid-cell-title-container\\\">\\r\\n              <h3 class=\\\"grid-cell-title\\\">\\r\\n                {{ \\\"page.mainData\\\" | translate }}\\r\\n              </h3>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-cell-content\\\">\\r\\n            <div class=\\\"column\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group form-group-inline form-group-no-margin form-group-fleet-data\\\">\\r\\n                  <label class=\\\"form-label\\\">{{ \\\"fleetData\\\" | translate }}</label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <div class=\\\"form-control-generic\\\">\\r\\n                      <ng-container *ngIf=\\\"forecastProject.projectFleetCode\\\">\\r\\n                        {{ forecastProject.projectFleetCode }}\\r\\n                        <ng-container *ngIf=\\\"forecastProject.projectFleetName\\\">\\r\\n                          ({{ forecastProject.projectFleetName }})\\r\\n                        </ng-container>\\r\\n                      </ng-container>\\r\\n\\r\\n                      <ng-container *ngIf=\\\"forecastProjectAsset.equipmentCode\\\">\\r\\n                        {{ forecastProjectAssetDesignation }}\\r\\n                      </ng-container>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group form-group-inline form-group-no-margin form-group-mro-center\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"mroCenter\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      [options]=\\\"repairCenterList\\\"\\r\\n                      [(ngModel)]=\\\"selectedRepairCenter\\\"\\r\\n                      [disabled]=\\\"true\\\"\\r\\n                      placeholder=\\\"&nbsp;\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group form-group-inline form-group-no-margin form-group-start-date\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"startDate\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-calendar\\r\\n                      showButtonBar=\\\"true\\\"\\r\\n                      [monthNavigator]=\\\"true\\\"\\r\\n                      [yearNavigator]=\\\"true\\\"\\r\\n                      [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                      class=\\\"aw-calendar\\\"\\r\\n                      [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                      [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                      [showTime]=\\\"true\\\"\\r\\n                      [disabled]=\\\"true\\\"\\r\\n                      [(ngModel)]=\\\"forecastProject.projectStartDate\\\"\\r\\n                    ></p-calendar>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group form-group-inline form-group-no-margin form-group-end-date\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"endDate\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-calendar\\r\\n                      showButtonBar=\\\"true\\\"\\r\\n                      [monthNavigator]=\\\"true\\\"\\r\\n                      [yearNavigator]=\\\"true\\\"\\r\\n                      [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                      class=\\\"aw-calendar\\\"\\r\\n                      [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                      [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                      [showTime]=\\\"true\\\"\\r\\n                      [disabled]=\\\"true\\\"\\r\\n                      [(ngModel)]=\\\"forecastProject.projectEndDate\\\"\\r\\n                    ></p-calendar>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell--3\\\">\\r\\n        <div class=\\\"grid-cell grid-cell--container upcoming-events-block\\\">\\r\\n          <div class=\\\"grid-cell-header\\\">\\r\\n            <div class=\\\"grid-cell-title-container\\\">\\r\\n              <h3 class=\\\"grid-cell-title\\\">\\r\\n                {{ getComponentName() + \\\".upcomingEventAssignment\\\" | translate }}\\r\\n              </h3>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-cell-content\\\">\\r\\n            <div class=\\\"column\\\">\\r\\n              <div class=\\\"form-group form-group-inline form-group-no-margin\\\">\\r\\n                <div class=\\\"upcoming-event ok\\\"></div>\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".upcomingEventOk\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <div\\r\\n                    class=\\\"form-control-generic\\\"\\r\\n                    [ngClass]=\\\"{\\r\\n                      ok:\\r\\n                        upcomingEventsWithOkStatus > 0 &&\\r\\n                        upcomingEventsWithWarnStatus == 0 &&\\r\\n                        upcomingEventsWithAlertStatus == 0 &&\\r\\n                        upcomingEventsWithNokStatus == 0 &&\\r\\n                        upcomingEventsInPastWithWarnStatus == 0 &&\\r\\n                        !schedulerLoading\\r\\n                    }\\\"\\r\\n                  >\\r\\n                    {{ upcomingEventsWithOkStatus }}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group form-group-inline form-group-no-margin\\\">\\r\\n                <div class=\\\"upcoming-event warn\\\"></div>\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".upcomingEventWarn\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <div\\r\\n                    class=\\\"form-control-generic\\\"\\r\\n                    [ngClass]=\\\"{\\r\\n                      warn:\\r\\n                        upcomingEventsWithWarnStatus > 0 &&\\r\\n                        upcomingEventsWithAlertStatus == 0 &&\\r\\n                        upcomingEventsWithNokStatus == 0 &&\\r\\n                        upcomingEventsInPastWithWarnStatus == 0 &&\\r\\n                        !schedulerLoading\\r\\n                    }\\\"\\r\\n                  >\\r\\n                    {{ upcomingEventsWithWarnStatus }}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <!-- <div class=\\\"form-group form-group-inline form-group-no-margin\\\">\\r\\n                <div class=\\\"upcoming-event alert\\\"></div>\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".upcomingEventAlert\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <div\\r\\n                    class=\\\"form-control-generic\\\"\\r\\n                    [ngClass]=\\\"{\\r\\n                      alert:\\r\\n                        upcomingEventsWithAlertStatus > 0 &&\\r\\n                        upcomingEventsWithNokStatus == 0 &&\\r\\n                        upcomingEventsInPastWithWarnStatus == 0 &&\\r\\n                        !schedulerLoading\\r\\n                    }\\\"\\r\\n                  >\\r\\n                    {{ upcomingEventsWithAlertStatus }}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div> -->\\r\\n\\r\\n              <div class=\\\"form-group form-group-inline form-group-no-margin\\\">\\r\\n                <div class=\\\"upcoming-event nok\\\"></div>\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".upcomingEventNok\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <div\\r\\n                    class=\\\"form-control-generic\\\"\\r\\n                    [ngClass]=\\\"{\\r\\n                      nok:\\r\\n                        upcomingEventsWithNokStatus > 0 && upcomingEventsInPastWithWarnStatus == 0 && !schedulerLoading\\r\\n                    }\\\"\\r\\n                  >\\r\\n                    {{ upcomingEventsWithNokStatus }}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group form-group-inline form-group-no-margin\\\">\\r\\n                <div class=\\\"upcoming-event in-past\\\"></div>\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".upcomingEventInPast\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <div\\r\\n                    class=\\\"form-control-generic\\\"\\r\\n                    [ngClass]=\\\"{\\r\\n                      'in-past': upcomingEventsInPastWithWarnStatus > 0 && !schedulerLoading\\r\\n                    }\\\"\\r\\n                  >\\r\\n                    {{ upcomingEventsInPastWithWarnStatus }}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell--3\\\">\\r\\n        <aw-material-availability-indicators [workPackages]=\\\"workPackageList\\\">\\r\\n          >\\r\\n        </aw-material-availability-indicators>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"grid-row\\\" [ngClass]=\\\"{ 'display--none': isCreateOpenMode }\\\">\\r\\n      <div class=\\\"grid-cell--12\\\">\\r\\n        <div class=\\\"grid-cell grid-cell--container scheduler-block\\\">\\r\\n          <div class=\\\"grid-cell-header\\\">\\r\\n            <div class=\\\"grid-cell-title-container loading-indicator\\\">\\r\\n              <h3 class=\\\"grid-cell-title\\\">\\r\\n                {{ \\\"planning\\\" | translate }}\\r\\n                <div *ngIf=\\\"schedulerLoading\\\" class=\\\"lds-hourglass\\\"></div>\\r\\n              </h3>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-cell-content position--relative\\\">\\r\\n            <div class=\\\"scheduler-header\\\" [ngClass]=\\\"{ show: !schedulerLoading }\\\">\\r\\n              <div class=\\\"scheduler-filters\\\">\\r\\n                <aw-forecast-form-filter-list\\r\\n                  [topAssetList]=\\\"topAssetList\\\"\\r\\n                  [upcomingEventTypeList]=\\\"upcomingEventTypeList\\\"\\r\\n                  [workPackageStatusList]=\\\"workPackageStatusList\\\"\\r\\n                ></aw-forecast-form-filter-list>\\r\\n                <p-multiSelect\\r\\n                  [options]=\\\"assetList\\\"\\r\\n                  [(ngModel)]=\\\"assetListSelected\\\"\\r\\n                  optionLabel=\\\"_displayableField\\\"\\r\\n                  (onChange)=\\\"onFilterAsset()\\\"\\r\\n                  [defaultLabel]=\\\"filterAssetLabel\\\"\\r\\n                  [selectedItemsLabel]=\\\"filterAssetLabel\\\"\\r\\n                  maxSelectedLabels=\\\"0\\\"\\r\\n                  [panelStyle]=\\\"{ minWidth: '12rem' }\\\"\\r\\n                ></p-multiSelect>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"navigation\\\">\\r\\n                <button mat-raised-button (click)=\\\"openAirworthinessStatus()\\\" *ngIf=\\\"selectedAssets.length > 0\\\">\\r\\n                  {{ \\\"airworthinessStatus\\\" | translate }}\\r\\n                </button>\\r\\n\\r\\n                <button mat-raised-button (click)=\\\"openMaintenancePlanning()\\\" *ngIf=\\\"selectedAssets.length === 1\\\">\\r\\n                  {{ \\\"maintenancePlanning\\\" | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"actions\\\">\\r\\n                <button mat-raised-button (click)=\\\"addUnscheduledEvent()\\\" *ngIf=\\\"selectedAssets.length === 1\\\">\\r\\n                  {{ getComponentName() + \\\".addUnscheduledEvent\\\" | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"today-btn\\\">\\r\\n                <button mat-raised-button (click)=\\\"showToday()\\\">\\r\\n                  {{ \\\"today\\\" | translate }}\\r\\n                </button>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"time-resolution\\\">\\r\\n                <p-slider\\r\\n                  [max]=\\\"component.TIME_RESOLUTION_MAX_ZOOM\\\"\\r\\n                  [min]=\\\"component.TIME_RESOLUTION_MIN_ZOOM\\\"\\r\\n                  [(ngModel)]=\\\"schedulerZoomLevel\\\"\\r\\n                  (onChange)=\\\"onChangeTimeResolution($event)\\\"\\r\\n                ></p-slider>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"scheduler-legend\\\">\\r\\n                <i\\r\\n                  class=\\\"fa fa-fw fa-info aw-icon aw-icon-with-border aw-icon-with-overlay\\\"\\r\\n                  aria-hidden=\\\"true\\\"\\r\\n                  pTooltip=\\\"{{ 'legend' | translate }}\\\"\\r\\n                  tooltipPosition=\\\"top\\\"\\r\\n                  (click)=\\\"openForecastLegendDialog()\\\"\\r\\n                ></i>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"scheduler-wrap\\\" [ngClass]=\\\"{ show: !schedulerLoading }\\\">\\r\\n              <bry-scheduler\\r\\n                #scheduler\\r\\n                [columns]=\\\"columnList\\\"\\r\\n                [emptyText]=\\\"schedulerConfig['emptyText']\\\"\\r\\n                [eventRenderer]=\\\"schedulerConfig['eventRenderer']\\\"\\r\\n                [events]=\\\"filteredEventList\\\"\\r\\n                [resources]=\\\"filteredResourceList\\\"\\r\\n                [cellEditFeature]=\\\"schedulerConfig['cellEditFeature']\\\"\\r\\n                [eventContextMenuFeature]=\\\"schedulerConfig['eventContextMenuFeature']\\\"\\r\\n                [eventDragFeature]=\\\"schedulerConfig['eventDragFeature']\\\"\\r\\n                [eventTooltipFeature]=\\\"schedulerConfig['eventTooltipFeature']\\\"\\r\\n                [rowHeight]=\\\"schedulerConfig['rowHeight']\\\"\\r\\n                [scheduleContextMenuFeature]=\\\"schedulerConfig['scheduleContextMenuFeature']\\\"\\r\\n                [scheduleTooltipFeature]=\\\"schedulerConfig['scheduleTooltipFeature']\\\"\\r\\n                [timeRangesFeature]=\\\"schedulerConfig['timeRangesFeature']\\\"\\r\\n                [treeFeature]=\\\"schedulerConfig['treeFeature']\\\"\\r\\n                [zoomKeepsOriginalTimespan]=\\\"schedulerConfig['zoomKeepsOriginalTimespan']\\\"\\r\\n                [zoomOnMouseWheel]=\\\"schedulerConfig['zoomOnMouseWheel']\\\"\\r\\n                [zoomOnTimeAxisDoubleClick]=\\\"schedulerConfig['zoomOnTimeAxisDoubleClick']\\\"\\r\\n              ></bry-scheduler>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-forecast-form-assets-required-availabilities\\r\\n    *ngIf=\\\"showAssetRequiredAvailabilitiesDialog\\\"\\r\\n    [(display)]=\\\"showAssetRequiredAvailabilitiesDialog\\\"\\r\\n    [projectId]=\\\"forecastProject.projectId\\\"\\r\\n    [topAssetList]=\\\"topAssetList\\\"\\r\\n  >\\r\\n  </aw-dialog-forecast-form-assets-required-availabilities>\\r\\n\\r\\n  <aw-dialog-forecast-form-resources-availabilities\\r\\n    *ngIf=\\\"showResourcesdAvailabilitiesDialog\\\"\\r\\n    [(display)]=\\\"showResourcesdAvailabilitiesDialog\\\"\\r\\n    [projectId]=\\\"forecastProject.projectId\\\"\\r\\n  >\\r\\n  </aw-dialog-forecast-form-resources-availabilities>\\r\\n\\r\\n  <aw-dialog-forecast-form-defect\\r\\n    *ngIf=\\\"showDefectDialog\\\"\\r\\n    [(display)]=\\\"showDefectDialog\\\"\\r\\n    [eventModel]=\\\"selectedEventModel\\\"\\r\\n  ></aw-dialog-forecast-form-defect>\\r\\n\\r\\n  <aw-dialog-forecast-form-scheduled-event\\r\\n    *ngIf=\\\"showScheduledEventDialog\\\"\\r\\n    [(display)]=\\\"showScheduledEventDialog\\\"\\r\\n    [eventModel]=\\\"selectedEventModel\\\"\\r\\n  ></aw-dialog-forecast-form-scheduled-event>\\r\\n\\r\\n  <aw-dialog-forecast-form-event-group\\r\\n    *ngIf=\\\"showEventGroupDialog && selectedEventModel\\\"\\r\\n    [(display)]=\\\"showEventGroupDialog\\\"\\r\\n    [eventCategoryList]=\\\"eventCategoryList\\\"\\r\\n    [eventModel]=\\\"selectedEventModel\\\"\\r\\n    [eventList]=\\\"eventList\\\"\\r\\n    [taskTypeList]=\\\"taskTypeList\\\"\\r\\n  ></aw-dialog-forecast-form-event-group>\\r\\n\\r\\n  <aw-dialog-forecast-form-legend\\r\\n    *ngIf=\\\"showForecastLegendDialog\\\"\\r\\n    [(display)]=\\\"showForecastLegendDialog\\\"\\r\\n  ></aw-dialog-forecast-form-legend>\\r\\n\\r\\n  <aw-dialog-forecast-form-unscheduled-event\\r\\n    *ngIf=\\\"showUnscheduledEventDialog\\\"\\r\\n    [(display)]=\\\"showUnscheduledEventDialog\\\"\\r\\n    [asset]=\\\"selectedAsset\\\"\\r\\n    [eventModel]=\\\"selectedEventModel\\\"\\r\\n  ></aw-dialog-forecast-form-unscheduled-event>\\r\\n\\r\\n  <aw-dialog-forecast-form-work-package\\r\\n    *ngIf=\\\"showWorkPackageCreateDialog\\\"\\r\\n    [(display)]=\\\"showWorkPackageCreateDialog\\\"\\r\\n    [endtDate]=\\\"selectedEndDate\\\"\\r\\n    [forecastMroCenter]=\\\"forecastProject.repairCenterCode\\\"\\r\\n    [siteList]=\\\"workPackageSiteList\\\"\\r\\n    [startDate]=\\\"selectedStartDate\\\"\\r\\n    [workPackageAssignedToList]=\\\"workPackageAssignedToList\\\"\\r\\n    [workPackageStatusList]=\\\"workPackageStatusList\\\"\\r\\n    [workPackageTypeList]=\\\"workPackageTypeList\\\"\\r\\n    (onCreated)=\\\"onCreatedWorkPackage($event)\\\"\\r\\n  ></aw-dialog-forecast-form-work-package>\\r\\n\\r\\n  <aw-dialog-forecast-form-work-package\\r\\n    *ngIf=\\\"showWorkPackageUpdateDialog\\\"\\r\\n    [(display)]=\\\"showWorkPackageUpdateDialog\\\"\\r\\n    [endtDate]=\\\"selectedEndDate\\\"\\r\\n    [eventModel]=\\\"selectedEventModel\\\"\\r\\n    [forecastMroCenter]=\\\"forecastProject.repairCenterCode\\\"\\r\\n    [siteList]=\\\"workPackageSiteList\\\"\\r\\n    [startDate]=\\\"selectedStartDate\\\"\\r\\n    [workPackageAssignedToList]=\\\"workPackageAssignedToList\\\"\\r\\n    [workPackageStatusList]=\\\"workPackageStatusList\\\"\\r\\n    [workPackageTypeList]=\\\"workPackageTypeList\\\"\\r\\n    (onUpdated)=\\\"onUpdatedWorkPackage($event)\\\"\\r\\n  ></aw-dialog-forecast-form-work-package>\\r\\n\\r\\n  <aw-dialog-forecast-form-project-header\\r\\n    *ngIf=\\\"showForecastManagementBlock\\\"\\r\\n    [(display)]=\\\"showForecastManagementBlock\\\"\\r\\n    [forecastProject]=\\\"forecastProject\\\"\\r\\n    [forecastProjectAsset]=\\\"forecastProjectAsset\\\"\\r\\n    [selectedRepairCenter]=\\\"selectedRepairCenter\\\"\\r\\n    [selectedWorkCenter]=\\\"selectedWorkCenter\\\"\\r\\n    [repairCenterList]=\\\"repairCenterList\\\"\\r\\n    [occurrenceList]=\\\"occurrenceList\\\"\\r\\n    [selectedCustomer]=\\\"selectedCustomer\\\"\\r\\n    [customerList]=\\\"customerList\\\"\\r\\n    [selectedForecastCategory]=\\\"selectedForecastCategory\\\"\\r\\n    [forecastCategoryList]=\\\"forecastCategoryList\\\"\\r\\n    [forecastProjectSrc]=\\\"forecastProjectSrc\\\"\\r\\n    [forecastProjectId]=\\\"forecastProjectId\\\"\\r\\n    [forecastProjectLlpEventsGeneration]=\\\"forecastProjectLlpEventsGeneration\\\"\\r\\n    [forecastProjectOccurrenceNumber]=\\\"forecastProjectOccurrenceNumber\\\"\\r\\n    (onSave)=\\\"reloadForecast($event, undefined)\\\"\\r\\n  >\\r\\n  </aw-dialog-forecast-form-project-header>\\r\\n</div>\\r\\n\"","module.exports = \":host .form-control-generic.in-past,\\n:host .upcoming-event.in-past {\\n  background-color: #000;\\n  color: #fff !important; }\\n\\n:host .form-control-generic.nok,\\n:host .upcoming-event.nok {\\n  background-color: #ab000d !important;\\n  color: #fff !important; }\\n\\n:host .form-control-generic.ok,\\n:host .upcoming-event.ok {\\n  background-color: #7cb342 !important;\\n  color: #000 !important; }\\n\\n:host .form-control-generic.warn,\\n:host .upcoming-event.warn {\\n  background-color: #fbc02d !important;\\n  color: #000 !important; }\\n\\n:host .form-control-generic.alert,\\n:host .upcoming-event.alert {\\n  background-color: #ea9107 !important;\\n  color: #000 !important; }\\n\\n:host .material-availability-block .grid-cell-content > .column,\\n:host .upcoming-events-block .grid-cell-content > .column {\\n  align-items: center; }\\n\\n:host .material-availability-block .grid-cell-content > .column .form-control-generic,\\n  :host .upcoming-events-block .grid-cell-content > .column .form-control-generic {\\n    flex-direction: row;\\n    justify-content: center;\\n    min-width: 4rem;\\n    padding: 0 8px; }\\n\\n:host .material-availability-block .grid-cell-content > .column .form-control-generic.nok,\\n    :host .upcoming-events-block .grid-cell-content > .column .form-control-generic.nok {\\n      background-color: #f6685e; }\\n\\n:host .material-availability-block .grid-cell-content > .column .form-control-generic.ok,\\n    :host .upcoming-events-block .grid-cell-content > .column .form-control-generic.ok {\\n      background-color: #4caf50; }\\n\\n:host .material-availability-block .grid-cell-content > .column .form-control-generic.warn,\\n    :host .upcoming-events-block .grid-cell-content > .column .form-control-generic.warn {\\n      background-color: #ffc107; }\\n\\n:host .main-block {\\n  display: none; }\\n\\n:host .main-block.show {\\n    display: initial; }\\n\\n:host .main-block .action-list .aw-btn {\\n    margin-left: 8px; }\\n\\n:host .main-block .action-list .aw-btn:first-of-type {\\n      margin-left: 0; }\\n\\n:host .main-block-read-only .grid-cell-content > .column > .row .form-group-fleet-data > label,\\n:host .main-block-read-only .grid-cell-content > .column > .row .form-group-start-date > label {\\n  max-width: 8rem;\\n  min-width: 8rem; }\\n\\n:host .main-block-read-only .grid-cell-content > .column > .row .form-group-fleet-data .form-control,\\n:host .main-block-read-only .grid-cell-content > .column > .row .form-group-start-date .form-control {\\n  max-width: calc(100% - 8rem); }\\n\\n:host .main-block-read-only .grid-cell-content > .column > .row .form-group-end-date > label,\\n:host .main-block-read-only .grid-cell-content > .column > .row .form-group-mro-center > label {\\n  max-width: 8rem;\\n  min-width: 8rem; }\\n\\n:host .main-block-read-only .grid-cell-content > .column > .row .form-group-end-date .form-control,\\n:host .main-block-read-only .grid-cell-content > .column > .row .form-group-mro-center .form-control {\\n  max-width: calc(100% - 5rem); }\\n\\n:host .main-block-read-only .grid-cell-content > .column > .row .form-group {\\n  width: 50%; }\\n\\n:host .main-block-read-only .grid-cell-content > .column > .row .form-group .form-control {\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap; }\\n\\n:host .main-block-read-only .grid-cell-content > .column > .row .form-group .form-control .form-control-generic {\\n      display: inline !important; }\\n\\n:host .material-availability-block .grid-cell-content label {\\n  width: 4rem; }\\n\\n:host .material-availability-block .grid-cell-content .form-group {\\n  align-items: center; }\\n\\n:host .scheduler-block .scheduler-header .actions,\\n:host .scheduler-block .scheduler-header .navigation {\\n  display: flex;\\n  flex-direction: row; }\\n\\n:host .scheduler-block .scheduler-header .actions .aw-btn,\\n  :host .scheduler-block .scheduler-header .navigation .aw-btn {\\n    margin-right: 8px; }\\n\\n:host .scheduler-block .scheduler-header .scheduler-filters {\\n  margin-right: 8px; }\\n\\n:host .scheduler-block .scheduler-header .time-resolution {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: row;\\n  margin: 0 calc(2 * 8px); }\\n\\n:host .scheduler-block .scheduler-header .time-resolution p-slider {\\n    width: 10rem; }\\n\\n:host .scheduler-block .scheduler-header .today-btn {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: row; }\\n\\n:host .scheduler-block .scheduler-wrap {\\n  height: 59vh;\\n  visibility: hidden; }\\n\\n:host .scheduler-block .scheduler-wrap.show {\\n    visibility: visible; }\\n\\n:host .upcoming-events-block .grid-cell-content > .column {\\n  overflow: hidden; }\\n\\n:host .upcoming-events-block .grid-cell-content > .column .form-group.form-group-inline {\\n    width: 100%; }\\n\\n:host .upcoming-events-block .grid-cell-content > .column .form-group.form-group-inline label {\\n      flex-grow: 1; }\\n\\n:host .upcoming-events-block .grid-cell-content > .column .form-group.form-group-inline .upcoming-event {\\n      height: 21.21px;\\n      -webkit-transform: rotate(45deg);\\n              transform: rotate(45deg);\\n      margin-left: 4px;\\n      max-width: 21.21px;\\n      min-width: 21.21px; }\\n\\n::ng-deep .scheduler-wrap .b-sch-dragcreator-proxy {\\n  background-color: #63a4ff !important;\\n  opacity: 0.5 !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DomHelper, EventHelper } from 'bryntum-scheduler';\nimport * as moment from 'moment';\nimport { MenuItem, SelectItem } from 'primeng/api';\nimport { Observable, Subject, forkJoin, of } from 'rxjs';\nimport { concatMap, distinctUntilChanged, takeUntil, tap } from 'rxjs/operators';\n\nimport { EventModel as GenericEventModel } from '../../../../shared/components/scheduler/event-model.interface';\nimport { SchedulerComponent } from '../../../../shared/components/scheduler/scheduler.component';\nimport {\n  SchedulerDragContext,\n  SchedulerDropContext,\n  SchedulerEventRecord,\n  SchedulerService\n} from '../../../../shared/components/scheduler/scheduler.service';\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\nimport { BidoFunctionTypeConstants } from '../../../../shared/constants/bido-function-type-constants';\nimport { BsdeAttributeConstants } from '../../../../shared/constants/bsde-attribute-constants.interface';\nimport { BsdeEventTypeConstants } from '../../../../shared/constants/bsde-event-type-constants';\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\nimport { LangConstants } from '../../../../shared/constants/lang-constants';\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\nimport { LoaderService } from '../../../../shared/services/loader.service';\nimport { MessageService } from '../../../../shared/services/message.service';\nimport { PropertiesService } from '../../../../shared/services/properties.service';\nimport { SerializationService } from '../../../../shared/services/serialization.service';\nimport { SessionService } from '../../../../shared/services/session.service';\nimport { TabService } from '../../../../shared/services/tab.service';\nimport { GetQuantityInStockBySiteOutput } from '../../../../shared/types/api-output-types/bidt-stock-mvt/get-quantity-in-stock-by-site-output.interface';\nimport { GetAllMaintenanceForecastingFlightUsageOutput } from '../../../../shared/types/api-output-types/maintenance-plan/get-all-maintenance-forecasting-flight-usage-output.interface';\nimport { MaintenanceForecastingDefect } from '../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-defect.interface';\nimport { MaintenanceForecastingElement } from '../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-element.interface';\nimport { MaintenanceForecastingScheduledEvent } from '../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-scheduled-event.interface';\nimport { MaintenanceForecastingUnscheduledEvent } from '../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-unscheduled-event.interface';\nimport { MaintenanceForecastingWorkPackage } from '../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-work-package.interface';\nimport { BidmProjectDTOId } from '../../../../shared/types/api-types/bidm-project-dto-id.interface';\nimport { BidmProjectDTO } from '../../../../shared/types/api-types/bidm-project-dto.interface';\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types/bido-customer-dto.interface';\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\nimport { BidoMissionEquipmentDTO } from '../../../../shared/types/api-types/bido-mission-equipment-dto.interface';\nimport { BidoNotificationDTO } from '../../../../shared/types/api-types/bido-notification-dto.interface';\nimport { BsdeEventDTO } from '../../../../shared/types/api-types/bsde-event-dto.interface';\nimport { BsdeProjectAttributeDTO } from '../../../../shared/types/api-types/bsde-project-attribute-dto.interface';\nimport { BsdeProjectDTO } from '../../../../shared/types/api-types/bsde-project-dto.interface';\nimport { BsdeSiteDTO } from '../../../../shared/types/api-types/bsde-site-dto.interface';\nimport { DeferredDefectEventDTO } from '../../../../shared/types/api-types/deferred-defect-event-dto.interface';\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\nimport { BidoEquipmentUtils } from '../../../../shared/utils/bido-equipment-utils';\nimport { BooleanUtils } from '../../../../shared/utils/boolean-utils';\nimport { ListUtils } from '../../../../shared/utils/list-utils';\nimport { NumberUtils } from '../../../../shared/utils/number-utils';\nimport { ObjectUtils } from '../../../../shared/utils/object-utils';\nimport { StringUtils } from '../../../../shared/utils/string-utils';\n\nimport {\n  ContextMenuItem,\n  EventGroupModel,\n  EventModel,\n  EventModelType,\n  ForecastCategory,\n  ForecastFormService,\n  ForecastLoadOption,\n  MaintenanceForecastingUpcomingEvent,\n  MaterialAvailability,\n  ResourceModel,\n  UpcomingEventStatus\n} from './forecast-form.service';\nimport { ForecastFiltering } from './types/forecast-filtering.interface';\n\n@Component({\n  selector: 'aw-forecast-form',\n  styleUrls: ['./forecast-form.component.scss'],\n  templateUrl: './forecast-form.component.html'\n})\nexport class ForecastFormComponent extends FormPageComponent<PageComponentData>\n  implements AfterViewInit, OnDestroy, OnInit {\n  public static readonly TIME_RESOLUTION_MAX_ZOOM: number = 15;\n  public static readonly TIME_RESOLUTION_MIN_ZOOM: number = 0;\n\n  private static readonly COLUMN_ASSET_WIDTH: number = 300;\n  private static readonly COLUMN_FUNCTIONAL_LOCATION_WIDTH: number = 300;\n  private static readonly SCHEDULER_ROW_HEIGHT: number = 40;\n\n  private static readonly ASSET_NAME_CLS = 'asset';\n  private static readonly EVENT_HIGHLIGHT_CLS: string = 'event-focus';\n  private static readonly EVENT_IN_PAST_CLS: string = 'in-past';\n  private static readonly EVENT_NOK_CLS: string = 'nok';\n  private static readonly EVENT_OK_CLS: string = 'ok';\n  private static readonly EVENT_WARN_CLS: string = 'warn';\n  private static readonly EVENT_ALERT_CLS: string = 'alert';\n  private static readonly WORK_PACKAGE_HIGHLIGHT_CLS: string = 'workpackage-focus';\n  private static readonly WORK_PACKAGE_MATERIAL_AVAILABILITY_NOK_CLS: string = 'material-nok';\n  private static readonly WORK_PACKAGE_MATERIAL_AVAILABILITY_WARN_CLS: string = 'material-warn';\n\n  private static readonly EVENT_GROUP_MAX_VALUE_DISPLAYED: number = 99;\n  private static readonly EVENT_GROUP_MAX_VALUE_LABEL: string = '++';\n\n  public readonly bidoFunctionTypeConstants: typeof BidoFunctionTypeConstants;\n  public readonly forecastCategory: typeof ForecastCategory;\n  public readonly component: typeof ForecastFormComponent;\n\n  public columnList: object[];\n  public componentContext: string;\n  public customerList: LabelValue<BidoCustomerDTO>[];\n  public eventCategoryList: LabelValue<string>[];\n  public eventList: GenericEventModel[];\n  public filteredEventList: GenericEventModel[];\n  public filteredResourceList: ResourceModel[];\n  public flightStatusList: LabelValue<string>[];\n  public flightTypeList: LabelValue<string>[];\n  public forecastCategoryList: SelectItem[];\n  public forecastProject: BsdeProjectDTO;\n  public forecastProjectId: string | undefined;\n  public forecastProjectSrc: BsdeProjectDTO;\n  public forecastProjectAsset: BidoEquipmentDTO;\n  public forecastProjectLlpEventsGeneration: boolean;\n  public forecastProjectOccurrenceNumber: number | undefined;\n  public globalMaterialAvailability: MaterialAvailability;\n  public occurrenceList: LabelValue<number>[];\n  public repairCenterList: LabelValue<BsdeSiteDTO>[];\n  public schedulerConfig: object;\n  public schedulerLoading: boolean;\n  public schedulerZoomLevel: number;\n  public taskTypeList: LabelValue<string>[];\n  public topAssetList: BidoEquipmentDTO[];\n  public upcomingEventsInPastWithWarnStatus: number;\n  public upcomingEventsWithNokStatus: number;\n  public upcomingEventsWithOkStatus: number;\n  public upcomingEventsWithWarnStatus: number;\n  public upcomingEventsWithAlertStatus: number;\n  public upcomingEventTypeList: LabelValue<string>[];\n  public workPackageAssignedToList: LabelValue<string>[];\n  public workPackageList: BidmProjectDTO[];\n  public workPackageSiteList: LabelValue<string>[];\n  public workPackageStatusList: LabelValue<string>[];\n  public workPackageTypeList: LabelValue<string>[];\n\n  public selectedAsset: BidoEquipmentDTO | undefined;\n  public selectedAssets: BidoEquipmentDTO[];\n  public selectedCustomer: BidoCustomerDTO | undefined;\n  public selectedEventModel: GenericEventModel | undefined;\n  public selectedForecastCategory: ForecastCategory;\n  public selectedEndDate: Date | undefined;\n  public selectedRepairCenter: BsdeSiteDTO | undefined;\n  public selectedStartDate: Date | undefined;\n  public selectedWorkCenter: number | undefined;\n\n  public showAssetRequiredAvailabilitiesDialog: boolean;\n  public showDefectDialog: boolean;\n  public showScheduledEventDialog: boolean;\n  public showEventGroupDialog: boolean;\n  public showFlightDialog: boolean;\n  public showForecastLegendDialog: boolean;\n  public showForecastManagementBlock: boolean;\n  public showResourcesdAvailabilitiesDialog: boolean;\n  public showSearchAssetDialog: boolean;\n  public showSearchFleetDialog: boolean;\n  public showUnscheduledEventDialog: boolean;\n  public showWorkPackageCreateDialog: boolean;\n  public showWorkPackageUpdateDialog: boolean;\n\n  public assetList: BidoEquipmentDTO[];\n  public assetListSelected: BidoEquipmentDTO[];\n  public filterAssetLabel: string;\n\n  public actions: MenuItem[];\n  public navigations: MenuItem[];\n\n  @ViewChild(SchedulerComponent)\n  private readonly scheduler: SchedulerComponent;\n\n  private readonly schedulerTimeResolutionChanged: Subject<number>;\n\n  private assetMap: Map<string, BidoEquipmentDTO>;\n  private endDate: Date | undefined;\n  private eventCounter: number;\n  private flightUsage: GetAllMaintenanceForecastingFlightUsageOutput[];\n  private materialAvailabilityByWorkPackage: Map<string, MaterialAvailability>;\n  private resourceList: ResourceModel[];\n  private startDate: Date | undefined;\n  private tsnLabel: string;\n\n  public constructor(\n    favoriteService: FavoriteService,\n    loaderService: LoaderService,\n    messageService: MessageService,\n    serializationService: SerializationService,\n    tabService: TabService,\n    public forecastFormService: ForecastFormService,\n    public sessionService: SessionService,\n    private readonly confirmationService: ConfirmationService,\n    private readonly propertiesService: PropertiesService,\n    private readonly schedulerService: SchedulerService,\n    private readonly translateService: TranslateService\n  ) {\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\n\n    this.bidoFunctionTypeConstants = BidoFunctionTypeConstants;\n    this.forecastCategory = ForecastCategory;\n    this.component = ForecastFormComponent;\n\n    this.schedulerTimeResolutionChanged = new Subject<number>();\n\n    this.onBeforeLoadOnce();\n    this.onBeforeLoad();\n  }\n\n  public getComponentName(): string {\n    return ComponentConstants.MAI_FORECAST_FORM;\n  }\n\n  public ngAfterViewInit(): void {\n    this.initSchedulerEngine();\n  }\n\n  public ngOnDestroy(): void {\n    if (!this.isCreateOpenMode) {\n      this.forecastFormService.clearMaintenanceForecastingCache(this.forecastProjectId as string).subscribe();\n    }\n  }\n\n  public ngOnInit(): void {\n    super.ngOnInit();\n\n    this.updateOpenMode(this.componentData.openMode);\n\n    const componentInput = ObjectUtils.isDefined(this.componentData.objectId)\n      ? (this.serializationService.deserialize(this.componentData.objectId as string) as string)\n      : undefined;\n    this.forecastProjectId = componentInput;\n\n    this.showForecastManagementBlock = this.isCreateOpenMode;\n\n    this.loadForecast();\n\n    this.filterAssetLabel = this.translateService.instant(this.getTranslateKey('filterAssetLabel'));\n  }\n\n  public onBeforeLoad(): void {\n    this.assetMap = new Map<string, BidoEquipmentDTO>();\n    this.componentContext = '';\n    this.endDate = undefined;\n    this.eventCounter = 1;\n    this.eventList = [];\n    this.filteredEventList = [];\n    this.filteredResourceList = [];\n    this.flightUsage = [];\n    this.forecastProject = {};\n    this.forecastProjectSrc = {};\n    this.forecastProjectAsset = {};\n    this.forecastProjectLlpEventsGeneration = false;\n    this.forecastProjectOccurrenceNumber = undefined;\n    this.globalMaterialAvailability = { nok: 0, ok: 0, warn: 0 };\n    this.materialAvailabilityByWorkPackage = new Map<string, MaterialAvailability>();\n    this.resourceList = [];\n    this.schedulerLoading = false;\n    this.schedulerZoomLevel = ForecastFormComponent.TIME_RESOLUTION_MIN_ZOOM;\n    this.startDate = undefined;\n    this.topAssetList = [];\n    this.upcomingEventsInPastWithWarnStatus = 0;\n    this.upcomingEventsWithNokStatus = 0;\n    this.upcomingEventsWithOkStatus = 0;\n    this.upcomingEventsWithWarnStatus = 0;\n    this.upcomingEventsWithAlertStatus = 0;\n    this.workPackageList = [];\n\n    this.selectedAsset = undefined;\n    this.selectedAssets = [];\n    this.selectedCustomer = undefined;\n    this.selectedEventModel = undefined;\n    this.selectedForecastCategory = ForecastCategory.FLEET;\n    this.selectedEndDate = undefined;\n    this.selectedRepairCenter = undefined;\n    this.selectedWorkCenter = undefined;\n    this.selectedStartDate = undefined;\n\n    this.showAssetRequiredAvailabilitiesDialog = false;\n    this.showDefectDialog = false;\n    this.showScheduledEventDialog = false;\n    this.showEventGroupDialog = false;\n    this.showFlightDialog = false;\n    this.showForecastLegendDialog = false;\n    this.showForecastManagementBlock = false;\n    this.showResourcesdAvailabilitiesDialog = false;\n    this.showSearchAssetDialog = false;\n    this.showSearchFleetDialog = false;\n    this.showUnscheduledEventDialog = false;\n    this.showWorkPackageCreateDialog = false;\n    this.showWorkPackageUpdateDialog = false;\n  }\n\n  public onBeforeLoadOnce(): void {\n    this.customerList = [];\n    this.eventCategoryList = [];\n    this.flightStatusList = [];\n    this.flightTypeList = [];\n    this.forecastProjectId = undefined;\n    this.repairCenterList = [];\n    this.taskTypeList = [];\n    this.upcomingEventTypeList = [];\n    this.workPackageAssignedToList = [];\n    this.workPackageSiteList = [];\n    this.workPackageStatusList = [];\n    this.workPackageTypeList = [];\n\n    this.registerEventUpdateObservable();\n    this.registerForecastFilteringObservable();\n    this.registerSchedulerTimeResolutionObservable();\n    this.setActions();\n    this.setForecastCategoryList();\n    this.setNavigations();\n    this.setSchedulerColumnList();\n    this.setSchedulerConfig();\n    this.setOccurrenceList();\n    this.setTsnLabel();\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public get forecastProjectAssetDesignation(): string {\n    return BidoEquipmentUtils.createAssetName(this.forecastProjectAsset);\n  }\n\n  public addUnscheduledEvent(): void {\n    this.selectedAsset = this.selectedAssets[0];\n    this.selectedEventModel = undefined;\n    this.showUnscheduledEventDialog = true;\n  }\n\n  public hideForecastManagement(): void {\n    this.showForecastManagementBlock = false;\n  }\n\n  public launchOptimizer(): void {\n    this.confirmationService.confirm({\n      messageKey: this.getTranslateKey('confirmLaunchOptimizer'),\n      accept: () => {\n        this.reloadForecast(undefined, ForecastLoadOption.OPTIMIZE);\n      }\n    });\n  }\n\n  public manageForecastProject(): void {\n    this.showForecastManagementBlock = true;\n  }\n\n  public onChangeTimeResolution(event: { value: number }): void {\n    this.schedulerTimeResolutionChanged.next(event.value);\n  }\n\n  public onCreatedWorkPackage(workPackage: MaintenanceForecastingWorkPackage): void {\n    workPackage.bidmProject.assetCode = (this.selectedAsset as BidoEquipmentDTO).equipmentCode;\n    workPackage.bidmProject.statusState = AWPropertiesConstants.AIRM_PROJECT_STATUS_SIMULATED;\n\n    this.createWorkPackage(workPackage.bidmProject);\n  }\n\n  public onUpdatedWorkPackage(event: EventModel<MaintenanceForecastingWorkPackage>): void {\n    this.updateWorkPackage(event);\n  }\n\n  public openAirworthinessStatus(): void {\n    this.forecastFormService.openAirworthinessStatus(this.selectedAssets.map((asset) => asset.equipmentCode as string));\n  }\n\n  public openForecastLegendDialog(): void {\n    this.showForecastLegendDialog = true;\n  }\n\n  public openMaterialAvailabilityForAllWorkPackage(): void {\n    const repairCenterCode = (this.getForecastRepairCenter() as BsdeSiteDTO).repairCenterCode as string;\n    const workPackageIds = this.workPackageList\n      .filter((workPackage) => workPackage.statusState !== AWPropertiesConstants.AIRM_PROJECT_STATUS_CLOSE)\n      .map((workPackage) => workPackage.projectId as string);\n    this.forecastFormService.getAllSiteByCriteria({ siteCode: repairCenterCode }).subscribe({\n      next: (siteList) => {\n        if (ListUtils.isNullOrEmpty(siteList) && siteList.length !== 1) {\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnOpenMaterialAvailability'));\n        } else {\n          this.forecastFormService.openMaterialAvailabilityForAllWorkPackage(\n            siteList[0].siteId as number,\n            workPackageIds,\n            this.forecastProject.projectStartDate as Date,\n            this.forecastProject.projectEndDate as Date\n          );\n        }\n      }\n    });\n  }\n\n  public openMaintenancePlanning(): void {\n    this.forecastFormService.openMaintenancePlanning(this.selectedAssets[0].equipmentCode as string);\n  }\n\n  public openStaffPlanning(): void {\n    const repairCenterCode = (this.getForecastRepairCenter() as BsdeSiteDTO).repairCenterCode as string;\n    this.forecastFormService.getAllSiteByCriteria({ siteCode: repairCenterCode }).subscribe({\n      next: (siteList) => {\n        if (ListUtils.isNullOrEmpty(siteList) && siteList.length !== 1) {\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnOpenStaffPlanning'));\n        } else {\n          this.forecastFormService.openStaffPlanning(\n            siteList[0].bidtCompanyId as number,\n            siteList[0].siteId as number,\n            this.forecastProject.projectStartDate as Date,\n            this.forecastProject.projectEndDate as Date\n          );\n        }\n      }\n    });\n  }\n\n  public showToday(): void {\n    this.scheduler.schedulerEngine.zoomTo({\n      centerDate: new Date(),\n      preset: this.scheduler.schedulerEngine.viewPreset\n    });\n  }\n\n  public reloadForecast(id?: string | undefined, loadOption: ForecastLoadOption = ForecastLoadOption.DEFAULT): void {\n    this.onBeforeLoad();\n    if (!!id) {\n      this.forecastProjectId = id;\n      this.updateOpenMode(ComponentOpenMode.Read);\n    }\n    this.loadForecast({ loadOption, forceInit: !!id });\n  }\n\n  private addUpcomingEventsToWorkPackage(data: {\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    workPackage: BidmProjectDTO;\n  }): Observable<unknown> {\n    const asset = this.getAssetFromResourceId(data.events[0].resourceId);\n\n    let observable = this.handleUpcomintEventAddedToWorkPackage(\n      data.events[0],\n      data.workPackage.projectId as string,\n      asset\n    );\n    data.events.slice(1).forEach((event) => {\n      observable = observable.pipe(\n        concatMap(() => this.handleUpcomintEventAddedToWorkPackage(event, data.workPackage.projectId as string, asset))\n      );\n    });\n\n    return observable;\n  }\n\n  private adjustEndDateOfSchedulerEventList(): void {\n    this.eventList\n      .filter((event) => event.eventType === EventModelType.WORK_PACKAGE)\n      .filter((event) => !ObjectUtils.isDefined(event.endDate))\n      .forEach((event) => {\n        event.endDate = this.schedulerService.formatEventDate(this.endDate as Date);\n      });\n  }\n\n  private buildAssetMap(elementList: MaintenanceForecastingElement[]): void {\n    let counter = 0;\n\n    const aux = (list: MaintenanceForecastingElement[]) => {\n      list.forEach((elt) => {\n        this.assetMap.set(counter.toString(), elt.equipment);\n        counter++;\n        aux(elt.children);\n      });\n    };\n\n    aux(elementList);\n  }\n\n  private buildSchedulerEventFromDefect(\n    defect: MaintenanceForecastingDefect,\n    resourceId: string\n  ): EventModel<MaintenanceForecastingDefect> {\n    const date = defect.deferredDefectEvent.plannedDate || (defect.deferredDefectEvent.nteDate as Date);\n    const eventStatus = this.forecastFormService.calculateUpcomingEventStatus(date, defect.affectedWorkPackage);\n    const formattedDate = this.schedulerService.formatEventDate(date);\n\n    const eventModel = {\n      resourceId,\n      id: this.generateSchedulerEventId(),\n      startDate: formattedDate,\n      endDate: formattedDate,\n      name: '1',\n      maxEndDate: defect.deferredDefectEvent.nteDate,\n      eventType: EventModelType.DEFECT,\n      resizable: false,\n      _obj: defect\n    };\n    this.setEventColor(eventModel, eventStatus);\n\n    return eventModel;\n  }\n\n  private buildSchedulerEventFromFlight(\n    flight: BidoMissionEquipmentDTO,\n    resourceId: string\n  ): EventModel<BidoMissionEquipmentDTO> {\n    return {\n      resourceId,\n      id: this.generateSchedulerEventId(),\n      startDate: this.schedulerService.formatEventTimestamp(flight.startDate as number),\n      endDate: this.schedulerService.formatEventTimestamp(flight.endDate as number),\n      name: '',\n      draggable: false,\n      eventColor: ForecastFormService.EVENT_COLOR_FLIGHT.REAL,\n      eventStyle: 'line',\n      eventType: EventModelType.FLIGHT,\n      resizable: false,\n      _obj: flight\n    };\n  }\n\n  private buildSchedulerEventFromScheduledEvent(\n    event: MaintenanceForecastingScheduledEvent,\n    eventType: string,\n    resourceId: string\n  ): EventModel<MaintenanceForecastingScheduledEvent> {\n    const date = event.bsdeScheduledEvent.plannedDate || (event.bsdeScheduledEvent.nteDate as Date);\n    const eventStatus = this.forecastFormService.calculateUpcomingEventStatus(\n      date,\n      event.affectedWorkPackage,\n      event.bsdeScheduledEvent\n    );\n    const formattedDate = this.schedulerService.formatEventDate(date);\n\n    const eventModel = {\n      eventType,\n      resourceId,\n      id: this.generateSchedulerEventId(),\n      startDate: formattedDate,\n      endDate: formattedDate,\n      name: '1',\n      maxEndDate: event.bsdeScheduledEvent.nteDate,\n      resizable: false,\n      _obj: event\n    };\n\n    this.setEventColor(eventModel, eventStatus);\n\n    return eventModel;\n  }\n\n  private buildSchedulerEventFromUnscheduledEvent(\n    event: MaintenanceForecastingUnscheduledEvent,\n    eventType: string,\n    resourceId: string\n  ): EventModel<MaintenanceForecastingUnscheduledEvent> {\n    const date = event.bsdeEvent.plannedDate as Date;\n    const eventStatus = this.forecastFormService.calculateUpcomingEventStatus(date, event.affectedWorkPackage);\n\n    const eventModel = {\n      eventType,\n      resourceId,\n      id: this.generateSchedulerEventId(),\n      startDate: this.schedulerService.formatEventDate(date),\n      endDate: this.schedulerService.formatEventDate(date),\n      name: '1',\n      resizable: false,\n      _obj: event\n    };\n\n    this.setEventColor(eventModel, eventStatus);\n\n    return eventModel;\n  }\n\n  private buildSchedulerEventFromWorkPackage(\n    workPackage: MaintenanceForecastingWorkPackage,\n    resourceId: string\n  ): EventModel<MaintenanceForecastingWorkPackage> {\n    const name = `${this.translateService.instant('workPackageNumberShort')}${workPackage.bidmProject.projectNumber}`;\n    const startDate = workPackage.bidmProject.projectStartDate as Date;\n    const endDate = workPackage.bidmProject.projectEndDate || workPackage.bidmProject.projectDueDate;\n    const isModifiable = this.forecastFormService.checkIfWorkPackageIfModifiable(workPackage.bidmProject);\n\n    const eventModel = {\n      name,\n      resourceId,\n      id: this.generateSchedulerEventId(),\n      startDate: this.schedulerService.formatEventDate(startDate),\n      endDate: ObjectUtils.isDefined(endDate) ? this.schedulerService.formatEventDate(endDate as Date) : undefined,\n      draggable: isModifiable,\n      eventType: EventModelType.WORK_PACKAGE,\n      resizable: isModifiable,\n      _obj: workPackage\n    };\n\n    this.setWorkPackageColor(eventModel, workPackage.bidmProject.statusState as string);\n\n    return eventModel;\n  }\n\n  private buildSchedulerEventList(elementList: MaintenanceForecastingElement[]): void {\n    elementList.forEach((element) => {\n      const resourceId = element.equipment.equipmentCode as string;\n\n      ListUtils.orEmpty(element.missionEquipments)\n        .filter(this.forecastFormService.isValidFlight)\n        .forEach((flight) => this.eventList.push(this.buildSchedulerEventFromFlight(flight, resourceId)));\n\n      ListUtils.orEmpty(element.workPackages)\n        .filter(this.forecastFormService.isValidWorkPackage)\n        .forEach((workPackage) =>\n          this.eventList.push(this.buildSchedulerEventFromWorkPackage(workPackage, resourceId))\n        );\n\n      ListUtils.orEmpty(element.defects)\n        .filter(this.forecastFormService.isValidDefect)\n        .forEach((defect) => this.eventList.push(this.buildSchedulerEventFromDefect(defect, resourceId)));\n\n      ListUtils.orEmpty(element.llpAlerts)\n        .filter(this.forecastFormService.isValidScheduledEvent)\n        .forEach((event) =>\n          this.eventList.push(this.buildSchedulerEventFromScheduledEvent(event, EventModelType.LLP_ALERT, resourceId))\n        );\n\n      ListUtils.orEmpty(element.scheduledEvents)\n        .filter(this.forecastFormService.isValidScheduledEvent)\n        .forEach((event) =>\n          this.eventList.push(\n            this.buildSchedulerEventFromScheduledEvent(event, EventModelType.SCHEDULED_EVENT, resourceId)\n          )\n        );\n\n      ListUtils.orEmpty(element.snChanges)\n        .filter(this.forecastFormService.isValidUnscheduledEvent)\n        .forEach((event) =>\n          this.eventList.push(this.buildSchedulerEventFromUnscheduledEvent(event, EventModelType.SN_CHANGE, resourceId))\n        );\n\n      ListUtils.orEmpty(element.unscheduledEvents)\n        .filter(this.forecastFormService.isValidUnscheduledEvent)\n        .forEach((event) =>\n          this.eventList.push(\n            this.buildSchedulerEventFromUnscheduledEvent(event, EventModelType.UNSCHEDULED_EVENT, resourceId)\n          )\n        );\n\n      this.buildSchedulerEventList(element.children);\n    });\n  }\n\n  private buildSchedulerResourceFromAsset(element: MaintenanceForecastingElement): ResourceModel {\n    return {\n      id: element.equipment.equipmentCode as string,\n      asset: element.equipment,\n      assetDescription: element.equipmentDescription,\n      children: element.children.map((childElement) => this.buildSchedulerResourceFromAsset(childElement)),\n      flDescription: element.flDescription\n    };\n  }\n\n  private buildSchedulerResourceList(elementList: MaintenanceForecastingElement[]): void {\n    this.resourceList = elementList.map((element) => this.buildSchedulerResourceFromAsset(element));\n  }\n\n  private buildTopAssetList(elementList: MaintenanceForecastingElement[]): void {\n    this.topAssetList = elementList.map((element) => element.equipment);\n  }\n\n  private calculateGlobalMaterialAvailability(): void {\n    this.globalMaterialAvailability = Array.from(this.materialAvailabilityByWorkPackage.values()).reduce(\n      (acc, val) => {\n        return {\n          nok: val.nok + acc.nok,\n          ok: val.ok + acc.ok,\n          warn: val.warn + acc.warn\n        };\n      },\n      { nok: 0, ok: 0, warn: 0 }\n    );\n  }\n\n  private calculateUpcomingEventNumberByStatus(eventList: GenericEventModel[]): void {\n    const allUpcomingEvents = eventList\n      .filter((event) => !this.forecastFormService.isWorkPackageSchedulerEventType(event.eventType))\n      .map((event) => {\n        if (this.forecastFormService.isEventGroupSchedulerEventType(event.eventType)) {\n          const eventGroup = event as EventGroupModel;\n\n          return [\n            ...eventGroup.defectList,\n            ...eventGroup.llpAlertList,\n            ...eventGroup.scheduledEventList,\n            ...eventGroup.snChangeList,\n            ...eventGroup.unscheduledEventList\n          ];\n        } else {\n          return [event];\n        }\n      })\n      .reduce((acc, val) => acc.concat(val), []);\n\n    this.upcomingEventsInPastWithWarnStatus = allUpcomingEvents.filter(\n      (event) => event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.IN_PAST]\n    ).length;\n    this.upcomingEventsWithOkStatus = allUpcomingEvents.filter(\n      (event) => event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.OK]\n    ).length;\n    this.upcomingEventsWithWarnStatus = allUpcomingEvents.filter(\n      (event) => event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.WARN]\n    ).length;\n    this.upcomingEventsWithAlertStatus = allUpcomingEvents.filter(\n      (event) => event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.ALERT]\n    ).length;\n    this.upcomingEventsWithNokStatus = allUpcomingEvents.filter(\n      (event) => event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.NOK]\n    ).length;\n  }\n\n  private clearHighlight(): void {\n    this.eventList.forEach((eventModel) => {\n      this.setEventCls(\n        eventModel,\n        this.getEventClasses(eventModel).filter(\n          (cls) =>\n            cls !== ForecastFormComponent.EVENT_HIGHLIGHT_CLS &&\n            cls !== ForecastFormComponent.WORK_PACKAGE_HIGHLIGHT_CLS\n        )\n      );\n    });\n\n    this.filterForecast(this.forecastFormService.forecastFiltering);\n    this.mergeFilteredEvents();\n  }\n\n  private createWorkPackage(workPackage: BidmProjectDTO): void {\n    this.forecastFormService\n      .createBidmProject(workPackage)\n      .pipe(\n        concatMap((newWorkPackageId) => {\n          return forkJoin({\n            newWorkPackage: this.forecastFormService.getWorkPackage(newWorkPackageId.projectId),\n            siteDataList: this.forecastFormService.controlStock(workPackage)\n          });\n        })\n      )\n      .subscribe({\n        next: (data) => {\n          this.workPackageList = [...this.workPackageList, data.newWorkPackage];\n\n          this.updateWorkPackageMaterialAvailabilityValue(data.newWorkPackage, data.siteDataList);\n\n          const selectedResource = this.getResourceFromResourceId(\n            data.newWorkPackage.assetCode as string\n          ) as ResourceModel;\n          const newWorkPackageEvent = this.buildSchedulerEventFromWorkPackage(\n            { bidmProject: data.newWorkPackage, bidmWorkOrderList: [] },\n            selectedResource.id\n          );\n          this.eventList.push(newWorkPackageEvent);\n\n          this.messageService.showSuccessMessage('successMessage.createWorkPackage');\n\n          this.updateSchedulerView();\n        }\n      });\n  }\n\n  private filterForecast(forecastFiltering: ForecastFiltering): void {\n    this.filteredResourceList = StringUtils.isNullOrEmpty(forecastFiltering.globalSearch)\n      ? this.resourceList\n      : this.resourceList.filter((resource) => {\n          const equipmentName = BidoEquipmentUtils.createAssetName(resource.asset);\n\n          return (\n            equipmentName.includes(forecastFiltering.globalSearch) ||\n            resource.assetDescription.includes(forecastFiltering.globalSearch) ||\n            resource.flDescription.includes(forecastFiltering.globalSearch)\n          );\n        });\n\n    const filteredResourceIdList = this.filteredResourceList.map((resource) => resource.id);\n\n    this.filteredEventList = this.eventList\n      .filter((event) => filteredResourceIdList.includes(event.resourceId))\n      .filter((event) => {\n        if (this.forecastFormService.isDefectSchedulerEventType(event.eventType)) {\n          return (\n            this.forecastFormService.filterForecastByUpcomingEventStatus(\n              forecastFiltering,\n              event.eventColor as string\n            ) &&\n            this.forecastFormService.filterForecastByUpcomingEventType(forecastFiltering, event.eventType) &&\n            this.forecastFormService.filterForecastDefect(\n              forecastFiltering,\n              event as EventModel<MaintenanceForecastingDefect>\n            )\n          );\n        } else if (this.forecastFormService.isScheduledEventSchedulerEventType(event.eventType)) {\n          return (\n            this.forecastFormService.filterForecastByUpcomingEventStatus(\n              forecastFiltering,\n              event.eventColor as string\n            ) &&\n            this.forecastFormService.filterForecastByUpcomingEventType(forecastFiltering, event.eventType) &&\n            this.forecastFormService.filterForecastScheduledEvent(\n              forecastFiltering,\n              event as EventModel<MaintenanceForecastingScheduledEvent>\n            )\n          );\n        } else if (this.forecastFormService.isUnscheduledEventSchedulerEventType(event.eventType)) {\n          return (\n            this.forecastFormService.filterForecastByUpcomingEventStatus(\n              forecastFiltering,\n              event.eventColor as string\n            ) &&\n            this.forecastFormService.filterForecastByUpcomingEventType(forecastFiltering, event.eventType) &&\n            this.forecastFormService.filterForecastUnscheduledEvent(\n              forecastFiltering,\n              event as EventModel<MaintenanceForecastingUnscheduledEvent>\n            )\n          );\n        } else if (this.forecastFormService.isWorkPackageSchedulerEventType(event.eventType)) {\n          return this.forecastFormService.filterForecastWorkPackage(\n            forecastFiltering,\n            event as EventModel<MaintenanceForecastingWorkPackage>\n          );\n        } else {\n          return true;\n        }\n      });\n  }\n\n  private fillAssetListForFilter(elementList: MaintenanceForecastingElement[]): void {\n    this.assetList = [];\n    this.assetListSelected = [];\n    elementList.forEach((maintenance: MaintenanceForecastingElement) => {\n      if (maintenance.equipment.equipmentFunction === AWPropertiesConstants.ITEM_FAMILY_CODE_AIRCRAFT_KEY) {\n        maintenance.equipment._displayableField = maintenance.equipment.registration;\n      } else {\n        maintenance.equipment._displayableField = `${maintenance.equipment.pnCode}/${maintenance.equipment.sn}`;\n      }\n      this.assetList.push(maintenance.equipment);\n      this.assetListSelected.push(maintenance.equipment);\n    });\n  }\n\n  public onFilterAsset(): void {\n    this.filteredResourceList = this.resourceList.filter((resource) => {\n      let assetFound = false;\n      this.assetListSelected.forEach((asset: BidoEquipmentDTO) => {\n        if (asset.equipmentCode === resource.asset.equipmentCode) {\n          assetFound = true;\n        }\n      });\n\n      return assetFound;\n    });\n  }\n\n  private fillWorkPackageList(elementList: MaintenanceForecastingElement[]): void {\n    const extractWorkPackages = (elt: MaintenanceForecastingElement): BidmProjectDTO[] => {\n      return elt.workPackages\n        .map((workPackage) => workPackage.bidmProject)\n        .concat(elt.children.map(extractWorkPackages).reduce((acc, val) => acc.concat(val), []));\n    };\n\n    this.workPackageList = elementList\n      .map(extractWorkPackages)\n      .reduce((acc, val) => acc.concat(val), [])\n      .reduce((acc: BidmProjectDTO[], val) => {\n        return acc.some((elt) => elt.projectId === val) ? acc : [...acc, val];\n      }, []);\n  }\n\n  private findEventModelSrcById(id: number): GenericEventModel | undefined {\n    return this.eventList.find((event) => event.id === id);\n  }\n\n  private generateSchedulerEventId(): number {\n    return this.eventCounter++;\n  }\n\n  private getAllParentResourceIds(resourceId: string): string[] {\n    const aux = (resource: ResourceModel, lineage: string[]): string[] => {\n      if (resource.id === resourceId) {\n        return lineage;\n      } else {\n        return resource.children\n          .map((childResource: ResourceModel) => aux(childResource, [...lineage, resource.id]))\n          .reduce((acc, val) => acc.concat(val), []);\n      }\n    };\n\n    return this.resourceList.map((resource) => aux(resource, [])).reduce((acc, val) => acc.concat(val), []);\n  }\n\n  private getAssetFromResourceId(resourceId: string): BidoEquipmentDTO {\n    const selectedResource = this.getResourceFromResourceId(resourceId) as ResourceModel;\n\n    return selectedResource.asset;\n  }\n\n  private getEventClasses(event: GenericEventModel): string[] {\n    return event.cls ? event.cls.split(' ') : [];\n  }\n\n  private getEventModelType(eventModel: GenericEventModel): string {\n    return eventModel.eventType;\n  }\n\n  private getEventTooltip(eventModel: GenericEventModel): string {\n    const eventModelType = this.getEventModelType(eventModel);\n\n    if (this.forecastFormService.isWorkPackageSchedulerEventType(eventModelType)) {\n      const workPackageModel = eventModel as EventModel<MaintenanceForecastingWorkPackage>;\n\n      return this.forecastFormService.tooltipWorkPackageSchedulerEventType(\n        workPackageModel,\n        this.workPackageStatusList\n      );\n    } else {\n      return '';\n    }\n  }\n\n  private getForecastRepairCenter(): BsdeSiteDTO | undefined {\n    const matchingRepairCenter = this.repairCenterList.find(\n      (repairCenter) => repairCenter.value.repairCenterCode === this.forecastProject.repairCenterCode\n    );\n\n    return ObjectUtils.isDefined(matchingRepairCenter)\n      ? (matchingRepairCenter as LabelValue<BsdeSiteDTO>).value\n      : undefined;\n  }\n\n  private getNextWorkPackageStatusLabel(workPackage: BidmProjectDTO): string {\n    let key: string;\n    if (workPackage.statusState === AWPropertiesConstants.AIRM_PROJECT_STATUS_SIMULATED) {\n      key = 'validateSimulation';\n    } else {\n      key = 'releaseWorkPackage';\n    }\n\n    return this.translateService.instant(this.getTranslateKey(key as string)) as string;\n  }\n\n  private getPreviousWorkPackageStatusLabel(workPackage: BidmProjectDTO): string {\n    let key: string;\n    if (workPackage.statusState === AWPropertiesConstants.AIRM_PROJECT_STATUS_RELEASED) {\n      key = 'cancelRelease';\n    } else {\n      key = 'cancelScheduling';\n    }\n\n    return this.translateService.instant(this.getTranslateKey(key as string)) as string;\n  }\n\n  private getResourceFromResourceId(resourceId: string): ResourceModel | undefined {\n    const queue = [...this.resourceList];\n    while (queue.length > 0) {\n      const first = queue.shift() as ResourceModel;\n      if (first.id === resourceId) {\n        return first;\n      } else if (!ListUtils.isNullOrEmpty(first.children)) {\n        queue.push(...(first.children as ResourceModel[]));\n      }\n    }\n\n    return undefined;\n  }\n\n  private handleUpcomintEventAddedToWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingUpcomingEvent>,\n    workPackageId: string,\n    asset: BidoEquipmentDTO\n  ): Observable<unknown> {\n    const workPackageEventModel = this.eventList.find((genericEventModel) => {\n      return (\n        this.forecastFormService.isWorkPackageSchedulerEventType(genericEventModel.eventType) &&\n        (genericEventModel as EventModel<MaintenanceForecastingWorkPackage>)._obj.bidmProject.projectId ===\n          workPackageId\n      );\n    }) as EventModel<MaintenanceForecastingWorkPackage>;\n    const workPackage = workPackageEventModel._obj.bidmProject;\n\n    let observable: Observable<BidmProjectDTO> | undefined;\n\n    if (this.forecastFormService.isDefectSchedulerEventType(eventModel.eventType)) {\n      observable = this.forecastFormService.addDeferredDefectEventToWorkPackage(\n        eventModel as EventModel<MaintenanceForecastingDefect>,\n        workPackage,\n        asset,\n        this.forecastProjectId as string\n      );\n    } else if (this.forecastFormService.isScheduledEventSchedulerEventType(eventModel.eventType)) {\n      observable = this.forecastFormService.addBsdeScheduledEventToWorkPackage(\n        eventModel as EventModel<MaintenanceForecastingScheduledEvent>,\n        workPackage,\n        asset,\n        this.forecastProjectId as string\n      );\n    } else if (this.forecastFormService.isSnChangeSchedulerEventType(eventModel.eventType)) {\n      observable = this.forecastFormService.addBsdeEventSnChangeToWorkPackage(\n        eventModel as EventModel<MaintenanceForecastingUnscheduledEvent>,\n        workPackage,\n        asset,\n        this.forecastProjectId as string\n      );\n    } else if (this.forecastFormService.isUnscheduledEventSchedulerEventType(eventModel.eventType)) {\n      const unscheduledEventModel = eventModel as EventModel<MaintenanceForecastingUnscheduledEvent>;\n      const bsdeEvent = unscheduledEventModel._obj.bsdeEvent;\n      if (bsdeEvent.eventType === BsdeEventTypeConstants.EVOLUTION_TYPE_CODE) {\n        observable = this.forecastFormService.addBsdeUnscheduledEventEvolutionToWorkPackage(\n          unscheduledEventModel,\n          workPackage,\n          asset,\n          this.forecastProjectId as string\n        );\n      } else if (bsdeEvent.eventType === BsdeEventTypeConstants.TASK_TYPE_CODE) {\n        observable = this.forecastFormService.addBsdeUnscheduledEventTaskToWorkPackage(\n          unscheduledEventModel,\n          workPackage,\n          asset,\n          this.forecastProjectId as string\n        );\n      }\n    }\n\n    if (ObjectUtils.isDefined(observable)) {\n      return (observable as Observable<BidmProjectDTO>).pipe(\n        concatMap((updatedWorkPackage) => {\n          workPackageEventModel._obj.bidmProject = updatedWorkPackage;\n\n          return this.forecastFormService.controlStock(workPackage);\n        }),\n        concatMap((siteDataList) => {\n          this.updateWorkPackageMaterialAvailabilityValue(workPackage, siteDataList);\n\n          const newStatus = this.forecastFormService.calculateUpcomingEventStatus(\n            eventModel.endDate as Date,\n            workPackage\n          );\n\n          // Update event reference into events\n          const eventModelSrc = this.findEventModelSrcById(eventModel.id) as EventModel<\n            MaintenanceForecastingUpcomingEvent\n          >;\n          eventModelSrc._obj.affectedWorkPackage = workPackage;\n          this.setEventColor(eventModelSrc, newStatus);\n\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnAddEventToWorkPackage'));\n\n          return of(undefined);\n        })\n      );\n    } else {\n      return of(undefined);\n    }\n  }\n\n  private handleUpcomintEventRemovedFromWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingUpcomingEvent>,\n    workPackageId: string,\n    asset: BidoEquipmentDTO\n  ): Observable<unknown> {\n    const workPackageEventModel = this.eventList.find((genericEventModel) => {\n      return (\n        this.forecastFormService.isWorkPackageSchedulerEventType(genericEventModel.eventType) &&\n        (genericEventModel as EventModel<MaintenanceForecastingWorkPackage>)._obj.bidmProject.projectId ===\n          workPackageId\n      );\n    }) as EventModel<MaintenanceForecastingWorkPackage>;\n    const workPackage = workPackageEventModel._obj.bidmProject;\n\n    let observable: Observable<BidmProjectDTO> | undefined;\n\n    if (this.forecastFormService.isDefectSchedulerEventType(eventModel.eventType)) {\n      observable = this.forecastFormService.removeDeferredDefectEventFromWorkPackage(\n        eventModel as EventModel<MaintenanceForecastingDefect>,\n        workPackage,\n        asset,\n        this.forecastProjectId as string\n      );\n    } else if (this.forecastFormService.isScheduledEventSchedulerEventType(eventModel.eventType)) {\n      observable = this.forecastFormService.removeBsdeScheduledEventFromWorkPackage(\n        eventModel as EventModel<MaintenanceForecastingScheduledEvent>,\n        workPackage,\n        asset,\n        this.forecastProjectId as string\n      );\n    } else if (this.forecastFormService.isSnChangeSchedulerEventType(eventModel.eventType)) {\n      observable = this.forecastFormService.removeBsdeEventSnChangeFromWorkPackage(\n        eventModel as EventModel<MaintenanceForecastingUnscheduledEvent>,\n        workPackage,\n        asset,\n        this.forecastProjectId as string\n      );\n    } else if (this.forecastFormService.isUnscheduledEventSchedulerEventType(eventModel.eventType)) {\n      const unscheduledEventModel = eventModel as EventModel<MaintenanceForecastingUnscheduledEvent>;\n      const bsdeEvent = unscheduledEventModel._obj.bsdeEvent;\n      if (bsdeEvent.eventType === BsdeEventTypeConstants.EVOLUTION_TYPE_CODE) {\n        observable = this.forecastFormService.removeBsdeUnscheduledEventEvolutionFromWorkPackage(\n          unscheduledEventModel,\n          workPackage,\n          asset,\n          this.forecastProjectId as string\n        );\n      } else if (bsdeEvent.eventType === BsdeEventTypeConstants.TASK_TYPE_CODE) {\n        observable = this.forecastFormService.removeBsdeUnscheduledEventTaskFromWorkPackage(\n          unscheduledEventModel,\n          workPackage,\n          asset,\n          this.forecastProjectId as string\n        );\n      }\n    }\n\n    if (ObjectUtils.isDefined(observable)) {\n      return (observable as Observable<BidmProjectDTO>).pipe(\n        concatMap((updatedWorkPackage) => {\n          workPackageEventModel._obj.bidmProject = updatedWorkPackage;\n\n          return this.forecastFormService.controlStock(workPackage);\n        }),\n        concatMap((siteDataList) => {\n          const eventModelToUpdate = this.findEventModelSrcById(eventModel.id) as EventModel<\n            MaintenanceForecastingUpcomingEvent\n          >;\n\n          // Update event\n          eventModelToUpdate._obj.affectedWorkPackage = undefined;\n\n          const newStatus = this.forecastFormService.calculateUpcomingEventStatus(\n            eventModelToUpdate.endDate as Date,\n            eventModelToUpdate._obj.affectedWorkPackage\n          );\n\n          this.setEventColor(eventModelToUpdate, newStatus);\n\n          // Update work package\n          this.updateWorkPackageMaterialAvailabilityValue(workPackage, siteDataList);\n\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnRemoveEventToWorkPackage'));\n\n          return of(undefined);\n        })\n      );\n    } else {\n      return of(undefined);\n    }\n  }\n\n  private highlightEventsAssociatedToWorkPackage(\n    selectedEventModel: EventModel<MaintenanceForecastingWorkPackage>\n  ): void {\n    const workPackage = selectedEventModel._obj.bidmProject;\n\n    // Keep only events associated to selected work package\n    this.filteredEventList = this.filteredEventList.filter((eventModel) => {\n      if (eventModel.resourceId !== selectedEventModel.resourceId) {\n        return true;\n      } else {\n        const eventModelType = this.getEventModelType(eventModel);\n\n        if (\n          this.forecastFormService.isDefectSchedulerEventType(eventModelType) ||\n          this.forecastFormService.isScheduledEventSchedulerEventType(eventModelType) ||\n          this.forecastFormService.isUnscheduledEventSchedulerEventType(eventModelType)\n        ) {\n          const upcomingEventModel = eventModel as EventModel<MaintenanceForecastingUpcomingEvent>;\n\n          return this.isEventAssociatedToWorkPackage(upcomingEventModel, workPackage);\n        } else if (this.forecastFormService.isEventGroupSchedulerEventType(eventModelType)) {\n          const eventGroupModel = eventModel as EventGroupModel;\n\n          return (\n            eventGroupModel.defectList.some((event) => this.isEventAssociatedToWorkPackage(event, workPackage)) ||\n            eventGroupModel.llpAlertList.some((event) => this.isEventAssociatedToWorkPackage(event, workPackage)) ||\n            eventGroupModel.scheduledEventList.some((event) =>\n              this.isEventAssociatedToWorkPackage(event, workPackage)\n            ) ||\n            eventGroupModel.snChangeList.some((event) => this.isEventAssociatedToWorkPackage(event, workPackage)) ||\n            eventGroupModel.unscheduledEventList.some((event) =>\n              this.isEventAssociatedToWorkPackage(event, workPackage)\n            )\n          );\n        } else {\n          return true;\n        }\n      }\n    });\n\n    // Highlight selected work pacakge\n    this.filteredEventList.forEach((eventModel) => {\n      if (eventModel.id === selectedEventModel.id) {\n        this.setEventCls(eventModel, [\n          ...this.getEventClasses(eventModel),\n          ForecastFormComponent.WORK_PACKAGE_HIGHLIGHT_CLS\n        ]);\n      }\n    });\n  }\n\n  private highlightWorkPackagesAssociatedToEvent(selectedEventModel: GenericEventModel): void {\n    // Keep only work packages associated to selected event\n    const workPackages: (BidmProjectDTO | undefined)[] = [];\n    if (\n      this.forecastFormService.isDefectSchedulerEventType(selectedEventModel.eventType) ||\n      this.forecastFormService.isScheduledEventSchedulerEventType(selectedEventModel.eventType) ||\n      this.forecastFormService.isUnscheduledEventSchedulerEventType(selectedEventModel.eventType)\n    ) {\n      workPackages.push(\n        (selectedEventModel as EventModel<MaintenanceForecastingUpcomingEvent>)._obj.affectedWorkPackage\n      );\n    } else if (this.forecastFormService.isEventGroupSchedulerEventType(selectedEventModel.eventType)) {\n      const eventGroup = selectedEventModel as EventGroupModel;\n\n      workPackages.push(\n        ...[\n          ...eventGroup.defectList,\n          ...eventGroup.llpAlertList,\n          ...eventGroup.scheduledEventList,\n          ...eventGroup.snChangeList,\n          ...eventGroup.unscheduledEventList\n        ].map((eventModel) => (eventModel as EventModel<MaintenanceForecastingUpcomingEvent>)._obj.affectedWorkPackage)\n      );\n    }\n\n    const workPackageIds = workPackages\n      .filter((workPackage) => ObjectUtils.isDefined(workPackage))\n      .map((workPackage) => (workPackage as BidmProjectDTO).projectId);\n\n    this.filteredEventList = this.filteredEventList.filter((eventModel) => {\n      if (eventModel.resourceId !== selectedEventModel.resourceId) {\n        return true;\n      } else {\n        if (this.forecastFormService.isWorkPackageSchedulerEventType(eventModel.eventType)) {\n          const workPackageEventModel = eventModel as EventModel<MaintenanceForecastingWorkPackage>;\n\n          return workPackageIds.includes(workPackageEventModel._obj.bidmProject.projectId);\n        } else {\n          return true;\n        }\n      }\n    });\n\n    // Highlight selected event\n    this.filteredEventList.forEach((eventModel) => {\n      if (eventModel.id === selectedEventModel.id) {\n        this.setEventCls(eventModel, [...this.getEventClasses(eventModel), ForecastFormComponent.EVENT_HIGHLIGHT_CLS]);\n      }\n    });\n  }\n\n  private initSchedulerEngine(): void {\n    if (this.translateService.currentLang === LangConstants.FRENCH_CODE) {\n      this.scheduler.schedulerEngine.localeManager.locale = 'Fr';\n    } else {\n      this.scheduler.schedulerEngine.localeManager.locale = 'En';\n    }\n\n    this.registerSchedulerBeforeDragCreateFinalize();\n    this.registerSchedulerBeforeEventdropfinalize();\n    this.registerSchedulerBeforeEventEdit();\n    this.registerSchedulerCellClick();\n    this.registerSchedulerClick();\n    this.registerSchedulerEventClick();\n    this.registerSchedulerEventDrop();\n    this.registerSchedulerEventResizeEnd();\n    this.registerSchedulerListeners();\n\n    this.setSchedulerResourceColumnWidth();\n  }\n\n  private isEventAssociatedToWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingUpcomingEvent>,\n    workPackage: BidmProjectDTO\n  ): boolean {\n    return (\n      ObjectUtils.isDefined(eventModel._obj.affectedWorkPackage) &&\n      (eventModel._obj.affectedWorkPackage as BidmProjectDTO).projectId === workPackage.projectId\n    );\n  }\n\n  private loadForecast(\n    { loadOption, forceInit }: { loadOption: ForecastLoadOption; forceInit: boolean } = {\n      loadOption: ForecastLoadOption.DEFAULT,\n      forceInit: true\n    }\n  ): void {\n    this.schedulerLoading = !this.isCreateOpenMode;\n\n    forkJoin({\n      forecast: StringUtils.isNullOrEmpty(this.forecastProjectId)\n        ? of(undefined)\n        : forkJoin({\n            init: forceInit ? this.forecastFormService.initialize(this.forecastProjectId as string) : of(undefined),\n            projectAttributeList: this.forecastFormService.getBsdeProjectAttributeList({\n              projectId: this.forecastProjectId as string\n            }),\n            projectData: this.forecastFormService.getBsdeProject({ projectId: this.forecastProjectId as string })\n          }).pipe(\n            tap((result) => {\n              this.setProjectAttributeList(result.projectAttributeList);\n            }),\n            concatMap((result1) => {\n              const project = result1.projectData;\n\n              return forkJoin({\n                projectAsset:\n                  ObjectUtils.isDefined(project.projectPn) || ObjectUtils.isDefined(project.projectSn)\n                    ? this.forecastFormService.getForecastProjectAsset({\n                        pnCode: project.projectPn,\n                        sn: project.projectSn\n                      })\n                    : of(undefined),\n                data: this.forecastFormService.loadForecastData(\n                  project,\n                  this.forecastProjectId as string,\n                  this.forecastProjectLlpEventsGeneration,\n                  this.forecastProjectOccurrenceNumber,\n                  loadOption\n                )\n              }).pipe(\n                concatMap((result2) => {\n                  this.fillWorkPackageList(result2.data);\n                  this.fillAssetListForFilter(result2.data);\n\n                  return forkJoin({\n                    data: of(result2.data),\n                    flightUsage: this.forecastFormService.getAllForecastFlightUsage(this.forecastProjectId as string),\n                    materialAvailabilityByWorkPackage: ListUtils.isEmpty(this.workPackageList)\n                      ? of([])\n                      : forkJoin(\n                          this.workPackageList.map((workPackage) => this.forecastFormService.controlStock(workPackage))\n                        ),\n                    project: of(project),\n                    projectAsset: of(result2.projectAsset)\n                  });\n                })\n              );\n            })\n          ),\n      customerList: ListUtils.isEmpty(this.customerList)\n        ? this.forecastFormService.getAllForecastProjectCustomer()\n        : of(this.customerList),\n      eventCategoryList: ListUtils.isEmpty(this.eventCategoryList)\n        ? this.propertiesService.getValue(GenericPropertyConstants.EVENT_CATEGORY_MAP)\n        : of(this.eventCategoryList),\n      flightStatusList: ListUtils.isEmpty(this.flightStatusList)\n        ? this.propertiesService.getValue(GenericPropertyConstants.FLIGHT_STATUS_MAP)\n        : of(this.flightStatusList),\n      flightTypeList: ListUtils.isEmpty(this.flightTypeList)\n        ? this.propertiesService.getValue(GenericPropertyConstants.EVENT_MISSION_TYPE_MAP)\n        : of(this.flightTypeList),\n      repairCenterList: ListUtils.isEmpty(this.repairCenterList)\n        ? this.forecastFormService.getAllForecastProjectSite()\n        : of(this.repairCenterList),\n      taskTypeList: ListUtils.isEmpty(this.taskTypeList)\n        ? this.propertiesService.getValue(GenericPropertyConstants.TASK_TYPE_MAP)\n        : of(this.taskTypeList),\n      upcomingEventTypeList: ListUtils.isEmpty(this.upcomingEventTypeList)\n        ? this.forecastFormService.buildUpcomingEventTypeList()\n        : of(this.upcomingEventTypeList),\n      workPackageAssignedToList: ListUtils.isEmpty(this.workPackageAssignedToList)\n        ? this.forecastFormService.workPackageAssignedToList()\n        : of(this.workPackageAssignedToList),\n      workPackageSiteList: ListUtils.isEmpty(this.workPackageSiteList)\n        ? this.forecastFormService.getAllWorkPackageSite()\n        : of(this.workPackageSiteList),\n      workPackageStatusList: ListUtils.isEmpty(this.workPackageStatusList)\n        ? this.propertiesService.getValue(GenericPropertyConstants.AIRM_PROJECT_STATUS_MAP)\n        : of(this.workPackageStatusList),\n      workPackageTypeList: ListUtils.isEmpty(this.workPackageTypeList)\n        ? this.propertiesService.getValue(GenericPropertyConstants.WORK_PACKAGE_TYPE_MAP)\n        : of(this.workPackageTypeList)\n    }).subscribe({\n      next: (result) => {\n        this.customerList = result.customerList;\n        this.eventCategoryList = result.eventCategoryList;\n        this.flightStatusList = result.flightStatusList;\n        this.flightTypeList = result.flightTypeList;\n        this.repairCenterList = result.repairCenterList;\n        this.taskTypeList = result.taskTypeList;\n        this.upcomingEventTypeList = result.upcomingEventTypeList;\n        this.workPackageAssignedToList = result.workPackageAssignedToList;\n        this.workPackageSiteList = result.workPackageSiteList;\n        this.workPackageStatusList = result.workPackageStatusList;\n        this.workPackageTypeList = result.workPackageTypeList;\n\n        if (!this.isCreateOpenMode) {\n          this.forecastFormService.initForecastFiltering(this.upcomingEventTypeList, this.workPackageStatusList);\n\n          const forecast = result.forecast as {\n            data: MaintenanceForecastingElement[];\n            flightUsage: GetAllMaintenanceForecastingFlightUsageOutput[];\n            materialAvailabilityByWorkPackage: GetQuantityInStockBySiteOutput[][];\n            project: BsdeProjectDTO;\n            projectAsset: BidoEquipmentDTO | undefined;\n          };\n\n          this.forecastProjectSrc = forecast.project;\n          this.forecastProject = { ...this.forecastProjectSrc };\n          this.forecastProjectAsset = forecast.projectAsset || {};\n          this.flightUsage = forecast.flightUsage;\n\n          this.setComponentContext();\n\n          this.setForecastCategory();\n          this.setForecastCustomerCode();\n          this.setForecastRepairCenterCode();\n          this.setForecastWorkCenterCode();\n\n          forecast.materialAvailabilityByWorkPackage.forEach((siteDataList, i) => {\n            this.updateWorkPackageMaterialAvailabilityValue(this.workPackageList[i], siteDataList);\n          });\n\n          this.buildSchedulerResourceList(forecast.data);\n          this.buildSchedulerEventList(forecast.data);\n          this.buildAssetMap(forecast.data);\n          this.buildTopAssetList(forecast.data);\n\n          this.adjustEndDateOfSchedulerEventList();\n\n          this.updateSchedulerView();\n\n          setTimeout(() => {\n            this.scheduler.schedulerEngine.zoomToFit();\n\n            this.schedulerZoomLevel =\n              this.scheduler.schedulerEngine.zoomLevel > ForecastFormComponent.TIME_RESOLUTION_MAX_ZOOM\n                ? ForecastFormComponent.TIME_RESOLUTION_MAX_ZOOM\n                : this.scheduler.schedulerEngine.zoomLevel < ForecastFormComponent.TIME_RESOLUTION_MIN_ZOOM\n                ? ForecastFormComponent.TIME_RESOLUTION_MIN_ZOOM\n                : this.scheduler.schedulerEngine.zoomLevel;\n\n            this.schedulerLoading = false;\n          });\n\n          if (loadOption === ForecastLoadOption.OPTIMIZE) {\n            this.messageService.showSuccessMessage(this.getTranslateKey('successOnLaunchOptimizer'));\n          }\n        }\n      }\n    });\n  }\n\n  private mergeFilteredEvents(): void {\n    const eventMap = new Map<string, GenericEventModel[]>();\n\n    this.filteredEventList\n      .filter((event) => {\n        return (\n          !this.forecastFormService.isFlightSchedulerEventType(event.eventType) &&\n          !this.forecastFormService.isWorkPackageSchedulerEventType(event.eventType)\n        );\n      })\n      .forEach((event) => {\n        const eventKey = `${event.resourceId}#${event.startDate}`;\n        if (!eventMap.has(eventKey)) {\n          eventMap.set(eventKey, []);\n        }\n        eventMap.set(eventKey, [...eventMap.get(eventKey), event]);\n      });\n\n    [...eventMap.values()]\n      .filter((eventList) => eventList.length > 1)\n      .forEach((eventToMergeList) => {\n        // 1. Remove all events with same date from eventList\n        const eventToMergeIdList = eventToMergeList.map((event) => event.id);\n        this.filteredEventList = this.filteredEventList.filter((event) => !eventToMergeIdList.includes(event.id));\n\n        // 2. Add a new event regrouping all events at given date\n        const defectList = this.forecastFormService.getDefectList(eventToMergeList);\n        const llpAlertList = this.forecastFormService.getLlpAlertList(eventToMergeList);\n        const scheduledEventList = this.forecastFormService.getScheduledEventList(eventToMergeList);\n        const snChangeList = this.forecastFormService.getSnChangeList(eventToMergeList);\n        const unscheduledEventList = this.forecastFormService.getUnscheduledEventList(eventToMergeList);\n\n        const upcomingEventsCount =\n          defectList.length +\n          llpAlertList.length +\n          scheduledEventList.length +\n          snChangeList.length +\n          unscheduledEventList.length;\n\n        const eventGroup: EventGroupModel = {\n          defectList,\n          llpAlertList,\n          scheduledEventList,\n          snChangeList,\n          unscheduledEventList,\n          id: this.generateSchedulerEventId(),\n          resourceId: eventToMergeList[0].resourceId,\n          startDate: eventToMergeList[0].startDate,\n          endDate: eventToMergeList[0].endDate,\n          name:\n            upcomingEventsCount > ForecastFormComponent.EVENT_GROUP_MAX_VALUE_DISPLAYED\n              ? ForecastFormComponent.EVENT_GROUP_MAX_VALUE_LABEL\n              : `${upcomingEventsCount}`,\n          eventType: EventModelType.EVENT_GROUP,\n          resizable: false\n        };\n        this.setEventGroupColor(eventGroup);\n\n        this.filteredEventList.push(eventGroup);\n      });\n  }\n\n  private registerEventUpdateObservable(): void {\n    this.forecastFormService.eventGroupPlannedDateUpdate$.pipe(takeUntil(this.unsubscribe)).subscribe({\n      next: (data: {\n        eventGroup: EventGroupModel;\n        events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n        plannedDate: Date;\n      }) => {\n        this.updatePlannedDateForEventGroup(data).subscribe({\n          next: () => {\n            this.updateSchedulerView();\n          }\n        });\n      }\n    });\n\n    this.forecastFormService.eventsAddedToWorkPackage$.pipe(takeUntil(this.unsubscribe)).subscribe({\n      next: (data: { events: EventModel<MaintenanceForecastingUpcomingEvent>[]; workPackage: BidmProjectDTO }) => {\n        this.addUpcomingEventsToWorkPackage(data).subscribe({\n          next: () => {\n            this.updateSchedulerView();\n          }\n        });\n      }\n    });\n\n    this.forecastFormService.eventsRemovedFromWorkPackage$.pipe(takeUntil(this.unsubscribe)).subscribe({\n      next: (data: { events: EventModel<MaintenanceForecastingUpcomingEvent>[]; workPackage: BidmProjectDTO }) => {\n        this.removeUpcomingEventsFromWorkPackage(data).subscribe({\n          next: () => {\n            this.updateSchedulerView();\n          }\n        });\n      }\n    });\n\n    this.forecastFormService.scheduledEventPlannedDateUpdate$.pipe(takeUntil(this.unsubscribe)).subscribe({\n      next: (data: { event: EventModel<MaintenanceForecastingScheduledEvent>; plannedDate: Date }) => {\n        this.updatePlannedDateForScheduledEvent(\n          data.event as EventModel<MaintenanceForecastingScheduledEvent>,\n          data.plannedDate\n        ).subscribe({\n          next: () => {\n            this.updateSchedulerView();\n          }\n        });\n      }\n    });\n\n    this.forecastFormService.unscheduledEventCreate$.pipe(takeUntil(this.unsubscribe)).subscribe({\n      next: (data: { event: BsdeEventDTO }) => {\n        this.forecastFormService.createBsdeEvent(data.event).subscribe({\n          next: () => {\n            this.messageService.showSuccessMessage('successMessage.createUnscheduledEvent');\n\n            this.reloadForecast(undefined); // TODO: avoid full reload\n          }\n        });\n      }\n    });\n\n    this.forecastFormService.unscheduledEventUpdate$.pipe(takeUntil(this.unsubscribe)).subscribe({\n      next: (data: { event: EventModel<MaintenanceForecastingUnscheduledEvent> }) => {\n        this.updatePlannedDateForUnscheduledEvent(data.event, data.event._obj.bsdeEvent.plannedDate as Date).subscribe({\n          next: () => {\n            this.updateSchedulerView();\n          }\n        });\n      }\n    });\n  }\n\n  private registerForecastFilteringObservable(): void {\n    this.forecastFormService.forecastFiltering$.pipe(takeUntil(this.unsubscribe)).subscribe({\n      next: () => {\n        this.updateSchedulerView();\n      }\n    });\n  }\n\n  private registerSchedulerBeforeDragCreateFinalize(): void {\n    this.scheduler.schedulerEngine.on('beforeDragCreateFinalize', ({ context }: { context: SchedulerDragContext }) => {\n      context.async = true;\n\n      this.selectedAsset = this.getAssetFromResourceId(context.resourceRecord.id);\n      this.selectedEndDate = context.endDate;\n      this.selectedStartDate = context.startDate;\n      this.showWorkPackageCreateDialog = true;\n\n      context.finalize(false);\n    });\n  }\n\n  private registerSchedulerBeforeEventdropfinalize(): void {\n    this.scheduler.schedulerEngine.on('beforeeventdropfinalize', ({ context }: { context: SchedulerDropContext }) => {\n      context.async = true;\n\n      let dropStatus = false;\n\n      if (this.forecastFormService.isWorkPackageSchedulerEventType(context.record.data.eventType)) {\n        if (context.targetEventRecord || context.newResource.id !== context.record.data.resourceId) {\n          this.messageService.showWarningMessage(this.getTranslateKey('warningOnInvalidOperation'));\n        } else {\n          dropStatus = true;\n        }\n      } else if (this.forecastFormService.isEventGroupSchedulerEventType(context.record.data.eventType)) {\n        if (context.targetEventRecord) {\n          if (\n            !this.forecastFormService.isWorkPackageSchedulerEventType(context.targetEventRecord.data.eventType) ||\n            (context.newResource.id !== context.record.data.resourceId &&\n              !this.getAllParentResourceIds(context.record.data.resourceId).includes(context.newResource.id))\n          ) {\n            this.messageService.showWarningMessage(this.getTranslateKey('warningOnInvalidOperation'));\n          } else {\n            const eventGroup = context.record.data as EventGroupModel;\n            const eventsInEventGroup = [\n              ...eventGroup.defectList,\n              ...eventGroup.llpAlertList,\n              ...eventGroup.scheduledEventList,\n              ...eventGroup.snChangeList,\n              ...eventGroup.unscheduledEventList\n            ];\n            const hasEventAlreadyAffected = eventsInEventGroup.some((event) =>\n              ObjectUtils.isDefined((event as EventModel<MaintenanceForecastingUpcomingEvent>)._obj.affectedWorkPackage)\n            );\n            if (hasEventAlreadyAffected) {\n              this.messageService.showWarningMessage(\n                this.getTranslateKey('warningOnSomeEventsAlreadyAffectedToWorkPackage')\n              );\n            } else {\n              this.confirmationService.confirm({\n                interpolateParams: {\n                  value: (context.targetEventRecord.data as EventModel<MaintenanceForecastingWorkPackage>)._obj\n                    .bidmProject.projectNumber\n                },\n                messageKey: this.getTranslateKey('confirmAddToWorkPackage'),\n                accept: () => {\n                  this.addUpcomingEventsToWorkPackage({\n                    events: eventsInEventGroup,\n                    workPackage: ((context.targetEventRecord as SchedulerEventRecord<GenericEventModel>)\n                      .data as EventModel<MaintenanceForecastingWorkPackage>)._obj.bidmProject\n                  }).subscribe({\n                    next: () => {\n                      this.updateSchedulerView();\n                    }\n                  });\n                }\n              });\n            }\n          }\n        } else if (\n          !this.forecastFormService.isValidPlannedDateForEventGroup(\n            context.record.data as EventGroupModel,\n            context.endDate\n          )\n        ) {\n          this.messageService.showWarningMessage(\n            this.getTranslateKey('warningOnChosenDatePosteriorToSomeNotToExceedDate')\n          );\n        } else {\n          dropStatus = true;\n        }\n      } else if (\n        this.forecastFormService.isDefectSchedulerEventType(context.record.data.eventType) ||\n        this.forecastFormService.isScheduledEventSchedulerEventType(context.record.data.eventType) ||\n        this.forecastFormService.isUnscheduledEventSchedulerEventType(context.record.data.eventType)\n      ) {\n        if (context.targetEventRecord) {\n          if (\n            !this.forecastFormService.isWorkPackageSchedulerEventType(context.targetEventRecord.data.eventType) ||\n            (context.newResource.id !== context.record.data.resourceId &&\n              !this.getAllParentResourceIds(context.record.data.resourceId).includes(context.newResource.id))\n          ) {\n            this.messageService.showWarningMessage(this.getTranslateKey('warningOnInvalidOperation'));\n          } else {\n            this.confirmationService.confirm({\n              interpolateParams: {\n                value: (context.targetEventRecord.data as EventModel<MaintenanceForecastingWorkPackage>)._obj\n                  .bidmProject.projectNumber\n              },\n              messageKey: this.getTranslateKey('confirmAddToWorkPackage'),\n              accept: () => {\n                this.handleUpcomintEventAddedToWorkPackage(\n                  context.record.data as EventModel<MaintenanceForecastingUpcomingEvent>,\n                  ((context.targetEventRecord as SchedulerEventRecord<GenericEventModel>).data as EventModel<\n                    MaintenanceForecastingWorkPackage\n                  >)._obj.bidmProject.projectId as string,\n                  this.getAssetFromResourceId(context.record.data.resourceId)\n                ).subscribe({\n                  next: () => {\n                    this.updateSchedulerView();\n                  }\n                });\n              }\n            });\n          }\n        } else if (\n          (this.forecastFormService.isDefectSchedulerEventType(context.record.data.eventType) ||\n            this.forecastFormService.isScheduledEventSchedulerEventType(context.record.data.eventType)) &&\n          moment(context.endDate).isAfter(moment(context.record.data.maxEndDate))\n        ) {\n          this.messageService.showWarningMessage(this.getTranslateKey('warningOnChosenDatePosteriorToNotToExceedDate'));\n        } else {\n          dropStatus = true;\n        }\n      }\n\n      context.finalize(dropStatus);\n    });\n  }\n\n  private registerSchedulerBeforeEventEdit(): void {\n    this.scheduler.schedulerEngine.on(\n      'beforeEventEdit',\n      ({ eventRecord }: { eventRecord: SchedulerEventRecord<GenericEventModel> }) => {\n        const eventModel = eventRecord.data;\n        const eventModelType = this.getEventModelType(eventModel);\n\n        this.selectedEventModel = eventModel;\n\n        if (this.forecastFormService.isDefectSchedulerEventType(eventModelType)) {\n          this.showDefectDialog = true;\n        } else if (this.forecastFormService.isFlightSchedulerEventType(eventModelType)) {\n          this.forecastFormService.openFlight((eventModel as EventModel<BidoMissionEquipmentDTO>)._obj);\n        } else if (this.forecastFormService.isEventGroupSchedulerEventType(eventModelType)) {\n          this.showEventGroupDialog = true;\n        } else if (this.forecastFormService.isScheduledEventSchedulerEventType(eventModelType)) {\n          this.showScheduledEventDialog = true;\n        } else if (this.forecastFormService.isUnscheduledEventSchedulerEventType(eventModelType)) {\n          this.showUnscheduledEventDialog = true;\n        } else if (this.forecastFormService.isWorkPackageSchedulerEventType(eventModelType)) {\n          this.showWorkPackageUpdateDialog = true;\n        }\n\n        return false;\n      }\n    );\n  }\n\n  private registerSchedulerCellClick(): void {\n    this.scheduler.schedulerEngine.on(\n      'cellClick',\n      ({ cellElement, record }: { cellElement: HTMLElement; record: ResourceModel }) => {\n        if (cellElement.classList.contains('b-tree-cell')) {\n          cellElement.classList.remove('b-focused');\n          cellElement.classList.remove('b-selected');\n          if (cellElement.parentElement) {\n            cellElement.parentElement.classList.remove('b-selected');\n          }\n\n          if (this.selectedAssets.includes(record.asset)) {\n            cellElement.classList.remove('resource-selected');\n\n            this.selectedAssets = this.selectedAssets.filter((selectedAsset) => selectedAsset !== record.asset);\n          } else {\n            cellElement.classList.add('resource-selected');\n\n            this.selectedAssets = [...this.selectedAssets, record.asset];\n          }\n        }\n      }\n    );\n  }\n\n  private registerSchedulerClick(): void {\n    this.scheduler.schedulerEngine.on('scheduleClick', () => {\n      this.clearHighlight();\n    });\n  }\n\n  private registerSchedulerEventClick(): void {\n    this.scheduler.schedulerEngine.on(\n      'eventClick',\n      ({ eventRecord }: { eventRecord: SchedulerEventRecord<GenericEventModel> }) => {\n        const eventModelType = this.getEventModelType(eventRecord.data);\n\n        if (\n          this.forecastFormService.isDefectSchedulerEventType(eventModelType) ||\n          this.forecastFormService.isScheduledEventSchedulerEventType(eventModelType) ||\n          this.forecastFormService.isUnscheduledEventSchedulerEventType(eventModelType) ||\n          this.forecastFormService.isEventGroupSchedulerEventType(eventModelType)\n        ) {\n          if (this.getEventClasses(eventRecord.data).includes(ForecastFormComponent.EVENT_HIGHLIGHT_CLS)) {\n            this.clearHighlight();\n          } else {\n            this.highlightWorkPackagesAssociatedToEvent(eventRecord.data);\n          }\n        } else if (this.forecastFormService.isWorkPackageSchedulerEventType(eventModelType)) {\n          if (this.getEventClasses(eventRecord.data).includes(ForecastFormComponent.WORK_PACKAGE_HIGHLIGHT_CLS)) {\n            this.clearHighlight();\n          } else {\n            this.highlightEventsAssociatedToWorkPackage(\n              eventRecord.data as EventModel<MaintenanceForecastingWorkPackage>\n            );\n          }\n        } else {\n          this.clearHighlight();\n        }\n      }\n    );\n  }\n\n  private registerSchedulerEventDrop(): void {\n    this.scheduler.schedulerEngine.on(\n      'eventDrop',\n      ({ eventRecords }: { eventRecords: SchedulerEventRecord<GenericEventModel>[] }) => {\n        const eventRecord = eventRecords[0];\n        const eventModel = eventRecord.data;\n        const eventModelType = this.getEventModelType(eventModel);\n\n        if (this.forecastFormService.isDefectSchedulerEventType(eventModelType)) {\n          this.updateDefectDates(eventModel as EventModel<MaintenanceForecastingDefect>, eventModel.startDate);\n        } else if (this.forecastFormService.isScheduledEventSchedulerEventType(eventModelType)) {\n          this.updatePlannedDateForScheduledEvent(\n            eventModel as EventModel<MaintenanceForecastingScheduledEvent>,\n            eventModel.startDate\n          ).subscribe({\n            next: () => {\n              this.updateSchedulerView();\n            }\n          });\n        } else if (this.forecastFormService.isUnscheduledEventSchedulerEventType(eventModelType)) {\n          this.updatePlannedDateForUnscheduledEvent(\n            eventModel as EventModel<MaintenanceForecastingUnscheduledEvent>,\n            eventModel.startDate\n          ).subscribe({\n            next: () => {\n              this.updateSchedulerView();\n            }\n          });\n        } else if (this.forecastFormService.isEventGroupSchedulerEventType(eventModelType)) {\n          const eventGroup = eventModel as EventGroupModel;\n\n          this.updatePlannedDateForEventGroup({\n            eventGroup,\n            events: [\n              ...eventGroup.defectList,\n              ...eventGroup.llpAlertList,\n              ...eventGroup.scheduledEventList,\n              ...eventGroup.snChangeList,\n              ...eventGroup.unscheduledEventList\n            ],\n            plannedDate: eventModel.endDate as Date\n          }).subscribe({\n            next: () => {\n              this.updateSchedulerView();\n            }\n          });\n        } else if (this.forecastFormService.isWorkPackageSchedulerEventType(eventModelType)) {\n          this.updateWorkPackageDates(\n            eventModel as EventModel<MaintenanceForecastingWorkPackage>,\n            eventModel.startDate,\n            eventModel.endDate as Date\n          );\n        }\n      }\n    );\n  }\n\n  private registerSchedulerEventResizeEnd(): void {\n    this.scheduler.schedulerEngine.on(\n      'eventResizeEnd',\n      ({ eventRecord }: { eventRecord: SchedulerEventRecord<GenericEventModel> }) => {\n        const eventModel = eventRecord.data;\n        const eventModelType = this.getEventModelType(eventModel);\n\n        if (this.forecastFormService.isWorkPackageSchedulerEventType(eventModelType)) {\n          this.updateWorkPackageDates(\n            eventModel as EventModel<MaintenanceForecastingWorkPackage>,\n            eventModel.startDate,\n            eventModel.endDate as Date\n          );\n        }\n      }\n    );\n  }\n\n  private registerSchedulerListeners(): void {\n    EventHelper.addListener(this.scheduler.schedulerEngine.element, {\n      element: this.scheduler.schedulerEngine.element,\n      click: (event: MouseEvent) => {\n        const eventTarget = event.target as HTMLElement;\n        if (\n          eventTarget.classList.contains(ForecastFormComponent.ASSET_NAME_CLS) &&\n          ObjectUtils.isDefined(this.assetMap.get(eventTarget.id))\n        ) {\n          this.forecastFormService.openAsset(this.assetMap.get(eventTarget.id) as BidoEquipmentDTO);\n        }\n      }\n    });\n  }\n\n  private registerSchedulerTimeResolutionObservable(): void {\n    this.schedulerTimeResolutionChanged.pipe(distinctUntilChanged(), takeUntil(this.unsubscribe)).subscribe({\n      next: (value) => {\n        this.scheduler.schedulerEngine.zoomTo(value);\n      }\n    });\n  }\n\n  private removeUpcomingEventsFromWorkPackage(data: {\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    workPackage: BidmProjectDTO;\n  }): Observable<unknown> {\n    const asset = this.getAssetFromResourceId(data.events[0].resourceId);\n\n    let observable = this.handleUpcomintEventRemovedFromWorkPackage(\n      data.events[0],\n      data.workPackage.projectId as string,\n      asset\n    );\n    data.events.slice(1).forEach((event) => {\n      observable = observable.pipe(\n        concatMap(() =>\n          this.handleUpcomintEventRemovedFromWorkPackage(event, data.workPackage.projectId as string, asset)\n        )\n      );\n    });\n\n    return observable;\n  }\n\n  private removeWorkPackage(eventModel: EventModel<MaintenanceForecastingWorkPackage>): void {\n    const workPackageToRemove = eventModel._obj.bidmProject;\n\n    this.confirmationService.confirmDelete({\n      messageKey: 'confirmationMessage.removeWorkPackage',\n      accept: () => {\n        const input: BidmProjectDTOId = {\n          projectId: workPackageToRemove.projectId as string\n        };\n        this.forecastFormService.removeBidmProject(input).subscribe({\n          next: () => {\n            // Remove work package from materialAvailabilityByWorkPackage map\n            this.materialAvailabilityByWorkPackage.delete(workPackageToRemove.projectId as string);\n\n            // Remove work package from scheduler events\n            this.eventList = this.eventList.filter((event) => event.id !== eventModel.id);\n\n            // Update upcoming events associated to that work package\n            const updateEventAssociatedToWorkPackage = (event: EventModel<MaintenanceForecastingUpcomingEvent>) => {\n              if (\n                event._obj.affectedWorkPackage &&\n                event._obj.affectedWorkPackage.projectId === workPackageToRemove.projectId\n              ) {\n                event._obj.affectedWorkPackage = undefined;\n\n                const newStatus = this.forecastFormService.calculateUpcomingEventStatus(\n                  event.endDate as Date,\n                  undefined\n                );\n\n                this.setEventColor(event, newStatus);\n              }\n            };\n\n            this.eventList.forEach((genericEvent) => {\n              if (\n                this.forecastFormService.isDefectSchedulerEventType(genericEvent.eventType) ||\n                this.forecastFormService.isScheduledEventSchedulerEventType(genericEvent.eventType) ||\n                this.forecastFormService.isUnscheduledEventSchedulerEventType(genericEvent.eventType)\n              ) {\n                updateEventAssociatedToWorkPackage(genericEvent as EventModel<MaintenanceForecastingUpcomingEvent>);\n              } else if (this.forecastFormService.isEventGroupSchedulerEventType(genericEvent.eventType)) {\n                const eventGroup = genericEvent as EventGroupModel;\n\n                eventGroup.defectList.forEach(updateEventAssociatedToWorkPackage);\n                eventGroup.llpAlertList.forEach(updateEventAssociatedToWorkPackage);\n                eventGroup.scheduledEventList.forEach(updateEventAssociatedToWorkPackage);\n                eventGroup.snChangeList.forEach(updateEventAssociatedToWorkPackage);\n                eventGroup.unscheduledEventList.forEach(updateEventAssociatedToWorkPackage);\n\n                this.setEventGroupColor(eventGroup);\n              }\n            });\n\n            this.messageService.showSuccessMessage('successMessage.removeWorkPackage');\n\n            this.updateSchedulerView();\n          }\n        });\n      }\n    });\n  }\n\n  public displayAssetRequiredAvailabilitiesDialog() {\n    this.showAssetRequiredAvailabilitiesDialog = true;\n  }\n\n  public displayResourcesdAvailabilitiesDialog() {\n    this.showResourcesdAvailabilitiesDialog = true;\n  }\n\n  private setActions(): void {\n    const configureAssetRequiredAvailabilitiesKey = this.getTranslateKey('configureAssetRequiredAvailabilities');\n    const configureResourcesAvailabilitiesKey = this.getTranslateKey('configureResourcesAvailabilities');\n    const editProjectHeaderKey = this.getTranslateKey('editProjectHeader');\n    const launchOptimizerKey = this.getTranslateKey('launchOptimizer');\n    this.translateService\n      .get([\n        configureAssetRequiredAvailabilitiesKey,\n        configureResourcesAvailabilitiesKey,\n        editProjectHeaderKey,\n        launchOptimizerKey\n      ])\n      .subscribe({\n        next: (translations: { [key: string]: string }) => {\n          this.actions = [\n            {\n              label: translations[editProjectHeaderKey],\n              command: () => {\n                this.manageForecastProject();\n              }\n            },\n            {\n              label: translations[configureAssetRequiredAvailabilitiesKey],\n              command: () => {\n                this.showAssetRequiredAvailabilitiesDialog = true;\n              }\n            },\n            {\n              label: translations[configureResourcesAvailabilitiesKey],\n              command: () => {\n                this.showResourcesdAvailabilitiesDialog = true;\n              }\n            },\n            {\n              label: translations[launchOptimizerKey],\n              command: () => {\n                this.launchOptimizer();\n              }\n            }\n          ];\n        }\n      });\n  }\n\n  private setComponentContext(): void {\n    this.componentContext = ObjectUtils.isDefined(this.forecastProjectId)\n      ? `${this.forecastProject.projectNumber} | ${this.forecastProject.projectName}`\n      : 'tab.createMode';\n    this.displayComponentContext(this.componentContext, this.isCreateOpenMode);\n  }\n\n  private setEventCls(event: GenericEventModel, classes: string[]): void {\n    event.cls = classes.join(' ');\n  }\n\n  private setEventColor(event: GenericEventModel, status: UpcomingEventStatus): void {\n    event.eventColor = ForecastFormService.EVENT_COLOR_EVENT[status];\n\n    this.updateEventCls(event);\n  }\n\n  private setEventContextMenu(eventModel: GenericEventModel, items: { [key: string]: ContextMenuItem }): void {\n    const eventModelType = this.getEventModelType(eventModel);\n\n    if (\n      this.forecastFormService.isDefectSchedulerEventType(eventModelType) ||\n      this.forecastFormService.isScheduledEventSchedulerEventType(eventModelType) ||\n      this.forecastFormService.isUnscheduledEventSchedulerEventType(eventModelType)\n    ) {\n      this.setEventContextMenuForUpcomingEvent(eventModel as EventModel<MaintenanceForecastingUpcomingEvent>, items);\n    } else if (this.forecastFormService.isWorkPackageSchedulerEventType(eventModelType)) {\n      this.setEventContextMenuForWorkPackage(eventModel as EventModel<MaintenanceForecastingWorkPackage>, items);\n    } else if (this.forecastFormService.isEventGroupSchedulerEventType(eventModelType)) {\n      this.setEventContextMenuForUpcomingEventGroup(items);\n    } else if (this.forecastFormService.isFlightSchedulerEventType(eventModelType)) {\n      this.setEventContextMenuForFlight(items);\n    }\n  }\n\n  private setEventContextMenuForFlight(items: { [key: string]: ContextMenuItem }): void {\n    items.editEvent.text = this.translateService.instant('openFlight') as string;\n    items.editEvent.icon = '';\n  }\n\n  private setEventContextMenuForUpcomingEvent(\n    eventModel: EventModel<MaintenanceForecastingUpcomingEvent>,\n    items: { [key: string]: ContextMenuItem }\n  ): void {\n    items.editEvent.text = this.translateService.instant(this.getTranslateKey('editMainInformation')) as string;\n    items.editEvent.icon = '';\n\n    items.open = {\n      text: this.translateService.instant('openObject', {\n        value: this.translateService.instant(this.forecastFormService.getUpcomingEventKey(eventModel))\n      }) as string,\n      onItem: () => {\n        this.forecastFormService.openEvent(eventModel);\n      }\n    };\n\n    const asset = this.getAssetFromResourceId(eventModel.resourceId);\n\n    if (ObjectUtils.isDefined(eventModel._obj.affectedWorkPackage)) {\n      const contextMenuEntryPrefix = this.translateService.instant('removeFromWorkPackage');\n      const workPackage = eventModel._obj.affectedWorkPackage as BidmProjectDTO;\n\n      items[`${contextMenuEntryPrefix}${workPackage.projectId}`] = {\n        text: `${contextMenuEntryPrefix} n°${workPackage.projectNumber}`,\n        onItem: () => {\n          this.handleUpcomintEventRemovedFromWorkPackage(eventModel, workPackage.projectId as string, asset).subscribe({\n            next: () => {\n              this.updateSchedulerView();\n            }\n          });\n        }\n      };\n    } else {\n      const contextMenuEntryPrefix = this.translateService.instant('addToWorkPackageNb');\n\n      this.eventList\n        .filter((event) => event.resourceId === eventModel.resourceId)\n        .filter((event) => this.forecastFormService.isWorkPackageSchedulerEventType(event.eventType))\n        .map((event) => (event as EventModel<MaintenanceForecastingWorkPackage>)._obj.bidmProject)\n        .sort(this.forecastFormService.sortWorkPackages)\n        .forEach((workPackage) => {\n          items[`${contextMenuEntryPrefix}${workPackage.projectId}`] = {\n            text: `${contextMenuEntryPrefix} ${workPackage.projectNumber}`,\n            onItem: () => {\n              this.handleUpcomintEventAddedToWorkPackage(eventModel, workPackage.projectId as string, asset).subscribe({\n                next: () => {\n                  this.updateSchedulerView();\n                }\n              });\n            }\n          };\n        });\n    }\n  }\n\n  private setEventContextMenuForUpcomingEventGroup(items: { [key: string]: ContextMenuItem }): void {\n    items.editEvent.text = this.translateService.instant(this.getTranslateKey('updatePlannedDate')) as string;\n    items.editEvent.icon = '';\n\n    items.updatePlannedDateForSubset = {\n      text: this.translateService.instant(this.getTranslateKey('manageUpcomingEvents')) as string,\n      onItem: ({ eventRecord }: { eventRecord: SchedulerEventRecord<GenericEventModel> }) => {\n        const eventModel = eventRecord.data;\n\n        this.selectedEventModel = eventModel;\n        this.selectedStartDate = eventModel.startDate;\n        this.showEventGroupDialog = true;\n      }\n    };\n  }\n\n  private setEventContextMenuForWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingWorkPackage>,\n    items: { [key: string]: ContextMenuItem }\n  ): void {\n    items.editEvent.text = this.translateService.instant(this.getTranslateKey('editMainInformation')) as string;\n    items.editEvent.icon = '';\n\n    items.openWorkPackage = {\n      text: this.translateService.instant(this.getTranslateKey('openWorkPackage')) as string,\n      onItem: () => {\n        this.forecastFormService.openWorkPackage(eventModel._obj.bidmProject);\n      }\n    };\n\n    items.materialAvailability = {\n      text: this.translateService.instant(this.getTranslateKey('openMaterialAvailability')) as string,\n      onItem: () => {\n        this.forecastFormService.openMaterialAvailability(eventModel._obj.bidmProject.projectId as string);\n      }\n    };\n\n    items.openWorkOrders = {\n      text: this.translateService.instant(this.getTranslateKey('openWorkOrders')) as string,\n      onItem: () => {\n        this.forecastFormService.openWorkOrders(eventModel._obj.bidmProject);\n      }\n    };\n\n    if (\n      eventModel._obj.bidmProject.statusState === AWPropertiesConstants.AIRM_PROJECT_STATUS_SIMULATED ||\n      eventModel._obj.bidmProject.statusState === AWPropertiesConstants.AIRM_PROJECT_STATUS_SCHEDULED\n    ) {\n      items.goToNextWorkPackageStatus = {\n        text: this.getNextWorkPackageStatusLabel(eventModel._obj.bidmProject),\n        onItem: () => {\n          this.forecastFormService.setWorkPackageToNextStatus(eventModel._obj.bidmProject);\n          this.updateWorkPackage(eventModel);\n        }\n      };\n    }\n\n    if (\n      eventModel._obj.bidmProject.statusState === AWPropertiesConstants.AIRM_PROJECT_STATUS_RELEASED ||\n      eventModel._obj.bidmProject.statusState === AWPropertiesConstants.AIRM_PROJECT_STATUS_SCHEDULED\n    ) {\n      items.goToPreviousWorkPackageStatus = {\n        text: this.getPreviousWorkPackageStatusLabel(eventModel._obj.bidmProject),\n        onItem: () => {\n          this.forecastFormService.setWorkPackageToPreviousStatus(eventModel._obj.bidmProject);\n          this.updateWorkPackage(eventModel);\n        }\n      };\n    }\n\n    if (eventModel._obj.bidmProject.statusState === AWPropertiesConstants.AIRM_PROJECT_STATUS_SIMULATED) {\n      items.removeWorkPackage = {\n        text: this.translateService.instant('removeWorkPackage') as string,\n        onItem: () => {\n          this.removeWorkPackage(eventModel);\n        }\n      };\n    }\n  }\n\n  private setEventGroupColor(eventGroup: EventGroupModel): void {\n    const eventList = [\n      ...eventGroup.defectList,\n      ...eventGroup.llpAlertList,\n      ...eventGroup.scheduledEventList,\n      ...eventGroup.snChangeList,\n      ...eventGroup.unscheduledEventList\n    ];\n\n    const atLeastOneInPast = eventList.some(\n      (event) => event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.IN_PAST]\n    );\n    const atLeastOneNok =\n      !atLeastOneInPast &&\n      eventList.some((event) => event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.NOK]);\n    const atLeastOneWarn =\n      !atLeastOneNok &&\n      !atLeastOneInPast &&\n      eventList.some((event) => event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.WARN]);\n\n    eventGroup.eventColor =\n      ForecastFormService.EVENT_COLOR_EVENT[\n        atLeastOneInPast\n          ? UpcomingEventStatus.IN_PAST\n          : atLeastOneNok\n          ? UpcomingEventStatus.NOK\n          : atLeastOneWarn\n          ? UpcomingEventStatus.WARN\n          : UpcomingEventStatus.OK\n      ];\n\n    this.updateEventCls(eventGroup);\n  }\n\n  private setForecastCategory(): void {\n    if (this.forecastProject.projectFleetCode) {\n      this.selectedForecastCategory = ForecastCategory.FLEET;\n    } else if (this.forecastProjectAsset) {\n      this.selectedForecastCategory = ForecastCategory.ASSET;\n    }\n  }\n\n  private setForecastCategoryList(): void {\n    const assetKey = 'asset';\n    const fleetKey = 'fleet';\n    this.translateService.get([assetKey, fleetKey]).subscribe({\n      next: (results: { [key: string]: string }) => {\n        const assetLabel = !!results ? results[assetKey] : 'Asset';\n        const fleetLabel = !!results ? results[fleetKey] : 'Fleet';\n        this.forecastCategoryList = [\n          { label: assetLabel, value: ForecastCategory.ASSET },\n          { label: fleetLabel, value: ForecastCategory.FLEET }\n        ];\n      }\n    });\n  }\n\n  private setForecastCustomerCode(): void {\n    if (ObjectUtils.isDefined(this.forecastProject.customerCode)) {\n      const matchingCustomer = this.customerList.find(\n        (customer) => customer.value.customerCode === this.forecastProject.customerCode\n      );\n      this.selectedCustomer = ObjectUtils.isDefined(matchingCustomer)\n        ? (matchingCustomer as LabelValue<BidoCustomerDTO>).value\n        : undefined;\n    }\n  }\n\n  private setForecastRepairCenterCode(): void {\n    if (ObjectUtils.isDefined(this.forecastProject.repairCenterCode)) {\n      this.selectedRepairCenter = this.getForecastRepairCenter();\n    }\n  }\n  private setForecastWorkCenterCode(): void {\n    if (ObjectUtils.isDefined(this.forecastProject.whId)) {\n      this.selectedWorkCenter = this.forecastProject.whId as number;\n    }\n  }\n\n  private setNavigations(): void {\n    const materialAvailabilityKey = 'materialAvailability';\n    const staffPlanningKey = 'staffPlanning';\n    this.translateService.get([materialAvailabilityKey, staffPlanningKey]).subscribe({\n      next: (translations: { [key: string]: string }) => {\n        this.navigations = [\n          {\n            label: translations[materialAvailabilityKey],\n            command: () => {\n              this.openMaterialAvailabilityForAllWorkPackage();\n            }\n          },\n          {\n            label: translations[staffPlanningKey],\n            command: () => {\n              this.openStaffPlanning();\n            }\n          }\n        ];\n      }\n    });\n  }\n\n  private setOccurrenceList(): void {\n    const OCCURRENCE_MAX_VALUE = 5; // TODO: get value from backend\n    this.occurrenceList = Array.from(Array(OCCURRENCE_MAX_VALUE + 1).keys())\n      .slice(1)\n      .map((value) => {\n        return {\n          value,\n          label: value.toString()\n        };\n      });\n  }\n\n  private setProjectAttributeList(attributeList: BsdeProjectAttributeDTO[] | undefined): void {\n    ListUtils.orEmpty(attributeList)\n      .filter((attribute) => !StringUtils.isNullOrEmpty(attribute.attributeValue))\n      .forEach((attribute) => {\n        const attributeValue = attribute.attributeValue as string;\n\n        if (attribute.attributeId === BsdeAttributeConstants.MFO_LLP_EVENTS_GENERATION) {\n          this.forecastProjectLlpEventsGeneration = BooleanUtils.isTrue(attributeValue);\n        } else if (attribute.attributeId === BsdeAttributeConstants.MFO_OCCURRENCE_NUMBER_OPTION) {\n          this.forecastProjectOccurrenceNumber = NumberUtils.fromString(attributeValue);\n        }\n      });\n  }\n\n  private setSchedulerColumnList(): void {\n    this.columnList = [\n      {\n        enableCellContextMenu: false,\n        htmlEncode: false,\n        locked: true,\n        text: this.translateService.instant('asset'),\n        type: 'tree',\n        width: ForecastFormComponent.COLUMN_ASSET_WIDTH,\n        renderer: ({ record }: { record: { data: ResourceModel } }) => {\n          let assetId: string | undefined;\n          this.assetMap.forEach((value, key) => {\n            if (value.equipmentCode === record.data.asset.equipmentCode) {\n              assetId = key;\n            }\n          });\n          const assetName = BidoEquipmentUtils.createAssetName(record.data.asset);\n\n          return `\n          <div class=\"asset\">\n            <div>${record.data.assetDescription}</div>\n            <div>\n              <a\n                id=\"${assetId}\"\n                class=\"${ForecastFormComponent.ASSET_NAME_CLS}\"\n                style=\"cursor: pointer; font-style: italic; font-weight: 600;\"\n              >\n                ${assetName}\n              </a>\n            </div>\n          </div>\n          `;\n        }\n      },\n      {\n        enableCellContextMenu: false,\n        field: 'flDescription',\n        locked: true,\n        text: this.translateService.instant('functionalLocation'),\n        width: ForecastFormComponent.COLUMN_FUNCTIONAL_LOCATION_WIDTH\n      }\n    ];\n  }\n\n  private setSchedulerConfig(): void {\n    this.schedulerConfig = {\n      cellEditFeature: false,\n      emptyText: '',\n      rowHeight: ForecastFormComponent.SCHEDULER_ROW_HEIGHT,\n      treeFeature: true,\n      zoomKeepsOriginalTimespan: true,\n      zoomOnMouseWheel: false,\n      zoomOnTimeAxisDoubleClick: false,\n\n      eventContextMenuFeature: {\n        items: {\n          deleteEvent: false,\n          unassignEvent: false\n        },\n        processItems: ({\n          eventRecord,\n          items\n        }: {\n          eventRecord: SchedulerEventRecord<GenericEventModel>;\n          items: { [key: string]: ContextMenuItem };\n        }) => {\n          this.setEventContextMenu(eventRecord.data, items);\n        }\n      },\n\n      eventDragFeature: {\n        constrainDragToResource: false\n      },\n\n      eventRenderer: ({\n        eventRecord,\n        tplData\n      }: {\n        eventRecord: SchedulerEventRecord<GenericEventModel>;\n        tplData: { style: string };\n      }) => {\n        const eventModel = eventRecord.data;\n        const eventModelType = this.getEventModelType(eventModel);\n\n        if (this.forecastFormService.isWorkPackageSchedulerEventType(eventModelType)) {\n          const workPackageModel = eventModel as EventModel<MaintenanceForecastingWorkPackage>;\n          const workPackageStatus = workPackageModel._obj.bidmProject.statusState as string;\n          if (\n            workPackageStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_SIMULATED ||\n            workPackageStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_RELEASED\n          ) {\n            tplData.style = 'color:black';\n          } else {\n            tplData.style = 'color:white';\n          }\n        }\n\n        return eventModel.name;\n      },\n\n      eventTooltipFeature: {\n        template: ({ eventRecord }: { eventRecord: SchedulerEventRecord<GenericEventModel> }) => {\n          return this.getEventTooltip(eventRecord.data);\n        }\n      },\n\n      scheduleContextMenuFeature: {\n        items: {\n          addEvent: false\n        }\n      },\n\n      scheduleTooltipFeature: {\n        getText: (date: Date, event: MouseEvent) => {\n          const resourceModel = this.scheduler.schedulerEngine.resolveResourceRecord(\n            DomHelper.elementFromPoint(event.clientX, event.clientY)\n          );\n\n          if (!resourceModel) {\n            return '';\n          }\n\n          const momentOfDate = moment(date);\n          const flightUsage = this.flightUsage\n            .filter((elt) => elt.asset === resourceModel.id)\n            .find((elt) => momentOfDate.isBetween(elt.startPeriod, elt.endPeriod, undefined, '[]'));\n\n          if (!ObjectUtils.isDefined(flightUsage)) {\n            return '';\n          }\n\n          return `\n            <div style=\"display: flex; flex-direction: row\">\n              <div style=\"width: 3rem\">${this.tsnLabel}</div>\n              <div>${(flightUsage as GetAllMaintenanceForecastingFlightUsageOutput).tsnMax}</div>\n            </div>`;\n        }\n      },\n\n      timeRangesFeature: {\n        showCurrentTimeLine: true\n      }\n    };\n  }\n\n  private setSchedulerEndDate(): void {\n    this.endDate = this.schedulerService.getLastEventEndDate(this.filteredEventList);\n  }\n\n  private setSchedulerResourceColumnWidth(): void {\n    this.scheduler.schedulerEngine.getSubGrid('locked').width = ForecastFormComponent.COLUMN_ASSET_WIDTH - 1;\n  }\n\n  private setSchedulerStartDate(): void {\n    this.startDate = this.schedulerService.getFirstEventStartDate(this.filteredEventList);\n  }\n\n  private setSchedulerTimeSpan(): void {\n    if (ObjectUtils.isDefined(this.startDate) && ObjectUtils.isDefined(this.endDate)) {\n      if (!!this.startDate && !!this.endDate && this.startDate.getTime() === this.endDate.getTime()) {\n        this.endDate.setTime(this.endDate.getTime() + 1);\n      }\n      this.scheduler.schedulerEngine.setTimeSpan(this.startDate as Date, this.endDate as Date);\n    }\n  }\n\n  private setTsnLabel(): void {\n    this.forecastFormService.getTsnLabel().subscribe({\n      next: (result) => {\n        this.tsnLabel = StringUtils.orEmpty(result);\n      }\n    });\n  }\n\n  private setWorkPackageColor(event: GenericEventModel, status): void {\n    event.eventColor = ForecastFormService.EVENT_COLOR_WORK_PACKAGE[status];\n\n    this.updateEventCls(event);\n  }\n\n  private updateAllEventStatusByAffectedWorkPackage(workPackage: BidmProjectDTO): void {\n    const hasAffectedWorkPackage = (event: EventModel<MaintenanceForecastingUpcomingEvent>) => {\n      return (\n        ObjectUtils.isDefined(event._obj.affectedWorkPackage) &&\n        (event._obj.affectedWorkPackage as BidmProjectDTO).projectNumber === workPackage.projectNumber\n      );\n    };\n\n    const updateEventColor = (event: EventModel<MaintenanceForecastingUpcomingEvent>) => {\n      const newStatus = this.forecastFormService.calculateUpcomingEventStatus(event.endDate as Date, workPackage);\n\n      this.setEventColor(event, newStatus);\n    };\n\n    this.eventList.forEach((genericEvent) => {\n      if (this.forecastFormService.isEventGroupSchedulerEventType(genericEvent.eventType)) {\n        const eventGroup = genericEvent as EventGroupModel;\n\n        eventGroup.defectList.filter(hasAffectedWorkPackage).forEach(updateEventColor);\n        eventGroup.llpAlertList.filter(hasAffectedWorkPackage).forEach(updateEventColor);\n        eventGroup.scheduledEventList.filter(hasAffectedWorkPackage).forEach(updateEventColor);\n        eventGroup.snChangeList.filter(hasAffectedWorkPackage).forEach(updateEventColor);\n        eventGroup.unscheduledEventList.filter(hasAffectedWorkPackage).forEach(updateEventColor);\n\n        this.setEventGroupColor(eventGroup);\n      } else {\n        const event = genericEvent as EventModel<MaintenanceForecastingUpcomingEvent>;\n\n        if (hasAffectedWorkPackage(event)) {\n          updateEventColor(event);\n        }\n      }\n    });\n  }\n\n  private updateDefect(defect: DeferredDefectEventDTO): Observable<unknown> {\n    return this.forecastFormService.updateBidoNotification(defect.bidoNotificationData as BidoNotificationDTO).pipe(\n      tap(() => {\n        this.messageService.showSuccessMessage('successMessage.updateDefect');\n      })\n    );\n  }\n\n  private updateDefectDates(eventModel: EventModel<MaintenanceForecastingDefect>, date: Date): void {\n    const defect = eventModel._obj.deferredDefectEvent as DeferredDefectEventDTO;\n    const notification = defect.bidoNotificationData as BidoNotificationDTO;\n\n    notification.reportingPeriodStartDate = date;\n    notification.reportingPeriodEndDate = date;\n\n    this.updateDefect(defect).subscribe({\n      next: () => {\n        this.updateSchedulerView();\n      }\n    });\n  }\n\n  private updateEventCls(event: GenericEventModel): void {\n    if (\n      this.forecastFormService.isDefectSchedulerEventType(event.eventType) ||\n      this.forecastFormService.isScheduledEventSchedulerEventType(event.eventType) ||\n      this.forecastFormService.isUnscheduledEventSchedulerEventType(event.eventType) ||\n      this.forecastFormService.isEventGroupSchedulerEventType(event.eventType)\n    ) {\n      this.updateUpcomingEventCls(event);\n    } else if (this.forecastFormService.isWorkPackageSchedulerEventType(event.eventType)) {\n      this.updateWorkPackageCls(event as EventModel<MaintenanceForecastingWorkPackage>);\n    }\n  }\n\n  private updatePlannedDateForEventGroup(data: {\n    eventGroup: EventGroupModel;\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    plannedDate: Date;\n  }): Observable<unknown> {\n    // Save modified events\n    const observables = data.events.map((genericEvent) => {\n      if (this.forecastFormService.isDefectSchedulerEventType(genericEvent.eventType)) {\n        const event = genericEvent as EventModel<MaintenanceForecastingDefect>;\n        event.startDate = data.plannedDate;\n        event.endDate = data.plannedDate;\n        event._obj.deferredDefectEvent.plannedDate = data.plannedDate;\n\n        return this.updateDefect(event._obj.deferredDefectEvent);\n      } else if (this.forecastFormService.isScheduledEventSchedulerEventType(genericEvent.eventType)) {\n        return this.updatePlannedDateForScheduledEvent(\n          genericEvent as EventModel<MaintenanceForecastingScheduledEvent>,\n          data.plannedDate\n        );\n      } else {\n        return this.updatePlannedDateForUnscheduledEvent(\n          genericEvent as EventModel<MaintenanceForecastingUnscheduledEvent>,\n          data.plannedDate\n        );\n      }\n    });\n\n    return forkJoin(observables);\n  }\n\n  private updatePlannedDateForScheduledEvent(\n    event: EventModel<MaintenanceForecastingScheduledEvent>,\n    date: Date\n  ): Observable<unknown> {\n    event.startDate = date;\n    event.endDate = date;\n    event._obj.bsdeScheduledEvent.plannedDate = date;\n\n    return this.updateScheduledEvent(event);\n  }\n\n  private updatePlannedDateForUnscheduledEvent(\n    event: EventModel<MaintenanceForecastingUnscheduledEvent>,\n    date: Date\n  ): Observable<unknown> {\n    event.startDate = date;\n    event.endDate = date;\n    event._obj.bsdeEvent.plannedDate = date;\n\n    return this.updateUnscheduledEvent(event);\n  }\n\n  private updateScheduledEvent(event: EventModel<MaintenanceForecastingScheduledEvent>): Observable<unknown> {\n    const eventSrc = this.findEventModelSrcById(event.id) as EventModel<MaintenanceForecastingScheduledEvent>;\n    eventSrc._obj.bsdeScheduledEvent = event._obj.bsdeScheduledEvent;\n\n    return this.forecastFormService.updateBsdeScheduledEvent(event._obj.bsdeScheduledEvent).pipe(\n      tap(() => {\n        this.messageService.showSuccessMessage('successMessage.updateScheduledEvent');\n      })\n    );\n  }\n\n  private updateSchedulerView(): void {\n    this.filterForecast(this.forecastFormService.forecastFiltering);\n    this.mergeFilteredEvents();\n\n    this.calculateGlobalMaterialAvailability();\n    this.calculateUpcomingEventNumberByStatus(this.filteredEventList);\n\n    this.setSchedulerStartDate();\n    this.setSchedulerEndDate();\n    this.setSchedulerTimeSpan();\n  }\n\n  private updateUnscheduledEvent(event: EventModel<MaintenanceForecastingUnscheduledEvent>): Observable<unknown> {\n    const eventSrc = this.findEventModelSrcById(event.id) as EventModel<MaintenanceForecastingUnscheduledEvent>;\n    eventSrc._obj.bsdeEvent = event._obj.bsdeEvent;\n\n    return this.forecastFormService.updateBsdeScheduledEvent(event._obj.bsdeEvent).pipe(\n      tap(() => {\n        this.messageService.showSuccessMessage('successMessage.updateUnscheduledEvent');\n      })\n    );\n  }\n\n  private updateUpcomingEventCls(event: GenericEventModel): void {\n    const clsToKeep = this.getEventClasses(event).filter(\n      (cls) =>\n        cls !== ForecastFormComponent.EVENT_IN_PAST_CLS &&\n        cls !== ForecastFormComponent.EVENT_NOK_CLS &&\n        cls !== ForecastFormComponent.EVENT_WARN_CLS &&\n        cls !== ForecastFormComponent.EVENT_OK_CLS &&\n        cls !== ForecastFormComponent.EVENT_ALERT_CLS\n    );\n\n    const clsToAdd =\n      event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.IN_PAST]\n        ? ForecastFormComponent.EVENT_IN_PAST_CLS\n        : event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.NOK]\n        ? ForecastFormComponent.EVENT_NOK_CLS\n        : event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.WARN]\n        ? ForecastFormComponent.EVENT_WARN_CLS\n        : event.eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.ALERT]\n        ? ForecastFormComponent.EVENT_ALERT_CLS\n        : ForecastFormComponent.EVENT_OK_CLS;\n\n    this.setEventCls(event, [...clsToKeep, clsToAdd]);\n  }\n\n  private updateWorkPackage(event: EventModel<MaintenanceForecastingWorkPackage>): void {\n    const workPackage = event._obj.bidmProject;\n    this.forecastFormService\n      .updateBidmProject(workPackage)\n      .pipe(concatMap(() => this.forecastFormService.controlStock(workPackage)))\n      .subscribe({\n        next: (siteDataList) => {\n          this.updateWorkPackageMaterialAvailabilityValue(workPackage, siteDataList);\n\n          const eventSrc = this.findEventModelSrcById(event.id) as EventModel<MaintenanceForecastingWorkPackage>;\n\n          const color = ForecastFormService.EVENT_COLOR_WORK_PACKAGE[workPackage.statusState as string];\n          const endDate = workPackage.projectEndDate || workPackage.projectDueDate || (this.endDate as Date);\n          const isModifiable = this.forecastFormService.checkIfWorkPackageIfModifiable(workPackage);\n          const startDate = workPackage.projectStartDate as Date;\n\n          eventSrc.endDate = this.schedulerService.formatEventDate(endDate);\n          eventSrc.eventColor = color;\n          eventSrc.draggable = isModifiable;\n          eventSrc.resizable = isModifiable;\n          eventSrc.startDate = this.schedulerService.formatEventDate(startDate);\n          eventSrc._obj.bidmProject = workPackage;\n\n          this.updateAllEventStatusByAffectedWorkPackage(workPackage);\n\n          this.messageService.showSuccessMessage('successMessage.updateWorkPackage');\n\n          this.updateSchedulerView();\n        }\n      });\n  }\n\n  private updateWorkPackageCls(event: EventModel<MaintenanceForecastingWorkPackage>): void {\n    const clsToKeep = this.getEventClasses(event).filter(\n      (cls) => cls !== ForecastFormComponent.WORK_PACKAGE_MATERIAL_AVAILABILITY_NOK_CLS\n    );\n\n    const materialAvailability = this.materialAvailabilityByWorkPackage.get(\n      event._obj.bidmProject.projectId as string\n    ) as MaterialAvailability;\n\n    const clsToAdd =\n      materialAvailability.nok > 0\n        ? ForecastFormComponent.WORK_PACKAGE_MATERIAL_AVAILABILITY_NOK_CLS\n        : materialAvailability.warn > 0\n        ? ForecastFormComponent.WORK_PACKAGE_MATERIAL_AVAILABILITY_WARN_CLS\n        : '';\n\n    this.setEventCls(event, [...clsToKeep, clsToAdd]);\n  }\n\n  private updateWorkPackageDates(\n    eventModel: EventModel<MaintenanceForecastingWorkPackage>,\n    startDate: Date,\n    endDate: Date\n  ): void {\n    eventModel._obj.bidmProject.projectStartDate = startDate;\n    eventModel._obj.bidmProject.projectEndDate = endDate;\n\n    this.updateWorkPackage(eventModel);\n  }\n\n  private updateWorkPackageMaterialAvailabilityValue(\n    workPackage: BidmProjectDTO,\n    siteDataList: GetQuantityInStockBySiteOutput[]\n  ): void {\n    this.materialAvailabilityByWorkPackage.set(\n      workPackage.projectId as string,\n      this.forecastFormService.calculateWorkPackageMaterialAvailabilityValue(siteDataList)\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as moment from 'moment';\nimport { SelectItem } from 'primeng/api';\nimport { Observable, Subject, forkJoin, of } from 'rxjs';\nimport { concatMap, map } from 'rxjs/operators';\n\nimport { AircraftMaintenanceApi } from '../../../../shared/api/aircraft-maintenance.api';\nimport { AirworthinessManagementApi } from '../../../../shared/api/airworthiness-management.api';\nimport { AMProjectManagementApi } from '../../../../shared/api/am-project-management.api';\nimport { BidtSiteApi } from '../../../../shared/api/bidt-site.api';\nimport { BidtStockMvtApi } from '../../../../shared/api/bidt-stock-mvt.api';\nimport { BidtWarehouseApi } from '../../../../shared/api/bidt-warehouse.api';\nimport { FleetManagementApi } from '../../../../shared/api/fleet-management.api';\nimport { MaintenancePlanApi } from '../../../../shared/api/maintenance-plan.api';\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\nimport { ProjectManagementApi } from '../../../../shared/api/project-management.api';\nimport { TaskManagementApi } from '../../../../shared/api/task-management.api';\nimport { UserProfileManagementApi } from '../../../../shared/api/user-profile-management.api';\nimport { EventModel as GenericEventModel } from '../../../../shared/components/scheduler/event-model.interface';\nimport { ResourceModel as GenericResourceModel } from '../../../../shared/components/scheduler/resource-model.interface';\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\nimport { BidoFunctionTypeConstants } from '../../../../shared/constants/bido-function-type-constants';\nimport { BsdeAttributeConstants } from '../../../../shared/constants/bsde-attribute-constants.interface';\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\nimport { ControlConfigConstants } from '../../../../shared/constants/control-config-constants';\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\nimport { MessageService } from '../../../../shared/services/message.service';\nimport { SerializationService } from '../../../../shared/services/serialization.service';\nimport { TabService } from '../../../../shared/services/tab.service';\nimport { ControlStockInput } from '../../../../shared/types/api-input-types/bidt-stock-mvt/control-stock-input.interface';\nimport { GetWorkPackageWhereDefectIsAffectedInput } from '../../../../shared/types/api-input-types/maintenance-plan/get-work-package-where-defect-is-affected-input.interface';\nimport { GetWorkPackageWhereScheduledEventIsAffectedInput } from '../../../../shared/types/api-input-types/maintenance-plan/get-work-package-where-scheduled-event-is-affected-input.interface';\nimport { GetWorkPackageWhereUnscheduledEventIsAffectedInput } from '../../../../shared/types/api-input-types/maintenance-plan/get-work-package-where-unscheduled-event-is-affected-input.interface';\nimport { LoadMaintenanceForecastingInput } from '../../../../shared/types/api-input-types/maintenance-plan/load-maintenance-forecasting-input.interface';\nimport { UpdateMaintenanceForecastingInput } from '../../../../shared/types/api-input-types/maintenance-plan/update-maintenance-forecasting-input.interface';\nimport { UpdateWorkPackageWithBsdeEventInput } from '../../../../shared/types/api-input-types/maintenance-plan/update-work-package-with-bsde-event-input.interface';\nimport { UpdateWorkPackageWithBsdeScheduledEventInput } from '../../../../shared/types/api-input-types/maintenance-plan/update-work-package-with-bsde-scheduled-event-input.interface';\nimport { UpdateWorkPackageWithDeferredDefectEventInput } from '../../../../shared/types/api-input-types/maintenance-plan/update-work-package-with-deferred-defect-event-input.interface';\nimport { BsdeAvailabilityInput } from '../../../../shared/types/api-input-types/project-management/bsde-availability-input.interface';\nimport { GetQuantityInStockBySiteOutput } from '../../../../shared/types/api-output-types/bidt-stock-mvt/get-quantity-in-stock-by-site-output.interface';\nimport { GetAllMaintenanceForecastingFlightUsageOutput } from '../../../../shared/types/api-output-types/maintenance-plan/get-all-maintenance-forecasting-flight-usage-output.interface';\nimport { MaintenanceForecastingDefect } from '../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-defect.interface';\nimport { MaintenanceForecastingElement } from '../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-element.interface';\nimport { MaintenanceForecastingScheduledEvent } from '../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-scheduled-event.interface';\nimport { MaintenanceForecastingUnscheduledEvent } from '../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-unscheduled-event.interface';\nimport { MaintenanceForecastingWorkPackage } from '../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-work-package.interface';\nimport { BidmProjectDTOId } from '../../../../shared/types/api-types/bidm-project-dto-id.interface';\nimport { BidmProjectDTO } from '../../../../shared/types/api-types/bidm-project-dto.interface';\nimport { BidmWorkOrderDTOId } from '../../../../shared/types/api-types/bidm-work-order-dto-id.interface';\nimport { BidmWorkOrderDTO } from '../../../../shared/types/api-types/bidm-work-order-dto.interface';\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types/bido-customer-dto.interface';\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\nimport { BidoMissionEquipmentDTOId } from '../../../../shared/types/api-types/bido-mission-equipment-dto-id.interface';\nimport { BidoMissionEquipmentDTO } from '../../../../shared/types/api-types/bido-mission-equipment-dto.interface';\nimport { BidoNotificationDTOId } from '../../../../shared/types/api-types/bido-notification-dto-id.interface';\nimport { BidoNotificationDTO } from '../../../../shared/types/api-types/bido-notification-dto.interface';\nimport { BidoUserDTO } from '../../../../shared/types/api-types/bido-user-dto.interface';\nimport { BidtSiteDTO } from '../../../../shared/types/api-types/bidt-site-dto.interface';\nimport { BireEvolutionDTOId } from '../../../../shared/types/api-types/bire-evolution-dto-id.interface';\nimport { BireMeasureReferenceDTOId } from '../../../../shared/types/api-types/bire-measure-reference-dto-id.interface';\nimport { BireMeasureReferenceDTO } from '../../../../shared/types/api-types/bire-measure-reference-dto.interface';\nimport { BireTaskDTOId } from '../../../../shared/types/api-types/bire-task-dto-id.interface';\nimport { BireTaskDTO } from '../../../../shared/types/api-types/bire-task-dto.interface';\nimport { BireUnitMeasureDTOId } from '../../../../shared/types/api-types/bire-unit-measure-dto-id.interface';\nimport { BireUnitMeasureDTO } from '../../../../shared/types/api-types/bire-unit-measure-dto.interface';\nimport { BireVariantVersionDTO } from '../../../../shared/types/api-types/bire-variant-version-dto.interface';\nimport { BsdeAvailabilityDTOCustom } from '../../../../shared/types/api-types/bsde-availability-dto-custom.interface';\nimport { BsdeAvailabilityDTOId } from '../../../../shared/types/api-types/bsde-availability-dto-id.interface';\nimport { BsdeAvailabilityDTO } from '../../../../shared/types/api-types/bsde-availability-dto.interface';\nimport { BsdeEventDTOId } from '../../../../shared/types/api-types/bsde-event-dto-id.interface';\nimport { BsdeEventDTO } from '../../../../shared/types/api-types/bsde-event-dto.interface';\nimport { BsdeProjectAttributeDTOId } from '../../../../shared/types/api-types/bsde-project-attribute-dto-id.interface';\nimport { BsdeProjectAttributeDTO } from '../../../../shared/types/api-types/bsde-project-attribute-dto.interface';\nimport { BsdeProjectDTOId } from '../../../../shared/types/api-types/bsde-project-dto-id.interface';\nimport { BsdeProjectDTO } from '../../../../shared/types/api-types/bsde-project-dto.interface';\nimport { BsdeScheduledEventDTOId } from '../../../../shared/types/api-types/bsde-scheduled-event-dto-id.interface';\nimport { BsdeScheduledEventDTO } from '../../../../shared/types/api-types/bsde-scheduled-event-dto.interface';\nimport { BsdeSiteDTO } from '../../../../shared/types/api-types/bsde-site-dto.interface';\nimport { DeferredDefectEventDTO } from '../../../../shared/types/api-types/deferred-defect-event-dto.interface';\nimport { GoodsMovementInput } from '../../../../shared/types/component-input-types/logistics/goods-movement-input.interface';\nimport { ForecastObjectInput } from '../../../../shared/types/component-input-types/maintenance/forecast-object-input.interface';\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\nimport { ListUtils } from '../../../../shared/utils/list-utils';\nimport { NumberUtils } from '../../../../shared/utils/number-utils';\nimport { ObjectUtils } from '../../../../shared/utils/object-utils';\nimport { StringUtils } from '../../../../shared/utils/string-utils';\nimport { FlightInputData } from '../../../flight-operations/flight/types/flight-input-data.interface';\nimport { AirworthinessControlFormComponentInput } from '../../airworthiness-control/types/airworthiness-control-form-component-input.interface';\nimport { ScheduleMaintenanceFormComponentInput } from '../../airworthiness-control/types/schedule-maintenance-form-component-input.interface';\n\nimport { ForecastFiltering } from './types/forecast-filtering.interface';\n\nexport enum EventModelType {\n  DEFECT = 'defect',\n  FLIGHT = 'flight',\n  FLIGHT_USAGE = 'flightUsage',\n  EVENT_GROUP = 'eventGroup',\n  LLP_ALERT = 'llpAlert',\n  SCHEDULED_EVENT = 'scheduledEvent',\n  SN_CHANGE = 'snChange',\n  UNSCHEDULED_EVENT = 'unscheduledEvent',\n  WORK_PACKAGE = 'workPackage'\n}\n\nexport enum ForecastLoadOption {\n  DEFAULT,\n  OPTIMIZE\n}\n\nexport enum ResourceSelectionMode {\n  ROW = 'row'\n}\n\nexport enum UpcomingEventStatus {\n  IN_PAST,\n  NOK,\n  OK,\n  WARN,\n  ALERT\n}\n\nexport enum ForecastCategory {\n  ASSET,\n  FLEET\n}\n\nexport interface ContextMenuItem {\n  text: string;\n  icon?: string;\n  onItem?: Function;\n}\n\nexport interface EventGroupModel extends GenericEventModel {\n  defectList: EventModel<MaintenanceForecastingDefect>[];\n  llpAlertList: EventModel<MaintenanceForecastingScheduledEvent>[];\n  scheduledEventList: EventModel<MaintenanceForecastingScheduledEvent>[];\n  snChangeList: EventModel<MaintenanceForecastingUnscheduledEvent>[];\n  unscheduledEventList: EventModel<MaintenanceForecastingUnscheduledEvent>[];\n}\n\nexport interface EventModel<T> extends GenericEventModel {\n  _obj: T;\n}\n\nexport interface MaterialAvailability {\n  nok: number;\n  ok: number;\n  warn: number;\n}\n\nexport interface ResourceModel extends GenericResourceModel {\n  asset: BidoEquipmentDTO;\n  assetDescription: string;\n  flDescription: string;\n}\n\nexport type MaintenanceForecastingUpcomingEvent =\n  | MaintenanceForecastingDefect\n  | MaintenanceForecastingScheduledEvent\n  | MaintenanceForecastingUnscheduledEvent;\n\n@Injectable()\nexport class ForecastFormService extends AbstractAwHttpService {\n  public static readonly EVENT_COLOR_EVENT: { [status: string]: string } = {\n    [UpcomingEventStatus.IN_PAST]: '#000',\n    [UpcomingEventStatus.NOK]: '#ab000d',\n    [UpcomingEventStatus.OK]: '#7cb342',\n    [UpcomingEventStatus.WARN]: '#fbc02d',\n    [UpcomingEventStatus.ALERT]: '#EA9107'\n  };\n  public static readonly EVENT_COLOR_FLIGHT: { [status: string]: string } = {\n    REAL: 'purple',\n    SIMULATED: 'purple'\n  };\n  public static readonly EVENT_COLOR_WORK_PACKAGE: { [status: string]: string } = {\n    [AWPropertiesConstants.AIRM_PROJECT_STATUS_SIMULATED]: '#63a4ff',\n    [AWPropertiesConstants.AIRM_PROJECT_STATUS_SCHEDULED]: '#004ba0',\n    [AWPropertiesConstants.AIRM_PROJECT_STATUS_RELEASED]: '#bcbcbc',\n    [AWPropertiesConstants.AIRM_PROJECT_STATUS_ONGOING]: '#595959',\n    [AWPropertiesConstants.AIRM_PROJECT_STATUS_PERFORMED]: '#595959',\n    [AWPropertiesConstants.AIRM_PROJECT_STATUS_CLOSE]: '#232323'\n  };\n\n  private static readonly FORECAST_PROJECT_DEFAULT_END_DATE_OFFSET: number = 3;\n\n  private readonly _forecastFiltering: ForecastFiltering;\n\n  private readonly eventGroupPlannedDateUpdateSource: Subject<{\n    eventGroup: EventGroupModel;\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    plannedDate: Date;\n  }>;\n  private readonly eventsAddedToWorkPackageSource: Subject<{\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    workPackage: BidmProjectDTO;\n  }>;\n  private readonly eventsRemovedFromWorkPackageSource: Subject<{\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    workPackage: BidmProjectDTO;\n  }>;\n  private readonly forecastFilteringSource: Subject<ForecastFiltering>;\n  private readonly scheduledEventPlannedDateUpdateSource: Subject<{\n    event: EventModel<MaintenanceForecastingScheduledEvent>;\n    plannedDate: Date;\n  }>;\n  private readonly unscheduledEventCreateSource: Subject<{\n    event: BsdeEventDTO;\n  }>;\n  private readonly unscheduledEventUpdateSource: Subject<{\n    event: EventModel<MaintenanceForecastingUnscheduledEvent>;\n  }>;\n  private readonly _eventGroupPlannedDateUpdate$: Observable<{\n    eventGroup: EventGroupModel;\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    plannedDate: Date;\n  }>;\n  private readonly _eventsAddedToWorkPackage$: Observable<{\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    workPackage: BidmProjectDTO;\n  }>;\n  private readonly _eventsRemovedFromWorkPackage$: Observable<{\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    workPackage: BidmProjectDTO;\n  }>;\n  private readonly _forecastFiltering$: Observable<ForecastFiltering>;\n  private readonly _scheduledEventPlannedDateUpdate$: Observable<{\n    event: EventModel<MaintenanceForecastingScheduledEvent>;\n    plannedDate: Date;\n  }>;\n  private readonly _unscheduledEventCreate$: Observable<{\n    event: BsdeEventDTO;\n  }>;\n  private readonly _unscheduledEventUpdate$: Observable<{\n    event: EventModel<MaintenanceForecastingUnscheduledEvent>;\n  }>;\n\n  public constructor(\n    http: HttpClient,\n    appConfigService: AppConfigService,\n    private readonly aircraftMaintenanceApi: AircraftMaintenanceApi,\n    private readonly airworthinessManagementApi: AirworthinessManagementApi,\n    private readonly amProjectManagementApi: AMProjectManagementApi,\n    private readonly bidtSiteApi: BidtSiteApi,\n    private readonly bidtStockMvtApi: BidtStockMvtApi,\n    private readonly fleetManagementApi: FleetManagementApi,\n    private readonly maintenancePlanApi: MaintenancePlanApi,\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\n    private readonly projectManagementApi: ProjectManagementApi,\n    private readonly serializationService: SerializationService,\n    private readonly tabService: TabService,\n    private readonly userProfileManagementApi: UserProfileManagementApi,\n    private readonly messageService: MessageService,\n    private readonly taskManagementApi: TaskManagementApi,\n    private readonly translateService: TranslateService,\n    private readonly bidtWarehouseApi: BidtWarehouseApi\n  ) {\n    super(http, appConfigService);\n\n    this.eventGroupPlannedDateUpdateSource = new Subject<{\n      eventGroup: EventGroupModel;\n      events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n      plannedDate: Date;\n    }>();\n    this.eventsAddedToWorkPackageSource = new Subject<{\n      events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n      workPackage: BidmProjectDTO;\n    }>();\n    this.eventsRemovedFromWorkPackageSource = new Subject<{\n      events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n      workPackage: BidmProjectDTO;\n    }>();\n    this.forecastFilteringSource = new Subject<ForecastFiltering>();\n    this.scheduledEventPlannedDateUpdateSource = new Subject<{\n      event: EventModel<MaintenanceForecastingScheduledEvent>;\n      plannedDate: Date;\n    }>();\n    this.unscheduledEventCreateSource = new Subject<{\n      event: BsdeEventDTO;\n    }>();\n    this.unscheduledEventUpdateSource = new Subject<{\n      event: EventModel<MaintenanceForecastingUnscheduledEvent>;\n    }>();\n    this._eventGroupPlannedDateUpdate$ = this.eventGroupPlannedDateUpdateSource.asObservable();\n    this._eventsAddedToWorkPackage$ = this.eventsAddedToWorkPackageSource.asObservable();\n    this._eventsRemovedFromWorkPackage$ = this.eventsRemovedFromWorkPackageSource.asObservable();\n    this._forecastFiltering$ = this.forecastFilteringSource.asObservable();\n    this._scheduledEventPlannedDateUpdate$ = this.scheduledEventPlannedDateUpdateSource.asObservable();\n    this._unscheduledEventCreate$ = this.unscheduledEventCreateSource.asObservable();\n    this._unscheduledEventUpdate$ = this.unscheduledEventUpdateSource.asObservable();\n\n    this._forecastFiltering = {\n      globalSearch: '',\n      upcomingEventStatusList: [\n        UpcomingEventStatus.OK,\n        UpcomingEventStatus.WARN,\n        UpcomingEventStatus.NOK,\n        UpcomingEventStatus.IN_PAST\n      ],\n      upcomingEventTypeList: [],\n      workPackageStatusList: []\n    };\n  }\n\n  public get eventGroupPlannedDateUpdate$(): Observable<{\n    eventGroup: EventGroupModel;\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    plannedDate: Date;\n  }> {\n    return this._eventGroupPlannedDateUpdate$;\n  }\n\n  public get eventsAddedToWorkPackage$(): Observable<{\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    workPackage: BidmProjectDTO;\n  }> {\n    return this._eventsAddedToWorkPackage$;\n  }\n\n  public get eventsRemovedFromWorkPackage$(): Observable<{\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    workPackage: BidmProjectDTO;\n  }> {\n    return this._eventsRemovedFromWorkPackage$;\n  }\n\n  public get forecastFiltering(): ForecastFiltering {\n    return this._forecastFiltering;\n  }\n\n  public get forecastFiltering$(): Observable<ForecastFiltering> {\n    return this._forecastFiltering$;\n  }\n\n  public get scheduledEventPlannedDateUpdate$(): Observable<{\n    event: EventModel<MaintenanceForecastingScheduledEvent>;\n    plannedDate: Date;\n  }> {\n    return this._scheduledEventPlannedDateUpdate$;\n  }\n\n  public get unscheduledEventCreate$(): Observable<{\n    event: BsdeEventDTO;\n  }> {\n    return this._unscheduledEventCreate$;\n  }\n\n  public get unscheduledEventUpdate$(): Observable<{\n    event: EventModel<MaintenanceForecastingUnscheduledEvent>;\n  }> {\n    return this._unscheduledEventUpdate$;\n  }\n\n  public addEventsToWorkPackage(data: {\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    workPackage: BidmProjectDTO;\n  }): void {\n    this.eventsAddedToWorkPackageSource.next(data);\n  }\n\n  public buildUpcomingEventTypeList(): Observable<LabelValue<string>[]> {\n    const defectKey = 'defect';\n    const llpKey = 'llp';\n    const scheduledEventKey = 'scheduledEvent';\n    const snChangeKey = 'snChange';\n    const unscheduledEventKey = 'unscheduledEvent';\n\n    return this.translateService.get([defectKey, llpKey, scheduledEventKey, snChangeKey, unscheduledEventKey]).pipe(\n      map((results: { [key: string]: string }) => {\n        const defectLabel = !!results ? results[defectKey] : 'Defect';\n        const llpLabel = !!results ? results[llpKey] : 'LLP';\n        const scheduledEventLabel = !!results ? results[scheduledEventKey] : 'Scheduled Event';\n        const snChangeLabel = !!results ? results[snChangeKey] : 'S/N Change';\n        const unscheduledEventLabel = !!results ? results[unscheduledEventKey] : 'Unscheduled Event';\n\n        return [\n          { label: defectLabel, value: EventModelType.DEFECT },\n          { label: llpLabel, value: EventModelType.LLP_ALERT },\n          { label: scheduledEventLabel, value: EventModelType.SCHEDULED_EVENT },\n          { label: snChangeLabel, value: EventModelType.SN_CHANGE },\n          { label: unscheduledEventLabel, value: EventModelType.UNSCHEDULED_EVENT }\n        ];\n      })\n    );\n  }\n\n  public calculateUpcomingEventStatus(\n    eventEndDate: Date,\n    affectedWorkPackage: BidmProjectDTO | undefined,\n    scheduledEvent?: BsdeScheduledEventDTO | undefined\n  ): UpcomingEventStatus {\n    if (moment(eventEndDate).isBefore(moment())) {\n      return UpcomingEventStatus.IN_PAST;\n    } else if (!!scheduledEvent && scheduledEvent.alertOnThreshold) {\n      return UpcomingEventStatus.ALERT;\n    } else if (ObjectUtils.isDefined(affectedWorkPackage)) {\n      return moment(eventEndDate).isBefore(moment((affectedWorkPackage as BidmProjectDTO).projectEndDate))\n        ? UpcomingEventStatus.NOK\n        : UpcomingEventStatus.OK;\n    } else {\n      return UpcomingEventStatus.WARN;\n    }\n  }\n\n  public calculateWorkPackageMaterialAvailabilityValue(\n    siteDataList: GetQuantityInStockBySiteOutput[]\n  ): MaterialAvailability {\n    const statusNok = ControlConfigConstants.ICON_RED_LIGHT_CODE;\n    const statusOk = ControlConfigConstants.ICON_GREEN_LIGHT_CODE;\n    const statusWarn = ControlConfigConstants.ICON_YELLOW_LIGHT_CODE;\n\n    return {\n      nok: siteDataList.filter((siteData) => siteData.status === statusNok).length,\n      ok: siteDataList.filter((siteData) => siteData.status === statusOk).length,\n      warn: siteDataList.filter((siteData) => siteData.status === statusWarn).length\n    };\n  }\n\n  public checkIfWorkPackageIfModifiable(workPackage: BidmProjectDTO): boolean {\n    return (\n      workPackage.statusState === AWPropertiesConstants.AIRM_PROJECT_STATUS_SCHEDULED ||\n      workPackage.statusState === AWPropertiesConstants.AIRM_PROJECT_STATUS_SIMULATED\n    );\n  }\n\n  public createUnscheduledEvent(data: { event: BsdeEventDTO }): void {\n    this.unscheduledEventCreateSource.next(data);\n  }\n\n  public filterForecast(): void {\n    this.forecastFilteringSource.next(this._forecastFiltering);\n  }\n\n  public filterForecastByUpcomingEventType(forecastFiltering: ForecastFiltering, eventType: string): boolean {\n    return forecastFiltering.upcomingEventTypeList.includes(eventType);\n  }\n\n  public filterForecastByUpcomingEventStatus(forecastFiltering: ForecastFiltering, eventColor: string): boolean {\n    const status =\n      eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.OK]\n        ? UpcomingEventStatus.OK\n        : eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.WARN]\n        ? UpcomingEventStatus.WARN\n        : eventColor === ForecastFormService.EVENT_COLOR_EVENT[UpcomingEventStatus.NOK]\n        ? UpcomingEventStatus.NOK\n        : UpcomingEventStatus.IN_PAST;\n\n    return forecastFiltering.upcomingEventStatusList.includes(status);\n  }\n\n  public filterForecastDefect(\n    forecastFiltering: ForecastFiltering,\n    eventModel: EventModel<MaintenanceForecastingDefect>\n  ): boolean {\n    const notification = eventModel._obj.deferredDefectEvent.bidoNotificationData as BidoNotificationDTO;\n\n    let notificationCodeCriteria = true;\n    if (!StringUtils.isNullOrEmpty(forecastFiltering.globalSearch)) {\n      notificationCodeCriteria = StringUtils.orEmpty(notification.notNotificationCode)\n        .toUpperCase()\n        .includes(forecastFiltering.globalSearch);\n    }\n\n    return notificationCodeCriteria;\n  }\n\n  public filterForecastScheduledEvent(\n    forecastFiltering: ForecastFiltering,\n    eventModel: EventModel<MaintenanceForecastingScheduledEvent>\n  ): boolean {\n    const event = eventModel._obj.bsdeScheduledEvent;\n\n    let taskCodeCriteria = true;\n    let taskVersionCriteria = true;\n    if (!StringUtils.isNullOrEmpty(forecastFiltering.globalSearch)) {\n      taskCodeCriteria = StringUtils.orEmpty(event.taskCode)\n        .toUpperCase()\n        .includes(forecastFiltering.globalSearch);\n\n      taskVersionCriteria = StringUtils.orEmpty(event.taskVersion)\n        .toUpperCase()\n        .includes(forecastFiltering.globalSearch);\n    }\n\n    return taskCodeCriteria && taskVersionCriteria;\n  }\n\n  public filterForecastUnscheduledEvent(\n    forecastFiltering: ForecastFiltering,\n    eventModel: EventModel<MaintenanceForecastingUnscheduledEvent>\n  ): boolean {\n    const event = eventModel._obj.bsdeEvent;\n\n    let taskCodeCriteria = true;\n    let taskVersionCriteria = true;\n    if (!StringUtils.isNullOrEmpty(forecastFiltering.globalSearch)) {\n      taskCodeCriteria = StringUtils.orEmpty(event.taskCode)\n        .toUpperCase()\n        .includes(forecastFiltering.globalSearch);\n\n      taskVersionCriteria = StringUtils.orEmpty(event.taskVersion)\n        .toUpperCase()\n        .includes(forecastFiltering.globalSearch);\n    }\n\n    return taskCodeCriteria && taskVersionCriteria;\n  }\n\n  public filterForecastWorkPackage(\n    forecastFiltering: ForecastFiltering,\n    eventModel: EventModel<MaintenanceForecastingWorkPackage>\n  ): boolean {\n    const workPackage = eventModel._obj.bidmProject;\n\n    const statusCriteria = forecastFiltering.workPackageStatusList.includes(workPackage.statusState as string);\n\n    let projectNumberCriteria = true;\n    if (!StringUtils.isNullOrEmpty(forecastFiltering.globalSearch)) {\n      projectNumberCriteria = NumberUtils.toString(workPackage.projectNumber)\n        .toUpperCase()\n        .includes(forecastFiltering.globalSearch);\n    }\n\n    return statusCriteria && projectNumberCriteria;\n  }\n\n  public getDefectList(eventList: GenericEventModel[]): EventModel<MaintenanceForecastingDefect>[] {\n    return eventList.filter((event) => event.eventType === EventModelType.DEFECT) as EventModel<\n      MaintenanceForecastingDefect\n    >[];\n  }\n\n  public getEventCategoryLabel(event: BidoNotificationDTO, eventCategoryList: LabelValue<string>[]): string {\n    const eventCategory = eventCategoryList.find(\n      (category) => category.value === event.bidoNotificationTypeDTO.typeCategory\n    );\n\n    return ObjectUtils.isDefined(eventCategory) ? (eventCategory as LabelValue<string>).label : '';\n  }\n\n  public getLlpAlertList(eventList: GenericEventModel[]): EventModel<MaintenanceForecastingScheduledEvent>[] {\n    return eventList.filter((event) => event.eventType === EventModelType.LLP_ALERT) as EventModel<\n      MaintenanceForecastingScheduledEvent\n    >[];\n  }\n\n  public getScheduledEventList(eventList: GenericEventModel[]): EventModel<MaintenanceForecastingScheduledEvent>[] {\n    return eventList.filter((event) => event.eventType === EventModelType.SCHEDULED_EVENT) as EventModel<\n      MaintenanceForecastingScheduledEvent\n    >[];\n  }\n\n  public getSnChangeList(eventList: GenericEventModel[]): EventModel<MaintenanceForecastingUnscheduledEvent>[] {\n    return eventList.filter((event) => event.eventType === EventModelType.SN_CHANGE) as EventModel<\n      MaintenanceForecastingUnscheduledEvent\n    >[];\n  }\n\n  public getTaskTypeLabel(task: BireTaskDTO, taskTypeList: LabelValue<string>[]): string {\n    const taskType = taskTypeList.find((type) => type.value === task.taskTypeCode);\n\n    return ObjectUtils.isDefined(taskType) ? (taskType as LabelValue<string>).label : '';\n  }\n\n  public getUnscheduledEventList(eventList: GenericEventModel[]): EventModel<MaintenanceForecastingUnscheduledEvent>[] {\n    return eventList.filter((event) => event.eventType === EventModelType.UNSCHEDULED_EVENT) as EventModel<\n      MaintenanceForecastingUnscheduledEvent\n    >[];\n  }\n\n  public getUpcomingEventKey(eventModel: EventModel<MaintenanceForecastingUpcomingEvent>): string {\n    return this.isDefectSchedulerEventType(eventModel.eventType)\n      ? 'defect'\n      : this.isLlpSchedulerEventType(eventModel.eventType)\n      ? 'llp'\n      : this.isScheduledEventSchedulerEventType(eventModel.eventType)\n      ? 'scheduledEvent'\n      : this.isSnChangeSchedulerEventType(eventModel.eventType)\n      ? 'snChange'\n      : 'unscheduledEvent';\n  }\n\n  public initForecastFiltering(\n    upcomingEventTypeList: LabelValue<string>[],\n    workPackageStatusList: LabelValue<string>[]\n  ): void {\n    this.setForecastFilteringUpcomingEventTypeList(upcomingEventTypeList.map((elt) => elt.value));\n    this.setForecastFilteringWorkPackageStatusList(workPackageStatusList.map((elt) => elt.value));\n  }\n\n  public isDefectSchedulerEventType(eventType: string): boolean {\n    return eventType === EventModelType.DEFECT;\n  }\n\n  public isEventGroupSchedulerEventType(eventType: string): boolean {\n    return eventType === EventModelType.EVENT_GROUP;\n  }\n\n  public isFlightSchedulerEventType(eventType: string): boolean {\n    return eventType === EventModelType.FLIGHT;\n  }\n\n  public isLlpSchedulerEventType(eventType: string): boolean {\n    return eventType === EventModelType.LLP_ALERT;\n  }\n\n  public isScheduledEventSchedulerEventType(eventType: string): boolean {\n    return eventType === EventModelType.LLP_ALERT || eventType === EventModelType.SCHEDULED_EVENT;\n  }\n\n  public isSnChangeSchedulerEventType(eventType: string): boolean {\n    return eventType === EventModelType.SN_CHANGE;\n  }\n\n  public isUnscheduledEventSchedulerEventType(eventType: string): boolean {\n    return eventType === EventModelType.SN_CHANGE || eventType === EventModelType.UNSCHEDULED_EVENT;\n  }\n\n  public isValidDefect(defect: MaintenanceForecastingDefect): boolean {\n    return (\n      ObjectUtils.isDefined(defect.deferredDefectEvent.bidoNotificationData) &&\n      (ObjectUtils.isDefined((defect.deferredDefectEvent as DeferredDefectEventDTO).plannedDate) ||\n        ObjectUtils.isDefined((defect.deferredDefectEvent as DeferredDefectEventDTO).nteDate))\n    );\n  }\n\n  public isValidFlight(flight: BidoMissionEquipmentDTO): boolean {\n    return ObjectUtils.isDefined(flight.startDate) && ObjectUtils.isDefined(flight.endDate);\n  }\n\n  public isValidPlannedDateForEventGroup(eventGroup: EventGroupModel, plannedDate: Date): boolean {\n    return [...eventGroup.defectList, ...eventGroup.llpAlertList, ...eventGroup.scheduledEventList]\n      .map((event) => event.maxEndDate)\n      .every((maxEndDate) => moment(maxEndDate).isAfter(moment(plannedDate)));\n  }\n\n  public isValidScheduledEvent(event: MaintenanceForecastingScheduledEvent): boolean {\n    return ObjectUtils.isDefined(event.bsdeScheduledEvent.nteDate);\n  }\n\n  public isValidUnscheduledEvent(event: MaintenanceForecastingUnscheduledEvent): boolean {\n    return ObjectUtils.isDefined(event.bsdeEvent.plannedDate);\n  }\n\n  public isValidWorkPackage(workPackage: MaintenanceForecastingWorkPackage): boolean {\n    const endDate = workPackage.bidmProject.projectEndDate || workPackage.bidmProject.projectDueDate;\n\n    return (\n      ObjectUtils.isDefined(workPackage.bidmProject.projectStartDate) &&\n      (!ObjectUtils.isDefined(endDate) || moment(endDate).isAfter(workPackage.bidmProject.projectStartDate))\n    );\n  }\n\n  public isWorkPackageSchedulerEventType(eventType: string): boolean {\n    return eventType === EventModelType.WORK_PACKAGE;\n  }\n\n  public loadForecastData(\n    forecastProject: BsdeProjectDTO,\n    forecastProjectId: string,\n    forecastProjectLlpEventsGeneration: boolean,\n    forecastProjectOccurrenceNumber: number | undefined,\n    loadOption: ForecastLoadOption\n  ): Observable<MaintenanceForecastingElement[]> {\n    const forecastOption: LoadMaintenanceForecastingInput = {\n      maintenanceForecastingProjectId: forecastProjectId,\n      bsdeProjectDTO: {\n        projectFleetId: forecastProject.projectFleetId,\n        projectId: forecastProjectId,\n        projectPn: forecastProject.projectPn,\n        projectSn: forecastProject.projectSn\n      },\n      maintenancePlanEndDate:\n        forecastProject.projectEndDate ||\n        moment()\n          .add(ForecastFormService.FORECAST_PROJECT_DEFAULT_END_DATE_OFFSET, 'months')\n          .toDate(),\n      maintenancePlanOccurrence: forecastProjectOccurrenceNumber,\n      maintenancePlanStartDate: forecastProject.projectStartDate,\n      maintenancePlanTimeScale: 'DAY',\n      showSNChanges: true,\n      showDeferredDefects: true,\n      showScheduledEvents: true,\n      showNonRoutineEvents: true,\n      showOnlyColumnsWithContent: false,\n      urlPNCode: forecastProject.projectPn,\n      urlSNCode: forecastProject.projectSn,\n      withIwbEvents: true,\n      withLlpAlerts: forecastProjectLlpEventsGeneration\n    };\n\n    return loadOption === ForecastLoadOption.OPTIMIZE\n      ? this.loadWithOptimizerOption(forecastOption)\n      : this.loadWithFromDbOption(forecastOption);\n  }\n\n  public openAirworthinessStatus(equipmentCodes: string[]): void {\n    const pageInput: AirworthinessControlFormComponentInput = {\n      equipmentCodeList: equipmentCodes\n    };\n    this.openPage(ComponentConstants.MAI_AIRWORTHINESS_CONTROL_FOR_ASSET_FORM, pageInput);\n  }\n\n  public openAsset(equipment: BidoEquipmentDTO): void {\n    const equipmentCode = equipment.equipmentCode as string;\n    const pageInput: BidoEquipmentDTO = {\n      equipmentCode\n    };\n\n    if (equipment.equipmentFunction === AWPropertiesConstants.ITEM_FAMILY_CODE_AIRCRAFT_KEY) {\n      this.openPage(ComponentConstants.FLE_AIRCRAFT_FORM, pageInput);\n    } else if (equipment.equipmentFunction === AWPropertiesConstants.ITEM_FAMILY_CODE_ENGINE_KEY) {\n      this.openPage(ComponentConstants.FLE_ENGINE_FORM, pageInput);\n    } else {\n      this.openPage(ComponentConstants.FLE_EQUIPMENT_FORM, pageInput);\n    }\n  }\n\n  public openEvent(eventModel: EventModel<MaintenanceForecastingUpcomingEvent>): void {\n    const eventType = eventModel.eventType;\n\n    if (this.isDefectSchedulerEventType(eventType)) {\n      const defect = (eventModel as EventModel<MaintenanceForecastingDefect>)._obj.deferredDefectEvent;\n      const notificationCode = (defect.bidoNotificationData as BidoNotificationDTO).notificationCode as string;\n      const pageInput: BidoNotificationDTOId = {\n        notificationCode\n      };\n      this.openPage(ComponentConstants.FLE_DEFECT_FORM, pageInput);\n    } else if (this.isScheduledEventSchedulerEventType(eventType)) {\n      const event = (eventModel as EventModel<MaintenanceForecastingScheduledEvent>)._obj.bsdeScheduledEvent;\n\n      if (!StringUtils.isNullOrEmpty(event.taskCode) && !StringUtils.isNullOrEmpty(event.taskVersion)) {\n        this.openTask(event.taskCode as string, event.taskVersion as string);\n      } else if (!StringUtils.isNullOrEmpty(event.pn) && !StringUtils.isNullOrEmpty(event.sn)) {\n        this.openAssetByPnAndSn(event.pn as string, event.sn as string);\n      }\n    } else if (this.isUnscheduledEventSchedulerEventType(eventType)) {\n      const event = (eventModel as EventModel<MaintenanceForecastingUnscheduledEvent>)._obj.bsdeEvent;\n\n      if (!StringUtils.isNullOrEmpty(event.taskCode) && !StringUtils.isNullOrEmpty(event.taskVersion)) {\n        this.openTask(event.taskCode as string, event.taskVersion as string);\n      } else if (\n        !StringUtils.isNullOrEmpty(event.evolutionNumber) &&\n        !StringUtils.isNullOrEmpty(event.evolutionRevisionNumber)\n      ) {\n        const pageInput: BireEvolutionDTOId = {\n          evolutionNumber: event.evolutionNumber,\n          evolutionRevisionNumber: event.evolutionRevisionNumber\n        };\n        this.openPage(ComponentConstants.ENG_EVOLUTION_FORM, pageInput);\n      } else if (!StringUtils.isNullOrEmpty(event.newPn) && !StringUtils.isNullOrEmpty(event.newSn)) {\n        this.openAssetByPnAndSn(event.newPn as string, event.newSn as string);\n      }\n    }\n  }\n\n  public openFlight(missionEquipment: BidoMissionEquipmentDTO): void {\n    const missionEquipmentByIdInput: BidoMissionEquipmentDTOId = {\n      equipmentCode: missionEquipment.equipmentCode as string,\n      missionCode: missionEquipment.missionCode as string,\n      occurrence: missionEquipment.occurrence as number\n    };\n    super\n      .post<BidoMissionEquipmentDTOId, BidoMissionEquipmentDTO>(\n        this.fleetManagementApi.checkBidoMissionEquipmentById,\n        missionEquipmentByIdInput\n      )\n      .subscribe((missionEquipmentById) => {\n        if (missionEquipmentById) {\n          const pageInput: FlightInputData = {\n            chronoNumber: missionEquipment.missionInstanceCode,\n            endDate: missionEquipment.endDate,\n            equipmentCode: missionEquipment.equipmentCode,\n            missionCode: missionEquipment.missionCode,\n            occurrence: missionEquipment.occurrence,\n            startDate: missionEquipment.startDate\n          };\n\n          this.openPage(ComponentConstants.FLI_FLIGHT_FORM, pageInput);\n        } else {\n          const missionEquipmentByEquipmentCodeAndMissionCodeInput: BidoMissionEquipmentDTO = {\n            equipmentCode: missionEquipment.equipmentCode,\n            missionCode: missionEquipment.missionCode\n          };\n          super\n            .post<BidoMissionEquipmentDTO, BidoMissionEquipmentDTO>(\n              this.fleetManagementApi.checkBidoMissionEquipmentByEquipmentCodeAndMissionCode,\n              missionEquipmentByEquipmentCodeAndMissionCodeInput\n            )\n            .subscribe((missionEquipmentByEquipmentCodeAndMissionCode) => {\n              if (missionEquipmentByEquipmentCodeAndMissionCodeInput) {\n                const pageInput: FlightInputData = {\n                  chronoNumber: missionEquipment.missionInstanceCode,\n                  endDate: missionEquipment.endDate,\n                  equipmentCode: missionEquipment.equipmentCode,\n                  missionCode: missionEquipment.missionCode,\n                  occurrence: missionEquipmentByEquipmentCodeAndMissionCode.occurrence,\n                  startDate: missionEquipment.startDate\n                };\n\n                this.openPage(ComponentConstants.FLI_FLIGHT_FORM, pageInput);\n              } else {\n                this.messageService.showErrorMessage('errorMessage.openFlight');\n              }\n            });\n        }\n      });\n  }\n\n  public openMaintenancePlanning(equipmentCode: string): void {\n    const pageInput: ScheduleMaintenanceFormComponentInput = {\n      equipmentCode\n    };\n    this.openPage(ComponentConstants.MAI_AIRWORTHINESS_CONTROL_SCHEDULE_MAINTENANCE_FORM, pageInput);\n  }\n\n  public openMaterialAvailability(workPackageId: string): void {\n    const pageInput: GoodsMovementInput = {\n      workPackageId\n    };\n    this.openPage(ComponentConstants.LOG_MATERIAL_AVAILABILITY_WORK_PACKAGE_FORM, pageInput);\n  }\n\n  public openMaterialAvailabilityForAllWorkPackage(\n    siteId: number,\n    workPackageIds: string[],\n    startDate: Date,\n    endDate: Date\n  ): void {\n    const pageInput: ForecastObjectInput = {\n      endDate,\n      siteId,\n      startDate,\n      workPackageIdList: workPackageIds\n    };\n    this.openPage(ComponentConstants.LOG_MATERIAL_AVAILABILITY_FORECASTING_FORM, pageInput);\n  }\n\n  public openStaffPlanning(companyId: number, siteId: number, startDate: Date, endDate: Date): void {\n    const pageInput = { companyId, endDate, siteId, startDate };\n    this.openPage(ComponentConstants.HR_EMPLOYEE_PLANNING_FORM, pageInput);\n  }\n\n  public openWorkOrders(workPackage: BidmProjectDTO): void {\n    const pageInput = workPackage;\n    this.openPage(ComponentConstants.MAI_WORK_ORDERS_FORM, pageInput);\n  }\n\n  public openWorkPackage(workPackage: BidmProjectDTO): void {\n    const pageInput = { wpId: workPackage.projectId };\n    this.openPage(ComponentConstants.MAI_WORK_PACKAGE_FORM, pageInput);\n  }\n\n  public removeEventsFromWorkPackage(data: {\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    workPackage: BidmProjectDTO;\n  }): void {\n    this.eventsRemovedFromWorkPackageSource.next(data);\n  }\n\n  public saveForecastProjectAttributes(\n    forecastProjectId: string,\n    forecastProjectLlpEventsGeneration: boolean,\n    forecastProjectOccurrenceNumber: number | undefined\n  ): Observable<unknown> {\n    return forkJoin({\n      llpEventsGeneration: this.removeBsdeProjectAttribute({\n        attributeId: BsdeAttributeConstants.MFO_LLP_EVENTS_GENERATION,\n        projectId: forecastProjectId\n      }),\n      occurrenceNumber: this.removeBsdeProjectAttribute({\n        attributeId: BsdeAttributeConstants.MFO_OCCURRENCE_NUMBER_OPTION,\n        projectId: forecastProjectId\n      })\n    }).pipe(\n      concatMap(() =>\n        forkJoin({\n          llpEventsGeneration: this.createBsdeProjectAttribute({\n            attributeId: BsdeAttributeConstants.MFO_LLP_EVENTS_GENERATION,\n            attributeValue: forecastProjectLlpEventsGeneration.toString(),\n            projectId: forecastProjectId\n          }),\n          occurrenceNumber: this.createBsdeProjectAttribute({\n            attributeId: BsdeAttributeConstants.MFO_OCCURRENCE_NUMBER_OPTION,\n            attributeValue: NumberUtils.toString(forecastProjectOccurrenceNumber),\n            projectId: forecastProjectId\n          })\n        })\n      )\n    );\n  }\n\n  public setWorkPackageToNextStatus(workPackage: BidmProjectDTO): void {\n    const currentStatus = workPackage.statusState;\n\n    if (currentStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_SIMULATED) {\n      workPackage.statusState = AWPropertiesConstants.AIRM_PROJECT_STATUS_SCHEDULED;\n    } else if (currentStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_SCHEDULED) {\n      workPackage.statusState = AWPropertiesConstants.AIRM_PROJECT_STATUS_RELEASED;\n    } else if (currentStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_RELEASED) {\n      workPackage.statusState = AWPropertiesConstants.AIRM_PROJECT_STATUS_ONGOING;\n    } else if (currentStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_ONGOING) {\n      workPackage.statusState = AWPropertiesConstants.AIRM_PROJECT_STATUS_PERFORMED;\n    } else if (currentStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_PERFORMED) {\n      workPackage.statusState = AWPropertiesConstants.AIRM_PROJECT_STATUS_CLOSE;\n    }\n  }\n\n  public setWorkPackageToPreviousStatus(workPackage: BidmProjectDTO): void {\n    const currentStatus = workPackage.statusState;\n\n    if (currentStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_CLOSE) {\n      workPackage.statusState = AWPropertiesConstants.AIRM_PROJECT_STATUS_PERFORMED;\n    } else if (currentStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_PERFORMED) {\n      workPackage.statusState = AWPropertiesConstants.AIRM_PROJECT_STATUS_ONGOING;\n    } else if (currentStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_ONGOING) {\n      workPackage.statusState = AWPropertiesConstants.AIRM_PROJECT_STATUS_RELEASED;\n    } else if (currentStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_RELEASED) {\n      workPackage.statusState = AWPropertiesConstants.AIRM_PROJECT_STATUS_SCHEDULED;\n    } else if (currentStatus === AWPropertiesConstants.AIRM_PROJECT_STATUS_SCHEDULED) {\n      workPackage.statusState = AWPropertiesConstants.AIRM_PROJECT_STATUS_SIMULATED;\n    }\n  }\n\n  public sortWorkPackages(wp1: BidmProjectDTO, wp2: BidmProjectDTO): number {\n    return NumberUtils.toString(wp1.projectNumber).localeCompare(NumberUtils.toString(wp2.projectNumber));\n  }\n\n  public tooltipWorkPackageSchedulerEventType(\n    model: EventModel<MaintenanceForecastingWorkPackage>,\n    workPackageStatusList: LabelValue<string>[]\n  ): string {\n    const wp = model._obj.bidmProject;\n\n    const wpStatus = workPackageStatusList.find((status) => status.value === wp.statusState);\n    const wpStatusLabel = ObjectUtils.isDefined(wpStatus) ? (wpStatus as LabelValue<string>).label : '';\n\n    return `\n    <div class=\"scheduler-tooltip-container\">\n      ${this.translateService.instant('workPackageNumberShort')} n°${wp.projectNumber} (${wpStatusLabel})\n    </div>\n    `;\n  }\n\n  public updateEventGroupPlannedDate(data: {\n    eventGroup: EventGroupModel;\n    events: EventModel<MaintenanceForecastingUpcomingEvent>[];\n    plannedDate: Date;\n  }): void {\n    this.eventGroupPlannedDateUpdateSource.next(data);\n  }\n\n  public updateScheduledEventPlannedDate(data: {\n    event: EventModel<MaintenanceForecastingScheduledEvent>;\n    plannedDate: Date;\n  }): void {\n    this.scheduledEventPlannedDateUpdateSource.next(data);\n  }\n\n  public updateUnscheduledEvent(data: { event: EventModel<MaintenanceForecastingUnscheduledEvent> }): void {\n    this.unscheduledEventUpdateSource.next(data);\n  }\n\n  private openAssetByPnAndSn(pn: string, sn: string): void {\n    const input: BidoEquipmentDTO = {\n      sn,\n      pnCode: pn\n    };\n    this.getBidoEquipmentsByPnAndSn(input).subscribe((assetList) => {\n      if (!ListUtils.isNullOrEmpty(assetList) && assetList.length === 1) {\n        this.openAsset(assetList[0]);\n      }\n    });\n  }\n\n  private openPage(componentId: string, objectId: object): void {\n    const data: PageComponentData = {\n      componentId,\n      id: this.tabService.generateId(),\n      objectId: this.serializationService.serialize(objectId),\n      openMode: ComponentOpenMode.Read\n    };\n    const labelKey = 'transaction.' + data.componentId;\n\n    this.tabService.open(this.tabService.create(data, labelKey, true));\n  }\n\n  private openTask(taskCode: string, taskVersion: string): void {\n    const pageInput: BireTaskDTOId = {\n      taskCode,\n      taskVersion\n    };\n    this.openPage(ComponentConstants.ENG_TASK_FORM, pageInput);\n  }\n\n  private setForecastFilteringUpcomingEventTypeList(list: string[]): void {\n    this._forecastFiltering.upcomingEventTypeList = list;\n  }\n\n  private setForecastFilteringWorkPackageStatusList(list: string[]): void {\n    this._forecastFiltering.workPackageStatusList = list.filter(\n      (elt) => elt !== AWPropertiesConstants.AIRM_PROJECT_STATUS_CLOSE\n    );\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // Aircraft  maintenance api\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public createBidmWorkOrder(input: BidmWorkOrderDTO): Observable<BidmWorkOrderDTO> {\n    return super.post<BidmWorkOrderDTO, BidmWorkOrderDTO>(this.aircraftMaintenanceApi.createBidmWorkOrder, input);\n  }\n\n  public removeBidmWorkOrder(input: BidmWorkOrderDTOId): Observable<void> {\n    return super.post<BidmWorkOrderDTOId, void>(this.aircraftMaintenanceApi.removeBidmWorkOrder, input);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // Airworthiness management api\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public getTsnLabel(): Observable<string> {\n    return super.post<void, string>(this.airworthinessManagementApi.getTsnLabelForAirworthinessControl);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // AM project management api\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public createBidmProject(input: BidmProjectDTO): Observable<BidmProjectDTOId> {\n    return super.post<BidmProjectDTO, BidmProjectDTOId>(this.amProjectManagementApi.createBidmProject, input);\n  }\n\n  public getWorkPackage(projectId: string): Observable<BidmProjectDTO> {\n    return super.post<string, BidmProjectDTO>(this.amProjectManagementApi.findBidmProject, projectId);\n  }\n\n  public removeBidmProject(input: BidmProjectDTOId): Observable<void> {\n    return super.post<BidmProjectDTOId, void>(this.amProjectManagementApi.removeBidmProject, input);\n  }\n\n  public updateBidmProject(input: BidmProjectDTO): Observable<void> {\n    return super.post<BidmProjectDTO, void>(this.amProjectManagementApi.updateBidmProject, input);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // Bidt site api\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public getAllSiteByCriteria(input: BidtSiteDTO): Observable<BidtSiteDTO[]> {\n    return super.post<BidtSiteDTO, BidtSiteDTO[]>(this.bidtSiteApi.findAllByCriteria, input);\n  }\n\n  public getAllWorkPackageSite(): Observable<LabelValue<string>[]> {\n    return super.post<void, BidtSiteDTO[]>(this.bidtSiteApi.findAll).pipe(\n      map((siteList) => {\n        return siteList.map((site) => {\n          return {\n            label: `${site.siteName}`,\n            value: site.siteCode as string\n          };\n        });\n      })\n    );\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // Bidt stock mvt api\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public controlStock(bidmProject: BidmProjectDTO): Observable<GetQuantityInStockBySiteOutput[]> {\n    const input: ControlStockInput = {\n      date: bidmProject.projectStartDate,\n      mvtStatusExcluded: [\n        AWPropertiesConstants.MM_MVT_STATUS_EXECUTED_KEY,\n        AWPropertiesConstants.MM_MVT_STATUS_CANCELED_KEY,\n        AWPropertiesConstants.MM_MVT_STATUS_CLOSED_KEY\n      ],\n      projectId: { projectId: bidmProject.projectId as string },\n      withItsAlternatives: true\n    };\n\n    return super.post<ControlStockInput, GetQuantityInStockBySiteOutput[]>(this.bidtStockMvtApi.controlStock, input);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // Fleet management api\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public getBidoEquipmentsByPnAndSn(input: BidoEquipmentDTO): Observable<BidoEquipmentDTO[]> {\n    return super.post<BidoEquipmentDTO, BidoEquipmentDTO[]>(\n      this.fleetManagementApi.findBidoEquipmentsByPnAndSnCodes,\n      input\n    );\n  }\n\n  public getForecastProjectAsset(input: BidoEquipmentDTO): Observable<BidoEquipmentDTO> {\n    return super.post<BidoEquipmentDTO, BidoEquipmentDTO>(\n      this.fleetManagementApi.findFirstBidoEquipmentsByPnAndSnCodes,\n      input\n    );\n  }\n\n  public updateBidoNotification(input: BidoNotificationDTO): Observable<void> {\n    return super.post<BidoNotificationDTO, void>(this.fleetManagementApi.updateBidoNotification, input);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // Maintenance plan api\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public addBsdeEventSnChangeToWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingUnscheduledEvent>,\n    bidmProject: BidmProjectDTO,\n    bidoEquipment: BidoEquipmentDTO,\n    forecastProjectId: string\n  ): Observable<BidmProjectDTO> {\n    const input: UpdateWorkPackageWithBsdeScheduledEventInput = {\n      bidmProject,\n      bidoEquipment,\n      maintenanceForecastingProjectId: forecastProjectId,\n      bsdeEvent: eventModel._obj.bsdeEvent\n    };\n\n    return super.post<UpdateWorkPackageWithBsdeEventInput, BidmProjectDTO>(\n      this.maintenancePlanApi.addBsdeEventSnChangeToWorkPackage,\n      input\n    );\n  }\n\n  public addBsdeScheduledEventToWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingScheduledEvent>,\n    bidmProject: BidmProjectDTO,\n    bidoEquipment: BidoEquipmentDTO,\n    forecastProjectId: string\n  ): Observable<BidmProjectDTO> {\n    const input: UpdateWorkPackageWithBsdeScheduledEventInput = {\n      bidmProject,\n      bidoEquipment,\n      maintenanceForecastingProjectId: forecastProjectId,\n      bsdeEvent: eventModel._obj.bsdeScheduledEvent\n    };\n\n    return super.post<UpdateWorkPackageWithBsdeScheduledEventInput, BidmProjectDTO>(\n      this.maintenancePlanApi.addBsdeScheduledEventToWorkPackage,\n      input\n    );\n  }\n\n  public addBsdeUnscheduledEventEvolutionToWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingUnscheduledEvent>,\n    bidmProject: BidmProjectDTO,\n    bidoEquipment: BidoEquipmentDTO,\n    forecastProjectId: string\n  ): Observable<BidmProjectDTO> {\n    const input: UpdateWorkPackageWithBsdeEventInput = {\n      bidmProject,\n      bidoEquipment,\n      maintenanceForecastingProjectId: forecastProjectId,\n      bsdeEvent: eventModel._obj.bsdeEvent\n    };\n\n    return super.post<UpdateWorkPackageWithBsdeEventInput, BidmProjectDTO>(\n      this.maintenancePlanApi.addBsdeUnscheduledEventEvolutionToWorkPackage,\n      input\n    );\n  }\n\n  public addBsdeUnscheduledEventTaskToWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingUnscheduledEvent>,\n    bidmProject: BidmProjectDTO,\n    bidoEquipment: BidoEquipmentDTO,\n    forecastProjectId: string\n  ): Observable<BidmProjectDTO> {\n    const input: UpdateWorkPackageWithBsdeEventInput = {\n      bidmProject,\n      bidoEquipment,\n      maintenanceForecastingProjectId: forecastProjectId,\n      bsdeEvent: eventModel._obj.bsdeEvent\n    };\n\n    return super.post<UpdateWorkPackageWithBsdeEventInput, BidmProjectDTO>(\n      this.maintenancePlanApi.addBsdeUnscheduledEventTaskToWorkPackage,\n      input\n    );\n  }\n\n  public addDeferredDefectEventToWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingDefect>,\n    bidmProject: BidmProjectDTO,\n    bidoEquipment: BidoEquipmentDTO,\n    forecastProjectId: string\n  ): Observable<BidmProjectDTO> {\n    const defect = eventModel._obj.deferredDefectEvent;\n    const input: UpdateWorkPackageWithDeferredDefectEventInput = {\n      bidmProject,\n      bidoEquipment,\n      maintenanceForecastingProjectId: forecastProjectId,\n      notificationCode: (defect.bidoNotificationData as BidoNotificationDTO).notificationCode as string,\n      nteDate: defect.nteDate as Date\n    };\n\n    return super.post<UpdateWorkPackageWithDeferredDefectEventInput, BidmProjectDTO>(\n      this.maintenancePlanApi.addDeferredDefectEventToWorkPackage,\n      input\n    );\n  }\n\n  public clearMaintenanceForecastingCache(input: string): Observable<void> {\n    return super.post<string, void>(this.maintenancePlanApi.clearMaintenanceForecastingCache, input);\n  }\n\n  public getAllFamilyVariantByUcMfoNonRoutineEvent(): Observable<LabelValue<BireVariantVersionDTO>[]> {\n    return super.post<void, LabelValue<BireVariantVersionDTO>[]>(\n      this.maintenancePlanApi.findAllFamilyVariantByUcMfoNonRoutineEvent\n    );\n  }\n\n  public getAllForecastFlightUsage(input: string): Observable<GetAllMaintenanceForecastingFlightUsageOutput[]> {\n    return super.post<string, GetAllMaintenanceForecastingFlightUsageOutput[]>(\n      this.maintenancePlanApi.getAllMaintenanceForecastingFlightUsage,\n      input\n    );\n  }\n\n  public getAllForecastProjectCustomer(): Observable<LabelValue<BidoCustomerDTO>[]> {\n    return super.post<void, LabelValue<BidoCustomerDTO>[]>(this.maintenancePlanApi.geAllMaintenanceForecastingCustomer);\n  }\n\n  public getAllForecastProjectSite(): Observable<LabelValue<BsdeSiteDTO>[]> {\n    return super.post<void, LabelValue<BsdeSiteDTO>[]>(this.maintenancePlanApi.geAllMaintenanceForecastingSite);\n  }\n\n  public getWorkPackageWhereDefectIsAffected(\n    input: GetWorkPackageWhereDefectIsAffectedInput\n  ): Observable<BidmProjectDTO> {\n    return super.post<GetWorkPackageWhereDefectIsAffectedInput, BidmProjectDTO>(\n      this.maintenancePlanApi.getWorkPackageWhereDefectIsAffected,\n      input\n    );\n  }\n\n  public getWorkPackageWhereScheduledEventIsAffected(\n    input: GetWorkPackageWhereScheduledEventIsAffectedInput\n  ): Observable<BidmProjectDTO> {\n    return super.post<GetWorkPackageWhereScheduledEventIsAffectedInput, BidmProjectDTO>(\n      this.maintenancePlanApi.getWorkPackageWhereDefectIsAffected,\n      input\n    );\n  }\n\n  public getWorkPackageWhereUnscheduledEventIsAffected(\n    input: GetWorkPackageWhereUnscheduledEventIsAffectedInput\n  ): Observable<BidmProjectDTO> {\n    return super.post<GetWorkPackageWhereUnscheduledEventIsAffectedInput, BidmProjectDTO>(\n      this.maintenancePlanApi.getWorkPackageWhereDefectIsAffected,\n      input\n    );\n  }\n\n  public initialize(input: string): Observable<void> {\n    return super.post<string, void>(this.maintenancePlanApi.initMaintenanceForecastingCache, input);\n  }\n\n  public isForecastProjectLocked(input: string): Observable<boolean> {\n    return super.post<string, boolean>(this.maintenancePlanApi.isForecastProjectLocked, input);\n  }\n\n  public loadWithForecasterOption(input: LoadMaintenanceForecastingInput): Observable<MaintenanceForecastingElement[]> {\n    return super.post<LoadMaintenanceForecastingInput, MaintenanceForecastingElement[]>(\n      this.maintenancePlanApi.loadMaintenanceForecastingWithForecasterOption,\n      input\n    );\n  }\n\n  public loadWithFromDbOption(input: LoadMaintenanceForecastingInput): Observable<MaintenanceForecastingElement[]> {\n    return super.post<LoadMaintenanceForecastingInput, MaintenanceForecastingElement[]>(\n      this.maintenancePlanApi.loadMaintenanceForecastingWithFromDbOption,\n      input\n    );\n  }\n\n  public loadWithLocalRefreshOption(\n    input: LoadMaintenanceForecastingInput\n  ): Observable<MaintenanceForecastingElement[]> {\n    return super.post<LoadMaintenanceForecastingInput, MaintenanceForecastingElement[]>(\n      this.maintenancePlanApi.loadMaintenanceForecastingWithLocalRefreshOption,\n      input\n    );\n  }\n\n  public loadWithOptimizerOption(input: LoadMaintenanceForecastingInput): Observable<MaintenanceForecastingElement[]> {\n    return super.post<LoadMaintenanceForecastingInput, MaintenanceForecastingElement[]>(\n      this.maintenancePlanApi.loadMaintenanceForecastingWithOptimizerOption,\n      input\n    );\n  }\n\n  public removeBsdeEventSnChangeFromWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingUnscheduledEvent>,\n    bidmProject: BidmProjectDTO,\n    bidoEquipment: BidoEquipmentDTO,\n    forecastProjectId: string\n  ): Observable<BidmProjectDTO> {\n    const input: UpdateWorkPackageWithBsdeEventInput = {\n      bidmProject,\n      bidoEquipment,\n      maintenanceForecastingProjectId: forecastProjectId,\n      bsdeEvent: eventModel._obj.bsdeEvent\n    };\n\n    return super.post<UpdateWorkPackageWithBsdeEventInput, BidmProjectDTO>(\n      this.maintenancePlanApi.removeBsdeEventSnChangeFromWorkPackage,\n      input\n    );\n  }\n\n  public removeBsdeScheduledEventFromWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingScheduledEvent>,\n    bidmProject: BidmProjectDTO,\n    bidoEquipment: BidoEquipmentDTO,\n    forecastProjectId: string\n  ): Observable<BidmProjectDTO> {\n    const input: UpdateWorkPackageWithBsdeScheduledEventInput = {\n      bidmProject,\n      bidoEquipment,\n      maintenanceForecastingProjectId: forecastProjectId,\n      bsdeEvent: eventModel._obj.bsdeScheduledEvent\n    };\n\n    return super.post<UpdateWorkPackageWithBsdeScheduledEventInput, BidmProjectDTO>(\n      this.maintenancePlanApi.removeBsdeScheduledEventFromWorkPackage,\n      input\n    );\n  }\n\n  public removeBsdeUnscheduledEventEvolutionFromWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingUnscheduledEvent>,\n    bidmProject: BidmProjectDTO,\n    bidoEquipment: BidoEquipmentDTO,\n    forecastProjectId: string\n  ): Observable<BidmProjectDTO> {\n    const input: UpdateWorkPackageWithBsdeEventInput = {\n      bidmProject,\n      bidoEquipment,\n      maintenanceForecastingProjectId: forecastProjectId,\n      bsdeEvent: eventModel._obj.bsdeEvent\n    };\n\n    return super.post<UpdateWorkPackageWithBsdeEventInput, BidmProjectDTO>(\n      this.maintenancePlanApi.removeBsdeUnscheduledEventEvolutionFromWorkPackage,\n      input\n    );\n  }\n\n  public removeBsdeUnscheduledEventTaskFromWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingUnscheduledEvent>,\n    bidmProject: BidmProjectDTO,\n    bidoEquipment: BidoEquipmentDTO,\n    forecastProjectId: string\n  ): Observable<BidmProjectDTO> {\n    const input: UpdateWorkPackageWithBsdeEventInput = {\n      bidmProject,\n      bidoEquipment,\n      maintenanceForecastingProjectId: forecastProjectId,\n      bsdeEvent: eventModel._obj.bsdeEvent\n    };\n\n    return super.post<UpdateWorkPackageWithBsdeEventInput, BidmProjectDTO>(\n      this.maintenancePlanApi.removeBsdeUnscheduledEventTaskFromWorkPackage,\n      input\n    );\n  }\n\n  public removeDeferredDefectEventFromWorkPackage(\n    eventModel: EventModel<MaintenanceForecastingDefect>,\n    bidmProject: BidmProjectDTO,\n    bidoEquipment: BidoEquipmentDTO,\n    forecastProjectId: string\n  ): Observable<BidmProjectDTO> {\n    const defect = eventModel._obj.deferredDefectEvent;\n    const input: UpdateWorkPackageWithDeferredDefectEventInput = {\n      bidmProject,\n      bidoEquipment,\n      maintenanceForecastingProjectId: forecastProjectId,\n      notificationCode: (defect.bidoNotificationData as BidoNotificationDTO).notificationCode as string,\n      nteDate: defect.nteDate as Date\n    };\n\n    return super.post<UpdateWorkPackageWithDeferredDefectEventInput, BidmProjectDTO>(\n      this.maintenancePlanApi.removeDeferredDefectEventFromWorkPackage,\n      input\n    );\n  }\n\n  public updateMaintenanceForecasting(bsdeProject: BsdeProjectDTO, forecastProjectId: string): Observable<void> {\n    const input: UpdateMaintenanceForecastingInput = {\n      bsdeProjectDTO: bsdeProject,\n      maintenanceForecastingProjectId: forecastProjectId\n    };\n\n    return super.post<UpdateMaintenanceForecastingInput, void>(\n      this.maintenancePlanApi.updateMaintenanceForecasting,\n      input\n    );\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // Project management api\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public getBireMeasureReference(input: BireMeasureReferenceDTOId): Observable<BireMeasureReferenceDTO> {\n    return super.post<BireMeasureReferenceDTOId, BireMeasureReferenceDTO>(\n      this.productStructureManagementApi.findBireMeasureReference,\n      input\n    );\n  }\n\n  public getBireUnitMeasure(input: BireUnitMeasureDTOId): Observable<BireUnitMeasureDTO> {\n    return super.post<BireUnitMeasureDTOId, BireUnitMeasureDTO>(\n      this.productStructureManagementApi.findBireUnitMeasure,\n      input\n    );\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // Project management api\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public createBsdeEvent(input: BsdeEventDTO): Observable<BsdeEventDTOId> {\n    return super.post<BsdeEventDTO, BsdeEventDTOId>(this.projectManagementApi.createBsdeEvent, input);\n  }\n\n  public createBsdeProject(input: BsdeProjectDTO): Observable<BsdeProjectDTOId> {\n    return super.post<BsdeProjectDTO, BsdeProjectDTOId>(this.projectManagementApi.createBsdeProject, input);\n  }\n\n  public createBsdeProjectAttribute(input: BsdeProjectAttributeDTO): Observable<BsdeProjectAttributeDTOId> {\n    return super.post<BsdeProjectAttributeDTO, BsdeProjectAttributeDTOId>(\n      this.projectManagementApi.createBsdeProjectAttribute,\n      input\n    );\n  }\n\n  public createBsdeScheduledEvent(input: BsdeScheduledEventDTO): Observable<BsdeScheduledEventDTOId> {\n    return super.post<BsdeScheduledEventDTO, BsdeScheduledEventDTOId>(\n      this.projectManagementApi.createBsdeScheduledEvent,\n      input\n    );\n  }\n\n  public createOrUpdateBsdeAvailability(input: BsdeAvailabilityDTO[]): Observable<void> {\n    return super.post<BsdeAvailabilityDTO[], void>(this.projectManagementApi.createOrUpdateBsdeAvailability, input);\n  }\n\n  public findBsdeAvailabilitysByProjectAndAvailabilityTypeAndAvailabilityCode(\n    input: BsdeAvailabilityInput\n  ): Observable<BsdeAvailabilityDTO[]> {\n    return super.post<BsdeAvailabilityInput, BsdeAvailabilityDTO[]>(\n      this.projectManagementApi.findBsdeAvailabilitysByProjectAndAvailabilityTypeAndAvailabilityCode,\n      input\n    );\n  }\n\n  public getBsdeProject(input: BsdeProjectDTOId): Observable<BsdeProjectDTO> {\n    return super.post<BsdeProjectDTOId, BsdeProjectDTO>(this.projectManagementApi.findBsdeProject, input);\n  }\n\n  public getBsdeProjectAttributeList(input: BsdeProjectDTOId): Observable<BsdeProjectAttributeDTO[]> {\n    return super.post<BsdeProjectDTOId, BsdeProjectAttributeDTO[]>(\n      this.projectManagementApi.findBsdeProjectAttributesByProject,\n      input\n    );\n  }\n\n  public getBsdeProjectListByFleetId(input: string): Observable<BsdeProjectDTO[]> {\n    return super.post<string, BsdeProjectDTO[]>(this.projectManagementApi.findBsdeProjectsByFleetId, input);\n  }\n\n  public getBsdeProjectListByPnAndSn(input: BidoEquipmentDTO): Observable<BsdeProjectDTO[]> {\n    return super.post<BidoEquipmentDTO, BsdeProjectDTO[]>(this.projectManagementApi.findBsdeProjectsByPnAndSn, input);\n  }\n\n  public removeBsdeAvailability(input: BsdeAvailabilityDTOId[]): Observable<void> {\n    return super.post<BsdeAvailabilityDTOId[], void>(this.projectManagementApi.removeBsdeAvailability, input);\n  }\n\n  public removeBsdeProjectAttribute(input: BsdeProjectAttributeDTOId): Observable<void> {\n    return super.post<BsdeProjectAttributeDTOId, void>(this.projectManagementApi.removeBsdeProjectAttribute, input);\n  }\n\n  public synchronizeWithHR(input: number): Observable<BsdeAvailabilityDTOCustom[]> {\n    return super.post<number, BsdeAvailabilityDTOCustom[]>(this.projectManagementApi.synchronizeWithHR, input);\n  }\n\n  public updateBsdeEvent(input: BsdeEventDTO): Observable<void> {\n    return super.post<BsdeEventDTO, void>(this.projectManagementApi.updateBsdeEvent, input);\n  }\n\n  public updateBsdeScheduledEvent(input: BsdeScheduledEventDTO): Observable<void> {\n    return super.post<BsdeScheduledEventDTO, void>(this.projectManagementApi.updateBsdeScheduledEvent, input);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // Task maintenance api\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public findAllBireQualificationDatasDropDown(): Observable<LabelValue<string>[]> {\n    return super.post<void, LabelValue<string>[]>(this.taskManagementApi.createOrUpdateBsdeAvailability);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////\n  // User profile maintenance api\n  // ////////////////////////////////////////////////////////////////////////////\n\n  public workPackageAssignedToList(): Observable<LabelValue<string>[]> {\n    return super\n      .post<string, BidoUserDTO[]>(\n        this.userProfileManagementApi.findBidoUsersWithUseCase,\n        BidoFunctionTypeConstants.UC_AIRM_RECEPTION\n      )\n      .pipe(\n        map((userList) => {\n          return ListUtils.isNullOrEmpty(userList)\n            ? []\n            : userList\n                .map((user) => {\n                  return {\n                    label: `${user.lastname} ${user.firstname}`,\n                    value: user.userId as string\n                  };\n                })\n                .sort((user1, user2) => user1.label.toUpperCase().localeCompare(user2.label.toUpperCase()));\n        })\n      );\n  }\n\n  public loadWorkCenterListBySite(input: string | undefined): Observable<SelectItem[]> {\n    if (StringUtils.isNullOrEmpty(input)) {\n      return of<SelectItem[]>([]);\n    } else {\n      return super.post<string, SelectItem[]>(this.bidtWarehouseApi.findByMandantAndSiteCode, input);\n    }\n  }\n\n  public loadAllWorkCenterList(): Observable<SelectItem[]> {\n    return super.post<void, SelectItem[]>(this.bidtWarehouseApi.findAllWarehouseByUserRights);\n  }\n}\n","module.exports = \"<div class=\\\"aw-global-filter\\\">\\r\\n  <label class=\\\"aw-global-filter-label\\\">\\r\\n    <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n  </label>\\r\\n\\r\\n  <input\\r\\n    class=\\\"aw-global-filter-input\\\"\\r\\n    type=\\\"text\\\"\\r\\n    placeholder=\\\"{{ 'typeToFilter' | translate }}\\\"\\r\\n    [(ngModel)]=\\\"forecastFormService.forecastFiltering.globalSearch\\\"\\r\\n    (keyup)=\\\"filter(forecastFormService.forecastFiltering.globalSearch)\\\"\\r\\n  />\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { GenericComponent } from '../../../../../shared/types/generic-component';\r\nimport { ForecastFormService } from '../forecast-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-forecast-form-global-filter',\r\n  templateUrl: './forecast-global-filter.component.html'\r\n})\r\nexport class GlobalFilterForecastFormComponent extends GenericComponent {\r\n  private static readonly SEARCH_TEXT_DEBOUNCE_TIME: number = 500;\r\n\r\n  private globalSearchFilterChanged: Subject<string>;\r\n\r\n  public constructor(public forecastFormService: ForecastFormService) {\r\n    super(ComponentOpenMode.Write);\r\n\r\n    this.registerGlobalSearchFilterObservable();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'GlobalFilterForecastFormComponent';\r\n  }\r\n\r\n  public filter(searchTextValue: string): void {\r\n    this.globalSearchFilterChanged.next(searchTextValue);\r\n  }\r\n\r\n  private clearGlobalFilter(): void {\r\n    this.forecastFormService.forecastFiltering.globalSearch = '';\r\n  }\r\n\r\n  private registerGlobalSearchFilterObservable(): void {\r\n    this.clearGlobalFilter();\r\n    this.globalSearchFilterChanged = new Subject<string>();\r\n    this.globalSearchFilterChanged\r\n      .pipe(\r\n        debounceTime(GlobalFilterForecastFormComponent.SEARCH_TEXT_DEBOUNCE_TIME),\r\n        distinctUntilChanged(),\r\n        takeUntil(this.unsubscribe)\r\n      )\r\n      .subscribe(() => {\r\n        this.forecastFormService.filterForecast();\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <h4 class=\\\"section-title\\\">\\r\\n        {{ \\\"flight\\\" | translate }}\\r\\n      </h4>\\r\\n\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"legend-item\\\">\\r\\n          <div class=\\\"flight\\\"></div>\\r\\n          <div class=\\\"label\\\">{{ \\\"flight\\\" | translate }}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"section\\\">\\r\\n      <h4 class=\\\"section-title\\\">\\r\\n        {{ \\\"upcomingEvent\\\" | translate }}\\r\\n      </h4>\\r\\n\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"legend-item\\\">\\r\\n          <div class=\\\"upcoming-event ok\\\"></div>\\r\\n          <div class=\\\"label\\\">{{ getComponentName() + \\\".upcomingEventOk\\\" | translate }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"legend-item\\\">\\r\\n          <div class=\\\"upcoming-event warn\\\"></div>\\r\\n          <div class=\\\"label\\\">{{ getComponentName() + \\\".upcomingEventWarn\\\" | translate }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"legend-item\\\">\\r\\n          <div class=\\\"upcoming-event nok\\\"></div>\\r\\n          <div class=\\\"label\\\">{{ getComponentName() + \\\".upcomingEventNok\\\" | translate }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"legend-item\\\">\\r\\n          <div class=\\\"upcoming-event in-past\\\"></div>\\r\\n          <div class=\\\"label\\\">{{ getComponentName() + \\\".upcomingEventInPast\\\" | translate }}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"section\\\">\\r\\n      <h4 class=\\\"section-title\\\">\\r\\n        {{ \\\"workPackage\\\" | translate }}\\r\\n      </h4>\\r\\n\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"legend-item\\\">\\r\\n          <div class=\\\"work-package simulated\\\"></div>\\r\\n          <div class=\\\"label\\\">{{ \\\"simulated\\\" | translate }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"legend-item\\\">\\r\\n          <div class=\\\"work-package scheduled\\\"></div>\\r\\n          <div class=\\\"label\\\">{{ \\\"scheduled\\\" | translate }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"legend-item\\\">\\r\\n          <div class=\\\"work-package released\\\"></div>\\r\\n          <div class=\\\"label\\\">{{ \\\"released\\\" | translate }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"legend-item\\\">\\r\\n          <div class=\\\"work-package other\\\"></div>\\r\\n          <div class=\\\"label\\\">{{ getComponentName() + \\\".workPackageOtherStatus\\\" | translate }}</div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"legend-item\\\">\\r\\n          <div class=\\\"work-package closed\\\"></div>\\r\\n          <div class=\\\"label\\\">{{ \\\"closed\\\" | translate }}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"close\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \":host .legend-item {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: row;\\n  height: 2.25rem; }\\n  :host .legend-item .label {\\n    margin-left: 1rem; }\\n  :host .legend-item .flight {\\n    background-color: purple;\\n    height: 4px;\\n    width: calc(21.21px * 2); }\\n  :host .legend-item .upcoming-event {\\n    height: 21.21px;\\n    -webkit-transform: rotate(45deg);\\n            transform: rotate(45deg);\\n    width: 21.21px; }\\n  :host .legend-item .upcoming-event.in-past {\\n      background-color: #000;\\n      color: #fff; }\\n  :host .legend-item .upcoming-event.nok {\\n      background-color: #ab000d;\\n      color: #fff; }\\n  :host .legend-item .upcoming-event.ok {\\n      background-color: #7cb342;\\n      color: #000; }\\n  :host .legend-item .upcoming-event.warn {\\n      background-color: #fbc02d;\\n      color: #000; }\\n  :host .legend-item .work-package {\\n    height: 21.21px;\\n    width: calc(21.21px * 2); }\\n  :host .legend-item .work-package.simulated {\\n      background-color: #63a4ff; }\\n  :host .legend-item .work-package.scheduled {\\n      background-color: #004ba0; }\\n  :host .legend-item .work-package.released {\\n      background-color: #bcbcbc; }\\n  :host .legend-item .work-package.closed {\\n      background-color: #232323; }\\n  :host .legend-item .work-package.other {\\n      background-color: #595959; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9tYWludGVuYW5jZS9mb3JlY2FzdC9mb3JtL2ZvcmVjYXN0LWxlZ2VuZC1kaWFsb2cvZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxhcHBcXG1haW5cXG1haW50ZW5hbmNlXFxmb3JlY2FzdFxcZm9ybVxcZm9yZWNhc3QtbGVnZW5kLWRpYWxvZ1xcZm9yZWNhc3QtbGVnZW5kLWRpYWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUVJLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGVBQWUsRUFBQTtFQUxuQjtJQVFNLGlCQUFpQixFQUFBO0VBUnZCO0lBWU0sd0JBQXdCO0lBQ3hCLFdBQVc7SUFDWCx3QkFBZ0MsRUFBQTtFQWR0QztJQWtCTSxlQXBCZTtJQXFCZixnQ0FBd0I7WUFBeEIsd0JBQXdCO0lBQ3hCLGNBdEJlLEVBQUE7RUFFckI7TUF1QlEsc0JBQXNCO01BQ3RCLFdBQVcsRUFBQTtFQXhCbkI7TUE0QlEseUJBQXlCO01BQ3pCLFdBQVcsRUFBQTtFQTdCbkI7TUFpQ1EseUJBQXlCO01BQ3pCLFdBQVcsRUFBQTtFQWxDbkI7TUFzQ1EseUJBQXlCO01BQ3pCLFdBQVcsRUFBQTtFQXZDbkI7SUE0Q00sZUE5Q2U7SUErQ2Ysd0JBQWdDLEVBQUE7RUE3Q3RDO01BZ0RRLHlCQUF5QixFQUFBO0VBaERqQztNQW9EUSx5QkFBeUIsRUFBQTtFQXBEakM7TUF3RFEseUJBQXlCLEVBQUE7RUF4RGpDO01BNERRLHlCQUF5QixFQUFBO0VBNURqQztNQWdFUSx5QkFBeUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbnRlbmFuY2UvZm9yZWNhc3QvZm9ybS9mb3JlY2FzdC1sZWdlbmQtZGlhbG9nL2ZvcmVjYXN0LWxlZ2VuZC1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkZXZlbnQtd2lkdGg6IDIxLjIxcHg7XHJcblxyXG46aG9zdCB7XHJcbiAgLmxlZ2VuZC1pdGVtIHtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgIGhlaWdodDogMi4yNXJlbTtcclxuXHJcbiAgICAubGFiZWwge1xyXG4gICAgICBtYXJnaW4tbGVmdDogMXJlbTtcclxuICAgIH1cclxuXHJcbiAgICAuZmxpZ2h0IHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcHVycGxlO1xyXG4gICAgICBoZWlnaHQ6IDRweDtcclxuICAgICAgd2lkdGg6IGNhbGMoI3skZXZlbnQtd2lkdGh9ICogMik7XHJcbiAgICB9XHJcblxyXG4gICAgLnVwY29taW5nLWV2ZW50IHtcclxuICAgICAgaGVpZ2h0OiAkZXZlbnQtd2lkdGg7XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgd2lkdGg6ICRldmVudC13aWR0aDtcclxuXHJcbiAgICAgICYuaW4tcGFzdCB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi5ub2sge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNhYjAwMGQ7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYub2sge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM3Y2IzNDI7XHJcbiAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYud2FybiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZiYzAyZDtcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC53b3JrLXBhY2thZ2Uge1xyXG4gICAgICBoZWlnaHQ6ICRldmVudC13aWR0aDtcclxuICAgICAgd2lkdGg6IGNhbGMoI3skZXZlbnQtd2lkdGh9ICogMik7XHJcblxyXG4gICAgICAmLnNpbXVsYXRlZCB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzYzYTRmZjtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi5zY2hlZHVsZWQge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDRiYTA7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYucmVsZWFzZWQge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNiY2JjYmM7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYuY2xvc2VkIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjMyMzIzO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmLm90aGVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTk1OTU5O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-forecast-form-legend',\r\n  styleUrls: ['./forecast-legend-dialog.component.scss'],\r\n  templateUrl: './forecast-legend-dialog.component.html'\r\n})\r\nexport class LegendForecastFormDialogComponent extends DialogComponent {\r\n  public constructor() {\r\n    super(ComponentOpenMode.Write, 'LegendForecastFormDialogComponent');\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"70\\\">\\r\\n  <a-header>\\r\\n    <h3 class=\\\"grid-cell-title\\\">\\r\\n      {{ getComponentName() + \\\".projectHeader\\\" | translate }}\\r\\n    </h3>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"grid-row\\\">\\r\\n      <div class=\\\"grid-cell--12 main-block\\\">\\r\\n        <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n          <div class=\\\"section\\\">\\r\\n            <div class=\\\"section-content\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"forecastNumber\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"forecastProject.projectNumber\\\" [disabled]=\\\"true\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" [class.required]=\\\"!isReadOpenMode\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"forecastName\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"forecastProject.projectName\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"mroCenter\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      [options]=\\\"repairCenterList\\\"\\r\\n                      [(ngModel)]=\\\"selectedRepairCenter\\\"\\r\\n                      [showClear]=\\\"true\\\"\\r\\n                      placeholder=\\\"&nbsp;\\\"\\r\\n                      (onChange)=\\\"updateRepairCenterCode()\\\"\\r\\n                      appendTo=\\\"body\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"workCenter\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      [options]=\\\"workCenterList\\\"\\r\\n                      [(ngModel)]=\\\"selectedWorkCenter\\\"\\r\\n                      [showClear]=\\\"true\\\"\\r\\n                      [disabled]=\\\"workCenterList.length == 0\\\"\\r\\n                      placeholder=\\\"&nbsp;\\\"\\r\\n                      (onChange)=\\\"updateWorkCenter()\\\"\\r\\n                      appendTo=\\\"body\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"customer\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      [options]=\\\"customerList\\\"\\r\\n                      [(ngModel)]=\\\"selectedCustomer\\\"\\r\\n                      [showClear]=\\\"true\\\"\\r\\n                      placeholder=\\\"&nbsp;\\\"\\r\\n                      (onChange)=\\\"updateCustomerCode()\\\"\\r\\n                      appendTo=\\\"body\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'flex--3': !isCreateOpenMode }\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"description\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control text-area\\\">\\r\\n                    <textarea\\r\\n                      class=\\\"aw-textarea\\\"\\r\\n                      [rows]=\\\"1\\\"\\r\\n                      pInputTextarea\\r\\n                      autoResize=\\\"autoResize\\\"\\r\\n                      [(ngModel)]=\\\"forecastProject.projectDescription\\\"\\r\\n                    ></textarea>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"!isCreateOpenMode\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"status\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"aw-input\\\"\\r\\n                      [disabled]=\\\"true\\\"\\r\\n                      [(ngModel)]=\\\"forecastProject.statusStateText\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"section\\\">\\r\\n            <h4 class=\\\"section-title\\\">\\r\\n              {{ getComponentName() + \\\".fleetData\\\" | translate }}\\r\\n            </h4>\\r\\n\\r\\n            <div class=\\\"section-content\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                    <p-selectButton\\r\\n                      [(ngModel)]=\\\"selectedForecastCategory\\\"\\r\\n                      [options]=\\\"forecastCategoryList\\\"\\r\\n                      (onOptionClick)=\\\"onChangeForecastCategory($event)\\\"\\r\\n                    ></p-selectButton>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"!assetSelected\\\" [class.required]=\\\"!isReadOpenMode\\\">\\r\\n                  <label class=\\\"form-label\\\">{{ \\\"fleetCode\\\" | translate }}</label>\\r\\n\\r\\n                  <div class=\\\"form-control form-control-with-modal\\\">\\r\\n                    <div class=\\\"form-control-data\\\" (click)=\\\"openSearchFleetDialog()\\\">\\r\\n                      {{ forecastProject.projectFleetCode }}\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"forecastProject.projectFleetCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                      <i\\r\\n                        class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                        (click)=\\\"clearForecastProjectFleet()\\\"\\r\\n                      ></i>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"btn-search-wrapper\\\">\\r\\n                      <i\\r\\n                        class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                        (click)=\\\"openSearchFleetDialog()\\\"\\r\\n                      ></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"forecastProject.projectFleetCode && !assetSelected\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"fleetName\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"aw-input\\\"\\r\\n                      [(ngModel)]=\\\"forecastProject.projectFleetName\\\"\\r\\n                      [disabled]=\\\"true\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"forecastProject.projectFleetCode && !assetSelected\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"customer\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"forecastProject.customerCode\\\" [disabled]=\\\"true\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" *ngIf=\\\"assetSelected\\\" [class.required]=\\\"!isReadOpenMode\\\">\\r\\n                  <label class=\\\"form-label\\\">{{ \\\"assetCode\\\" | translate }}</label>\\r\\n\\r\\n                  <div class=\\\"form-control form-control-with-modal\\\">\\r\\n                    <div class=\\\"form-control-data\\\" (click)=\\\"openSearchAssetDialog()\\\">\\r\\n                      {{ forecastProjectAsset.equipmentCode }}\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"forecastProjectAsset.equipmentCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                      <i\\r\\n                        class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                        (click)=\\\"clearForecastProjectAsset()\\\"\\r\\n                      ></i>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"btn-search-wrapper\\\">\\r\\n                      <i\\r\\n                        class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                        (click)=\\\"openSearchAssetDialog()\\\"\\r\\n                      ></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\" [class.required]=\\\"!isReadOpenMode\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ getComponentName() + \\\".unitConversionMatrix\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      [options]=\\\"ucmList\\\"\\r\\n                      [(ngModel)]=\\\"selectedconversionMatrixDTO\\\"\\r\\n                      [showClear]=\\\"true\\\"\\r\\n                      placeholder=\\\"&nbsp;\\\"\\r\\n                      (onChange)=\\\"onChangeConversionMatrix()\\\"\\r\\n                      appendTo=\\\"body\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"section\\\">\\r\\n            <h4 class=\\\"section-title\\\">\\r\\n              {{ \\\"settings\\\" | translate }}\\r\\n            </h4>\\r\\n            <div class=\\\"row\\\" style=\\\"display: flex; justify-content: flex-end;\\\">\\r\\n              <button\\r\\n                *ngIf=\\\"\\r\\n                  !isCreateOpenMode && forecastProject.statusState != bidoFunctionTypeConstants.UC_MFO_FORECAST_CLOSING\\r\\n                \\\"\\r\\n                type=\\\"button\\\"\\r\\n                mat-raised-button\\r\\n                color=\\\"warn\\\"\\r\\n                (click)=\\\"closeForecastProject()\\\"\\r\\n              >\\r\\n                {{ getComponentName() + \\\".closeForecast\\\" | translate }}\\r\\n              </button>\\r\\n              <button\\r\\n                *ngIf=\\\"\\r\\n                  !isCreateOpenMode &&\\r\\n                  forecastProject.statusState != bidoFunctionTypeConstants.UC_MFO_FORECAST_MANAGEMENT\\r\\n                \\\"\\r\\n                type=\\\"button\\\"\\r\\n                mat-raised-button\\r\\n                (click)=\\\"reopenForecastProject()\\\"\\r\\n              >\\r\\n                {{ getComponentName() + \\\".reopenForecast\\\" | translate }}\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"section-content\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"startDate\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-calendar\\r\\n                      showButtonBar=\\\"true\\\"\\r\\n                      [monthNavigator]=\\\"true\\\"\\r\\n                      [yearNavigator]=\\\"true\\\"\\r\\n                      [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                      class=\\\"aw-calendar\\\"\\r\\n                      [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                      [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                      [showTime]=\\\"true\\\"\\r\\n                      [maxDate]=\\\"forecastProject.projectEndDate\\\"\\r\\n                      [(ngModel)]=\\\"forecastProject.projectStartDate\\\"\\r\\n                      appendTo=\\\"body\\\"\\r\\n                    ></p-calendar>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"endDate\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-calendar\\r\\n                      showButtonBar=\\\"true\\\"\\r\\n                      [monthNavigator]=\\\"true\\\"\\r\\n                      [yearNavigator]=\\\"true\\\"\\r\\n                      [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                      class=\\\"aw-calendar\\\"\\r\\n                      [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                      [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                      [showTime]=\\\"true\\\"\\r\\n                      [minDate]=\\\"forecastProject.projectStartDate\\\"\\r\\n                      [(ngModel)]=\\\"forecastProject.projectEndDate\\\"\\r\\n                      appendTo=\\\"body\\\"\\r\\n                    ></p-calendar>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"llp\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-checkbox\\r\\n                      binary=\\\"true\\\"\\r\\n                      class=\\\"aw-checkbox\\\"\\r\\n                      [(ngModel)]=\\\"forecastProjectLlpEventsGeneration\\\"\\r\\n                    ></p-checkbox>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">\\r\\n                    {{ \\\"occurrence\\\" | translate }}\\r\\n                  </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      [options]=\\\"occurrenceList\\\"\\r\\n                      placeholder=\\\"&nbsp;\\\"\\r\\n                      [(ngModel)]=\\\"forecastProjectOccurrenceNumber\\\"\\r\\n                      appendTo=\\\"body\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <div class=\\\"section\\\">\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"display--flex-row flex--1 flex-row--justify-end action-list\\\">\\r\\n            <button type=\\\"button\\\" mat-raised-button (click)=\\\"cancelForecastProject()\\\">\\r\\n              {{ \\\"cancel\\\" | translate }}\\r\\n            </button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveForecastProject()\\\">\\r\\n              {{ \\\"save\\\" | translate }}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-equipment\\r\\n  *ngIf=\\\"showSearchAssetDialog\\\"\\r\\n  [(display)]=\\\"showSearchAssetDialog\\\"\\r\\n  (onSelected)=\\\"onSelectedAsset($event)\\\"\\r\\n></aw-dialog-search-equipment>\\r\\n\\r\\n<aw-dialog-search-fleet\\r\\n  *ngIf=\\\"showSearchFleetDialog\\\"\\r\\n  [(display)]=\\\"showSearchFleetDialog\\\"\\r\\n  (onSelected)=\\\"onSelectedFleet($event)\\\"\\r\\n></aw-dialog-search-fleet>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { forkJoin } from 'rxjs';\r\nimport { concatMap } from 'rxjs/operators';\r\n\r\nimport { BidoCustomerDTO } from '../../../../../../../generated_files/api-types/bido-customer-dto.interface';\r\nimport { BidoEquipmentDTO } from '../../../../../../../generated_files/api-types/bido-equipment-dto.interface';\r\nimport { BsdeSiteDTO } from '../../../../../../../generated_files/api-types/bsde-site-dto.interface';\r\nimport { BidoFunctionTypeConstants } from '../../../../../shared/constants/bido-function-type-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { SearchBireConversionMatrixInput } from '../../../../../shared/types/api-input-types/unit-conversion-matrix/bire-unit-conversion-matrix-dto.interface';\r\nimport { BireConversionMatrixDTO } from '../../../../../shared/types/api-output-types/unit-conversion-matrix/bire-unit-conversion-matrix-dto.interface';\r\nimport { BidoEquipmentTableDTO } from '../../../../../shared/types/api-types/bido-equipment-table-dto.interface';\r\nimport { BidoFleetDTOId } from '../../../../../shared/types/api-types/bido-fleet-dto-id.interface';\r\nimport { BidoFleetDTO } from '../../../../../shared/types/api-types/bido-fleet-dto.interface';\r\nimport { BsdeProjectDTO } from '../../../../../shared/types/api-types/bsde-project-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { ListUtils } from '../../../../../shared/utils/list-utils';\r\nimport { ObjectUtils } from '../../../../../shared/utils/object-utils';\r\nimport { StringUtils } from '../../../../../shared/utils/string-utils';\r\nimport { UnitConversionMatrixService } from '../../../../engineering-management/unit-conversion-matrix/unit-conversion-matrix.service';\r\nimport { FleetFormService } from '../../../../fleet-management/fleet-form/fleet-form.service';\r\nimport { ForecastCategory, ForecastFormService } from '../forecast-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-forecast-form-project-header',\r\n  templateUrl: './forecast-project-header-dialog.component.html'\r\n})\r\nexport class ForecastProjectHeaderDialogComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public forecastProject: BsdeProjectDTO;\r\n\r\n  @Input()\r\n  public forecastProjectSrc: BsdeProjectDTO;\r\n\r\n  @Input()\r\n  public forecastProjectAsset: BidoEquipmentDTO;\r\n\r\n  @Input()\r\n  public selectedForecastCategory: ForecastCategory;\r\n\r\n  @Input()\r\n  public forecastProjectId: string | undefined;\r\n\r\n  @Input()\r\n  public forecastProjectLlpEventsGeneration: boolean;\r\n\r\n  @Input()\r\n  public forecastProjectOccurrenceNumber: number | undefined;\r\n\r\n  @Input()\r\n  public selectedRepairCenter: BsdeSiteDTO | undefined;\r\n\r\n  @Input()\r\n  public selectedWorkCenter: number | undefined;\r\n\r\n  @Input()\r\n  public selectedCustomer: BidoCustomerDTO | undefined;\r\n\r\n  @Input()\r\n  public showSearchFleetDialog: boolean;\r\n\r\n  @Input()\r\n  public showSearchAssetDialog: boolean;\r\n\r\n  @Input()\r\n  public customerList: LabelValue<BidoCustomerDTO>[];\r\n\r\n  @Input()\r\n  public repairCenterList: LabelValue<BsdeSiteDTO>[];\r\n\r\n  @Input()\r\n  public forecastCategoryList: SelectItem[];\r\n\r\n  @Input()\r\n  public occurrenceList: LabelValue<number>[];\r\n\r\n  @Output()\r\n  public onSave: EventEmitter<string | undefined>;\r\n\r\n  public readonly forecastCategory: typeof ForecastCategory;\r\n  public readonly bidoFunctionTypeConstants: typeof BidoFunctionTypeConstants;\r\n  public assetSelected: boolean;\r\n  public workCenterList: SelectItem[];\r\n\r\n  // Unit Conversion Matrix\r\n  public familyVariantCode: string;\r\n  public ucmList: LabelValue<number>[] | undefined;\r\n  public searchObject: SearchBireConversionMatrixInput;\r\n  public conversionMatrixDTO: BireConversionMatrixDTO;\r\n  public selectedconversionMatrixDTO: number | undefined;\r\n\r\n  public constructor(\r\n    public forecastFormService: ForecastFormService,\r\n    public messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    private readonly unitConversionMatrixService: UnitConversionMatrixService,\r\n    private readonly fleetFormService: FleetFormService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'ForecastProjectHeaderDialogComponent');\r\n    this.bidoFunctionTypeConstants = BidoFunctionTypeConstants;\r\n    this.assetSelected = false;\r\n\r\n    this.onSave = new EventEmitter<string | undefined>();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (!!this.forecastProject.projectPn || !!this.forecastProject.projectSn) {\r\n      this.assetSelected = true;\r\n    }\r\n\r\n    // Unit conversion matrix\r\n    this.searchObject = {};\r\n    this.ucmList = [];\r\n\r\n    this.workCenterList = [];\r\n    this.updateRepairCenterCode();\r\n\r\n    if (this.assetSelected) {\r\n      this.getConversionMatrixForAsset();\r\n    } else {\r\n      if (!!this.forecastProject.projectFleetId) {\r\n        this.getFleetEquipments(this.forecastProject.projectFleetId);\r\n      }\r\n    }\r\n  }\r\n\r\n  public cancelForecastProject(): void {\r\n    this.closeDialog();\r\n  }\r\n\r\n  private createForecastProject(): void {\r\n    if (this.checkForecastProject()) {\r\n      const forecastProjectObservable =\r\n        this.selectedForecastCategory === ForecastCategory.FLEET\r\n          ? this.forecastFormService.getBsdeProjectListByFleetId(this.forecastProject.projectFleetId as string)\r\n          : this.forecastFormService.getBsdeProjectListByPnAndSn({\r\n              pnCode: this.forecastProjectAsset.statusState,\r\n              sn: this.forecastProjectAsset.sn\r\n            });\r\n\r\n      forecastProjectObservable.subscribe({\r\n        next: (forecastProjectList) => {\r\n          const existingProjectNotClosed = ListUtils.orEmpty(forecastProjectList).some(\r\n            (forecastProject) => forecastProject.statusState !== BidoFunctionTypeConstants.UC_MFO_FORECAST_CLOSING\r\n          );\r\n\r\n          if (existingProjectNotClosed) {\r\n            this.messageService.showWarningMessage(\r\n              this.getTranslateKey(\r\n                this.selectedForecastCategory === ForecastCategory.FLEET\r\n                  ? 'errorOnProjectAlreadyExistByFleet'\r\n                  : 'errorOnProjectAlreadyExistByPnSn'\r\n              )\r\n            );\r\n          } else {\r\n            this.forecastProject.fromSap = false;\r\n            this.forecastProject.projectStartDate = this.forecastProject.projectStartDate || new Date();\r\n            this.forecastProject.statusDate = new Date();\r\n            this.forecastProject.statusState = BidoFunctionTypeConstants.UC_MFO_FORECAST_MANAGEMENT;\r\n\r\n            if (ObjectUtils.isDefined(this.selectedCustomer)) {\r\n              this.forecastProject.customerCode = (this.selectedCustomer as BidoCustomerDTO).customerCode;\r\n            } else {\r\n              this.forecastProject.customerCode = undefined;\r\n            }\r\n\r\n            this.forecastFormService\r\n              .createBsdeProject(this.forecastProject)\r\n              .pipe(\r\n                concatMap((forecastProjectId) => {\r\n                  this.forecastProjectId = forecastProjectId.projectId;\r\n\r\n                  return this.forecastFormService.saveForecastProjectAttributes(\r\n                    forecastProjectId.projectId,\r\n                    this.forecastProjectLlpEventsGeneration,\r\n                    this.forecastProjectOccurrenceNumber\r\n                  );\r\n                })\r\n              )\r\n              .subscribe({\r\n                next: () => {\r\n                  this.updateOpenMode(ComponentOpenMode.Write);\r\n\r\n                  this.onSave.emit(this.forecastProjectId);\r\n                  this.messageService.showSuccessMessage(this.getTranslateKey('successOnCreateForecast'));\r\n                  this.closeDialog();\r\n                }\r\n              });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private updateForecastProject(): void {\r\n    if (this.checkForecastProject()) {\r\n      this.forecastFormService.isForecastProjectLocked(this.forecastProjectId as string).subscribe({\r\n        next: (isForecastProjectLocked) => {\r\n          if (isForecastProjectLocked) {\r\n            this.messageService.showWarningMessage(this.getTranslateKey('warningOnForecastLocked'));\r\n          } else {\r\n            this.forecastFormService\r\n              .updateMaintenanceForecasting(this.forecastProject, this.forecastProjectId as string)\r\n              .pipe(\r\n                concatMap(() =>\r\n                  this.forecastFormService.saveForecastProjectAttributes(\r\n                    this.forecastProjectId as string,\r\n                    this.forecastProjectLlpEventsGeneration,\r\n                    this.forecastProjectOccurrenceNumber\r\n                  )\r\n                )\r\n              )\r\n              .subscribe({\r\n                next: () => {\r\n                  this.onSave.emit();\r\n                  this.messageService.showSuccessMessage(this.getTranslateKey('successOnUpdateForecast'));\r\n                  this.closeDialog();\r\n                }\r\n              });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public updateRepairCenterCode(): void {\r\n    if (ObjectUtils.isDefined(this.selectedRepairCenter)) {\r\n      this.forecastProject.repairCenterCode = (this.selectedRepairCenter as BsdeSiteDTO).repairCenterCode;\r\n      this.initializeWorkCenterList(this.forecastProject.repairCenterCode as string);\r\n    } else {\r\n      this.forecastProject.repairCenterCode = undefined;\r\n    }\r\n  }\r\n\r\n  private initializeWorkCenterList(siteCode: string) {\r\n    this.forecastFormService.loadWorkCenterListBySite(siteCode).subscribe((result) => {\r\n      this.workCenterList = result.map((mroCenter) => {\r\n        return {\r\n          label: mroCenter.label,\r\n          value: Number(mroCenter.value)\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  public updateWorkCenter(): void {\r\n    if (ObjectUtils.isDefined(this.selectedWorkCenter)) {\r\n      this.forecastProject.whId = this.selectedWorkCenter;\r\n    } else {\r\n      this.forecastProject.whId = undefined;\r\n    }\r\n  }\r\n\r\n  public updateCustomerCode(): void {\r\n    if (ObjectUtils.isDefined(this.selectedCustomer)) {\r\n      this.forecastProject.customerCode = (this.selectedCustomer as BidoCustomerDTO).customerCode;\r\n    } else {\r\n      this.forecastProject.customerCode = undefined;\r\n    }\r\n  }\r\n\r\n  public openSearchFleetDialog(): void {\r\n    this.showSearchFleetDialog = true;\r\n  }\r\n\r\n  public clearForecastProjectFleet(): void {\r\n    this.forecastProject.customerCode = undefined;\r\n    this.forecastProject.projectFleetCode = undefined;\r\n    this.forecastProject.projectFleetId = undefined;\r\n    this.forecastProject.projectFleetName = undefined;\r\n  }\r\n\r\n  public openSearchAssetDialog(): void {\r\n    this.showSearchAssetDialog = true;\r\n  }\r\n\r\n  public clearForecastProjectAsset(): void {\r\n    this.forecastProject.projectPn = undefined;\r\n    this.forecastProject.projectSn = undefined;\r\n    this.forecastProjectAsset = {};\r\n  }\r\n\r\n  private checkForecastProject(): boolean {\r\n    if (StringUtils.isNullOrEmpty(this.forecastProject.projectName)) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('warningOnNoSelectedForecastName'));\r\n\r\n      return false;\r\n    } else if (\r\n      this.forecastProject.projectStartDate &&\r\n      this.forecastProject.projectEndDate &&\r\n      moment(this.forecastProject.projectStartDate).isAfter(moment(this.forecastProject.projectEndDate))\r\n    ) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('startDateAfterEndDate'));\r\n\r\n      return false;\r\n    } else if (\r\n      this.selectedForecastCategory === ForecastCategory.ASSET &&\r\n      !ObjectUtils.isDefined(this.forecastProjectAsset.equipmentCode)\r\n    ) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('warningOnNoSelectedAsset'));\r\n\r\n      return false;\r\n    } else if (\r\n      this.selectedForecastCategory === ForecastCategory.FLEET &&\r\n      !ObjectUtils.isDefined(this.forecastProject.projectFleetCode)\r\n    ) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('warningOnNoSelectedFleet'));\r\n\r\n      return false;\r\n    } else if (!ObjectUtils.isDefined(this.selectedconversionMatrixDTO)) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('warningOnNoSelectedUnitConversionMatrix'));\r\n\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public saveForecastProject() {\r\n    if (this.isCreateOpenMode || !this.forecastProjectId) {\r\n      this.createForecastProject();\r\n    } else {\r\n      this.updateForecastProject();\r\n    }\r\n  }\r\n\r\n  public onChangeForecastCategory(event: { option: { label: string; value: number } }): void {\r\n    if (event.option.value === ForecastCategory.ASSET) {\r\n      this.clearForecastProjectFleet();\r\n      this.assetSelected = true;\r\n    } else {\r\n      this.clearForecastProjectAsset();\r\n      this.assetSelected = false;\r\n    }\r\n\r\n    this.ucmList = [];\r\n  }\r\n\r\n  public onSelectedAsset(asset: {\r\n    equipmentCode?: string;\r\n    equipmentFunction?: string;\r\n    pnCode?: string;\r\n    registration?: string;\r\n    sn?: string;\r\n    familyVariantCode?: string;\r\n  }): void {\r\n    this.forecastProject.projectPn = asset.pnCode;\r\n    this.forecastProject.projectSn = asset.sn;\r\n    this.forecastProjectAsset = asset;\r\n\r\n    this.familyVariantCode = !!asset.familyVariantCode ? asset.familyVariantCode : '';\r\n    this.getConversionMatrixForAsset();\r\n  }\r\n\r\n  public onSelectedFleet(fleet: BidoFleetDTO): void {\r\n    this.forecastProject.customerCode = fleet.customerCode;\r\n    this.forecastProject.projectFleetCode = fleet.fleetCode;\r\n    this.forecastProject.projectFleetId = fleet.fleetId;\r\n    this.forecastProject.projectFleetName = fleet.fleetName;\r\n\r\n    if (!!fleet && !!fleet.fleetId) {\r\n      this.getFleetEquipments(fleet.fleetId);\r\n    }\r\n  }\r\n\r\n  // Constants getters\r\n  public getForecastCategoryFleet(): number {\r\n    return ForecastCategory.FLEET;\r\n  }\r\n\r\n  public getForecastCategoryAsset(): number {\r\n    return ForecastCategory.ASSET;\r\n  }\r\n\r\n  public getBidoFunctionTypeConstantsClosing(): string {\r\n    return BidoFunctionTypeConstants.UC_MFO_FORECAST_CLOSING;\r\n  }\r\n\r\n  public reopenForecastProject(): void {\r\n    this.forecastProject.statusState = BidoFunctionTypeConstants.UC_MFO_FORECAST_MANAGEMENT;\r\n    this.forecastProject.projectEndDate = undefined;\r\n  }\r\n\r\n  public closeForecastProject(): void {\r\n    this.forecastProject.statusState = BidoFunctionTypeConstants.UC_MFO_FORECAST_CLOSING;\r\n    this.forecastProject.projectEndDate = moment().toDate();\r\n  }\r\n\r\n  public getConversionMatrixForAsset(): void {\r\n    if (this.assetSelected || this.forecastProject.projectFleetCode) {\r\n      this.ucmList = [];\r\n      if (this.assetSelected && !!this.forecastProjectAsset.familyVariantCode) {\r\n        this.familyVariantCode = this.forecastProjectAsset.familyVariantCode;\r\n      }\r\n      this.searchObject.familyVariant = this.familyVariantCode;\r\n      forkJoin({\r\n        defaultConversionMatrix: this.unitConversionMatrixService.getDefaultMatrixByFamilyVariant(\r\n          this.familyVariantCode\r\n        ),\r\n        allUnitConversionMatrix: this.unitConversionMatrixService.searchUnitMatrixConversion(this.searchObject)\r\n      }).subscribe({\r\n        next: (result) => {\r\n          if (!!result && !!result.defaultConversionMatrix) {\r\n            this.selectedconversionMatrixDTO = result.defaultConversionMatrix.cmId;\r\n          }\r\n\r\n          this.ucmList = result.allUnitConversionMatrix.map((ucm) => {\r\n            return {\r\n              label: `${ucm.cmName}`,\r\n              value: !!ucm.cmId ? ucm.cmId : -1\r\n            };\r\n          });\r\n\r\n          if (!!this.forecastProjectSrc.cmId) {\r\n            this.getBireConversionMatrix();\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.ucmList = [];\r\n      this.searchObject = {};\r\n    }\r\n  }\r\n\r\n  public getFleetEquipments(fleetId: string): void {\r\n    if (!!fleetId) {\r\n      const fleetTemp: BidoFleetDTOId = {\r\n        fleetId\r\n      };\r\n\r\n      this.fleetFormService.findBidoFleet(fleetTemp).subscribe(\r\n        (result) => {\r\n          this.getConversionMatrixForFleet(result.bidoEquipmentTableDTO);\r\n        },\r\n        () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadFleet'));\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public getConversionMatrixForFleet(equipments: BidoEquipmentTableDTO[]): void {\r\n    this.ucmList = [];\r\n    this.searchObject = {};\r\n    if (!!equipments && equipments.length > 0) {\r\n      const allFamilyVariants: string[] = [];\r\n      equipments.forEach((equipment) => {\r\n        if (!!equipment && !!equipment.bidoEquipmentDTO && !!equipment.bidoEquipmentDTO.familyVariantCode) {\r\n          allFamilyVariants.push(equipment.bidoEquipmentDTO.familyVariantCode);\r\n        }\r\n      });\r\n\r\n      const uniqueFamilyVariants = allFamilyVariants.filter((elem, i, arr) => {\r\n        if (arr.indexOf(elem) === i) {\r\n          return elem;\r\n        }\r\n      });\r\n\r\n      uniqueFamilyVariants.forEach((familyVariant) => {\r\n        this.searchObject.familyVariant = familyVariant;\r\n        this.unitConversionMatrixService.searchUnitMatrixConversion(this.searchObject).subscribe((result) => {\r\n          if (!!result) {\r\n            const ucList: LabelValue<number>[] = result.map((ucm) => {\r\n              return {\r\n                label: `${ucm.cmName}`,\r\n                value: !!ucm.cmId ? ucm.cmId : -1\r\n              };\r\n            });\r\n            if (!!this.ucmList) {\r\n              this.ucmList.push(...ucList);\r\n            }\r\n          }\r\n        });\r\n      });\r\n      if (!!this.forecastProjectSrc.cmId) {\r\n        this.getBireConversionMatrix();\r\n      }\r\n    }\r\n  }\r\n\r\n  public getBireConversionMatrix(): void {\r\n    if (!!this.forecastProjectSrc.cmId) {\r\n      this.unitConversionMatrixService.getUnitConversionMatrix(this.forecastProjectSrc.cmId).subscribe((result) => {\r\n        this.selectedconversionMatrixDTO = result.cmId;\r\n      });\r\n    }\r\n  }\r\n\r\n  public onChangeConversionMatrix(): void {\r\n    if (!!this.selectedconversionMatrixDTO) {\r\n      this.forecastProject.cmId = this.selectedconversionMatrixDTO;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"plannedDate\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [showTime]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"plannedDate\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button [disabled]=\\\"!plannedDate\\\" (click)=\\\"validate()\\\">\\r\\n      {{ \\\"validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-forecast-form-planned-date',\r\n  templateUrl: './planned-date-dialog.component.html'\r\n})\r\nexport class PlannedDateForecastFormDialogComponent extends DialogComponent {\r\n  @Output()\r\n  public onSelected: EventEmitter<Date>;\r\n\r\n  public plannedDate: Date | undefined;\r\n\r\n  public constructor(public sessionService: SessionService) {\r\n    super(ComponentOpenMode.Write, 'PlannedDateForecastFormDialogComponent');\r\n\r\n    this.init();\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onSelected.emit(this.plannedDate as Date);\r\n    this.closeDialog();\r\n  }\r\n\r\n  private init(): void {\r\n    this.plannedDate = undefined;\r\n\r\n    this.onSelected = new EventEmitter<Date>();\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"50\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <p-table\\r\\n      [resizableColumns]=\\\"true\\\"\\r\\n      #ptableAssets\\r\\n      class=\\\"aw-table2\\\"\\r\\n      [columns]=\\\"resourcesTableColList\\\"\\r\\n      [value]=\\\"resourcesTable\\\"\\r\\n      [(selection)]=\\\"resourcesTableSelection\\\"\\r\\n      [scrollable]=\\\"true\\\"\\r\\n    >\\r\\n      <ng-template pTemplate=\\\"caption\\\">\\r\\n        <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': resourcesTableSelection.length > 0 }\\\">\\r\\n          <div class=\\\"aw-table-global-filter\\\">\\r\\n            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </label>\\r\\n\\r\\n            <input\\r\\n              class=\\\"aw-table-global-filter-input\\\"\\r\\n              type=\\\"text\\\"\\r\\n              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n              (input)=\\\"ptableAssets.filterGlobal($event.target.value, 'contains')\\\"\\r\\n            />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"aw-table-actions\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"synchronizeData()\\\"\\r\\n              title=\\\"{{ getComponentName() + '.synchronizeDataTooltip' | translate }}\\\"\\r\\n            >\\r\\n              {{ getComponentName() + \\\".synchronizeData\\\" | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"resourcesTableSelection.length > 0\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteSelectedRows()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              *ngIf=\\\"resourcesTableSelection.length === 0\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addAvailabilities()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n        <colgroup>\\r\\n          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n        </colgroup>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n        <tr>\\r\\n          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n          </th>\\r\\n          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n            <span *ngIf=\\\"col.field !== 'number'\\\">\\r\\n              {{ getComponentName() + \\\".\\\" + col.field | translate }}\\r\\n            </span>\\r\\n            <span *ngIf=\\\"col.field === 'number'\\\">\\r\\n              #\\r\\n            </span>\\r\\n          </th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n          </td>\\r\\n          <td\\r\\n            *ngFor=\\\"let col of columns\\\"\\r\\n            pEditableColumn\\r\\n            [ngSwitch]=\\\"col.field\\\"\\r\\n            [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n          >\\r\\n            <span *ngSwitchCase=\\\"'availabilityStartDate'\\\">\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                  ></p-calendar>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                    disabled\\r\\n                  ></p-calendar>\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </span>\\r\\n            <span *ngSwitchCase=\\\"'availabilityEndDate'\\\">\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                    disabled\\r\\n                  ></p-calendar>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                    disabled\\r\\n                  ></p-calendar>\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </span>\\r\\n            <span *ngSwitchCase=\\\"'availabilityCode'\\\">\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"qualificationList\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [style]=\\\"{ width: '100%' }\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                  ></p-dropdown>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"qualificationList\\\"\\r\\n                    [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                    [disabled]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                  ></p-dropdown>\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </span>\\r\\n            <span *ngSwitchCase=\\\"'availabilityPerWeek'\\\">\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData[col.field]\\\" required />\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  {{ rowData[col.field] }}\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </span>\\r\\n            <span *ngSwitchCase=\\\"'availabilityPerWeekEnd'\\\">\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData[col.field]\\\" required />\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  {{ rowData[col.field] }}\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </span>\\r\\n            <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"saveSpinner\\\"></span>\\r\\n      {{ \\\"validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { finalize } from 'rxjs/internal/operators/finalize';\r\n\r\nimport { AWPropertiesConstants } from '../../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../shared/services/confirmation.service';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BsdeAvailabilityInput } from '../../../../../shared/types/api-input-types/project-management/bsde-availability-input.interface';\r\nimport { BsdeAvailabilityDTOCustom } from '../../../../../shared/types/api-types/bsde-availability-dto-custom.interface';\r\nimport { BsdeAvailabilityDTOId } from '../../../../../shared/types/api-types/bsde-availability-dto-id.interface';\r\nimport { BsdeAvailabilityDTO } from '../../../../../shared/types/api-types/bsde-availability-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { TableColumn } from '../../../../../shared/types/table-column.interface';\r\nimport { ForecastFormService } from '../forecast-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-forecast-form-resources-availabilities',\r\n  templateUrl: './resources-availabilities.component.html'\r\n})\r\nexport class ResourcesAvailabilitiesForecastFormDialogComponent extends DialogComponent implements OnInit {\r\n  private static readonly AVAILABILITY_TYPE = AWPropertiesConstants.AVAILABILITY_TYPE_FLIGHT;\r\n\r\n  @Input() private readonly projectId: number;\r\n  @Input() private readonly projectNumber: number;\r\n\r\n  public resourcesTable: BsdeAvailabilityDTOCustom[];\r\n  public resourcesTableSelection: BsdeAvailabilityDTOCustom[];\r\n  public resourcesTableColList: TableColumn[];\r\n\r\n  public qualificationList: LabelValue<string>[];\r\n\r\n  public saveSpinner: boolean;\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly forcastFormService: ForecastFormService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'ResourcesAvailabilitiesForecastFormDialogComponent');\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.resourcesTableColList = [\r\n      { field: 'number', alignment: 'center', width: '5%' },\r\n      { field: 'availabilityStartDate', alignment: 'left', width: '20%' },\r\n      { field: 'availabilityEndDate', alignment: 'left', width: '20%' },\r\n      { field: 'availabilityCode', alignment: 'left', width: '25%' },\r\n      { field: 'availabilityPerWeek', alignment: 'left', width: '15%' },\r\n      { field: 'availabilityPerWeekEnd', alignment: 'left', width: '15%' }\r\n    ];\r\n\r\n    this.resourcesTableSelection = [];\r\n\r\n    this.forcastFormService.findAllBireQualificationDatasDropDown().subscribe((res) => {\r\n      this.qualificationList = res;\r\n    });\r\n    this.loadAvailabilityData();\r\n  }\r\n\r\n  /************************************\r\n   * Load Dialog data\r\n   ************************************/\r\n  private loadAvailabilityData() {\r\n    this.resourcesTable = [];\r\n    const input: BsdeAvailabilityInput = {\r\n      projectId: this.projectId,\r\n      availabilityType: ResourcesAvailabilitiesForecastFormDialogComponent.AVAILABILITY_TYPE\r\n    };\r\n    this.forcastFormService\r\n      .findBsdeAvailabilitysByProjectAndAvailabilityTypeAndAvailabilityCode(input)\r\n      .subscribe((res) => {\r\n        res.forEach((row) => {\r\n          const availabilityEndDates = this.getAvailabilityEndDate(res, row);\r\n          this.resourcesTable.push({\r\n            availabilityCode: row.availabilityCode,\r\n            availabilityId: row.availabilityId,\r\n            availabilityPerWeek: row.availabilityPerWeek,\r\n            availabilityPerWeekEnd: row.availabilityPerWeekEnd,\r\n            availabilityStartDate: row.availabilityStartDate,\r\n            availabilityType: row.availabilityType,\r\n            projectId: row.projectId,\r\n            isUnavailable: row.isUnavailable,\r\n            availabilityEndDate: availabilityEndDates\r\n          });\r\n        });\r\n        this.resetTableCounter();\r\n      });\r\n  }\r\n  /**\r\n   * getAvailabilityEndDate() - This function is used to calculate the Availabilty End Date field.\r\n   * @param results - Availability Data List\r\n   * @param rowData - Availability Data Row\r\n   */\r\n  private getAvailabilityEndDate(results: BsdeAvailabilityDTO[], rowData: BsdeAvailabilityDTO) {\r\n    let nextDateFound: Date | undefined;\r\n    if (!!rowData.availabilityStartDate) {\r\n      results.forEach((elements) => {\r\n        if (\r\n          rowData.availabilityCode === elements.availabilityCode &&\r\n          elements.availabilityStartDate &&\r\n          rowData.availabilityStartDate &&\r\n          elements.availabilityStartDate > rowData.availabilityStartDate\r\n        ) {\r\n          if (!nextDateFound || (!!nextDateFound && elements.availabilityStartDate < nextDateFound)) {\r\n            nextDateFound = elements.availabilityStartDate;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    if (!!nextDateFound) {\r\n      const nextStartDate = new Date(nextDateFound);\r\n      nextStartDate.setDate(nextStartDate.getDate() - 1);\r\n\r\n      return nextStartDate;\r\n    }\r\n  }\r\n\r\n  /************************************\r\n   * Add Entry\r\n   ************************************/\r\n  public addAvailabilities() {\r\n    this.resourcesTable.push({\r\n      number: this.resourcesTable.length === 0 ? 1 : this.resourcesTable.length + 1,\r\n      availabilityPerWeek: 0,\r\n      availabilityPerWeekEnd: 0,\r\n      availabilityType: ResourcesAvailabilitiesForecastFormDialogComponent.AVAILABILITY_TYPE,\r\n      projectId: this.projectId.toString()\r\n    });\r\n  }\r\n\r\n  // Sort acc to date\r\n  private dateSelectionEvent() {\r\n    this.resourcesTable = this.resourcesTable.sort((a, b): number => {\r\n      if (!!b.availabilityStartDate && !!a.availabilityStartDate) {\r\n        return a.availabilityStartDate.getTime() - b.availabilityStartDate.getTime();\r\n      }\r\n\r\n      return -1;\r\n    });\r\n\r\n    this.resetTableCounter();\r\n  }\r\n\r\n  /************************************\r\n   * Validate Dialog and Save\r\n   ************************************/\r\n  public validate() {\r\n    if (this.validateTable()) {\r\n      this.saveSpinner = true;\r\n      this.dateSelectionEvent();\r\n      this.forcastFormService\r\n        .createOrUpdateBsdeAvailability(this.resourcesTable as BsdeAvailabilityDTO[])\r\n        .pipe(\r\n          finalize(() => {\r\n            this.saveSpinner = false;\r\n          })\r\n        )\r\n        .subscribe((res) => {\r\n          this.loadAvailabilityData();\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('onSaveSuccess'));\r\n        });\r\n    }\r\n  }\r\n\r\n  /************************************\r\n   * Table Validation\r\n   ************************************/\r\n  private validateTable() {\r\n    const WORKING_DAY_HOUR_LIMIT = 23;\r\n    let validation = true;\r\n\r\n    this.resourcesTable.forEach((res) => {\r\n      if (res.availabilityPerWeek === null || res.availabilityPerWeekEnd === null) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('weekMandatoryFields'));\r\n        validation = false;\r\n      }\r\n\r\n      if (\r\n        (!!res.availabilityPerWeek && res.availabilityPerWeek > WORKING_DAY_HOUR_LIMIT) ||\r\n        (!!res.availabilityPerWeekEnd && res.availabilityPerWeekEnd > WORKING_DAY_HOUR_LIMIT)\r\n      ) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('valueCannotBeGreaterThanWorkingDayHourLimit'));\r\n        validation = false;\r\n      }\r\n\r\n      if (!res.availabilityStartDate) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('startDateMandatory'));\r\n        validation = false;\r\n      }\r\n\r\n      if (!res.availabilityCode) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('qualificationMandatory'));\r\n        validation = false;\r\n      }\r\n    });\r\n\r\n    return validation;\r\n  }\r\n\r\n  /************************************\r\n   * Delete Rows\r\n   ************************************/\r\n  public deleteSelectedRows() {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey('confirmDeleteSelectedAvailabilities'),\r\n      accept: () => {\r\n        const id: BsdeAvailabilityDTOId[] = [];\r\n        const cloneTable = [...this.resourcesTable];\r\n        this.resourcesTableSelection.forEach((res) => {\r\n          if (!!res) {\r\n            if (!!res.availabilityId) {\r\n              id.push({\r\n                availabilityId: res.availabilityId\r\n              });\r\n            }\r\n            cloneTable.splice((res.number as number) - 1, 1);\r\n          }\r\n        });\r\n        this.forcastFormService.removeBsdeAvailability(id).subscribe((res) => {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('onDeleteSuccess'));\r\n          this.loadAvailabilityData();\r\n          this.resourcesTableSelection = [];\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /************************************\r\n   * Reset Table Counter\r\n   ************************************/\r\n  private resetTableCounter() {\r\n    this.resourcesTable.forEach((res, index) => {\r\n      res.number = index + 1;\r\n    });\r\n  }\r\n\r\n  public synchronizeData() {\r\n    this.forcastFormService.synchronizeWithHR(this.projectNumber).subscribe((res: BsdeAvailabilityDTOCustom[]) => {\r\n      this.resourcesTable = res;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"50\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentTitleKey | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"plannedDate\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [showTime]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"plannedDate\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\"></div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"taskCode\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"eventModel._obj.bsdeScheduledEvent.taskCode\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"blocked\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-checkbox\\r\\n              binary=\\\"true\\\"\\r\\n              class=\\\"aw-checkbox\\\"\\r\\n              [(ngModel)]=\\\"eventModel._obj.bsdeScheduledEvent.eventBlocked\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            ></p-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"taskDescription\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control text-area\\\">\\r\\n            <textarea\\r\\n              class=\\\"aw-textarea\\\"\\r\\n              [rows]=\\\"3\\\"\\r\\n              pInputTextarea\\r\\n              autoResize=\\\"autoResize\\\"\\r\\n              [(ngModel)]=\\\"eventModel._obj.bireTask.taskDesignation\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"notToExceedDate\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [showTime]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"eventModel._obj.bsdeScheduledEvent.nteDate\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\"> {{ \\\"toBePerformedAt\\\" | translate }} ({{ unitName }}) </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"eventModel._obj.bsdeScheduledEvent.counterValue\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"periodicities\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"eventModel._obj.bsdeScheduledEvent.periodicities\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\"> {{ \\\"cumulatedFlightHours\\\" | translate }} (H) </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"eventModel._obj.bsdeScheduledEvent.topEqtTsn\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"occurrence\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"eventModel._obj.bsdeScheduledEvent.occurrence\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\"> {{ \\\"remainingAvailability\\\" | translate }} ({{ unitName }}) </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"eventModel._obj.bsdeScheduledEvent.counterRemaining\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\"> {{ \\\"alertThreshold\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"eventModel._obj.bsdeScheduledEvent.taskThreshold\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\"> {{ \\\"alertTolerance\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"eventModel._obj.bsdeScheduledEvent.taskTolerance\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button [disabled]=\\\"!plannedDate\\\" (click)=\\\"validate()\\\">\\r\\n      {{ \\\"validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { concatMap, map } from 'rxjs/operators';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { MaintenanceForecastingScheduledEvent } from '../../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-scheduled-event.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { EventModel, ForecastFormService } from '../forecast-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-forecast-form-scheduled-event',\r\n  templateUrl: './scheduled-event-dialog.component.html'\r\n})\r\nexport class ScheduledEventForecastFormDialogComponent extends DialogComponent implements OnInit {\r\n  public componentTitleKey: string;\r\n\r\n  @Input()\r\n  public eventModel: EventModel<MaintenanceForecastingScheduledEvent>;\r\n\r\n  public plannedDate: Date | undefined;\r\n  public unitName: string;\r\n\r\n  public constructor(public sessionService: SessionService, private readonly forecastFormService: ForecastFormService) {\r\n    super(ComponentOpenMode.Write, 'ScheduledEventForecastFormDialogComponent');\r\n\r\n    this.init();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.componentTitleKey = this.forecastFormService.getUpcomingEventKey(this.eventModel);\r\n    this.plannedDate = this.eventModel._obj.bsdeScheduledEvent.plannedDate || this.eventModel.startDate;\r\n\r\n    this.loadUnitName();\r\n  }\r\n\r\n  public validate(): void {\r\n    this.forecastFormService.updateScheduledEventPlannedDate({\r\n      event: this.eventModel,\r\n      plannedDate: this.plannedDate as Date\r\n    });\r\n\r\n    this.closeDialog();\r\n  }\r\n\r\n  private init(): void {\r\n    this.plannedDate = undefined;\r\n    this.unitName = '';\r\n  }\r\n\r\n  private loadUnitName(): void {\r\n    if (this.eventModel._obj.bsdeScheduledEvent.counterCode) {\r\n      this.forecastFormService\r\n        .getBireMeasureReference({ counterCode: this.eventModel._obj.bsdeScheduledEvent.counterCode })\r\n        .pipe(\r\n          concatMap((measureReference) => {\r\n            return measureReference\r\n              ? this.forecastFormService.getBireUnitMeasure({ unitCode: measureReference.unitCode as string }).pipe(\r\n                  map((unitMeasure) => {\r\n                    return (\r\n                      (measureReference.unitCode as string) +\r\n                      (unitMeasure && unitMeasure.unitName ? ` - ${unitMeasure.unitName}` : '')\r\n                    );\r\n                  })\r\n                )\r\n              : of('');\r\n          })\r\n        )\r\n        .subscribe((unitName) => {\r\n          this.unitName = unitName;\r\n        });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"30\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"plannedDate\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [showTime]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"event.plannedDate\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"familyVariant\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"familyVariantList\\\"\\r\\n              [(ngModel)]=\\\"selectedFamilyVariant\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group display--flex-row flex-row--align-center\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"eventType\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n            <p-selectButton [(ngModel)]=\\\"selectedEventType\\\" [options]=\\\"eventTypeList\\\"></p-selectButton>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"selectedEventType === eventType.EVOLUTION\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"evolutionNumber\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control form-control-with-modal\\\">\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"openEvolutionDialog()\\\">\\r\\n              {{ event.evolutionNumber }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"event.evolutionNumber\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"clearEvolution()\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openEvolutionDialog()\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"selectedEventType === eventType.EVOLUTION\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"evolutionRevisionNumber\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"event.evolutionRevisionNumber\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"selectedEventType === eventType.EVOLUTION && event.evolutionNumber\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"evolutionType\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"event.evolutionType\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"selectedEventType === eventType.TASK\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"taskCode\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control form-control-with-modal\\\">\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"openTaskDialog()\\\">\\r\\n              {{ event.taskCode }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"event.taskCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"clearTask()\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openTaskDialog()\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"selectedEventType === eventType.TASK\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"taskVersion\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"event.taskVersion\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"save()\\\"\\r\\n      [disabled]=\\\"\\r\\n        !event.plannedDate ||\\r\\n        (selectedEventType === eventType.EVOLUTION && (!event.evolutionNumber || !event.evolutionRevisionNumber))\\r\\n      \\\"\\r\\n    >\\r\\n      {{ \\\"save\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-evolution\\r\\n  *ngIf=\\\"showEvolutionDialog\\\"\\r\\n  [(display)]=\\\"showEvolutionDialog\\\"\\r\\n  (onSelected)=\\\"onSelectedEvolution($event)\\\"\\r\\n></aw-dialog-search-evolution>\\r\\n\\r\\n<aw-dialog-search-task\\r\\n  *ngIf=\\\"showTaskDialog\\\"\\r\\n  [(display)]=\\\"showTaskDialog\\\"\\r\\n  (onSelected)=\\\"onSelectedTask($event)\\\"\\r\\n></aw-dialog-search-task>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { MaintenanceForecastingUnscheduledEvent } from '../../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-unscheduled-event.interface';\r\nimport { BidoEquipmentDTO } from '../../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BireEvolutionDTO } from '../../../../../shared/types/api-types/bire-evolution-dto.interface';\r\nimport { BireTaskDTO } from '../../../../../shared/types/api-types/bire-task-dto.interface';\r\nimport { BireVariantVersionDTO } from '../../../../../shared/types/api-types/bire-variant-version-dto.interface';\r\nimport { BsdeEventDTO } from '../../../../../shared/types/api-types/bsde-event-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { BidoFamilyVariantUtils } from '../../../../../shared/utils/bido-family-variant-utils';\r\nimport { ListUtils } from '../../../../../shared/utils/list-utils';\r\nimport { ObjectUtils } from '../../../../../shared/utils/object-utils';\r\nimport { EventModel, ForecastFormService } from '../forecast-form.service';\r\n\r\nenum EventType {\r\n  EVOLUTION,\r\n  TASK\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-forecast-form-unscheduled-event',\r\n  templateUrl: './unscheduled-event-dialog.component.html'\r\n})\r\nexport class UnscheduledEventForecastFormDialogComponent extends DialogComponent implements OnInit {\r\n  public readonly eventType: typeof EventType;\r\n\r\n  @Input()\r\n  public asset: BidoEquipmentDTO;\r\n\r\n  @Input()\r\n  public eventModel: EventModel<MaintenanceForecastingUnscheduledEvent> | undefined;\r\n\r\n  public event: BsdeEventDTO;\r\n  public eventTypeList: SelectItem[];\r\n  public familyVariantList: LabelValue<BireVariantVersionDTO>[];\r\n\r\n  public selectedEventType: EventType;\r\n  public selectedFamilyVariant: BireVariantVersionDTO | undefined;\r\n\r\n  public showEvolutionDialog: boolean;\r\n  public showTaskDialog: boolean;\r\n\r\n  public constructor(\r\n    public sessionService: SessionService,\r\n    private readonly forecastFormService: ForecastFormService,\r\n    private readonly translateService: TranslateService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'UnscheduledEventForecastFormDialogComponent');\r\n\r\n    this.eventType = EventType;\r\n\r\n    this.init();\r\n\r\n    this.setEventTypeList();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.forecastFormService.getAllFamilyVariantByUcMfoNonRoutineEvent().subscribe({\r\n      next: (familyVariantList) => {\r\n        this.familyVariantList = ListUtils.orEmpty(familyVariantList);\r\n\r\n        if (this.eventModel) {\r\n          this.event = this.eventModel._obj.bsdeEvent;\r\n\r\n          const matchingFamilyVariant = this.familyVariantList.find(\r\n            (familyVariant) =>\r\n              familyVariant.value.familyCode ===\r\n                BidoFamilyVariantUtils.getFamilyCodeFromFamilyVariantCode(this.asset.familyVariantCode) &&\r\n              familyVariant.value.variantCode ===\r\n                BidoFamilyVariantUtils.getVariantCodeFromFamilyVariantCode(this.asset.familyVariantCode)\r\n          );\r\n          this.selectedFamilyVariant = matchingFamilyVariant ? matchingFamilyVariant.value : undefined;\r\n\r\n          this.selectedEventType = this.event.taskCode ? EventType.TASK : EventType.EVOLUTION;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public clearEvolution(): void {\r\n    this.event.evolutionNumber = undefined;\r\n    this.event.evolutionRevisionNumber = undefined;\r\n  }\r\n\r\n  public clearTask(): void {\r\n    this.event.taskCode = undefined;\r\n    this.event.taskVersion = undefined;\r\n  }\r\n\r\n  public onSelectedEvolution(evolution: BireEvolutionDTO): void {\r\n    this.event.evolutionNumber = evolution.evolutionNumber;\r\n    this.event.evolutionRevisionNumber = evolution.evolutionRevisionNumber;\r\n    this.event.evolutionType = evolution.evolutionType;\r\n  }\r\n\r\n  public onSelectedTask(task: BireTaskDTO): void {\r\n    this.event.taskCode = task.taskCode;\r\n    this.event.taskVersion = task.taskVersion;\r\n  }\r\n\r\n  public openEvolutionDialog(): void {\r\n    this.showEvolutionDialog = true;\r\n  }\r\n\r\n  public openTaskDialog(): void {\r\n    this.showTaskDialog = true;\r\n  }\r\n\r\n  public save(): void {\r\n    if (ObjectUtils.isDefined(this.asset)) {\r\n      this.event.pn = this.asset.pnCode;\r\n      this.event.sn = this.asset.sn;\r\n    }\r\n    if (ObjectUtils.isDefined(this.selectedFamilyVariant)) {\r\n      const familyVariant = this.selectedFamilyVariant as BireVariantVersionDTO;\r\n      this.event.familyCode = familyVariant.familyCode;\r\n      this.event.variantCode = familyVariant.variantCode;\r\n    }\r\n\r\n    if (this.selectedEventType === EventType.EVOLUTION) {\r\n      this.clearTask();\r\n    } else {\r\n      this.clearEvolution();\r\n    }\r\n\r\n    if (this.eventModel) {\r\n      this.forecastFormService.updateUnscheduledEvent({ event: this.eventModel });\r\n    } else {\r\n      this.forecastFormService.createUnscheduledEvent({ event: this.event });\r\n    }\r\n  }\r\n\r\n  private init(): void {\r\n    this.event = {};\r\n    this.eventTypeList = [];\r\n    this.familyVariantList = [];\r\n\r\n    this.selectedEventType = EventType.TASK;\r\n    this.selectedFamilyVariant = undefined;\r\n\r\n    this.showEvolutionDialog = false;\r\n    this.showTaskDialog = false;\r\n  }\r\n\r\n  private setEventTypeList(): void {\r\n    const evolutionKey = 'evolution';\r\n    const taskKey = 'task';\r\n    this.translateService.get([evolutionKey, taskKey]).subscribe((results) => {\r\n      const evolutionLabel = !!results ? results[evolutionKey] : 'Evolution';\r\n      const taskLabel = !!results ? results[taskKey] : 'Task';\r\n      this.eventTypeList = [\r\n        { label: taskLabel, value: EventType.TASK },\r\n        { label: evolutionLabel, value: EventType.EVOLUTION }\r\n      ];\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"40\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      {{ getComponentName() + \\\".title\\\" | translate }}\\r\\n      {{ workPackage.projectNumber }}\\r\\n      <ng-container *ngIf=\\\"!isCreateOpenMode\\\">\\r\\n        ({{ workOrderList.length }} {{ (workOrderList.length > 1 ? \\\"workOrders\\\" : \\\"workOrder\\\") | translate }})\\r\\n      </ng-container>\\r\\n    </div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"name\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"workPackage.projectName\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"type\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"workPackageTypeList\\\"\\r\\n              [(ngModel)]=\\\"workPackage.projectType\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"startDate\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [showTime]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"workPackage.projectStartDate\\\"\\r\\n              [maxDate]=\\\"workPackage.projectDueDate\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"dueDate\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [showTime]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"workPackage.projectDueDate\\\"\\r\\n              [minDate]=\\\"workPackage.projectStartDate\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"mroCenter\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"siteList\\\"\\r\\n              [(ngModel)]=\\\"workPackage.bireRepairCenterCode\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [disabled]=\\\"forecastMroCenter\\\"\\r\\n              (onChange)=\\\"getWorkShops()\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ \\\"workCenter\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\" *ngIf=\\\"workShopList.length > 0\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"workShopList\\\"\\r\\n              [(ngModel)]=\\\"workPackage.bidtWarehouseId\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n          <div class=\\\"form-control\\\" *ngIf=\\\"workShopList.length === 0\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"workShopList\\\"\\r\\n              [(ngModel)]=\\\"workPackage.bidtWarehouseId\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">\\r\\n              {{ \\\"assignedTo\\\" | translate }}\\r\\n            </label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                [options]=\\\"workPackageAssignedToList\\\"\\r\\n                [(ngModel)]=\\\"workPackage.receivingAssignedTo\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { MaintenanceForecastingWorkPackage } from '../../../../../shared/types/api-output-types/maintenance-plan/maintenance-forecasting-work-package.interface';\r\nimport { BidmProjectDTO } from '../../../../../shared/types/api-types/bidm-project-dto.interface';\r\nimport { BidmWorkOrderDTO } from '../../../../../shared/types/api-types/bidm-work-order-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { DialogWorkOrderEditService } from '../../../work-package/form/popups/dialog-work-order-edition/dialog-work-order-edition.service';\r\nimport { EventModel } from '../forecast-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-forecast-form-work-package',\r\n  templateUrl: './work-package-dialog.component.html'\r\n})\r\nexport class WorkPackageForecastFormDialogComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public endtDate: Date;\r\n\r\n  @Input()\r\n  public eventModel: EventModel<MaintenanceForecastingWorkPackage> | undefined;\r\n\r\n  @Input()\r\n  public forecastMroCenter: string | undefined;\r\n\r\n  @Input()\r\n  public siteList: LabelValue<string>[];\r\n\r\n  @Input()\r\n  public startDate: Date;\r\n\r\n  @Input()\r\n  public workPackageAssignedToList: LabelValue<string>[];\r\n\r\n  @Input()\r\n  public workPackageStatusList: LabelValue<string>[];\r\n\r\n  @Input()\r\n  public workPackageTypeList: LabelValue<string>[];\r\n\r\n  @Output()\r\n  public onCreated: EventEmitter<MaintenanceForecastingWorkPackage>;\r\n\r\n  @Output()\r\n  public onUpdated: EventEmitter<EventModel<MaintenanceForecastingWorkPackage>>;\r\n\r\n  public workOrderList: BidmWorkOrderDTO[];\r\n  public workPackage: BidmProjectDTO;\r\n  public workShopList: SelectItem[];\r\n\r\n  public constructor(\r\n    public sessionService: SessionService,\r\n    private readonly dialogWorkOrderEditService: DialogWorkOrderEditService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'WorkPackageForecastFormDialogComponent');\r\n\r\n    this.init();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (this.eventModel) {\r\n      this.workOrderList = this.eventModel._obj.bidmWorkOrderList;\r\n      this.workPackage = this.eventModel._obj.bidmProject;\r\n    } else {\r\n      this.workOrderList = [];\r\n      this.workPackage = {};\r\n      this.workPackage.projectStartDate = this.startDate;\r\n      this.workPackage.projectDueDate = this.endtDate;\r\n\r\n      this.updateOpenMode(ComponentOpenMode.Create);\r\n    }\r\n\r\n    this.workPackage.bireRepairCenterCode = this.forecastMroCenter;\r\n    this.getWorkShops();\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.eventModel) {\r\n      this.eventModel._obj.bidmWorkOrderList = this.workOrderList;\r\n      this.eventModel._obj.bidmProject = this.workPackage;\r\n\r\n      this.onUpdated.emit(this.eventModel);\r\n    } else {\r\n      this.onCreated.emit({ bidmProject: this.workPackage, bidmWorkOrderList: this.workOrderList });\r\n    }\r\n\r\n    this.closeDialog();\r\n  }\r\n\r\n  private init(): void {\r\n    this.workOrderList = [];\r\n    this.workPackage = {};\r\n\r\n    this.onCreated = new EventEmitter<MaintenanceForecastingWorkPackage>();\r\n    this.onUpdated = new EventEmitter<EventModel<MaintenanceForecastingWorkPackage>>();\r\n  }\r\n  /**\r\n   * To get the list of workshops on selection of MRO center\r\n   */\r\n  public getWorkShops(): void {\r\n    this.dialogWorkOrderEditService.loadWarehouseList(this.workPackage.bireRepairCenterCode).subscribe((result) => {\r\n      this.workShopList = result.map((workCenter) => {\r\n        return {\r\n          label: workCenter.label,\r\n          value: Number(workCenter.value)\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ \\\"global.search\\\" | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewForecast()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show All Actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container  search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row search-criteria-header\\\">\\r\\n                    <aw-manage-search-criteria\\r\\n                      [componentId]=\\\"SEARCH_CRITERIA_ID\\\"\\r\\n                      (onSelected)=\\\"loadSearchCriteria($event)\\\"\\r\\n                      (onSavedAsked)=\\\"saveSearchCriteriaAsked()\\\"\\r\\n                      [objectFromPage]=\\\"criteriaToSave\\\"\\r\\n                    ></aw-manage-search-criteria>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">1. {{ \\\"mainCriteria\\\" | translate }}</h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"number\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"number\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.projectNumber\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"name\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.projectName\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"currentStatus\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"currentStatusList\\\"\\r\\n                          [(ngModel)]=\\\"searchObject.statusState\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          (keyup.enter)=\\\"search()\\\"\\r\\n                          appendTo=\\\"body\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"lastUpdatedBy\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"userList\\\"\\r\\n                          [(ngModel)]=\\\"searchObject.statusUser\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          (keyup.enter)=\\\"search()\\\"\\r\\n                          appendTo=\\\"body\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"description\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.projectDescription\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"display--flex-row flex--1\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ \\\"lastUpdate\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\" style=\\\"margin-right: 1px\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"dateCriteriaList\\\"\\r\\n                            [(ngModel)]=\\\"selectedLastUpdateDateCriteria\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            (keyup.enter)=\\\"search()\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--4\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\" style=\\\"margin-left: 1px\\\">\\r\\n                          <p-calendar\\r\\n                            showButtonBar=\\\"true\\\"\\r\\n                            [monthNavigator]=\\\"true\\\"\\r\\n                            [yearNavigator]=\\\"true\\\"\\r\\n                            [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                            class=\\\"aw-calendar\\\"\\r\\n                            [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                            [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                            [(ngModel)]=\\\"searchObject.statusDate\\\"\\r\\n                          ></p-calendar>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"display--flex-row flex--1\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ \\\"startDate\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\" style=\\\"margin-right: 1px\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"dateCriteriaList\\\"\\r\\n                            [(ngModel)]=\\\"selectedStartDateCriteria\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            (keyup.enter)=\\\"search()\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--4\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\" style=\\\"margin-left: 1px\\\">\\r\\n                          <p-calendar\\r\\n                            showButtonBar=\\\"true\\\"\\r\\n                            [monthNavigator]=\\\"true\\\"\\r\\n                            [yearNavigator]=\\\"true\\\"\\r\\n                            [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                            class=\\\"aw-calendar\\\"\\r\\n                            [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                            [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                            [(ngModel)]=\\\"searchObject.projectStartDate\\\"\\r\\n                          ></p-calendar>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"display--flex-row flex--1\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ \\\"endDate\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\" style=\\\"margin-right: 1px\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"dateCriteriaList\\\"\\r\\n                            [(ngModel)]=\\\"selectedEndDateCriteria\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            (keyup.enter)=\\\"search()\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--4\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\" style=\\\"margin-left: 1px\\\">\\r\\n                          <p-calendar\\r\\n                            showButtonBar=\\\"true\\\"\\r\\n                            [monthNavigator]=\\\"true\\\"\\r\\n                            [yearNavigator]=\\\"true\\\"\\r\\n                            [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                            class=\\\"aw-calendar\\\"\\r\\n                            [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                            [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                            [(ngModel)]=\\\"searchObject.projectEndDate\\\"\\r\\n                          ></p-calendar>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">2. {{ componentData.componentId + \\\".forecastType\\\" | translate }}</h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                        <p-selectButton\\r\\n                          [(ngModel)]=\\\"selectedForecastCategory\\\"\\r\\n                          [options]=\\\"forecastCategoryList\\\"\\r\\n                        ></p-selectButton>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group flex--3\\\"></div>\\r\\n                  </div>\\r\\n\\r\\n                  <div *ngIf=\\\"selectedForecastCategory === forecastCategory.ASSET\\\" class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ \\\"assetCode\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control form-control-with-modal\\\">\\r\\n                        <div class=\\\"form-control-data\\\" (click)=\\\"openSearchAssetDialog()\\\">\\r\\n                          {{ selectedAsset.equipmentCode }}\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"selectedAsset.equipmentCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"clearSelectedAsset()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"btn-search-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"openSearchAssetDialog()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group flex--3\\\"></div>\\r\\n                  </div>\\r\\n\\r\\n                  <div *ngIf=\\\"selectedForecastCategory === forecastCategory.FLEET\\\" class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ \\\"fleetCode\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control form-control-with-modal\\\">\\r\\n                        <div class=\\\"form-control-data\\\" (click)=\\\"openSearchFleetDialog()\\\">\\r\\n                          {{ selectedFleet.fleetCode }}\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"selectedFleet.fleetCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"clearSelectedFleet()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"btn-search-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"openSearchFleetDialog()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"selectedFleet.fleetCode\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"fleetName\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"selectedFleet.fleetName\\\" [disabled]=\\\"true\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"selectedFleet.fleetCode\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"customer\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"selectedFleet.customerCode\\\"\\r\\n                          [disabled]=\\\"true\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"selectedFleet.fleetCode\\\"></div>\\r\\n                    <div class=\\\"form-group flex--3\\\" *ngIf=\\\"!selectedFleet.fleetCode\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"advanced-criteria\\\" [ngClass]=\\\"{ 'display--none': !showAdvancedCriteria }\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ \\\"mroCenter\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"siteList\\\"\\r\\n                            [(ngModel)]=\\\"searchObject.repairCenterCode\\\"\\r\\n                            (onChange)=\\\"updateRepairCenterCode()\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            (keyup.enter)=\\\"search()\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ \\\"workCenter\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"workCenterList\\\"\\r\\n                            [(ngModel)]=\\\"searchObject.whId\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            (keyup.enter)=\\\"search()\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ \\\"customer\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"customerList\\\"\\r\\n                            [(ngModel)]=\\\"searchObject.customerCode\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            (keyup.enter)=\\\"search()\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ \\\"attributeName\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"attributeList\\\"\\r\\n                            [(ngModel)]=\\\"selectedAttribute\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            (keyup.enter)=\\\"search()\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"selectedAttribute\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ \\\"attributeValue\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"selectedAttributeValue\\\" />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"!selectedAttribute\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row search-criteria-footer\\\">\\r\\n                    <div\\r\\n                      class=\\\"advanced-criteria-toggler\\\"\\r\\n                      *ngIf=\\\"!showAdvancedCriteria\\\"\\r\\n                      (click)=\\\"showAdvancedCriteria = !showAdvancedCriteria\\\"\\r\\n                    >\\r\\n                      <i class=\\\"fa fa-fw fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\r\\n                      <div class=\\\"advanced-criteria-toggler-more\\\">{{ \\\"expandCriteria\\\" | translate }}</div>\\r\\n                    </div>\\r\\n\\r\\n                    <div\\r\\n                      class=\\\"advanced-criteria-toggler\\\"\\r\\n                      *ngIf=\\\"showAdvancedCriteria\\\"\\r\\n                      (click)=\\\"showAdvancedCriteria = !showAdvancedCriteria\\\"\\r\\n                    >\\r\\n                      <i class=\\\"fa fa-fw fa-minus\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\r\\n                      <div class=\\\"advanced-criteria-toggler-less\\\">{{ \\\"collapseCriteria\\\" | translate }}</div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"search-actions\\\">\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        class=\\\"btn-with-spinner\\\"\\r\\n                        (click)=\\\"search()\\\"\\r\\n                        appKeyPress\\r\\n                        color=\\\"primary\\\"\\r\\n                        [keyCode]=\\\"'Enter'\\\"\\r\\n                        (keyPress)=\\\"search()\\\"\\r\\n                      >\\r\\n                        <span *ngIf=\\\"forecastTableLoading\\\" class=\\\"lds-hourglass\\\"></span>\\r\\n                        {{ \\\"global.toSearch\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #forecastTableContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"results\\\" | translate }} ({{ forecastTable ? forecastTable.length : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #ptableResults\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"forecastTableColList\\\"\\r\\n                [value]=\\\"forecastTable\\\"\\r\\n                [(selection)]=\\\"forecastTableSelection\\\"\\r\\n                dataKey=\\\"_id\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!forecastTableLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"forecastTableLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': forecastTableSelection.length > 0 }\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"ptableResults.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        *ngIf=\\\"hasManageAccessRight && forecastTableSelection.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"removeForecastProjects()\\\"\\r\\n                      >\\r\\n                        {{ \\\"delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"forecastTableSelection.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openForecastTableSelection()\\\"\\r\\n                      >\\r\\n                        {{ \\\"open\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      <a *ngSwitchCase=\\\"'forecastNumber'\\\" (click)=\\\"openForecast(rowData)\\\">\\r\\n                        {{ rowData[col.field] }}\\r\\n                      </a>\\r\\n\\r\\n                      <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-search-equipment\\r\\n    *ngIf=\\\"showSearchAssetDialog\\\"\\r\\n    [(display)]=\\\"showSearchAssetDialog\\\"\\r\\n    (onSelected)=\\\"onSelectedAsset($event)\\\"\\r\\n  ></aw-dialog-search-equipment>\\r\\n\\r\\n  <aw-dialog-search-fleet\\r\\n    *ngIf=\\\"showSearchFleetDialog\\\"\\r\\n    [(display)]=\\\"showSearchFleetDialog\\\"\\r\\n    (onSelected)=\\\"onSelectedFleet($event)\\\"\\r\\n  ></aw-dialog-search-fleet>\\r\\n  <aw-dialog-forecast-form-project-header\\r\\n    *ngIf=\\\"showForecastManagementBlock\\\"\\r\\n    [(display)]=\\\"showForecastManagementBlock\\\"\\r\\n    [forecastProject]=\\\"forecastProject\\\"\\r\\n    [forecastProjectAsset]=\\\"forecastProjectAsset\\\"\\r\\n    [selectedRepairCenter]=\\\"selectedRepairCenter\\\"\\r\\n    [repairCenterList]=\\\"repairCenterList\\\"\\r\\n    [occurrenceList]=\\\"occurrenceList\\\"\\r\\n    [selectedCustomer]=\\\"selectedCustomer\\\"\\r\\n    [customerList]=\\\"customerListForCreation\\\"\\r\\n    [selectedForecastCategory]=\\\"selectedForecastCreateCategory\\\"\\r\\n    [forecastCategoryList]=\\\"forecastCreateCategoryList\\\"\\r\\n    [forecastProjectSrc]=\\\"forecastProjectSrc\\\"\\r\\n    [forecastProjectId]=\\\"forecastProjectId\\\"\\r\\n    [forecastProjectLlpEventsGeneration]=\\\"forecastProjectLlpEventsGeneration\\\"\\r\\n    [forecastProjectOccurrenceNumber]=\\\"forecastProjectOccurrenceNumber\\\"\\r\\n    (onSave)=\\\"reloadForecast($event)\\\"\\r\\n  >\\r\\n  </aw-dialog-forecast-form-project-header>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbnRlbmFuY2UvZm9yZWNhc3Qvc2VhcmNoL2ZvcmVjYXN0LXNlYXJjaC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SelectItem } from 'primeng/api';\nimport { forkJoin, of } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { ISearchCriteria } from '../../../../shared/components/manage-search-criteria/search-criteria.interface';\nimport { AppConstants } from '../../../../shared/constants/app-constants';\nimport { BidoFunctionTypeConstants } from '../../../../shared/constants/bido-function-type-constants';\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\nimport { DateService } from '../../../../shared/services/date.service';\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\nimport { LoaderService } from '../../../../shared/services/loader.service';\nimport { MessageService } from '../../../../shared/services/message.service';\nimport { SerializationService } from '../../../../shared/services/serialization.service';\nimport { SessionService } from '../../../../shared/services/session.service';\nimport { TabService } from '../../../../shared/services/tab.service';\nimport { FindAllBsdeProjectByCriteriaInput } from '../../../../shared/types/api-input-types/project-management/find-all-bsde-project-by-criteria-input.interface';\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types/bido-customer-dto.interface';\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\nimport { BidoFleetDTO } from '../../../../shared/types/api-types/bido-fleet-dto.interface';\nimport { BsdeAttributeDTO } from '../../../../shared/types/api-types/bsde-attribute-dto.interface';\nimport { BsdeProjectDTO } from '../../../../shared/types/api-types/bsde-project-dto.interface';\nimport { BsdeSiteDTO } from '../../../../shared/types/api-types/bsde-site-dto.interface';\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\nimport { PageComponent } from '../../../../shared/types/page-component';\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\nimport { ListUtils } from '../../../../shared/utils/list-utils';\nimport { NumberUtils } from '../../../../shared/utils/number-utils';\nimport { ObjectUtils } from '../../../../shared/utils/object-utils';\nimport { StringUtils } from '../../../../shared/utils/string-utils';\nimport { ForecastFormService } from '../form/forecast-form.service';\n\nimport { ForecastCategory, ForecastCreateCategory, ForecastSearchService } from './forecast-search.service';\n\ninterface ForecastRow {\n  assetPn: string;\n  assetSn: string;\n  fleetName: string;\n  forecastMroCenter: string;\n  forecastWorkCenter: string;\n  forecastName: string;\n  forecastNumber: string;\n  forecastEndDate: string;\n  forecastStartDate: string;\n  forecastStatus: string;\n  _id: string;\n}\n\ninterface SearchData {\n  searchObject?: BidoEquipmentDTO;\n  selectedLastUpdateDateCriteria?: string;\n  selectedStartDateCriteria?: string;\n  selectedEndDateCriteria?: string;\n  selectedForecastCategory?: ForecastCategory;\n  selectedAsset?: BidoEquipmentDTO;\n  selectedFleet?: BidoFleetDTO;\n  selectedAttribute?: BsdeAttributeDTO;\n  selectedAttributeValue?: string;\n  showAdvancedCriteria?: boolean;\n}\n\n@Component({\n  selector: 'aw-forecast-search',\n  styleUrls: ['./forecast-search.component.scss'],\n  templateUrl: './forecast-search.component.html'\n})\nexport class ForecastSearchComponent extends PageComponent<PageComponentData> implements OnInit {\n  public readonly forecastCategory: typeof ForecastCategory;\n  public readonly SEARCH_CRITERIA_ID: string = AppConstants.MAINTENANCE_FORECAST_SEARCH_CRITERIA_ID;\n\n  public attributeList: LabelValue<BsdeAttributeDTO>[];\n  public currentStatusList: LabelValue<string>[];\n  public customerList: LabelValue<string>[];\n  public customerListForCreation: LabelValue<BidoCustomerDTO>[];\n  public dateCriteriaList: SelectItem[];\n  public forecastCategoryList: SelectItem[];\n  public forecastTable: ForecastRow[];\n  public forecastTableColList: TableColumn[];\n  public forecastTableLoading: boolean;\n  public forecastTableSelection: ForecastRow[];\n  public searchData: SearchData;\n  public searchObject: BsdeProjectDTO;\n  public criteriaToSave: SearchData;\n  public criteriaName: string | undefined;\n  public siteList: LabelValue<string>[];\n  public userList: LabelValue<string>[];\n\n  public selectedAsset: BidoEquipmentDTO;\n  public selectedAttribute: BsdeAttributeDTO | undefined;\n  public selectedAttributeValue: string | undefined;\n  public selectedEndDateCriteria: string | undefined;\n  public selectedFleet: BidoFleetDTO;\n  public selectedLastUpdateDateCriteria: string | undefined;\n  public selectedForecastCategory: ForecastCategory;\n  public selectedStartDateCriteria: string | undefined;\n\n  public showAdvancedCriteria: boolean;\n  public showSearchAssetDialog: boolean;\n  public showSearchFleetDialog: boolean;\n  public showForecastManagementBlock: boolean;\n  /** Forecast Create Form */\n  public forecastProject: BsdeProjectDTO;\n  public forecastProjectAsset: BidoEquipmentDTO;\n  public selectedRepairCenter: BsdeSiteDTO | undefined;\n  public repairCenterList: LabelValue<BsdeSiteDTO>[];\n  public workCenterList: SelectItem[];\n  public allWorkCenterList: SelectItem[];\n  public occurrenceList: LabelValue<number>[];\n  public selectedCustomer: BidoCustomerDTO | undefined;\n  public forecastProjectSrc: BsdeProjectDTO;\n  public forecastProjectId: string | undefined;\n  public forecastProjectLlpEventsGeneration: boolean;\n  public forecastProjectOccurrenceNumber: number | undefined;\n  public forecastCreateCategoryList: SelectItem[];\n  public selectedForecastCreateCategory: ForecastCreateCategory;\n  /** Forecast Create Form */\n\n  @ViewChild('forecastTableContainerAnchor')\n  public forecastTableContainerAnchor: ElementRef;\n\n  public constructor(\n    favoriteService: FavoriteService,\n    loaderService: LoaderService,\n    messageService: MessageService,\n    serializationService: SerializationService,\n    tabService: TabService,\n    public sessionService: SessionService,\n    private readonly dateService: DateService,\n    private readonly forecastSearchService: ForecastSearchService,\n    public forecastFormService: ForecastFormService,\n    private readonly translateService: TranslateService\n  ) {\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\n\n    this.forecastCategory = ForecastCategory;\n    this.searchData = {};\n    this.onBeforeLoad();\n    this.load();\n  }\n\n  public getComponentName(): string {\n    return ComponentConstants.MAI_FORECAST_SEARCH;\n  }\n\n  public ngOnInit(): void {\n    super.ngOnInit();\n\n    this.displayComponentContext('search', true);\n  }\n\n  public onBeforeLoad(): void {\n    this.attributeList = [];\n    this.currentStatusList = [];\n    this.customerList = [];\n    this.forecastTableLoading = false;\n    this.searchObject = {};\n\n    this.siteList = [];\n    this.userList = [];\n    this.allWorkCenterList = [];\n    this.workCenterList = [];\n\n    this.selectedAttribute = undefined;\n    this.selectedAttributeValue = undefined;\n    this.selectedForecastCategory = ForecastCategory.ALL;\n    this.selectedEndDateCriteria = undefined;\n    this.selectedLastUpdateDateCriteria = undefined;\n    this.selectedStartDateCriteria = undefined;\n\n    this.showAdvancedCriteria = false;\n    this.showSearchAssetDialog = false;\n    this.showSearchFleetDialog = false;\n    this.showForecastManagementBlock = false;\n\n    this.clearForecastTable();\n    this.clearSelectedAsset();\n    this.clearSelectedFleet();\n\n    this.setDateCriteriaList();\n    this.setForecastCategoryList();\n    this.setForecastTableColList();\n  }\n\n  private setForecastFormFields(): void {\n    this.forecastProjectId = undefined;\n    this.forecastProject = {};\n    this.forecastProjectAsset = {};\n    this.selectedRepairCenter = undefined;\n    this.repairCenterList = [];\n    this.setOccurrenceList();\n    this.selectedCustomer = undefined;\n    this.forecastProjectSrc = {};\n    this.forecastProjectLlpEventsGeneration = false;\n    this.forecastProjectOccurrenceNumber = undefined;\n    this.selectedForecastCreateCategory = ForecastCreateCategory.FLEET;\n    this.setRepairCenterList();\n    this.setCustomerListForCreation();\n    this.setForecastCreateCategoryList();\n  }\n  public clearSelectedAsset(): void {\n    this.selectedAsset = {};\n  }\n\n  public clearSelectedFleet(): void {\n    this.selectedFleet = {};\n  }\n  private setOccurrenceList(): void {\n    const OCCURRENCE_MAX_VALUE = 5; // TODO: get value from backend\n    this.occurrenceList = Array.from(Array(OCCURRENCE_MAX_VALUE + 1).keys())\n      .slice(1)\n      .map((value) => {\n        return {\n          value,\n          label: value.toString()\n        };\n      });\n  }\n  private setRepairCenterList(): void {\n    this.forecastFormService.getAllForecastProjectSite().subscribe((result) => {\n      this.repairCenterList = result;\n    });\n  }\n\n  private setCustomerListForCreation(): void {\n    this.forecastFormService.getAllForecastProjectCustomer().subscribe((result) => {\n      this.customerListForCreation = result;\n    });\n  }\n\n  public load(): void {\n    forkJoin({\n      attributeList: ListUtils.isEmpty(this.attributeList)\n        ? this.forecastSearchService.getAllBsdeAttributesForForecast()\n        : of(this.attributeList),\n      currentStatusList: ListUtils.isEmpty(this.currentStatusList)\n        ? this.forecastSearchService.getAllBidoFunctionTypeByModule(BidoFunctionTypeConstants.MODULE_MFO)\n        : of(this.currentStatusList),\n      customerList: ListUtils.isEmpty(this.customerList)\n        ? this.forecastSearchService.getAllBidoCustomer()\n        : of(this.customerList),\n      siteList: ListUtils.isEmpty(this.siteList) ? this.forecastSearchService.getAllBidtSite() : of(this.siteList),\n      allWorkCenterList: ListUtils.isEmpty(this.allWorkCenterList)\n        ? this.forecastFormService.loadAllWorkCenterList()\n        : of(this.workCenterList),\n      userList: ListUtils.orEmpty(this.userList) ? this.forecastSearchService.getAllBidoUser() : of(this.userList)\n    }).subscribe({\n      next: (result) => {\n        this.attributeList = result.attributeList;\n        this.currentStatusList = result.currentStatusList;\n        this.customerList = result.customerList;\n        this.siteList = result.siteList;\n        this.userList = result.userList;\n        this.allWorkCenterList = result.allWorkCenterList;\n        this.workCenterList = result.allWorkCenterList;\n      }\n    });\n  }\n\n  public onSelectedAsset(asset: {\n    equipmentCode?: string;\n    equipmentFunction?: string;\n    pnCode?: string;\n    registration?: string;\n    sn?: string;\n  }): void {\n    this.selectedAsset.equipmentCode = asset.equipmentCode;\n    this.selectedAsset.equipmentFunction = asset.equipmentFunction;\n    this.selectedAsset.pnCode = asset.pnCode;\n    this.selectedAsset.registration = asset.registration;\n    this.selectedAsset.sn = asset.sn;\n  }\n\n  public onSelectedFleet(fleet: BidoFleetDTO): void {\n    this.selectedFleet = fleet;\n  }\n\n  public openForecast(forecastRow: ForecastRow): void {\n    this.forecastSearchService.openForecast(ComponentOpenMode.Write, forecastRow._id);\n  }\n\n  public openForecastTableSelection(): void {\n    this.forecastTableSelection.forEach((forecast) => this.openForecast(forecast));\n  }\n\n  public openNewForecast(): void {\n    this.setForecastFormFields();\n    this.showForecastManagementBlock = true;\n  }\n  public reloadForecast(id?: string | undefined): void {\n    if (!!id) {\n      this.forecastProjectId = id;\n      this.forecastSearchService.openForecast(ComponentOpenMode.Read, this.forecastProjectId);\n    }\n  }\n\n  public openSearchAssetDialog(): void {\n    this.showSearchAssetDialog = true;\n  }\n\n  public openSearchFleetDialog(): void {\n    this.showSearchFleetDialog = true;\n  }\n\n  public removeForecastProjects(): void {\n    this.forecastTableSelection\n      .map((forecast) => forecast._id)\n      .forEach((selectedForecastId) => {\n        this.forecastSearchService.isForecastProjectLocked(selectedForecastId).subscribe({\n          next: (isForecastProjectLocked) => {\n            if (isForecastProjectLocked) {\n              this.messageService.showWarningMessage(this.getTranslateKey('warningOnForecastLocked'));\n            } else {\n              this.forecastSearchService.removeBsdeProject({ projectId: selectedForecastId }).subscribe({\n                next: () => {\n                  this.forecastTable = this.forecastTable.filter((forecast) => forecast._id !== selectedForecastId);\n                  this.forecastTableSelection = this.forecastTableSelection.filter(\n                    (forecast) => forecast._id !== selectedForecastId\n                  );\n\n                  this.messageService.showSuccessMessage(this.getTranslateKey('successOnRemoveForecast'));\n                }\n              });\n            }\n          }\n        });\n      });\n  }\n\n  public search(): void {\n    this.forecastTableLoading = true;\n    this.clearForecastTable();\n    super.scrollToAnchor(this.forecastTableContainerAnchor);\n\n    this.searchObject.projectPn =\n      this.selectedForecastCategory === ForecastCategory.ASSET ? this.selectedAsset.pnCode : undefined;\n    this.searchObject.projectSn =\n      this.selectedForecastCategory === ForecastCategory.ASSET ? this.selectedAsset.sn : undefined;\n    this.searchObject.projectFleetId =\n      this.selectedForecastCategory === ForecastCategory.FLEET ? this.selectedFleet.fleetId : undefined;\n\n    const attributeMap =\n      ObjectUtils.isDefined(this.selectedAttribute) && !StringUtils.isNullOrEmpty(this.selectedAttributeValue)\n        ? {\n            [(this.selectedAttribute as BsdeAttributeDTO).attributeId as string]: this.selectedAttributeValue as string\n          }\n        : {};\n\n    const fleetSearch = ObjectUtils.isDefined(this.searchObject.projectFleetId)\n      ? true\n      : ObjectUtils.isDefined(this.searchObject.projectPn) || ObjectUtils.isDefined(this.searchObject.projectSn)\n      ? false\n      : undefined;\n\n    const input: FindAllBsdeProjectByCriteriaInput = {\n      attributeMap,\n      fleetSearch,\n      bsdeProjectCriteria: this.searchObject,\n      startDateCriteria: this.selectedStartDateCriteria,\n      statusDateCriteria: this.selectedLastUpdateDateCriteria,\n      endDateCriteria: this.selectedEndDateCriteria\n    };\n    this.forecastSearchService\n      .getAllBsdeProjectByCriteria(input)\n      .pipe(\n        finalize(() => {\n          this.forecastTableLoading = false;\n\n          super.differ(() => {\n            super.scrollToAnchor(this.forecastTableContainerAnchor);\n          });\n        })\n      )\n      .subscribe((forecastList) => {\n        this.forecastTable = ListUtils.orEmpty(forecastList).map((forecast) => this.createForecastRow(forecast));\n      });\n  }\n\n  private clearForecastTable(): void {\n    this.forecastTable = [];\n    this.forecastTableSelection = [];\n  }\n\n  private createForecastRow(forecast: BsdeProjectDTO): ForecastRow {\n    const matchingMroCenter = this.siteList.find((elt) => elt.value === forecast.repairCenterCode);\n    const matchingWorkCenter = this.workCenterList.find((elt) => parseInt(elt.value as string, 10) === forecast.whId);\n    const forecastMroCenter = ObjectUtils.isDefined(matchingMroCenter)\n      ? (matchingMroCenter as LabelValue<string>).label\n      : '';\n\n    const forecastWorkCenter = ObjectUtils.isDefined(matchingWorkCenter)\n      ? (matchingWorkCenter as LabelValue<string>).label\n      : '';\n\n    const forecastRow: ForecastRow = {\n      forecastMroCenter,\n      forecastWorkCenter,\n      assetPn: StringUtils.orEmpty(forecast.projectPn),\n      assetSn: StringUtils.orEmpty(forecast.projectSn),\n      fleetName: StringUtils.orEmpty(forecast.projectFleetName),\n      forecastName: StringUtils.orEmpty(forecast.projectName),\n      forecastNumber: NumberUtils.toString(forecast.projectNumber),\n      forecastEndDate: this.dateService.dateWithHourToString(forecast.projectEndDate),\n      forecastStartDate: this.dateService.dateWithHourToString(forecast.projectStartDate),\n      forecastStatus: StringUtils.orEmpty(forecast.statusStateText),\n      _id: forecast.projectId as string\n    };\n\n    return forecastRow;\n  }\n\n  private setDateCriteriaList(): void {\n    this.forecastSearchService.loadDateCriteriaList().subscribe((result) => (this.dateCriteriaList = result));\n  }\n\n  private setForecastCategoryList(): void {\n    const allKey = 'all';\n    const assetKey = 'asset';\n    const fleetKey = 'fleet';\n    this.translateService.get([allKey, assetKey, fleetKey]).subscribe({\n      next: (results: { [key: string]: string }) => {\n        const allLabel = !!results ? results[allKey] : 'All';\n        const assetLabel = !!results ? results[assetKey] : 'Asset';\n        const fleetLabel = !!results ? results[fleetKey] : 'Fleet';\n        this.forecastCategoryList = [\n          { label: allLabel, value: ForecastCategory.ALL },\n          { label: assetLabel, value: ForecastCategory.ASSET },\n          { label: fleetLabel, value: ForecastCategory.FLEET }\n        ];\n      }\n    });\n  }\n\n  private setForecastCreateCategoryList(): void {\n    const assetKey = 'asset';\n    const fleetKey = 'fleet';\n    this.translateService.get([assetKey, fleetKey]).subscribe({\n      next: (results: { [key: string]: string }) => {\n        const assetLabel = !!results ? results[assetKey] : 'Asset';\n        const fleetLabel = !!results ? results[fleetKey] : 'Fleet';\n        this.forecastCreateCategoryList = [\n          { label: assetLabel, value: ForecastCreateCategory.ASSET },\n          { label: fleetLabel, value: ForecastCreateCategory.FLEET }\n        ];\n      }\n    });\n  }\n  private setForecastTableColList(): void {\n    this.forecastTableColList = [\n      { field: 'forecastNumber', alignment: 'left', width: '2.5%' },\n      { field: 'forecastName', alignment: 'left', width: '21.5%' },\n      { field: 'fleetName', alignment: 'left', width: '12.5%' },\n      { field: 'assetPn', alignment: 'left', width: '12%' },\n      { field: 'assetSn', alignment: 'left', width: '7.5%' },\n      { field: 'forecastStartDate', alignment: 'left', width: '8%' },\n      { field: 'forecastEndDate', alignment: 'left', width: '8%' },\n      { field: 'forecastMroCenter', alignment: 'left', width: '8%' },\n      { field: 'forecastWorkCenter', alignment: 'left', width: '8%' },\n      { field: 'forecastStatus', alignment: 'left', width: '12.5%' }\n    ];\n  }\n\n  public loadSearchCriteria(event: ISearchCriteria): void {\n    const criteria: SearchData | undefined = event.criteria;\n\n    if (!criteria) {\n      this.resetSearchCriteria();\n    }\n\n    if (!this.componentData.objectId) {\n      this.criteriaName = event.name;\n      this.searchData = criteria || {};\n      this.searchObject = this.searchData.searchObject || {};\n      this.selectedLastUpdateDateCriteria = this.searchData.selectedLastUpdateDateCriteria;\n      this.selectedStartDateCriteria = this.searchData.selectedStartDateCriteria;\n      this.selectedEndDateCriteria = this.searchData.selectedEndDateCriteria;\n      this.selectedForecastCategory = this.searchData.selectedForecastCategory || ForecastCategory.ALL;\n      this.selectedFleet = this.searchData.selectedFleet || {};\n      this.selectedAsset = this.searchData.selectedAsset || {};\n      this.selectedAttribute = this.searchData.selectedAttribute;\n      this.selectedAttributeValue = this.searchData.selectedAttributeValue;\n      this.showAdvancedCriteria = this.searchData.showAdvancedCriteria || false;\n      this.search();\n    } else {\n      this.componentData.objectId = undefined;\n    }\n  }\n\n  public saveSearchCriteriaAsked(): void {\n    const criteriaToSave: SearchData = {\n      searchObject: this.searchObject,\n      selectedLastUpdateDateCriteria: this.selectedLastUpdateDateCriteria,\n      selectedStartDateCriteria: this.selectedStartDateCriteria,\n      selectedEndDateCriteria: this.selectedEndDateCriteria,\n      selectedForecastCategory: this.selectedForecastCategory,\n      selectedFleet: this.selectedFleet,\n      selectedAsset: this.selectedAsset,\n      selectedAttribute: this.selectedAttribute,\n      selectedAttributeValue: this.selectedAttributeValue,\n      showAdvancedCriteria: this.showAdvancedCriteria\n    };\n    this.criteriaToSave = criteriaToSave;\n  }\n\n  public resetSearchCriteria(): void {\n    this.criteriaName = undefined;\n    this.searchObject = {};\n    this.selectedLastUpdateDateCriteria = undefined;\n    this.selectedStartDateCriteria = undefined;\n    this.selectedEndDateCriteria = undefined;\n    this.selectedFleet = {};\n    this.selectedAsset = {};\n    this.selectedForecastCategory = ForecastCategory.ALL;\n    this.selectedAttribute = undefined;\n    this.selectedAttributeValue = undefined;\n    this.showAdvancedCriteria = false;\n  }\n\n  public updateRepairCenterCode(): void {\n    if (!!this.searchObject.repairCenterCode) {\n      this.forecastFormService.loadWorkCenterListBySite(this.searchObject.repairCenterCode).subscribe((result) => {\n        this.workCenterList = result;\n      });\n    } else {\n      this.workCenterList = this.allWorkCenterList;\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AMProjectManagementApi } from '../../../../shared/api/am-project-management.api';\r\nimport { MaintenancePlanApi } from '../../../../shared/api/maintenance-plan.api';\r\nimport { ProjectManagementApi } from '../../../../shared/api/project-management.api';\r\nimport { UserProfileManagementApi } from '../../../../shared/api/user-profile-management.api';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { FindAllBsdeProjectByCriteriaInput } from '../../../../shared/types/api-input-types/project-management/find-all-bsde-project-by-criteria-input.interface';\r\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { BidoFunctionTypeDTO } from '../../../../shared/types/api-types/bido-function-type-dto.interface';\r\nimport { BidoUserDTO } from '../../../../shared/types/api-types/bido-user-dto.interface';\r\nimport { BsdeAttributeDTO } from '../../../../shared/types/api-types/bsde-attribute-dto.interface';\r\nimport { BsdeProjectDTOId } from '../../../../shared/types/api-types/bsde-project-dto-id.interface';\r\nimport { BsdeProjectDTO } from '../../../../shared/types/api-types/bsde-project-dto.interface';\r\nimport { BsdeSiteDTO } from '../../../../shared/types/api-types/bsde-site-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { SelectItemUtils } from '../../../../shared/utils/select-item-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\n\r\nexport enum ForecastCategory {\r\n  ALL,\r\n  ASSET,\r\n  FLEET\r\n}\r\nexport enum ForecastCreateCategory {\r\n  ASSET,\r\n  FLEET\r\n}\r\n\r\n@Injectable()\r\nexport class ForecastSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly serializationService: SerializationService,\r\n    private readonly tabService: TabService,\r\n    private readonly maintenancePlanApi: MaintenancePlanApi,\r\n    private readonly amProjectManagementApi: AMProjectManagementApi,\r\n    private readonly projectManagementApi: ProjectManagementApi,\r\n    private readonly userProfileManagementApi: UserProfileManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public openForecast(openMode: ComponentOpenMode, forecastId?: string): void {\r\n    const data: PageComponentData = {\r\n      openMode,\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.MAI_FORECAST_FORM,\r\n      objectId: this.serializationService.serialize(forecastId)\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n  // Maintenance plan api\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public getAllBidoCustomer(): Observable<LabelValue<string>[]> {\r\n    return super\r\n      .post<void, LabelValue<BidoCustomerDTO>[]>(this.maintenancePlanApi.geAllMaintenanceForecastingCustomer)\r\n      .pipe(\r\n        map((customerList) => {\r\n          return customerList\r\n            .filter((customer) => !StringUtils.isNullOrEmpty(customer.value.customerName))\r\n            .map((customer) => {\r\n              return {\r\n                label: customer.value.customerName as string,\r\n                value: customer.value.customerCode as string\r\n              };\r\n            });\r\n        })\r\n      );\r\n  }\r\n\r\n  public getAllBidtSite(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<BsdeSiteDTO>[]>(this.maintenancePlanApi.geAllMaintenanceForecastingSite).pipe(\r\n      map((siteList) => {\r\n        return siteList\r\n          .filter((site) => !StringUtils.isNullOrEmpty(site.value.repairCenterName))\r\n          .map((site) => {\r\n            return {\r\n              label: site.value.repairCenterName as string,\r\n              value: site.value.repairCenterCode as string\r\n            };\r\n          });\r\n      })\r\n    );\r\n  }\r\n\r\n  public isForecastProjectLocked(input: string): Observable<boolean> {\r\n    return super.post<string, boolean>(this.maintenancePlanApi.isForecastProjectLocked, input);\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n  // Project management api\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public getAllBsdeAttributesForForecast(): Observable<LabelValue<BsdeAttributeDTO>[]> {\r\n    return super.post<void, LabelValue<BsdeAttributeDTO>[]>(this.projectManagementApi.findBsdeAttributesForForecast);\r\n  }\r\n\r\n  public getAllBsdeProjectByCriteria(input: FindAllBsdeProjectByCriteriaInput): Observable<BsdeProjectDTO[]> {\r\n    return super.post<FindAllBsdeProjectByCriteriaInput, BsdeProjectDTO[]>(\r\n      this.projectManagementApi.findAllBsdeProjectByCriteria,\r\n      input\r\n    );\r\n  }\r\n\r\n  public removeBsdeProject(input: BsdeProjectDTOId): Observable<void> {\r\n    return super.post<BsdeProjectDTOId, void>(this.projectManagementApi.removeBsdeProject, input);\r\n  }\r\n\r\n  private getBsdeProjectDateCriteria(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.amProjectManagementApi.getBsdeProjectDateCriteria);\r\n  }\r\n\r\n  public loadDateCriteriaList(): Observable<SelectItem[]> {\r\n    return this.getBsdeProjectDateCriteria().pipe(\r\n      map((results) => {\r\n        return !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n      })\r\n    );\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n  // User profile management api\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public getAllBidoFunctionTypeByModule(input: string): Observable<LabelValue<string>[]> {\r\n    return super\r\n      .post<string, BidoFunctionTypeDTO[]>(this.userProfileManagementApi.findAllBidoFunctionTypeByModule, input)\r\n      .pipe(\r\n        map((functionTypeList) => {\r\n          return functionTypeList\r\n            .filter((functionType) => !StringUtils.isNullOrEmpty(functionType.functionName))\r\n            .map((functionType) => {\r\n              return {\r\n                label: functionType.functionName as string,\r\n                value: functionType.functionCode as string\r\n              };\r\n            });\r\n        })\r\n      );\r\n  }\r\n\r\n  public getAllBidoUser(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, BidoUserDTO[]>(this.userProfileManagementApi.findAllBidoUser).pipe(\r\n      map((userList) => {\r\n        return userList\r\n          .filter((user) => !StringUtils.isNullOrEmpty(user.firstname) || !StringUtils.isNullOrEmpty(user.lastname))\r\n          .map((user) => {\r\n            return {\r\n              label: `${user.firstname} ${user.lastname}`,\r\n              value: user.userId as string\r\n            };\r\n          });\r\n      })\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"50\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ \\\"fleetPopin.title\\\" | translate }}</div>\\r\\n\\r\\n    <i class=\\\"material-icons aw-icon aw-icon-with-border\\\" (click)=\\\"onCancel()\\\">close</i>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"search-dialog-container\\\">\\r\\n      <div class=\\\"section search-criteria-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">{{ \\\"global.search\\\" | translate }}</h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <div class=\\\"column\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ \\\"customerCode\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchObject.customerCode\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ \\\"fleetPopin.fleetCode\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchObject.fleetCode\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ \\\"fleetPopin.fleetName\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchObject.fleetName\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row search-criteria-footer\\\">\\r\\n              <div class=\\\"search-actions\\\">\\r\\n                <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"searchFleets()\\\">\\r\\n                  <span>{{ \\\"global.toSearch\\\" | translate }}</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"section results-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">\\r\\n          {{ \\\"global.results\\\" | translate }} ({{ resultsTable.list ? resultsTable.list.length : 0 }})\\r\\n        </h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <p-table\\r\\n            [resizableColumns]=\\\"true\\\"\\r\\n            #ptable\\r\\n            class=\\\"aw-table2\\\"\\r\\n            [columns]=\\\"resultsTableCols\\\"\\r\\n            [value]=\\\"resultsTable.list\\\"\\r\\n            [(selection)]=\\\"selectedObject\\\"\\r\\n            selectionMode=\\\"single\\\"\\r\\n            dataKey=\\\"fleetCode\\\"\\r\\n            [scrollable]=\\\"true\\\"\\r\\n            (onRowUnselect)=\\\"onRowUnselect()\\\"\\r\\n          >\\r\\n            <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n              <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n              <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                <div class=\\\"lds-hourglass\\\"></div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"caption\\\">\\r\\n              <div class=\\\"aw-table-header\\\">\\r\\n                <div class=\\\"aw-table-global-filter\\\">\\r\\n                  <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                    <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </label>\\r\\n\\r\\n                  <input\\r\\n                    #ptableGlobalFilter\\r\\n                    class=\\\"aw-table-global-filter-input\\\"\\r\\n                    type=\\\"text\\\"\\r\\n                    placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                    (input)=\\\"ptable.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n              <colgroup>\\r\\n                <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n              </colgroup>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n              <tr>\\r\\n                <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                  {{ \\\"fleetPopin.\\\" + col.field | translate }}\\r\\n                </th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n              <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                  {{ rowData[col.field] }}\\r\\n                </td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </p-table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"onCancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button [disabled]=\\\"isOneObjectSelected()\\\" color=\\\"primary\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"onValidate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { BidoFleetDTO } from '../../../shared/types/api-types/bido-fleet-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { DialogComponent } from '../../../shared/types/dialog-component';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { ComponentOpenMode } from '../../enums/component-open-mode.enum';\r\nimport { MessageService } from '../../services/message.service';\r\n\r\nimport { DialogSearchFleetService } from './dialog-search-fleet.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-search-fleet',\r\n  templateUrl: 'dialog-search-fleet.component.html'\r\n})\r\nexport class DialogSearchFleetComponent extends DialogComponent {\r\n  public resultsTableCols: TableColumn[];\r\n  public resultsTable: SearchResultsDTO<BidoFleetDTO>;\r\n  public selectedObject: BidoFleetDTO;\r\n  public searchObject: BidoFleetDTO;\r\n\r\n  @Output()\r\n  public onSelected = new EventEmitter<BidoFleetDTO>();\r\n\r\n  // VISIBLE INPUT\r\n  @Input('fleet-code')\r\n  public set fleetCode(code: string) {\r\n    this.searchObject.fleetCode = code;\r\n  }\r\n\r\n  public constructor(\r\n    public dialogSearchFleetService: DialogSearchFleetService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'fleetPopin');\r\n\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n    this.searchObject = {};\r\n    this.selectedObject = {};\r\n\r\n    this.resultsTableCols = [\r\n      { field: 'fleetCode', alignment: 'left' },\r\n      { field: 'fleetName', alignment: 'left' },\r\n      { field: 'customerCode', alignment: 'left' }\r\n    ];\r\n  }\r\n\r\n  /*\r\n    <summary>Search contacts for operator or owner</summary>\r\n    */\r\n  public searchFleets(): void {\r\n    this.dialogSearchFleetService.findBidoFleetsBySearchCriteria(this.searchObject).subscribe(\r\n      (results) => {\r\n        if (results) {\r\n          this.selectedObject = {};\r\n          this.resultsTable = results;\r\n        }\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnSearch'));\r\n      }\r\n    );\r\n  }\r\n\r\n  /*\r\n    <summary>Emit the selectedObject on validate</summary>\r\n    */\r\n  public onValidate(): void {\r\n    this.onSelected.emit(this.selectedObject);\r\n    this.display = false;\r\n  }\r\n\r\n  // Clean the selectedObject object if the row is unselect\r\n  public onRowUnselect(): void {\r\n    this.selectedObject = {};\r\n  }\r\n\r\n  // Clean all the object on rerender\r\n  public onShow(): void {\r\n    this.selectedObject = {};\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n  }\r\n\r\n  /*\r\n    <summary>Close the pop up on cancel</summary>\r\n    */\r\n  public onCancel(): void {\r\n    this.selectedObject = {};\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n    this.display = false;\r\n  }\r\n\r\n  public isOneObjectSelected(): boolean {\r\n    return !this.selectedObject.fleetCode;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TableModule } from 'primeng/table';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\n\r\nimport { DialogSearchFleetComponent } from './dialog-search-fleet.component';\r\nimport { DialogSearchFleetService } from './dialog-search-fleet.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [TableModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogSearchFleetComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [DialogSearchFleetService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class DialogSearchFleetModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../shared/api/fleet-management.api';\r\nimport { BidoFleetDTO } from '../../../shared/types/api-types/bido-fleet-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { AbstractAwHttpService } from '../../http/abstract-aw-http';\r\nimport { AppConfigService } from '../../services/app-config.service';\r\n\r\n@Injectable()\r\nexport class DialogSearchFleetService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBidoFleetsBySearchCriteria(criteria: BidoFleetDTO): Observable<SearchResultsDTO<BidoFleetDTO>> {\r\n    return super.post<BidoFleetDTO, SearchResultsDTO<BidoFleetDTO>>(\r\n      this.fleetManagementApi.findBidoFleetsBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n}\r\n","export class BsdeAttributeConstants {\r\n  // IWB standard attributes\r\n  public static readonly INVENTORY_LOADING_LOCK: string = '2';\r\n  public static readonly SAP_WBS_ELEMENT: string = '3';\r\n  public static readonly CUSTOMER: string = '4';\r\n  public static readonly IWB_FATHER_PROJECT: string = '5';\r\n  public static readonly RATING_CODE: string = '6';\r\n  public static readonly WORKSCOPE_STATUS: string = '7';\r\n  public static readonly WORK_ORDER_CODE: string = '15';\r\n  public static readonly WORK_PACKAGE_NUMBER: string = '16';\r\n\r\n  // MFO standard attributes\r\n  public static readonly MFO_LLP_EVENTS_GENERATION: string = '8';\r\n  public static readonly MFO_IWB_ACTIONS_GENERATION: string = '9';\r\n  public static readonly MFO_TIME_SCALE_OPTION: string = '10';\r\n  public static readonly MFO_OCCURRENCE_NUMBER_OPTION: string = '11';\r\n  public static readonly MFO_USAGE_MODE: string = '12';\r\n  public static readonly MFO_LLP_COUNTERS: string = '13';\r\n  public static readonly MFO_EQUIPMENT_FUNCTIONS: string = '14';\r\n}\r\n","export class BsdeEventTypeConstants {\r\n  public static readonly EVOLUTION_TYPE_CODE: string = '1';\r\n\r\n  public static readonly TASK_TYPE_CODE: string = '2';\r\n\r\n  public static readonly CHANGE_SN_TYPE_CODE: string = '3';\r\n}\r\n","import { BidoEquipmentDTO } from '../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BireItemDTOId } from '../../shared/types/api-types/bire-item-dto-id.interface';\r\nimport { StringUtils } from '../../shared/utils/string-utils';\r\nimport { AWPropertiesConstants } from '../constants/aw-properties-constants';\r\n\r\nimport { BidoFamilyVariantUtils } from './bido-family-variant-utils';\r\n\r\nexport class BidoEquipmentUtils {\r\n  public static createAssetName(equipment: BidoEquipmentDTO | undefined): string {\r\n    if (!equipment) {\r\n      return '';\r\n    } else {\r\n      let designation: string;\r\n      switch (equipment.equipmentFunction) {\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_AIRCRAFT_KEY:\r\n          designation = StringUtils.orEmpty(equipment.registration);\r\n          break;\r\n\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_ENGINE_KEY:\r\n          designation = StringUtils.orEmpty(equipment.sn);\r\n          break;\r\n\r\n        default:\r\n          designation = StringUtils.orEmpty(equipment.pnCode) + '/' + StringUtils.orEmpty(equipment.sn);\r\n          break;\r\n      }\r\n\r\n      return designation;\r\n    }\r\n  }\r\n\r\n  public static createAircraftRepresentation(equipment: BidoEquipmentDTO | undefined): string {\r\n    let aircraftRepresentation = '';\r\n    if (!equipment) {\r\n      return '';\r\n    } else {\r\n      if (BidoEquipmentUtils.createAssetName(equipment) !== '') {\r\n        aircraftRepresentation =\r\n          'MSN ' + StringUtils.orEmpty(equipment.sn) + ' | ' + BidoEquipmentUtils.createAssetName(equipment);\r\n      }\r\n      if (BidoEquipmentUtils.createAssetName(equipment) === '' && StringUtils.orEmpty(equipment.sn) !== '') {\r\n        aircraftRepresentation = 'MSN ' + StringUtils.orEmpty(equipment.sn);\r\n      }\r\n\r\n      return aircraftRepresentation;\r\n    }\r\n  }\r\n\r\n  public static createAssetRepresentation(equipment: BidoEquipmentDTO | undefined): string {\r\n    let assetRepresentation = '';\r\n    if (equipment) {\r\n      let designation: string;\r\n      switch (equipment.equipmentFunction) {\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_AIRCRAFT_KEY:\r\n          assetRepresentation =\r\n            StringUtils.orEmpty(equipment.familyVariantCode) +\r\n            ' | MSN ' +\r\n            StringUtils.orEmpty(equipment.sn) +\r\n            ' | ' +\r\n            StringUtils.orEmpty(equipment.registration);\r\n          designation = StringUtils.orEmpty(equipment.registration);\r\n          break;\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_ENGINE_KEY:\r\n          assetRepresentation =\r\n            StringUtils.orEmpty(equipment.familyVariantCode) +\r\n            ' | MSN ' +\r\n            StringUtils.orEmpty(equipment.sn) +\r\n            ' | ' +\r\n            StringUtils.orEmpty(equipment.registration);\r\n          designation = StringUtils.orEmpty(equipment.registration);\r\n          break;\r\n        default:\r\n          assetRepresentation =\r\n            StringUtils.orEmpty(equipment.familyVariantCode) + ' | SN ' + StringUtils.orEmpty(equipment.sn);\r\n          designation = StringUtils.orEmpty(equipment.sn);\r\n          break;\r\n      }\r\n    }\r\n\r\n    return assetRepresentation;\r\n  }\r\n\r\n  public static getBireItemPK(equipment: BidoEquipmentDTO): BireItemDTOId | undefined {\r\n    if (\r\n      !!equipment.chapter &&\r\n      !StringUtils.isEmpty(equipment.chapter) &&\r\n      !!equipment.marks &&\r\n      !StringUtils.isEmpty(equipment.marks) &&\r\n      !!equipment.section &&\r\n      !StringUtils.isEmpty(equipment.section) &&\r\n      !!equipment.sheet &&\r\n      !StringUtils.isEmpty(equipment.sheet) &&\r\n      !!equipment.subject &&\r\n      !StringUtils.isEmpty(equipment.subject)\r\n    ) {\r\n      const itemId: BireItemDTOId = {\r\n        familyCode: BidoFamilyVariantUtils.getFamilyCodeFromFamilyVariantCode(equipment.familyVariantCode),\r\n        chapter: equipment.chapter,\r\n        subject: equipment.subject,\r\n        variantCode: BidoFamilyVariantUtils.getVariantCodeFromFamilyVariantCode(equipment.familyVariantCode),\r\n        section: equipment.section,\r\n        sheet: equipment.sheet,\r\n        marks: equipment.marks,\r\n        structureType: AWPropertiesConstants.STRUCTURE_TYPE_IPC_KEY\r\n      };\r\n\r\n      return itemId;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public static toString(asset: BidoEquipmentDTO | undefined, withFamilyVariantCode: boolean = true): string {\r\n    if (!asset) {\r\n      return '';\r\n    }\r\n\r\n    const equipmentCode = asset.equipmentCode;\r\n    const equipmentFunction = asset.equipmentFunction;\r\n    const familyVariantCode = withFamilyVariantCode ? `${asset.familyVariantCode} | ` : '';\r\n    const pn = asset.pnCode;\r\n    const registration = asset.registration;\r\n    const sn = asset.sn;\r\n\r\n    if (equipmentFunction === AWPropertiesConstants.ITEM_FAMILY_CODE_AIRCRAFT_KEY) {\r\n      const formattedMsn = !StringUtils.isNullOrEmpty(sn) ? `MSN ${sn}` : '';\r\n      const formattedRegistration = !StringUtils.isNullOrEmpty(registration) ? ` | ${registration}` : '';\r\n\r\n      return `${familyVariantCode}${formattedMsn}${formattedRegistration}`;\r\n    } else if (equipmentFunction === AWPropertiesConstants.ITEM_FAMILY_CODE_ENGINE_KEY) {\r\n      const formattedEsn = !StringUtils.isNullOrEmpty(sn) ? `ESN ${sn}` : '';\r\n\r\n      return `${familyVariantCode}${formattedEsn}`;\r\n    } else {\r\n      if (!StringUtils.isNullOrEmpty(pn)) {\r\n        if (!StringUtils.isNullOrEmpty(sn)) {\r\n          return `P/N ${pn} | S/N ${sn}`;\r\n        } else {\r\n          return `P/N ${pn}`;\r\n        }\r\n      } else if (!StringUtils.isNullOrEmpty(sn)) {\r\n        return `S/N ${sn}`;\r\n      } else {\r\n        return StringUtils.orEmpty(equipmentCode);\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}