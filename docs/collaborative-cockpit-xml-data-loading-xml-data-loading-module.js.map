{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/primeng/components/selectbutton/selectbutton.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./node_modules/primeng/progressbar.js","webpack:///./node_modules/primeng/selectbutton.js","webpack:///./src/app/main/collaborative-cockpit/xml-data-loading/form/xml-data-loading-form.component.html","webpack:///./src/app/main/collaborative-cockpit/xml-data-loading/form/xml-data-loading-form.component.scss","webpack:///./src/app/main/collaborative-cockpit/xml-data-loading/form/xml-data-loading-form.component.ts","webpack:///./src/app/main/collaborative-cockpit/xml-data-loading/form/xml-data-loading-form.service.ts","webpack:///./src/app/main/collaborative-cockpit/xml-data-loading/xml-data-loading.module.ts","webpack:///./src/app/shared/utils/file-utils.ts"],"names":[],"mappings":"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","file":"collaborative-cockpit-xml-data-loading-xml-data-loading-module.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar objectutils_1 = require(\"../utils/objectutils\");\nvar forms_1 = require(\"@angular/forms\");\nexports.SELECTBUTTON_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return SelectButton; }),\n    multi: true\n};\nvar SelectButton = /** @class */ (function () {\n    function SelectButton(cd) {\n        this.cd = cd;\n        this.tabindex = 0;\n        this.onOptionClick = new core_1.EventEmitter();\n        this.onChange = new core_1.EventEmitter();\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n    }\n    Object.defineProperty(SelectButton.prototype, \"options\", {\n        get: function () {\n            return this._options;\n        },\n        set: function (val) {\n            var opts = this.optionLabel ? objectutils_1.ObjectUtils.generateSelectItems(val, this.optionLabel) : val;\n            this._options = opts;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SelectButton.prototype.writeValue = function (value) {\n        this.value = value;\n        this.cd.markForCheck();\n    };\n    SelectButton.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    SelectButton.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    SelectButton.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    SelectButton.prototype.onItemClick = function (event, option, index) {\n        if (this.disabled || option.disabled) {\n            return;\n        }\n        if (this.multiple) {\n            var itemIndex_1 = this.findItemIndex(option);\n            if (itemIndex_1 != -1)\n                this.value = this.value.filter(function (val, i) { return i != itemIndex_1; });\n            else\n                this.value = (this.value || []).concat([option.value]);\n        }\n        else {\n            this.value = option.value;\n        }\n        this.onOptionClick.emit({\n            originalEvent: event,\n            option: option,\n            index: index\n        });\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    };\n    SelectButton.prototype.onFocus = function (event) {\n        this.focusedItem = event.target;\n    };\n    SelectButton.prototype.onBlur = function (event) {\n        this.focusedItem = null;\n        this.onModelTouched();\n    };\n    SelectButton.prototype.isSelected = function (option) {\n        if (this.multiple)\n            return this.findItemIndex(option) != -1;\n        else\n            return objectutils_1.ObjectUtils.equals(option.value, this.value, this.dataKey);\n    };\n    SelectButton.prototype.findItemIndex = function (option) {\n        var index = -1;\n        if (this.value) {\n            for (var i = 0; i < this.value.length; i++) {\n                if (this.value[i] == option.value) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], SelectButton.prototype, \"tabindex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SelectButton.prototype, \"multiple\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], SelectButton.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SelectButton.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"dataKey\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"optionLabel\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], SelectButton.prototype, \"onOptionClick\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], SelectButton.prototype, \"onChange\", void 0);\n    __decorate([\n        core_1.ContentChild(core_1.TemplateRef),\n        __metadata(\"design:type\", Object)\n    ], SelectButton.prototype, \"itemTemplate\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], SelectButton.prototype, \"options\", null);\n    SelectButton = __decorate([\n        core_1.Component({\n            selector: 'p-selectButton',\n            template: \"\\n        <div [ngClass]=\\\"'ui-selectbutton ui-buttonset ui-widget ui-corner-all ui-buttonset-' + (options ? options.length : 0)\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div *ngFor=\\\"let option of options; let i = index\\\" #btn class=\\\"ui-button ui-widget ui-state-default ui-button-text-only {{option.styleClass}}\\\"\\n                [ngClass]=\\\"{'ui-state-active':isSelected(option), 'ui-state-disabled': disabled || option.disabled, 'ui-state-focus': btn == focusedItem, \\n                'ui-button-text-icon-left': (option.icon != null), 'ui-button-icon-only': (option.icon && !option.label)}\\\" (click)=\\\"onItemClick($event,option,i)\\\" (keydown.enter)=\\\"onItemClick($event,option,i)\\\"\\n                [attr.title]=\\\"option.title\\\" [attr.aria-label]=\\\"option.label\\\" (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\" [attr.tabindex]=\\\"tabindex\\\">\\n                <ng-container *ngIf=\\\"!itemTemplate else customcontent\\\">\\n                    <span [ngClass]=\\\"['ui-clickable', 'ui-button-icon-left']\\\" [class]=\\\"option.icon\\\" *ngIf=\\\"option.icon\\\"></span>\\n                    <span class=\\\"ui-button-text ui-clickable\\\">{{option.label||'ui-btn'}}</span>\\n                </ng-container>\\n                <ng-template #customcontent>\\n                    <ng-container *ngTemplateOutlet=\\\"itemTemplate; context: {$implicit: option, index: i}\\\"></ng-container>\\n                </ng-template>\\n            </div>\\n        </div>\\n    \",\n            providers: [exports.SELECTBUTTON_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\n    ], SelectButton);\n    return SelectButton;\n}());\nexports.SelectButton = SelectButton;\nvar SelectButtonModule = /** @class */ (function () {\n    function SelectButtonModule() {\n    }\n    SelectButtonModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [SelectButton],\n            declarations: [SelectButton]\n        })\n    ], SelectButtonModule);\n    return SelectButtonModule;\n}());\nexports.SelectButtonModule = SelectButtonModule;\n//# sourceMappingURL=selectbutton.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/progressbar/progressbar\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/selectbutton/selectbutton\"));","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        {{ \\\"page.searchPage\\\" | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\"><!-- Remove enclosing tag if empty --></div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <!-- ROW 1: DATA PANEL -->\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".data\\\" | translate }}</label>\\r\\n                    <div class=\\\"form-control custom-margin\\\">\\r\\n                      <p-selectButton\\r\\n                        [(ngModel)]=\\\"selectedData\\\"\\r\\n                        [options]=\\\"dataList\\\"\\r\\n                        (onChange)=\\\"checkDataControl()\\\"\\r\\n                      ></p-selectButton>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- PANEL ENABLE BY displayEnginePanel -->\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"displayEnginePanel\\\">\\r\\n                  <div class=\\\"form-group required\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".wbmRevNum\\\" | translate }}</label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"wbmRevNum\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\"></div>\\r\\n                  <div class=\\\"form-group\\\"></div>\\r\\n                  <div class=\\\"form-group\\\"></div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- ROW 2: IMPORT PANEL -->\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"selectedData === ipcData\\\">\\r\\n                  {{ componentData.componentId + \\\".importIPCData\\\" | translate }}\\r\\n                </h3>\\r\\n                <h3 class=\\\"grid-cell-title\\\" *ngIf=\\\"selectedData === engineManualData\\\">\\r\\n                  {{ componentData.componentId + \\\".importEngineManual\\\" | translate }}\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <!-- IMPORT ROW -->\\r\\n              <div class=\\\"row grid-cell--12\\\">\\r\\n                <div class=\\\"row grid-cell--5\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".fileToImport\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n                      <div class=\\\"form-control-data\\\">\\r\\n                        {{ fileName }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"btn-file-upload-wrapper\\\">\\r\\n                        <p-fileUpload\\r\\n                          #fileUploader\\r\\n                          *ngIf=\\\"!isReadOpenMode\\\"\\r\\n                          class=\\\"aw-fileupload\\\"\\r\\n                          name=\\\"document[]\\\"\\r\\n                          customUpload=\\\"true\\\"\\r\\n                          mode=\\\"basic\\\"\\r\\n                          auto=\\\"true\\\"\\r\\n                          sizeLimit=\\\"100000000\\\"\\r\\n                          chooseLabel=\\\"\\\"\\r\\n                          (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                        ></p-fileUpload>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row grid-cell--1\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn-with-spinner\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"import()\\\"\\r\\n                        [disabled]=\\\"!currentFile || importRunning\\\"\\r\\n                      >\\r\\n                        <span class=\\\"lds-hourglass\\\" *ngIf=\\\"importLoader || importRunning\\\"></span>\\r\\n                        <i class=\\\"fa fa-fw fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        {{ componentData.componentId + \\\".importFile\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row grid-cell--1\\\">\\r\\n                  <div *ngIf=\\\"displayEnginePanel\\\">\\r\\n                    <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <button type=\\\"button\\\" mat-raised-button (click)=\\\"changeRecord()\\\">\\r\\n                          {{ componentData.componentId + \\\".changeRecord\\\" | translate }}\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row grid-cell--4\\\"></div>\\r\\n              </div>\\r\\n\\r\\n              <!-- PROGRESS ROW -->\\r\\n              <ng-container *ngIf=\\\"!displayEnginePanel\\\">\\r\\n                <div class=\\\"row grid-cell--12\\\" *ngFor=\\\"let elt of importIpcSatuses\\\">\\r\\n                  <div class=\\\"row grid-cell--6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ elt.fileName }} </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-progressBar [value]=\\\"elt.progress\\\"></p-progressBar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row grid-cell--2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n                      <div class=\\\"form-control\\\">{{ elt.handled }}/ {{ elt.total }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-container>\\r\\n              <ng-container *ngIf=\\\"displayEnginePanel\\\">\\r\\n                <div class=\\\"row grid-cell--12\\\" *ngFor=\\\"let elt of importTasksSatuses\\\">\\r\\n                  <div class=\\\"row grid-cell--6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ elt.fileName }} </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-progressBar [value]=\\\"elt.progress\\\"></p-progressBar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row grid-cell--2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> &nbsp; </label>\\r\\n                      <div class=\\\"form-control\\\">{{ elt.handled }}/ {{ elt.total }}</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- ROW 3: IMPORT REPORT LIST -->\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--12\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".importReports\\\" | translate }} ({{\\r\\n                      selectedReports ? selectedReports.length : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <!--For import reports-->\\r\\n              <div class=\\\"grid-cell-content\\\">\\r\\n                <p-table\\r\\n                  [resizableColumns]=\\\"true\\\"\\r\\n                  #ptableImportReports\\r\\n                  class=\\\"aw-table2\\\"\\r\\n                  [columns]=\\\"reportTableCols\\\"\\r\\n                  [value]=\\\"reports\\\"\\r\\n                  [(selection)]=\\\"selectedReports\\\"\\r\\n                  [scrollable]=\\\"true\\\"\\r\\n                >\\r\\n                  <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                    <span *ngIf=\\\"!isReportLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                    <div *ngIf=\\\"isReportLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                      <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                      <div class=\\\"lds-hourglass\\\"></div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"caption\\\">\\r\\n                    <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedReports.length > 0 }\\\">\\r\\n                      <div class=\\\"aw-table-global-filter\\\">\\r\\n                        <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </label>\\r\\n\\r\\n                        <input\\r\\n                          #ptableImportReportGlobalFilter\\r\\n                          class=\\\"aw-table-global-filter-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                          (input)=\\\"ptableImportReports.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"aw-table-actions\\\">\\r\\n                        <button\\r\\n                          *ngIf=\\\"selectedReports.length > 0\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"deleteReports()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                    <colgroup>\\r\\n                      <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                      <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                    </colgroup>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                    <tr>\\r\\n                      <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                      </th>\\r\\n\\r\\n                      <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                        {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                      </th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                    <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                      <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                      </td>\\r\\n\\r\\n                      <td\\r\\n                        *ngFor=\\\"let col of columns\\\"\\r\\n                        [ngSwitch]=\\\"col.field\\\"\\r\\n                        [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                      >\\r\\n                        <div *ngSwitchCase=\\\"'reportName'\\\">\\r\\n                          <span (click)=\\\"openReportDetail(rowData)\\\" class=\\\"report-name\\\">\\r\\n                            {{ rowData[col.field] }}\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        <div *ngSwitchCase=\\\"'statusDate'\\\">\\r\\n                          <span>\\r\\n                            {{ rowData[col.field] | date: \\\"dd/MM/yyyy HH:mm:ss\\\":\\\"\\\":translateService.currentLang }}\\r\\n                          </span>\\r\\n                        </div>\\r\\n                        <div *ngSwitchDefault>\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </p-table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host .custom-margin {\\n  margin-top: 0.5em !important; }\\n\\n:host .report-name {\\n  cursor: pointer;\\n  text-decoration: underline;\\n  color: blue; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9jb2xsYWJvcmF0aXZlLWNvY2twaXQveG1sLWRhdGEtbG9hZGluZy9mb3JtL2Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZ2l0aHViX3BhZ2VzL3NyY1xcYXBwXFxtYWluXFxjb2xsYWJvcmF0aXZlLWNvY2twaXRcXHhtbC1kYXRhLWxvYWRpbmdcXGZvcm1cXHhtbC1kYXRhLWxvYWRpbmctZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLDRCQUE0QixFQUFBOztBQUZoQztFQU1JLGVBQWU7RUFDZiwwQkFBMEI7RUFDMUIsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9jb2xsYWJvcmF0aXZlLWNvY2twaXQveG1sLWRhdGEtbG9hZGluZy9mb3JtL3htbC1kYXRhLWxvYWRpbmctZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAuY3VzdG9tLW1hcmdpbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAwLjVlbSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgLnJlcG9ydC1uYW1lIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgY29sb3I6IGJsdWU7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FileUpload } from 'primeng/fileupload';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { RefreshArchivedImportReportInput } from '../../../../shared/types/api-input-types/engineering-data-exchange/refresh-archived-import-report-input.interface';\r\nimport { RemoveDataInput } from '../../../../shared/types/api-input-types/engineering-data-exchange/remove-data-input.interface';\r\nimport { BireReportDTOId } from '../../../../shared/types/api-types/bire-report-dto-id.interface';\r\nimport { BireReportDTO } from '../../../../shared/types/api-types/bire-report-dto.interface';\r\nimport { ImportStatusDto } from '../../../../shared/types/api-types/import-status-dto-interface';\r\nimport { ImportTaskDTO } from '../../../../shared/types/api-types/import-task-dto.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\n\r\nimport { XmlDataLoadingFormService } from './xml-data-loading-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-xml-data-loading-form',\r\n  styleUrls: ['./xml-data-loading-form.component.scss'],\r\n  templateUrl: './xml-data-loading-form.component.html'\r\n})\r\nexport class XmlDataLoadingFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public static readonly MAX_RETRY: number = 3;\r\n  private retryCounter: number = 0;\r\n  public ipcData: string = '0';\r\n  public engineManualData: string = '1';\r\n\r\n  // Button\r\n  public dataList: LabelValue<string>[];\r\n  public selectedData: string;\r\n  public displayEnginePanel: boolean;\r\n  public wbmRevNum: string | undefined;\r\n  public planCodeCharged?: string;\r\n\r\n  // Table\r\n  public reports: BireReportDTO[];\r\n  public reportTableCols: TableColumn[];\r\n  public selectedReports: BireReportDTO[];\r\n\r\n  // Import\r\n  public fileName: string | undefined;\r\n  public importLoader: boolean;\r\n  public importRunning: boolean;\r\n  public importIpcSatuses: ImportStatusDto[];\r\n  public importTasksSatuses: ImportStatusDto[];\r\n  public currentFile: File;\r\n  public timeBeweenProgressBarUpdate: number = 2000;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public sessionService: SessionService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly translateService: TranslateService,\r\n    private readonly xmlDataLoadingFormService: XmlDataLoadingFormService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.COL_XML_DATA_LOADING_FORM;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.init();\r\n  }\r\n\r\n  private init() {\r\n    // Setting data select buttons\r\n    this.dataList = [\r\n      {\r\n        label: this.translateService.instant(this.getTranslateKey('ipc')),\r\n        value: this.ipcData\r\n      },\r\n      {\r\n        label: this.translateService.instant(this.getTranslateKey('engineManual')),\r\n        value: this.engineManualData\r\n      }\r\n    ];\r\n    this.selectedData = this.ipcData;\r\n\r\n    // Setting table columns\r\n    this.reportTableCols = [\r\n      { field: 'familyCode' },\r\n      { field: 'reportCode' },\r\n      { field: 'reportName' },\r\n      { field: 'author' },\r\n      { field: 'statusDate', alignment: 'center' }\r\n    ];\r\n    this.selectedReports = [];\r\n\r\n    this.updateStatusBar(false);\r\n  }\r\n\r\n  /**********************************\r\n   * On Change Data select button\r\n   **********************************/\r\n  public checkDataControl() {\r\n    this.displayEnginePanel = this.selectedData === this.ipcData ? false : true;\r\n    this.updateStatusBar(false);\r\n  }\r\n\r\n  /**********************************\r\n   * Import Functionality\r\n   **********************************/\r\n  public import() {\r\n    if (this.validate()) {\r\n      this.importLoader = true;\r\n      this.importRunning = true;\r\n      const importTaskDto: ImportTaskDTO = { wbRevNo: this.wbmRevNum };\r\n      const observable = !this.displayEnginePanel\r\n        ? this.xmlDataLoadingFormService.importIPC(this.currentFile)\r\n        : this.xmlDataLoadingFormService.importTask(this.currentFile, importTaskDto as ImportTaskDTO);\r\n\r\n      observable\r\n        .pipe(\r\n          finalize(() => {\r\n            this.updateStatusBar(true);\r\n          })\r\n        )\r\n        .subscribe();\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('wbmRevNotFilled'));\r\n    }\r\n  }\r\n\r\n  private validate() {\r\n    return !this.displayEnginePanel || (this.displayEnginePanel && !!this.wbmRevNum);\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    this.currentFile = event.files[0];\r\n    this.fileName = this.currentFile.name;\r\n    fileUploader.clear();\r\n  }\r\n  public updateStatusBar(reloadWhenEmpty: boolean): void {\r\n    const observable = !this.displayEnginePanel\r\n      ? this.xmlDataLoadingFormService.getImportIpcStatus()\r\n      : this.xmlDataLoadingFormService.getImportTaskStatus();\r\n\r\n    observable.subscribe((results) => {\r\n      this.importIpcSatuses = [];\r\n      this.importTasksSatuses = [];\r\n      if (!!results) {\r\n        results.forEach((result) => {\r\n          if (!this.displayEnginePanel) {\r\n            this.importIpcSatuses.push(result);\r\n          } else {\r\n            this.importTasksSatuses.push(result);\r\n            if (!!result.planCodeCharged) {\r\n              this.planCodeCharged = result.planCodeCharged;\r\n            }\r\n          }\r\n        });\r\n\r\n        setTimeout(() => {\r\n          this.updateStatusBar(false);\r\n        }, this.timeBeweenProgressBarUpdate);\r\n      } else if (reloadWhenEmpty) {\r\n        this.retryCounter++;\r\n        if (this.retryCounter < XmlDataLoadingFormComponent.MAX_RETRY) {\r\n          setTimeout(() => {\r\n            this.updateStatusBar(reloadWhenEmpty);\r\n          }, this.timeBeweenProgressBarUpdate);\r\n        } else {\r\n          this.pageDefaults();\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOccurred'));\r\n        }\r\n      } else {\r\n        this.pageDefaults();\r\n      }\r\n    });\r\n  }\r\n\r\n  private pageDefaults(): void {\r\n    this.importLoader = false;\r\n    this.importRunning = false;\r\n    this.loadImportReportList();\r\n  }\r\n\r\n  public loadImportReportList(): void {\r\n    this.reports = [];\r\n    const loadImportReportsInput: RefreshArchivedImportReportInput = {\r\n      reportCode: !this.displayEnginePanel ? 'IPD_IMPORT_REPORT' : 'TASK_IMPORT_REPORT'\r\n    };\r\n    this.xmlDataLoadingFormService.fetchXmlDataLoadingReport(loadImportReportsInput).subscribe(\r\n      (results) => {\r\n        this.reports = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadImportReports'));\r\n      }\r\n    );\r\n  }\r\n\r\n  /**********************************\r\n   * On clicking report name\r\n   **********************************/\r\n  public openReportDetail(object: BireReportDTO): void {\r\n    if (!!object.reportId) {\r\n      const bireReportDTOId: BireReportDTOId = {\r\n        reportId: object.reportId\r\n      };\r\n      this.xmlDataLoadingFormService.openImportReportContent(bireReportDTOId).subscribe((result) => {\r\n        if (!!object.reportName && object.reportName.includes('.txt')) {\r\n          this.downLoadFiles(result, object.reportName);\r\n        } else {\r\n          this.downLoadFiles(result, `${object.reportName}.txt`);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public downLoadFiles(docFile: Uint8Array, docName: string): void {\r\n    FileUtils.downloadFile(docFile, docName);\r\n  }\r\n\r\n  // Delete\r\n  public deleteReports() {\r\n    if (this.selectedReports !== []) {\r\n      const partialMessageKey =\r\n        this.selectedReports.length > 1 ? 'confirmDeleteSelectedReports' : 'confirmDeleteSelectedReport';\r\n\r\n      const reports: BireReportDTOId[] = [];\r\n\r\n      this.selectedReports.forEach((report) => {\r\n        if (report && report.reportId) {\r\n          const reportId: BireReportDTOId = {\r\n            reportId: report.reportId\r\n          };\r\n          reports.push(reportId);\r\n        }\r\n      });\r\n      const removeDataInput: RemoveDataInput = {\r\n        bireReportDTOId: reports,\r\n        data: ''\r\n      };\r\n\r\n      this.confirmationService.confirmDelete({\r\n        messageKey: this.getTranslateKey(partialMessageKey),\r\n        accept: () => {\r\n          this.xmlDataLoadingFormService.removeDataReportsByReportId(removeDataInput).subscribe(\r\n            (result) => {\r\n              const messageKey =\r\n                partialMessageKey === 'confirmDeleteSelectedReports'\r\n                  ? this.getTranslateKey('successOnDeleteReports')\r\n                  : this.getTranslateKey('successOnDeleteReport');\r\n\r\n              this.messageService.showSuccessMessage(messageKey);\r\n              this.selectedReports = [];\r\n              this.loadImportReportList();\r\n            },\r\n            () => {\r\n              const messageKey =\r\n                partialMessageKey === 'confirmDeleteSelectedReports'\r\n                  ? this.getTranslateKey('errorOnDeleteReports')\r\n                  : this.getTranslateKey('errorOnDeleteReport');\r\n\r\n              this.messageService.showSuccessMessage(messageKey);\r\n            }\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private openMaintenanceProgram(objectId: string | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.ENG_CHANGE_RECORD_FORM,\r\n      openMode\r\n    };\r\n    if (!!objectId) {\r\n      data.objectId = this.serializationService.serialize(objectId);\r\n    }\r\n\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public changeRecord(): void {\r\n    if (!!this.planCodeCharged) {\r\n      this.openMaintenanceProgram(this.planCodeCharged, ComponentOpenMode.Read);\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('wbmRevNotFilled'));\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { MhiaelImportApi } from '../../../../shared/api/mhiael/import.api';\r\nimport { AbstractAwMhiaelHttpService } from '../../../../shared/http/abstract-aw-mhiael-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { RefreshArchivedImportReportInput } from '../../../../shared/types/api-input-types/engineering-data-exchange/refresh-archived-import-report-input.interface';\r\nimport { RemoveDataInput } from '../../../../shared/types/api-input-types/engineering-data-exchange/remove-data-input.interface';\r\nimport { BireReportDTOId } from '../../../../shared/types/api-types/bire-report-dto-id.interface';\r\nimport { BireReportDTO } from '../../../../shared/types/api-types/bire-report-dto.interface';\r\nimport { ImportStatusDto } from '../../../../shared/types/api-types/import-status-dto-interface';\r\nimport { ImportTaskDTO } from '../../../../shared/types/api-types/import-task-dto.interface';\r\n\r\n@Injectable()\r\nexport class XmlDataLoadingFormService extends AbstractAwMhiaelHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly mhiaelImportApi: MhiaelImportApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public importIPC(file: File): Observable<void> {\r\n    return super.postFile<File, void>(this.mhiaelImportApi.importIPC, file);\r\n  }\r\n\r\n  public importTask(file: File, data?: ImportTaskDTO): Observable<void> {\r\n    return super.postFile<File, void>(this.mhiaelImportApi.importTask, file, data);\r\n  }\r\n\r\n  public getImportTaskStatus(): Observable<ImportStatusDto[]> {\r\n    return super.get<ImportStatusDto[]>(this.mhiaelImportApi.importTaskStatus);\r\n  }\r\n\r\n  public getImportIpcStatus(): Observable<ImportStatusDto[]> {\r\n    return super.get<ImportStatusDto[]>(this.mhiaelImportApi.importIPCStatus);\r\n  }\r\n\r\n  public removeDataReportsByReportId(reports: RemoveDataInput): Observable<boolean> {\r\n    return super.post<RemoveDataInput, boolean>(this.mhiaelImportApi.removeDataReportsByReportId, reports);\r\n  }\r\n\r\n  public fetchXmlDataLoadingReport(\r\n    refreshArchivedImportReportInput: RefreshArchivedImportReportInput\r\n  ): Observable<BireReportDTO[]> {\r\n    return super.post<RefreshArchivedImportReportInput, BireReportDTO[]>(\r\n      this.mhiaelImportApi.fetchXmlDataLoadingReport,\r\n      refreshArchivedImportReportInput\r\n    );\r\n  }\r\n\r\n  public openImportReportContent(input: BireReportDTOId): Observable<Uint8Array> {\r\n    return super.post<BireReportDTOId, Uint8Array>(this.mhiaelImportApi.findBireReportContentOfBireReport, input);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { XmlDataLoadingFormComponent } from './form/xml-data-loading-form.component';\r\nimport { XmlDataLoadingFormService } from './form/xml-data-loading-form.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  TooltipModule,\r\n  SelectButtonModule,\r\n  PrimeNgTableModule,\r\n  FileUploadModule,\r\n  ProgressBarModule,\r\n  CheckboxModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [TableModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [];\r\n\r\nconst DYNAMIC_COMPONENTS = [XmlDataLoadingFormComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [XmlDataLoadingFormService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class XmlDataLoadingModule {}\r\n","import * as FileSaver from 'file-saver';\r\n\r\nimport { NumberUtils } from './number-utils';\r\n\r\nexport class FileUtils {\r\n  public static readonly KIBIOCTET: number = 1024;\r\n  public static readonly KILOOCTET: number = 1000;\r\n\r\n  public static downloadFile(file: Uint8Array | undefined, fileName: string | undefined): void {\r\n    if (!!file && !!fileName) {\r\n      const byteCharacters = atob(file.toString());\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n\r\n      FileSaver.saveAs(new Blob([new Uint8Array(byteNumbers)]), fileName);\r\n    }\r\n  }\r\n\r\n  public static getExtension(fileName: string | undefined): string {\r\n    return !!fileName && fileName.includes('.') ? fileName.substring(fileName.lastIndexOf('.') + 1) : '';\r\n  }\r\n\r\n  public static getFileContentAsBase64(file: File | undefined, callback: (fileContent: Uint8Array) => void): void {\r\n    if (!!file) {\r\n      const reader: FileReader = new FileReader();\r\n      reader.onloadend = () => {\r\n        let fileContent: any = reader.result; // tslint:disable-line:no-any\r\n        fileContent = fileContent.substring((fileContent.indexOf(',') as number) + 1); // Remove data:*/*;base64,\r\n        callback(fileContent);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  public static getFormattedSize(size: number | undefined): string {\r\n    if (!!size) {\r\n      return size / FileUtils.KILOOCTET < FileUtils.KILOOCTET\r\n        ? `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET)} Ko`\r\n        : `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET / FileUtils.KILOOCTET)} Mo`;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}