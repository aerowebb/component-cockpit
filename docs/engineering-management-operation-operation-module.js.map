{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/primeng/components/inputtextarea/inputtextarea.js","webpack:///./node_modules/primeng/components/keyfilter/keyfilter.js","webpack:///./node_modules/primeng/components/message/message.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./node_modules/primeng/message.js","webpack:///./src/app/main/engineering-management/operation/form/dialog-components/dialog-components.component.html","webpack:///./src/app/main/engineering-management/operation/form/dialog-components/dialog-components.component.ts","webpack:///./src/app/main/engineering-management/operation/form/operation-form.component.html","webpack:///./src/app/main/engineering-management/operation/form/operation-form.component.ts","webpack:///./src/app/main/engineering-management/operation/form/operation-form.service.ts","webpack:///./src/app/main/engineering-management/operation/form/operation-import-popup/operation-import-popup.component.html","webpack:///./src/app/main/engineering-management/operation/form/operation-import-popup/operation-import-popup.component.ts","webpack:///./src/app/main/engineering-management/operation/operation.module.ts","webpack:///./src/app/main/engineering-management/operation/search/operation-search.component.html","webpack:///./src/app/main/engineering-management/operation/search/operation-search.component.ts","webpack:///./src/app/main/engineering-management/operation/search/operation-search.service.ts","webpack:///./src/app/main/overlay/overlay.service.ts","webpack:///./src/app/shared/utils/file-utils.ts","webpack:///./src/app/shared/utils/settings-utils.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+GAAe,GAAG,IAAqC,CAAC,iCAAO,EAAE,oCAAC,CAAC;AAAA;AAAA;AAAA,oGAAC,CAAC,KAAK,EAA6E,CAAC,kBAAkB,aAAa,gBAAgB,+BAA+B,WAAW,4FAA4F,WAAW,kEAAkE,4DAA4D,YAAY,IAAI,kBAAkB,yBAAyB,0DAA0D,kBAAkB,sBAAsB,yCAAyC,UAAU,cAAc,yBAAyB,iEAAiE,cAAc,IAAI,yCAAyC,SAAS,0CAA0C,0FAA0F,qOAAqO,0DAA0D,uDAAuD,iNAAiN,0BAA0B,4BAA4B,KAAK,KAAK,gDAAgD,mFAAmF,sBAAsB,KAAK,kCAAkC,iDAAiD,KAAK,GAAG,mBAAmB,8HAA8H,oIAAoI,2CAA2C,qBAAqB,uBAAuB,eAAe,0BAA0B,GAAG,wBAAwB,yCAAyC,oBAAoB,KAAK,gDAAgD,4DAA4D,qBAAqB,OAAO,EAAE,oBAAoB,KAA0B,qBAAqB;;AAEr/E,yC;;;;;;;;;;;;ACFa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,cAAc,mBAAO,CAAC,oEAAgB;AACtC,eAAe,mBAAO,CAAC,uEAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,yC;;;;;;;;;;;;ACrHa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,mBAAmB,mBAAO,CAAC,8EAAmB;AAC9C,cAAc,mBAAO,CAAC,oEAAgB;AACtC;AACA;AACA,gDAAgD,kBAAkB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;AC/Ka;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;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","file":"engineering-management-operation-operation-module.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar common_1 = require(\"@angular/common\");\nvar InputTextarea = /** @class */ (function () {\n    function InputTextarea(el, ngModel) {\n        this.el = el;\n        this.ngModel = ngModel;\n        this.onResize = new core_1.EventEmitter();\n    }\n    InputTextarea.prototype.ngDoCheck = function () {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize();\n        }\n    };\n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    InputTextarea.prototype.onInput = function (e) {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.updateFilledState = function () {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    };\n    InputTextarea.prototype.onFocus = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.onBlur = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.resize = function (event) {\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n        this.onResize.emit(event || {});\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], InputTextarea.prototype, \"autoResize\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], InputTextarea.prototype, \"onResize\", void 0);\n    __decorate([\n        core_1.HostListener('input', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onInput\", null);\n    __decorate([\n        core_1.HostListener('focus', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onFocus\", null);\n    __decorate([\n        core_1.HostListener('blur', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onBlur\", null);\n    InputTextarea = __decorate([\n        core_1.Directive({\n            selector: '[pInputTextarea]',\n            host: {\n                '[class.ui-inputtext]': 'true',\n                '[class.ui-corner-all]': 'true',\n                '[class.ui-inputtextarea-resizable]': 'autoResize',\n                '[class.ui-state-default]': 'true',\n                '[class.ui-widget]': 'true',\n                '[class.ui-state-filled]': 'filled'\n            }\n        }),\n        __param(1, core_1.Optional()),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, forms_1.NgModel])\n    ], InputTextarea);\n    return InputTextarea;\n}());\nexports.InputTextarea = InputTextarea;\nvar InputTextareaModule = /** @class */ (function () {\n    function InputTextareaModule() {\n    }\n    InputTextareaModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [InputTextarea],\n            declarations: [InputTextarea]\n        })\n    ], InputTextareaModule);\n    return InputTextareaModule;\n}());\nexports.InputTextareaModule = InputTextareaModule;\n//# sourceMappingURL=inputtextarea.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar forms_1 = require(\"@angular/forms\");\nexports.KEYFILTER_VALIDATOR = {\n    provide: forms_1.NG_VALIDATORS,\n    useExisting: core_1.forwardRef(function () { return KeyFilter; }),\n    multi: true\n};\nvar KeyFilter = /** @class */ (function () {\n    function KeyFilter(el) {\n        this.el = el;\n    }\n    KeyFilter_1 = KeyFilter;\n    Object.defineProperty(KeyFilter.prototype, \"pattern\", {\n        get: function () {\n            return this._pattern;\n        },\n        set: function (_pattern) {\n            this._pattern = _pattern;\n            this.regex = KeyFilter_1.DEFAULT_MASKS[this._pattern] || this._pattern;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    KeyFilter.prototype.isNavKeyPress = function (e) {\n        var k = e.keyCode;\n        k = domhandler_1.DomHandler.getBrowser().safari ? (KeyFilter_1.SAFARI_KEYS[k] || k) : k;\n        return (k >= 33 && k <= 40) || k == KeyFilter_1.KEYS.RETURN || k == KeyFilter_1.KEYS.TAB || k == KeyFilter_1.KEYS.ESC;\n    };\n    ;\n    KeyFilter.prototype.isSpecialKey = function (e) {\n        var k = e.keyCode;\n        var c = e.charCode;\n        return k == 9 || k == 13 || k == 27 || k == 16 || k == 17 || (k >= 18 && k <= 20) ||\n            (domhandler_1.DomHandler.getBrowser().opera && !e.shiftKey && (k == 8 || (k >= 33 && k <= 35) || (k >= 36 && k <= 39) || (k >= 44 && k <= 45)));\n    };\n    KeyFilter.prototype.getKey = function (e) {\n        var k = e.keyCode || e.charCode;\n        return domhandler_1.DomHandler.getBrowser().safari ? (KeyFilter_1.SAFARI_KEYS[k] || k) : k;\n    };\n    KeyFilter.prototype.getCharCode = function (e) {\n        return e.charCode || e.keyCode || e.which;\n    };\n    ;\n    KeyFilter.prototype.onKeyPress = function (e) {\n        if (this.pValidateOnly) {\n            return;\n        }\n        var browser = domhandler_1.DomHandler.getBrowser();\n        if (e.ctrlKey || e.altKey) {\n            return;\n        }\n        var k = this.getKey(e);\n        if (k == 13) {\n            return;\n        }\n        if (browser.mozilla && (this.isNavKeyPress(e) || k == KeyFilter_1.KEYS.BACKSPACE || (k == KeyFilter_1.KEYS.DELETE && e.charCode == 0))) {\n            return;\n        }\n        var c = this.getCharCode(e);\n        var cc = String.fromCharCode(c);\n        var ok = true;\n        if (browser.mozilla && (this.isSpecialKey(e) || !cc)) {\n            return;\n        }\n        ok = this.regex.test(cc);\n        if (!ok) {\n            e.preventDefault();\n        }\n    };\n    KeyFilter.prototype.onPaste = function (e) {\n        var clipboardData = e.clipboardData || window.clipboardData.getData('text');\n        if (clipboardData) {\n            var pastedText = clipboardData;\n            if (!this.regex.test(pastedText)) {\n                e.preventDefault();\n            }\n        }\n    };\n    KeyFilter.prototype.validate = function (c) {\n        if (this.pValidateOnly) {\n            var value = this.el.nativeElement.value;\n            if (value && !this.regex.test(value)) {\n                return {\n                    validatePattern: false\n                };\n            }\n        }\n    };\n    var KeyFilter_1;\n    KeyFilter.DEFAULT_MASKS = {\n        pint: /[\\d]/,\n        'int': /[\\d\\-]/,\n        pnum: /[\\d\\.]/,\n        money: /[\\d\\.\\s,]/,\n        num: /[\\d\\-\\.]/,\n        hex: /[0-9a-f]/i,\n        email: /[a-z0-9_\\.\\-@]/i,\n        alpha: /[a-z_]/i,\n        alphanum: /[a-z0-9_]/i\n    };\n    KeyFilter.KEYS = {\n        TAB: 9,\n        RETURN: 13,\n        ESC: 27,\n        BACKSPACE: 8,\n        DELETE: 46\n    };\n    KeyFilter.SAFARI_KEYS = {\n        63234: 37,\n        63235: 39,\n        63232: 38,\n        63233: 40,\n        63276: 33,\n        63277: 34,\n        63272: 46,\n        63273: 36,\n        63275: 35 // end\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], KeyFilter.prototype, \"pValidateOnly\", void 0);\n    __decorate([\n        core_1.Input('pKeyFilter'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], KeyFilter.prototype, \"pattern\", null);\n    __decorate([\n        core_1.HostListener('keypress', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [KeyboardEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], KeyFilter.prototype, \"onKeyPress\", null);\n    __decorate([\n        core_1.HostListener('paste', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], KeyFilter.prototype, \"onPaste\", null);\n    KeyFilter = KeyFilter_1 = __decorate([\n        core_1.Directive({\n            selector: '[pKeyFilter]',\n            providers: [exports.KEYFILTER_VALIDATOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\n    ], KeyFilter);\n    return KeyFilter;\n}());\nexports.KeyFilter = KeyFilter;\nvar KeyFilterModule = /** @class */ (function () {\n    function KeyFilterModule() {\n    }\n    KeyFilterModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [KeyFilter],\n            declarations: [KeyFilter]\n        })\n    ], KeyFilterModule);\n    return KeyFilterModule;\n}());\nexports.KeyFilterModule = KeyFilterModule;\n//# sourceMappingURL=keyfilter.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar UIMessage = /** @class */ (function () {\n    function UIMessage() {\n    }\n    Object.defineProperty(UIMessage.prototype, \"icon\", {\n        get: function () {\n            var icon = null;\n            if (this.severity) {\n                switch (this.severity) {\n                    case 'success':\n                        icon = 'pi pi-check';\n                        break;\n                    case 'info':\n                        icon = 'pi pi-info-circle';\n                        break;\n                    case 'error':\n                        icon = 'pi pi-times';\n                        break;\n                    case 'warn':\n                        icon = 'pi pi-exclamation-triangle';\n                        break;\n                    default:\n                        icon = 'pi pi-info-circle';\n                        break;\n                }\n            }\n            return icon;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], UIMessage.prototype, \"severity\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], UIMessage.prototype, \"text\", void 0);\n    UIMessage = __decorate([\n        core_1.Component({\n            selector: 'p-message',\n            template: \"\\n        <div aria-live=\\\"polite\\\" class=\\\"ui-message ui-widget ui-corner-all\\\" *ngIf=\\\"severity\\\"\\n        [ngClass]=\\\"{'ui-message-info': (severity === 'info'),\\n                'ui-message-warn': (severity === 'warn'),\\n                'ui-message-error': (severity === 'error'),\\n                'ui-message-success': (severity === 'success')}\\\">\\n            <span class=\\\"ui-message-icon\\\" [ngClass]=\\\"icon\\\"></span>\\n            <span class=\\\"ui-message-text\\\" [innerHTML]=\\\"text\\\"></span>\\n        </div>\\n    \"\n        })\n    ], UIMessage);\n    return UIMessage;\n}());\nexports.UIMessage = UIMessage;\nvar MessageModule = /** @class */ (function () {\n    function MessageModule() {\n    }\n    MessageModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [UIMessage],\n            declarations: [UIMessage]\n        })\n    ], MessageModule);\n    return MessageModule;\n}());\nexports.MessageModule = MessageModule;\n//# sourceMappingURL=message.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/message/message\"));","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".choosePnType\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"componentTypeList\\\"\\r\\n              [(ngModel)]=\\\"operationComponent.componentType\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              (onChange)=\\\"onComponentTypeSelected($event)\\\"\\r\\n              [disabled]=\\\"!isNewComponentForm\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            >\\r\\n            </p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".componentCode\\\" | translate }}</label>\\r\\n\\r\\n          <div\\r\\n            *ngIf=\\\"operationComponent.componentType === ingredientToolType\\\"\\r\\n            class=\\\"form-control form-control-with-modal\\\"\\r\\n            [ngClass]=\\\"{ disabled: !isNewComponentForm }\\\"\\r\\n          >\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"isNewComponentForm && searchIngredientTool()\\\">\\r\\n              {{ ingredientToolPnCode }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"ingredientToolPnCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"isNewComponentForm && (ingredientToolPnCode = undefined)\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"isNewComponentForm && searchIngredientTool()\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div\\r\\n            *ngIf=\\\"operationComponent.componentType === partType\\\"\\r\\n            class=\\\"form-control form-control-with-modal\\\"\\r\\n            [ngClass]=\\\"{ disabled: !isNewComponentForm }\\\"\\r\\n          >\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"isNewComponentForm && searchPart()\\\">{{ partPnCode }}</div>\\r\\n\\r\\n            <div *ngIf=\\\"partPnCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"partPnCode = undefined\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"isNewComponentForm && searchPart()\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div\\r\\n            *ngIf=\\\"operationComponent.componentType === subcontractingType\\\"\\r\\n            class=\\\"form-control form-control-with-modal\\\"\\r\\n            [ngClass]=\\\"{ disabled: !isNewComponentForm }\\\"\\r\\n          >\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"isNewComponentForm && searchSubcontracting()\\\">\\r\\n              {{ subcontractingPnCode }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"subcontractingPnCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"subcontractingPnCode = undefined\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"isNewComponentForm && searchSubcontracting()\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div\\r\\n          class=\\\"form-group\\\"\\r\\n          *ngIf=\\\"\\r\\n            operationComponent.componentType === ingredientToolType || operationComponent.componentType === partType\\r\\n          \\\"\\r\\n        >\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".quantity\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              #quantity=\\\"ngModel\\\"\\r\\n              type=\\\"number\\\"\\r\\n              pInputText\\r\\n              pKeyFilter=\\\"int\\\"\\r\\n              [pValidateOnly]=\\\"true\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"operationComponent.quantity\\\"\\r\\n              [disabled]=\\\"isReadOnlyComponentDialog\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyComponentDialog\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyComponentDialog\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyComponentDialog\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"disableValidate()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-part\\r\\n  *ngIf=\\\"showPnAfterDialog\\\"\\r\\n  [(display)]=\\\"showPnAfterDialog\\\"\\r\\n  [disablePartTypeDropdown]=\\\"true\\\"\\r\\n  (onValidated)=\\\"onSelectedComponent($event)\\\"\\r\\n  [searchObject]=\\\"partsSearch\\\"\\r\\n  [pnType]=\\\"selectedPnType\\\"\\r\\n></aw-dialog-search-part>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { DialogTableData } from '../../../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { AWPropertiesConstants } from '../../../../../shared/constants/aw-properties-constants';\r\nimport { LangConstants } from '../../../../../shared/constants/lang-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { InputValidationService } from '../../../../../shared/services/input-validation.service';\r\nimport { LoaderService } from '../../../../../shared/services/loader.service';\r\nimport { PartsSearchInput } from '../../../../../shared/types/api-input-types/task-management/parts-search-input.interface';\r\nimport { PartsAssociatedTableDTO } from '../../../../../shared/types/api-output-types/task-management/parts-associated-table-dto.interface';\r\nimport { BirePnDTO } from '../../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { LabelValueUtils } from '../../../../../shared/utils/label-value-utils';\r\nimport { OperationPnElement } from '../../types/operation-pn-element.interface';\r\nimport { OperationFormService } from '../operation-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-component',\r\n  templateUrl: './dialog-components.component.html'\r\n})\r\nexport class DialogComponentsComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public operationComponent: OperationPnElement;\r\n  @Input()\r\n  public isReadOnlyComponentDialog: boolean;\r\n  @Output()\r\n  public onValidated: EventEmitter<OperationPnElement>;\r\n\r\n  public componentsLinks: LabelValue<string>[];\r\n\r\n  public keyMap: Map<string, Observable<LabelValue<string>[]>>;\r\n\r\n  public componentTMTableData: DialogTableData<BirePnDTO>;\r\n  public componentPSMTableData: DialogTableData<BirePnDTO>;\r\n\r\n  public displayComponentTMDialog: boolean;\r\n  public displayComponentPSMDialog: boolean;\r\n\r\n  public isNewComponentForm: boolean;\r\n  public isValid: boolean | undefined;\r\n\r\n  public componentTypeList: LabelValue<string>[];\r\n\r\n  public pnType: string;\r\n  public ingredientToolPnCode: string | undefined;\r\n  public partPnCode: string | undefined;\r\n  public subcontractingPnCode: string | undefined;\r\n  public ingredientToolType: string;\r\n  public partType: string;\r\n  public subcontractingType: string;\r\n  public componentQuantity: string | undefined;\r\n\r\n  public pnTypes: LabelValue<string>[];\r\n\r\n  public showPnAfterDialog: boolean;\r\n  public partsSearch: PartsSearchInput;\r\n  public selectedPnType: string;\r\n\r\n  public constructor(\r\n    public inputValidationService: InputValidationService,\r\n    private readonly loaderService: LoaderService,\r\n    private readonly operationFormService: OperationFormService,\r\n    private readonly translateService: TranslateService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogComponentsComponent');\r\n\r\n    this.keyMap = new Map<string, Observable<LabelValue<string>[]>>();\r\n    this.keyMap.set('pnType', this.operationFormService.getPnTypeMap());\r\n\r\n    this.onValidated = new EventEmitter<OperationPnElement>();\r\n\r\n    this.displayComponentTMDialog = false;\r\n    this.displayComponentPSMDialog = false;\r\n\r\n    this.isNewComponentForm = false;\r\n\r\n    this.ingredientToolPnCode = undefined;\r\n    this.partPnCode = undefined;\r\n    this.subcontractingPnCode = undefined;\r\n\r\n    this.ingredientToolType = AWPropertiesConstants.PN_TYPE_INGREDIENT_KEY;\r\n    this.partType = AWPropertiesConstants.PN_TYPE_PART_KEY;\r\n    this.subcontractingType = AWPropertiesConstants.PN_TYPE_SUBCONTRACTING_KEY;\r\n\r\n    this.loadPnTypes();\r\n\r\n    this.translateService.onLangChange.pipe(takeUntil(this.unsubscribe)).subscribe(() => {\r\n      this.loadComponentTypeList();\r\n    });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loaderService.hideLoadingBar();\r\n    this.loadComponentTypeList();\r\n    this.setIsNewComponentForm();\r\n    this.setLayout();\r\n    this.partsSearch = {};\r\n    this.isValid =\r\n      !!this.operationComponent && !!this.operationComponent.pnCode && this.operationComponent.pnCode.length > 0;\r\n    if (!!this.operationComponent && !!this.operationComponent.pnCode) {\r\n      LabelValueUtils.labelToStringValue(this.operationComponent, 'type', this.pnTypes);\r\n      switch (this.operationComponent.type) {\r\n        case AWPropertiesConstants.PN_TYPE_PART_KEY: {\r\n          this.partPnCode = this.operationComponent.pnCode;\r\n          break;\r\n        }\r\n        case AWPropertiesConstants.PN_TYPE_SUBCONTRACTING_KEY: {\r\n          this.subcontractingPnCode = this.operationComponent.pnCode;\r\n          break;\r\n        }\r\n        default: {\r\n          this.ingredientToolPnCode = this.operationComponent.pnCode;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadPnTypes(): void {\r\n    this.operationFormService.getPnTypeMap().subscribe((results) => {\r\n      this.pnTypes = results || [];\r\n    });\r\n  }\r\n\r\n  public buildOperationPnElementFromBirePnDTO(pn: BirePnDTO): void {\r\n    this.operationComponent = {\r\n      pnCode: pn.pnCode,\r\n      name: pn.articleDesignation,\r\n      type: pn.pnType,\r\n      quantity: this.operationComponent.quantity,\r\n      unit: pn.quantityUnit,\r\n      componentType: this.operationComponent.componentType\r\n    };\r\n  }\r\n\r\n  public setIsNewComponentForm(): void {\r\n    if (!!this.operationComponent && !this.operationComponent.pnCode) {\r\n      this.isNewComponentForm = true;\r\n    }\r\n  }\r\n\r\n  public setLayout(): void {\r\n    if (this.isNewComponentForm) {\r\n      this.operationComponent.componentType = this.ingredientToolType;\r\n    } else {\r\n      if (!!this.operationComponent) {\r\n        this.componentQuantity = this.operationComponent.quantity;\r\n        if (this.operationComponent.type === AWPropertiesConstants.PN_TYPE_PART_KEY) {\r\n          this.partPnCode = this.operationComponent.pnCode;\r\n        } else if (this.operationComponent.type === AWPropertiesConstants.PN_TYPE_SUBCONTRACTING_KEY) {\r\n          this.subcontractingPnCode = this.operationComponent.pnCode;\r\n        } else {\r\n          this.ingredientToolPnCode = this.operationComponent.pnCode;\r\n        }\r\n      } else {\r\n        super.throwUnboundLocalError('setLayout', 'this.operationComponent');\r\n      }\r\n    }\r\n  }\r\n\r\n  public onComponentTypeSelected($event: LabelValue<string>) {\r\n    if (!!this.operationComponent) {\r\n      switch ($event.value) {\r\n        case AWPropertiesConstants.PN_TYPE_PART_KEY: {\r\n          this.operationComponent.componentType = this.partType;\r\n          this.ingredientToolPnCode = '';\r\n          this.subcontractingPnCode = '';\r\n          this.componentQuantity = '';\r\n          this.operationComponent.type = AWPropertiesConstants.PN_TYPE_PART_KEY;\r\n          break;\r\n        }\r\n        case AWPropertiesConstants.PN_TYPE_SUBCONTRACTING_KEY: {\r\n          this.operationComponent.componentType = this.subcontractingType;\r\n          this.ingredientToolPnCode = '';\r\n          this.partPnCode = '';\r\n          this.componentQuantity = '';\r\n          this.operationComponent.type = AWPropertiesConstants.PN_TYPE_SUBCONTRACTING_KEY;\r\n          break;\r\n        }\r\n        case AWPropertiesConstants.PN_TYPE_STANDARD_TOOL_KEY: {\r\n          this.operationComponent.componentType = this.ingredientToolType;\r\n          this.partPnCode = '';\r\n          this.subcontractingPnCode = '';\r\n          this.componentQuantity = '';\r\n          this.operationComponent.type = AWPropertiesConstants.PN_TYPE_STANDARD_TOOL_KEY;\r\n          break;\r\n        }\r\n        case AWPropertiesConstants.PN_TYPE_SPECIFIC_TOOL_KEY: {\r\n          this.operationComponent.componentType = this.ingredientToolType;\r\n          this.partPnCode = '';\r\n          this.subcontractingPnCode = '';\r\n          this.componentQuantity = '';\r\n          this.operationComponent.type = AWPropertiesConstants.PN_TYPE_SPECIFIC_TOOL_KEY;\r\n          break;\r\n        }\r\n        default: {\r\n          this.operationComponent.componentType = this.ingredientToolType;\r\n          this.partPnCode = '';\r\n          this.subcontractingPnCode = '';\r\n          this.componentQuantity = '';\r\n          this.operationComponent.type = undefined;\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('onComponentTypeSelected', 'this.operationComponent');\r\n    }\r\n  }\r\n\r\n  public loadComponentTypeList(): void {\r\n    if (this.translateService.currentLang === LangConstants.ENGLISH_CODE) {\r\n      this.componentTypeList = [\r\n        { label: 'Ingredient/Tool', value: AWPropertiesConstants.PN_TYPE_INGREDIENT_KEY },\r\n        { label: 'Part', value: AWPropertiesConstants.PN_TYPE_PART_KEY },\r\n        { label: 'Subcontracting', value: AWPropertiesConstants.PN_TYPE_SUBCONTRACTING_KEY }\r\n      ];\r\n    } else if (this.translateService.currentLang === LangConstants.FRENCH_CODE) {\r\n      this.componentTypeList = [\r\n        { label: 'Ingrédient/Outil', value: AWPropertiesConstants.PN_TYPE_INGREDIENT_KEY },\r\n        { label: 'Article', value: AWPropertiesConstants.PN_TYPE_PART_KEY },\r\n        { label: 'Sous-traitance', value: AWPropertiesConstants.PN_TYPE_SUBCONTRACTING_KEY }\r\n      ];\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    if (!!this.operationComponent) {\r\n      this.onValidated.emit(this.operationComponent);\r\n      this.display = false;\r\n    } else {\r\n      super.throwUnboundLocalError('validate', 'this.operationComponent');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    let pnTypesList: LabelValue<string>[];\r\n    this.operationFormService.getPnTypeMap().subscribe((results) => {\r\n      pnTypesList = results;\r\n      if (!!this.operationComponent && !!this.operationComponent.type) {\r\n        this.operationComponent.type = pnTypesList.filter(\r\n          (pnType) => !!this.operationComponent && pnType.value === this.operationComponent.type\r\n        )[0].label;\r\n      }\r\n    });\r\n    this.display = false;\r\n  }\r\n\r\n  public searchIngredientTool(): void {\r\n    this.partsSearch = {\r\n      type: AWPropertiesConstants.PN_TYPE_INGREDIENT_KEY\r\n    };\r\n    this.selectedPnType = this.partsSearch.type as string;\r\n    this.showPnAfterDialog = true;\r\n  }\r\n\r\n  public searchPart(): void {\r\n    this.partsSearch = {\r\n      type: AWPropertiesConstants.PN_TYPE_PART_KEY\r\n    };\r\n    this.selectedPnType = this.partsSearch.type as string;\r\n    this.showPnAfterDialog = true;\r\n  }\r\n\r\n  public searchSubcontracting(): void {\r\n    this.partsSearch = {\r\n      type: AWPropertiesConstants.PN_TYPE_SUBCONTRACTING_KEY\r\n    };\r\n    this.selectedPnType = this.partsSearch.type as string;\r\n    this.showPnAfterDialog = true;\r\n  }\r\n\r\n  public disableValidate(): boolean {\r\n    let response = true;\r\n    switch (this.operationComponent.componentType) {\r\n      case this.ingredientToolType:\r\n        response = !!this.ingredientToolPnCode ? false : true;\r\n        break;\r\n      case this.partType:\r\n        response = !!this.partPnCode ? false : true;\r\n        break;\r\n      case this.subcontractingType:\r\n        response = !!this.subcontractingPnCode ? false : true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Component Dialog\r\n   *************************************************************************/\r\n\r\n  public onSelectedComponent(data: PartsAssociatedTableDTO): void {\r\n    const pn = data.birePnDTO;\r\n    if (!!this.operationComponent && !!pn) {\r\n      this.buildOperationPnElementFromBirePnDTO(pn);\r\n      this.isValid =\r\n        !!this.operationComponent && !!this.operationComponent.pnCode && this.operationComponent.pnCode.length > 0;\r\n      if (!!this.operationComponent && this.operationComponent.type === AWPropertiesConstants.PN_TYPE_PART_KEY) {\r\n        this.ingredientToolType = '';\r\n        this.partType = this.operationComponent.type;\r\n        this.subcontractingType = '';\r\n        this.partPnCode = this.operationComponent.pnCode;\r\n      } else if (\r\n        !!this.operationComponent &&\r\n        this.operationComponent.type === AWPropertiesConstants.PN_TYPE_SUBCONTRACTING_KEY\r\n      ) {\r\n        this.ingredientToolType = '';\r\n        this.partType = '';\r\n        this.subcontractingType = this.operationComponent.type;\r\n        this.subcontractingPnCode = this.operationComponent.pnCode;\r\n      } else {\r\n        this.ingredientToolType = AWPropertiesConstants.PN_TYPE_INGREDIENT_KEY;\r\n        this.operationComponent.componentType = this.ingredientToolType;\r\n        this.partType = '';\r\n        this.subcontractingType = '';\r\n        this.operationComponent.type = pn.pnType;\r\n        this.ingredientToolPnCode = !!this.operationComponent ? this.operationComponent.pnCode : undefined;\r\n      }\r\n    } else {\r\n      super.throwUnboundLocalError('onSelectedComponent', 'pn');\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\" *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\">\\r\\n        - {{ subtitle }}\\r\\n      </div>\\r\\n    </div>\\r\\n    <div\\r\\n      class=\\\"object-status\\\"\\r\\n      [ngClass]=\\\"{ disabled: isCreateOpenMode }\\\"\\r\\n      *ngIf=\\\"operation.statusState\\\"\\r\\n      (click)=\\\"showStatus()\\\"\\r\\n    >\\r\\n      {{ operation.statusState | formatSelectOption: statusList }}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"edit()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancelOperation()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveOperation()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item id=\\\"status\\\" (click)=\\\"openStatusUpdatesPopup()\\\">{{ \\\"updates\\\" | translate }}</button>\\r\\n      <button\\r\\n        mat-menu-item\\r\\n        id=\\\"refresh\\\"\\r\\n        *ngIf=\\\"isReadOpenMode && componentData && componentData.objectId\\\"\\r\\n        type=\\\"button\\\"\\r\\n        (click)=\\\"reloadOperation()\\\"\\r\\n      >\\r\\n        {{ \\\"global.refresh\\\" | translate }}\\r\\n      </button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div\\r\\n              #mainInformationAnchor\\r\\n              class=\\\"grid-cell--equally\\\"\\r\\n              (click)=\\\"selectPageTocEntry(form.MAIN_INFORMATION_ANCHOR_ID)\\\"\\r\\n            >\\r\\n              <div\\r\\n                class=\\\"grid-cell grid-cell--container\\\"\\r\\n                [ngClass]=\\\"{ active: isPageTocEntrySelected(form.MAIN_INFORMATION_ANCHOR_ID) }\\\"\\r\\n              >\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ \\\"page.mainData\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"grid-row\\\">\\r\\n                      <div class=\\\"form-group flex--2 required\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".opeCode\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeCode\\\"\\r\\n                            [disabled]=\\\"!isCreateOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--2 required\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".opeVersion\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeVersion\\\"\\r\\n                            [disabled]=\\\"!isCreateOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--2 required\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".rangeCode\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: !isCreateOpenMode }\\\">\\r\\n                          <div class=\\\"form-control-data\\\" (click)=\\\"isCreateOpenMode && searchRangeCode()\\\">\\r\\n                            {{ operation.rangeCode }}\\r\\n                          </div>\\r\\n\\r\\n                          <div *ngIf=\\\"isCreateOpenMode && operation.rangeCode !== undefined\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                            <i\\r\\n                              class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              (click)=\\\"operation.rangeCode = undefined\\\"\\r\\n                            ></i>\\r\\n                          </div>\\r\\n                          <div class=\\\"btn-search-wrapper\\\">\\r\\n                            <i\\r\\n                              class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              (click)=\\\"isCreateOpenMode && searchRangeCode()\\\"\\r\\n                            ></i>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"grid-row\\\">\\r\\n                      <div class=\\\"form-group flex--1\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".ataChapter\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeChapter\\\"\\r\\n                            maxlength=\\\"2\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--1\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".ataSection\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeSection\\\"\\r\\n                            maxlength=\\\"2\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--1\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".ataSubject\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeSubject\\\"\\r\\n                            maxlength=\\\"2\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group flex--1\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".ataSheet\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeSheet\\\"\\r\\n                            maxlength=\\\"5\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--2\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".ataMarks\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeMarks\\\"\\r\\n                            maxlength=\\\"5\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"grid-row\\\">\\r\\n                      <div class=\\\"form-group flex--3\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".opeDesignation\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <textarea\\r\\n                            class=\\\"aw-textarea\\\"\\r\\n                            [rows]=\\\"3\\\"\\r\\n                            pInputTextarea\\r\\n                            [(ngModel)]=\\\"operation.opeDesignation\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></textarea>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--3\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".opeDescription\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <textarea\\r\\n                            class=\\\"aw-textarea\\\"\\r\\n                            [rows]=\\\"3\\\"\\r\\n                            pInputTextarea\\r\\n                            [(ngModel)]=\\\"operation.opeDescription\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></textarea>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell--equally\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ \\\"page.additionalData\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"grid-row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".technicalLevel\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"technicalLevelsToDisplayList\\\"\\r\\n                            [(ngModel)]=\\\"operation.technicalLevel\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            (onChange)=\\\"onTilSelected($event)\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".opeWorkcenter\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"workcentersToDisplayList\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeWorkcenter\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            maxlength=\\\"50\\\"\\r\\n                          >\\r\\n                          </p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".opeSequenceNumber\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            #sequenceNumber=\\\"ngModel\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            pKeyFilter=\\\"int\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeSequenceNumber\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n                            [pValidateOnly]=\\\"true\\\"\\r\\n                          />\\r\\n                          <!-- <p-message\\r\\n                            *ngIf=\\\"sequenceNumber.invalid && (sequenceNumber.dirty || sequenceNumber.touched)\\\"\\r\\n                            severity=\\\"error\\\"\\r\\n                            [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n                          ></p-message> -->\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"grid-row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".opeQualification\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"qualificationsToDisplayList\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeQualification\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            (onChange)=\\\"onChangeQualification($event)\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          >\\r\\n                          </p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".opeDurationTime\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            #opeDurationTime=\\\"ngModel\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [pKeyFilter]=\\\"inputValidationService.validatorOfPositiveNumber()\\\"\\r\\n                            [pValidateOnly]=\\\"true\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeDurationTime\\\"\\r\\n                            (change)=\\\"calculateCost()\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                          <p-message\\r\\n                            *ngIf=\\\"opeDurationTime.invalid && (opeDurationTime.dirty || opeDurationTime.touched)\\\"\\r\\n                            severity=\\\"error\\\"\\r\\n                            [text]=\\\"inputValidationService.formatOfPositiveNumber()\\\"\\r\\n                          ></p-message>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".opeManHour\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            #opeManHour=\\\"ngModel\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [pKeyFilter]=\\\"inputValidationService.validatorOfPositiveNumber()\\\"\\r\\n                            [pValidateOnly]=\\\"true\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeManHour\\\"\\r\\n                            (change)=\\\"calculateCost()\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                          <p-message\\r\\n                            *ngIf=\\\"opeManHour.invalid && (opeManHour.dirty || opeManHour.touched)\\\"\\r\\n                            severity=\\\"error\\\"\\r\\n                            [text]=\\\"inputValidationService.formatOfPositiveNumber()\\\"\\r\\n                          ></p-message>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"isCostSettingEnabled\\\" class=\\\"grid-row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".opeCost\\\" | translate }}\\r\\n                          <span *ngIf=\\\"qualifRateCurrency\\\">({{ qualifRateCurrency }})</span>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            #opeCost=\\\"ngModel\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [pKeyFilter]=\\\"inputValidationService.validatorOfPositiveNumber()\\\"\\r\\n                            [pValidateOnly]=\\\"true\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"operation.opeCost\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode || hasHourlyRateValue || !isCreateOpenMode\\\"\\r\\n                          />\\r\\n                          <p-message\\r\\n                            *ngIf=\\\"opeCost.invalid && (opeCost.dirty || opeCost.touched)\\\"\\r\\n                            severity=\\\"error\\\"\\r\\n                            [text]=\\\"inputValidationService.formatOfPositiveNumber()\\\"\\r\\n                          ></p-message>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--3\\\">\\r\\n                        <span [ngClass]=\\\"{ 'display--none': !hasHourlyRateValue }\\\">\\r\\n                          {{ componentData.componentId + \\\".hourlyRate\\\" | translate }} = {{ qualifAverageHourRate }}\\r\\n                          {{ qualifRateCurrency }}\\r\\n                        </span>\\r\\n\\r\\n                        <span [ngClass]=\\\"{ 'display--none': !hasHourlyRateValue }\\\">\\r\\n                          {{ componentData.componentId + \\\".opeCost\\\" | translate }} = [\\r\\n                          {{ componentData.componentId + \\\".opeHourlyRateQualification\\\" | translate }} ] x [\\r\\n                          {{ componentData.componentId + \\\".opeManHour\\\" | translate }} ] x [\\r\\n                          {{ componentData.componentId + \\\".durationTime\\\" | translate }} ] +\\r\\n                          {{ componentData.componentId + \\\".opeSubcontractingCost\\\" | translate }}\\r\\n                        </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div\\r\\n              #mainInformationAnchor\\r\\n              class=\\\"grid-cell--12\\\"\\r\\n              (click)=\\\"selectPageTocEntry(form.MAIN_INFORMATION_ANCHOR_ID)\\\"\\r\\n            >\\r\\n              <div\\r\\n                class=\\\"grid-cell grid-cell--container\\\"\\r\\n                [ngClass]=\\\"{ active: isPageTocEntrySelected(form.MAIN_INFORMATION_ANCHOR_ID) }\\\"\\r\\n              >\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".components\\\" | translate }} ({{\\r\\n                        componentsTableDataSource ? componentsTableDataSource.dataCount : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <a-table [dataSource]=\\\"componentsTableDataSource\\\">\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && componentsTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteComponents()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && componentsTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editComponents()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && componentsTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openComponents()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && !componentsTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"addComponent()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pnCode\\\" let-rowData=\\\"rowData\\\">\\r\\n                      <a (click)=\\\"redirect(rowData)\\\"> {{ rowData.pnCode }} </a>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"dynamicAttributes.length > 0\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"global.attributes\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div #mainDataAnchor class=\\\"grid-cell--12\\\" (click)=\\\"selectPageTocEntry(form.ADD_INFORMATION_ANCHOR_ID)\\\">\\r\\n              <div\\r\\n                class=\\\"grid-cell grid-cell--container\\\"\\r\\n                [ngClass]=\\\"{ active: isPageTocEntrySelected(form.ADD_INFORMATION_ANCHOR_ID) }\\\"\\r\\n              >\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <aw-dynamic-attributes\\r\\n                    [attributes]=\\\"dynamicAttributes\\\"\\r\\n                    [isReadOpenMode]=\\\"isReadOpenMode\\\"\\r\\n                  ></aw-dynamic-attributes>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"global.documents\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div #documentTableAnchor class=\\\"grid-cell--12\\\" (click)=\\\"selectPageTocEntry(form.DOCUMENTS_ANCHOR_ID)\\\">\\r\\n              <!-- Documents table -->\\r\\n\\r\\n              <div\\r\\n                class=\\\"grid-cell grid-cell--container\\\"\\r\\n                [ngClass]=\\\"{ active: isPageTocEntrySelected(form.DOCUMENTS_ANCHOR_ID) }\\\"\\r\\n              >\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ \\\"global.documents\\\" | translate }} ({{\\r\\n                        documentsTableDataSource ? documentsTableDataSource.dataCount : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <a-table [dataSource]=\\\"documentsTableDataSource\\\">\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && documentsTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteDocuments()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && documentsTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editDocument()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"documentsTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openDocument()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && !documentsTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"addDocument()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"docName\\\" let-rowData=\\\"rowData\\\">\\r\\n                      <a (click)=\\\"downloadFile(rowData)\\\">{{ rowData.docName }}</a>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-status-update-history\\r\\n    *ngIf=\\\"showStatusUpdatesPopup\\\"\\r\\n    [object]=\\\"operation\\\"\\r\\n    [data]=\\\"tableStatusUpdatesData\\\"\\r\\n    [deleteApi]=\\\"deleteApi\\\"\\r\\n    [(display)]=\\\"showStatusUpdatesPopup\\\"\\r\\n    [keyMap]=\\\"updatesKeyMap\\\"\\r\\n    [isStatusEditable]=\\\"false\\\"\\r\\n    (onUpdated)=\\\"updateObjectStatusFromStatusUpdatesHistory($event)\\\"\\r\\n  ></aw-status-update-history>\\r\\n\\r\\n  <aw-dialog-table\\r\\n    *ngIf=\\\"displayRangeCodeDialog\\\"\\r\\n    [data]=\\\"rangeCodeTableData\\\"\\r\\n    [(display)]=\\\"displayRangeCodeDialog\\\"\\r\\n    (onSelected)=\\\"onSelectedRangeCode($event)\\\"\\r\\n  ></aw-dialog-table>\\r\\n\\r\\n  <aw-dialog-component\\r\\n    *ngIf=\\\"displayComponentDialog\\\"\\r\\n    [operationComponent]=\\\"currentComponent\\\"\\r\\n    [(display)]=\\\"displayComponentDialog\\\"\\r\\n    [isReadOnlyComponentDialog]=\\\"isReadOnlyComponentDialog\\\"\\r\\n    (onValidated)=\\\"onValidateComponent($event)\\\"\\r\\n  ></aw-dialog-component>\\r\\n\\r\\n  <aw-dialog-bire-document\\r\\n    *ngIf=\\\"showAddDocumentDialog\\\"\\r\\n    [document]=\\\"currentDocument\\\"\\r\\n    [(display)]=\\\"showAddDocumentDialog\\\"\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyDocumentDialog\\\"\\r\\n    (onValidated)=\\\"onAddDocument($event)\\\"\\r\\n  ></aw-dialog-bire-document>\\r\\n\\r\\n  <aw-operation-import-popup\\r\\n    *ngIf=\\\"displayDocumentDialog\\\"\\r\\n    [document]=\\\"currentDocument\\\"\\r\\n    [(display)]=\\\"displayDocumentDialog\\\"\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyDocumentDialog\\\"\\r\\n    (onValidated)=\\\"addNewDocument($event)\\\"\\r\\n  ></aw-operation-import-popup>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\nimport { UpdateHistoricApi } from '../../../../shared/api/update-historic.api';\r\nimport { PageTocService } from '../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { PageTocEntry } from '../../../../shared/components/component-sidebar/types/page-toc-entry.interface';\r\nimport { DialogTableData } from '../../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { DynamicAttributesService } from '../../../../shared/components/dynamic-attributes/dynamic-attributes.service';\r\nimport { DynamicAttributes } from '../../../../shared/components/dynamic-attributes/types/dynamic-attributes.interface';\r\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { TableColumnFilterMode } from '../../../../shared/enums/table-column-filter-mode.enum';\r\nimport { TableSelectionMode } from '../../../../shared/enums/table-selection-mode.enum';\r\nimport { FormatSelectOptionPipe } from '../../../../shared/pipes/format-select-option.pipe';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../../shared/services/date.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { InputValidationService } from '../../../../shared/services/input-validation.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { UpdateHistoricService } from '../../../../shared/services/update-historic.service';\r\nimport { CalculateCostOfBireOperationInput } from '../../../../shared/types/api-input-types/task-management/calculate-cost-of-bire-operation-input.interface';\r\nimport { SaveBireOperationInput } from '../../../../shared/types/api-input-types/task-management/save-bire-operation-input.interface';\r\nimport { BidtWorkCenterDTO } from '../../../../shared/types/api-types/bidt-work-center-dto.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\nimport { BireDocumentDTO } from '../../../../shared/types/api-types/bire-document-dto.interface';\r\nimport { BireOperationAttributeDTO } from '../../../../shared/types/api-types/bire-operation-attribute-dto.interface';\r\nimport { BireOperationDTOId } from '../../../../shared/types/api-types/bire-operation-dto-id.interface';\r\nimport { BireOperationDTO } from '../../../../shared/types/api-types/bire-operation-dto.interface';\r\nimport { BireOperationPnDTO } from '../../../../shared/types/api-types/bire-operation-pn-dto.interface';\r\nimport { BirePnDTOId } from '../../../../shared/types/api-types/bire-pn-dto-id.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { BireQualificationDTO } from '../../../../shared/types/api-types/bire-qualification-dto.interface';\r\nimport { BireRangeDTO } from '../../../../shared/types/api-types/bire-range-dto.interface';\r\nimport { BireTilDTO } from '../../../../shared/types/api-types/bire-til-dto.interface';\r\nimport { HBireOperationDTO } from '../../../../shared/types/api-types/h-bire-operation-dto.interface';\r\nimport { ObjectStatusDTO } from '../../../../shared/types/api-types/object-status-dto.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { PopupEntry } from '../../../../shared/types/popup-entry.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { DTOUtils } from '../../../../shared/utils/dto-utils';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\nimport { SettingsUtils } from '../../../../shared/utils/settings-utils';\r\nimport { ObjectStatusComponent } from '../../../object-status/object-status.component';\r\nimport { OverlayService } from '../../../overlay/overlay.service';\r\nimport { OperationPnElement } from '../types/operation-pn-element.interface';\r\nimport { OperationTabData } from '../types/operation-tab-data.interface';\r\n\r\nimport { OperationFormService } from './operation-form.service';\r\n\r\ninterface OperationComponentRow {\r\n  pnCode: string;\r\n  name: string;\r\n  type: string;\r\n  quantity: string;\r\n  unit: string;\r\n  componentType: string;\r\n}\r\n\r\ninterface DocumentRow {\r\n  docName?: string;\r\n  docSource?: string;\r\n  docExtension?: string;\r\n  docSize?: string;\r\n  docPublicationDate?: string;\r\n  docDescription?: string;\r\n  _obj?: BireDocumentDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-operation-form',\r\n  templateUrl: './operation-form.component.html'\r\n})\r\nexport class OperationFormComponent extends FormPageComponent<OperationTabData> implements OnInit {\r\n  public static readonly MAIN_INFORMATION_ANCHOR_ID: string = 'mainInformationAnchor';\r\n  public static readonly ADD_INFORMATION_ANCHOR_ID: string = 'mainDataAnchor';\r\n  public static readonly COMPONENTS_ANCHOR_ID: string = 'componentTableAnchor';\r\n  public static readonly DOCUMENTS_ANCHOR_ID: string = 'documentTableAnchor';\r\n\r\n  public readonly form: typeof OperationFormComponent;\r\n\r\n  @Input()\r\n  public componentData: OperationTabData;\r\n\r\n  public currentTabId: string;\r\n\r\n  public newOperation: BireOperationDTO;\r\n  public operation: BireOperationDTO;\r\n  public operations: BireOperationDTO[];\r\n  public operationId: BireOperationDTOId;\r\n  public selectedOperations: BireOperationDTO[];\r\n  public rangeCodeTableData: DialogTableData<BireRangeDTO>;\r\n  public displayRangeCodeDialog: boolean;\r\n  public keyMap: Map<string, Observable<LabelValue<string>[]>>;\r\n  public subtitle: string;\r\n\r\n  public pnTypes: LabelValue<string>[];\r\n  public statusList: LabelValue<string>[];\r\n\r\n  // Table of content\r\n\r\n  @ViewChild(OperationFormComponent.MAIN_INFORMATION_ANCHOR_ID)\r\n  public mainInformationElRef: ElementRef;\r\n\r\n  @ViewChild(OperationFormComponent.ADD_INFORMATION_ANCHOR_ID)\r\n  public addInformationElRef: ElementRef;\r\n\r\n  @ViewChild(OperationFormComponent.COMPONENTS_ANCHOR_ID)\r\n  public componentsElRef: ElementRef;\r\n\r\n  @ViewChild(OperationFormComponent.DOCUMENTS_ANCHOR_ID)\r\n  public documentsElRef: ElementRef;\r\n  public toc: PageTocEntry[];\r\n\r\n  // Status Popup\r\n\r\n  public showStatusUpdatesPopup: boolean;\r\n  public tableStatusUpdatesData: DialogTableData<HBireOperationDTO>;\r\n  public deleteApi: string;\r\n  public updatesKeyMap: Map<string, Observable<LabelValue<string>[]>>;\r\n\r\n  // Operation Fields Tab\r\n\r\n  public readonly tabOperationFieldsId: string;\r\n  public selectedOpeFields: BireOperationDTO[];\r\n  public opeFieldsTable: BireOperationDTO[];\r\n  public til: BireTilDTO | null;\r\n  public technicalLevelsToDisplayList: LabelValue<number>[];\r\n  public selectedTechnicalLevel: string;\r\n  public qualificationToDisplay: string;\r\n  public qualificationsToDisplayList: LabelValue<string>[];\r\n  public workcentersToDisplayList: LabelValue<string>[];\r\n  public qualif: BireQualificationDTO | undefined;\r\n  public workcenter: BidtWorkCenterDTO | undefined;\r\n  public qualifications: BireQualificationDTO[];\r\n  public hasHourlyRateValue: boolean;\r\n  public qualifAverageHourRate: string | undefined;\r\n  public qualifRateCurrency: string | undefined;\r\n  public cost: number | undefined;\r\n  public isCostSettingEnabled: boolean;\r\n\r\n  // Components Tab\r\n\r\n  public readonly tabComponentsId: string;\r\n  public component: BireOperationPnDTO;\r\n  public components: BireOperationPnDTO[];\r\n  public newComponent: BireOperationPnDTO;\r\n  public componentsTableDataSource: TableDataSource<OperationPnElement>;\r\n  public currentComponent: OperationPnElement;\r\n  public currentComponentIndex: number | undefined;\r\n  public isReadOnlyComponentDialog: boolean;\r\n  public displayComponentDialog: boolean;\r\n  public componentsFormTitle: string;\r\n  public addedComponentsList: BireOperationPnDTO[];\r\n  public removedComponentsList: BireOperationPnDTO[];\r\n  public updatedComponentsList: BireOperationPnDTO[];\r\n  public operationComponent: OperationPnElement | undefined;\r\n\r\n  //  Documents\r\n\r\n  public readonly tabDocumentsId: string;\r\n  public documentsTableDataSource: TableDataSource<DocumentRow>;\r\n  public currentDocument: DocumentRow | undefined;\r\n  public currentDocumentIndex: number | undefined;\r\n  public documentsAdded: DocumentRow[];\r\n  public documentsRemoved: DocumentRow[];\r\n  public isReadOnlyDocumentDialog: boolean;\r\n  public displayDocumentDialog: boolean;\r\n  public showAddDocumentDialog: boolean;\r\n\r\n  // Attributes\r\n\r\n  public tabAttributesId: string;\r\n  public dynamicAttributes: DynamicAttributes[];\r\n  public bireOperationAttributes: BireOperationAttributeDTO[];\r\n\r\n  public opeAttributesTable: BireAttributeDTO[];\r\n  public opeAttributesTableCols: TableColumn[];\r\n  public filteredRowsNb: number;\r\n  public delRow: number;\r\n  public operationTableFilteredRowsNb: number;\r\n  public displayDialogOpeFields: boolean;\r\n\r\n  public uploadedFiles = {};\r\n\r\n  public dataCompo: PopupEntry<BireOperationPnDTO>;\r\n  public showSaveSpinner: boolean;\r\n\r\n  public constructor(\r\n    messageService: MessageService,\r\n    tabService: TabService,\r\n    loaderService: LoaderService,\r\n    favoriteService: FavoriteService,\r\n    pageTocService: PageTocService,\r\n    serializationService: SerializationService,\r\n    public inputValidationService: InputValidationService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly updateHistoricService: UpdateHistoricService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly updateHistoricApi: UpdateHistoricApi,\r\n    private readonly dynamicAttributesService: DynamicAttributesService,\r\n    public translateService: TranslateService,\r\n    private readonly operationFormService: OperationFormService,\r\n    private readonly dateService: DateService,\r\n    private readonly _overlayService: OverlayService,\r\n    private readonly _formatSelectOption: FormatSelectOptionPipe\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Read,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n\r\n    this.form = OperationFormComponent;\r\n    this.keyMap = new Map<string, Observable<LabelValue<string>[]>>();\r\n    this.keyMap.set('pnType', this.operationFormService.getPnTypeMap());\r\n\r\n    this.tabOperationFieldsId = 'operation-fields';\r\n\r\n    this.tabComponentsId = 'components';\r\n    this.initComponentsTableDataSource();\r\n    this.initDocumentsTableDataSource();\r\n    this.tabDocumentsId = 'documents';\r\n\r\n    this.tabAttributesId = 'attributes';\r\n\r\n    super.registerPageTocEntryObservable();\r\n\r\n    this.init();\r\n\r\n    this.loadPnTypes();\r\n    this.initCostSettingDisplay();\r\n    this.loadTechnicalLevelsList();\r\n    this.loadQualificationsList();\r\n    this.loadWorkCenterList();\r\n    this.loadOperationStatus();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'OperationFormComponent';\r\n  }\r\n\r\n  private initComponentsTableDataSource(): void {\r\n    this.componentsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'pnCode',\r\n          translateKey: this.getTranslateKey('pnCode')\r\n        },\r\n        {\r\n          field: 'name',\r\n          translateKey: this.getTranslateKey('name')\r\n        },\r\n        {\r\n          field: 'type',\r\n          translateKey: this.getTranslateKey('type')\r\n        },\r\n        {\r\n          field: 'quantity',\r\n          translateKey: this.getTranslateKey('quantity')\r\n        },\r\n        {\r\n          field: 'unit',\r\n          translateKey: this.getTranslateKey('unit')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initDocumentsTableDataSource(): void {\r\n    this.documentsTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'docName',\r\n          translateKey: this.getTranslateKey('docName')\r\n        },\r\n        {\r\n          field: 'docSource',\r\n          translateKey: this.getTranslateKey('docSource')\r\n        },\r\n        {\r\n          field: 'docExtension',\r\n          translateKey: this.getTranslateKey('docExtension')\r\n        },\r\n        {\r\n          field: 'docSize',\r\n          translateKey: this.getTranslateKey('docSize')\r\n        },\r\n        {\r\n          field: 'docPublicationDate',\r\n          translateKey: this.getTranslateKey('docPublicationDate')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n  private loadPnTypes(): void {\r\n    this.operationFormService.getPnTypeMap().subscribe((results) => {\r\n      this.pnTypes = results || [];\r\n    });\r\n  }\r\n\r\n  private init(): void {\r\n    this.currentTabId = this.tabOperationFieldsId;\r\n\r\n    this.operation = {};\r\n    this.operations = [];\r\n\r\n    this.pnTypes = [];\r\n\r\n    // Status popup\r\n\r\n    this.showStatusUpdatesPopup = false;\r\n    this.deleteApi = this.updateHistoricApi.removeBireOperationHistory;\r\n    this.updatesKeyMap = new Map<string, Observable<LabelValue<string>[]>>();\r\n\r\n    // Operation Fields Tab\r\n\r\n    this.opeFieldsTable = [];\r\n    this.selectedOpeFields = [];\r\n    this.technicalLevelsToDisplayList = [];\r\n    this.qualif = undefined;\r\n    this.workcenter = undefined;\r\n    this.qualificationsToDisplayList = [];\r\n    this.workcentersToDisplayList = [];\r\n    this.hasHourlyRateValue = false;\r\n    this.qualifAverageHourRate = '';\r\n    this.qualifRateCurrency = '';\r\n    this.cost = undefined;\r\n\r\n    // Components Tab\r\n\r\n    this.components = [];\r\n    this.addedComponentsList = [];\r\n    this.removedComponentsList = [];\r\n    this.updatedComponentsList = [];\r\n    this.component = {};\r\n    this.operationComponent = undefined;\r\n    this.displayComponentDialog = false;\r\n    this.currentComponent = {};\r\n    this.currentComponentIndex = -1;\r\n    this.isReadOnlyComponentDialog = true;\r\n\r\n    // Documents Tab\r\n\r\n    this.documentsAdded = [];\r\n    this.documentsRemoved = [];\r\n    this.currentDocument = undefined;\r\n    this.currentDocumentIndex = undefined;\r\n    this.isReadOnlyDocumentDialog = true;\r\n    this.displayDocumentDialog = false;\r\n    this.showAddDocumentDialog = false;\r\n\r\n    // Attributes Tab\r\n    this.dynamicAttributes = [];\r\n\r\n    this.selectedOperations = [];\r\n    this.filteredRowsNb = 0;\r\n    this.delRow = 0;\r\n    this.operationTableFilteredRowsNb = 0;\r\n    this.currentTabId = this.tabOperationFieldsId;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    if (this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n\r\n      const context = !!this.componentData.objectId\r\n        ? `${this.serializationService.deserialize(this.componentData.objectId).opeCode}|${\r\n            this.serializationService.deserialize(this.componentData.objectId).opeVersion\r\n          }|${this.serializationService.deserialize(this.componentData.objectId).rangeCode}`\r\n        : 'tab.createMode';\r\n\r\n      this.subtitle = context;\r\n\r\n      this.displayComponentContext(context, this.isCreateOpenMode);\r\n\r\n      this.loadOperation();\r\n      this.setTableOfContent();\r\n    }\r\n  }\r\n\r\n  public openStatusUpdatesPopup() {\r\n    this.showStatusUpdatesPopup = true;\r\n    const columns: TableColumn[] = [\r\n      { field: 'timestamp', width: '200px', filterMode: TableColumnFilterMode.Input, isDate: true },\r\n      { field: 'statusUser', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'action', width: '200px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'statusState', width: '250px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeSequenceNumber', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeDesignation', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeDescription', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeChapter', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeSection', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeSubject', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeSheet', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeMark', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeCost', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeDurationTime', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeWorkcenter', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeManHour', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'opeQualification', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'technicalLevel', alignment: 'left', width: '6.25rem', filterMode: TableColumnFilterMode.Input }\r\n    ];\r\n    this.updatesKeyMap.set('statusState', this.propertiesService.getValue('getFuncObjectStatusMap'));\r\n    this.tableStatusUpdatesData = {\r\n      componentId: 'OperationFormComponent.historicPopup',\r\n      tableCols: columns,\r\n      tableRows: this.updateHistoricService.findBireOperationHistoric(this.operationId),\r\n      dataKey: undefined,\r\n      selectionMode: TableSelectionMode.Multiple,\r\n      globalFilter: false\r\n    };\r\n  }\r\n\r\n  private setTableOfContent(): void {\r\n    const mainInformationKey = this.getTranslateKey('mainData');\r\n    const addInformationKey = this.getTranslateKey('addInformation');\r\n    const componentsKey = this.getTranslateKey('components');\r\n    const documentsKey = this.getTranslateKey('documents');\r\n    this.translateService\r\n      .get([mainInformationKey, addInformationKey, componentsKey, documentsKey])\r\n      .subscribe((results: string[]) => {\r\n        const mainInformationLabel = !!results ? results[mainInformationKey] : 'Main Information';\r\n        const addInformationLabel = !!results ? results[addInformationKey] : 'Additional Information';\r\n        const componentsLabel = !!results ? results[componentsKey] : 'Components';\r\n        const documentsLabel = !!results ? results[documentsKey] : 'Documents';\r\n\r\n        this.toc = [\r\n          {\r\n            id: 'mainInformationAnchor',\r\n            anchor: this.mainInformationElRef,\r\n            label: mainInformationLabel\r\n          },\r\n          {\r\n            id: 'mainDataAnchor',\r\n            anchor: this.addInformationElRef,\r\n            label: addInformationLabel\r\n          },\r\n          {\r\n            id: 'componentTableAnchor',\r\n            anchor: this.componentsElRef,\r\n            label: componentsLabel\r\n          },\r\n          {\r\n            id: 'documentTableAnchor',\r\n            anchor: this.documentsElRef,\r\n            label: documentsLabel\r\n          }\r\n        ];\r\n        super.selectPageTocEntry(OperationFormComponent.MAIN_INFORMATION_ANCHOR_ID);\r\n      });\r\n  }\r\n\r\n  public updateObjectStatusFromStatusUpdatesHistory(event): void {\r\n    const input: ObjectStatusDTO = {\r\n      statusDate: event.statusDate,\r\n      statusState: event.statusState,\r\n      statusUser: event.statusUser\r\n    };\r\n    // tslint:disable-next-line:no-empty\r\n    this.operationFormService.updateStaus(input).subscribe(() => {});\r\n  }\r\n\r\n  public edit() {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public loadOperation(): void {\r\n    // Load dynamic attributes\r\n    const observables: Observable<BireAttributeDTO[]>[] = [\r\n      this.getDynamicAttributesObservable(AWPropertiesConstants.MCH_ATTRIBUTE_CATEGORY_ALL_KEY),\r\n      this.getDynamicAttributesObservable(AWPropertiesConstants.MCH_ATTRIBUTE_CATEGORY_OPERATION_KEY)\r\n    ];\r\n\r\n    forkJoin(observables).subscribe((results: BireAttributeDTO[][]) => {\r\n      if (results) {\r\n        const flattenResults: BireAttributeDTO[] = results.reduce((acc, val) => acc.concat(val), []);\r\n        this.dynamicAttributes = this.dynamicAttributesService.from(flattenResults);\r\n\r\n        if (!!this.componentData.objectId && !this.isCreateOpenMode) {\r\n          this.operationId = {\r\n            opeCode: this.serializationService.deserialize(this.componentData.objectId).opeCode,\r\n            opeVersion: this.serializationService.deserialize(this.componentData.objectId).opeVersion,\r\n            rangeCode: this.serializationService.deserialize(this.componentData.objectId).rangeCode\r\n          };\r\n\r\n          this.operationFormService.findBireOperation(this.operationId).subscribe(\r\n            (result) => {\r\n              this.operation = result;\r\n              if (this.operation && this.operation.opeCode && this.operation.opeVersion && this.operation.rangeCode) {\r\n                this.loadComponents();\r\n                this.loadDocuments(this.operationId);\r\n                this.loadAttributes();\r\n\r\n                this.setHasHourlyRateValue();\r\n                if (this.operation.opeQualification) {\r\n                  this.qualif = this.qualifications.find(\r\n                    (qualification) => qualification.qualificationCode === this.operation.opeQualification\r\n                  );\r\n                  this.setQualifRateCurrencyLabelByValue();\r\n                  if (!!this.qualif) {\r\n                    this.qualifAverageHourRate = this.qualif.averageHourRate;\r\n                  } else {\r\n                    super.throwUnboundLocalError('loadOperation', 'this.qualif');\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            () => {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetOperation'));\r\n            }\r\n          );\r\n        } else {\r\n          this.operation.statusState = AWPropertiesConstants.AIRM_OPERATION_STATUS_ONGOING;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadOperationStatus(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.FUNC_OBJECT_STATUS_MAP).subscribe(\r\n      (results) => {\r\n        this.statusList = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFamilyVariant'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private getDynamicAttributesObservable(attributeCategory: string): Observable<BireAttributeDTO[]> {\r\n    return this.operationFormService.findBireAttributesByCategory(attributeCategory);\r\n  }\r\n\r\n  public reloadOperation(): void {\r\n    this.init();\r\n    this.loadPnTypes();\r\n\r\n    this.loadTechnicalLevelsList();\r\n    this.loadQualificationsList();\r\n    this.loadWorkCenterList();\r\n\r\n    this.loadOperation();\r\n  }\r\n\r\n  public saveOperation(): void {\r\n    if (\r\n      this.operation.opeCode === null ||\r\n      this.operation.opeCode === undefined ||\r\n      this.operation.opeVersion === null ||\r\n      this.operation.opeVersion === undefined ||\r\n      this.operation.rangeCode === null ||\r\n      this.operation.rangeCode === undefined\r\n    ) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    } else {\r\n      // Components\r\n      let componentsUpdated = this.components.filter((component) => {\r\n        return !this.addedComponentsList.some((addedComponents) => {\r\n          return DTOUtils.equalsBireOperationPnDTO(component, addedComponents);\r\n        });\r\n      });\r\n      this.addedComponentsList = this.addedComponentsList.map((component) => {\r\n        return this.fillComponent(component, this.operation);\r\n      });\r\n      this.removedComponentsList = this.removedComponentsList.map((component) => {\r\n        return this.fillComponent(component, this.operation);\r\n      });\r\n      componentsUpdated = componentsUpdated.map((component) => {\r\n        return this.fillComponent(component, this.operation);\r\n      });\r\n\r\n      // Documents\r\n      const documentsUpdated = this.documentsTableDataSource.dataSrc.filter((document) => {\r\n        return !this.documentsAdded.some((documentAdded) => {\r\n          return DTOUtils.equalsBireDocumentDTO(\r\n            document._obj as BireDocumentDTO,\r\n            documentAdded._obj as BireDocumentDTO\r\n          );\r\n        });\r\n      });\r\n\r\n      this.bireOperationAttributes = this.dynamicAttributesService.toBireOperationAttributeId(\r\n        this.operation.opeCode,\r\n        this.operation.rangeCode,\r\n        this.operation.opeVersion,\r\n        this.dynamicAttributes\r\n      );\r\n\r\n      const saveBireOperationInput: SaveBireOperationInput = {\r\n        bireOperation: this.operation,\r\n        bireOperationPnAddedList: this.addedComponentsList,\r\n        bireOperationPnRemovedList: this.removedComponentsList,\r\n        bireOperationPnUpdatedList: componentsUpdated,\r\n        bireOperationAttributes: this.bireOperationAttributes\r\n      };\r\n\r\n      saveBireOperationInput.bireDocumentAddedList = [];\r\n      saveBireOperationInput.bireDocumentRemovedList = [];\r\n      saveBireOperationInput.bireDocumentUpdatedList = [];\r\n      this.documentsAdded.forEach((addedDoc) => {\r\n        if (!!saveBireOperationInput.bireDocumentAddedList && !!addedDoc._obj) {\r\n          saveBireOperationInput.bireDocumentAddedList.push(addedDoc._obj);\r\n        }\r\n      });\r\n      this.documentsRemoved.forEach((removedDoc) => {\r\n        if (!!saveBireOperationInput.bireDocumentRemovedList && !!removedDoc._obj) {\r\n          saveBireOperationInput.bireDocumentRemovedList.push(removedDoc._obj);\r\n        }\r\n      });\r\n      documentsUpdated.forEach((updatedDoc) => {\r\n        if (!!saveBireOperationInput.bireDocumentUpdatedList && !!updatedDoc._obj) {\r\n          saveBireOperationInput.bireDocumentUpdatedList.push(updatedDoc._obj);\r\n        }\r\n      });\r\n\r\n      // Operation Fields\r\n      if (this.isCreateOpenMode) {\r\n        this.createOperation(saveBireOperationInput);\r\n      } else {\r\n        this.updateOperation(saveBireOperationInput);\r\n      }\r\n    }\r\n  }\r\n\r\n  private createOperation(saveBireOperationInput: SaveBireOperationInput): void {\r\n    if (!!this.componentData) {\r\n      this.showSaveSpinner = true;\r\n      this.operationFormService.createBireOperation(saveBireOperationInput).subscribe(\r\n        () => {\r\n          this.save();\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnCreateOperation'));\r\n          this.showSaveSpinner = false;\r\n        },\r\n        (error) => {\r\n          this.messageService.showErrorMessage(error.error.errorDesc);\r\n          this.showSaveSpinner = false;\r\n        }\r\n      );\r\n    } else {\r\n      super.throwUnboundLocalError('createOperation', 'this.componentData');\r\n    }\r\n  }\r\n\r\n  private updateOperation(saveBireOperationInput: SaveBireOperationInput): void {\r\n    this.showSaveSpinner = true;\r\n    this.operationFormService.updateBireOperation(saveBireOperationInput).subscribe(\r\n      () => {\r\n        this.save();\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnUpdateOperation'));\r\n        this.showSaveSpinner = false;\r\n      },\r\n      (error) => {\r\n        this.messageService.showErrorMessage(error.error.errorDesc);\r\n        this.showSaveSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  private save(): void {\r\n    const context = `${this.operation.opeCode}|${this.operation.opeVersion}|${this.operation.rangeCode}`;\r\n    this.subtitle = context;\r\n    this.displayComponentContext(context, this.isCreateOpenMode);\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n    this.componentData.openMode = 1;\r\n    if (!!this.operation.opeCode && !!this.operation.opeVersion && !!this.operation.rangeCode) {\r\n      const operationId: BireOperationDTOId = {\r\n        opeCode: this.operation.opeCode,\r\n        opeVersion: this.operation.opeVersion,\r\n        rangeCode: this.operation.rangeCode\r\n      };\r\n      this.componentData.objectId = this.serializationService.serialize(operationId);\r\n      this.init();\r\n\r\n      this.loadPnTypes();\r\n      this.loadTechnicalLevelsList();\r\n      this.loadQualificationsList();\r\n      this.loadWorkCenterList();\r\n\r\n      this.loadOperation();\r\n    }\r\n  }\r\n\r\n  public cancelOperation(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n    this.reloadOperation();\r\n  }\r\n\r\n  private fillComponent(component: BireOperationPnDTO, operation: BireOperationDTO): BireOperationPnDTO {\r\n    component.opeCode = operation.opeCode;\r\n    component.opeVersion = operation.opeVersion;\r\n    component.rangeCode = operation.rangeCode;\r\n\r\n    return component;\r\n  }\r\n\r\n  public searchRangeCode(): void {\r\n    const rangeCodeTableCols: TableColumn[] = [\r\n      { field: 'rangeCode', alignment: 'left', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'description', alignment: 'left', filterMode: TableColumnFilterMode.Input }\r\n    ];\r\n\r\n    try {\r\n      this.rangeCodeTableData = {\r\n        componentId: 'DialogRangeCode',\r\n        tableCols: rangeCodeTableCols,\r\n        tableRows: this.operationFormService.findAllBireRanges(undefined),\r\n        dataKey: undefined,\r\n        selectionMode: TableSelectionMode.Single,\r\n        globalFilter: true\r\n      };\r\n      this.displayRangeCodeDialog = true;\r\n    } catch {\r\n      this.messageService.showErrorMessage('errorOnGetRangeCodes');\r\n    }\r\n  }\r\n\r\n  // TODO when update functionality is implemented in StatusUpdatesHistoryComponent\r\n  // public updateObjectStatusFromStatusUpdatesHistory(event: HBireOperationDTO): void {\r\n\r\n  // }\r\n\r\n  /**************************************************************************\r\n   * Range Code Dialog\r\n   *************************************************************************/\r\n\r\n  public onSelectedRangeCode(operation: BireOperationDTO): void {\r\n    if (operation) {\r\n      this.operation.rangeCode = operation.rangeCode;\r\n    }\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Operation Fields Tab\r\n   ***********************************************************************************/\r\n\r\n  public openOperationFieldsTab(): void {\r\n    this.currentTabId = this.tabOperationFieldsId;\r\n  }\r\n\r\n  public loadTechnicalLevelsList() {\r\n    this.operationFormService.findAllBireTils(undefined).subscribe(\r\n      (results) => {\r\n        results.forEach((result) => {\r\n          if (!!result && result.technicalLevel !== null && result.technicalLevel !== undefined && !!result.tilName) {\r\n            const tempName: LabelValue<number> = {\r\n              label: result.tilName,\r\n              value: result.technicalLevel\r\n            };\r\n            this.technicalLevelsToDisplayList.push(tempName);\r\n          }\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadTechnicalLevels'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public onTilSelected(event: LabelValue<string>) {\r\n    if (!!this.til) {\r\n      this.til.technicalLevel = parseInt(event.value, 10);\r\n      this.operation.technicalLevel = this.til.technicalLevel;\r\n      if (this.operation.technicalLevel !== undefined) {\r\n        const til = this.technicalLevelsToDisplayList.filter((name) => name.value.toString() === event.value)[0];\r\n        if (!!til) {\r\n          this.til.tilName = til.label;\r\n        }\r\n      } else {\r\n        super.throwUnboundLocalError('onTilSelected', 'this.til');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * loadQualificationsList : load all the qualifications to display in the qualification dropdown\r\n   */\r\n  public loadQualificationsList(): void {\r\n    this.operationFormService.findAllBireQualificationDatas(undefined).subscribe(\r\n      (results) => {\r\n        this.qualifications = results;\r\n        results.forEach((result) => {\r\n          if (!!result.qualificationCode) {\r\n            const tempName: LabelValue<string> = {\r\n              value: result.qualificationCode,\r\n              label: `${result.qualificationCode} - ${result.qualificationName}`\r\n            };\r\n            this.qualificationsToDisplayList.push(tempName);\r\n          } else {\r\n            super.throwUnboundLocalError('loadQualificationsList', 'result.qualificationCode');\r\n          }\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadQualification'));\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * loadWorkCenterList : load all the work centers to display in the workcenter dropdown\r\n   */\r\n  private loadWorkCenterList(): void {\r\n    this.operationFormService.findByCriteriaWorkshop().subscribe(\r\n      (results) => {\r\n        results.forEach((result) => {\r\n          if (!!result.bidtWarehouseDTO.whCode) {\r\n            const tempName: LabelValue<string> = {\r\n              value: result.bidtWarehouseDTO.whCode,\r\n              label: `${result.bidtWarehouseDTO.whCode} - ${result.bidtWarehouseDTO.whName}`\r\n            };\r\n            this.workcentersToDisplayList.push(tempName);\r\n          } else {\r\n            super.throwUnboundLocalError('loadWorkCentersList', 'result.workcenterCode');\r\n          }\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadWorkCenter'));\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * setHasHourlyRateValue : set the value of this.hasHourlyRateValue to true if the qualification\r\n   *                         of the operation has an averageHourRate\r\n   */\r\n  public setHasHourlyRateValue(): void {\r\n    this.hasHourlyRateValue = false;\r\n    if (this.operation.opeQualification) {\r\n      const selectedQualification = this.qualifications.find(\r\n        (qualification) => qualification.qualificationCode === this.operation.opeQualification\r\n      );\r\n      if (selectedQualification && selectedQualification.averageHourRate) {\r\n        this.hasHourlyRateValue = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onChangeQualification : load the datas of the new selected qualification\r\n   *                         in the dropdown + modify the operation (opeQualification)\r\n   */\r\n  public onChangeQualification(event): void {\r\n    if (event.value !== undefined) {\r\n      const qual = this.qualificationsToDisplayList.filter((name) => name.value === event.value)[0];\r\n      this.qualif = {\r\n        qualificationCode: qual && qual.value,\r\n        qualificationName: qual && qual.label\r\n      };\r\n\r\n      this.operation.opeQualification = this.qualif && this.qualif.qualificationCode;\r\n\r\n      if (this.operation.opeQualification) {\r\n        this.qualif = this.qualifications.find(\r\n          (qualification) => qualification.qualificationCode === this.operation.opeQualification\r\n        );\r\n        this.setQualifRateCurrencyLabelByValue(); // Assigne a value to this.qualifRateCurrency\r\n        if (!!this.qualif) {\r\n          this.qualifAverageHourRate = this.qualif.averageHourRate;\r\n        } else {\r\n          super.throwUnboundLocalError('onChangeQualification', 'this.qualif');\r\n        }\r\n      }\r\n      this.setHasHourlyRateValue();\r\n      this.calculateCost();\r\n    }\r\n  }\r\n\r\n  private setQualifRateCurrencyLabelByValue(): void {\r\n    this.operationFormService.getCurrencyMap().subscribe(\r\n      (results) => {\r\n        const index = results.findIndex(\r\n          (element) => !!this.qualif && (+element - 1).toString() === this.qualif.rateCurrency\r\n        );\r\n        this.qualifRateCurrency = results[index] && results[index].label;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetCurrency'));\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * calculateCost : update opeCost when the operation is modified\r\n   */\r\n  public calculateCost(): void {\r\n    if (\r\n      this.operation !== undefined &&\r\n      this.operation.opeManHour !== undefined &&\r\n      this.operation.opeQualification !== undefined &&\r\n      this.operation.opeDurationTime !== undefined\r\n    ) {\r\n      const calculateCostOfBireOperationInput: CalculateCostOfBireOperationInput = {\r\n        operationManHour: this.operation.opeManHour,\r\n        qualificationCode: this.operation.opeQualification,\r\n        duration: this.operation.opeDurationTime,\r\n        operationDTO: this.operation\r\n      };\r\n      this.operationFormService\r\n        .calculateCostOfBireOperation(calculateCostOfBireOperationInput)\r\n        .subscribe((resultsCalculateCostOfBireOperation) => {\r\n          let cost: number;\r\n          cost = resultsCalculateCostOfBireOperation;\r\n          if (cost !== undefined && cost !== 0) {\r\n            this.operation.opeCost = cost;\r\n          } else {\r\n            if (\r\n              !!this.operation &&\r\n              !!this.operation.opeManHour &&\r\n              !!this.operation.opeQualification &&\r\n              !!this.operation.opeDurationTime\r\n            ) {\r\n              this.operationFormService\r\n                .calculateCostOfBireOperationForAircraftMaintenance(\r\n                  this.operation.opeManHour,\r\n                  this.operation.opeQualification,\r\n                  this.operation.opeDurationTime,\r\n                  this.operation\r\n                )\r\n                .subscribe((resultsCalculateCostOfBireOperationForAircraftMaintenance) => {\r\n                  this.operation.opeCost = resultsCalculateCostOfBireOperationForAircraftMaintenance;\r\n                });\r\n            } else {\r\n              super.throwUnboundLocalError('calculateCost', 'this.operation');\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Components Tab\r\n   ***********************************************************************************/\r\n\r\n  public openComponentsTab(): void {\r\n    this.currentTabId = this.tabComponentsId;\r\n  }\r\n\r\n  public loadComponents() {\r\n    this.componentsTableDataSource.setData([]);\r\n    this.operationFormService.findBireOperationPnsByOperation(this.operationId).subscribe(\r\n      (resultsFindBireOperationPnsByOperation) => {\r\n        this.components = resultsFindBireOperationPnsByOperation || [];\r\n        if (this.components) {\r\n          for (const component of this.components) {\r\n            try {\r\n              this.buildOperationPnElementFromBireOperationPnDTO(component);\r\n            } catch {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetComponents'));\r\n            }\r\n          }\r\n        }\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetComponents'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public addComponent(): void {\r\n    this.currentComponent = {};\r\n    this.currentComponentIndex = -1;\r\n    this.isReadOnlyComponentDialog = false;\r\n    this.displayComponentDialog = true;\r\n  }\r\n\r\n  public editComponents(): void {\r\n    if (this.componentsTableDataSource.dataSelectionCount === 1) {\r\n      const selectedCompo: BireOperationPnDTO = this.buildBireOperationPnDTOFromOperationPnElement(\r\n        this.componentsTableDataSource.dataSelection[0]\r\n      );\r\n      this.currentComponentIndex = this.components.findIndex((component) => {\r\n        return DTOUtils.equalsBireOperationPnDTO(component, selectedCompo);\r\n      });\r\n      this.currentComponent = { ...this.componentsTableDataSource.dataSelection[0] };\r\n      if (!!this.currentComponent && !!this.currentComponent.type) {\r\n        const type = this.pnTypes.filter(\r\n          (pnType) => !!this.currentComponent && pnType.label === this.currentComponent.type\r\n        )[0];\r\n        if (!!type) {\r\n          this.currentComponent.type = type.label;\r\n        }\r\n      }\r\n      this.isReadOnlyComponentDialog = false;\r\n      this.displayComponentDialog = true;\r\n    }\r\n  }\r\n\r\n  public openComponents(): void {\r\n    if (this.componentsTableDataSource.dataSelectionCount === 1) {\r\n      this.redirect(this.componentsTableDataSource.dataSelection[0]);\r\n    }\r\n  }\r\n\r\n  public deleteComponents(): void {\r\n    const partialMessageKey =\r\n      this.componentsTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedComponents'\r\n        : 'confirmDeleteSelectedComponent';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.componentsTableDataSource.dataSelection.forEach((selectedOperationPn) => {\r\n          const selectedComponent = this.buildBireOperationPnDTOFromOperationPnElement(selectedOperationPn);\r\n          const componentsAddedWithoutSelection = this.addedComponentsList.filter((componentAdded) => {\r\n            return !DTOUtils.equalsBireOperationPnDTO(selectedComponent, componentAdded);\r\n          });\r\n          // list of added objects contains the selection\r\n          if (this.addedComponentsList.length !== componentsAddedWithoutSelection.length) {\r\n            // Remove selection from added objects\r\n            this.addedComponentsList = componentsAddedWithoutSelection;\r\n          } else {\r\n            const isRemoved = this.addedComponentsList.some((componentAdded) => {\r\n              return DTOUtils.equalsBireOperationPnDTO(selectedComponent, componentAdded);\r\n            });\r\n            if (!isRemoved) {\r\n              this.removedComponentsList = [...this.removedComponentsList, selectedComponent];\r\n            }\r\n          }\r\n        });\r\n\r\n        this.components = this.components.filter((component) => {\r\n          return !this.componentsTableDataSource.dataSelection.some((selectedOperationPn) => {\r\n            const selectedComponent = this.buildBireOperationPnDTOFromOperationPnElement(selectedOperationPn);\r\n\r\n            return DTOUtils.equalsBireOperationPnDTO(component, selectedComponent);\r\n          });\r\n        });\r\n        this.componentsTableDataSource.setData(\r\n          this.componentsTableDataSource.dataSrc.filter((operationPn) => {\r\n            return !this.componentsTableDataSource.dataSelection.some((selectedOperationPn) => {\r\n              return DTOUtils.equalsBireOperationPnDTO(operationPn, selectedOperationPn);\r\n            });\r\n          })\r\n        );\r\n\r\n        this.componentsTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Component Dialog\r\n   *************************************************************************/\r\n\r\n  public onValidateComponent(opeCompo: OperationPnElement): void {\r\n    if (!!opeCompo) {\r\n      if (opeCompo.type === AWPropertiesConstants.PN_TYPE_SUBCONTRACTING_KEY) {\r\n        opeCompo.quantity = '1'; // Set the default quantity of subcontracting components\r\n      }\r\n      const opeCompoTyped: OperationPnElement = {\r\n        pnCode: opeCompo.pnCode,\r\n        name: opeCompo.name,\r\n        type: undefined,\r\n        quantity: opeCompo.quantity,\r\n        unit: opeCompo.unit,\r\n        componentType: opeCompo.componentType\r\n      };\r\n      const operationPn: BireOperationPnDTO = this.buildBireOperationPnDTOFromOperationPnElement(opeCompo);\r\n      if (this.currentComponentIndex !== -1) {\r\n        if (this.currentComponentIndex !== null && this.currentComponentIndex !== undefined) {\r\n          if (!!opeCompo.type) {\r\n            opeCompoTyped.type =\r\n              this.pnTypes.filter((pnType) => pnType.value === opeCompo.type)[0] &&\r\n              this.pnTypes.filter((pnType) => pnType.value === opeCompo.type)[0].label;\r\n          }\r\n\r\n          this.components[this.currentComponentIndex] = operationPn;\r\n          this.componentsTableDataSource.replaceData(\r\n            this.componentsTableDataSource.dataSelection[0],\r\n            this.addComponentRow(opeCompoTyped)\r\n          );\r\n\r\n          const updatedOperationComponentIndex = this.updatedComponentsList.findIndex((updatedComponent) =>\r\n            DTOUtils.equalsBireOperationPnDTO(updatedComponent, operationPn)\r\n          );\r\n          if (updatedOperationComponentIndex !== -1) {\r\n            this.updatedComponentsList[updatedOperationComponentIndex] = operationPn;\r\n          } else {\r\n            this.updatedComponentsList = [...this.updatedComponentsList, operationPn];\r\n          }\r\n        } else {\r\n          super.throwUnboundLocalError('onValidateComponent', 'this.currentComponentIndex');\r\n        }\r\n      } else {\r\n        const rowWithPnCodeExists = this.componentsTableDataSource.dataSrc.some(\r\n          (comp) => comp.pnCode === opeCompo.pnCode\r\n        );\r\n        if (!rowWithPnCodeExists) {\r\n          const isAdded = this.addedComponentsList.some((newAddedOperationPn) => {\r\n            return DTOUtils.equalsBireOperationPnDTO(operationPn, newAddedOperationPn);\r\n          });\r\n          if (isAdded) {\r\n            this.messageService.showWarningMessage(this.getTranslateKey('warningOnComponentExists'));\r\n          } else {\r\n            const component = this.buildBireOperationPnDTOFromOperationPnElement(opeCompo);\r\n            this.components = [...this.components, component];\r\n            this.addedComponentsList = [...this.addedComponentsList, component];\r\n            if (opeCompo.type !== null) {\r\n              opeCompoTyped.type =\r\n                this.pnTypes.filter((pnType) => pnType.value === opeCompo.type)[0] &&\r\n                this.pnTypes.filter((pnType) => pnType.value === opeCompo.type)[0].label;\r\n            }\r\n            this.componentsTableDataSource.addData([this.addComponentRow(opeCompoTyped)]);\r\n          }\r\n        }\r\n      }\r\n      this.componentsTableDataSource.dataSelection = [];\r\n    }\r\n  }\r\n\r\n  private addComponentRow(operationCompo: OperationPnElement): OperationComponentRow {\r\n    const operationComponentRow: OperationComponentRow = {\r\n      pnCode: operationCompo.pnCode as string,\r\n      name: operationCompo.name as string,\r\n      type: operationCompo.type as string,\r\n      quantity: operationCompo.quantity as string,\r\n      unit: operationCompo.unit as string,\r\n      componentType: operationCompo.componentType as string\r\n    };\r\n\r\n    return operationComponentRow;\r\n  }\r\n\r\n  private buildOperationPnElementFromBireOperationPnDTO(component: BireOperationPnDTO): void {\r\n    if (!!component && !!component.pnCode) {\r\n      const pnId: BirePnDTOId = { pnCode: component.pnCode };\r\n      this.operationFormService.findBirePn(pnId).subscribe((resultsFindBirePn) => {\r\n        const componentPnDTO = resultsFindBirePn;\r\n        let componentPnDTOPnTypeLabel: string | undefined;\r\n        if (componentPnDTO.pnType !== null && componentPnDTO.pnType !== undefined) {\r\n          const type = this.pnTypes.filter((pnType) => pnType.value === componentPnDTO.pnType)[0];\r\n          if (!!type) {\r\n            componentPnDTOPnTypeLabel = type.label;\r\n          }\r\n        }\r\n        this.operationComponent = {\r\n          pnCode: component.pnCode,\r\n          name: componentPnDTO.articleDesignation,\r\n          type: componentPnDTO.pnType,\r\n          quantity: component.quantity,\r\n          unit: componentPnDTO.quantityUnit\r\n        };\r\n        const operationComponentTyped = {\r\n          pnCode: component.pnCode,\r\n          name: componentPnDTO.articleDesignation,\r\n          type: componentPnDTOPnTypeLabel,\r\n          quantity: component.quantity,\r\n          unit: componentPnDTO.quantityUnit,\r\n          componentType: ''\r\n        };\r\n        switch (componentPnDTO.pnType) {\r\n          case AWPropertiesConstants.PN_TYPE_PART_KEY:\r\n            operationComponentTyped.componentType = componentPnDTO.pnType;\r\n            break;\r\n          case AWPropertiesConstants.PN_TYPE_SUBCONTRACTING_KEY:\r\n            operationComponentTyped.componentType = componentPnDTO.pnType;\r\n            break;\r\n          default:\r\n            operationComponentTyped.componentType = AWPropertiesConstants.PN_TYPE_INGREDIENT_KEY;\r\n            break;\r\n        }\r\n        this.componentsTableDataSource.addData([operationComponentTyped]);\r\n      });\r\n    }\r\n  }\r\n\r\n  private buildBireOperationPnDTOFromOperationPnElement(opeCompo: OperationPnElement): BireOperationPnDTO {\r\n    const buildedComponent: BireOperationPnDTO = {\r\n      opeCode: this.operation.opeCode,\r\n      opeVersion: this.operation.opeVersion,\r\n      rangeCode: this.operation.rangeCode,\r\n      pnCode: opeCompo.pnCode,\r\n      quantity: opeCompo.quantity,\r\n      unit: opeCompo.unit\r\n    };\r\n\r\n    return buildedComponent;\r\n  }\r\n\r\n  public redirect(rowData: OperationPnElement): void {\r\n    if (rowData.componentType === AWPropertiesConstants.PN_TYPE_PART_KEY) {\r\n      this.goToPartNumber(rowData.pnCode, ComponentOpenMode.Read);\r\n    } else {\r\n      if (!!rowData.pnCode) {\r\n        const pnId: BirePnDTOId = { pnCode: rowData.pnCode };\r\n        this.operationFormService.findBirePn(pnId).subscribe((result) => {\r\n          this.goToMaterial(result, ComponentOpenMode.Read);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private goToPartNumber(objectId: string | undefined, openMode: ComponentOpenMode): void {\r\n    const labelKey = 'transaction.PartNumberFormComponent';\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: 'PartNumberFormComponent',\r\n      objectId,\r\n      openMode\r\n    };\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  private goToMaterial(objectId: BirePnDTO | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_MATERIAL_FORM,\r\n      openMode\r\n    };\r\n    if (!!objectId) {\r\n      const materialFormId: BirePnDTO = {\r\n        pnCode: objectId.pnCode,\r\n        pnType: objectId.pnType\r\n      };\r\n      data.objectId = this.serializationService.serialize(materialFormId);\r\n    }\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Documents Tab\r\n   ***********************************************************************************/\r\n\r\n  public openDocumentsTab(): void {\r\n    this.currentTabId = this.tabDocumentsId;\r\n  }\r\n\r\n  private loadDocuments(operationId: BireOperationDTOId): void {\r\n    this.documentsTableDataSource.setData([]);\r\n    this.operationFormService.findBireDocumentByOperation(operationId).subscribe(\r\n      (results) => {\r\n        results.forEach((result) => {\r\n          this.documentsTableDataSource.addData([this.convertToDocumentRow(result)]);\r\n        });\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetDocuments'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private convertToDocumentRow(document: BireDocumentDTO): DocumentRow {\r\n    const documentRow: DocumentRow = {\r\n      docName: document.docName,\r\n      docSource: document.docSource,\r\n      docExtension: this.formatDocExtension(document),\r\n      docSize: this.formatDocSize(document),\r\n      docPublicationDate: this.dateService.dateToString(document.docPublicationDate),\r\n      docDescription: document.docDescription,\r\n      _obj: document\r\n    };\r\n\r\n    return documentRow;\r\n  }\r\n\r\n  private formatDocExtension(document: BireDocumentDTO): string {\r\n    return FileUtils.getExtension(document.docName).toUpperCase();\r\n  }\r\n\r\n  private formatDocSize(document: BireDocumentDTO): string {\r\n    return !!document.docFile ? FileUtils.getFormattedSize(document.docFile.length) : '';\r\n  }\r\n\r\n  public uploadDocument(event, fileUploader): void {\r\n    if (event.files) {\r\n      const file: File = event.files[0];\r\n\r\n      // Check if the file already exists\r\n      const fileExists = this.documentsTableDataSource.dataSrc.some((document) => {\r\n        return document.docName === file.name;\r\n      });\r\n      if (fileExists) {\r\n        this.messageService.showWarningMessage(this.getTranslateKey('warningOnFileExists'));\r\n      } else {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          if (fileContent) {\r\n            const document: BireDocumentDTO = {\r\n              docFile: fileContent,\r\n              docName: file.name,\r\n              docPublicationDate: new Date()\r\n            };\r\n\r\n            this.documentsTableDataSource.addData([this.convertToDocumentRow(document)]);\r\n            this.documentsAdded = [...this.documentsAdded, this.convertToDocumentRow(document)];\r\n          }\r\n        });\r\n      }\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public addDocument(): void {\r\n    this.currentDocumentIndex = -1;\r\n    this.currentDocument = undefined;\r\n    this.isReadOnlyDocumentDialog = false;\r\n    this.displayDocumentDialog = true;\r\n  }\r\n\r\n  public editDocument(): void {\r\n    if (this.documentsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocumentIndex = this.documentsTableDataSource.dataSrc.findIndex((document) => {\r\n        return DTOUtils.equalsBireDocOperationDTO(\r\n          document._obj as BireDocumentDTO,\r\n          this.documentsTableDataSource.dataSelection[0]._obj as BireDocumentDTO\r\n        );\r\n      });\r\n\r\n      this.currentDocument = { ...this.documentsTableDataSource.dataSelection[0] };\r\n      this.isReadOnlyDocumentDialog = false;\r\n      this.showAddDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public openDocument(): void {\r\n    if (this.documentsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocument = this.documentsTableDataSource.dataSelection[0];\r\n      this.currentDocumentIndex = undefined;\r\n      this.isReadOnlyDocumentDialog = true;\r\n      this.displayDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public downloadFile(document: DocumentRow): void {\r\n    if (!!document._obj) {\r\n      FileUtils.downloadFile(document._obj.docFile, document.docName);\r\n    }\r\n  }\r\n\r\n  public deleteDocuments(): void {\r\n    const partialMessageKey =\r\n      this.documentsTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedDocuments'\r\n        : 'confirmDeleteSelectedDocument';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.documentsTableDataSource.dataSelection.forEach((selectedDocument) => {\r\n          const documentsAddedWithoutSelection = this.documentsAdded.filter((documentAdded) => {\r\n            return !DTOUtils.equalsBireDocOperationDTO(\r\n              selectedDocument._obj as BireDocumentDTO,\r\n              documentAdded._obj as BireDocumentDTO\r\n            );\r\n          });\r\n          // list of added objects contains the selection\r\n          if (this.documentsAdded.length !== documentsAddedWithoutSelection.length) {\r\n            // Remove selection from added objects\r\n            this.documentsAdded = documentsAddedWithoutSelection;\r\n          } else {\r\n            const isRemoved = this.documentsAdded.some((documentAdded) => {\r\n              return DTOUtils.equalsBireDocOperationDTO(\r\n                selectedDocument._obj as BireDocumentDTO,\r\n                documentAdded._obj as BireDocumentDTO\r\n              );\r\n            });\r\n            if (!isRemoved) {\r\n              this.documentsRemoved = [...this.documentsRemoved, selectedDocument];\r\n            }\r\n          }\r\n        });\r\n\r\n        this.documentsTableDataSource.setData(\r\n          this.documentsTableDataSource.dataSrc.filter((document) => {\r\n            return !this.documentsTableDataSource.dataSelection.some((selectedDocument) => {\r\n              return DTOUtils.equalsBireDocOperationDTO(\r\n                document._obj as BireDocumentDTO,\r\n                selectedDocument._obj as BireDocumentDTO\r\n              );\r\n            });\r\n          })\r\n        );\r\n\r\n        this.documentsTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public showDocExtension(document: BireDocumentDTO): string {\r\n    return FileUtils.getExtension(document.docName).toUpperCase();\r\n  }\r\n\r\n  public showDocSize(document: BireDocumentDTO): string {\r\n    return document.docFile ? FileUtils.getFormattedSize(document.docFile.length) : '';\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Document Dialog\r\n   *************************************************************************/\r\n\r\n  public addNewDocument(newDocument: BireDocumentDTO) {\r\n    const searchInDisplayedList = this.documentsTableDataSource.dataSrc.find(\r\n      (value) => value.docName === newDocument.docName\r\n    );\r\n    if (!searchInDisplayedList) {\r\n      this.documentsAdded.push(this.convertToDocumentRow(newDocument));\r\n      this.documentsTableDataSource.addData([this.convertToDocumentRow(newDocument)]);\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('errorFileAlreadyExist'));\r\n    }\r\n  }\r\n\r\n  public onAddDocument(document: DocumentRow): void {\r\n    if (!!document._obj) {\r\n      document._obj.docName = document.docName;\r\n      document._obj.docSource = document.docSource;\r\n      if (!!document.docPublicationDate) {\r\n        document._obj.docPublicationDate = new Date(document.docPublicationDate);\r\n      }\r\n      document._obj.docDescription = document.docDescription;\r\n    }\r\n    if (document) {\r\n      if (this.currentDocumentIndex !== undefined) {\r\n        this.documentsTableDataSource.replaceData(this.documentsTableDataSource.dataSrc[0], document);\r\n      } else {\r\n        const isAdded = this.documentsAdded.some((documentAdded) => {\r\n          return DTOUtils.equalsBireDocOperationDTO(\r\n            document._obj as BireDocumentDTO,\r\n            documentAdded._obj as BireDocumentDTO\r\n          );\r\n        });\r\n        if (isAdded) {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('warningOnDocumentExists'));\r\n        } else {\r\n          this.documentsTableDataSource.addData([document]);\r\n          this.documentsAdded = [...this.documentsAdded, document];\r\n        }\r\n      }\r\n    }\r\n\r\n    this.documentsTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Attributes Tab\r\n   ***********************************************************************************/\r\n\r\n  public openAttributesTab(): void {\r\n    this.currentTabId = this.tabAttributesId;\r\n  }\r\n\r\n  public loadAttributes(): void {\r\n    this.operationFormService.findBireOperationAttributesByOperation(this.operation).subscribe(\r\n      (results) => {\r\n        this.bireOperationAttributes = results;\r\n        this.dynamicAttributesService.setValues(this.dynamicAttributes, this.bireOperationAttributes);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnFindAttributesByOperation'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public initCostSettingDisplay(): void {\r\n    this.propertiesService\r\n      .getValue(GenericPropertyConstants.AEROWEBB_CONFIGURATION_MAP)\r\n      .subscribe((awConfiguration) => {\r\n        this.isCostSettingEnabled = SettingsUtils.isPropertyEnabled(\r\n          awConfiguration,\r\n          AWPropertiesConstants.DISPLAY_COST\r\n        );\r\n      });\r\n  }\r\n\r\n  public showStatus(): void {\r\n    const overlayRef = this._overlayService.openWithPositionCenter<string | undefined>({\r\n      content: ObjectStatusComponent,\r\n      data: {\r\n        currentAuthor: this.operation.statusUser,\r\n        currentDate: this.operation.statusDate,\r\n        currentStatus: {\r\n          label: this._formatSelectOption.transform(this.operation.statusState, this.statusList),\r\n          value: this.operation.statusState\r\n        },\r\n        nextStatuses: this.statusList\r\n      }\r\n    });\r\n\r\n    overlayRef.afterClosed$.subscribe({\r\n      next: (event) => {\r\n        if (event.data) {\r\n          this.operation.statusState = event.data;\r\n          this.saveOperation();\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AircraftMaintenanceApi } from '../../../../shared/api/aircraft-maintenance.api';\r\nimport { BidtWarehouseApi } from '../../../../shared/api/bidt-warehouse.api';\r\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\r\nimport { StatusManagementApi } from '../../../../shared/api/status-management.api';\r\nimport { TaskManagementApi } from '../../../../shared/api/task-management.api';\r\nimport { UserProfileBusinessApi } from '../../../../shared/api/user-profile-business.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { FindBirePnsBySearchCriteriaPSMInput } from '../../../../shared/types/api-input-types/product-structure-management/find-bire-pns-by-search-criteria-input.interface';\r\nimport { CalculateCostOfBireOperationInput } from '../../../../shared/types/api-input-types/task-management/calculate-cost-of-bire-operation-input.interface';\r\nimport { FindBirePnsBySearchCriteriaTMInput } from '../../../../shared/types/api-input-types/task-management/find-bire-pns-by-search-criteria-input.interface';\r\nimport { SaveBireOperationInput } from '../../../../shared/types/api-input-types/task-management/save-bire-operation-input.interface';\r\nimport { WarehouseListDTO } from '../../../../shared/types/api-output-types/bidt-warehouse/warehouse-list-dto.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\nimport { BireDocOperationDTOId } from '../../../../shared/types/api-types/bire-doc-operation-dto-id.interface';\r\nimport { BireDocOperationDTO } from '../../../../shared/types/api-types/bire-doc-operation-dto.interface';\r\nimport { BireDocumentDTOId } from '../../../../shared/types/api-types/bire-document-dto-id.interface';\r\nimport { BireDocumentDTO } from '../../../../shared/types/api-types/bire-document-dto.interface';\r\nimport { BireOperationAttributeDTOId } from '../../../../shared/types/api-types/bire-operation-attribute-dto-id.interface';\r\nimport { BireOperationAttributeDTO } from '../../../../shared/types/api-types/bire-operation-attribute-dto.interface';\r\nimport { BireOperationDTOId } from '../../../../shared/types/api-types/bire-operation-dto-id.interface';\r\nimport { BireOperationDTO } from '../../../../shared/types/api-types/bire-operation-dto.interface';\r\nimport { BireOperationPnDTOId } from '../../../../shared/types/api-types/bire-operation-pn-dto-id.interface';\r\nimport { BireOperationPnDTO } from '../../../../shared/types/api-types/bire-operation-pn-dto.interface';\r\nimport { BirePnDTOId } from '../../../../shared/types/api-types/bire-pn-dto-id.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { BireQualificationDTO } from '../../../../shared/types/api-types/bire-qualification-dto.interface';\r\nimport { BireRangeDTO } from '../../../../shared/types/api-types/bire-range-dto.interface';\r\nimport { BireTilDTO } from '../../../../shared/types/api-types/bire-til-dto.interface';\r\nimport { ObjectStatusDTO } from '../../../../shared/types/api-types/object-status-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class OperationFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly aircraftMaintenanceApi: AircraftMaintenanceApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly taskManagementApi: TaskManagementApi,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly userProfileBusinessApi: UserProfileBusinessApi,\r\n    private readonly statusManagementApi: StatusManagementApi,\r\n    private readonly bidtWarehouseApi: BidtWarehouseApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Aircraft maintenance api\r\n   *************************************************************************/\r\n\r\n  public calculateCostOfBireOperationForAircraftMaintenance(\r\n    operationManHour: number,\r\n    qualificationCode: string,\r\n    duration: number,\r\n    operationDTO: BireOperationDTO\r\n  ): Observable<number> {\r\n    const params = {\r\n      operationManHour,\r\n      qualificationCode,\r\n      duration,\r\n      operationDTO\r\n    };\r\n\r\n    return super.post<\r\n      { operationManHour: number; qualificationCode: string; duration: number; operationDTO: BireOperationDTO },\r\n      number\r\n    >(this.aircraftMaintenanceApi.calculateCostOfBireOperation, params);\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Product structure management api\r\n   *************************************************************************/\r\n\r\n  public findBireAttributesByCategory(p: string): Observable<BireAttributeDTO[]> {\r\n    return super.post<string, BireAttributeDTO[]>(this.productStructureManagementApi.findBireAttributesByCategory, p);\r\n  }\r\n\r\n  public findBirePnForProductStructureManagement(p: BirePnDTOId): Observable<BirePnDTO> {\r\n    return super.post<BirePnDTOId, BirePnDTO>(this.productStructureManagementApi.findBirePn, p);\r\n  }\r\n\r\n  public createBireDocument(p: BireDocumentDTO): Observable<BireDocumentDTOId> {\r\n    return super.post<BireDocumentDTO, BireDocumentDTOId>(this.productStructureManagementApi.createBireDocument, p);\r\n  }\r\n\r\n  public updateBireDocument(p: BireDocumentDTO): Observable<void> {\r\n    return super.post<BireDocumentDTO, void>(this.productStructureManagementApi.updateBireDocument, p);\r\n  }\r\n\r\n  public removeBireDocument(p: BireDocumentDTOId): Observable<void> {\r\n    return super.post<BireDocumentDTOId, void>(this.productStructureManagementApi.removeBireDocument, p);\r\n  }\r\n\r\n  /*\r\n   *    Dialog Components\r\n   */\r\n  public findBirePnsBySearchCriteriaPSM(\r\n    p: FindBirePnsBySearchCriteriaPSMInput\r\n  ): Observable<SearchResultsDTO<BirePnDTO>> {\r\n    return super.post<FindBirePnsBySearchCriteriaPSMInput, SearchResultsDTO<BirePnDTO>>(\r\n      this.productStructureManagementApi.findBirePnsBySearchCriteria,\r\n      p\r\n    );\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Task management api\r\n   *************************************************************************/\r\n\r\n  public findAllBireTils(p: void): Observable<BireTilDTO[]> {\r\n    return super.post<void, BireTilDTO[]>(this.taskManagementApi.findAllBireTils, p);\r\n  }\r\n\r\n  public findAllBireQualificationDatas(p: void): Observable<BireQualificationDTO[]> {\r\n    return super.post<void, BireQualificationDTO[]>(this.taskManagementApi.findAllBireQualificationDatas, p);\r\n  }\r\n\r\n  public findBireOperationPnsByOperation(p: BireOperationDTOId): Observable<BireOperationPnDTO[]> {\r\n    return super.post<BireOperationDTOId, BireOperationPnDTO[]>(\r\n      this.taskManagementApi.findBireOperationPnsByOperation,\r\n      p\r\n    );\r\n  }\r\n\r\n  public findBirePn(pnId: BirePnDTOId): Observable<BirePnDTO> {\r\n    return super.post<BirePnDTOId, BirePnDTO>(this.taskManagementApi.findBirePn, pnId);\r\n  }\r\n\r\n  public findBireDocOperationByOperation(p: BireOperationDTOId): Observable<BireDocOperationDTO[]> {\r\n    return super.post<BireOperationDTOId, BireDocOperationDTO[]>(\r\n      this.taskManagementApi.findBireDocOperationByOperation,\r\n      p\r\n    );\r\n  }\r\n\r\n  public findBireDocumentByOperation(p: BireOperationDTOId): Observable<BireDocumentDTO[]> {\r\n    return super.post<BireOperationDTOId, BireDocOperationDTO[]>(this.taskManagementApi.findBireDocumentByOperation, p);\r\n  }\r\n\r\n  public calculateCostOfBireOperation(input: CalculateCostOfBireOperationInput): Observable<number> {\r\n    return super.post<CalculateCostOfBireOperationInput, number>(\r\n      this.taskManagementApi.calculateCostOfBireOperation,\r\n      input\r\n    );\r\n  }\r\n\r\n  public findBireOperationAttributesByOperation(operation: BireOperationDTO): Observable<BireOperationAttributeDTO[]> {\r\n    return super.post<BireOperationDTO, BireOperationAttributeDTO[]>(\r\n      this.taskManagementApi.findBireOperationAttributesByOperation,\r\n      operation\r\n    );\r\n  }\r\n\r\n  public updateBireOperation(input: SaveBireOperationInput): Observable<void> {\r\n    return super.post<SaveBireOperationInput, void>(this.taskManagementApi.updateBireOperation, input);\r\n  }\r\n\r\n  public createBireOperation(input: SaveBireOperationInput): Observable<void> {\r\n    return super.post<SaveBireOperationInput, void>(this.taskManagementApi.createBireOperation, input);\r\n  }\r\n\r\n  public createBireOperationPn(p: BireOperationPnDTO): Observable<BireOperationPnDTOId> {\r\n    return super.post<BireOperationPnDTO, BireOperationPnDTOId>(this.taskManagementApi.createBireOperationPn, p);\r\n  }\r\n\r\n  public updateBireOperationPn(p: BireOperationPnDTO): Observable<void> {\r\n    return super.post<BireOperationPnDTO, void>(this.taskManagementApi.updateBireOperationPn, p);\r\n  }\r\n\r\n  public removeBireOperationPn(p: BireOperationPnDTOId): Observable<void> {\r\n    return super.post<BireOperationPnDTOId, void>(this.taskManagementApi.removeBireOperationPn, p);\r\n  }\r\n\r\n  public createBireDocOperation(p: BireDocOperationDTO): Observable<BireDocOperationDTOId> {\r\n    return super.post<BireDocOperationDTO, BireDocOperationDTOId>(this.taskManagementApi.createBireDocOperation, p);\r\n  }\r\n\r\n  public removeBireDocOperation(p: BireDocOperationDTOId): Observable<void> {\r\n    return super.post<BireDocOperationDTOId, void>(this.taskManagementApi.removeBireDocOperation, p);\r\n  }\r\n\r\n  public removeBireOperationAttribute(p: BireOperationAttributeDTOId): Observable<void> {\r\n    return super.post<BireOperationAttributeDTOId, void>(this.taskManagementApi.removeBireOperationAttribute, p);\r\n  }\r\n\r\n  public createBireOperationAttribute(p: BireOperationAttributeDTO): Observable<BireOperationAttributeDTOId> {\r\n    return super.post<BireOperationAttributeDTO, BireOperationAttributeDTOId>(\r\n      this.taskManagementApi.createBireOperationAttribute,\r\n      p\r\n    );\r\n  }\r\n\r\n  public updateBireOperationAttribute(p: BireOperationAttributeDTO): Observable<void> {\r\n    return super.post<BireOperationAttributeDTO, void>(this.taskManagementApi.updateBireOperationAttribute, p);\r\n  }\r\n\r\n  public findBireOperation(p: BireOperationDTOId): Observable<BireOperationDTO> {\r\n    return super.post<BireOperationDTOId, BireOperationDTO>(this.taskManagementApi.findBireOperation, p);\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Work Center api\r\n   *************************************************************************/\r\n  public findByCriteriaWorkshop(): Observable<WarehouseListDTO[]> {\r\n    return super.post<void, WarehouseListDTO[]>(this.bidtWarehouseApi.findByCriteriaWorkshop);\r\n  }\r\n\r\n  /*\r\n   * Dialog Components\r\n   */\r\n  public findBirePnsBySearchCriteriaTM(p: FindBirePnsBySearchCriteriaTMInput): Observable<SearchResultsDTO<BirePnDTO>> {\r\n    return super.post<FindBirePnsBySearchCriteriaTMInput, SearchResultsDTO<BirePnDTO>>(\r\n      this.taskManagementApi.findBirePnsBySearchCriteria,\r\n      p\r\n    );\r\n  }\r\n\r\n  /*\r\n   * Dialog Range Codes\r\n   */\r\n  public findAllBireRanges(p: void): Observable<SearchResultsDTO<BireRangeDTO>> {\r\n    return super.post<void, SearchResultsDTO<BireRangeDTO>>(this.taskManagementApi.findAllBireRanges, p);\r\n  }\r\n\r\n  /*************************************************************************\r\n   * User profile business api\r\n   *************************************************************************/\r\n\r\n  public isBuildingBlockInstalled(p: void): Observable<boolean> {\r\n    return super.post<void, boolean>(this.userProfileBusinessApi.isBuildingBlockInstalled, p);\r\n  }\r\n\r\n  /*************************************************************************\r\n   * PropertiesService\r\n   *************************************************************************/\r\n\r\n  public getPnTypeMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue('getPnTypeMap');\r\n  }\r\n\r\n  public getCurrencyMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue('getCurrencyMap');\r\n  }\r\n\r\n  public updateStaus(input: ObjectStatusDTO): Observable<void> {\r\n    return super.post<ObjectStatusDTO, void>(this.statusManagementApi.updateStatusGlobal, input);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".docManagement\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docName\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n          <div class=\\\"form-control-data\\\">\\r\\n            {{ document.docName }}\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"btn-file-upload-wrapper\\\">\\r\\n            <p-fileUpload\\r\\n              #fileUploader\\r\\n              *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n              class=\\\"aw-fileupload\\\"\\r\\n              name=\\\"document[]\\\"\\r\\n              customUpload=\\\"true\\\"\\r\\n              mode=\\\"basic\\\"\\r\\n              auto=\\\"true\\\"\\r\\n              chooseLabel=\\\"\\\"\\r\\n              (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n            ></p-fileUpload>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docSource\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"document.docSource\\\" [disabled]=\\\"isReadOnlyForm\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docPublicationDate\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-calendar\\r\\n            showButtonBar=\\\"true\\\"\\r\\n            [monthNavigator]=\\\"true\\\"\\r\\n            [yearNavigator]=\\\"true\\\"\\r\\n            [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n            class=\\\"aw-calendar\\\"\\r\\n            [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n            [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n            [(ngModel)]=\\\"document.docPublicationDate\\\"\\r\\n            [disabled]=\\\"isReadOnlyForm\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n          ></p-calendar>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docDescription\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <textarea\\r\\n            class=\\\"aw-textarea\\\"\\r\\n            [rows]=\\\"3\\\"\\r\\n            pInputTextarea\\r\\n            [(ngModel)]=\\\"document.docDescription\\\"\\r\\n            [disabled]=\\\"isReadOnlyForm\\\"\\r\\n          ></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!document.docFile && !document.docSource\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FileUpload } from 'primeng/fileupload';\r\n\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidoDocumentationDTO } from '../../../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { FileUtils } from '../../../../../shared/utils/file-utils';\r\n\r\n@Component({\r\n  selector: 'aw-operation-import-popup',\r\n  templateUrl: './operation-import-popup.component.html'\r\n})\r\nexport class OperationImportPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Output() public displayChange: EventEmitter<boolean>;\r\n  @Input() public document: BidoDocumentationDTO;\r\n  @Input() public isReadOnlyForm: boolean;\r\n  @Output() public onValidated: EventEmitter<BidoDocumentationDTO>;\r\n\r\n  public readonly componentId: string;\r\n  public displayValue: boolean;\r\n  public types: LabelValue<string>[];\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'SbadFormComponent');\r\n\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidoDocumentationDTO>();\r\n\r\n    this.loadTypes();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (!this.document) {\r\n      this.document = {};\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.document);\r\n    this.display = false;\r\n  }\r\n\r\n  private loadTypes(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.DOC_PARTNER_CATEGORY_MAP).subscribe(\r\n      (results) => {\r\n        this.types = results || [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.componentId + '.errorOnGetTypes');\r\n      }\r\n    );\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (event.files) {\r\n      const file: File = event.files[0];\r\n      FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n        if (fileContent) {\r\n          this.document.docFile = fileContent;\r\n          this.document.docName = file.name;\r\n          this.document.docPublicationDate = new Date();\r\n        }\r\n      });\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DialogBireDocumentModule } from '../../../shared/components/dialog-bire-document/dialog-bire-document.module';\r\nimport { DialogSearchPartModule } from '../../../shared/components/dialog-search-part/dialog-search-part.module';\r\nimport { DialogTableModule } from '../../../shared/components/dialog-table/dialog-table.module';\r\nimport { DynamicAttributesModule } from '../../../shared/components/dynamic-attributes/dynamic-attributes.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { StatusUpdateHistoryModule } from '../../../shared/components/status-update-history/status-update-history.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { DialogComponentsComponent } from './form/dialog-components/dialog-components.component';\r\nimport { OperationFormComponent } from './form/operation-form.component';\r\nimport { OperationFormService } from './form/operation-form.service';\r\nimport { OperationImportPopupComponent } from './form/operation-import-popup/operation-import-popup.component';\r\nimport { OperationSearchComponent } from './search/operation-search.component';\r\nimport { OperationSearchService } from './search/operation-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DropdownModule,\r\n  FileUploadModule,\r\n  InputTextareaModule,\r\n  KeyFilterModule,\r\n  MessageModule,\r\n  PrimeNgTableModule,\r\n  TooltipModule,\r\n  DialogSearchPartModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [\r\n  DialogBireDocumentModule,\r\n  ComponentSidebarModule,\r\n  DialogTableModule,\r\n  DynamicAttributesModule,\r\n  ModalModule,\r\n  StatusUpdateHistoryModule,\r\n  TableModule\r\n];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogComponentsComponent, OperationImportPopupComponent];\r\n\r\nconst DYNAMIC_COMPONENTS = [OperationFormComponent, OperationSearchComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [OperationFormService, OperationSearchService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class OperationModule {}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ \\\"page.searchPage\\\" | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"createNewOperation()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row search-criteria-header\\\">\\r\\n                  <i\\r\\n                    class=\\\"fa fa-fw fa-undo aw-icon aw-icon-with-border search-criteria-action\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    pTooltip=\\\"{{ 'global.reset' | translate }}\\\"\\r\\n                    tooltipPosition=\\\"top\\\"\\r\\n                    (click)=\\\"resetSearchCriteria()\\\"\\r\\n                  ></i>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".opeCode\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.opeCode\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".opeVersion\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.opeVersion\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".rangeCode\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.rangeCode\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".opeSequenceNumber\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.opeSequenceNumber\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"display--flex-row flex--1\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".opeChapter\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.opeChapter\\\" maxlength=\\\"2\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".opeSection\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.opeSection\\\" maxlength=\\\"2\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".opeSubject\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.opeSubject\\\" maxlength=\\\"2\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"display--flex-row flex--1\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".opeSheet\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.opeSheet\\\" maxlength=\\\"5\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".opeMarks\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.opeMarks\\\" maxlength=\\\"5\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group flex--2\\\"></div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"advanced-criteria\\\" [ngClass]=\\\"{ 'display--none': !showAdvancedCriteria }\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".opeDesignation\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.opeDesignation\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".opeDescription\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.opeDescription\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group flex--2\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <button mat-button (click)=\\\"showAdvancedCriteria = !showAdvancedCriteria\\\">\\r\\n                    <ng-container *ngIf=\\\"showAdvancedCriteria\\\">\\r\\n                      <mat-icon>remove</mat-icon>\\r\\n                      {{ \\\"global.collapseCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"!showAdvancedCriteria\\\">\\r\\n                      <mat-icon>add</mat-icon>\\r\\n                      {{ \\\"global.expandCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                  </button>\\r\\n\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      class=\\\"btn-with-spinner\\\"\\r\\n                      (click)=\\\"search()\\\"\\r\\n                      color=\\\"primary\\\"\\r\\n                      appKeyPress\\r\\n                      [keyCode]=\\\"'Enter'\\\"\\r\\n                      (keyPress)=\\\"search()\\\"\\r\\n                    >\\r\\n                      <span *ngIf=\\\"isLoading\\\" class=\\\"lds-hourglass\\\"></span>\\r\\n                      {{ \\\"global.toSearch\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }} ({{\\r\\n                    operationTableDataSource ? operationTableDataSource.dataCount : 0\\r\\n                  }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <a-table [dataSource]=\\\"operationTableDataSource\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    *ngIf=\\\"\\r\\n                      operationTableDataSource &&\\r\\n                      operationTableDataSource.hasData &&\\r\\n                      !operationTableDataSource.hasDataSelection\\r\\n                    \\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportTable()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"hasManageAccessRight && operationTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteSelectedOperations()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"operationTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openSelectedOperations()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n                <ng-template columnDef=\\\"opeCode\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <a (click)=\\\"openOperationLink(rowData)\\\"> {{ rowData.opeCode }} </a>\\r\\n                </ng-template>\\r\\n                <ng-template columnDef=\\\"isOperator\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i\\r\\n                    *ngIf=\\\"rowData.isOperator !== null && rowData.isOperator\\\"\\r\\n                    class=\\\"fa fa-fw fa-check\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  ></i>\\r\\n                </ng-template>\\r\\n                <ng-template columnDef=\\\"isOwner\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i\\r\\n                    *ngIf=\\\"rowData.isOwner !== null && rowData.isOwner\\\"\\r\\n                    class=\\\"fa fa-fw fa-check\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                  ></i>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\n\r\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { ExportService } from '../../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { BireOperationDTOId } from '../../../../shared/types/api-types/bire-operation-dto-id.interface';\r\nimport { BireOperationDTO } from '../../../../shared/types/api-types/bire-operation-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\n\r\nimport { OperationSearchService } from './operation-search.service';\r\n\r\ninterface ExportOperationSearchDTO {\r\n  opeCode?: string;\r\n  opeVersion?: string;\r\n  opeDesignation?: string;\r\n  rangeCode?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-operation-search',\r\n  templateUrl: './operation-search.component.html'\r\n})\r\nexport class OperationSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public newItem = false;\r\n  public isLoading: boolean;\r\n\r\n  public operationTableDataSource: TableDataSource<BireOperationDTO>;\r\n  public searchObject: BireOperationDTO;\r\n  public isReadOnlyForm: boolean;\r\n  public isNewOperationForm: boolean;\r\n  public newOperationForm: BireOperationDTO;\r\n  public operation: BireOperationDTO;\r\n  public tabModeValue: ComponentOpenMode;\r\n  public showAdvancedCriteria: boolean;\r\n\r\n  private readonly resultsTableExportName: string;\r\n\r\n  public exportList: ExportOperationSearchDTO[];\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly exportService: ExportService,\r\n    private readonly operationSearchService: OperationSearchService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.resultsTableExportName = 'operation-list';\r\n    this.isLoading = false;\r\n    this.isReadOnlyForm = false;\r\n    this.isNewOperationForm = false;\r\n\r\n    this.newOperationForm = {};\r\n\r\n    this.operation = {};\r\n\r\n    this.searchObject = {};\r\n\r\n    this.initOperationTableDataSource();\r\n\r\n    this.showAdvancedCriteria = false;\r\n\r\n    this.exportList = [];\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ENG_OPERATION_SEARCH;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  private initOperationTableDataSource(): void {\r\n    this.operationTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'opeCode',\r\n          translateKey: this.getTranslateKey('opeCode')\r\n        },\r\n        {\r\n          field: 'opeVersion',\r\n          translateKey: this.getTranslateKey('opeVersion')\r\n        },\r\n        {\r\n          field: 'rangeCode',\r\n          translateKey: this.getTranslateKey('rangeCode')\r\n        },\r\n        {\r\n          field: 'opeDesignation',\r\n          translateKey: this.getTranslateKey('opeDesignation')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private openOperation(object: BireOperationDTOId | undefined, openMode: ComponentOpenMode): void {\r\n    const labelKey = 'transaction.OperationSearchComponent';\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: 'OperationFormComponent',\r\n      objectId: this.serializationService.serialize(object),\r\n      openMode\r\n    };\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public openOperationLink(object: BireOperationDTOId): void {\r\n    this.openOperation(object, ComponentOpenMode.Read);\r\n  }\r\n\r\n  public createNewOperation(): void {\r\n    this.openOperation(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  public openSelectedOperations(): void {\r\n    this.operationTableDataSource.dataSelection.forEach((selectedOperation) => {\r\n      if (selectedOperation) {\r\n        if (selectedOperation.opeCode && selectedOperation.opeVersion && selectedOperation.rangeCode) {\r\n          const selectedOperationId: BireOperationDTOId = {\r\n            opeCode: selectedOperation.opeCode,\r\n            opeVersion: selectedOperation.opeVersion,\r\n            rangeCode: selectedOperation.rangeCode\r\n          };\r\n          this.openOperation(selectedOperationId, ComponentOpenMode.Read);\r\n        } else {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingCustomerCode'));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteSelectedOperations(): void {\r\n    const partialMessageKey =\r\n      this.operationTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedOperations'\r\n        : 'confirmDeleteSelectedOperation';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.operationTableDataSource.dataSelection.forEach((operation) => {\r\n          if (operation && operation.opeCode && operation.opeVersion && operation.rangeCode) {\r\n            const operationId: BireOperationDTOId = {\r\n              opeCode: operation.opeCode,\r\n              rangeCode: operation.rangeCode,\r\n              opeVersion: operation.opeVersion\r\n            };\r\n            this.operationSearchService.removeBireOperation(operationId).subscribe(() => {\r\n              this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteOperation'));\r\n              this.search();\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public resetResultsTable(table: Table): void {\r\n    table.reset();\r\n    table.filters = {};\r\n  }\r\n\r\n  public saveSearchCriteria(): void {\r\n    this.searchObject = this.newOperationForm;\r\n  }\r\n\r\n  public resetSearchCriteria(): void {\r\n    this.searchObject = {};\r\n  }\r\n\r\n  public search(): void {\r\n    this.isLoading = true;\r\n    this.operationTableDataSource.setData([]);\r\n    this.operationSearchService.findBireOperationsBySearchCriteria(this.searchObject).subscribe(\r\n      (result) => {\r\n        this.isLoading = false;\r\n        this.setResultsTable(result);\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetResults'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private setResultsTable(resultsTable: SearchResultsDTO<BireOperationDTO>): void {\r\n    if (resultsTable) {\r\n      this.operationTableDataSource.setData(resultsTable.list);\r\n      this.operationTableDataSource.dataSrc.forEach((result) => {\r\n        const exportElement: ExportOperationSearchDTO = {\r\n          opeCode: result.opeCode,\r\n          opeVersion: result.opeVersion,\r\n          rangeCode: result.rangeCode,\r\n          opeDesignation: result.opeDesignation\r\n        };\r\n        this.exportList.push(exportElement);\r\n      });\r\n    }\r\n\r\n    this.operationTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  public exportTable(): void {\r\n    if (!!this.operationTableDataSource && !!this.componentData) {\r\n      this.exportService.toExcel(this.exportList, this.resultsTableExportName, this.componentData.componentId);\r\n    } else {\r\n      super.throwUnboundLocalError('exportTable', 'this.resultsTable');\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { TaskManagementApi } from '../../../../shared/api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { BireOperationDTOId } from '../../../../shared/types/api-types/bire-operation-dto-id.interface';\r\nimport { BireOperationDTO } from '../../../../shared/types/api-types/bire-operation-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable()\r\nexport class OperationSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly taskManagementApi: TaskManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBireOperationsBySearchCriteria(\r\n    criteria: BireOperationDTO\r\n  ): Observable<SearchResultsDTO<BireOperationDTO>> {\r\n    return super.post<BireOperationDTO, SearchResultsDTO<BireOperationDTO>>(\r\n      this.taskManagementApi.findBireOperationsBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public removeBireOperation(p: BireOperationDTOId): Observable<void> {\r\n    return super.post<BireOperationDTOId, void>(this.taskManagementApi.removeBireOperation, p);\r\n  }\r\n}\r\n","import { ConnectedPosition, Overlay, OverlayConfig, PositionStrategy } from '@angular/cdk/overlay';\r\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\r\nimport { Injectable, Injector, Type } from '@angular/core';\r\n\r\nimport { OverlayRef } from './overlay-ref';\r\nimport { OverlayComponent } from './overlay.component';\r\n\r\nexport interface OverlayParams {\r\n  content: Type<unknown>;\r\n  data?: unknown;\r\n  hasBackdrop?: boolean;\r\n  hasVisibleBackdrop?: boolean;\r\n  height?: number | string;\r\n  width?: number | string;\r\n}\r\n\r\nexport interface OverlayWithGlobalPositionParams extends OverlayParams {\r\n  positions: { bottom?: string; left?: string; right?: string; top?: string };\r\n}\r\n\r\nexport interface OverlayWithRelativePositionParams extends OverlayParams {\r\n  origin: HTMLElement;\r\n  positions?: ConnectedPosition[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OverlayService {\r\n  public constructor(private readonly _injector: Injector, private readonly _overlay: Overlay) {}\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public openWithPositionAbsolute<T>(params: OverlayWithGlobalPositionParams): OverlayRef<T> {\r\n    return this.open(params, this.getConfig(params, this.getPositionAbsolute(params)));\r\n  }\r\n\r\n  public openWithPositionCenter<T>(params: OverlayParams): OverlayRef<T> {\r\n    return this.open(\r\n      params,\r\n      this.getConfig(\r\n        { ...params, hasVisibleBackdrop: params.hasVisibleBackdrop !== undefined ? params.hasVisibleBackdrop : true },\r\n        this.getPositionCenter()\r\n      )\r\n    );\r\n  }\r\n\r\n  public openWithPositionRelative<T>(params: OverlayWithRelativePositionParams): OverlayRef<T> {\r\n    return this.open(params, this.getConfig(params, this.getPositionRelative(params)));\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  private createInjector<T>(overlayRef: OverlayRef<T>, injector: Injector): PortalInjector {\r\n    const tokens = new WeakMap([[OverlayRef, overlayRef]]);\r\n\r\n    return new PortalInjector(injector, tokens);\r\n  }\r\n\r\n  private getConfig(params: OverlayParams, positionStrategy: PositionStrategy): OverlayConfig {\r\n    const hasBackdrop = params.hasBackdrop !== undefined ? params.hasBackdrop : true;\r\n\r\n    return new OverlayConfig({\r\n      hasBackdrop,\r\n      positionStrategy,\r\n      backdropClass: hasBackdrop && params.hasVisibleBackdrop ? 'cdk-overlay-dark-backdrop' : '',\r\n      height: params.height,\r\n      scrollStrategy: this._overlay.scrollStrategies.reposition(),\r\n      width: params.width\r\n    });\r\n  }\r\n\r\n  private getPositionAbsolute(params: OverlayWithGlobalPositionParams): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .bottom(params.positions.bottom)\r\n      .left(params.positions.left)\r\n      .right(params.positions.right)\r\n      .top(params.positions.top);\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private getPositionCenter(): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .centerHorizontally()\r\n      .centerVertically();\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private getPositionRelative(params: OverlayWithRelativePositionParams): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .flexibleConnectedTo(params.origin)\r\n      .withPositions(params.positions || [])\r\n      .withFlexibleDimensions(false)\r\n      .withPush(false);\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private open<T>(params: OverlayParams, overlayConfig: OverlayConfig): OverlayRef<T> {\r\n    const cdkOverlayRef = this._overlay.create(overlayConfig);\r\n    const overlayRef = new OverlayRef<T>(cdkOverlayRef, params.content, params.data);\r\n\r\n    const injector = this.createInjector(overlayRef, this._injector);\r\n    cdkOverlayRef.attach(new ComponentPortal(OverlayComponent, undefined, injector));\r\n\r\n    return overlayRef;\r\n  }\r\n}\r\n","import * as FileSaver from 'file-saver';\r\n\r\nimport { NumberUtils } from './number-utils';\r\n\r\nexport class FileUtils {\r\n  public static readonly KIBIOCTET: number = 1024;\r\n  public static readonly KILOOCTET: number = 1000;\r\n\r\n  public static downloadFile(file: Uint8Array | undefined, fileName: string | undefined): void {\r\n    if (!!file && !!fileName) {\r\n      const byteCharacters = atob(file.toString());\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n\r\n      FileSaver.saveAs(new Blob([new Uint8Array(byteNumbers)]), fileName);\r\n    }\r\n  }\r\n\r\n  public static getExtension(fileName: string | undefined): string {\r\n    return !!fileName && fileName.includes('.') ? fileName.substring(fileName.lastIndexOf('.') + 1) : '';\r\n  }\r\n\r\n  public static getFileContentAsBase64(file: File | undefined, callback: (fileContent: Uint8Array) => void): void {\r\n    if (!!file) {\r\n      const reader: FileReader = new FileReader();\r\n      reader.onloadend = () => {\r\n        let fileContent: any = reader.result; // tslint:disable-line:no-any\r\n        fileContent = fileContent.substring((fileContent.indexOf(',') as number) + 1); // Remove data:*/*;base64,\r\n        callback(fileContent);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  public static getFormattedSize(size: number | undefined): string {\r\n    if (!!size) {\r\n      return size / FileUtils.KILOOCTET < FileUtils.KILOOCTET\r\n        ? `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET)} Ko`\r\n        : `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET / FileUtils.KILOOCTET)} Mo`;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n","import { LabelValue } from '../types/label-value.interface';\r\n\r\nimport { StringUtils } from './string-utils';\r\n\r\nexport class SettingsUtils {\r\n  public static isPropertyEnabled(settings: LabelValue<string>[], propertyInput: string): boolean {\r\n    const selectedProperty = settings.find((property) => property.value === propertyInput);\r\n\r\n    return (\r\n      !!selectedProperty &&\r\n      !StringUtils.isNullOrEmpty(selectedProperty.label) &&\r\n      (selectedProperty.label.trim().toUpperCase() === 'X' ||\r\n        selectedProperty.label === '1' ||\r\n        selectedProperty.label.trim().toUpperCase() === 'TRUE')\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}