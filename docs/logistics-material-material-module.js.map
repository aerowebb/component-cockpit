{"version":3,"sources":["webpack:///./node_modules/primeng/inputtextarea.js","webpack:///./node_modules/primeng/keyfilter.js","webpack:///./node_modules/primeng/message.js","webpack:///./node_modules/primeng/radiobutton.js","webpack:///./src/app/main/logistics/material/form/material-form.component.html","webpack:///./src/app/main/logistics/material/form/material-form.component.scss","webpack:///./src/app/main/logistics/material/form/material-form.component.ts","webpack:///./src/app/main/logistics/material/form/popups/assign-alternative-popup-form/assign-alternative-popup-form.component.html","webpack:///./src/app/main/logistics/material/form/popups/assign-alternative-popup-form/assign-alternative-popup-form.component.ts","webpack:///./src/app/main/logistics/material/form/popups/assign-container-popup-form/assign-container-popup-form.component.html","webpack:///./src/app/main/logistics/material/form/popups/assign-container-popup-form/assign-container-popup-form.component.ts","webpack:///./src/app/main/logistics/material/form/popups/assign-supplier-popup-form/assign-supplier-popup-form.component.html","webpack:///./src/app/main/logistics/material/form/popups/assign-supplier-popup-form/assign-supplier-popup-form.component.ts","webpack:///./src/app/main/logistics/material/form/popups/assign-supply-conversion-popup-form/assign-supply-conversion-popup-form.component.html","webpack:///./src/app/main/logistics/material/form/popups/assign-supply-conversion-popup-form/assign-supply-conversion-popup-form.component.ts","webpack:///./src/app/main/logistics/material/form/popups/assign-valuation-popup-form/assign-valuation-popup-form.component.html","webpack:///./src/app/main/logistics/material/form/popups/assign-valuation-popup-form/assign-valuation-popup-form.component.ts","webpack:///./src/app/main/logistics/material/form/popups/assign-warehouse-popup-form/assign-warehouse-popup-form.component.html","webpack:///./src/app/main/logistics/material/form/popups/assign-warehouse-popup-form/assign-warehouse-popup-form.component.ts","webpack:///./src/app/main/logistics/material/form/popups/popup-form.component.scss","webpack:///./src/app/main/logistics/material/material.module.ts","webpack:///./src/app/main/logistics/material/search/material-search.component.html","webpack:///./src/app/main/logistics/material/search/material-search.component.ts","webpack:///./src/app/main/logistics/material/search/material-search.service.ts","webpack:///./src/app/main/maintenance/work-package/form/popups/dialog-work-order-edition/dialog-work-order-edition.service.ts","webpack:///./src/app/main/overlay/overlay.service.ts","webpack:///./src/app/shared/utils/label-value-utils.ts"],"names":[],"mappings":"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","file":"logistics-material-material-module.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputtextarea/inputtextarea\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/keyfilter/keyfilter\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/message/message\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/radiobutton/radiobutton\"));","module.exports = \"<div #page *ngIf=\\\"loadedWorkflow\\\">\\r\\n  <div class=\\\"page-header\\\">\\r\\n    <div class=\\\"page-info\\\">\\r\\n      <div>\\r\\n        <h2 class=\\\"page-title\\\">\\r\\n          {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n        </h2>\\r\\n\\r\\n        <div class=\\\"page-subtitle\\\">\\r\\n          <div *ngIf=\\\"componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n            - {{ serializationService.deserialize(componentData.objectId)[\\\"pnCode\\\"] }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"object-status\\\" *ngIf=\\\"materialFieldData.statusState\\\" (click)=\\\"showStatus()\\\">\\r\\n          {{ materialFieldData.statusState | formatSelectOption: workflowStatus }}\\r\\n        </div>\\r\\n        <div class=\\\"object-is-incomplete\\\" *ngIf=\\\"materialFieldData.incompletePartForSupply && !isCreateOpenMode\\\">\\r\\n          {{ componentData.componentId + \\\".materialIsIncomplete\\\" | translate }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-actions\\\">\\r\\n      <button\\r\\n        id=\\\"edit\\\"\\r\\n        *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\"\\r\\n        type=\\\"button\\\"\\r\\n        mat-raised-button\\r\\n        (click)=\\\"editMaterial()\\\"\\r\\n      >\\r\\n        {{ \\\"global.edit\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button\\r\\n        *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n        type=\\\"button\\\"\\r\\n        color=\\\"warn\\\"\\r\\n        mat-raised-button\\r\\n        (click)=\\\"cancelMaterial()\\\"\\r\\n      >\\r\\n        {{ \\\"global.cancel\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button\\r\\n        id=\\\"save\\\"\\r\\n        *ngIf=\\\"!isReadOpenMode\\\"\\r\\n        class=\\\"btn-with-spinner\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        type=\\\"button\\\"\\r\\n        mat-raised-button\\r\\n        (click)=\\\"saveMaterial()\\\"\\r\\n      >\\r\\n        <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n        {{ \\\"global.save\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button\\r\\n        mat-icon-button\\r\\n        class=\\\"mat-elevation-z1\\\"\\r\\n        matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n        matTooltipPosition=\\\"above\\\"\\r\\n        aria-label=\\\"Show all actions\\\"\\r\\n        [matMenuTriggerFor]=\\\"actions\\\"\\r\\n      >\\r\\n        <mat-icon>more_horiz</mat-icon>\\r\\n      </button>\\r\\n      <mat-menu #actions=\\\"matMenu\\\">\\r\\n        <button mat-menu-item (click)=\\\"showCreateProcurementDialog()\\\" *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\">\\r\\n          {{ \\\"createProcurementRequest\\\" | translate }}\\r\\n        </button>\\r\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"navigations\\\">\\r\\n          {{ \\\"global.goTo\\\" | translate }}\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"reloadMaterial()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n        <button mat-menu-item (click)=\\\"openStatusUpdatesPopup()\\\">{{ \\\"updates\\\" | translate }}</button>\\r\\n        <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">{{ \\\"addToFavorite\\\" | translate }}</button>\\r\\n      </mat-menu>\\r\\n      <mat-menu #navigations=\\\"matMenu\\\">\\r\\n        <button *ngIf=\\\"!isCreateOpenMode\\\" type=\\\"button\\\" mat-menu-item (click)=\\\"navigationLinkList[0].command()\\\">\\r\\n          {{ navigationLinkList[0].label | translate }}\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-wrapper\\\">\\r\\n    <div class=\\\"page-container\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div id=\\\"main\\\" #mainAnchor class=\\\"grid-cell--5\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ \\\"page.mainData\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div id=\\\"pnCode\\\" class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".code\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            maxlength=\\\"25\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.pnCode\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div id=\\\"articleDesignation\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".name\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            maxlength=\\\"100\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.articleDesignation\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div id=\\\"pnType\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".materialType\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [options]=\\\"materialType\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.pnType\\\"\\r\\n                            (onChange)=\\\"enableEngieeringView()\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div id=\\\"quantityUnit\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".quantityUnit\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [options]=\\\"quantityUnit\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.quantityUnit\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div id=\\\"traceability\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".traceability\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [options]=\\\"traceability\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.traceability\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div id=\\\"storageConditionValue\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".storageCondition\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [options]=\\\"storageCondition\\\"\\r\\n                            [(ngModel)]=\\\"storageConditionValue\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div id=\\\"otanPnReference\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".otanPnReference\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.otanPnReference\\\"\\r\\n                            maxlength=\\\"20\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".sparePartClass\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.sparePartClassCode\\\"\\r\\n                            [options]=\\\"sparePartClassOptions\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--7 grid-cell--no-padding\\\">\\r\\n              <div class=\\\"grid-row\\\">\\r\\n                <div class=\\\"grid-cell--12\\\">\\r\\n                  <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                    <div class=\\\"grid-cell-header\\\">\\r\\n                      <div class=\\\"grid-cell-title-container\\\">\\r\\n                        <h3 id=\\\"alternativeTableTitle\\\" class=\\\"grid-cell-title\\\">\\r\\n                          {{ componentData.componentId + \\\".expiration\\\" | translate }}\\r\\n                        </h3>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div id=\\\"expirationDuration\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".duration\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              #expirationDuration=\\\"ngModel\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n                              [pValidateOnly]=\\\"true\\\"\\r\\n                              maxlength=\\\"50\\\"\\r\\n                              [(ngModel)]=\\\"materialFieldData.expirationDuration\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                            <p-message\\r\\n                              *ngIf=\\\"\\r\\n                                expirationDuration.invalid && (expirationDuration.dirty || expirationDuration.touched)\\r\\n                              \\\"\\r\\n                              severity=\\\"error\\\"\\r\\n                              [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n                            ></p-message>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div id=\\\"expirationUnit\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".unit\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [options]=\\\"expirationUnit\\\"\\r\\n                              [(ngModel)]=\\\"materialFieldData.expirationUnit\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              appendTo=\\\"body\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div id=\\\"expirationThreshold\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".alertThreshold\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              #expirationThreshold=\\\"ngModel\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n                              [pValidateOnly]=\\\"true\\\"\\r\\n                              maxlength=\\\"50\\\"\\r\\n                              [(ngModel)]=\\\"materialFieldData.expirationThreshold\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                            <p-message\\r\\n                              *ngIf=\\\"\\r\\n                                expirationThreshold.invalid &&\\r\\n                                (expirationThreshold.dirty || expirationThreshold.touched)\\r\\n                              \\\"\\r\\n                              severity=\\\"error\\\"\\r\\n                              [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n                            ></p-message>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div id=\\\"expirationThresholdUnit\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".alertThresholdUnit\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [options]=\\\"expirationThresholdUnit\\\"\\r\\n                              [(ngModel)]=\\\"materialFieldData.expirationThresholdUnit\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              appendTo=\\\"body\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-row\\\">\\r\\n                <div class=\\\"grid-cell--12\\\">\\r\\n                  <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                    <div class=\\\"grid-cell-header\\\">\\r\\n                      <div class=\\\"grid-cell-title-container\\\">\\r\\n                        <h3 id=\\\"alternativeTableTitle\\\" class=\\\"grid-cell-title\\\">\\r\\n                          {{ componentData.componentId + \\\".alternatives\\\" | translate }}\\r\\n                          ({{ alternativeTable ? alternativeTable.length : 0 }})\\r\\n                        </h3>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                      <p-table\\r\\n                        id=\\\"alternativeTable\\\"\\r\\n                        [resizableColumns]=\\\"true\\\"\\r\\n                        #ptableAlternative\\r\\n                        class=\\\"aw-table2\\\"\\r\\n                        [columns]=\\\"alternativeTableCols\\\"\\r\\n                        [value]=\\\"alternativeTable\\\"\\r\\n                        [(selection)]=\\\"selectedAlternatives\\\"\\r\\n                        [scrollable]=\\\"true\\\"\\r\\n                      >\\r\\n                        <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                          <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                          <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                            <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                            <div class=\\\"lds-hourglass\\\"></div>\\r\\n                          </div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <ng-template pTemplate=\\\"caption\\\">\\r\\n                          <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedAlternatives.length > 0 }\\\">\\r\\n                            <div class=\\\"aw-table-global-filter\\\">\\r\\n                              <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                                <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                              </label>\\r\\n\\r\\n                              <input\\r\\n                                #ptableAlternativeGlobalFilter\\r\\n                                class=\\\"aw-table-global-filter-input\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                                (input)=\\\"ptableAlternative.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"aw-table-actions\\\">\\r\\n                              <button\\r\\n                                id=\\\"deleteAlternative\\\"\\r\\n                                *ngIf=\\\"!isReadOpenMode && selectedAlternatives.length > 0\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                mat-raised-button\\r\\n                                color=\\\"warn\\\"\\r\\n                                (click)=\\\"deleteAlternative()\\\"\\r\\n                              >\\r\\n                                {{ \\\"global.delete\\\" | translate }}\\r\\n                              </button>\\r\\n\\r\\n                              <button\\r\\n                                id=\\\"editAlternative\\\"\\r\\n                                *ngIf=\\\"!isReadOpenMode && selectedAlternatives.length === 1\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                mat-raised-button\\r\\n                                (click)=\\\"editAlternative()\\\"\\r\\n                              >\\r\\n                                {{ \\\"global.edit\\\" | translate }}\\r\\n                              </button>\\r\\n                              <button\\r\\n                                id=\\\"openAlternative\\\"\\r\\n                                *ngIf=\\\"!isReadOpenMode && selectedAlternatives.length === 1\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                mat-raised-button\\r\\n                                (click)=\\\"openAlternative()\\\"\\r\\n                              >\\r\\n                                {{ \\\"global.open\\\" | translate }}\\r\\n                              </button>\\r\\n                              <button\\r\\n                                id=\\\"addAlternative\\\"\\r\\n                                *ngIf=\\\"!isReadOpenMode && selectedAlternatives.length === 0\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                mat-raised-button\\r\\n                                (click)=\\\"addAlternative()\\\"\\r\\n                              >\\r\\n                                {{ \\\"global.add\\\" | translate }}\\r\\n                              </button>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                          <colgroup>\\r\\n                            <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                            <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                          </colgroup>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                          <tr>\\r\\n                            <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                              <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                            </th>\\r\\n\\r\\n                            <th\\r\\n                              pResizableColumn\\r\\n                              *ngFor=\\\"let col of columns\\\"\\r\\n                              [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                            >\\r\\n                              {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                              <!-- materialFieldData.pnCode -->\\r\\n                            </th>\\r\\n                          </tr>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                          <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                            <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                              <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                            </td>\\r\\n\\r\\n                            <td\\r\\n                              *ngFor=\\\"let col of columns\\\"\\r\\n                              [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                              [ngSwitch]=\\\"col.field\\\"\\r\\n                            >\\r\\n                              <span *ngSwitchCase=\\\"'birePnByFkBidtPnBidtPn2BirePnPnCode'\\\">\\r\\n                                <div *ngIf=\\\"rowData[col.field] !== materialFieldData.pnCode\\\">\\r\\n                                  {{ rowData[col.field] }}\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"rowData[col.field] === materialFieldData.pnCode\\\">\\r\\n                                  {{ rowData[\\\"birePnByFkBidtPnBidtPn1BirePnPnCode\\\"] }}\\r\\n                                </div>\\r\\n                              </span>\\r\\n                              <span *ngSwitchDefault>\\r\\n                                {{ rowData[col.field] }}\\r\\n                              </span>\\r\\n                            </td>\\r\\n                          </tr>\\r\\n                        </ng-template>\\r\\n                      </p-table>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ getComponentName() + \\\".logistics\\\" | translate }}\\r\\n          </ng-template>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div id=\\\"warhouse\\\" #warhouseAnchor class=\\\"grid-cell--12\\\" (click)=\\\"setSelectedAnchor('warhouseAnchor')\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\" [ngClass]=\\\"{ active: isSelectedAnchor('warhouseAnchor') }\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 id=\\\"warehouseTableTitle\\\" class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".warehouses\\\" | translate }}\\r\\n                      ({{ warehouseTable ? warehouseTable.length : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    id=\\\"warehouseTable\\\"\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableWarehouse\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"warehouseTableCols\\\"\\r\\n                    [value]=\\\"warehouseTable\\\"\\r\\n                    [(selection)]=\\\"selectedWarehouse\\\"\\r\\n                    dataKey=\\\"dataId\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedWarehouse.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableWarehouseGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableWarehouse.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            id=\\\"deleteWarehouse\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedWarehouse.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteWarehouse()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            id=\\\"goToStockStatus\\\"\\r\\n                            *ngIf=\\\"selectedWarehouse.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"goToStockStatus()\\\"\\r\\n                          >\\r\\n                            {{ componentData.componentId + \\\".stockStatus\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            id=\\\"editWarehouse\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedWarehouse.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editWarehouse()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            id=\\\"openWarehouse\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedWarehouse.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openWarehouse()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            id=\\\"addWarehouse\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedWarehouse.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"addWarehouse()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div id=\\\"valuation\\\" class=\\\"grid-cell--3\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 id=\\\"valuationTableTitle\\\" class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".valuation\\\" | translate }}\\r\\n                      ({{ valuationTable ? valuationTable.length : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    id=\\\"valuationTable\\\"\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableValuation\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"valuationTableCols\\\"\\r\\n                    [value]=\\\"valuationTable\\\"\\r\\n                    [(selection)]=\\\"selectedValuation\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedValuation.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableValuationGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableValuation.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            id=\\\"deleteValuation\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedValuation.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteValuation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            id=\\\"editValuation\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedValuation.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editValuation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            id=\\\"openValuation\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedValuation.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openValuation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            id=\\\"addValuation\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedValuation.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"addValuation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n                        <td\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngSwitch]=\\\"col.field\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                        >\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div id=\\\"customerEvolutionTablePanel\\\" class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 id=\\\"customerEvolutionTableTitle\\\" class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".suppliers\\\" | translate }}\\r\\n                      ({{ supplierTable ? supplierTable.length : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    id=\\\"customerEvolutionTable\\\"\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableSuppliers\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"suppliersTableCols\\\"\\r\\n                    [value]=\\\"supplierTable\\\"\\r\\n                    [(selection)]=\\\"selectedSuppliers\\\"\\r\\n                    dataKey=\\\"dataId\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedSuppliers.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableSuppliersGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableSuppliers.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            id=\\\"deleteSupplier\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedSuppliers.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteSupplier()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            id=\\\"editSupplier\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedSuppliers.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editSupplier()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            id=\\\"openSupplier\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedSuppliers.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openSupplier()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            id=\\\"addSupplier\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedSuppliers.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"addSupplier()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngSwitch]=\\\"col.field\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                        >\\r\\n                          <a *ngSwitchCase=\\\"'supplierName'\\\" (click)=\\\"openBussinerPartnerForm(rowData)\\\">\\r\\n                            {{ rowData[col.field] }}\\r\\n                          </a>\\r\\n                          <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell--3\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 *ngIf=\\\"isMaterialContainer()\\\" class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".pnContent\\\" | translate }}\\r\\n                      ({{ containerTable ? containerTable.length : 0 }})\\r\\n                    </h3>\\r\\n                    <h3 *ngIf=\\\"!isMaterialContainer()\\\" class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".pnContainer\\\" | translate }}\\r\\n                      ({{ containerTable ? containerTable.length : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    id=\\\"containerTable\\\"\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableContainer\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"containerTableCols\\\"\\r\\n                    [value]=\\\"containerTable\\\"\\r\\n                    [(selection)]=\\\"selectedContainer\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedContainer.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableContainersGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableContainer.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            id=\\\"deleteContainer\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedContainer.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteContainer()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            id=\\\"editContainer\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedContainer.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editContainer()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            id=\\\"openContainer\\\"\\r\\n                            *ngIf=\\\"selectedContainer.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openContainer()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            id=\\\"addContainer\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedContainer.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"addContainer()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngSwitch]=\\\"col.field\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                        >\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".furtherInformation\\\" | translate }}\\r\\n          </ng-template>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div id=\\\"furtherInformationPanel\\\" class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".furtherInformation\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".avgPrice\\\" | translate }}</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            (ngModelChange)=\\\"materialFieldData.averagePrice = $event\\\"\\r\\n                            [ngModel]=\\\"materialFieldData.averagePrice\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            style=\\\"width:65%\\\"\\r\\n                            maxlength=\\\"15\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                          <span style=\\\"width:35%;padding-top:1em; float:right\\\">{{ priceCurrency }}</span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".avgPriceUnit\\\" | translate }}</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"unitOfIssueOptions\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.unitOfIssue\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            appendTo=\\\"body\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".quantity\\\" | translate }}</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            (ngModelChange)=\\\"materialFieldData.quantityPerIssue = $event\\\"\\r\\n                            [ngModel]=\\\"materialFieldData.quantityPerIssue | number: '1.0-2'\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            maxlength=\\\"15\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div id=\\\"accounting\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".accounting\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            maxlength=\\\"50\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.accounting\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div id=\\\"mtbf\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".mtbf\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input inputs-with-unit\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.mtbf\\\"\\r\\n                            maxlength=\\\"15\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                          <span class=\\\"units\\\">{{ mtbfAndMtburUnit }}</span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div id=\\\"mtbur\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".mtbur\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input inputs-with-unit\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.mtbur\\\"\\r\\n                            maxlength=\\\"15\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                          <span class=\\\"units\\\">{{ mtbfAndMtburUnit }}</span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div id=\\\"netWeight\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".netWeight\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input inputs-with-unit\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.netWeight\\\"\\r\\n                            maxlength=\\\"15\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                          <span class=\\\"units\\\">{{ weightUnit }}</span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div id=\\\"packedWeight\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".packedWeight\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input inputs-with-unit\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.packedWeight\\\"\\r\\n                            maxlength=\\\"15\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                          <span class=\\\"units\\\">{{ weightUnit }}</span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div id=\\\"unpackedHeight\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".unpackedHeight\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input inputs-with-unit\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.unpackedHeight\\\"\\r\\n                            maxlength=\\\"15\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                          <span class=\\\"units\\\">{{ measurementsUnit }}</span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div id=\\\"unpackedLength\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".unpackedLength\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input inputs-with-unit\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.unpackedLength\\\"\\r\\n                            maxlength=\\\"15\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                          <span class=\\\"units\\\">{{ measurementsUnit }}</span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div id=\\\"unpackedWidth\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".unpackedWidth\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input inputs-with-unit\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.unpackedWidth\\\"\\r\\n                            maxlength=\\\"15\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                          <span class=\\\"units\\\">{{ measurementsUnit }}</span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div id=\\\"hasExpirationDate\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".hasExpirationDate\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-checkbox\\r\\n                            class=\\\"aw-checkbox\\\"\\r\\n                            binary=\\\"true\\\"\\r\\n                            [(ngModel)]=\\\"materialFieldData.hasExpirationDate\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-checkbox>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div id=\\\"supplyConversionTablePanel\\\" class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".supplyConversionTable\\\" | translate }}\\r\\n                      ({{ supplyConversionTable ? supplyConversionTable.length : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    id=\\\"supplyConversionTable\\\"\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableSupplyConversion\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"supplyConversionTableCols\\\"\\r\\n                    [value]=\\\"supplyConversionTable\\\"\\r\\n                    [(selection)]=\\\"selectedSupplyConversion\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedSupplyConversion.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableSupplyConversionGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableSupplyConversion.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            id=\\\"deleteSupplyConversion\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedSupplyConversion.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteSupplyConversion()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            id=\\\"editSupplyConversion\\\"\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedSupplyConversion.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editSupplyConversion()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            id=\\\"openSupplyConversion\\\"\\r\\n                            *ngIf=\\\"selectedSupplyConversion.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openSupplyConversion()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n                          <div\\r\\n                            class=\\\"hover-div\\\"\\r\\n                            pTooltip=\\\"{{ componentData.componentId + '.addHover' | translate }}\\\"\\r\\n                            [tooltipDisabled]=\\\"enableUnitOfIssue\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                          >\\r\\n                            <button\\r\\n                              id=\\\"addSupplyConversion\\\"\\r\\n                              *ngIf=\\\"!isReadOpenMode && selectedSupplyConversion.length === 0\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"addSupplyConversion()\\\"\\r\\n                              [disabled]=\\\"!enableUnitOfIssue\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.add\\\" | translate }}\\r\\n                            </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngSwitch]=\\\"col.field\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                        >\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab *ngIf=\\\"dynamicAttributes && dynamicAttributes.length\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"attributes\\\" | translate }}\\r\\n          </ng-template>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div id=\\\"attributesPanel\\\" class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".tabAttributes\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <aw-dynamic-attributes\\r\\n                    id=\\\"dynamicAttributes\\\"\\r\\n                    [attributes]=\\\"dynamicAttributes\\\"\\r\\n                    [workflowControls]=\\\"userWorkflow ? userWorkflow.listControlByIdentifier : []\\\"\\r\\n                    [isReadOpenMode]=\\\"isReadOpenMode\\\"\\r\\n                  ></aw-dynamic-attributes>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-assign-warehouse-popup-form\\r\\n    *ngIf=\\\"showWarehousePopup\\\"\\r\\n    [(display)]=\\\"showWarehousePopup\\\"\\r\\n    [warehouseDetail]=\\\"currentWarehouse\\\"\\r\\n    [openMode]=\\\"warehouseDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddWarehouse($event)\\\"\\r\\n  ></aw-assign-warehouse-popup-form>\\r\\n  <aw-status-update-history\\r\\n    *ngIf=\\\"showStatusUpdatesPopup\\\"\\r\\n    [object]=\\\"pnStatus\\\"\\r\\n    [data]=\\\"tableStatusUpdatesData\\\"\\r\\n    [deleteApi]=\\\"deleteApi\\\"\\r\\n    [isStatusEditable]=\\\"false\\\"\\r\\n    [(display)]=\\\"showStatusUpdatesPopup\\\"\\r\\n    [keyMap]=\\\"updatesKeyMap\\\"\\r\\n    (onUpdated)=\\\"updateObjectStatusFromStatusUpdatesHistory($event)\\\"\\r\\n  ></aw-status-update-history>\\r\\n  <aw-assign-supplier-popup-form\\r\\n    *ngIf=\\\"showSupplierPopup\\\"\\r\\n    [(display)]=\\\"showSupplierPopup\\\"\\r\\n    [supplierDetail]=\\\"currentSupplier\\\"\\r\\n    [priceCurrency]=\\\"priceCurrency\\\"\\r\\n    [openMode]=\\\"supplierDialogOpenMode\\\"\\r\\n    [serviceType]=\\\"serviceType\\\"\\r\\n    (onValidated)=\\\"onAddSupplier($event)\\\"\\r\\n  ></aw-assign-supplier-popup-form>\\r\\n  <aw-assign-valuation-popup-form\\r\\n    *ngIf=\\\"showValuationPopup\\\"\\r\\n    [(display)]=\\\"showValuationPopup\\\"\\r\\n    [valuationDetail]=\\\"currentValuation\\\"\\r\\n    [priceCurrency]=\\\"priceCurrency\\\"\\r\\n    [openMode]=\\\"valuationDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddValuation($event)\\\"\\r\\n  ></aw-assign-valuation-popup-form>\\r\\n  <aw-assign-alternative-popup-form\\r\\n    *ngIf=\\\"showAlternativePopup\\\"\\r\\n    [(display)]=\\\"showAlternativePopup\\\"\\r\\n    [alternativeDetail]=\\\"currentAlternative\\\"\\r\\n    [pnCode]=\\\"materialFieldData.pnCode\\\"\\r\\n    [openMode]=\\\"alternativeDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddAlternative($event)\\\"\\r\\n  ></aw-assign-alternative-popup-form>\\r\\n  <aw-assign-container-popup-form\\r\\n    *ngIf=\\\"showContainerPopup\\\"\\r\\n    [(display)]=\\\"showContainerPopup\\\"\\r\\n    [containerDetail]=\\\"currentContainer\\\"\\r\\n    [openMode]=\\\"containerDialogOpenMode\\\"\\r\\n    [pnType]=\\\"materialFieldData.pnType\\\"\\r\\n    (onValidated)=\\\"onAddContainer($event)\\\"\\r\\n  ></aw-assign-container-popup-form>\\r\\n  <aw-assign-supply-conversion-popup-form\\r\\n    *ngIf=\\\"showSupplyConversionPopup\\\"\\r\\n    [(display)]=\\\"showSupplyConversionPopup\\\"\\r\\n    [pnCode]=\\\"materialFieldData.pnCode\\\"\\r\\n    [supplyConversionDetail]=\\\"currentSupplyConversion\\\"\\r\\n    [unitOfIssueOptions]=\\\"unitOfIssueOptions\\\"\\r\\n    [openMode]=\\\"supplyConversionDialogOpenMode\\\"\\r\\n    [supplyUnit]=\\\"materialFieldData.unitOfIssue\\\"\\r\\n    (onValidated)=\\\"onAddSupplyConversion($event)\\\"\\r\\n  ></aw-assign-supply-conversion-popup-form>\\r\\n\\r\\n  <aw-procurement-request-popup\\r\\n    *ngIf=\\\"createProcurementDialogVisible\\\"\\r\\n    [(display)]=\\\"createProcurementDialogVisible\\\"\\r\\n    [pn]=\\\"materialFieldData\\\"\\r\\n    (onValidate)=\\\"onCreateProcurementRequest($event)\\\"\\r\\n  >\\r\\n  </aw-procurement-request-popup>\\r\\n</div>\\r\\n\"","module.exports = \":host .object-is-incomplete {\\n  border: 1px solid transparent;\\n  font-style: italic;\\n  justify-content: center;\\n  font-size: 1.125rem;\\n  background-color: gold;\\n  color: black;\\n  border-radius: 16px;\\n  padding: 4px 32px;\\n  margin-top: 8px;\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  font-weight: 600;\\n  display: inline-block;\\n  margin-left: 10px; }\\n  :host .object-is-incomplete.disabled {\\n    cursor: auto; }\\n  :host .inputs-with-unit {\\n  width: 85% !important; }\\n  :host .units {\\n  width: 15%;\\n  padding-top: 1em;\\n  float: right; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvbWF0ZXJpYWwvZm9ybS9kOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGdpdGh1Yl9wYWdlcy9zcmNcXGFwcFxcbWFpblxcbG9naXN0aWNzXFxtYXRlcmlhbFxcZm9ybVxcbWF0ZXJpYWwtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUVJLDZCQUE2QjtFQUM3QixrQkFBa0I7RUFDbEIsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsZUFBZTtFQUNmLDBCQUFrQjtFQUFsQix1QkFBa0I7RUFBbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixxQkFBcUI7RUFDckIsaUJBQWlCLEVBQUE7RUFkckI7SUFpQk0sWUFBWSxFQUFBO0VBakJsQjtFQXNCSSxxQkFBcUIsRUFBQTtFQXRCekI7RUEwQkksVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2xvZ2lzdGljcy9tYXRlcmlhbC9mb3JtL21hdGVyaWFsLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiY29uc3RhbnRzXCI7XHJcblxyXG46aG9zdCB7XHJcbiAgLm9iamVjdC1pcy1pbmNvbXBsZXRlIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDEuMTI1cmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ29sZDtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7XHJcbiAgICBwYWRkaW5nOiA0cHggMzJweDtcclxuICAgIG1hcmdpbi10b3A6IDhweDtcclxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuXHJcbiAgICAmLmRpc2FibGVkIHtcclxuICAgICAgY3Vyc29yOiBhdXRvO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmlucHV0cy13aXRoLXVuaXQge1xyXG4gICAgd2lkdGg6IDg1JSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgLnVuaXRzIHtcclxuICAgIHdpZHRoOiAxNSU7XHJcbiAgICBwYWRkaW5nLXRvcDogMWVtO1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MenuItem, SelectItem } from 'primeng/api';\r\nimport { Observable, forkJoin, of } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { UpdateHistoricApi } from '../../../../shared/api/update-historic.api';\r\nimport { PageTocService } from '../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { PageTocEntry } from '../../../../shared/components/component-sidebar/types/page-toc-entry.interface';\r\nimport { DialogTableData } from '../../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { DynamicAttributesService } from '../../../../shared/components/dynamic-attributes/dynamic-attributes.service';\r\nimport { DynamicAttributes } from '../../../../shared/components/dynamic-attributes/types/dynamic-attributes.interface';\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { BireUnitMeasureConstants } from '../../../../shared/constants/bire-unit-measure-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { TableColumnFilterMode } from '../../../../shared/enums/table-column-filter-mode.enum';\r\nimport { TableSelectionMode } from '../../../../shared/enums/table-selection-mode.enum';\r\nimport { FormatSelectOptionPipe } from '../../../../shared/pipes/format-select-option.pipe';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { InputValidationService } from '../../../../shared/services/input-validation.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { UpdateHistoricService } from '../../../../shared/services/update-historic.service';\r\nimport { StockStatusInput } from '../../../../shared/types/api-input-types/bidt-stock-mvt/stock-status-input.interface';\r\nimport { WareHouseTableDTO } from '../../../../shared/types/api-input-types/logistics-material/warehouse-table-dto.interface';\r\nimport { MaterialDataDTO } from '../../../../shared/types/api-output-types/logistics-material/material-data-dto.interface';\r\nimport { BidoCustomerDTOId } from '../../../../shared/types/api-types/bido-customer-dto-id.interface';\r\nimport { BidtPnAlternativeDTO } from '../../../../shared/types/api-types/bidt-pn-alternative-dto.interface';\r\nimport { BidtPriceDTO } from '../../../../shared/types/api-types/bidt-price-dto.interface';\r\nimport { BidtProcurementRequestDTO } from '../../../../shared/types/api-types/bidt-procurement-request-dto.interface';\r\nimport { BidtProductCustomerDTO } from '../../../../shared/types/api-types/bidt-product-customer-dto.interface';\r\nimport { BidtStorageBinDTO } from '../../../../shared/types/api-types/bidt-storage-bin-dto.interface';\r\nimport { BidtStorageConditionDTO } from '../../../../shared/types/api-types/bidt-storage-condition-dto.interface';\r\nimport { BireAttributeDTO } from '../../../../shared/types/api-types/bire-attribute-dto.interface';\r\nimport { BireContainerPnDTO } from '../../../../shared/types/api-types/bire-container-pn-dto.interface';\r\nimport { BirePartUnitConversionDTO } from '../../../../shared/types/api-types/bire-part-unit-conversion-dto.interface';\r\nimport { BirePnAttributeDTO } from '../../../../shared/types/api-types/bire-pn-attribute-dto.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { HistoricObjectPnDTO } from '../../../../shared/types/api-types/historic-object-pn-dto.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { DTOUtils } from '../../../../shared/utils/dto-utils';\r\nimport { SelectItemUtils } from '../../../../shared/utils/select-item-utils';\r\nimport { WorkflowUtils } from '../../../../shared/utils/workflow-utils';\r\nimport { ObjectStatusComponent } from '../../../object-status/object-status.component';\r\nimport { OverlayService } from '../../../overlay/overlay.service';\r\n\r\nimport { MaterialFormService } from './material-form.service';\r\n\r\ninterface ValuationTableRow {\r\n  valuationName?: string;\r\n  priceUnit?: string;\r\n  priceValue?: string;\r\n  unitValueText?: string;\r\n  bidtValuationGroupId?: number;\r\n}\r\ninterface SupplierTableRow {\r\n  bidoCustomerCustomerCode?: string;\r\n  productQuantity?: string;\r\n  numberOfDays?: number;\r\n  priceValue?: string;\r\n  priceUnit?: string;\r\n  supplierName?: string;\r\n  priceValueText?: string;\r\n  id?: number;\r\n  dataId: number;\r\n  serviceType?: string;\r\n}\r\ninterface ContainerTableRow {\r\n  pnCode?: string;\r\n  articleDesignation?: string;\r\n  statusUser?: string;\r\n  statusDate?: Date;\r\n  statusState?: string;\r\n}\r\ninterface SupplyConversionTableRow {\r\n  pnCode?: string;\r\n  unit?: string;\r\n  alternativeUnit?: string;\r\n  factor?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-material-form',\r\n  templateUrl: './material-form.component.html',\r\n  styleUrls: ['./material-form.component.scss']\r\n})\r\nexport class MaterialFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  @ViewChild('mainAnchor')\r\n  public mainAnchor: ElementRef;\r\n  @ViewChild('warhouseAnchor')\r\n  public warhouseAnchor: ElementRef;\r\n  @ViewChild('valuationAnchor')\r\n  public valuationAnchor: ElementRef;\r\n  @ViewChild('customerEvolutionTableAnchor')\r\n  public customerEvolutionTableAnchor: ElementRef;\r\n  @ViewChild('alternativeAnchor')\r\n  public alternativeAnchor: ElementRef;\r\n\r\n  public dynamicAttributes: DynamicAttributes[];\r\n  public materialAttributes: BirePnAttributeDTO[];\r\n\r\n  public sparePartClassOptions: LabelValue<string>[];\r\n  public deleteApi: string;\r\n  public pnStatus: BirePnDTO;\r\n  public warehouseTableCols: TableColumn[];\r\n  public suppliersTableCols: TableColumn[];\r\n  public valuationTableCols: TableColumn[];\r\n  public containerTableCols: TableColumn[];\r\n  public alternativeTableCols: TableColumn[];\r\n  public supplyConversionTableCols: TableColumn[];\r\n  public warehouseTable: WareHouseTableDTO[];\r\n  public valuationTable: ValuationTableRow[];\r\n  public supplierTable: SupplierTableRow[];\r\n  public alternativeTable: BidtPnAlternativeDTO[];\r\n  public selectedWarehouse: WareHouseTableDTO[];\r\n  public selectedSuppliers: SupplierTableRow[];\r\n  public selectedAlternatives: BidtPnAlternativeDTO[];\r\n  public selectedValuation: ValuationTableRow[];\r\n  public selectedContainer: ContainerTableRow[];\r\n  public selectedSupplyConversion: SupplyConversionTableRow[];\r\n  public warehouseMappedAddedList: WareHouseTableDTO[];\r\n  public supplierMappedAddedList: BidtProductCustomerDTO[];\r\n  public containerMappedAddedList: BireContainerPnDTO[];\r\n  public supplyConversionMappedAddedList: BirePartUnitConversionDTO[];\r\n  public showWarehousePopup: boolean;\r\n  public showSupplierPopup: boolean;\r\n  public showValuationPopup: boolean;\r\n  public showAlternativePopup: boolean;\r\n  public showContainerPopup: boolean;\r\n  public showSupplyConversionPopup: boolean;\r\n  public materialType: SelectItem[];\r\n  public traceability: SelectItem[];\r\n  public quantityUnit: SelectItem[];\r\n  public expirationThresholdUnit: SelectItem[];\r\n  public storageCondition: SelectItem[];\r\n  public expirationUnit: SelectItem[];\r\n  public unitDropDown: SelectItem[];\r\n  public materialFieldData: BirePnDTO;\r\n  public warehouseDialogOpenMode: ComponentOpenMode;\r\n  public supplierDialogOpenMode: ComponentOpenMode;\r\n  public alternativeDialogOpenMode: ComponentOpenMode;\r\n  public valuationDialogOpenMode: ComponentOpenMode;\r\n  public containerDialogOpenMode: ComponentOpenMode;\r\n  public supplyConversionDialogOpenMode: ComponentOpenMode;\r\n  public currentWarehouse: WareHouseTableDTO | undefined;\r\n  public currentWarehouseIndex: number;\r\n  public currentSupplier: SupplierTableRow | undefined;\r\n  public currentSupplierIndex: number;\r\n  public currentAlternative: BidtPnAlternativeDTO | undefined;\r\n  public currentAlternativeIndex: number;\r\n  public currentValuation: ValuationTableRow | undefined;\r\n  public currentValuationIndex: number;\r\n  public currentContainer: ContainerTableRow | undefined;\r\n  public currentContainerIndex: number;\r\n  public currentSupplyConversion: SupplyConversionTableRow | undefined;\r\n  public currentSupplyConversionIndex: number;\r\n  public storageConditionValue?: string;\r\n  public engineeringView: boolean;\r\n  public priceCurrency: string;\r\n  public toc: PageTocEntry[];\r\n  public workflowToc: PageTocEntry[];\r\n  public selectedAnchor: string | undefined;\r\n  public navigationLinkList: MenuItem[];\r\n  public showSaveSpinner: boolean;\r\n  public showStatusUpdatesPopup: boolean;\r\n  public updatesKeyMap: Map<string, Observable<LabelValue<string>[]>>;\r\n  public tableStatusUpdatesData: DialogTableData<HistoricObjectPnDTO>;\r\n  public mtbfAndMtburUnit: string;\r\n  public measurementsUnit: string;\r\n  public weightUnit: string;\r\n  public enableUnitOfIssue: boolean;\r\n\r\n  public serviceType: SelectItem[];\r\n  public containerTable: ContainerTableRow[];\r\n  public supplyConversionTable: SupplyConversionTableRow[];\r\n\r\n  public propertyStatus: LabelValue<string>[];\r\n  public engineeringPnTypes: LabelValue<string>[];\r\n  public partNumberStatus: LabelValue<string>[];\r\n  public propertyObjectStatus: LabelValue<string>[];\r\n  public workflowStatus: LabelValue<string>[];\r\n  public unitOfIssueOptions: LabelValue<string>[];\r\n\r\n  public createProcurementDialogVisible: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    pageTocService: PageTocService,\r\n    public inputValidationService: InputValidationService,\r\n    public translateService: TranslateService,\r\n    public dynamicAttributesService: DynamicAttributesService,\r\n    private readonly materialFormService: MaterialFormService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly updateHistoricService: UpdateHistoricService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly updateHistoricApi: UpdateHistoricApi,\r\n    private readonly _overlayService: OverlayService,\r\n    private readonly _formatSelectOption: FormatSelectOptionPipe\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Read,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n\r\n    // For status/updates popup\r\n    this.showStatusUpdatesPopup = false;\r\n    this.enableUnitOfIssue = false;\r\n    this.updatesKeyMap = new Map<string, Observable<LabelValue<string>[]>>();\r\n    this.deleteApi = this.updateHistoricApi.removeBireSbHistory;\r\n\r\n    this.setNavigationLinkList();\r\n    this.setTableCols();\r\n    this.init();\r\n    this.selectedAnchor = undefined;\r\n    this.registerPageTocEntrySelectedObservable();\r\n    this.userWorkflowSubject.subscribe((userWorflow) => {\r\n      this.updateWorkflowToc();\r\n      this.updateWorkflowStatusList();\r\n    });\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_MATERIAL_FORM;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    if (this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n      const context = this.isCreateOpenMode\r\n        ? 'tab.createMode'\r\n        : !!this.componentData.objectId && this.serializationService.deserialize(this.componentData.objectId).pnCode;\r\n      this.displayComponentContext(context, this.isCreateOpenMode);\r\n      this.loadMaterialDetailData();\r\n\r\n      this.toc = [\r\n        {\r\n          id: 'mainAnchor',\r\n          anchor: this.mainAnchor,\r\n          label: `${this.translateService.instant('page.mainData')}`\r\n        },\r\n        {\r\n          id: 'warhouseAnchor',\r\n          anchor: this.warhouseAnchor,\r\n          label: `${this.translateService.instant(this.getTranslateKey('warehouses'))}`\r\n        },\r\n        {\r\n          id: 'valuationAnchor',\r\n          anchor: this.valuationAnchor,\r\n          label: `${this.translateService.instant(this.getTranslateKey('valuation'))}`\r\n        },\r\n        {\r\n          id: 'customerEvolutionTableAnchor',\r\n          anchor: this.customerEvolutionTableAnchor,\r\n          label: `${this.translateService.instant(this.getTranslateKey('suppliers'))}`\r\n        },\r\n        {\r\n          id: 'alternativeAnchor',\r\n          anchor: this.alternativeAnchor,\r\n          label: `${this.translateService.instant(this.getTranslateKey('alternatives'))}`\r\n        }\r\n      ];\r\n      this.updateWorkflowToc();\r\n\r\n      setTimeout(() => {\r\n        this.setSelectedAnchor('mainAnchor');\r\n      });\r\n    }\r\n\r\n    if (this.isCreateOpenMode) {\r\n      this.materialFieldData.statusState = AWPropertiesConstants.FUNC_OBJECT_STATUS_IS_INTEGRATED_KEY;\r\n    }\r\n  }\r\n\r\n  private updateWorkflowToc() {\r\n    this.workflowToc = this.applyWorkflowOnPageToc(this.toc);\r\n  }\r\n\r\n  private setNavigationLinkList(): void {\r\n    const engineeringViewLabelKey = this.getTranslateKey('engineeringView');\r\n\r\n    this.translateService.get([engineeringViewLabelKey]).subscribe((results: string[]) => {\r\n      const engineeringViewLabel = results ? results[engineeringViewLabelKey] : 'Engineering View';\r\n\r\n      this.navigationLinkList = [\r\n        {\r\n          label: engineeringViewLabel,\r\n          command: () => {\r\n            this.openPartView(ComponentOpenMode.Read);\r\n          }\r\n        }\r\n      ];\r\n    });\r\n  }\r\n\r\n  public isSelectedAnchor(anchorId: string): boolean {\r\n    return anchorId === this.selectedAnchor;\r\n  }\r\n\r\n  public setSelectedAnchor(anchorId: string): void {\r\n    this.pageTocService.setAnchorSelected(anchorId);\r\n\r\n    this.selectedAnchor = anchorId;\r\n  }\r\n\r\n  private registerPageTocEntrySelectedObservable(): void {\r\n    this.pageTocService.pageTocEntrySelected$.pipe(takeUntil(this.unsubscribe)).subscribe((pageTocEntrySelected) => {\r\n      this.selectedAnchor = pageTocEntrySelected;\r\n    });\r\n  }\r\n  private init(): void {\r\n    this.loadUnitOfIssueOptions();\r\n    this.loadServiceType();\r\n    this.showWarehousePopup = false;\r\n    this.showSupplierPopup = false;\r\n    this.showValuationPopup = false;\r\n    this.showAlternativePopup = false;\r\n    this.showContainerPopup = false;\r\n    this.showSupplyConversionPopup = false;\r\n    this.engineeringView = false;\r\n    this.warehouseDialogOpenMode = ComponentOpenMode.Read;\r\n    this.supplierDialogOpenMode = ComponentOpenMode.Read;\r\n    this.valuationDialogOpenMode = ComponentOpenMode.Read;\r\n    this.alternativeDialogOpenMode = ComponentOpenMode.Read;\r\n    this.containerDialogOpenMode = ComponentOpenMode.Read;\r\n    this.supplyConversionDialogOpenMode = ComponentOpenMode.Read;\r\n    this.currentWarehouse = undefined;\r\n    this.currentWarehouseIndex = -1;\r\n    this.currentSupplier = undefined;\r\n    this.currentSupplierIndex = -1;\r\n    this.currentAlternative = undefined;\r\n    this.currentAlternativeIndex = -1;\r\n    this.currentValuation = undefined;\r\n    this.currentValuationIndex = -1;\r\n    this.currentContainer = undefined;\r\n    this.currentContainerIndex = -1;\r\n    this.currentSupplyConversion = undefined;\r\n    this.currentSupplyConversionIndex = -1;\r\n    this.priceCurrency = '';\r\n    this.mtbfAndMtburUnit = '(H)';\r\n    this.measurementsUnit = '(Cm)';\r\n    this.weightUnit = '(Kg)';\r\n    this.storageConditionValue = undefined;\r\n    this.materialType = [];\r\n    this.traceability = [];\r\n    this.quantityUnit = [];\r\n    this.expirationThresholdUnit = [];\r\n    this.storageCondition = [];\r\n    this.expirationUnit = [];\r\n    this.unitDropDown = [];\r\n    this.warehouseTable = [];\r\n    this.valuationTable = [];\r\n    this.supplierTable = [];\r\n    this.alternativeTable = [];\r\n    this.selectedWarehouse = [];\r\n    this.selectedSuppliers = [];\r\n    this.selectedValuation = [];\r\n    this.selectedContainer = [];\r\n    this.selectedAlternatives = [];\r\n    this.selectedSupplyConversion = [];\r\n    this.warehouseMappedAddedList = [];\r\n    this.supplierMappedAddedList = [];\r\n    this.containerMappedAddedList = [];\r\n    this.supplyConversionMappedAddedList = [];\r\n    this.loadEngineeringPnTypes();\r\n    this.loadDropDown();\r\n    this.materialFieldData = {};\r\n    this.sparePartClassOptions = [];\r\n    this.loadSparePartClassDropdown();\r\n    this.containerTable = [];\r\n    this.supplyConversionTable = [];\r\n  }\r\n\r\n  private setTableCols(): void {\r\n    this.alternativeTableCols = [\r\n      { field: 'birePnByFkBidtPnBidtPn2BirePnPnCode', alignment: 'left' },\r\n      { field: 'nameOfInterchangebilty', alignment: 'left' },\r\n      { field: 'alternativeComment', alignment: 'left' }\r\n    ];\r\n    this.suppliersTableCols = [\r\n      { field: 'supplierName', alignment: 'left' },\r\n      { field: 'numberOfDays', alignment: 'left' },\r\n      { field: 'productQuantity', alignment: 'left' },\r\n      { field: 'priceValueText', alignment: 'left' },\r\n      { field: 'serviceType', alignment: 'left' }\r\n    ];\r\n    this.valuationTableCols = [\r\n      { field: 'valuationName', alignment: 'left' },\r\n      { field: 'unitValueText', alignment: 'left' }\r\n    ];\r\n    this.warehouseTableCols = [\r\n      { field: 'siteName', alignment: 'left' },\r\n      { field: 'wHName', alignment: 'left' },\r\n      { field: 'storageBins', alignment: 'left' },\r\n      { field: 'stock', alignment: 'left' },\r\n      { field: 'whPrLowThreshold', alignment: 'left' },\r\n      { field: 'whPrHighThreshold', alignment: 'left' }\r\n    ];\r\n    this.containerTableCols = [\r\n      { field: 'pnCode', alignment: 'left' },\r\n      { field: 'articleDesignation', alignment: 'left' }\r\n    ];\r\n    this.supplyConversionTableCols = [\r\n      { field: 'unit', alignment: 'left' },\r\n      { field: 'alternativeUnit', alignment: 'left' },\r\n      { field: 'factor', alignment: 'left' }\r\n    ];\r\n  }\r\n\r\n  public cancelMaterial(): void {\r\n    this.clearErrors();\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n\r\n    this.reloadMaterial();\r\n  }\r\n\r\n  public editMaterial(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public reloadMaterial(): void {\r\n    this.init();\r\n    this.loadMaterialDetailData();\r\n  }\r\n  public enableEngieeringView() {\r\n    if (!!this.engineeringPnTypes && !!this.materialFieldData.pnType) {\r\n      for (const partValue of this.engineeringPnTypes) {\r\n        if (this.materialFieldData.pnType === partValue.value) {\r\n          this.engineeringView = true;\r\n          break;\r\n        } else {\r\n          this.engineeringView = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  public saveMaterial(): boolean {\r\n    let saved = false;\r\n    const missingFields = this.checkMandatoryFields({\r\n      ...this.materialFieldData,\r\n      storageConditionValue: this.storageConditionValue,\r\n      warehouseTableTitle: this.warehouseTable,\r\n      valuationTableTitle: this.valuationTable,\r\n      customerEvolutionTableTitle: this.supplierTable,\r\n      alternativeTableTitle: this.alternativeTable,\r\n      dynamicAttributes: this.dynamicAttributes\r\n    });\r\n    if (this.materialFieldData && this.materialFieldData.pnCode && missingFields.length === 0) {\r\n      let update: boolean;\r\n      this.isCreateOpenMode ? (update = false) : (update = true);\r\n      this.warehouseMappedAddedList = [];\r\n      this.materialAttributes = this.dynamicAttributesService.toBirePnAttribute(\r\n        this.materialFieldData.pnCode,\r\n        this.dynamicAttributes\r\n      );\r\n\r\n      this.warehouseTable.forEach((warehouse) => {\r\n        const warehouseMapped: WareHouseTableDTO = {\r\n          wareHouseId: warehouse.wareHouseId,\r\n          bidtSiteId: warehouse.bidtSiteId,\r\n          whPrHighThreshold: warehouse.whPrHighThreshold,\r\n          whPrLowThreshold: warehouse.whPrLowThreshold,\r\n          bidtStorageBinDTOList: warehouse.bidtStorageBinDTOList\r\n        };\r\n        this.warehouseMappedAddedList.push(warehouseMapped);\r\n      });\r\n      this.supplierMappedAddedList = [];\r\n      this.supplierTable.forEach((supplier) => {\r\n        this.serviceType.forEach((type) => {\r\n          if (type.label === supplier.serviceType) {\r\n            supplier.serviceType = type.value;\r\n          }\r\n        });\r\n        const supplierMapped: BidtProductCustomerDTO = {\r\n          bidoCustomerCustomerCode: supplier.bidoCustomerCustomerCode,\r\n          numberOfDays: supplier.numberOfDays,\r\n          productQuantity: supplier.productQuantity,\r\n          priceValue: supplier.priceValue,\r\n          priceUnit: this.priceCurrency,\r\n          serviceType: supplier.serviceType\r\n        };\r\n        this.supplierMappedAddedList.push(supplierMapped);\r\n      });\r\n      this.containerMappedAddedList = [];\r\n      if (this.materialFieldData.pnType === AWPropertiesConstants.PN_TYPE_BOX_KEY) {\r\n        this.containerTable.forEach((container) => {\r\n          const containerMapped: BireContainerPnDTO = {\r\n            containerPnCode: this.materialFieldData.pnCode,\r\n            contentPnCode: container.pnCode\r\n          };\r\n          this.containerMappedAddedList.push(containerMapped);\r\n        });\r\n      } else {\r\n        this.containerTable.forEach((container) => {\r\n          const containerMapped: BireContainerPnDTO = {\r\n            containerPnCode: container.pnCode,\r\n            contentPnCode: this.materialFieldData.pnCode\r\n          };\r\n          this.containerMappedAddedList.push(containerMapped);\r\n        });\r\n      }\r\n\r\n      this.supplyConversionMappedAddedList = [];\r\n      this.supplyConversionTable.forEach((supplyConversion) => {\r\n        this.unitOfIssueOptions.forEach((res) => {\r\n          if (supplyConversion.unit === res.label) {\r\n            supplyConversion.unit = res.value;\r\n          }\r\n          if (supplyConversion.alternativeUnit === res.label) {\r\n            supplyConversion.alternativeUnit = res.value;\r\n          }\r\n        });\r\n        const supplyConversionMapped: BirePartUnitConversionDTO = {\r\n          pnCode: this.materialFieldData.pnCode,\r\n          unit: supplyConversion.unit,\r\n          alternativeUnit: supplyConversion.alternativeUnit,\r\n          factor: supplyConversion.factor\r\n        };\r\n        this.supplyConversionMappedAddedList.push(supplyConversionMapped);\r\n      });\r\n\r\n      const intStorageValue = parseInt(this.storageConditionValue as string, 10);\r\n      const saveId: MaterialDataDTO = {\r\n        birePnDTO: this.materialFieldData,\r\n        isUpdate: update,\r\n        whareHouseTableDtos: this.warehouseMappedAddedList,\r\n        bidtValuationDTOs: this.valuationTable,\r\n        bidtProductCustomerDTOs: this.supplierMappedAddedList,\r\n        bidtProductScDTO: {\r\n          bidtStorageConditionId: intStorageValue\r\n        },\r\n\r\n        bidtPnAlternativeDTOs: this.alternativeTable,\r\n        bireContainerPnDTOs: this.containerMappedAddedList,\r\n        bireSupplyConversionDTOs: this.supplyConversionMappedAddedList,\r\n        materialAttributeDTOUpdatedList: this.materialAttributes\r\n      };\r\n\r\n      if (this.supplyConversionMappedAddedList.length > 0 && !this.materialFieldData.unitOfIssue) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnSaveMaterialsForUnitOfIssue'));\r\n      } else {\r\n        this.showSaveSpinner = true;\r\n        this.materialFormService.saveMaterial(saveId).subscribe(\r\n          (result) => {\r\n            this.componentData.objectId = this.serializationService.serialize(this.materialFieldData);\r\n            const context = this.serializationService.deserialize(this.componentData.objectId).pnCode;\r\n            this.updateOpenMode(ComponentOpenMode.Write);\r\n            this.displayComponentContext(context, this.isCreateOpenMode);\r\n            this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveMaterials'));\r\n            this.showSaveSpinner = false;\r\n            this.updateOpenMode(ComponentOpenMode.Read);\r\n            this.reloadMaterial();\r\n          },\r\n          (error) => {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnSaveMaterials'));\r\n            this.showSaveSpinner = false;\r\n          }\r\n        );\r\n        saved = true;\r\n      }\r\n    } else {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n\r\n    return saved;\r\n  }\r\n\r\n  private loadEngineeringPnTypes(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.ENGINEERING_PN_TYPES_MAP).subscribe(\r\n      (results) => {\r\n        this.engineeringPnTypes = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetEngineeringPnTypes'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private updateWorkflowStatusList() {\r\n    if (!!this.materialFieldData) {\r\n      this.workflowStatus = WorkflowUtils.filterWorkflowStatusList(\r\n        this.userWorkflow,\r\n        this.partNumberStatus,\r\n        this.materialFieldData.statusState\r\n      );\r\n    }\r\n  }\r\n\r\n  private loadDropDown(): void {\r\n    this.propertiesService.getValue('getPnTraceabilityMap').subscribe(\r\n      (results) => {\r\n        this.traceability = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage('errorOnLoadingTraceability');\r\n      }\r\n    );\r\n\r\n    this.propertiesService.getValue('getPnTypeMap').subscribe(\r\n      (results) => {\r\n        this.materialType = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage('errorOnLoadingMaterialType');\r\n      }\r\n    );\r\n\r\n    this.propertiesService.getValue('getPnTraceabilityMap').subscribe(\r\n      (results) => {\r\n        this.traceability = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage('errorOnLoadingTraceability');\r\n      }\r\n    );\r\n\r\n    this.propertiesService.getValue('getFuncObjectStatusMap').subscribe({\r\n      next: (results) => {\r\n        this.propertyStatus = results || [];\r\n        this.partNumberStatus = [...results];\r\n        this.handleObjectStatus();\r\n        this.loadMaterialUserWorkflow();\r\n        this.updateWorkflowStatusList();\r\n      },\r\n      error: () => {\r\n        this.messageService.showErrorMessage('errorOnLoadingTraceability');\r\n        this.loadUserWorkflow(undefined);\r\n      }\r\n    });\r\n\r\n    this.propertiesService.getValue('getObjectStatusMap').subscribe(\r\n      (results) => {\r\n        this.propertyObjectStatus = results;\r\n        this.handleObjectStatus();\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetObjectStatus'));\r\n      }\r\n    );\r\n\r\n    this.materialFormService.findAllBireUnitMeasures().subscribe((result) => {\r\n      const newLableValue: LabelValue<String>[] = [];\r\n      result.forEach((res) => {\r\n        if (BireUnitMeasureConstants.DAY === res.label) {\r\n          newLableValue.push({\r\n            label: `${res.label}-${res.value}`,\r\n            value: res.value\r\n          });\r\n        }\r\n\r\n        if (BireUnitMeasureConstants.MONTH === res.label) {\r\n          newLableValue.push({\r\n            label: `${res.label}-${res.value}`,\r\n            value: res.value\r\n          });\r\n        }\r\n\r\n        if (BireUnitMeasureConstants.YEAR === res.label) {\r\n          newLableValue.push({\r\n            label: `${res.label}-${res.value}`,\r\n            value: res.value\r\n          });\r\n        }\r\n      });\r\n\r\n      this.expirationUnit = newLableValue;\r\n      this.expirationThresholdUnit = newLableValue;\r\n    });\r\n\r\n    this.materialFormService.findQuantityUnitMap().subscribe((res) => {\r\n      this.quantityUnit = res;\r\n    });\r\n\r\n    this.materialFormService.findStorageCondition().subscribe((result) => {\r\n      const labelValue: LabelValue<String>[] = [];\r\n      result.forEach((res: BidtStorageConditionDTO) => {\r\n        if (!!res && !!res.id && !!res.scName) {\r\n          labelValue.push({\r\n            label: res.scName,\r\n            value: res.id.toString()\r\n          });\r\n        }\r\n      });\r\n      this.storageCondition = labelValue;\r\n    });\r\n\r\n    this.materialFormService.getLocalCurrency().subscribe((result) => {\r\n      this.priceCurrency = result;\r\n    });\r\n  }\r\n\r\n  private handleObjectStatus() {\r\n    // Adding object status if necessary\r\n    if (\r\n      !!this.materialFieldData &&\r\n      !!this.materialFieldData.statusState &&\r\n      !this.getLabelValueByValue(this.partNumberStatus, this.materialFieldData.statusState)\r\n    ) {\r\n      const currentState = this.getLabelValueByValue(this.propertyObjectStatus, this.materialFieldData.statusState);\r\n      if (currentState) {\r\n        this.partNumberStatus.unshift(currentState);\r\n        this.updateWorkflowStatusList();\r\n      }\r\n    }\r\n  }\r\n\r\n  private getLabelValueByValue<T>(references: LabelValue<T>[], value: T): LabelValue<T> | undefined {\r\n    return references.find((lv) => lv.value === value);\r\n  }\r\n\r\n  public loadMaterialDetailData(): void {\r\n    const observables: Observable<BireAttributeDTO[]>[] = [\r\n      this.getDynamicAttributesObservable(AWPropertiesConstants.MCH_ATTRIBUTE_CATEGORY_ALL_KEY),\r\n      this.getDynamicAttributesObservable(AWPropertiesConstants.MCH_ATTRIBUTE_CATEGORY_MATERIAL_KEY)\r\n    ];\r\n\r\n    forkJoin(observables).subscribe((results: BireAttributeDTO[][]) => {\r\n      if (results) {\r\n        const flattenResults: BireAttributeDTO[] = results.reduce((acc, val) => acc.concat(val), []);\r\n        this.dynamicAttributes = this.dynamicAttributesService.from(flattenResults);\r\n\r\n        if (this.componentData.objectId) {\r\n          const userId = {\r\n            pnCode: this.serializationService.deserialize(this.componentData.objectId).pnCode\r\n          };\r\n          if (!!userId) {\r\n            this.materialFormService.getMaterialDetails(userId).subscribe(\r\n              (result) => {\r\n                if (result !== null && result !== undefined) {\r\n                  this.materialFieldData = result.birePnDTO;\r\n                  if (result.birePnDTO.averagePrice) {\r\n                    this.materialFieldData.averagePrice = this.convertAveragePrice(result.birePnDTO.averagePrice);\r\n                  }\r\n                  this.enableEngieeringView();\r\n                  this.handleObjectStatus();\r\n                  this.loadMaterialUserWorkflow();\r\n\r\n                  if (!!this.materialFieldData.pnCode) {\r\n                    this.materialFormService\r\n                      .findBirePnAttributesByPn(this.materialFieldData.pnCode)\r\n                      .subscribe((attributesResults) => {\r\n                        this.dynamicAttributes.forEach((element) => {\r\n                          element.attributes.forEach((attribute) => {\r\n                            const attributeInResults = attributesResults.filter(\r\n                              (res) => res.attributeId === attribute.id\r\n                            );\r\n                            if (attributeInResults.length === 1) {\r\n                              attribute.value = attributeInResults[0].attributeValue;\r\n                            }\r\n                          });\r\n                        });\r\n                      });\r\n                  }\r\n\r\n                  this.warehouseTable = [];\r\n                  result.whareHouseTableDtos.forEach((obj) => {\r\n                    this.warehouseTable.push(this.convertWarehouseDataToRow(obj));\r\n                  });\r\n                  this.valuationTable = [];\r\n                  result.bidtValuationDTOs.forEach((obj) => {\r\n                    this.valuationTable.push(this.convertValuationDataToRow(obj));\r\n                  });\r\n                  this.supplierTable = [];\r\n                  result.bidtProductCustomerDTOs.forEach((obj) => {\r\n                    this.supplierTable.push(this.convertSupplierDataToRow(obj));\r\n                  });\r\n                  this.alternativeTable = result.bidtPnAlternativeDTOs || [];\r\n                  this.storageConditionValue = !!result.bidtProductScDTO.bidtStorageConditionId\r\n                    ? result.bidtProductScDTO.bidtStorageConditionId.toString()\r\n                    : undefined;\r\n\r\n                  this.containerTable = [];\r\n                  result.bireContainerPnDTOs.forEach((obj) => {\r\n                    let searchData: BirePnDTO;\r\n\r\n                    if (obj.containerPnCode === this.materialFieldData.pnCode) {\r\n                      searchData = {\r\n                        pnCode: obj.contentPnCode\r\n                      };\r\n                    } else {\r\n                      searchData = {\r\n                        pnCode: obj.containerPnCode\r\n                      };\r\n                    }\r\n\r\n                    this.materialFormService.getMaterialDetails(searchData).subscribe((matDetails) => {\r\n                      if (matDetails) {\r\n                        this.containerTable.push(this.convertContainerDataToRow(matDetails.birePnDTO));\r\n                      }\r\n                    });\r\n                  });\r\n                  this.supplyConversionTable = [];\r\n                  result.bireSupplyConversionDTOs.forEach((obj) => {\r\n                    this.supplyConversionTable.push(this.convertSupplyConversionDataToRow(obj));\r\n                  });\r\n\r\n                  this.enableUnitOfIssue = this.isUnitOfIssueInitialised(result);\r\n                } else {\r\n                  super.throwUnboundLocalError('loadMaterialDetailData', 'result');\r\n                  this.loadUserWorkflow(undefined);\r\n                }\r\n              },\r\n              () => {\r\n                this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadMaterialData'));\r\n                this.loadUserWorkflow(undefined);\r\n              }\r\n            );\r\n          }\r\n        } else {\r\n          this.loadUserWorkflow(undefined);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private getDynamicAttributesObservable(attributeCategory: string): Observable<BireAttributeDTO[]> {\r\n    return this.materialFormService.findBireAttributesByCategory(attributeCategory);\r\n  }\r\n\r\n  private loadMaterialUserWorkflow() {\r\n    if (this.materialFieldData && this.propertyStatus) {\r\n      let status = this.materialFieldData.statusState;\r\n      if (!this.propertyStatus.find((item) => item.value === status)) {\r\n        // Non-functional status is ignored (legacy technical status)\r\n        status = undefined;\r\n      }\r\n      this.loadUserWorkflow(status);\r\n    }\r\n  }\r\n\r\n  private convertWarehouseDataToRow(obj: WareHouseTableDTO) {\r\n    const row: WareHouseTableDTO = {\r\n      siteName: obj.siteName,\r\n      bidtSiteId: obj.bidtSiteId,\r\n      wareHouseId: obj.wareHouseId,\r\n      storageBins:\r\n        !!obj.bidtStorageBinDTOList && obj.bidtStorageBinDTOList.length > 0\r\n          ? this.getStorageBins(obj.bidtStorageBinDTOList)\r\n          : '',\r\n      wHName: obj.wHName,\r\n      whPrHighThreshold: obj.whPrHighThreshold,\r\n      whPrLowThreshold: obj.whPrLowThreshold,\r\n      dataId: Math.random(),\r\n      bidtStorageBinDTOList: obj.bidtStorageBinDTOList\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  private getStorageBins(bidtStorageBinDTOList: BidtStorageBinDTO[]) {\r\n    let sbin = '';\r\n\r\n    bidtStorageBinDTOList.forEach((res) => {\r\n      if (!!res.sbNumber) {\r\n        if (!!sbin) {\r\n          sbin = `${sbin} / ${res.sbNumber}`;\r\n        } else {\r\n          sbin = res.sbNumber;\r\n        }\r\n      }\r\n    });\r\n\r\n    return sbin;\r\n  }\r\n\r\n  private convertAveragePrice(obj: number): number {\r\n    // convert the average price to 2 decimals\r\n    const decimals = 1e2;\r\n    const averagePriceFormatted = Math.round(obj * decimals) / decimals;\r\n\r\n    return averagePriceFormatted;\r\n  }\r\n\r\n  private convertValuationDataToRow(obj: BidtPriceDTO) {\r\n    const formattedPrice = parseFloat(obj.priceValue as string).toFixed(2);\r\n    const row: ValuationTableRow = {\r\n      bidtValuationGroupId: obj.bidtValuationGroupId,\r\n      priceUnit: this.priceCurrency,\r\n      priceValue: obj.priceValue,\r\n      unitValueText: `${formattedPrice} ${this.priceCurrency}`,\r\n      valuationName: obj.valuationName\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  private convertSupplierDataToRow(obj: BidtProductCustomerDTO) {\r\n    const formattedQuantity = parseFloat(obj.productQuantity as string).toFixed(0);\r\n    const formattedPrice = parseFloat(obj.priceValue as string).toFixed(2);\r\n\r\n    this.serviceType.forEach((type) => {\r\n      if (type.value === obj.serviceType) {\r\n        obj.serviceType = type.label;\r\n      }\r\n    });\r\n    const row: SupplierTableRow = {\r\n      bidoCustomerCustomerCode: obj.bidoCustomerCustomerCode,\r\n      productQuantity: formattedQuantity,\r\n      numberOfDays: obj.numberOfDays,\r\n      priceValue: obj.priceValue,\r\n      priceUnit: this.priceCurrency,\r\n      supplierName: obj.supplierName,\r\n      priceValueText: `${formattedPrice} ${this.priceCurrency}`,\r\n      id: obj.id,\r\n      dataId: Math.random(),\r\n      serviceType: obj.serviceType\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  private convertContainerDataToRow(obj: BirePnDTO) {\r\n    const row: ContainerTableRow = {\r\n      pnCode: obj.pnCode,\r\n      articleDesignation: obj.articleDesignation,\r\n      statusUser: obj.statusUser,\r\n      statusDate: obj.statusDate,\r\n      statusState: this._formatSelectOption.transform(obj.statusState, this.workflowStatus)\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  private convertSupplyConversionDataToRow(obj: BirePartUnitConversionDTO) {\r\n    obj.unit = this.unitOfIssueOptions[((obj.unit as unknown) as number) - 1].label;\r\n    obj.alternativeUnit = this.unitOfIssueOptions[((obj.alternativeUnit as unknown) as number) - 1].label;\r\n\r\n    const row: SupplyConversionTableRow = {\r\n      pnCode: obj.pnCode,\r\n      unit: obj.unit,\r\n      alternativeUnit: obj.alternativeUnit,\r\n      factor: obj.factor\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  private openPartView(openMode: ComponentOpenMode): void {\r\n    const labelKey = 'transaction.PartNumberFormComponent';\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: 'PartNumberFormComponent',\r\n      objectId: this.materialFieldData.pnCode,\r\n      openMode\r\n    };\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n  public openBussinerPartnerForm(objectId: BidtProductCustomerDTO | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.ADM_BUSINESS_PARTNER_FORM,\r\n      openMode\r\n    };\r\n    if (!!objectId && !!objectId.bidoCustomerCustomerCode) {\r\n      const businessPartnerFormId: BidoCustomerDTOId = {\r\n        customerCode: objectId.bidoCustomerCustomerCode\r\n      };\r\n      data.objectId = this.serializationService.serialize(businessPartnerFormId);\r\n    }\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public openContainerPartView(selectedRow: BirePnDTO, openMode: ComponentOpenMode): void {\r\n    const labelKey = 'transaction.PartNumberFormComponent';\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: 'PartNumberFormComponent',\r\n      objectId: selectedRow.pnCode,\r\n      openMode\r\n    };\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Warehouse Dialog\r\n   *************************************************************************/\r\n  public addWarehouse(): void {\r\n    this.currentWarehouse = undefined;\r\n    this.warehouseDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showWarehousePopup = true;\r\n  }\r\n  public deleteWarehouse(): void {\r\n    const partialMessageKey =\r\n      this.selectedWarehouse.length > 1 ? 'confirmOnDeleteWarehouses' : 'confirmOnDeleteWarehouse';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.selectedWarehouse.forEach((selected) => {\r\n          if (!!this.warehouseTable) {\r\n            this.warehouseTable = this.warehouseTable.filter((warehouse) => warehouse.dataId !== selected.dataId);\r\n          } else {\r\n            super.throwUnboundLocalError('deleteWarehouse', 'this.warehouseTable');\r\n          }\r\n        });\r\n        this.selectedWarehouse = [];\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteWarehouse'));\r\n      }\r\n    });\r\n  }\r\n  public editWarehouse(): void {\r\n    this.currentWarehouse = { ...this.selectedWarehouse[0] };\r\n    if (!!this.currentWarehouse) {\r\n      this.currentWarehouseIndex = this.warehouseTable.findIndex((warehouse) => {\r\n        return (\r\n          !!warehouse.dataId &&\r\n          !!this.selectedWarehouse[0].dataId &&\r\n          warehouse.dataId === this.selectedWarehouse[0].dataId\r\n        );\r\n        //  return DTOUtils.equalsWarehouseTableDTO(warehouse, this.currentWarehouse);\r\n      });\r\n    }\r\n    this.warehouseDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showWarehousePopup = true;\r\n  }\r\n  public openWarehouse(): void {\r\n    if (this.selectedWarehouse.length === 1) {\r\n      this.currentWarehouse = this.selectedWarehouse[0];\r\n      this.currentWarehouseIndex = -1;\r\n      this.warehouseDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showWarehousePopup = true;\r\n    }\r\n  }\r\n\r\n  public onAddWarehouse(event: WareHouseTableDTO): void {\r\n    if (!!event) {\r\n      const warehouseAttribute: WareHouseTableDTO = {\r\n        siteName: event.siteName,\r\n        bidtSiteId: event.bidtSiteId,\r\n        wareHouseId: event.wareHouseId,\r\n        wHName: event.wHName,\r\n        whPrHighThreshold: event.whPrHighThreshold,\r\n        whPrLowThreshold: event.whPrLowThreshold,\r\n        dataId: Math.random(),\r\n        bidtStorageBinDTOList: event.bidtStorageBinDTOList\r\n      };\r\n      if (\r\n        !!event.bidtStorageBinDTOList &&\r\n        event.bidtStorageBinDTOList.length > 0 &&\r\n        !!event.bidtStorageBinDTOList[0].bidtWarehouseId\r\n      ) {\r\n        this.materialFormService\r\n          .findByWarehouseId(event.bidtStorageBinDTOList[0].bidtWarehouseId)\r\n          .subscribe((result) => {\r\n            if (!!result && !!result.list && result.list.length > 0) {\r\n              let sbin = '';\r\n              result.list.forEach((res) => {\r\n                (event.bidtStorageBinDTOList as BidtStorageBinDTO[]).forEach((r) => {\r\n                  if (r.id === res.id) {\r\n                    if (!!res.sbNumber) {\r\n                      if (!!sbin) {\r\n                        sbin = `${sbin} / ${res.sbNumber}`;\r\n                      } else {\r\n                        sbin = res.sbNumber;\r\n                      }\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n              warehouseAttribute.storageBins = sbin;\r\n              if (this.warehouseDialogOpenMode === ComponentOpenMode.Write) {\r\n                this.warehouseTable[this.currentWarehouseIndex] = warehouseAttribute;\r\n              } else {\r\n                this.warehouseTable = [...this.warehouseTable, warehouseAttribute];\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        if (this.warehouseDialogOpenMode === ComponentOpenMode.Write) {\r\n          this.warehouseTable[this.currentWarehouseIndex] = warehouseAttribute;\r\n        } else {\r\n          this.warehouseTable = [...this.warehouseTable, warehouseAttribute];\r\n        }\r\n      }\r\n    }\r\n    this.selectedWarehouse = [];\r\n  }\r\n  public goToStockStatus(): void {\r\n    if (this.selectedWarehouse.length === 1) {\r\n      const stockStatus: StockStatusInput = {\r\n        pnCode: this.materialFieldData.pnCode, // ?\r\n        stockOwnerCode: '',\r\n        warehouseId: this.selectedWarehouse[0].wareHouseId, // ?\r\n        siteId: this.selectedWarehouse[0].bidtSiteId, // ?\r\n        startDate: new Date(),\r\n        endDate: new Date()\r\n      };\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.LOG_STOCK_STATUS_SEARCH,\r\n        openMode: ComponentOpenMode.Read,\r\n        objectId: this.serializationService.serialize(stockStatus)\r\n      };\r\n      const labelKey = 'transaction.' + data.componentId;\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    }\r\n    // }\r\n  }\r\n\r\n  public openStatusUpdatesPopup() {\r\n    this.pnStatus = { ...this.materialFieldData };\r\n    this.showStatusUpdatesPopup = true;\r\n    const columns: TableColumn[] = [\r\n      { field: 'date', alignment: 'center', width: '150px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'author', alignment: 'center', width: '150px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'action', alignment: 'center', width: '150px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'status', alignment: 'center', width: '150px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'articleDesignation', alignment: 'center', width: '150px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'pnType', alignment: 'center', width: '150px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'quantityUnit', alignment: 'center', width: '150px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'traceability', alignment: 'center', width: '150px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'expirationDuration', alignment: 'center', width: '150px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'expirationUnit', alignment: 'center', width: '150px', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'expirationThreshold', alignment: 'center', width: '150px', filterMode: TableColumnFilterMode.Input },\r\n      {\r\n        field: 'expirationThresholdUnit',\r\n        alignment: 'center',\r\n        width: '150px',\r\n        filterMode: TableColumnFilterMode.Input\r\n      },\r\n      { field: 'sparePartClass', alignment: 'center', width: '200px', filterMode: TableColumnFilterMode.Input }\r\n    ];\r\n    this.updatesKeyMap.set('status', of(this.partNumberStatus));\r\n    if (!!this.materialFieldData.sparePartClassCode) {\r\n      this.updatesKeyMap.set('sparePartClass', of(this.sparePartClassOptions));\r\n    }\r\n    if (this.materialFieldData.pnCode) {\r\n      this.tableStatusUpdatesData = {\r\n        componentId: 'MaterialFormComponent.historicPopup',\r\n        tableCols: columns,\r\n        tableRows: this.updateHistoricService.findBirePnHistoric({\r\n          pnCode: this.materialFieldData.pnCode\r\n        }),\r\n        dataKey: undefined,\r\n        selectionMode: TableSelectionMode.Multiple,\r\n        globalFilter: false\r\n      };\r\n    }\r\n  }\r\n  /**************************************************************************\r\n   * Valuation Dialog\r\n   *************************************************************************/\r\n  public addValuation(): void {\r\n    this.currentValuation = undefined;\r\n    this.valuationDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showValuationPopup = true;\r\n  }\r\n  public deleteValuation(): void {\r\n    const partialMessageKey =\r\n      this.selectedWarehouse.length > 1 ? 'confirmOnDeleteValuations' : 'confirmOnDeleteValuation';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.selectedValuation.forEach((selected) => {\r\n          if (!!this.valuationTable) {\r\n            this.valuationTable = this.valuationTable.filter(\r\n              (valuation) => valuation.bidtValuationGroupId !== selected.bidtValuationGroupId\r\n            );\r\n          } else {\r\n            super.throwUnboundLocalError('deleteValuation', 'this.valuationTable');\r\n          }\r\n        });\r\n        this.selectedValuation = [];\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteValuation'));\r\n      }\r\n    });\r\n  }\r\n  public editValuation(): void {\r\n    this.currentValuation = { ...this.selectedValuation[0] };\r\n    if (!!this.currentValuation) {\r\n      this.currentValuationIndex = this.valuationTable.findIndex((valuation) => {\r\n        return (\r\n          !!valuation.bidtValuationGroupId &&\r\n          !!this.selectedValuation[0].bidtValuationGroupId &&\r\n          valuation.bidtValuationGroupId === this.selectedValuation[0].bidtValuationGroupId\r\n        );\r\n      });\r\n    }\r\n    this.valuationDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showValuationPopup = true;\r\n  }\r\n  public openValuation(): void {\r\n    if (this.selectedValuation.length === 1) {\r\n      this.currentValuation = this.selectedValuation[0];\r\n      this.currentValuationIndex = -1;\r\n      this.valuationDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showValuationPopup = true;\r\n    }\r\n  }\r\n  public onAddValuation(event: BidtPriceDTO): void {\r\n    if (!!event) {\r\n      const valuationAttribute: ValuationTableRow = {\r\n        valuationName: event.valuationName,\r\n        priceUnit: event.priceUnit,\r\n        unitValueText: `${event.priceValue} ${event.priceUnit}`,\r\n        bidtValuationGroupId: event.bidtValuationGroupId,\r\n        priceValue: event.priceValue\r\n      };\r\n      const isAdded = this.valuationTable.some((valuationData) => {\r\n        return DTOUtils.equalsValuationTableDTO(valuationAttribute, valuationData);\r\n      });\r\n      if (this.valuationDialogOpenMode === ComponentOpenMode.Write) {\r\n        const checkElement = this.valuationTable.filter((valuationData, index) => {\r\n          return (\r\n            index !== this.currentValuationIndex &&\r\n            valuationData.bidtValuationGroupId === valuationAttribute.bidtValuationGroupId\r\n          );\r\n        });\r\n        if (checkElement.length === 0) {\r\n          this.valuationTable[this.currentValuationIndex] = valuationAttribute;\r\n        } else {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('warningOnValuationExists'));\r\n        }\r\n      } else {\r\n        if (isAdded) {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('warningOnValuationExists'));\r\n        } else {\r\n          this.valuationTable = [...this.valuationTable, valuationAttribute];\r\n        }\r\n      }\r\n    }\r\n    this.selectedValuation = [];\r\n  }\r\n  /**************************************************************************\r\n   * Supplier Dialog\r\n   *************************************************************************/\r\n  public addSupplier(): void {\r\n    this.currentSupplier = undefined;\r\n    this.supplierDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showSupplierPopup = true;\r\n  }\r\n  public deleteSupplier(): void {\r\n    const partialMessageKey =\r\n      this.selectedSuppliers.length > 1 ? 'confirmOnDeleteSuppliers' : 'confirmOnDeleteSupplier';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.selectedSuppliers.forEach((selected) => {\r\n          if (!!this.supplierTable) {\r\n            this.supplierTable = this.supplierTable.filter((supplier) => supplier.dataId !== selected.dataId);\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSupplier', 'this.supplierTable');\r\n          }\r\n        });\r\n        this.selectedSuppliers = [];\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteSupplier'));\r\n      }\r\n    });\r\n  }\r\n  public editSupplier(): void {\r\n    this.currentSupplier = { ...this.selectedSuppliers[0] };\r\n    if (!!this.currentSupplier) {\r\n      this.currentSupplierIndex = this.supplierTable.findIndex((supplier) => {\r\n        return (\r\n          !!supplier.dataId &&\r\n          !!this.selectedSuppliers[0].dataId &&\r\n          supplier.dataId === this.selectedSuppliers[0].dataId\r\n        );\r\n      });\r\n    }\r\n    this.supplierDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showSupplierPopup = true;\r\n  }\r\n  public openSupplier(): void {\r\n    if (this.selectedSuppliers.length === 1) {\r\n      // { ...this.selectedSuppliers[0] } allows to keep the correct displayed form of ServiceType in supplier table\r\n      this.currentSupplier = { ...this.selectedSuppliers[0] };\r\n      this.currentSupplierIndex = -1;\r\n      this.supplierDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showSupplierPopup = true;\r\n    }\r\n  }\r\n  public onAddSupplier(event: BidtProductCustomerDTO): void {\r\n    if (!!event) {\r\n      this.serviceType.forEach((type) => {\r\n        if (type.value === event.serviceType) {\r\n          event.serviceType = type.label;\r\n        }\r\n      });\r\n      const supplierAttribute: SupplierTableRow = {\r\n        supplierName: event.supplierName,\r\n        priceUnit: event.priceUnit,\r\n        priceValueText: `${event.priceValue} ${event.priceUnit}`,\r\n        bidoCustomerCustomerCode: event.bidoCustomerCustomerCode,\r\n        priceValue: event.priceValue,\r\n        numberOfDays: event.numberOfDays,\r\n        productQuantity: event.productQuantity,\r\n        dataId: Math.random(),\r\n        serviceType: event.serviceType\r\n      };\r\n      if (this.supplierDialogOpenMode === ComponentOpenMode.Write) {\r\n        this.supplierTable[this.currentSupplierIndex] = supplierAttribute;\r\n      } else {\r\n        this.supplierTable = [...this.supplierTable, supplierAttribute];\r\n      }\r\n    }\r\n    this.selectedSuppliers = [];\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Alternative Dialog\r\n   *************************************************************************/\r\n  public addAlternative(): void {\r\n    this.currentAlternative = undefined;\r\n    this.alternativeDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showAlternativePopup = true;\r\n  }\r\n  public deleteAlternative(): void {\r\n    const partialMessageKey =\r\n      this.selectedAlternatives.length > 1 ? 'confirmOnDeleteAlternatives' : 'confirmOnDeleteAlternative';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.selectedAlternatives.forEach((selected) => {\r\n          if (!!this.alternativeTable) {\r\n            this.alternativeTable = this.alternativeTable.filter(\r\n              (alternative) =>\r\n                alternative.birePnByFkBidtPnBidtPn2BirePnPnCode !== selected.birePnByFkBidtPnBidtPn2BirePnPnCode\r\n            );\r\n          } else {\r\n            super.throwUnboundLocalError('deleteAlternative', 'this.alternativeTable');\r\n          }\r\n        });\r\n        this.selectedAlternatives = [];\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteAlternative'));\r\n      }\r\n    });\r\n  }\r\n  public editAlternative(): void {\r\n    this.currentAlternative = { ...this.selectedAlternatives[0] };\r\n    if (!!this.currentAlternative) {\r\n      this.currentAlternativeIndex = this.alternativeTable.findIndex((alternative) => {\r\n        return (\r\n          !!alternative.birePnByFkBidtPnBidtPn2BirePnPnCode &&\r\n          !!this.selectedAlternatives[0].birePnByFkBidtPnBidtPn2BirePnPnCode &&\r\n          alternative.birePnByFkBidtPnBidtPn2BirePnPnCode ===\r\n            this.selectedAlternatives[0].birePnByFkBidtPnBidtPn2BirePnPnCode\r\n        );\r\n      });\r\n    }\r\n    this.alternativeDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showAlternativePopup = true;\r\n  }\r\n  public openAlternative(): void {\r\n    if (this.selectedAlternatives.length === 1) {\r\n      this.currentAlternative = this.selectedAlternatives[0];\r\n      this.currentAlternativeIndex = -1;\r\n      this.alternativeDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showAlternativePopup = true;\r\n    }\r\n  }\r\n  public onAddAlternative(event: BidtPnAlternativeDTO): void {\r\n    if (!!event) {\r\n      const alternativeAttribute: BidtPnAlternativeDTO = {\r\n        birePnByFkBidtPnBidtPn1BirePnPnCode: this.materialFieldData.pnCode,\r\n        birePnByFkBidtPnBidtPn2BirePnPnCode: event.birePnByFkBidtPnBidtPn2BirePnPnCode,\r\n        alternativeType: event.alternativeType ? event.alternativeType : undefined,\r\n        alternativeComment: event.alternativeComment ? event.alternativeComment : '',\r\n        nameOfInterchangebilty: event.nameOfInterchangebilty ? event.nameOfInterchangebilty : ''\r\n      };\r\n      const isAdded = this.alternativeTable.some((alternativeData) => {\r\n        return DTOUtils.equalsAlternativeTableDTO(alternativeAttribute, alternativeData);\r\n      });\r\n      if (this.alternativeDialogOpenMode === ComponentOpenMode.Write) {\r\n        const checkElement = this.alternativeTable.filter((alternativeData, index) => {\r\n          return (\r\n            index !== this.currentAlternativeIndex &&\r\n            alternativeData.birePnByFkBidtPnBidtPn2BirePnPnCode ===\r\n              alternativeAttribute.birePnByFkBidtPnBidtPn2BirePnPnCode\r\n          );\r\n        });\r\n        if (checkElement.length === 0) {\r\n          this.alternativeTable[this.currentAlternativeIndex] = alternativeAttribute;\r\n        } else {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('warningOnAlternativeExists'));\r\n        }\r\n      } else {\r\n        if (isAdded) {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('warningOnAlternativeExists'));\r\n        } else {\r\n          this.alternativeTable = [...this.alternativeTable, alternativeAttribute];\r\n        }\r\n      }\r\n    }\r\n    this.selectedAlternatives = [];\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Container Dialog\r\n   *************************************************************************/\r\n\r\n  public addContainer(): void {\r\n    this.currentContainer = undefined;\r\n    this.containerDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showContainerPopup = true;\r\n  }\r\n\r\n  public deleteContainer(): void {\r\n    const partialMessageKey =\r\n      this.selectedContainer.length > 1 ? 'confirmOnDeleteContainerPns' : 'confirmOnDeleteContainerPn';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.selectedContainer.forEach((selected) => {\r\n          if (!!this.containerTable) {\r\n            this.containerTable = this.containerTable.filter((container) => container.pnCode !== selected.pnCode);\r\n          } else {\r\n            super.throwUnboundLocalError('deleteContainer', 'this.containerTable');\r\n          }\r\n        });\r\n        this.selectedContainer = [];\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteContainerPn'));\r\n      }\r\n    });\r\n  }\r\n\r\n  public editContainer(): void {\r\n    this.currentContainer = { ...this.selectedContainer[0] };\r\n    if (!!this.currentContainer) {\r\n      this.currentContainerIndex = this.containerTable.findIndex((container) => {\r\n        return (\r\n          !!container.pnCode &&\r\n          !!this.selectedContainer[0].pnCode &&\r\n          container.pnCode === this.selectedContainer[0].pnCode\r\n        );\r\n      });\r\n    }\r\n    this.containerDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showContainerPopup = true;\r\n  }\r\n  public openContainer(): void {\r\n    if (this.selectedContainer.length === 1) {\r\n      this.currentContainer = this.selectedContainer[0];\r\n      this.currentContainerIndex = -1;\r\n      this.containerDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showContainerPopup = true;\r\n    }\r\n  }\r\n  public onAddContainer(event: BirePnDTO): void {\r\n    if (!!event) {\r\n      const containerAttribute: ContainerTableRow = {\r\n        pnCode: event.pnCode,\r\n        articleDesignation: event.articleDesignation\r\n      };\r\n      const isAdded = this.containerTable.some((containerData) => {\r\n        return DTOUtils.equalsContainerTableDTO(containerAttribute, containerData);\r\n      });\r\n      if (this.containerDialogOpenMode === ComponentOpenMode.Write) {\r\n        this.containerTable[this.currentContainerIndex] = containerAttribute;\r\n      } else {\r\n        if (isAdded) {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('warningOnContainerExists'));\r\n        } else {\r\n          this.containerTable = [...this.containerTable, containerAttribute];\r\n        }\r\n      }\r\n    }\r\n    this.selectedContainer = [];\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Supply Conversion Dialog\r\n   *************************************************************************/\r\n\r\n  public addSupplyConversion(): void {\r\n    this.currentSupplyConversion = undefined;\r\n    this.supplyConversionDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showSupplyConversionPopup = true;\r\n  }\r\n\r\n  public deleteSupplyConversion(): void {\r\n    const partialMessageKey =\r\n      this.selectedSupplyConversion.length > 1 ? 'confirmOnDeleteSupplyConversions' : 'confirmOnDeleteSupplyConversion';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.selectedSupplyConversion.forEach((selected) => {\r\n          if (!!this.supplyConversionTable) {\r\n            this.supplyConversionTable = this.supplyConversionTable.filter(\r\n              (supplyConversion) => supplyConversion.alternativeUnit !== selected.alternativeUnit\r\n            );\r\n          } else {\r\n            super.throwUnboundLocalError('deleteSupplyConversion', 'this.supplyConversionTable');\r\n          }\r\n        });\r\n        this.selectedSupplyConversion = [];\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteSupplyConversion'));\r\n      }\r\n    });\r\n  }\r\n\r\n  public editSupplyConversion(): void {\r\n    this.currentSupplyConversion = { ...this.selectedSupplyConversion[0] };\r\n    if (!!this.currentSupplyConversion) {\r\n      this.currentSupplyConversionIndex = this.supplyConversionTable.findIndex((supplyConversion) => {\r\n        return (\r\n          !!supplyConversion.pnCode &&\r\n          !!this.selectedSupplyConversion[0].pnCode &&\r\n          supplyConversion.pnCode === this.selectedSupplyConversion[0].pnCode\r\n        );\r\n      });\r\n    }\r\n    this.supplyConversionDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showSupplyConversionPopup = true;\r\n  }\r\n  public openSupplyConversion(): void {\r\n    if (this.selectedSupplyConversion.length === 1) {\r\n      this.currentSupplyConversion = this.selectedSupplyConversion[0];\r\n      this.currentSupplyConversionIndex = -1;\r\n      this.supplyConversionDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showSupplyConversionPopup = true;\r\n    }\r\n  }\r\n  public onAddSupplyConversion(event: BirePartUnitConversionDTO): void {\r\n    if (!!event) {\r\n      const supplyConversionAttribute: SupplyConversionTableRow = {\r\n        pnCode: event.pnCode,\r\n        unit: event.unit,\r\n        alternativeUnit: event.alternativeUnit,\r\n        factor: event.factor\r\n      };\r\n      const isAdded = this.supplyConversionTable.some((supplyConversionData) => {\r\n        return DTOUtils.equalsSupplyConversionTableDTO(supplyConversionAttribute, supplyConversionData);\r\n      });\r\n      if (this.supplyConversionDialogOpenMode === ComponentOpenMode.Write) {\r\n        this.supplyConversionTable[this.currentSupplyConversionIndex] = supplyConversionAttribute;\r\n      } else {\r\n        if (isAdded) {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('warningOnSupplyConversionExists'));\r\n        } else {\r\n          this.supplyConversionTable = [...this.supplyConversionTable, supplyConversionAttribute];\r\n        }\r\n      }\r\n    }\r\n    this.selectedSupplyConversion = [];\r\n  }\r\n\r\n  private loadUnitOfIssueOptions(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.UNIT_OF_ISSUE_MAP).subscribe(\r\n      (results) => {\r\n        this.unitOfIssueOptions = results;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetPartGuidelineTypes'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public showCreateProcurementDialog(): void {\r\n    this.createProcurementDialogVisible = true;\r\n  }\r\n\r\n  public onCreateProcurementRequest(procurementRequest: BidtProcurementRequestDTO): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_PROCUREMENT_REQUEST_FORM,\r\n      objectId: this.serializationService.serialize({ id: procurementRequest.id }),\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public showStatus(): void {\r\n    if (!this.isCreateOpenMode) {\r\n      const overlayRef = this._overlayService.openWithPositionCenter<string | undefined>({\r\n        content: ObjectStatusComponent,\r\n        data: {\r\n          currentAuthor: this.materialFieldData.statusUser,\r\n          currentDate: this.materialFieldData.statusDate,\r\n          currentStatus: {\r\n            label: this._formatSelectOption.transform(this.materialFieldData.statusState, this.workflowStatus),\r\n            value: this.materialFieldData.statusState\r\n          },\r\n          nextStatuses: this.workflowStatus\r\n        }\r\n      });\r\n\r\n      overlayRef.afterClosed$.subscribe({\r\n        next: (event) => {\r\n          if (event.data) {\r\n            const currentState = this.materialFieldData.statusState;\r\n            this.materialFieldData.statusState = event.data;\r\n            const saved = this.saveMaterial();\r\n            if (!saved) {\r\n              // Revert status change if save not launched\r\n              this.materialFieldData.statusState = currentState;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private loadSparePartClassDropdown(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.SPARE_PART_CLASS_CODE).subscribe((results) => {\r\n      this.sparePartClassOptions = results;\r\n    });\r\n  }\r\n\r\n  public isMaterialContainer(): boolean {\r\n    return this.materialFieldData.pnType === AWPropertiesConstants.PN_TYPE_BOX_KEY;\r\n  }\r\n\r\n  private isUnitOfIssueInitialised(result: MaterialDataDTO): boolean {\r\n    return !!result.birePnDTO.unitOfIssue;\r\n  }\r\n\r\n  private loadServiceType(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.MM_SERVICE_TYPE_MAP).subscribe((results) => {\r\n      this.serviceType = results;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".material\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n        <div class=\\\"form-control-data\\\" (click)=\\\"quickSearchMaterial()\\\">\\r\\n          {{ alternativeDetail.birePnByFkBidtPnBidtPn2BirePnPnCode }}\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"alternativeDetail.birePnByFkBidtPnBidtPn2BirePnPnCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n          <i\\r\\n            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n            aria-hidden=\\\"true\\\"\\r\\n            (click)=\\\"resetMaterials()\\\"\\r\\n          ></i>\\r\\n        </div>\\r\\n        <div class=\\\"btn-search-wrapper\\\">\\r\\n          <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"quickSearchMaterial()\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".interchangeability\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [options]=\\\"interchangeability\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [(ngModel)]=\\\"alternativeDetail.alternativeType\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".comment\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [rows]=\\\"3\\\"\\r\\n          pInputTextarea\\r\\n          maxlength=\\\"300\\\"\\r\\n          autoResize=\\\"autoResize\\\"\\r\\n          [(ngModel)]=\\\"alternativeDetail.alternativeComment\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!isScreenValid()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-material\\r\\n  *ngIf=\\\"showQuickSearchMaterialPopup\\\"\\r\\n  [(display)]=\\\"showQuickSearchMaterialPopup\\\"\\r\\n  [material-code]=\\\"alternativeDetail.birePnByFkBidtPnBidtPn2BirePnPnCode\\\"\\r\\n  (onSelected)=\\\"setSelectedMaterial($event)\\\"\\r\\n></aw-dialog-search-material>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../../shared/services/session.service';\r\nimport { BidtPnAlternativeDTO } from '../../../../../../shared/types/api-types/bidt-pn-alternative-dto.interface';\r\nimport { BirePnDTO } from '../../../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { DialogComponent } from '../../../../../../shared/types/dialog-component';\r\nimport { SelectItemUtils } from '../../../../../../shared/utils/select-item-utils';\r\nimport { MaterialFormService } from '../../material-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-assign-alternative-popup-form',\r\n  templateUrl: './assign-alternative-popup-form.component.html',\r\n  styleUrls: ['../popup-form.component.scss']\r\n})\r\nexport class AssignAlternativesPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtPnAlternativeDTO>;\r\n\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public alternativeDetail: BidtPnAlternativeDTO;\r\n\r\n  @Input()\r\n  public pnCode: string;\r\n  public interchangeability: SelectItem[];\r\n  public showQuickSearchMaterialPopup: boolean;\r\n\r\n  public searchObject: BirePnDTO;\r\n\r\n  public constructor(\r\n    public messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService,\r\n    public materialFormService: MaterialFormService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'AssignAlternativesPopupFormComponent');\r\n    this.onValidated = new EventEmitter<BidtPnAlternativeDTO>();\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.showQuickSearchMaterialPopup = false;\r\n    this.searchObject = {};\r\n    this.loadDropDown();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.alternativeDetail) {\r\n      this.resetMaterials();\r\n    }\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'AssignAlternativesPopupFormComponent';\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n  public loadDropDown() {\r\n    this.propertiesService.getValue('getPnInterchangeabilityMap').subscribe((results) => {\r\n      this.interchangeability = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  public resetMaterials(): void {\r\n    this.alternativeDetail = {};\r\n  }\r\n  public quickSearchMaterial(): void {\r\n    this.searchObject = {\r\n      pnCode: this.alternativeDetail.birePnByFkBidtPnBidtPn2BirePnPnCode\r\n    };\r\n    this.showQuickSearchMaterialPopup = true;\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.alternativeDetail) {\r\n      this.alternativeDetail.nameOfInterchangebilty = '';\r\n      this.interchangeability.forEach((res) => {\r\n        if (!!this.alternativeDetail && this.alternativeDetail.alternativeType === res.value) {\r\n          this.alternativeDetail.nameOfInterchangebilty = res.label;\r\n        }\r\n      });\r\n      if (this.pnCode === this.alternativeDetail.birePnByFkBidtPnBidtPn2BirePnPnCode) {\r\n        this.messageService.showWarningMessage(this.getTranslateKey('sameAlternativeError'));\r\n      } else {\r\n        this.onValidated.emit(this.alternativeDetail);\r\n      }\r\n    }\r\n    this.cancel();\r\n  }\r\n  public isScreenValid() {\r\n    if (this.alternativeDetail && this.alternativeDetail.birePnByFkBidtPnBidtPn2BirePnPnCode) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /*************************************************************************\r\n   * Dialog Search Material\r\n   *************************************************************************/\r\n\r\n  public setSelectedMaterial(event: BirePnDTO): void {\r\n    if (!!this.alternativeDetail) {\r\n      if (Object.keys(event).length === 0) {\r\n        this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n      }\r\n      this.alternativeDetail.birePnByFkBidtPnBidtPn2BirePnPnCode = event.pnCode;\r\n    } else {\r\n      super.throwUnboundLocalError('setSelectedContact', 'this.contact');\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".code\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control form-control-with-modal\\\">\\r\\n          <div [ngClass]=\\\"{ 'form-control-data': !isReadOpenMode }\\\" (click)=\\\"isReadOpenMode ? '' : searchPNCode()\\\">\\r\\n            {{ containerDetail.pnCode }}\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!isReadOpenMode\\\" class=\\\"btn-search-wrapper\\\">\\r\\n            <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"searchPNCode()\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isReadOpenMode\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusUser\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control form-control-with-modal\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"containerDetail.statusUser\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isReadOpenMode\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusDate\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control form-control-with-modal\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"goodFormattedDate\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isReadOpenMode\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusState\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control form-control-with-modal\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"containerDetail.statusState\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!isScreenValid()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-material\\r\\n  *ngIf=\\\"showSearchPartDialog\\\"\\r\\n  [(display)]=\\\"showSearchPartDialog\\\"\\r\\n  (onSelected)=\\\"setSelectedPnCode($event)\\\"\\r\\n  [pnType]=\\\"containerDetail.pnType\\\"\\r\\n></aw-dialog-search-material>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { AWPropertiesConstants } from '../../../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { DateService } from '../../../../../../shared/services/date.service';\r\nimport { InputValidationService } from '../../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../../shared/services/session.service';\r\nimport { BirePnDTO } from '../../../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { DialogComponent } from '../../../../../../shared/types/dialog-component';\r\nimport { MaterialFormService } from '../../material-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-assign-container-popup-form',\r\n  templateUrl: './assign-container-popup-form.component.html',\r\n  styleUrls: ['../popup-form.component.scss']\r\n})\r\nexport class AssignContainerPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public containerDetail: BirePnDTO;\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Input()\r\n  public pnType: string;\r\n  @Output()\r\n  public onValidated: EventEmitter<BirePnDTO>;\r\n\r\n  public showSearchPartDialog: boolean;\r\n  public isEditable: boolean;\r\n  public goodFormattedDate: string;\r\n\r\n  public constructor(\r\n    public inputValidationService: InputValidationService,\r\n    public messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService,\r\n    public materialFormService: MaterialFormService,\r\n    public readonly _dateService: DateService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'AssignContainerPopupFormComponent');\r\n    this.onValidated = new EventEmitter<BirePnDTO>();\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.showSearchPartDialog = false;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n\r\n    if (!this.containerDetail) {\r\n      this.containerDetail = {};\r\n    } else {\r\n      this.goodFormattedDate = this._dateService.dateToString(this.containerDetail.statusDate);\r\n    }\r\n\r\n    if (this.pnType === AWPropertiesConstants.PN_TYPE_BOX_KEY) {\r\n      this.containerDetail.pnType = '';\r\n    } else {\r\n      this.containerDetail.pnType = AWPropertiesConstants.PN_TYPE_BOX_KEY;\r\n    }\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'AssignContainerPopupFormComponent';\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    if (!!this.containerDetail.pnCode) {\r\n      this.onValidated.emit(this.containerDetail);\r\n    }\r\n    this.cancel();\r\n  }\r\n\r\n  public isScreenValid() {\r\n    if (!!this.containerDetail.pnCode) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public searchPNCode() {\r\n    this.showSearchPartDialog = true;\r\n  }\r\n\r\n  public setSelectedPnCode(selectedObject: BirePnDTO) {\r\n    if (selectedObject) {\r\n      this.containerDetail = selectedObject;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\n  <a-header>\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\n  </a-header>\\n\\n  <a-content>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".supplier\\\" | translate }}</label>\\n\\n      <div class=\\\"form-control\\\">\\n        <p-dropdown\\n          class=\\\"aw-dropdown fixed-width\\\"\\n          placeholder=\\\"&nbsp;\\\"\\n          [options]=\\\"supplier\\\"\\n          [(ngModel)]=\\\"supplierDetail.bidoCustomerCustomerCode\\\"\\n          [showClear]=\\\"true\\\"\\n          appendTo=\\\"body\\\"\\n          [disabled]=\\\"isReadOpenMode\\\"\\n        ></p-dropdown>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".delay\\\" | translate }}</label>\\n\\n      <div class=\\\"form-control\\\">\\n        <input\\n          #numberOfDays=\\\"ngModel\\\"\\n          type=\\\"text\\\"\\n          class=\\\"aw-input\\\"\\n          [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\n          [pValidateOnly]=\\\"true\\\"\\n          maxlength=\\\"10\\\"\\n          [(ngModel)]=\\\"supplierDetail.numberOfDays\\\"\\n          [disabled]=\\\"isReadOpenMode\\\"\\n        />\\n        <p-message\\n          *ngIf=\\\"numberOfDays.invalid && (numberOfDays.dirty || numberOfDays.touched)\\\"\\n          severity=\\\"error\\\"\\n          [text]=\\\"inputValidationService.formatOfNumber()\\\"\\n        ></p-message>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".quantity\\\" | translate }}</label>\\n\\n      <div class=\\\"form-control\\\">\\n        <input\\n          #productQuantity=\\\"ngModel\\\"\\n          type=\\\"text\\\"\\n          class=\\\"aw-input\\\"\\n          [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\n          [pValidateOnly]=\\\"true\\\"\\n          maxlength=\\\"50\\\"\\n          [(ngModel)]=\\\"supplierDetail.productQuantity\\\"\\n          [disabled]=\\\"isReadOpenMode\\\"\\n        />\\n        <p-message\\n          *ngIf=\\\"productQuantity.invalid && (productQuantity.dirty || productQuantity.touched)\\\"\\n          severity=\\\"error\\\"\\n          [text]=\\\"inputValidationService.formatOfNumber()\\\"\\n        ></p-message>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".price\\\" | translate }}</label>\\n\\n      <div class=\\\"form-control\\\">\\n        <input\\n          #priceValue=\\\"ngModel\\\"\\n          type=\\\"text\\\"\\n          style=\\\"width:80%\\\"\\n          class=\\\"aw-input\\\"\\n          [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\n          [pValidateOnly]=\\\"true\\\"\\n          maxlength=\\\"50\\\"\\n          [(ngModel)]=\\\"supplierDetail.priceValue\\\"\\n          [disabled]=\\\"isReadOpenMode\\\"\\n        />\\n        <span style=\\\"width:20%;padding-top:1em; float:right\\\">{{ getComponentName() + \\\".euro\\\" | translate }}</span>\\n        <p-message\\n          *ngIf=\\\"priceValue.invalid && (priceValue.dirty || priceValue.touched)\\\"\\n          severity=\\\"error\\\"\\n          [text]=\\\"inputValidationService.formatOfNumber()\\\"\\n        ></p-message>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".serviceType\\\" | translate }}</label>\\n\\n      <div class=\\\"form-control\\\">\\n        <p-dropdown\\n          class=\\\"aw-dropdown fixed-width\\\"\\n          placeholder=\\\"&nbsp;\\\"\\n          [options]=\\\"serviceType\\\"\\n          [(ngModel)]=\\\"supplierDetail.serviceType\\\"\\n          [showClear]=\\\"true\\\"\\n          appendTo=\\\"body\\\"\\n          [disabled]=\\\"isReadOpenMode\\\"\\n        ></p-dropdown>\\n      </div>\\n    </div>\\n  </a-content>\\n\\n  <a-footer>\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\n    </button>\\n\\n    <button\\n      *ngIf=\\\"!isReadOpenMode\\\"\\n      type=\\\"button\\\"\\n      mat-raised-button\\n      color=\\\"primary\\\"\\n      color=\\\"primary\\\"\\n      (click)=\\\"validate()\\\"\\n      [disabled]=\\\"\\n        (numberOfDays.invalid && (numberOfDays.dirty || numberOfDays.touched)) ||\\n        (productQuantity.invalid && (productQuantity.dirty || productQuantity.touched)) ||\\n        (priceValue.invalid && (priceValue.dirty || priceValue.touched)) ||\\n        !isScreenValid()\\n      \\\"\\n    >\\n      {{ \\\"global.validate\\\" | translate }}\\n    </button>\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\n      {{ \\\"global.close\\\" | translate }}\\n    </button>\\n  </a-footer>\\n</a-modal>\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\n\nimport { AWPropertiesConstants } from '../../../../../../shared/constants/aw-properties-constants';\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\nimport { InputValidationService } from '../../../../../../shared/services/input-validation.service';\nimport { MessageService } from '../../../../../../shared/services/message.service';\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\nimport { SessionService } from '../../../../../../shared/services/session.service';\nimport { BidoCustomerDTO } from '../../../../../../shared/types/api-types/bido-customer-dto.interface';\nimport { BidtProductCustomerDTO } from '../../../../../../shared/types/api-types/bidt-product-customer-dto.interface';\nimport { DialogComponent } from '../../../../../../shared/types/dialog-component';\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\nimport { MaterialFormService } from '../../material-form.service';\n\n@Component({\n  selector: 'aw-assign-supplier-popup-form',\n  templateUrl: './assign-supplier-popup-form.component.html',\n  styleUrls: ['../popup-form.component.scss']\n})\nexport class AssignSuppliersPopupFormComponent extends DialogComponent implements OnInit {\n  @Input()\n  public supplierDetail: BidtProductCustomerDTO;\n  @Output()\n  public onValidated: EventEmitter<BidtProductCustomerDTO>;\n  @Input()\n  public openMode: ComponentOpenMode;\n  @Input()\n  public priceCurrency: string;\n  @Input()\n  public serviceType: SelectItem[];\n\n  public supplier: SelectItem[];\n\n  public constructor(\n    public inputValidationService: InputValidationService,\n    public messageService: MessageService,\n    public sessionService: SessionService,\n    public propertiesService: PropertiesService,\n    public materialFormService: MaterialFormService\n  ) {\n    super(ComponentOpenMode.Read, 'AssignSuppliersPopupFormComponent');\n    this.onValidated = new EventEmitter<BidtProductCustomerDTO>();\n    this.displayChange = new EventEmitter<boolean>();\n    this.priceCurrency = '';\n    this.loadSupplier();\n  }\n\n  public ngOnInit() {\n    this.updateOpenMode(this.openMode);\n    if (!this.supplierDetail) {\n      this.supplierDetail = {};\n    } else {\n      this.serviceType.forEach((type) => {\n        if (type.label === this.supplierDetail.serviceType) {\n          this.supplierDetail.serviceType = type.value;\n        }\n      });\n    }\n  }\n\n  public getTypeName(): string {\n    return 'AssignSuppliersPopupFormComponent';\n  }\n\n  // tslint:disable-next-line:no-empty\n  public validate(): void {\n    if (!!this.supplierDetail) {\n      this.supplier.forEach((res) => {\n        if (!!this.supplierDetail && this.supplierDetail.bidoCustomerCustomerCode === res.value) {\n          this.supplierDetail.supplierName = res.label;\n        }\n      });\n      this.supplierDetail.priceUnit = this.priceCurrency;\n      this.onValidated.emit(this.supplierDetail);\n    }\n    this.cancel();\n  }\n\n  public cancel(): void {\n    this.display = false;\n  }\n\n  public loadSupplier(): void {\n    const input = {\n      customerCode: '',\n      customerType: AWPropertiesConstants.CUSTOMER_TYPE_SUP_KEY\n    };\n    this.materialFormService.findBidoCustomersBySearchCriteria(input).subscribe((results) => {\n      const labelValue: LabelValue<String>[] = [];\n      results.list.forEach((res: BidoCustomerDTO) => {\n        if (!!res && !!res.customerCode) {\n          labelValue.push({\n            label: `${res.customerCode}${res.customerName !== null ? `-${res.customerName}` : ''}`,\n            value: res.customerCode.toString()\n          });\n        }\n      });\n\n      this.supplier = labelValue;\n    });\n  }\n\n  public isScreenValid() {\n    if (\n      this.supplierDetail &&\n      this.supplierDetail.bidoCustomerCustomerCode &&\n      this.supplierDetail.numberOfDays &&\n      this.supplierDetail.priceValue &&\n      this.supplierDetail.productQuantity &&\n      this.supplierDetail.serviceType\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n}\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".alternativeUnit\\\" | translate }}</label>\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown\\r\\n            class=\\\"aw-dropdown fixed-width\\\"\\r\\n            [options]=\\\"unitOfIssueOptions\\\"\\r\\n            [(ngModel)]=\\\"supplyConversionDetail.alternativeUnit\\\"\\r\\n            [showClear]=\\\"true\\\"\\r\\n            placeholder=\\\"&nbsp;\\\"\\r\\n            [disabled]=\\\"isReadOpenMode\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n          ></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".factor\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <input\\r\\n            class=\\\"aw-input\\\"\\r\\n            type=\\\"number\\\"\\r\\n            [(ngModel)]=\\\"supplyConversionDetail.factor\\\"\\r\\n            [disabled]=\\\"isReadOpenMode\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!isScreenValid()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { DateService } from '../../../../../../shared/services/date.service';\r\nimport { InputValidationService } from '../../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../../shared/services/session.service';\r\nimport { BirePartUnitConversionDTO } from '../../../../../../shared/types/api-types/bire-part-unit-conversion-dto.interface';\r\nimport { DialogComponent } from '../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { MaterialFormService } from '../../material-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-assign-supply-conversion-popup-form',\r\n  templateUrl: './assign-supply-conversion-popup-form.component.html',\r\n  styleUrls: ['../popup-form.component.scss']\r\n})\r\nexport class AssignSupplyConversionPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public pnCode: string;\r\n  @Input()\r\n  public supplyConversionDetail: BirePartUnitConversionDTO;\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Input()\r\n  public supplyUnit: number;\r\n  @Input()\r\n  public unitOfIssueOptions: LabelValue<string>[];\r\n  @Output()\r\n  public onValidated: EventEmitter<BirePartUnitConversionDTO>;\r\n\r\n  public isEditable: boolean;\r\n  public goodFormattedDate: string;\r\n\r\n  public constructor(\r\n    public inputValidationService: InputValidationService,\r\n    public messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService,\r\n    public materialFormService: MaterialFormService,\r\n    public readonly _dateService: DateService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'AssignSupplyConversionPopupFormComponent');\r\n    this.onValidated = new EventEmitter<BirePartUnitConversionDTO>();\r\n    this.displayChange = new EventEmitter<boolean>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.supplyConversionDetail) {\r\n      this.supplyConversionDetail = {};\r\n    } else {\r\n      this.unitOfIssueOptions.forEach((res) => {\r\n        if (this.supplyConversionDetail.alternativeUnit === res.label) {\r\n          this.supplyConversionDetail.alternativeUnit = res.value;\r\n        }\r\n      });\r\n    }\r\n    this.supplyConversionDetail.pnCode = this.pnCode;\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'AssignSupplyConversionPopupFormComponent';\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    if (!!this.supplyConversionDetail.pnCode) {\r\n      this.supplyConversionDetail.unit = this.unitOfIssueOptions[this.supplyUnit - 1].label;\r\n      this.unitOfIssueOptions.forEach((res) => {\r\n        if (this.supplyConversionDetail.alternativeUnit === res.value) {\r\n          this.supplyConversionDetail.alternativeUnit = res.label;\r\n        }\r\n      });\r\n      this.onValidated.emit(this.supplyConversionDetail);\r\n    }\r\n    this.cancel();\r\n  }\r\n\r\n  public isScreenValid() {\r\n    if (!!this.supplyConversionDetail.alternativeUnit && !!this.supplyConversionDetail.factor) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".valuation\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [options]=\\\"valuation\\\"\\r\\n          [(ngModel)]=\\\"valuationGroupId\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".value\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          #priceValue=\\\"ngModel\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          style=\\\"width:45%\\\"\\r\\n          [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n          [pValidateOnly]=\\\"true\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [(ngModel)]=\\\"valuationDetail.priceValue\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        />\\r\\n        <span style=\\\"width:55%;padding-top:1em; float:right\\\" *ngIf=\\\"priceCurrency\\\">{{ priceCurrency }}</span>\\r\\n        <p-message\\r\\n          *ngIf=\\\"priceValue.invalid && (priceValue.dirty || priceValue.touched)\\\"\\r\\n          severity=\\\"error\\\"\\r\\n          [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n        ></p-message>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"(priceValue.invalid && (priceValue.dirty || priceValue.touched)) || !isScreenValid()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { InputValidationService } from '../../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../../shared/services/session.service';\r\nimport { BidtPriceDTO } from '../../../../../../shared/types/api-types/bidt-price-dto.interface';\r\nimport { BidtValuationGroupDTO } from '../../../../../../shared/types/api-types/bidt-valuation-group-dto.interface';\r\nimport { DialogComponent } from '../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { MaterialFormService } from '../../material-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-assign-valuation-popup-form',\r\n  templateUrl: './assign-valuation-popup-form.component.html',\r\n  styleUrls: ['../popup-form.component.scss']\r\n})\r\nexport class AssignValuationPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public valuationDetail: BidtPriceDTO;\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtPriceDTO>;\r\n  public isEditable: boolean;\r\n  public valuation: SelectItem[];\r\n  public valuationGroupId : string | undefined;\r\n\r\n  @Input()\r\n  public priceCurrency: string;\r\n\r\n  public constructor(\r\n    public inputValidationService: InputValidationService,\r\n    public messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService,\r\n    public materialFormService: MaterialFormService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'AssignValuationPopupFormComponent');\r\n    this.onValidated = new EventEmitter<BidtPriceDTO>();\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.loadValuation();\r\n    this.priceCurrency = '';\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.valuationDetail) {\r\n      this.valuationDetail = {};\r\n    } else {\r\n      this.valuationGroupId = this.valuationDetail.bidtValuationGroupId ?\r\n      this.valuationDetail.bidtValuationGroupId.toString() : '';\r\n    }\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'AssignValuationPopupFormComponent';\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public loadValuation(): void {\r\n    this.materialFormService.findAllValuation().subscribe((result) => {\r\n      const labelValue: LabelValue<String>[] = [];\r\n      result.forEach((res: BidtValuationGroupDTO) => {\r\n        if (!!res && !!res.id && !!res.valuationGroupName) {\r\n          labelValue.push({\r\n            label: res.valuationGroupName,\r\n            value: res.id.toString()\r\n          });\r\n        }\r\n      });\r\n\r\n      this.valuation = labelValue;\r\n    });\r\n  }\r\n  public validate(): void {\r\n    if (!!this.valuationDetail) {\r\n      this.valuation.forEach((res) => {\r\n        if (!!this.valuationDetail && this.valuationGroupId === res.value) {\r\n          this.valuationDetail.valuationName = res.label;\r\n        }\r\n      });\r\n      this.valuationDetail.bidtValuationGroupId = this.valuationGroupId ?\r\n      parseInt(this.valuationGroupId, 10) : undefined;\r\n      this.valuationDetail.priceUnit = this.priceCurrency;\r\n      this.onValidated.emit(this.valuationDetail);\r\n    }\r\n    this.cancel();\r\n  }\r\n  public isScreenValid() {\r\n    if (this.valuationDetail && this.valuationGroupId && this.valuationDetail.priceValue) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".site\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [options]=\\\"sites\\\"\\r\\n          [(ngModel)]=\\\"siteId\\\"\\r\\n          (onChange)=\\\"loadWarehouse()\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".warehouse\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          [options]=\\\"warehouse\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [(ngModel)]=\\\"wareHouseId\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          (onChange)=\\\"loadStorageBins()\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".lowerThreshold\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          #whPrLowThreshold=\\\"ngModel\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n          [pValidateOnly]=\\\"true\\\"\\r\\n          maxlength=\\\"19\\\"\\r\\n          [(ngModel)]=\\\"warehouseDetail.whPrLowThreshold\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        />\\r\\n        <p-message\\r\\n          *ngIf=\\\"whPrLowThreshold.invalid && (whPrLowThreshold.dirty || whPrLowThreshold.touched)\\\"\\r\\n          severity=\\\"error\\\"\\r\\n          [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n        ></p-message>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".higherThreshold\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          #whPrHighThreshold=\\\"ngModel\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n          [pValidateOnly]=\\\"true\\\"\\r\\n          maxlength=\\\"19\\\"\\r\\n          [(ngModel)]=\\\"warehouseDetail.whPrHighThreshold\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        />\\r\\n        <p-message\\r\\n          *ngIf=\\\"whPrHighThreshold.invalid && (whPrHighThreshold.dirty || whPrHighThreshold.touched)\\\"\\r\\n          severity=\\\"error\\\"\\r\\n          [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n        ></p-message>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\" *ngFor=\\\"let bin of storageBinForWarehouse\\\">\\r\\n        <label class=\\\"form-label\\\"> {{ bin.label }} </label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-checkbox class=\\\"aw-checkbox\\\" binary=\\\"true\\\" [(ngModel)]=\\\"bin.value\\\"></p-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"\\r\\n        (whPrLowThreshold.invalid && (whPrLowThreshold.dirty || whPrLowThreshold.touched)) ||\\r\\n        (whPrHighThreshold.invalid && (whPrHighThreshold.dirty || whPrHighThreshold.touched)) ||\\r\\n        !isScreenValid()\\r\\n      \\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { InputValidationService } from '../../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../../shared/services/session.service';\r\nimport { WareHouseTableDTO } from '../../../../../../shared/types/api-input-types/logistics-material/warehouse-table-dto.interface';\r\nimport { BidtSiteDTO } from '../../../../../../shared/types/api-types/bidt-site-dto.interface';\r\nimport { BidtStorageBinDTO } from '../../../../../../shared/types/api-types/bidt-storage-bin-dto.interface';\r\nimport { BidtWarehouseDTO } from '../../../../../../shared/types/api-types/bidt-warehouse-dto.interface';\r\nimport { DialogComponent } from '../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { MaterialFormService } from '../../material-form.service';\r\n\r\ninterface StorageBinChk {\r\n  label: string;\r\n  bidtStorageBinDTO: BidtStorageBinDTO;\r\n  value: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-assign-warehouse-popup-form',\r\n  templateUrl: './assign-warehouse-popup-form.component.html',\r\n  styleUrls: ['../popup-form.component.scss']\r\n})\r\nexport class AssignWarehousePopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public warehouseDetail: WareHouseTableDTO;\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Output()\r\n  public onValidated: EventEmitter<WareHouseTableDTO>;\r\n  public isEditable: boolean;\r\n  public sites: SelectItem[];\r\n  public warehouse: SelectItem[];\r\n  public thersholdLower: Number | undefined;\r\n  public siteId: string | undefined;\r\n  public wareHouseId: string | undefined;\r\n  public storageBinForWarehouse: StorageBinChk[];\r\n\r\n  public constructor(\r\n    public inputValidationService: InputValidationService,\r\n    public messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService,\r\n    public materialFormService: MaterialFormService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'AssignWarehousePopupFormComponent');\r\n    this.onValidated = new EventEmitter<WareHouseTableDTO>();\r\n    this.displayChange = new EventEmitter<boolean>();\r\n\r\n    this.storageBinForWarehouse = [];\r\n    this.loadSites();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.warehouseDetail) {\r\n      this.warehouseDetail = {};\r\n    } else {\r\n      this.siteId = this.warehouseDetail.bidtSiteId ? this.warehouseDetail.bidtSiteId.toString() : undefined;\r\n      this.wareHouseId = this.warehouseDetail.wareHouseId ? this.warehouseDetail.wareHouseId.toString() : undefined;\r\n    }\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'AssignWarehousePopupFormComponent';\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.warehouseDetail) {\r\n      this.sites.forEach((res) => {\r\n        if (!!this.warehouseDetail && this.siteId === res.value) {\r\n          this.warehouseDetail.siteName = res.label;\r\n        }\r\n      });\r\n      this.warehouse.forEach((res) => {\r\n        if (!!this.warehouseDetail && this.wareHouseId === res.value) {\r\n          this.warehouseDetail.wHName = res.label;\r\n        }\r\n      });\r\n      this.warehouseDetail.bidtSiteId = this.siteId ? parseInt(this.siteId, 10) : undefined;\r\n      this.warehouseDetail.wareHouseId = this.wareHouseId ? parseInt(this.wareHouseId, 10) : undefined;\r\n      const lowThreshold = this.warehouseDetail.whPrLowThreshold;\r\n      const highThreshold = this.warehouseDetail.whPrHighThreshold;\r\n      if (lowThreshold && highThreshold && Number(lowThreshold) > Number(highThreshold)) {\r\n        this.messageService.showWarningMessage(this.getTranslateKey('warningOnThresholdValues'));\r\n      } else {\r\n        const bins: BidtStorageBinDTO[] = [];\r\n        this.storageBinForWarehouse.forEach((res) => {\r\n          if (res.value) {\r\n            bins.push(res.bidtStorageBinDTO);\r\n          }\r\n        });\r\n        this.warehouseDetail.bidtStorageBinDTOList = bins;\r\n        this.onValidated.emit(this.warehouseDetail);\r\n      }\r\n    }\r\n    this.cancel();\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public loadSites(): void {\r\n    this.materialFormService.findAllSites().subscribe((result) => {\r\n      const labelValue: LabelValue<String>[] = [];\r\n      result.forEach((res: BidtSiteDTO) => {\r\n        if (!!res && !!res.siteId) {\r\n          labelValue.push({\r\n            label: `${res.siteCode}-${res.siteName}`,\r\n            value: res.siteId.toString()\r\n          });\r\n        }\r\n      });\r\n      this.sites = labelValue;\r\n      this.loadWarehouse();\r\n    });\r\n  }\r\n\r\n  public loadWarehouse(): void {\r\n    if (!!this.warehouseDetail && !!this.siteId) {\r\n      const siteId = this.siteId;\r\n      this.materialFormService.findWarehouseBySite(siteId).subscribe((result) => {\r\n        const labelValue: LabelValue<String>[] = [];\r\n        result.forEach((res: BidtWarehouseDTO) => {\r\n          if (!!res && !!res.wareHouseId) {\r\n            labelValue.push({\r\n              label: `${res.whCode}-${res.whName}`,\r\n              value: res.wareHouseId.toString()\r\n            });\r\n          }\r\n        });\r\n        this.warehouse = labelValue;\r\n        this.loadStorageBins();\r\n      });\r\n    } else if (!!this.warehouseDetail && this.siteId === null) {\r\n      this.warehouse = [];\r\n      this.wareHouseId = undefined;\r\n    }\r\n  }\r\n\r\n  public isScreenValid() {\r\n    if (this.warehouseDetail && this.siteId && this.wareHouseId) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public loadStorageBins() {\r\n    if (!!this.wareHouseId) {\r\n      this.storageBinForWarehouse = [];\r\n      this.materialFormService.findByWarehouseId(parseInt(this.wareHouseId, 10)).subscribe((result) => {\r\n        if (!!result && !!result.list && result.list.length > 0) {\r\n          result.list.forEach((res) => {\r\n            if (!!res.sbNumber) {\r\n              this.storageBinForWarehouse.push({\r\n                label: res.sbNumber,\r\n                bidtStorageBinDTO: res,\r\n                value: false\r\n              });\r\n            }\r\n          });\r\n        }\r\n\r\n        if (this.openMode === ComponentOpenMode.Write) {\r\n          if (!!this.warehouseDetail.bidtStorageBinDTOList && this.warehouseDetail.bidtStorageBinDTOList.length > 0) {\r\n            this.renderBin(this.warehouseDetail);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.storageBinForWarehouse = [];\r\n    }\r\n  }\r\n\r\n  private renderBin(warehouse: WareHouseTableDTO) {\r\n    (warehouse.bidtStorageBinDTOList as BidtStorageBinDTO[]).forEach((res) => {\r\n      if (!!res.sbNumber) {\r\n        this.storageBinForWarehouse.forEach((r) => {\r\n          if (r.bidtStorageBinDTO.id === res.id) {\r\n            r.value = true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \":host .item-textbox {\\n  width: 5rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvbWF0ZXJpYWwvZm9ybS9wb3B1cHMvZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxhcHBcXG1haW5cXGxvZ2lzdGljc1xcbWF0ZXJpYWxcXGZvcm1cXHBvcHVwc1xccG9wdXAtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vbG9naXN0aWNzL21hdGVyaWFsL2Zvcm0vcG9wdXBzL3BvcHVwLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgLml0ZW0tdGV4dGJveCB7XHJcbiAgICB3aWR0aDogNXJlbTtcclxuICB9XHJcbn1cclxuIl19 */\"","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DialogSearchMaterialModule } from '../../../shared/components/dialog-search-material/dialog-search-material.module';\r\nimport { DialogTableModule } from '../../../shared/components/dialog-table/dialog-table.module';\r\nimport { DynamicAttributesModule } from '../../../shared/components/dynamic-attributes/dynamic-attributes.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { StatusUpdateHistoryModule } from '../../../shared/components/status-update-history/status-update-history.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { ProcurementRequestPopupModule } from '../procurement-request/search/procurement-request-popup/procurement-request-popup.module';\r\nimport { TransferOrderPopupModule } from '../transfer-order/search/transfer-order-popup/transfer-order-popup.module';\r\n\r\nimport { MaterialFormComponent } from './form/material-form.component';\r\nimport { MaterialFormService } from './form/material-form.service';\r\nimport { AssignAlternativesPopupFormComponent } from './form/popups/assign-alternative-popup-form/assign-alternative-popup-form.component';\r\nimport { AssignContainerPopupFormComponent } from './form/popups/assign-container-popup-form/assign-container-popup-form.component';\r\nimport { AssignSuppliersPopupFormComponent } from './form/popups/assign-supplier-popup-form/assign-supplier-popup-form.component';\r\nimport { AssignSupplyConversionPopupFormComponent } from './form/popups/assign-supply-conversion-popup-form/assign-supply-conversion-popup-form.component';\r\nimport { AssignValuationPopupFormComponent } from './form/popups/assign-valuation-popup-form/assign-valuation-popup-form.component';\r\nimport { AssignWarehousePopupFormComponent } from './form/popups/assign-warehouse-popup-form/assign-warehouse-popup-form.component';\r\nimport { MaterialSearchComponent } from './search/material-search.component';\r\nimport { MaterialSearchService } from './search/material-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DropdownModule,\r\n  FileUploadModule,\r\n  InputTextareaModule,\r\n  PrimeNgTableModule,\r\n  TooltipModule,\r\n  KeyFilterModule,\r\n  MessageModule,\r\n  RadioButtonModule,\r\n  SplitButtonModule,\r\n  TriStateCheckboxModule,\r\n  TableModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [\r\n  DialogTableModule,\r\n  DynamicAttributesModule,\r\n  ModalModule,\r\n  DialogSearchMaterialModule,\r\n  ComponentSidebarModule,\r\n  StatusUpdateHistoryModule,\r\n  ProcurementRequestPopupModule,\r\n  TransferOrderPopupModule\r\n];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [\r\n  AssignWarehousePopupFormComponent,\r\n  AssignSuppliersPopupFormComponent,\r\n  AssignValuationPopupFormComponent,\r\n  AssignAlternativesPopupFormComponent,\r\n  AssignContainerPopupFormComponent,\r\n  AssignSupplyConversionPopupFormComponent\r\n];\r\n\r\nconst DYNAMIC_COMPONENTS = [MaterialSearchComponent, MaterialFormComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [MaterialSearchService, MaterialFormService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class MaterialModule {}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewMaterial()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">{{ \\\"addToFavorite\\\" | translate }}</button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row search-criteria-header\\\">\\r\\n                  <i\\r\\n                    class=\\\"fa fa-fw fa-floppy-o aw-icon aw-icon-with-border search-criteria-action\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    pTooltip=\\\"{{ 'global.save' | translate }}\\\"\\r\\n                    tooltipPosition=\\\"top\\\"\\r\\n                  ></i>\\r\\n                  <i\\r\\n                    class=\\\"fa fa-fw fa-undo aw-icon aw-icon-with-border search-criteria-action\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    pTooltip=\\\"{{ 'global.reset' | translate }}\\\"\\r\\n                    tooltipPosition=\\\"top\\\"\\r\\n                    (click)=\\\"resetSearchCriteria()\\\"\\r\\n                  ></i>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".pnCode\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" maxlength=\\\"50\\\" [(ngModel)]=\\\"searchObject.pnCode\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".articleDesignation\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"aw-input\\\"\\r\\n                        maxlength=\\\"300\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.articleDesignation\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".pnType\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"types\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.pnType\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".traceability\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"traceability\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.traceability\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".statusState\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"propertyStatus\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.statusState\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".otanPnReference\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"aw-input\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.otanPnReference\\\"\\r\\n                        maxlength=\\\"20\\\"\\r\\n                        [disabled]=\\\"isReadOpenMode\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      class=\\\"btn-with-spinner\\\"\\r\\n                      color=\\\"primary\\\"\\r\\n                      (click)=\\\"search()\\\"\\r\\n                      appKeyPress\\r\\n                      [keyCode]=\\\"'Enter'\\\"\\r\\n                      (keyPress)=\\\"search()\\\"\\r\\n                    >\\r\\n                      <span *ngIf=\\\"isLoading\\\" class=\\\"lds-hourglass\\\"></span>\\r\\n                      {{ \\\"global.toSearch\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }} ({{\\r\\n                    materialTableDataSource ? materialTableDataSource.dataCount : 0\\r\\n                  }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <a-table [dataSource]=\\\"materialTableDataSource\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    *ngIf=\\\"\\r\\n                      materialTableDataSource &&\\r\\n                      materialTableDataSource.hasData &&\\r\\n                      !materialTableDataSource.hasDataSelection\\r\\n                    \\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportTable()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"hasManageAccessRight && materialTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"deleteMaterials()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"materialTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openSelectedMaterials()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"pnCode\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <a (click)=\\\"openMaterialFromLink(rowData)\\\"> {{ rowData[\\\"pnCode\\\"] }}</a>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"pnType\\\" let-rowData=\\\"rowData\\\">\\r\\n                  {{ rowData[\\\"pnTypeText\\\"] }}\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"statusState\\\" let-rowData=\\\"rowData\\\">\\r\\n                  {{ statusDictionary[rowData.statusState] }}\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\n\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\nimport { ExportService } from '../../../../shared/services/export.service';\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\nimport { LoaderService } from '../../../../shared/services/loader.service';\nimport { MessageService } from '../../../../shared/services/message.service';\nimport { PropertiesService } from '../../../../shared/services/properties.service';\nimport { SerializationService } from '../../../../shared/services/serialization.service';\nimport { TabService } from '../../../../shared/services/tab.service';\nimport { BirePnDTOId } from '../../../../shared/types/api-types/bire-pn-dto-id.interface';\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\nimport { PageComponent } from '../../../../shared/types/page-component';\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\nimport { SelectItemUtils } from '../../../../shared/utils/select-item-utils';\nimport { StringUtils } from '../../../../shared/utils/string-utils';\n\nimport { MaterialSearchService } from './material-search.service';\n\ninterface MaterialRowExport {\n  pnCode?: string;\n  pnType?: string;\n  articleDesignation?: string;\n  traceability?: string;\n  statusState?: string;\n}\n\ninterface MaterialTableInterface extends BirePnDTO {\n  pnTypeText?: string;\n}\n\n@Component({\n  selector: 'aw-material-search',\n  templateUrl: './material-search.component.html'\n})\nexport class MaterialSearchComponent extends PageComponent<PageComponentData> implements OnInit {\n  private static readonly CUSTOMER_TABLE_EXPORT_NAME: string = 'material-list';\n\n  public types: SelectItem[];\n  public materialTable: MaterialRowExport[];\n  public materialTableCols: TableColumn[];\n  public traceability: SelectItem[];\n  public searchObject: BirePnDTO;\n  public selectedMaterials: MaterialTableInterface[];\n  public propertyStatus: LabelValue<string>[];\n  public statusDictionary: { [value: string]: string };\n\n  public isLoading: boolean;\n  public showAdvancedCriteria: boolean;\n  public materialTableDataSource: TableDataSource<MaterialTableInterface>;\n\n  /* HTML references ***********************************************************/\n\n  @ViewChild('resultsContainerAnchor')\n  public resultsContainerAnchor: ElementRef;\n\n  /* ***************************************************************************/\n\n  public constructor(\n    favoriteService: FavoriteService,\n    loaderService: LoaderService,\n    messageService: MessageService,\n    serializationService: SerializationService,\n    tabService: TabService,\n    private readonly materialSearchService: MaterialSearchService,\n    private readonly confirmationService: ConfirmationService,\n    private readonly exportService: ExportService,\n    private readonly propertiesService: PropertiesService\n  ) {\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\n\n    this.types = [];\n    this.traceability = [];\n    this.materialTable = [];\n    this.selectedMaterials = [];\n    this.propertyStatus = [];\n    this.statusDictionary = {};\n\n    this.isLoading = false;\n    this.showAdvancedCriteria = false;\n\n    this.resetSearchCriteria();\n\n    this.loadTraceability();\n    this.loadTypes();\n    this.loadStatus();\n    this.initMaterialTableDataSource();\n  }\n\n  public getComponentName(): string {\n    return ComponentConstants.LOG_MATERIAL_SEARCH;\n  }\n\n  public ngOnInit(): void {\n    super.ngOnInit();\n\n    this.displayComponentContext('global.search', true);\n  }\n\n  public deleteMaterials(): void {\n    const confirmMessageKey =\n      this.materialTableDataSource.dataSelection.length > 1\n        ? 'confirmDeleteSelectedMaterials'\n        : 'confirmDeleteSelectedMaterial';\n\n    this.confirmationService.confirmDelete({\n      messageKey: this.getTranslateKey(confirmMessageKey),\n      accept: () => {\n        const materialsId: BirePnDTOId[] = [];\n        this.materialTableDataSource.dataSelection.forEach((materials) => {\n          if (!!materials && !!materials.pnCode) {\n            const pnCodeId: BirePnDTOId = {\n              pnCode: materials.pnCode\n            };\n            materialsId.push(pnCodeId);\n          }\n        });\n        this.materialSearchService.removeBireData(materialsId).subscribe(\n          () => {\n            this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteMaterial'));\n            this.materialTableDataSource.deleteDataSelection();\n          },\n          (error) => {\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeleteMaterial'));\n          }\n        );\n      }\n    });\n  }\n\n  public exportTable(): void {\n    const materialExportData: MaterialRowExport[] = this.materialTableDataSource.dataSrc.map((material) => {\n      const materialRowExport: MaterialRowExport = {\n        pnCode: material.pnCode,\n        pnType: material.pnType,\n        articleDesignation: material.articleDesignation,\n        traceability: material.traceability,\n        statusState: material.statusState ? this.statusDictionary[material.statusState] : ''\n      };\n\n      return materialRowExport;\n    });\n    this.exportService.toExcel(\n      materialExportData,\n      MaterialSearchComponent.CUSTOMER_TABLE_EXPORT_NAME,\n      this.componentData.componentId\n    );\n  }\n\n  public openNewMaterial(): void {\n    this.openMaterial(undefined, ComponentOpenMode.Create);\n  }\n\n  public openSelectedMaterials(): void {\n    this.materialTableDataSource.dataSelection.forEach((materials) => {\n      if (!!materials) {\n        if (StringUtils.isNullOrEmpty(materials.pnCode)) {\n          this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingCode'));\n        } else {\n          this.openMaterial(materials, ComponentOpenMode.Read);\n        }\n      }\n    });\n  }\n\n  public openMaterialFromLink(material: MaterialTableInterface): void {\n    this.openMaterial(material, ComponentOpenMode.Read);\n  }\n\n  public resetSearchCriteria(): void {\n    this.searchObject = {};\n  }\n\n  public search(): void {\n    this.isLoading = true;\n    super.scrollToAnchor(this.resultsContainerAnchor);\n    const searchData: BirePnDTO = {\n      pnCode: this.searchObject.pnCode ? this.searchObject.pnCode.trim() : '',\n      articleDesignation: this.searchObject.articleDesignation ? this.searchObject.articleDesignation.trim() : '',\n      traceability: this.searchObject.traceability,\n      pnType: this.searchObject.pnType,\n      statusState: this.searchObject.statusState,\n      otanPnReference: this.searchObject.otanPnReference\n    };\n\n    this.materialSearchService.findProductsBySearchCriteria(searchData).subscribe(\n      (result) => {\n        if (result && result.list) {\n          const resultsToAdd: MaterialTableInterface[] = [];\n          result.list.forEach((element) => {\n            const birePnObject: MaterialTableInterface = { ...element };\n            birePnObject.traceability = this.getTraceabilityLabelByValue(birePnObject.traceability || '');\n            birePnObject.pnTypeText = this.getPnType(element.pnType || '');\n            resultsToAdd.push(birePnObject);\n          });\n          this.materialTableDataSource.setData(resultsToAdd);\n          this.isLoading = false;\n        }\n      },\n      () => {\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetResults'));\n      }\n    );\n  }\n\n  private getPnType(pnTypeValue: string): string {\n    let pnType = '';\n    this.types.forEach((element: LabelValue<string>) => {\n      if (pnTypeValue === element.value) {\n        pnType = element.label;\n      }\n    });\n\n    return pnType;\n  }\n\n  private getTraceabilityLabelByValue(value: string): string {\n    const label = this.traceability ? this.traceability.filter((t) => t.value === value).map((t) => t.label)[0] : '';\n\n    return label ? label : '';\n  }\n\n  public initMaterialTableDataSource(): void {\n    this.materialTableDataSource = new TableDataSource({\n      allowMultiSelect: true,\n      columns: [\n        { field: 'pnCode', translateKey: this.getTranslateKey('pnCode') },\n        { field: 'articleDesignation', translateKey: this.getTranslateKey('articleDesignation') },\n        { field: 'pnType', translateKey: this.getTranslateKey('pnType') },\n        { field: 'traceability', translateKey: this.getTranslateKey('traceability') },\n        { field: 'statusState', translateKey: this.getTranslateKey('statusState') }\n      ],\n      data: []\n    });\n  }\n\n  private loadTraceability(): void {\n    this.propertiesService.getValue('getPnTraceabilityMap').subscribe(\n      (results) => {\n        this.traceability = !!results ? SelectItemUtils.fromLabelValues(results) : [];\n      },\n      () => {\n        this.messageService.showErrorMessage('errorOnLoadingTraceability');\n      }\n    );\n  }\n\n  private loadTypes(): void {\n    this.propertiesService.getValue('getPnTypeMap').subscribe((results) => {\n      this.types = !!results ? SelectItemUtils.fromLabelValues(results) : [];\n    });\n  }\n\n  private loadStatus(): void {\n    this.propertiesService.getValue(GenericPropertyConstants.FUNC_OBJECT_STATUS_MAP).subscribe(\n      (results) => {\n        this.propertyStatus = results;\n        this.fillStatusDictionary(results);\n      },\n      () => {\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFamilyVariant'));\n      }\n    );\n\n    this.propertiesService.getValue(GenericPropertyConstants.OBJECT_STATUS_MAP).subscribe(\n      (results) => {\n        this.fillStatusDictionary(results);\n      },\n      () => {\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFamilyVariant'));\n      }\n    );\n  }\n\n  private fillStatusDictionary(references: LabelValue<string>[]) {\n    references.forEach((lv) => (this.statusDictionary[lv.value] = lv.label));\n  }\n\n  public openMaterial(objectId: MaterialTableInterface | undefined, openMode: ComponentOpenMode): void {\n    const data: PageComponentData = {\n      id: this.tabService.generateId(),\n      componentId: ComponentConstants.LOG_MATERIAL_FORM,\n      openMode\n    };\n    if (!!objectId) {\n      const materialFormId: BirePnDTO = {\n        pnCode: objectId.pnCode,\n        pnType: objectId.pnType\n      };\n      data.objectId = this.serializationService.serialize(materialFormId);\n    }\n    const labelKey = 'transaction.' + data.componentId;\n\n    this.tabService.open(this.tabService.create(data, labelKey, true));\n    this.materialTableDataSource.dataSelection = [];\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { BirePnDTOId } from '../../../../shared/types/api-types/bire-pn-dto-id.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable()\r\nexport class MaterialSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findProductsBySearchCriteria(criteria: BirePnDTO): Observable<SearchResultsDTO<BirePnDTO>> {\r\n    return super.post<BirePnDTO, SearchResultsDTO<BirePnDTO>>(\r\n      this.productStructureManagementApi.findProductsBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public removeBireData(input: BirePnDTOId[]): Observable<boolean> {\r\n    return super.post<BirePnDTOId[], boolean>(this.productStructureManagementApi.removeBirePn, input);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { BireOperationPnDTO } from '../../../../../..//shared/types/api-types/bire-operation-pn-dto.interface';\r\nimport { AircraftMaintenanceApi } from '../../../../../../shared/api/aircraft-maintenance.api';\r\nimport { AirworthinessManagementApi } from '../../../../../../shared/api/airworthiness-management.api';\r\nimport { BidtWarehouseApi } from '../../../../../../shared/api/bidt-warehouse.api';\r\nimport { FleetManagementApi } from '../../../../../../shared/api/fleet-management.api';\r\nimport { TaskManagementApi } from '../../../../../../shared/api/task-management.api';\r\nimport { UserProfileManagementApi } from '../../../../../../shared/api/user-profile-management.api';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { AssetWorkOrderOriginInput } from '../../../../../../shared/types/api-input-types/airworthiness-management/asset-work-order-origin-input.inteface';\r\nimport { FindRelatedAssetsInput } from '../../../../../../shared/types/api-input-types/task-management/find-related-assets.interface';\r\nimport { UsersForWorkOrderInput } from '../../../../../../shared/types/api-input-types/user-profile-management/users-for-work-order.interface';\r\nimport { CalculateWorkOrderImput } from '../../../../../../shared/types/api-input-types/work-order/calculate-work-order-input.interface';\r\nimport { CreateBidmWorkOrderInput } from '../../../../../../shared/types/api-input-types/work-order/create-bidm-work-order-input';\r\nimport { AssetWorkOrderOriginDataOutput } from '../../../../../../shared/types/api-output-types/airworthiness-management/asset-work-order-origin-data-output.inteface';\r\nimport { CalculateWorkOrderOutput } from '../../../../../../shared/types/api-output-types/calculate-work-order-output.interface';\r\nimport { BidmOperationDTO } from '../../../../../../shared/types/api-types/bidm-operation-dto.interface';\r\nimport { BidmWorkOrderDataDTO } from '../../../../../../shared/types/api-types/bidm-work-order-data-dto.interface';\r\nimport { BidmWorkOrderDTO } from '../../../../../../shared/types/api-types/bidm-work-order-dto.interface';\r\nimport { BidoCustomerDTOId } from '../../../../../../shared/types/api-types/bido-customer-dto-id.interface';\r\nimport { BidoCustomerDTO } from '../../../../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { BidoUserDTO } from '../../../../../../shared/types/api-types/bido-user-dto.interface';\r\nimport { BidtWarehouseDTO } from '../../../../../../shared/types/api-types/bidt-warehouse-dto.interface';\r\nimport { BireEvolutionDTO } from '../../../../../../shared/types/api-types/bire-evolution-dto.interface';\r\nimport { BireOperationDTOId } from '../../../../../../shared/types/api-types/bire-operation-dto-id.interface';\r\nimport { BireOperationDTO } from '../../../../../../shared/types/api-types/bire-operation-dto.interface';\r\nimport { BirePnDTOId } from '../../../../../../shared/types/api-types/bire-pn-dto-id.interface';\r\nimport { BirePnDTO } from '../../../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { BireTaskDTOId } from '../../../../../../shared/types/api-types/bire-task-dto-id.interface';\r\nimport { BireTaskOperationDTO } from '../../../../../../shared/types/api-types/bire-task-operation-dto.interface';\r\nimport { InitializeWoProcurementRequestInputDTO } from '../../../../../../shared/types/api-types/initialize-wo-procurement-request-input-dto.interface';\r\nimport { WoProcurementRequestInputDTO } from '../../../../../../shared/types/api-types/wo-procurement-request-input-dto.interface';\r\n\r\nimport { BidmWorkOrderDTOId } from './../../../../../../shared/types/api-types/bidm-work-order-dto-id.interface';\r\nimport { StringUtils } from './../../../../../../shared/utils/string-utils';\r\n\r\n@Injectable()\r\nexport class DialogWorkOrderEditService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly aircraftMaintenanceApi: AircraftMaintenanceApi,\r\n    private readonly airworthinessManagementApi: AirworthinessManagementApi,\r\n    private readonly taskManagementApi: TaskManagementApi,\r\n    private readonly bidtWarehouseApi: BidtWarehouseApi,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly userProfileManagementApi: UserProfileManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Fleet management api\r\n   *************************************************************************/\r\n  public findBidoCustomer(input: BidoCustomerDTOId): Observable<BidoCustomerDTO> {\r\n    return super.post<BidoCustomerDTOId, BidoCustomerDTO>(this.fleetManagementApi.findBidoCustomer, input);\r\n  }\r\n\r\n  public createOrUpdateBidmWorkOrder(bidmWorkOrder: CreateBidmWorkOrderInput): Observable<BidmWorkOrderDTO> {\r\n    return super.post<CreateBidmWorkOrderInput, BidmWorkOrderDTO>(\r\n      this.aircraftMaintenanceApi.createOrUpdateBidmWorkOrder,\r\n      bidmWorkOrder\r\n    );\r\n  }\r\n\r\n  public findRelatedItemsFromTask(bireTaskDTOId: BireTaskDTOId): Observable<SelectItem[]> {\r\n    return super.post<BireTaskDTOId, SelectItem[]>(this.taskManagementApi.findRelatedItemsFromTask, bireTaskDTOId);\r\n  }\r\n\r\n  public findRelatedItemsFromEvolution(bireEvolutionDTO: BireEvolutionDTO): Observable<SelectItem[]> {\r\n    return super.post<BireEvolutionDTO, SelectItem[]>(\r\n      this.taskManagementApi.findRelatedItemsFromEvolution,\r\n      bireEvolutionDTO\r\n    );\r\n  }\r\n\r\n  public findRelatedAssets(findRelatedAssetsInput?: FindRelatedAssetsInput): Observable<SelectItem[]> {\r\n    return super.post<FindRelatedAssetsInput, SelectItem[]>(\r\n      this.taskManagementApi.findRelatedAssets,\r\n      findRelatedAssetsInput\r\n    );\r\n  }\r\n\r\n  public findOperationsFromTaskAndRelatedTasks(bireTaskDTOId: BireTaskDTOId): Observable<BireOperationDTO[]> {\r\n    return super.post<BireTaskDTOId, BireTaskOperationDTO[]>(\r\n      this.taskManagementApi.findOperationsFromTaskAndRelatedTasks,\r\n      bireTaskDTOId\r\n    );\r\n  }\r\n\r\n  public findOperationsFromEvolution(bireEvolutionDTO: BireEvolutionDTO): Observable<BireOperationDTO[]> {\r\n    return super.post<BireEvolutionDTO, BireTaskOperationDTO[]>(\r\n      this.taskManagementApi.findOperationsFromEvolution,\r\n      bireEvolutionDTO\r\n    );\r\n  }\r\n\r\n  public findWorkOrder(input: BidmWorkOrderDTOId): Observable<BidmWorkOrderDTO> {\r\n    return super.post<BidmWorkOrderDTOId, BidmWorkOrderDTO>(this.aircraftMaintenanceApi.findBidmWorkOrder, input);\r\n  }\r\n\r\n  public findBidmWorkOrder(bidmWorkOrderDTOId: BidmWorkOrderDTOId): Observable<BidmWorkOrderDataDTO> {\r\n    return super.post<BidmWorkOrderDTOId, BidmWorkOrderDataDTO>(\r\n      this.aircraftMaintenanceApi.findBidmWorkOrderData,\r\n      bidmWorkOrderDTOId\r\n    );\r\n  }\r\n\r\n  public calculateWorkOrderStatus(input: CalculateWorkOrderImput): Observable<CalculateWorkOrderOutput> {\r\n    return super.post<CalculateWorkOrderImput, CalculateWorkOrderOutput>(\r\n      this.aircraftMaintenanceApi.calculateWorkOrderStatus,\r\n      input\r\n    );\r\n  }\r\n\r\n  public findWorkOrderOriginDetails(input: AssetWorkOrderOriginInput): Observable<AssetWorkOrderOriginDataOutput> {\r\n    return super.post<AssetWorkOrderOriginInput, AssetWorkOrderOriginDataOutput>(\r\n      this.airworthinessManagementApi.findWorkOrderOriginDetails,\r\n      input\r\n    );\r\n  }\r\n\r\n  public findBidmOperationsByWorkOrder(input: BidmWorkOrderDTOId): Observable<BidmOperationDTO[]> {\r\n    return super.post<BidmWorkOrderDTOId, BidmOperationDTO[]>(\r\n      this.aircraftMaintenanceApi.findBidmOperationsByWorkOrder,\r\n      input\r\n    );\r\n  }\r\n\r\n  public loadWarehouseList(input: string | undefined): Observable<SelectItem[]> {\r\n    if (StringUtils.isNullOrEmpty(input)) {\r\n      return of<SelectItem[]>([]);\r\n    } else {\r\n      return super.post<string, SelectItem[]>(this.bidtWarehouseApi.findByMandantAndSiteCode, input);\r\n    }\r\n  }\r\n  public loadWareHouses(): Observable<BidtWarehouseDTO[]> {\r\n    return super.post<void, BidtWarehouseDTO[]>(this.bidtWarehouseApi.findAll);\r\n  }\r\n\r\n  public findUsersWithUseCaseForWorkOrder(input: UsersForWorkOrderInput): Observable<BidoUserDTO[]> {\r\n    return super.post<UsersForWorkOrderInput, BidoUserDTO[]>(\r\n      this.userProfileManagementApi.findUsersWithUseCaseForWorkOrder,\r\n      input\r\n    );\r\n  }\r\n\r\n  public findBireOperationPnsByOperation(p: BireOperationDTOId): Observable<BireOperationPnDTO[]> {\r\n    return super.post<BireOperationDTOId, BireOperationPnDTO[]>(\r\n      this.taskManagementApi.findBireOperationPnsByOperation,\r\n      p\r\n    );\r\n  }\r\n\r\n  public findBirePn(input: BirePnDTOId): Observable<BirePnDTO> {\r\n    return super.post<BirePnDTOId, BirePnDTO>(this.taskManagementApi.findBirePn, input);\r\n  }\r\n\r\n  public initalizeWoProcurementRequestInput(\r\n    input: InitializeWoProcurementRequestInputDTO\r\n  ): Observable<WoProcurementRequestInputDTO[]> {\r\n    return super.post<InitializeWoProcurementRequestInputDTO, WoProcurementRequestInputDTO[]>(\r\n      this.aircraftMaintenanceApi.initializeProcurementRequest,\r\n      input\r\n    );\r\n  }\r\n}\r\n","import { ConnectedPosition, Overlay, OverlayConfig, PositionStrategy } from '@angular/cdk/overlay';\r\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\r\nimport { Injectable, Injector, Type } from '@angular/core';\r\n\r\nimport { OverlayRef } from './overlay-ref';\r\nimport { OverlayComponent } from './overlay.component';\r\n\r\nexport interface OverlayParams {\r\n  content: Type<unknown>;\r\n  data?: unknown;\r\n  hasBackdrop?: boolean;\r\n  hasVisibleBackdrop?: boolean;\r\n  height?: number | string;\r\n  width?: number | string;\r\n}\r\n\r\nexport interface OverlayWithGlobalPositionParams extends OverlayParams {\r\n  positions: { bottom?: string; left?: string; right?: string; top?: string };\r\n}\r\n\r\nexport interface OverlayWithRelativePositionParams extends OverlayParams {\r\n  origin: HTMLElement;\r\n  positions?: ConnectedPosition[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OverlayService {\r\n  public constructor(private readonly _injector: Injector, private readonly _overlay: Overlay) {}\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public openWithPositionAbsolute<T>(params: OverlayWithGlobalPositionParams): OverlayRef<T> {\r\n    return this.open(params, this.getConfig(params, this.getPositionAbsolute(params)));\r\n  }\r\n\r\n  public openWithPositionCenter<T>(params: OverlayParams): OverlayRef<T> {\r\n    return this.open(\r\n      params,\r\n      this.getConfig(\r\n        { ...params, hasVisibleBackdrop: params.hasVisibleBackdrop !== undefined ? params.hasVisibleBackdrop : true },\r\n        this.getPositionCenter()\r\n      )\r\n    );\r\n  }\r\n\r\n  public openWithPositionRelative<T>(params: OverlayWithRelativePositionParams): OverlayRef<T> {\r\n    return this.open(params, this.getConfig(params, this.getPositionRelative(params)));\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  private createInjector<T>(overlayRef: OverlayRef<T>, injector: Injector): PortalInjector {\r\n    const tokens = new WeakMap([[OverlayRef, overlayRef]]);\r\n\r\n    return new PortalInjector(injector, tokens);\r\n  }\r\n\r\n  private getConfig(params: OverlayParams, positionStrategy: PositionStrategy): OverlayConfig {\r\n    const hasBackdrop = params.hasBackdrop !== undefined ? params.hasBackdrop : true;\r\n\r\n    return new OverlayConfig({\r\n      hasBackdrop,\r\n      positionStrategy,\r\n      backdropClass: hasBackdrop && params.hasVisibleBackdrop ? 'cdk-overlay-dark-backdrop' : '',\r\n      height: params.height,\r\n      scrollStrategy: this._overlay.scrollStrategies.reposition(),\r\n      width: params.width\r\n    });\r\n  }\r\n\r\n  private getPositionAbsolute(params: OverlayWithGlobalPositionParams): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .bottom(params.positions.bottom)\r\n      .left(params.positions.left)\r\n      .right(params.positions.right)\r\n      .top(params.positions.top);\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private getPositionCenter(): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .centerHorizontally()\r\n      .centerVertically();\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private getPositionRelative(params: OverlayWithRelativePositionParams): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .flexibleConnectedTo(params.origin)\r\n      .withPositions(params.positions || [])\r\n      .withFlexibleDimensions(false)\r\n      .withPush(false);\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private open<T>(params: OverlayParams, overlayConfig: OverlayConfig): OverlayRef<T> {\r\n    const cdkOverlayRef = this._overlay.create(overlayConfig);\r\n    const overlayRef = new OverlayRef<T>(cdkOverlayRef, params.content, params.data);\r\n\r\n    const injector = this.createInjector(overlayRef, this._injector);\r\n    cdkOverlayRef.attach(new ComponentPortal(OverlayComponent, undefined, injector));\r\n\r\n    return overlayRef;\r\n  }\r\n}\r\n","import { LabelValue } from '../../shared/types/label-value.interface';\r\n\r\nexport class LabelValueUtils {\r\n  /*\r\n   * DEPRECATED: do not use; create an interface instead\r\n   */\r\n  public static stringValueToLabel<T>(object: T, propertyName: string, propertyList: LabelValue<string>[]): boolean {\r\n    if (!!object[propertyName]) {\r\n      const labelValue = propertyList.find((property) => property.value === object[propertyName]);\r\n      if (!!labelValue) {\r\n        object[propertyName] = labelValue.label;\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /*\r\n   * DEPRECATED: do not use; create an interface instead\r\n   */\r\n  public static labelToStringValue<T>(object: T, propertyName: string, propertyList: LabelValue<string>[]): boolean {\r\n    if (!!object[propertyName]) {\r\n      const labelValue = propertyList.find((property) => property.label === object[propertyName]);\r\n      if (!!labelValue) {\r\n        object[propertyName] = labelValue.value;\r\n\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n"],"sourceRoot":""}