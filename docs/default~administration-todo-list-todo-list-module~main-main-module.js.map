{"version":3,"sources":["webpack:///./src/app/main/administration/todo-list/search/todo-list-search.component.html","webpack:///./src/app/main/administration/todo-list/search/todo-list-search.component.ts","webpack:///./src/app/main/administration/todo-list/search/todo-list-search.service.ts","webpack:///./src/app/main/administration/todo-list/todo-list.module.ts"],"names":[],"mappings":"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","file":"default~administration-todo-list-todo-list-module~main-main-module.js","sourcesContent":["module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div class=\\\"page-subtitle\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"reload()\\\">\\r\\n      {{ \\\"global.refresh\\\" | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"results\\\" | translate }} ({{ todoListTableDataSource.dataCount }})</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <a-table [dataSource]=\\\"todoListTableDataSource\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportTodoTable()\\\"\\r\\n                    *ngIf=\\\"todoListTableDataSource.hasData && !todoListTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openTodoRows()\\\"\\r\\n                    *ngIf=\\\"todoListTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"isUrgent\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i *ngIf=\\\"rowData.isUrgent\\\" class=\\\"fa fa-fw fa-check\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"id\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <a (click)=\\\"openTodoRow(rowData)\\\">{{ rowData.id }}</a>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"statusDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                  {{ rowData.statusDate | date: \\\"yyyy/MM/dd HH:mm\\\":\\\"\\\":translateService.currentLang }}\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport {\r\n  FunctionObjectConfiguration,\r\n  FunctionObjectConstants\r\n} from '../../../../shared/constants/function-object-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ExportService } from '../../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { TodoItemOutput } from '../../../../shared/types/api-output-types/administration-todo-list/todo-item-output.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport {\r\n  LabelValueKey,\r\n  WorkflowManagementFormService\r\n} from '../../workflow-management/form/workflow-management-form.service';\r\n\r\nimport { TodoListSearchService } from './todo-list-search.service';\r\n\r\ninterface TodoRow {\r\n  id?: string;\r\n  funcObjectLabel?: string;\r\n  isUrgent?: boolean;\r\n  statusLabel?: string;\r\n  statusDate?: Date;\r\n  statusUser?: string;\r\n  obj: TodoItemOutput;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-todo-list-search',\r\n  templateUrl: './todo-list-search.component.html'\r\n})\r\nexport class TodoListSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  private static readonly TODO_LIST_TABLE_EXPORT_NAME: string = 'TodoList';\r\n\r\n  public todoListTableDataSource: TableDataSource<TodoRow>;\r\n  public functionObjectList: LabelValueKey<string>[];\r\n\r\n  private functionObjectMap: { [key: string]: FunctionObjectConfiguration };\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public readonly translateService: TranslateService,\r\n    private readonly exportService: ExportService,\r\n    private readonly todoListSearchService: TodoListSearchService,\r\n    private readonly workflowManagementFormService: WorkflowManagementFormService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    this.initTodoListTableDataSource();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_TODO_LIST_SEARCH;\r\n  }\r\n\r\n  private initTodoListTableDataSource(): void {\r\n    this.todoListTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'isUrgent', translateKey: this.getTranslateKey('isUrgent'), width: '5%' },\r\n        { field: 'funcObjectLabel', translateKey: this.getTranslateKey('funcObjectLabel'), width: '20%' },\r\n        { field: 'id', translateKey: this.getTranslateKey('id'), width: '20%' },\r\n        { field: 'statusLabel', translateKey: this.getTranslateKey('statusLabel'), width: '20%' },\r\n        { field: 'statusDate', translateKey: this.getTranslateKey('statusDate'), width: '15%' },\r\n        { field: 'statusUser', translateKey: this.getTranslateKey('statusUser'), width: '20%' }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.functionObjectMap = FunctionObjectConstants.getFunctionObjectConfigurationMapByKey();\r\n    this.loadReferences();\r\n  }\r\n\r\n  private loadReferences(): void {\r\n    this.workflowManagementFormService.getInternationalizedFuncObject().subscribe((response) => {\r\n      this.functionObjectList = response;\r\n      // Loading todo list only after references loading\r\n      TodoListSearchService.todoList$.pipe(takeUntil(this.unsubscribe)).subscribe((result) => {\r\n        if (result) {\r\n          const todoRowList: TodoRow[] = result.map((item) => ({\r\n            obj: item,\r\n            id: item.functionalIdentifier || '_',\r\n            isUrgent: item.isUrgent,\r\n            funcObjectLabel: this.getLabelByKey(this.functionObjectList, item.funcObject && item.funcObject.objectKey),\r\n            statusLabel: item.statusLabel,\r\n            statusUser: item.statusUser,\r\n            statusDate: item.statusDate\r\n          }));\r\n          this.todoListTableDataSource.setData(todoRowList);\r\n          this.todoListTableDataSource.isLoading = false;\r\n        } else {\r\n          this.loadTodoList();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public reload(): void {\r\n    this.loadTodoList();\r\n  }\r\n\r\n  public loadTodoList(): void {\r\n    this.todoListTableDataSource.setData([]);\r\n    this.todoListTableDataSource.isLoading = true;\r\n\r\n    this.todoListSearchService.refreshWholeTodoList();\r\n  }\r\n\r\n  private getLabelByKey(references: LabelValueKey<string>[], key: string | undefined) {\r\n    const keyValue = references && references.find((lv) => lv.key === key);\r\n\r\n    return keyValue ? keyValue.label : undefined;\r\n  }\r\n\r\n  private getTodoItemConfiguration(item: TodoItemOutput): FunctionObjectConfiguration | undefined {\r\n    return item.funcObject && item.funcObject.objectKey ? this.functionObjectMap[item.funcObject.objectKey] : undefined;\r\n  }\r\n\r\n  public openTodoRow(row: TodoRow): void {\r\n    const configuration = this.getTodoItemConfiguration(row.obj);\r\n    if (configuration) {\r\n      const component = configuration.componentNames[0];\r\n      const labelKey = `transaction.${component}`;\r\n\r\n      const pageId = configuration.getPageId ? configuration.getPageId(row.obj.id) : row.obj.id;\r\n      let objectId: string;\r\n      if (typeof pageId === 'string') {\r\n        objectId = pageId as string;\r\n      } else {\r\n        objectId = this.serializationService.serialize(pageId);\r\n      }\r\n\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: component,\r\n        objectId,\r\n        openMode: ComponentOpenMode.Read\r\n      };\r\n\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    }\r\n  }\r\n\r\n  public openTodoRows(): void {\r\n    this.todoListTableDataSource.dataSelection.forEach((row) => this.openTodoRow(row));\r\n  }\r\n\r\n  public exportTodoTable(): void {\r\n    this.exportService.toExcel(\r\n      this.todoListTableDataSource.sanitizedData.map((data) => {\r\n        const objLess = { ...data };\r\n        delete objLess.obj;\r\n\r\n        return objLess;\r\n      }),\r\n      TodoListSearchComponent.TODO_LIST_TABLE_EXPORT_NAME,\r\n      this.componentData.componentId\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { TodoListCriteriaInput } from '../../../../shared/types/api-input-types/administration-todo-list/todo-list-criteria-input.interface';\r\nimport { TodoItemOutput } from '../../../../shared/types/api-output-types/administration-todo-list/todo-item-output.interface';\r\nimport { BidtScenarioApi } from '../../../../shared/types/api-types/bidt-scenario.api';\r\n\r\n@Injectable()\r\nexport class TodoListSearchService extends AbstractAwHttpService {\r\n  private static readonly _todoList = new BehaviorSubject<TodoItemOutput[] | undefined>(undefined);\r\n  public static readonly todoList$ = TodoListSearchService._todoList.asObservable();\r\n\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtScenarioApi: BidtScenarioApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public refreshWholeTodoList() {\r\n    if (TodoListSearchService._todoList.getValue()) {\r\n      TodoListSearchService._todoList.next(undefined);\r\n    }\r\n    this.getTodoList({}).subscribe((result) => TodoListSearchService._todoList.next(result));\r\n  }\r\n\r\n  public getTodoList(todoListCriteriaInput: TodoListCriteriaInput): Observable<TodoItemOutput[]> {\r\n    return super.post<TodoListCriteriaInput, TodoItemOutput[]>(this.bidtScenarioApi.getTodoList, todoListCriteriaInput);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { BidtScenarioApi } from '../../../shared/types/api-types/bidt-scenario.api';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { WorkflowManagementModule } from '../workflow-management/workflow-management.module';\r\n\r\nimport { TodoListSearchComponent } from './search/todo-list-search.component';\r\nimport { TodoListSearchService } from './search/todo-list-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [TooltipModule];\r\n\r\nconst INTERNAL_MODULES = [TableModule, WorkflowManagementModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [];\r\n\r\nconst DYNAMIC_COMPONENTS = [TodoListSearchComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [TodoListSearchService];\r\n\r\nconst APIS = [BidtScenarioApi];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES, ...APIS]\r\n})\r\nexport class TodoListModule {}\r\n"],"sourceRoot":""}