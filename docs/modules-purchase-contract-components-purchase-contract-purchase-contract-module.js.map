{"version":3,"sources":["webpack:///./node_modules/primeng/components/inputtextarea/inputtextarea.js","webpack:///./node_modules/primeng/components/keyfilter/keyfilter.js","webpack:///./node_modules/primeng/components/message/message.js","webpack:///./node_modules/primeng/inputtextarea.js","webpack:///./node_modules/primeng/treetable.js","webpack:///./src/app/main/overlay/overlay.service.ts","webpack:///./src/app/modules/purchase-contract/api/purchase-contract-element-api.ts","webpack:///./src/app/modules/purchase-contract/api/purchase-contract-item.api.ts","webpack:///./src/app/modules/purchase-contract/api/purchase-contract.api.ts","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/dialogs/dialog-purchase-contract-element/dialog-purchase-contract-element.component.html","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/dialogs/dialog-purchase-contract-element/dialog-purchase-contract-element.component.ts","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/dialogs/dialog-purchase-contract-item/dialog-purchase-contract-item.component.html","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/dialogs/dialog-purchase-contract-item/dialog-purchase-contract-item.component.ts","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/dialogs/dialog-purchase-contract-parent-id/dialog-purchase-contract-parent-id.component.html","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/dialogs/dialog-purchase-contract-parent-id/dialog-purchase-contract-parent-id.component.ts","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/dialogs/dialog-purchase-contract-partner/dialog-purchase-contract-partner.component.html","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/dialogs/dialog-purchase-contract-partner/dialog-purchase-contract-partner.component.ts","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/dialogs/dialog-purchase-contract-slice/dialog-purchase-contract-slice.component.html","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/dialogs/dialog-purchase-contract-slice/dialog-purchase-contract-slice.component.ts","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/purchase-contract-form.component.html","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/purchase-contract-form.component.scss","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/form/purchase-contract-form.component.ts","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/search/purchase-contract-search.component.html","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/search/purchase-contract-search.component.ts","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/pages/search/purchase-contract-search.service.ts","webpack:///./src/app/modules/purchase-contract/components/purchase-contract/purchase-contract.module.ts","webpack:///./src/app/modules/purchase-contract/components/shared/document-section/document-section.component.html","webpack:///./src/app/modules/purchase-contract/components/shared/document-section/document-section.component.ts","webpack:///./src/app/modules/purchase-contract/components/shared/document-section/document-section.module.ts","webpack:///./src/app/modules/purchase-contract/constants/properties/purchase-contract-property-constants.ts","webpack:///./src/app/modules/purchase-contract/constants/properties/purchasecontract/purchase-contract-slice-status-constants.ts","webpack:///./src/app/modules/purchase-contract/constants/properties/purchasecontract/purchase-contract-slice-type-constants.ts","webpack:///./src/app/modules/purchase-contract/constants/properties/purchasecontract/purchase-contract-status-constants.ts","webpack:///./src/app/modules/purchase-contract/services/purchase-contract-element.service.ts","webpack:///./src/app/modules/purchase-contract/services/purchase-contract-item.service.ts","webpack:///./src/app/modules/purchase-contract/services/purchase-contract.service.ts","webpack:///./src/app/modules/purchase-contract/utils/tree/action.enum.ts","webpack:///./src/app/modules/purchase-contract/utils/tree/tree-modifications.ts","webpack:///./src/app/modules/purchase-contract/utils/tree/tree-node-utils.ts","webpack:///./src/app/shared/components/dialog-status/dialog-status.component.html","webpack:///./src/app/shared/components/dialog-status/dialog-status.component.ts","webpack:///./src/app/shared/components/dialog-status/dialog-status.module.ts","webpack:///./src/app/shared/utils/array-utils.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,cAAc,mBAAO,CAAC,oEAAgB;AACtC,eAAe,mBAAO,CAAC,uEAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,yC;;;;;;;;;;;;ACrHa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,mBAAmB,mBAAO,CAAC,8EAAmB;AAC9C,cAAc,mBAAO,CAAC,oEAAgB;AACtC;AACA;AACA,gDAAgD,kBAAkB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;AC/Ka;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iJAAiJ,kOAAkO;AACnX,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,mC;;;;;;;;;;;;ACzEA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kHAA0C,G;;;;;;;;;;;;ACN3D;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kGAAkC,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgD;AAC7B;AACX;AAEhB;AACY;AAuBvD;IACE,wBAAoC,SAAmB,EAAmB,QAAiB;QAAvD,cAAS,GAAT,SAAS,CAAU;QAAmB,aAAQ,GAAR,QAAQ,CAAS;IAAG,CAAC;IAE/F,6EAA6E;IAEtE,iDAAwB,GAA/B,UAAmC,MAAuC;QACxE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrF,CAAC;IAEM,+CAAsB,GAA7B,UAAiC,MAAqB;QACpD,OAAO,IAAI,CAAC,IAAI,CACd,MAAM,EACN,IAAI,CAAC,SAAS,cACP,MAAM,IAAE,kBAAkB,EAAE,MAAM,CAAC,kBAAkB,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,KAC3G,IAAI,CAAC,iBAAiB,EAAE,CACzB,CACF,CAAC;IACJ,CAAC;IAEM,iDAAwB,GAA/B,UAAmC,MAAyC;QAC1E,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrF,CAAC;IAED,6EAA6E;IAErE,uCAAc,GAAtB,UAA0B,UAAyB,EAAE,QAAkB;QACrE,IAAM,MAAM,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,uDAAU,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;QAEvD,OAAO,IAAI,kEAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC;IAEO,kCAAS,GAAjB,UAAkB,MAAqB,EAAE,gBAAkC;QACzE,IAAM,WAAW,GAAG,MAAM,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;QAEjF,OAAO,IAAI,kEAAa,CAAC;YACvB,WAAW;YACX,gBAAgB;YAChB,aAAa,EAAE,WAAW,IAAI,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,EAAE;YAC1F,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE;YAC3D,KAAK,EAAE,MAAM,CAAC,KAAK;SACpB,CAAC,CAAC;IACL,CAAC;IAEO,4CAAmB,GAA3B,UAA4B,MAAuC;QACjE,IAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ;aACnC,QAAQ,EAAE;aACV,MAAM,EAAE;aACR,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;aAC/B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC;aAC3B,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC;aAC7B,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAE7B,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAEO,0CAAiB,GAAzB;QACE,IAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ;aACnC,QAAQ,EAAE;aACV,MAAM,EAAE;aACR,kBAAkB,EAAE;aACpB,gBAAgB,EAAE,CAAC;QAEtB,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAEO,4CAAmB,GAA3B,UAA4B,MAAyC;QACnE,IAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ;aACnC,QAAQ,EAAE;aACV,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC;aAClC,aAAa,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC;aACrC,sBAAsB,CAAC,KAAK,CAAC;aAC7B,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEnB,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAEO,6BAAI,GAAZ,UAAgB,MAAqB,EAAE,aAA4B;QACjE,IAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC1D,IAAM,UAAU,GAAG,IAAI,uDAAU,CAAI,aAAa,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAEjF,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACjE,aAAa,CAAC,MAAM,CAAC,IAAI,mEAAe,CAAC,mEAAgB,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;QAEjF,OAAO,UAAU,CAAC;IACpB,CAAC;IArFU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAE+C,sDAAQ,EAA6B,4DAAO;OADhF,cAAc,CAsF1B;IAAD,qBAAC;CAAA;AAtF0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BgB;AAEoB;AAG/D;IAAgD,8CAAW;IAKzD;QAAA,YACE,kBAAM,4BAA0B,CAAC,OAAO,CAAC,SAC1C;QAJe,yBAAmB,GAAW,iBAAM,eAAe,aAAC,2BAA2B,CAAC,CAAC;;IAIjG,CAAC;mCAPU,0BAA0B;;IACb,kCAAO,GAAW,iDAAiD,CAAC;IADjF,0BAA0B;QADtC,gEAAU,EAAE;;OACA,0BAA0B,CAQtC;IAAD,iCAAC;CAAA,CAR+C,oEAAW,GAQ1D;AARsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLI;AAEoB;AAG/D;IAA6C,2CAAW;IAKtD;QAAA,YACE,kBAAM,yBAAuB,CAAC,OAAO,CAAC,SACvC;QAJe,2BAAqB,GAAW,iBAAM,eAAe,aAAC,2BAA2B,CAAC,CAAC;;IAInG,CAAC;gCAPU,uBAAuB;;IACV,+BAAO,GAAW,8CAA8C,CAAC;IAD9E,uBAAuB;QADnC,gEAAU,EAAE;;OACA,uBAAuB,CAQnC;IAAD,8BAAC;CAAA,CAR4C,oEAAW,GAQvD;AARmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLO;AAEoB;AAG/D;IAAyC,uCAAW;IAmBlD;QAAA,YACE,kBAAM,qBAAmB,CAAC,OAAO,CAAC,SACnC;QAlBD,wEAAwE;QAExD,oBAAc,GAAW,iBAAM,eAAe,aAAC,mBAAmB,CAAC,CAAC;QAEpE,YAAM,GAAW,iBAAM,eAAe,aAAC,SAAS,CAAC,CAAC;QAElD,aAAO,GAAW,iBAAM,eAAe,aAAC,YAAY,CAAC,CAAC;QAEtD,iBAAW,GAAW,iBAAM,eAAe,aAAC,gBAAgB,CAAC,CAAC;QAE9D,uBAAiB,GAAW,iBAAM,eAAe,aAAC,sBAAsB,CAAC,CAAC;QAE1E,yBAAmB,GAAW,iBAAM,eAAe,aAAC,wBAAwB,CAAC,CAAC;QAE9E,0BAAoB,GAAW,iBAAM,eAAe,aAAC,gBAAgB,CAAC,CAAC;;IAIvF,CAAC;4BArBU,mBAAmB;;IACN,2BAAO,GAAW,yCAAyC,CAAC;IADzE,mBAAmB;QAD/B,gEAAU,EAAE;;OACA,mBAAmB,CAsB/B;IAAD,0BAAC;CAAA,CAtBwC,oEAAW,GAsBnD;AAtB+B;;;;;;;;;;;;ACLhC,2HAA2H,+CAA+C,8OAA8O,4BAA4B,mDAAmD,gDAAgD,+FAA+F,8BAA8B,iHAAiH,+CAA+C,0kCAA0kC,iDAAiD,+bAA+b,qDAAqD,2lBAA2lB,yDAAyD,IAAI,sFAAsF,igCAAigC,gDAAgD,2pBAA2pB,kDAAkD,mgBAAmgB,qDAAqD,ykBAAykB,sDAAsD,upBAAupB,iCAAiC,kDAAkD,gCAAgC,uRAAuR,mCAAmC,6U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3jO;AAEmD;AAChC;AACA;AACQ;AACjB;AAED;AACR;AAE8B;AAM9G;IAA4D,0DAAe;IAiBzE,gDACmB,wBAAkD,EAClD,cAA8B,EAC9B,8BAA8D,EACxE,sBAA8C;QAJvD,YAME,kBAAM,wFAAiB,CAAC,KAAK,EAAE,wFAAkB,CAAC,6CAA6C,CAAC,SAGjG;QARkB,8BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,oBAAc,GAAd,cAAc,CAAgB;QAC9B,oCAA8B,GAA9B,8BAA8B,CAAgC;QACxE,4BAAsB,GAAtB,sBAAsB,CAAwB;QAGrD,KAAI,CAAC,uBAAuB,GAAG,IAAI,0DAAY,EAAkC,CAAC;QAClF,KAAI,CAAC,0BAA0B,GAAG,IAAI,0DAAY,EAAkC,CAAC;;IACvF,CAAC;IAEM,iEAAgB,GAAvB;QACE,OAAO,wFAAkB,CAAC,6CAA6C,CAAC;IAC1E,CAAC;IAEM,yDAAQ,GAAf;QACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;QAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;YACzC,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,8BAA8B,gBAAQ,IAAI,CAAC,IAAI,CAAE,CAAC;SACxD;IACH,CAAC;IAEM,yDAAQ,GAAf;QACE,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;YAC5B,IAAI,IAAI,CAAC,QAAQ,KAAK,wFAAiB,CAAC,MAAM,EAAE;gBAC9C,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;aACxE;iBAAM;gBACL,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;aAC3E;YACD,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,uCAAuC,CAAC,CAAC;SAC/E;IACH,CAAC;IAEO,kEAAiB,GAAzB;QACE,OAAO,CAAC,sEAAW,CAAC,aAAa,CAAC,IAAI,CAAC,8BAA8B,CAAC,YAAY,CAAC,CAAC;IACtF,CAAC;IAEM,4DAAW,GAAlB;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAEM,mEAAkB,GAAzB;QACE,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;IAC3C,CAAC;IAEM,oEAAmB,GAA1B,UAA2B,KAAgB;QACzC,IAAI,CAAC,8BAA8B,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC;IAClE,CAAC;IAEO,iEAAgB,GAAxB;QAAA,iBAIC;QAHC,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,GAAG;YAC7D,KAAI,CAAC,8BAA8B,CAAC,WAAW,GAAG,GAAG,CAAC;QACxD,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,+DAAc,GAArB;QACE,IAAI,CAAC,8BAA8B,CAAC,cAAc,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAC1F,CAAC;IA/ED;QADC,2DAAK,EAAE;;4EAC2B;IAGnC;QADC,2DAAK,EAAE;;wEACoC;IAG5C;QADC,4DAAM,EAAE;kCACuB,0DAAY;2FAAiC;IAG7E;QADC,4DAAM,EAAE;kCAC0B,0DAAY;8FAAiC;IAXrE,sCAAsC;QAJlD,+DAAS,CAAC;YACT,QAAQ,EAAE,qCAAqC;YAC/C,8PAAgE;SACjE,CAAC;yCAmB6C,wHAAwB;YAClC,+EAAc;YACE,0GAA8B;YAChD,gGAAsB;OArB5C,sCAAsC,CAkFlD;IAAD,6CAAC;CAAA,CAlF2D,8EAAe,GAkF1E;AAlFkD;;;;;;;;;;;;ACjBnD,oJAAoJ,uDAAuD,sKAAsK,4BAA4B,+DAA+D,iDAAiD,wRAAwR,4BAA4B,+DAA+D,kDAAkD,wXAAwX,iDAAiD,oLAAoL,kVAAkV,qDAAqD,oLAAoL,oWAAoW,mEAAmE,odAAod,wDAAwD,6aAA6a,yDAAyD,uUAAuU,2DAA2D,yXAAyX,sDAAsD,qwBAAqwB,oDAAoD,mwBAAmwB,2DAA2D,2XAA2X,+DAA+D,obAAob,0DAA0D,mbAAmb,sDAAsD,udAAud,iCAAiC,0IAA0I,mCAAmC,qD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl2P;AAGmB;AACT;AACA;AACD;AACR;AACA;AAOhF;IAAyD,uDAAe;IAYtE,6CAAoC,cAA8B,EAAS,cAA8B;QAAzG,YACE,kBAAM,wFAAiB,CAAC,KAAK,EAAE,qCAAqC,CAAC,SAItE;QALmC,oBAAc,GAAd,cAAc,CAAgB;QAAS,oBAAc,GAAd,cAAc,CAAgB;QAGvG,KAAI,CAAC,WAAW,GAAG,IAAI,0DAAY,EAA+B,CAAC;QACnE,KAAI,CAAC,QAAQ,GAAG,IAAI,0DAAY,EAA+B,CAAC;;IAClE,CAAC;IAEM,sDAAQ,GAAf;QACE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;SAChB;IACH,CAAC;IAEM,sDAAQ,GAAf;QAAA,iBAYC;QAXC,IAAM,MAAM,GAAa,IAAI,CAAC,YAAY,EAAE,CAAC;QAC7C,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACvB,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClC;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/B;YACD,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aAAM;YACL,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK,IAAK,YAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAA3C,CAA2C,CAAC,CAAC;SACxE;IACH,CAAC;IAEM,qDAAO,GAAd;QACE,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,0DAAY,GAApB;QACE,IAAM,MAAM,GAAa,EAAE,CAAC;QAC5B,IACE,sEAAW,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC7C,sEAAW,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAC5C,CAAC,sEAAW,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EACzC;YACA,MAAM,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;SACtD;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACnG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC,CAAC;SACrD;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAzDQ;QAAR,2DAAK,EAAE;;qEAA0C;IACzC;QAAR,2DAAK,EAAE;;+EAAgC;IAC/B;QAAR,2DAAK,EAAE;;wEAAyB;IACxB;QAAR,2DAAK,EAAE;;oFAA0C;IACzC;QAAR,2DAAK,EAAE;;sFAA4C;IAEpD;QADC,4DAAM,EAAE;kCACW,0DAAY;4EAA8B;IAE9D;QADC,4DAAM,EAAE;kCACQ,0DAAY;yEAA8B;IAThD,mCAAmC;QAJ/C,+DAAS,CAAC;YACT,QAAQ,EAAE,kCAAkC;YAC5C,qPAA6D;SAC9D,CAAC;yCAaoD,+EAAc,EAAyB,+EAAc;OAZ9F,mCAAmC,CA2D/C;IAAD,0CAAC;CAAA,CA3DwD,8EAAe,GA2DvE;AA3D+C;;;;;;;;;;;;ACfhD,0IAA0I,+CAA+C,8LAA8L,iCAAiC,+OAA+O,kDAAkD,4VAA4V,iDAAiD,2VAA2V,qDAAqD,kUAAkU,qTAAqT,2DAA2D,iWAAiW,6DAA6D,0xBAA0xB,2DAA2D,66BAA66B,mCAAmC,qPAAqP,kCAAkC,IAAI,2GAA2G,mUAAmU,iCAAiC,iIAAiI,mCAAmC,qD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjpK;AAC9B;AAE0D;AACF;AACH;AACN;AACD;AAEwC;AAGjC;AACjB;AAM9E;IAA6D,2DAAe;IAU1E,iDACS,uBAAgD,EAChD,cAA8B,EACpB,iBAAoC;QAHvD,YAKE,kBAAM,wFAAiB,CAAC,KAAK,EAAE,yCAAyC,CAAC,SAQ1E;QAZQ,6BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,oBAAc,GAAd,cAAc,CAAgB;QACpB,uBAAiB,GAAjB,iBAAiB,CAAmB;QALhD,gBAAU,GAAG,IAAI,0DAAY,EAA2B,CAAC;QAS9D,KAAI,CAAC,UAAU,GAAG,IAAI,0DAAY,EAA2B,CAAC;QAC9D,KAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,KAAI,CAAC,YAAY,GAAG,EAAE,sBAAsB,EAAE,EAAE,EAAE,CAAC;QACnD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,KAAI,CAAC,iCAAiC,EAAE,CAAC;;IAC3C,CAAC;IAEM,0DAAQ,GAAf;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;QAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEO,mFAAiC,GAAzC;QACE,IAAI,CAAC,6BAA6B,GAAG,IAAI,0FAAe,CAAC;YACvD,gBAAgB,EAAE,KAAK;YACvB,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,UAAU;oBACjB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;iBAC/C;gBACD;oBACE,KAAK,EAAE,SAAS;oBAChB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;iBAC9C;gBACD;oBACE,KAAK,EAAE,aAAa;oBACpB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;iBAClD;gBACD;oBACE,KAAK,EAAE,mBAAmB;oBAC1B,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC;iBACxD;gBACD;oBACE,KAAK,EAAE,qBAAqB;oBAC5B,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC;iBAC1D;aACF;YACD,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;IACL,CAAC;IAEM,wDAAM,GAAb;QACE,iBAAM,WAAW,WAAE,CAAC;IACtB,CAAC;IAEO,gEAAc,GAAtB;QAAA,iBAIC;QAHC,IAAI,CAAC,iBAAiB;aACnB,QAAQ,CAAC,4HAAiC,CAAC,mBAAmB,CAAC;aAC/D,SAAS,CAAC,UAAC,MAAM,IAAK,QAAC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,EAA1B,CAA0B,CAAC,CAAC;IACvD,CAAC;IAEM,wDAAM,GAAb;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,+DAAa,GAArB;QAAA,iBAiBC;QAhBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,uBAAuB;aACzB,kCAAkC,CAAC,IAAI,CAAC,YAAY,CAAC;aACrD,IAAI,CACH,+DAAQ,CAAC;YACP,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CACH;aACA,SAAS,CAAC,UAAC,OAAO;YACjB,IAAI,OAAO,EAAE;gBACX,KAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACzD,KAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,OAAO;oBACzD,OAAO,CAAC,WAAW,GAAG,0EAAgB,CAAC,eAAe,CAAC,KAAI,CAAC,UAAU,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;gBAC/F,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,4DAAU,GAAjB;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1E,iBAAM,WAAW,WAAE,CAAC;IACtB,CAAC;IAEM,0DAAQ,GAAf;QACE,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IA7FD;QADC,4DAAM,EAAE;;+EACuD;IARrD,uCAAuC;QAJnD,+DAAS,CAAC;YACT,QAAQ,EAAE,uCAAuC;YACjD,oQAAkE;SACnE,CAAC;yCAYkC,2FAAuB;YAChC,+EAAc;YACD,qFAAiB;OAb5C,uCAAuC,CAsGnD;IAAD,8CAAC;CAAA,CAtG4D,8EAAe,GAsG3E;AAtGmD;;;;;;;;;;;;ACnBpD,2HAA2H,+CAA+C,sKAAsK,sDAAsD,+LAA+L,yaAAya,iDAAiD,+LAA+L,ubAAub,gCAAgC,+FAA+F,iCAAiC,iOAAiO,mCAAmC,qD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1+D;AAEyD;AACtC;AACA;AACT;AACD;AAER;AAOhF;IAA+D,0DAAe;IAoB5E,gDACmB,0BAAsD,EACtD,cAA8B;QAFjD,YAIE,kBAAM,wFAAiB,CAAC,KAAK,EAAE,wFAAkB,CAAC,gCAAgC,CAAC,SAIpF;QAPkB,gCAA0B,GAA1B,0BAA0B,CAA4B;QACtD,oBAAc,GAAd,cAAc,CAAgB;QAG/C,KAAI,CAAC,YAAY,GAAG,IAAI,0DAAY,EAAkC,CAAC;QACvE,KAAI,CAAC,eAAe,GAAG,IAAI,0DAAY,EAAkC,CAAC;QAC1E,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;;IAC5B,CAAC;IAEM,iEAAgB,GAAvB;QACE,OAAO,wFAAkB,CAAC,gCAAgC,CAAC;IAC7D,CAAC;IAEM,yDAAQ,GAAf;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;QAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,8BAA8B,gBAAQ,IAAI,CAAC,IAAI,CAAE,CAAC;SACxD;QACD,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACnC,CAAC;IAEO,0EAAyB,GAAjC;QAAA,iBAIC;QAHC,IAAI,CAAC,0BAA0B,CAAC,qCAAqC,EAAE,CAAC,SAAS,CAAC,UAAC,OAAO;YACxF,KAAI,CAAC,qBAAqB,GAAG,OAAO,IAAI,EAAE,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,yDAAQ,GAAf;QACE,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;YAC5B,IAAI,IAAI,CAAC,QAAQ,KAAK,wFAAiB,CAAC,MAAM,EAAE;gBAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;gBAC5D,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;gBAC/D,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;SACF;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,uCAAuC,CAAC,CAAC;SAC/E;IACH,CAAC;IAEO,kEAAiB,GAAzB;QACE,OAAO,CACL,CAAC,sEAAW,CAAC,aAAa,CAAC,IAAI,CAAC,8BAA8B,CAAC,YAAY,CAAC;YAC5E,CAAC,sEAAW,CAAC,aAAa,CAAC,IAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC,CACxE,CAAC;IACJ,CAAC;IAEM,4DAAW,GAAlB;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAxED;QADC,2DAAK,EAAE;;4EAC2B;IAGnC;QADC,2DAAK,EAAE;;wEACoC;IAG5C;QADC,2DAAK,EAAE;;mFACqC;IAG7C;QADC,4DAAM,EAAE;kCACY,0DAAY;gFAAiC;IAGlE;QADC,4DAAM,EAAE;kCACe,0DAAY;mFAAiC;IAd1D,sCAAsC;QAJlD,+DAAS,CAAC;YACT,QAAQ,EAAE,qCAAqC;YAC/C,8PAAgE;SACjE,CAAC;yCAsB+C,8HAA0B;YACtC,+EAAc;OAtBtC,sCAAsC,CA2ElD;IAAD,6CAAC;CAAA,CA3E8D,8EAAe,GA2E7E;AA3EkD;;;;;;;;;;;;ACfnD,0IAA0I,+CAA+C,+PAA+P,kDAAkD,6VAA6V,iDAAiD,uOAAuO,mbAAmb,qDAAqD,mOAAmO,kjBAAkjB,wDAAwD,4hBAA4hB,8DAA8D,svBAAsvB,qDAAqD,yiBAAyiB,8CAA8C,2iBAA2iB,8CAA8C,8NAA8N,qeAAqe,sDAAsD,izBAAizB,oDAAoD,y0BAAy0B,mDAAmD,wfAAwf,mDAAmD,wfAAwf,wDAAwD,yfAAyf,kDAAkD,2VAA2V,iCAAiC,8IAA8I,mCAAmC,qD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvgT;AAEmB;AACA;AACT;AACA;AACD;AAER;AACgD;AACwB;AACJ;AAOpJ;IAA0D,wDAAe;IA+BvE,8CAAoC,cAA8B,EAAS,cAA8B;QAAzG,YACE,kBAAM,wFAAiB,CAAC,KAAK,EAAE,wFAAkB,CAAC,sBAAsB,CAAC,SAG1E;QAJmC,oBAAc,GAAd,cAAc,CAAgB;QAAS,oBAAc,GAAd,cAAc,CAAgB;QAEvG,KAAI,CAAC,UAAU,GAAG,IAAI,0DAAY,EAAgC,CAAC;QACnE,KAAI,CAAC,aAAa,GAAG,IAAI,0DAAY,EAAgC,CAAC;;IACxE,CAAC;IAEM,+DAAgB,GAAvB;QACE,OAAO,wFAAkB,CAAC,sBAAsB,CAAC;IACnD,CAAC;IAEM,uDAAQ,GAAf;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS;QAC7C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;SAChB;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,wFAAiB,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,wFAAiB,CAAC,MAAM,EAAE;YAC3F,yBAAyB;SAC1B;IACH,CAAC;IAEM,qEAAsB,GAA7B,UAA8B,KAAW;QACvC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEM,oEAAqB,GAA5B,UAA6B,KAAa;QACxC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEM,wEAAyB,GAAhC,UAAiC,KAAa;QAC5C,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEM,6DAAc,GAArB;QACE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrG,IAAM,cAAc,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACxD,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE;gBAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;aACvC;iBAAM;gBACL,QAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;oBACjC,KAAK,4HAAiC,CAAC,cAAc,CAAC,CAAC;wBACrD,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAC7B,cAAc,CAAC,OAAO,CACpB,cAAc,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,4HAAiC,CAAC,gBAAgB,CACtG,CACF,CAAC;wBACF,MAAM;qBACP;oBACD,KAAK,4HAAiC,CAAC,eAAe,CAAC,CAAC;wBACtD,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAC7B,cAAc,CAAC,OAAO,CACpB,cAAc,CAAC,OAAO,EAAE;4BACtB,IAAI,CAAC,IAAI,CAAC,WAAW;gCACnB,4HAAiC,CAAC,gBAAgB;gCAClD,4HAAiC,CAAC,WAAW,CAClD,CACF,CAAC;wBAEF,MAAM;qBACP;oBACD,KAAK,4HAAiC,CAAC,gBAAgB,CAAC,CAAC;wBACvD,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBAC5G,MAAM;qBACP;oBACD,OAAO,CAAC,CAAC;wBACP,MAAM;qBACP;iBACF;aACF;SACF;IACH,CAAC;IAEM,uDAAQ,GAAf;QACE,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;YAC5B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpC;YACD,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,uCAAuC,CAAC,CAAC;SAC/E;IACH,CAAC;IAEM,sDAAO,GAAd;QACE,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,gEAAiB,GAAzB;QACE,OAAO,CACL,IAAI,CAAC,IAAI,CAAC,QAAQ;YAClB,CAAC,sEAAW,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,OAAO;YACjB,kDAAkD;YAClD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAC/G,CAAC;IACJ,CAAC;IAEM,kEAAmB,GAA1B,UAA2B,KAAK;QAC9B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,KAAK,CAAC,KAAK,KAAK,oJAAoC,CAAC,MAAM,EAAE;YAClG,IAAI,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,IAAI,EAAE,CAAC;SAC7C;IACH,CAAC;IAEM,gEAAiB,GAAxB,UAAyB,KAAK;QAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,KAAK,CAAC,KAAK,KAAK,gJAAkC,CAAC,IAAI,EAAE;YAC9F,IAAI,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,IAAI,EAAE,CAAC;SAC7C;IACH,CAAC;IAEM,0DAAW,GAAlB;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAhJD;QADC,2DAAK,EAAE;;0EAC2B;IAGnC;QADC,2DAAK,EAAE;;0EACiB;IAGzB;QADC,2DAAK,EAAE;;sEACkC;IAG1C;QADC,2DAAK,EAAE;;gFACuB;IAG/B;QADC,4DAAM,EAAE;kCACU,0DAAY;4EAA+B;IAG9D;QADC,4DAAM,EAAE;kCACa,0DAAY;+EAA+B;IAGjE;QADC,2DAAK,EAAE;;sFAC0C;IAGlD;QADC,2DAAK,EAAE;;wFAC4C;IAGpD;QADC,2DAAK,EAAE;;+EACmC;IAG3C;QADC,2DAAK,EAAE;;0EACgB;IA7Bb,oCAAoC;QAJhD,+DAAS,CAAC;YACT,QAAQ,EAAE,mCAAmC;YAC7C,wPAA8D;SAC/D,CAAC;yCAgCoD,+EAAc,EAAyB,+EAAc;OA/B9F,oCAAoC,CAmJhD;IAAD,2CAAC;CAAA,CAnJyD,8EAAe,GAmJxE;AAnJgD;;;;;;;;;;;;AClBjD,0IAA0I,4DAA4D,mJAAmJ,6BAA6B,qJAAqJ,iEAAiE,kMAAkM,+BAA+B,2NAA2N,iCAAiC,oTAAoT,+BAA+B,mQAAmQ,0FAA0F,oJAAoJ,kCAAkC,0FAA0F,2BAA2B,qmBAAqmB,wBAAwB,uVAAuV,kEAAkE,gMAAgM,iEAAiE,gPAAgP,4BAA4B,uFAAuF,yDAAyD,ihBAAihB,4BAA4B,uFAAuF,wDAAwD,upBAAupB,uDAAuD,gPAAgP,qgBAAqgB,0EAA0E,wiBAAwiB,4BAA4B,uFAAuF,kEAAkE,yqBAAyqB,+DAA+D,smBAAsmB,oEAAoE,w9BAAw9B,kEAAkE,yhCAAyhC,gEAAgE,qmBAAqmB,gEAAgE,okBAAokB,oDAAoD,2YAA2Y,kXAAkX,gDAAgD,sNAAsN,8fAA8f,6DAA6D,mLAAmL,gDAAgD,2RAA2R,uBAAuB,uiCAAuiC,8DAA8D,mLAAmL,gDAAgD,sRAAsR,uBAAuB,ywCAAywC,8DAA8D,0NAA0N,qDAAqD,IAAI,oCAAoC,wnBAAwnB,iCAAiC,sXAAsX,+BAA+B,8WAA8W,8BAA8B,0UAA0U,wDAAwD,ySAAyS,4DAA4D,0NAA0N,wDAAwD,IAAI,mCAAmC,syBAAsyB,iCAAiC,mXAAmX,+BAA+B,4WAA4W,8BAA8B,gXAAgX,+BAA+B,yLAAyL,iDAAiD,4JAA4J,uDAAuD,yJAAyJ,4BAA4B,kKAAkK,uMAAuM,yJAAyJ,oDAAoD,0JAA0J,+LAA+L,wJAAwJ,6LAA6L,qTAAqT,qEAAqE,iYAAiY,uEAAuE,0NAA0N,qEAAqE,8LAA8L,sEAAsE,89BAA89B,mBAAmB,8YAA8Y,yBAAyB,kEAAkE,iSAAiS,kDAAkD,8UAA8U,6CAA6C,iaAAia,8BAA8B,kaAAka,+BAA+B,maAAma,iCAAiC,qcAAqc,4BAA4B,+GAA+G,wDAAwD,6pBAA6pB,4BAA4B,+GAA+G,yDAAyD,ovBAAovB,4BAA4B,+GAA+G,wDAAwD,4SAA4S,8mBAA8mB,0DAA0D,4SAA4S,8oBAA8oB,2EAA2E,o3BAAo3B,+DAA+D,8xBAA8xB,gEAAgE,6wBAA6wB,mEAAmE,02BAA02B,6DAA6D,4qCAA4qC,2DAA2D,kxCAAkxC,kEAAkE,kuBAAkuB,iIAAiI,+dAA+d,2fAA2f,sEAAsE,syBAAsyB,iEAAiE,6xBAA6xB,6DAA6D,miCAAmiC,iEAAiE,oTAAoT,kEAAkE,0NAA0N,0DAA0D,4BAA4B,mFAAmF,gMAAgM,yEAAyE,6nBAA6nB,iCAAiC,4YAA4Y,+BAA+B,oYAAoY,8BAA8B,6LAA6L,uDAAuD,yJAAyJ,sDAAsD,yJAAyJ,sDAAsD,6JAA6J,0DAA0D,oJAAoJ,iDAAiD,sJAAsJ,mDAAmD,0JAA0J,uDAAuD,iTAAiT,gEAAgE,g9G;;;;;;;;;;;ACAls+C,0IAA0I,uBAAuB,EAAE,iEAAiE,iBAAiB,EAAE,6FAA6F,gCAAgC,EAAE,sGAAsG,0BAA0B,EAAE,mHAAmH,0BAA0B,EAAE,8DAA8D,qBAAqB,EAAE,+CAA+C,m3I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlsB;AAClB;AAEP;AACN;AAEiE;AACO;AACb;AACrB;AACwB;AAEZ;AACa;AACb;AACM;AACL;AACR;AACJ;AACE;AACM;AACM;AACZ;AACR;AAIY;AAIjB;AACI;AACgD;AACa;AAQ/B;AACN;AACT;AACjB;AACsB;AAChB;AACP;AACgC;AA4BvG;IAAmD,iDAAoC;IAqGrF,+EAA+E;IAE/E,uCACE,eAAgC,EAChC,aAA4B,EAC5B,cAA8B,EAC9B,cAA8B,EAC9B,oBAA0C,EAC1C,UAAsB,EACf,mBAAwC,EACxC,cAA8B,EAC9B,gBAAkC,EACxB,uBAAgD,EAChD,2BAAwD,EACxD,8BAA8D,EAC9D,mBAAwC,EACxC,iBAAoC,EACpC,oBAA0C,EAC1C,eAA+B,EAC/B,mBAA2C;QAjB9D,YAmBE,kBACE,yFAAiB,CAAC,IAAI,EACtB,eAAe,EACf,aAAa,EACb,cAAc,EACd,oBAAoB,EACpB,UAAU,EACV,cAAc,CACf,SAqBF;QAzCQ,yBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAgB,GAAhB,gBAAgB,CAAkB;QACxB,6BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,iCAA2B,GAA3B,2BAA2B,CAA6B;QACxD,oCAA8B,GAA9B,8BAA8B,CAAgC;QAC9D,yBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,uBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,0BAAoB,GAApB,oBAAoB,CAAsB;QAC1C,qBAAe,GAAf,eAAe,CAAgB;QAC/B,yBAAmB,GAAnB,mBAAmB,CAAwB;QAY5D,KAAI,CAAC,SAAS,GAAG,+BAA6B,CAAC;QAE/C,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,KAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAE9B,KAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,KAAI,CAAC,YAAY,EAAE,CAAC;QACpB,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,KAAI,CAAC,wBAAwB,EAAE,CAAC;;IAClC,CAAC;sCAvJU,6BAA6B;IAyJhC,oDAAY,GAApB;QACE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,iBAAM,8BAA8B,WAAE,CAAC;QACvC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAEjC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEM,wDAAgB,GAAvB;QACE,OAAO,wFAAkB,CAAC,0BAA0B,CAAC;IACvD,CAAC;IAEM,gDAAQ,GAAf;QACE,iBAAM,QAAQ,WAAE,CAAC;QAEjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAEjD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEM,8CAAM,GAAb;QACE,IAAI,CAAC,cAAc,CAAC,yFAAiB,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEM,4CAAI,GAAX;QACE,IAAI,CAAC,cAAc,CAAC,yFAAiB,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAEM,8CAAM,GAAb;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEM,4CAAI,GAAX;QACE,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;YAC5B,IAAI,CAAC,oBAAoB,CAAC;gBACxB,uBAAuB,EAAE,IAAI,CAAC,gBAAgB;gBAC9C,qBAAqB,EAAE,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CACrE,UAAC,GAAG,IAAK,UAAG,CAAC,8BAA8B,EAAlC,CAAkC,CAC5C;gBACD,mBAAmB,EAAE,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,UAAC,GAAG,IAAK,QAAC;oBAC7E,4BAA4B,EAAE,GAAG,CAAC,4BAA4B;oBAC9D,sBAAsB,EACpB,GAAG,CAAC,cAAc;wBAClB,GAAG,CAAC,cAAc,CAAC,oBAAoB,CAAC,UAAC,OAAwB,IAAK,QAAC;4BACrE,2BAA2B,EAAE,OAAO,CAAC,2BAA2B;4BAChE,wBAAwB,EACtB,OAAO,CAAC,qCAAqC;gCAC7C,OAAO,CAAC,qCAAqC,CAAC,oBAAoB,CAAC,UAAC,UAAU,IAAK,QAAC;oCAClF,8BAA8B,EAAE,UAAU,CAAC,8BAA8B;iCAC1E,CAAC,EAFiF,CAEjF,CAAC;yBACN,CAAC,EAPoE,CAOpE,CAAC;iBACN,CAAC,EAZ4E,CAY5E,CAAC;gBACH,sBAAsB,EAAE,IAAI,CAAC,iBAAiB,CAAC,yBAAyB,EAAE;aAC3E,CAAC,CAAC;SACJ;IACH,CAAC;IAEO,yDAAiB,GAAzB;QAAA,iBA0CC;QAzCC,IAAI,iBAAiB,GAAG,IAAI,CAAC;QAC7B,gDAAgD;QAChD,IACE,uEAAW,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;YACzD,uEAAW,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;YAC5D,uEAAW,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;YAClE,uEAAW,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EACxD;YACA,iBAAiB,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,uCAAuC,CAAC,CAAC;SACjF;QAED,IAAM,mBAAmB,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,QAAQ,EAAE,KAAK;YACpF,OAAO,CACL,QAAQ,CAAC,4BAA4B;gBACrC,KAAK;oBACH,KAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,CAC1C,UAAC,QAAQ;wBACP,eAAQ,CAAC,4BAA4B;4BACrC,QAAQ,CAAC,4BAA4B,CAAC,QAAQ,KAAK,QAAQ,CAAC,4BAA4B,CAAC,QAAQ;oBADjG,CACiG,CACpG,CACJ,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,iBAAiB,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,2BAA2B,CAAC,CAAC,CAAC;SAC3F;QAED,0CAA0C;QAC1C,qGAAqG;QACrG;;;;;;;WAOG;QAEH,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAEO,4DAAoB,GAA5B,UAA6B,qBAAoD;QAAjF,iBA2BC;QA1BC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,CAAC,SAAS,CACpF,UAAC,MAAM;YACL,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE;gBAC7B,IAAI,MAAM,CAAC,EAAE,EAAE;oBACb,IAAM,kBAAkB,GAA8B;wBACpD,EAAE,EAAE,MAAM,CAAC,EAAE;qBACd,CAAC;oBACF,KAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;iBACvF;gBACD,KAAI,CAAC,cAAc,CAAC,yFAAiB,CAAC,KAAK,CAAC,CAAC;gBAC7C,IAAI,KAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;oBAClC,KAAI,CAAC,uBAAuB,CAAC,KAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;iBACrF;gBACD,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,KAAI,CAAC,eAAe,CAAC,iCAAiC,CAAC,CAAC,CAAC;aACjG;iBAAM;gBACL,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,KAAI,CAAC,eAAe,CAAC,iCAAiC,CAAC,CAAC,CAAC;aACjG;YACD,KAAI,CAAC,MAAM,EAAE,CAAC;YACd,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,KAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5E,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,4CAAI,GAAZ;QACE,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAE9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,+BAA+B,EAAE,CAAC;QACvC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEO,4DAAoB,GAA5B;QAAA,iBA2CC;QA1CC,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YACrD,gCAAgC;YAChC,IAAM,UAAU,GAA8B,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAEjH,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC,SAAS,CACzE,UAAC,MAAM;gBACL,IAAI,CAAC,CAAC,MAAM,EAAE;oBACZ,KAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;oBAE/B,IAAI,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE;wBAC1C,KAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,KAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;4BACjG,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;wBAC5D,CAAC,CAAC,CAAC;qBACJ;oBAED,IAAI,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,sBAAsB,EAAE;wBAClD,KAAI,CAAC,uBAAuB;6BACzB,wBAAwB,CAAC,EAAE,EAAE,EAAE,KAAI,CAAC,gBAAgB,CAAC,sBAAsB,EAAE,CAAC;6BAC9E,SAAS,CAAC,UAAC,QAAQ;4BAClB,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;wBACnE,CAAC,CAAC,CAAC;qBACN;oBAED,IAAI,KAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;wBAClC,KAAI,CAAC,uBAAuB,CAAC,KAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;qBACrF;iBACF;YACH,CAAC,EACD;gBACE,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,KAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACvF,CAAC,CACF,CAAC;SACH;aAAM;YACL,0BAA0B;YAC1B,IAAI,CAAC,gBAAgB,GAAG;gBACtB,cAAc,EAAE,IAAI,IAAI,EAAE;gBAC1B,YAAY,EAAE,IAAI,IAAI,EAAE;gBACxB,mBAAmB,EAAE,IAAI,IAAI,EAAE;gBAC/B,iBAAiB,EAAE,IAAI,IAAI,EAAE;gBAC7B,WAAW,EAAE,0IAA+B,CAAC,OAAO;aACrD,CAAC;SACH;IACH,CAAC;IAED,sBAAsB;IACd,2DAAmB,GAA3B;QAAA,iBAqCC;QApCC,qDAAQ,CAAC;YACP,UAAU,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,EAAE,6HAAiC,CAAC,mBAAmB,CAAC;YACjH,QAAQ,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,EAAE,6HAAiC,CAAC,sBAAsB,CAAC;YAChH,eAAe,EAAE,IAAI,CAAC,wBAAwB,CAC5C,IAAI,CAAC,eAAe,EACpB,6HAAiC,CAAC,yBAAyB,CAC5D;YACD,aAAa,EAAE,IAAI,CAAC,wBAAwB,CAC1C,IAAI,CAAC,aAAa,EAClB,6HAAiC,CAAC,uBAAuB,CAC1D;YACD,UAAU,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,EAAE,6HAAiC,CAAC,iBAAiB,CAAC;YAC/G,cAAc,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,cAAc,EAAE,sGAAwB,CAAC,YAAY,CAAC;YACzG,cAAc,EAAE,IAAI,CAAC,wBAAwB,CAC3C,IAAI,CAAC,mBAAmB,EACxB,6HAAiC,CAAC,wBAAwB,CAC3D;YACD,aAAa,EAAE,IAAI,CAAC,wBAAwB,CAC1C,IAAI,CAAC,cAAc,EACnB,sGAAwB,CAAC,4BAA4B,CACtD;YACD,eAAe,EAAE,IAAI,CAAC,wBAAwB,CAC5C,IAAI,CAAC,eAAe,EACpB,6HAAiC,CAAC,gBAAgB,CACnD;SACF,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAClB,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACpC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;YAC9C,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;YAC1C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACpC,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;YAC5C,KAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,cAAc,CAAC;YACjD,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;YAC1C,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAiC;IAC1B,mDAAW,GAAlB;QAAA,iBASC;QARC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,MAAM;YACvD,KAAI,CAAC,UAAU,GAAG,mEAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAC,IAAiB;gBAChE,OAAO;oBACL,KAAK,EAAK,IAAI,CAAC,QAAQ,SAAI,IAAI,CAAC,QAAU;oBAC1C,KAAK,EAAE,IAAI,CAAC,MAAM;iBACnB,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,qDAAa,GAArB;QAAA,iBAQC;QAPC,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YACrD,IAAM,UAAU,GAA8B,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAEjH,IAAI,CAAC,uBAAuB;iBACzB,qCAAqC,CAAC,UAAU,CAAC;iBACjD,SAAS,CAAC,UAAC,OAAO,IAAK,QAAC,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC,EAA9B,CAA8B,CAAC,CAAC;SAC3D;IACH,CAAC;IAEO,gEAAwB,GAAhC,UACE,WAAiC,EACjC,MAAc;QAEd,OAAO,mEAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,+CAAE,CAAC,WAAW,CAAC,CAAC;IACpG,CAAC;IAEO,mDAAW,GAAnB;QAAA,iBA2BC;QA1BC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACxC,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YACrD,IAAM,UAAU,GAA8B,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAEjH,IAAI,CAAC,sBAAsB,CAAC,SAAS,GAAG,IAAI,CAAC;YAC7C,IAAI,CAAC,uBAAuB;iBACzB,mCAAmC,CAAC,UAAU,CAAC;iBAC/C,IAAI,CACH,+DAAQ,CAAC;gBACP,KAAI,CAAC,sBAAsB,CAAC,SAAS,GAAG,KAAK,CAAC;YAChD,CAAC,CAAC,CACH;iBACA,SAAS,CACR,UAAC,MAAM;gBACL,IAAI,CAAC,CAAC,MAAM,EAAE;oBACZ,IAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,EAAnC,CAAmC,CAAC,CAAC;oBACjF,KAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;iBAClD;qBAAM;oBACL,KAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;iBACzC;YACH,CAAC,EACD;gBACE,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,KAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACvF,CAAC,CACF,CAAC;SACL;IACH,CAAC;IAED;;+EAE2E;IAEnE,yDAAiB,GAAzB;QAAA,iBAmDC;QAlDC,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,GAAG,GAAG,+BAA6B,CAAC,qBAAqB,CAAC;QAC1G,IAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,GAAG,GAAG,+BAA6B,CAAC,iBAAiB,CAAC;QACnG,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,GAAG,GAAG,+BAA6B,CAAC,eAAe,CAAC;QAC/F,IAAM,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,GAAG,GAAG,+BAA6B,CAAC,0BAA0B,CAAC;QACpH,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,GAAG,GAAG,+BAA6B,CAAC,qBAAqB,CAAC;QAC1G,IAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,GAAG,GAAG,+BAA6B,CAAC,mBAAmB,CAAC;QACvG,IAAI,CAAC,gBAAgB;aAClB,GAAG,CAAC,CAAC,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAE,kBAAkB,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;aAC3F,SAAS,CAAC,UAAC,OAAiB;YAC3B,IAAM,eAAe,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,yBAAyB,CAAC;YACvF,IAAM,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC;YAC7E,IAAM,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC;YACvE,IAAM,oBAAoB,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,gCAAgC,CAAC;YACxG,IAAM,eAAe,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC;YACjF,IAAM,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACvE,KAAI,CAAC,GAAG,GAAG;gBACT;oBACE,EAAE,EAAE,+BAA6B,CAAC,qBAAqB;oBACvD,MAAM,EAAE,KAAI,CAAC,gBAAgB;oBAC7B,KAAK,EAAE,eAAe;iBACvB;gBACD;oBACE,EAAE,EAAE,+BAA6B,CAAC,iBAAiB;oBACnD,MAAM,EAAE,KAAI,CAAC,aAAa;oBAC1B,KAAK,EAAE,YAAY;iBACpB;gBACD;oBACE,EAAE,EAAE,+BAA6B,CAAC,eAAe;oBACjD,MAAM,EAAE,KAAI,CAAC,WAAW;oBACxB,KAAK,EAAE,UAAU;iBAClB;gBACD;oBACE,EAAE,EAAE,+BAA6B,CAAC,0BAA0B;oBAC5D,MAAM,EAAE,KAAI,CAAC,qBAAqB;oBAClC,KAAK,EAAE,oBAAoB;iBAC5B;gBACD;oBACE,EAAE,EAAE,+BAA6B,CAAC,qBAAqB;oBACvD,MAAM,EAAE,KAAI,CAAC,gBAAgB;oBAC7B,KAAK,EAAE,eAAe;iBACvB;gBACD;oBACE,EAAE,EAAE,+BAA6B,CAAC,mBAAmB;oBACrD,MAAM,EAAE,KAAI,CAAC,eAAe;oBAC5B,KAAK,EAAE,cAAc;iBACtB;aACF,CAAC;YAEF,iBAAM,kBAAkB,aAAC,KAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,8DAAsB,GAA7B;QACE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;IACrC,CAAC;IAEM,6DAAqB,GAA5B,UAA6B,QAAiB;QAC5C,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;SAC7D;IACH,CAAC;IAED;;+EAE2E;IACnE,iEAAyB,GAAjC;QACE,IAAI,CAAC,qBAAqB,GAAG,IAAI,iGAA0B,CAAC;YAC1D,gBAAgB,EAAE,IAAI;YACtB,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,UAAU;oBACjB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;iBAC/C;gBACD;oBACE,KAAK,EAAE,gBAAgB;oBACvB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;iBACrD;gBACD;oBACE,KAAK,EAAE,aAAa;oBACpB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;iBAClD;gBACD;oBACE,KAAK,EAAE,sBAAsB;oBAC7B,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC;iBAC3D;gBACD;oBACE,KAAK,EAAE,aAAa;oBACpB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;iBAClD;gBACD;oBACE,KAAK,EAAE,cAAc;oBACrB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;iBACnD;gBACD;oBACE,KAAK,EAAE,YAAY;oBACnB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;iBACjD;aACF;YACD,IAAI,EAAE,EAAE;YACR,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC;IACL,CAAC;IAEO,kDAAU,GAAlB;QAAA,iBAyBC;QAxBC,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;YACrD,+BAA+B;YAC/B,IAAM,UAAU,GAA8B,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAEjH,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACvC,IAAI,CAAC,qBAAqB,CAAC,SAAS,GAAG,IAAI,CAAC;YAC5C,IAAI,CAAC,uBAAuB;iBACzB,8BAA8B,CAAC,UAAU,CAAC;iBAC1C,IAAI,CACH,+DAAQ,CAAC;gBACP,KAAI,CAAC,qBAAqB,CAAC,SAAS,GAAG,KAAK,CAAC;YAC/C,CAAC,CAAC,CACH;iBACA,SAAS,CACR,UAAC,MAAM;gBACL,IAAI,CAAC,CAAC,MAAM,EAAE;oBACZ,KAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,KAAK,IAAK,YAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAtB,CAAsB,CAAC,CAAC,CAAC;iBACnF;YACH,CAAC,EACD;gBACE,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,KAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,CAAC;YACrF,CAAC,CACF,CAAC;SACL;IACH,CAAC;IAEO,oDAAY,GAApB,UAAqB,8BAA8D;QACjF,IAAI,CAAC,8BAA8B,CAAC,cAAc,CAAC,8BAA8B,CAAC,CAAC;QAEnF,OAAO;YACL,8BAA8B;SAC/B,CAAC;IACJ,CAAC;IAEO,kDAAU,GAAlB,UAAmB,QAAsC;QACvD,OAAO;YACL,4BAA4B,EAAE,QAAQ;YACtC,gBAAgB,EAAE,2EAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE;YACpG,cAAc,EAAE,2EAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE;SAC7F,CAAC;IACJ,CAAC;IAEM,iDAAS,GAAhB;QACE,IAAI,CAAC,oBAAoB,GAAG,yFAAiB,CAAC,MAAM,CAAC;QACrD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,kDAAU,GAAjB,UAAkB,EAAgC;QAChD,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAEM,kDAAU,GAAjB;QACE,IAAI,CAAC,oBAAoB,GAAG,yFAAiB,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,cAAc,gBAAQ,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,4BAA4B,CAAE,CAAC;QACtG,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEM,0DAAkB,GAAzB;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAEM,kDAAU,GAAjB;QACE,IAAI,CAAC,oBAAoB,GAAG,yFAAiB,CAAC,IAAI,CAAC;QACnD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,4BAA4B,CAAC;QAC/F,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,qDAAqD;IACvD,CAAC;IAEM,qDAAa,GAApB,UAAqB,EAAgC;QACnD,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3G,CAAC;IAEM,oDAAY,GAAnB;QAAA,iBAWC;QAVC,IAAM,iBAAiB,GACrB,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,sBAAsB,CAAC;QACvG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;YACrC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC;YACnD,MAAM,EAAE;gBACN,KAAI,CAAC,qBAAqB,CAAC,mBAAmB,EAAE,CAAC;gBACjD,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,KAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,CAAC;gBACrF,KAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAEM,uDAAe,GAAtB,UAAuB,MAA0C;QAC/D,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEM,yDAAiB,GAAxB,UAAyB,MAA0C;QACjE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEM,oDAAY,GAAnB;QACE,IAAI,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,KAAK,CAAC,EAAE;YACvD,IAAM,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACjE,sBAAsB;YACtB,IAAI,YAAY,CAAC,cAAc,EAAE;gBAC/B,4CAA4C;gBAC5C,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;aACnD;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;aACnC;YACD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;IACH,CAAC;IAEO,4DAAoB,GAA5B;QACE,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QAClC,IAAI,CAAC,+BAA+B,EAAE,CAAC;IACzC,CAAC;IAED;;+EAE2E;IAEpE,6DAAqB,GAA5B,UAA6B,8BAA8D;QACzF,OAAO;YACL,8BAA8B;YAC9B,YAAY,EAAE,8BAA8B,CAAC,YAAY;YACzD,SAAS,EAAE,2EAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,8BAA8B,CAAC,OAAO,CAAC;SAC1G,CAAC;IACJ,CAAC;IAEO,4DAAoB,GAA5B;QACE,IAAI,CAAC,sBAAsB,GAAG,IAAI,iGAA0B,CAAC;YAC3D,gBAAgB,EAAE,IAAI;YACtB,OAAO,EAAE;gBACP,EAAE,KAAK,EAAE,cAAc,EAAE,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE;gBAC7E,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE;aACxE;YACD,IAAI,EAAE,EAAE;YACR,gBAAgB,EAAE,IAAI;YACtB,2BAA2B,EAAE,CAAC,cAAc,EAAE,WAAW,CAAC;YAC1D,qBAAqB,EAAE,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC;YACtE,uBAAuB,EAAE,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC;SACzE,CAAC,CAAC;IACL,CAAC;IAEM,kDAAU,GAAjB;QACE,IAAI,CAAC,qBAAqB,GAAG,yFAAiB,CAAC,MAAM,CAAC;QACtD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAEM,oDAAY,GAAnB,UAAoB,EAAkC;QACpD,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;IAEM,mDAAW,GAAlB;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,8BAA8B,CAAC;QAClG,IAAI,CAAC,qBAAqB,GAAG,yFAAiB,CAAC,KAAK,CAAC;QACrD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAEM,uDAAe,GAAtB,UAAuB,EAAkC;QACvD,IAAI,CAAC,sBAAsB,CAAC,WAAW,CACrC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,CAAC,EAC5C,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAC/B,CAAC;IACJ,CAAC;IAEM,qDAAa,GAApB;QAAA,iBAYC;QAXC,IAAM,iBAAiB,GACrB,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,GAAG,CAAC;YAChD,CAAC,CAAC,+BAA+B;YACjC,CAAC,CAAC,8BAA8B,CAAC;QAErC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;YACrC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC;YACnD,MAAM,EAAE;gBACN,KAAI,CAAC,sBAAsB,CAAC,mBAAmB,EAAE,CAAC;YACpD,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED;;+EAE2E;IAEnE,uEAA+B,GAAvC;QACE,IAAI,CAAC,iCAAiC,GAAG,IAAI,CAAC,sCAAsC,EAAE,CAAC;IACzF,CAAC;IAEM,6DAAqB,GAA5B;QACE,IAAI,CAAC,2BAA2B,GAAG,SAAS,CAAC;QAC7C,IAAI,CAAC,gCAAgC,GAAG,yFAAiB,CAAC,MAAM,CAAC;QACjE,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;IAC3C,CAAC;IAEM,+DAAuB,GAA9B,UAA+B,EAAkC;QAC/D,IAAI,CAAC,iCAAiC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,iCAAiC,EAAE,CAAC;IAC3C,CAAC;IAEO,yEAAiC,GAAzC;QACE,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACpD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC1D;QACD,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEM,8DAAsB,GAA7B;QACE,IAAI,CAAC,gCAAgC,GAAG,yFAAiB,CAAC,KAAK,CAAC;QAChE,IAAI,CAAC,2BAA2B,gBAC3B,IAAI,CAAC,iCAAiC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,8BAA8B,CAC1F,CAAC;QACF,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACrC,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;IAC3C,CAAC;IAEM,kEAA0B,GAAjC,UAAkC,EAAkC;QAClE,IAAI,CAAC,iCAAiC,CAAC,WAAW,CAChD,IAAI,CAAC,iCAAiC,CAAC,aAAa,CAAC,CAAC,CAAC,EACvD,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CACtB,CAAC;QACF,IAAI,CAAC,iCAAiC,EAAE,CAAC;IAC3C,CAAC;IAEM,+DAAuB,GAA9B;QAAA,iBAaC;QAZC,IAAM,iBAAiB,GACrB,IAAI,CAAC,iCAAiC,CAAC,kBAAkB,GAAG,CAAC;YAC3D,CAAC,CAAC,+BAA+B;YACjC,CAAC,CAAC,8BAA8B,CAAC;QAErC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;YACrC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC;YACnD,MAAM,EAAE;gBACN,KAAI,CAAC,iCAAiC,CAAC,mBAAmB,EAAE,CAAC;gBAC7D,KAAI,CAAC,iCAAiC,EAAE,CAAC;YAC3C,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IACD;;+EAE2E;IAEnE,sDAAc,GAAtB,UAAuB,KAAuB;QAA9C,iBAoBC;QAnBC,IAAM,YAAY,GAAG,UAAC,GAAoB;YACxC,UAAG,CAAC,2BAA2B,IAAI,GAAG,CAAC,2BAA2B,CAAC,EAAE;QAArE,CAAqE,CAAC;QACxE,IAAM,kBAAkB,GAAG,UAAC,GAAoB,EAAE,QAAiB;YACjE,QAAC,GAAG,CAAC,2BAA2B,CAAC,0BAA0B,GAAG,QAAQ,CAAC;QAAvE,CAAuE,CAAC;QAC1E,IAAI,CAAC,KAAK,CAAC,4BAA4B,IAAI,KAAK,CAAC,4BAA4B,CAAC,EAAE,KAAK,SAAS,EAAE;YAC9F,uCAAuC;YACvC,KAAK,CAAC,cAAc,GAAG,IAAI,iFAAiB,CAA0B,YAAY,EAAE,kBAAkB,CAAC,CAAC;YACxG,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;SAC5C;aAAM;YACL,uCAAuC;YACvC,IAAI,CAAC,2BAA2B;iBAC7B,qBAAqB,CAAC,KAAK,CAAC,4BAA4B,CAAC,EAAE,CAAC;iBAC5D,SAAS,CAAC,UAAC,SAAS;gBACnB,KAAK,CAAC,cAAc,GAAG,IAAI,iFAAiB,CAA0B,YAAY,EAAE,kBAAkB,CAAC,CAAC;gBACxG,KAAK,CAAC,cAAc,CAAC,IAAI,GAAG,0EAAa,CAAC,WAAW,CAAC,SAAS,EAAE,KAAI,CAAC,mBAAmB,CAAC,CAAC;gBAC3F,0EAAa,CAAC,WAAW,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBACrD,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;YAC7C,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAEO,2DAAmB,GAA3B,UAA4B,IAAiC;QAC3D,OAAO;YACL,2BAA2B,EAAE,IAAI;SAClC,CAAC;IACJ,CAAC;IAEO,gEAAwB,GAAhC;QACE,IAAI,CAAC,qBAAqB,GAAG,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1E,CAAC;IAEM,uDAAe,GAAtB,UAAuB,QAA8B;QACnD,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;QACxE,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE;YACvB,IAAI,IAAI,CAAC,YAAY,CAAC,qCAAqC,EAAE;gBAC3D,IAAI,CAAC,iCAAiC,GAAG,IAAI,CAAC,YAAY,CAAC,qCAAqC,CAAC;aAClG;iBAAM;gBACL,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;SACF;IACH,CAAC;IAEM,iDAAS,GAAhB;QACE,mCAAmC;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,4BAA4B,EAAE;YACzE,IAAI,CAAC,WAAW,GAAG;gBACjB,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,YAAY;gBAC1E,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,UAAU;aACvE,CAAC;SACH;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;SAC9B;QACD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAEM,+DAAuB,GAA9B;QACE,uFAAuF;QACvF,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC;IACM,kDAAU,GAAjB,UAAkB,OAAoC;QACpD,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC3F,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;IACH,CAAC;IAEM,kDAAU,GAAjB;QACE,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,mCAAmC;YACnC,IAAI,CAAC,WAAW,gBAAQ,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAE,CAAC;YACxE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAEM,wDAAgB,GAAvB,UAAwB,IAAiC;QACvD,IAAI,IAAI,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,cAAc,EAAE;YACxD,IAAM,OAAO,GAAoB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;YAC5D,OAAO,CAAC,2BAA2B,GAAG,IAAI,CAAC;YAC3C,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE;gBACvB,IAAI,CAAC,YAAY,CAAC,2BAA2B,GAAG,IAAI,CAAC;aACtD;YACD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC/D,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;IACH,CAAC;IAEM,mDAAW,GAAlB;QACE,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACtD,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,+BAA+B,EAAE,CAAC;SACxC;IACH,CAAC;IAEO,8EAAsC,GAA9C;QACE,OAAO,IAAI,iGAA0B,CAAC;YACpC,gBAAgB,EAAE,IAAI;YACtB,OAAO,EAAE;gBACP,EAAE,KAAK,EAAE,cAAc,EAAE,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;gBACvE,EAAE,KAAK,EAAE,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,EAAE;gBAC3E,EAAE,KAAK,EAAE,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE;gBAC5E,EAAE,KAAK,EAAE,iBAAiB,EAAE,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,EAAE;gBACpF,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE;gBAClE,EAAE,KAAK,EAAE,UAAU,EAAE,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE;gBACrE,EAAE,KAAK,EAAE,cAAc,EAAE,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE;aAC/E;YACD,IAAI,EAAE,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB,CAAC,CAAC;IACL,CAAC;IAEO,yDAAiB,GAAzB;QACE,OAAO,CACL,CAAC,CAAC,IAAI,CAAC,YAAY;YACnB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B;YAC/C,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,EAAE,CACnD,CAAC;IACJ,CAAC;IAEO,wDAAgB,GAAxB;QAAA,iBAiBC;QAhBC,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;YAC5B,IAAI,CAAC,8BAA8B;iBAChC,oBAAoB,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,EAAE,CAAW,CAAC;iBACvG,SAAS,CAAC,UAAC,QAAQ;gBAClB,IAAI,CAAC,CAAC,KAAI,CAAC,YAAY,EAAE;oBACvB,KAAI,CAAC,YAAY,CAAC,qCAAqC,GAAG,KAAI,CAAC,sCAAsC,EAAE,CAAC;oBACxG,KAAI,CAAC,YAAY,CAAC,qCAAqC,CAAC,OAAO,CAC7D,QAAQ,CAAC,GAAG,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAA1B,CAA0B,CAAC,CACtD,CAAC;oBACF,KAAI,CAAC,iCAAiC,GAAG,KAAI,CAAC,YAAY,CAAC,qCAAqC,CAAC;iBAClG;YACH,CAAC,CAAC,CAAC;SACN;aAAM,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE;YAC9B,IAAI,CAAC,YAAY,CAAC,qCAAqC,GAAG,IAAI,CAAC,sCAAsC,EAAE,CAAC;YACxG,IAAI,CAAC,iCAAiC,GAAG,IAAI,CAAC,YAAY,CAAC,qCAAqC,CAAC;SAClG;IACH,CAAC;IAED;;+EAE2E;IACpE,sDAAc,GAArB;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAEM,0DAAkB,GAAzB,UAA0B,cAAuC;QAC/D,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,GAAG,cAAc,CAAC,EAAE,CAAC;YACjE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;SACxE;QACD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IAClC,CAAC;IAEO,8DAAsB,GAA9B,UAA+B,sBAA+C;QAC5E,OAAU,sBAAsB,CAAC,QAAQ,SAAI,sBAAsB,CAAC,OAAS,CAAC;IAChF,CAAC;IAED;;+EAE2E;IACpE,2DAAmB,GAA1B;QACE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAEM,2DAAmB,GAA1B,UAA2B,gBAAiC;QAC1D,IAAI,gBAAgB,EAAE;YACpB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,gBAAgB,CAAC,EAAE,CAAC;YAC3D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;SACnE;IACH,CAAC;IAEO,uDAAe,GAAvB,UAAwB,gBAAiC;QACvD,OAAU,gBAAgB,CAAC,gBAAgB,SAAI,gBAAgB,CAAC,iBAAmB,CAAC;IACtF,CAAC;IAEM,wDAAgB,GAAvB;QACE,IAAI,WAAW,CAAC;QAChB,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;YAC5E,WAAW,GAAG,2EAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACvG;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;IAEM,kDAAU,GAAjB;QAAA,iBAsBC;QArBC,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAqB;YACjF,OAAO,EAAE,iGAAqB;YAC9B,IAAI,EAAE;gBACJ,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU;gBAC/C,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU;gBAC7C,aAAa,EAAE;oBACb,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC;oBAC7F,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW;iBACzC;gBACD,YAAY,EAAE,IAAI,CAAC,UAAU;aAC9B;SACF,CAAC,CAAC;QAEH,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC;YAChC,IAAI,EAAE,UAAC,KAAK;gBACV,IAAI,KAAK,CAAC,IAAI,EAAE;oBACd,KAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;oBAC/C,KAAI,CAAC,IAAI,EAAE,CAAC;iBACb;YACH,CAAC;SACF,CAAC,CAAC;IACL,CAAC;;IAp/BsB,mDAAqB,GAAW,kBAAkB,CAAC;IACnD,+CAAiB,GAAW,gBAAgB,CAAC;IAC7C,6CAAe,GAAW,aAAa,CAAC;IACxC,wDAA0B,GAAW,uBAAuB,CAAC;IAC7D,mDAAqB,GAAW,kBAAkB,CAAC;IACnD,iDAAmB,GAAW,iBAAiB,CAAC;IAyEvE;QADC,+DAAS,CAAC,6GAAwB,CAAC;kCACV,6GAAwB;4EAAC;IAGnD;QADC,+DAAS,CAAC,+BAA6B,CAAC,qBAAqB,CAAC;kCACtC,wDAAU;2EAAC;IAGpC;QADC,+DAAS,CAAC,+BAA6B,CAAC,iBAAiB,CAAC;kCACrC,wDAAU;wEAAC;IAGjC;QADC,+DAAS,CAAC,+BAA6B,CAAC,eAAe,CAAC;kCACrC,wDAAU;sEAAC;IAG/B;QADC,+DAAS,CAAC,+BAA6B,CAAC,0BAA0B,CAAC;kCACtC,wDAAU;gFAAC;IAGzC;QADC,+DAAS,CAAC,+BAA6B,CAAC,qBAAqB,CAAC;kCACtC,wDAAU;2EAAC;IAGpC;QADC,+DAAS,CAAC,+BAA6B,CAAC,mBAAmB,CAAC;kCACrC,wDAAU;0EAAC;IAjGxB,6BAA6B;QALzC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YAErC,iMAAsD;;SACvD,CAAC;yCAyGmB,kFAAe;YACjB,8EAAa;YACZ,gFAAc;YACd,oGAAc;YACR,4FAAoB;YAC9B,wEAAU;YACM,uGAAmB;YACxB,gFAAc;YACZ,oEAAgB;YACC,4FAAuB;YACnB,qGAA2B;YACxB,2GAA8B;YACzC,0FAAmB;YACrB,sFAAiB;YACd,8GAAoB;YACzB,4EAAc;YACV,+FAAsB;OAxHnD,6BAA6B,CAs/BzC;IAAD,oCAAC;CAAA,CAt/BkD,oFAAiB,GAs/BnE;AAt/ByC;;;;;;;;;;;;AC7E1C,uLAAuL,4DAA4D,yKAAyK,4DAA4D,8GAA8G,sFAAsF,iMAAiM,mCAAmC,2NAA2N,iCAAiC,+cAA+c,iCAAiC,2zBAA2zB,yDAAyD,8XAA8X,wDAAwD,6XAA6X,4DAA4D,gWAAgW,yVAAyV,kEAAkE,uYAAuY,oEAAoE,o2BAAo2B,kEAAkE,g0BAAg0B,+CAA+C,8JAA8J,gDAAgD,wNAAwN,yBAAyB,+1CAA+1C,2CAA2C,iMAAiM,yCAAyC,ogBAAogB,mCAAmC,ihBAAihB,2BAA2B,IAAI,sEAAsE,8BAA8B,+jBAA+jB,+BAA+B,kcAAkc,iCAAiC,qOAAqO,oBAAoB,0JAA0J,mFAAmF,kc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt/V;AAClB;AACnB;AACM;AAGoD;AACd;AACY;AACA;AACC;AACZ;AACI;AACJ;AACE;AACM;AACM;AACZ;AACR;AAGG;AAER;AACoD;AAEjC;AACjB;AAEW;AAenF;IAAqD,mDAAgC;IAsBnF,+EAA+E;IAE/E,yCACE,eAAgC,EAChC,aAA4B,EAC5B,cAA8B,EAC9B,oBAA0C,EAC1C,UAAsB,EACf,gBAAkC,EAClC,cAA8B,EACpB,6BAA4D,EAC5D,uBAAgD,EAChD,mBAAwC,EACxC,aAA4B,EAC5B,iBAAoC;QAZvD,YAcE,kBAAM,wFAAiB,CAAC,KAAK,EAAE,eAAe,EAAE,aAAa,EAAE,cAAc,EAAE,oBAAoB,EAAE,UAAU,CAAC,SAIjH;QAZQ,sBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAc,GAAd,cAAc,CAAgB;QACpB,mCAA6B,GAA7B,6BAA6B,CAA+B;QAC5D,6BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,yBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAa,GAAb,aAAa,CAAe;QAC5B,uBAAiB,GAAjB,iBAAiB,CAAmB;QAjCvC,wBAAkB,GAAW,4EAAY,CAAC,oCAAoC,CAAC;QAqC7F,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,KAAI,CAAC,YAAY,EAAE,CAAC;;IACtB,CAAC;wCA1CU,+BAA+B;IA4CnC,kDAAQ,GAAf;QACE,iBAAM,QAAQ,WAAE,CAAC;QAEjB,IAAI,CAAC,uBAAuB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAEM,0DAAgB,GAAvB;QACE,OAAO,wFAAkB,CAAC,4BAA4B,CAAC;IACzD,CAAC;IAEM,sDAAY,GAAnB;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,mCAAmC,EAAE,CAAC;QAC3C,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEO,8CAAI,GAAZ;QACE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,EAAE,sBAAsB,EAAE,EAAE,EAAE,CAAC;IACvD,CAAC;IAED,6EAA6E;IAEtE,gEAAsB,GAA7B;QAAA,iBA4BC;QA3BC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;YACrC,UAAU,EAAE,IAAI,CAAC,eAAe,CAC9B,IAAI,CAAC,+BAA+B,CAAC,kBAAkB,KAAK,CAAC;gBAC3D,CAAC,CAAC,uCAAuC;gBACzC,CAAC,CAAC,wCAAwC,CAC7C;YACD,MAAM,EAAE;gBACN,IAAM,WAAW,GAAG,KAAI,CAAC,+BAA+B,CAAC,aAAa,CAAC,GAAG,CAAC,UAAC,gBAAgB;oBAC1F,KAAI,CAAC,6BAA6B,CAAC,0BAA0B,CAAC;wBAC5D,EAAE,EAAE,gBAAgB,CAAC,EAAE,IAAI,EAAE;qBAC9B,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,qDAAQ,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;oBAC9B,IAAI,EAAE;wBACJ,KAAI,CAAC,cAAc,CAAC,kBAAkB,CACpC,KAAI,CAAC,eAAe,CAClB,KAAI,CAAC,+BAA+B,CAAC,kBAAkB,KAAK,CAAC;4BAC3D,CAAC,CAAC,iCAAiC;4BACnC,CAAC,CAAC,kCAAkC,CACvC,CACF,CAAC;wBAEF,KAAI,CAAC,+BAA+B,CAAC,mBAAmB,EAAE,CAAC;oBAC7D,CAAC;iBACF,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAEM,qEAA2B,GAAlC;QACE,IAAI,CAAC,aAAa,CAAC,OAAO,CACxB,IAAI,CAAC,+BAA+B,CAAC,aAAa,CAAC,GAAG,CAAC,UAAC,IAAI;YAC1D,IAAM,MAAM,gBAAQ,IAAI,CAAE,CAAC;YAC3B,OAAO,MAAM,CAAC,EAAE,CAAC;YAEjB,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,EACF,iCAA+B,CAAC,mCAAmC,EACnE,IAAI,CAAC,aAAa,CAAC,WAAW,CAC/B,CAAC;IACJ,CAAC;IAEM,4DAAkB,GAAzB,UAA0B,KAAsB;QAC9C,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAgE,CAAC;QACxF,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;gBAChC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;aAChC;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;aACzC;YAED,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;aAAM;YACL,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;IACH,CAAC;IAEM,8DAAoB,GAA3B,UAA4B,QAAgB;QAC1C,IAAI,CAAC,6BAA6B,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IACpE,CAAC;IAEM,iEAAuB,GAA9B;QACE,IAAI,CAAC,6BAA6B,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAEM,+DAAqB,GAA5B;QAAA,iBAIC;QAHC,IAAI,CAAC,+BAA+B,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,gBAAgB;YAC1E,KAAI,CAAC,6BAA6B,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,EAAY,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,6DAAmB,GAA3B;QAAA,iBASC;QARC,qDAAQ,CAAC;YACP,UAAU,EAAE,mEAAS,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC5C,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,6HAAiC,CAAC,mBAAmB,CAAC;gBACxF,CAAC,CAAC,+CAAE,CAAC,IAAI,CAAC,UAAU,CAAC;SACxB,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAClB,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACpC,KAAI,CAAC,+BAA+B,CAAC,wBAAwB,CAAC,aAAa,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;QAChG,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,gDAAM,GAAb;QAAA,iBA8BC;QA7BC,IAAI,CAAC,+BAA+B,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,+BAA+B,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtD,IAAI,CAAC,uBAAuB;aACzB,kCAAkC,CAAC,IAAI,CAAC,cAAc,CAAC;aACvD,IAAI,CACH,+DAAQ,CAAC;YACP,KAAI,CAAC,+BAA+B,CAAC,SAAS,GAAG,KAAK,CAAC;YACvD,iBAAM,MAAM,aAAC;gBACX,iBAAM,cAAc,aAAC,KAAI,CAAC,sBAAsB,CAAC,CAAC;YACpD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH;aACA,SAAS,CAAC,UAAC,iBAAiB;YAC3B,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,IAAI,EAAE;gBAC/C,IAAM,qBAAqB,GAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,EAAE,IAAK,QAAC;oBAChE,EAAE,EAAE,EAAE,CAAC,EAAE;oBACT,QAAQ,EAAE,EAAE,CAAC,QAAQ;oBACrB,OAAO,EAAE,EAAE,CAAC,OAAO;oBACnB,WAAW,EAAE,2EAAgB,CAAC,eAAe,CAAC,KAAI,CAAC,UAAU,EAAE,EAAE,CAAC,WAAW,CAAC;oBAC9E,iBAAiB,EAAE,EAAE,CAAC,iBAAiB;oBACvC,cAAc,EAAE,EAAE,CAAC,cAAc;iBAClC,CAAC,EAP+D,CAO/D,CAAC,CAAC;gBACJ,KAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;gBACjD,KAAI,CAAC,+BAA+B,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;aACrE;YACD,iBAAM,cAAc,aAAC,KAAI,CAAC,sBAAsB,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,6DAAmB,GAA3B;QACE,IAAI,CAAC,cAAc,GAAG,EAAE,sBAAsB,EAAE,EAAE,EAAE,CAAC;IACvD,CAAC;IAEM,iEAAuB,GAA9B;QACE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC;IAClD,CAAC;IAEM,4DAAkB,GAAzB;QACE,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;IAC3C,CAAC;IAEM,6DAAmB,GAA1B,UAA2B,KAAgB;QACzC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5C,CAAC;IAEO,6EAAmC,GAA3C;QACE,IAAI,CAAC,+BAA+B,GAAG,IAAI,0FAAe,CAAC;YACzD,gBAAgB,EAAE,IAAI;YACtB,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,UAAU;oBACjB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;iBAC/C;gBACD;oBACE,KAAK,EAAE,SAAS;oBAChB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;iBAC9C;gBACD;oBACE,KAAK,EAAE,aAAa;oBACpB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;iBAClD;gBACD;oBACE,KAAK,EAAE,mBAAmB;oBAC1B,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC;iBACxD;gBACD;oBACE,KAAK,EAAE,gBAAgB;oBACvB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;iBACrD;aACF;SACF,CAAC,CAAC;IACL,CAAC;;IA/NuB,mEAAmC,GAAW,wBAAwB,CAAC;IAmB/F;QADC,+DAAS,CAAC,wBAAwB,CAAC;kCACL,wDAAU;mFAAC;IApB/B,+BAA+B;QAJ3C,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;YACvC,uMAAwD;SACzD,CAAC;yCA0BmB,kFAAe;YACjB,8EAAa;YACZ,gFAAc;YACR,4FAAoB;YAC9B,wEAAU;YACG,oEAAgB;YAClB,gFAAc;YACW,gGAA6B;YACnC,4FAAuB;YAC3B,yFAAmB;YACzB,6EAAa;YACT,sFAAiB;OApC5C,+BAA+B,CAiO3C;IAAD,sCAAC;CAAA,CAjOoD,2EAAa,GAiOjE;AAjO2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CM;AACP;AAGiD;AACA;AACL;AACC;AACO;AACpB;AAEC;AAI5E;IAAmD,iDAAqB;IACtE,uCACE,IAAgB,EAChB,gBAAkC,EACjB,mBAAwC,EACxC,oBAA0C,EAC1C,UAAsB;QALzC,YAOE,kBAAM,IAAI,EAAE,gBAAgB,CAAC,SAC9B;QALkB,yBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,0BAAoB,GAApB,oBAAoB,CAAsB;QAC1C,gBAAU,GAAV,UAAU,CAAY;;IAGzC,CAAC;IAEM,4DAAoB,GAA3B,UAA4B,QAA4B;QACtD,IAAM,IAAI,GAAsB;YAC9B,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;YAChC,WAAW,EAAE,wFAAkB,CAAC,0BAA0B;YAC1D,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS;YACtF,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,wFAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,wFAAiB,CAAC,MAAM;SACvE,CAAC;QACF,IAAM,QAAQ,GAAG,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC;QAEnD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;IACrE,CAAC;IAEM,kEAA0B,GAAjC,UAAkC,cAAyC;QACzE,OAAO,iBAAM,IAAI,YAAqC,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;IACzG,CAAC;IAzBU,6BAA6B;QADzC,gEAAU,EAAE;yCAGH,+DAAU;YACE,oFAAgB;YACI,8EAAmB;YAClB,2FAAoB;YAC9B,uEAAU;OAN9B,6BAA6B,CA0BzC;IAAD,oCAAC;CAAA,CA1BkD,mFAAqB,GA0BvE;AA1ByC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfD;AACS;AACA;AACA;AACU;AACR;AACJ;AACkB;AAClB;AACN;AACU;AAEqE;AACpB;AACiB;AACM;AAChB;AAChB;AACqB;AAC7B;AAC6B;AACe;AACA;AACE;AAC5B;AACH;AACkB;AACW;AACjD;AACA;AACM;AACN;AACT;AAC4B;AACN;AACT;AACQ;AAE+D;AACT;AACc;AACL;AACN;AACtD;AACM;AACJ;AAEhG;;+EAE+E;AAE/E,IAAM,gBAAgB,GAAG;IACvB,+DAAc;IACd,+DAAc;IACd,+DAAc;IACd,yEAAmB;IACnB,yDAAkB;IAClB,6DAAa;IACb,iEAAe;IACf,6DAAa;CACd,CAAC;AAEF,IAAM,gBAAgB,GAAG;IACvB,mIAA0B;IAC1B,oHAAsB;IACtB,sGAAiB;IACjB,yGAAkB;IAClB,wHAAuB;IACvB,kFAAW;IACX,kFAAW;IACX,mIAA0B;IAC1B,uGAAqB;IACrB,mIAA0B;CAC3B,CAAC;AAEF,IAAM,eAAe,GAAG,CAAC,uDAAU,EAAE,kEAAe,CAAC,CAAC;AAEtD;;+EAE+E;AAE/E,IAAM,UAAU,GAAG;IACjB,iKAAoC;IACpC,8JAAmC;IACnC,uKAAsC;IACtC,uKAAsC;IACtC,4KAAuC;CACxC,CAAC;AAEF,IAAM,kBAAkB,GAAG,CAAC,2GAA6B,EAAE,iHAA+B,CAAC,CAAC;AAE5F;;+EAE+E;AAC/E,IAAM,GAAG,GAAG,CAAC,+EAAmB,EAAE,wFAAuB,EAAE,8FAA0B,CAAC,CAAC;AAEvF,IAAM,QAAQ,GAAG;IACf,4FAAuB;IACvB,qGAA2B;IAC3B,2GAA8B;IAC9B,6GAA6B;IAC7B,+HAA0B;IAC1B,qIAA2B;IAC3B,yHAAwB;IACxB,wGAAmB;IACnB,+GAAoB;CACrB,CAAC;AAeF;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QAblC,8DAAQ,CAAC;YACR,YAAY,WAAM,UAAU,EAAK,kBAAkB,CAAC;YACpD,OAAO;gBACL,+FAAyB;gBACzB,oHAAmC;gBACnC,uFAAqB;gBACrB,4HAA4B,CAAC,QAAQ,CAAC,kBAAkB,CAAC;eACtD,gBAAgB,EAChB,gBAAgB,EAChB,eAAe,CACnB;YACD,SAAS,WAAM,GAAG,EAAK,QAAQ,CAAC;SACjC,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;ACzHnC,wMAAwM,kCAAkC,gKAAgK,oCAAoC,IAAI,qGAAqG,wlBAAwlB,+BAA+B,0YAA0Y,iDAAiD,yKAAyK,mCAAmC,+JAA+J,+BAA+B,oUAAoU,iCAAiC,ySAAyS,+BAA+B,sRAAsR,+BAA+B,2LAA2L,wBAAwB,2IAA2I,4FAA4F,wpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhyG;AACxB;AAIkC;AACC;AAChB;AACQ;AACJ;AACE;AACY;AACpB;AAGG;AAER;AAEwB;AAM3F;IAA8C,4CAAgC;IA6B5E,kCACE,eAAgC,EAChC,aAA4B,EAC5B,cAA8B,EAC9B,oBAA0C,EAC1C,UAAsB,EACf,WAAwB,EACxB,gBAAkC,EACxB,mBAAwC;QAR3D,YAUE,kBAAM,wFAAiB,CAAC,KAAK,EAAE,eAAe,EAAE,aAAa,EAAE,cAAc,EAAE,oBAAoB,EAAE,UAAU,CAAC,SAQjH;QAZQ,iBAAW,GAAX,WAAW,CAAa;QACxB,sBAAgB,GAAhB,gBAAgB,CAAkB;QACxB,yBAAmB,GAAnB,mBAAmB,CAAqB;QAGzD,KAAI,CAAC,SAAS,GAAG,0BAAwB,CAAC;QAC1C,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,KAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,KAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,KAAI,CAAC,+BAA+B,GAAG,IAAI,0DAAY,EAAW,CAAC;;IACrE,CAAC;iCA/CU,wBAAwB;IAInC,sBAAW,mDAAa;aAAxB,UAAyB,wBAA2C;YAClE,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;QAClE,CAAC;;;OAAA;IA2CM,2CAAQ,GAAf;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAEM,mDAAgB,GAAvB;QACE,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAEO,+DAA4B,GAApC;QACE,IAAI,CAAC,wBAAwB,GAAG,IAAI,iGAA0B,CAAC;YAC7D,gBAAgB,EAAE,IAAI;YACtB,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,cAAc;oBACrB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;iBACnD;gBACD;oBACE,KAAK,EAAE,qBAAqB;oBAC5B,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC;iBAC1D;gBACD;oBACE,KAAK,EAAE,cAAc;oBACrB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;iBACnD;gBACD;oBACE,KAAK,EAAE,yBAAyB;oBAChC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC;iBAC9D;gBACD;oBACE,KAAK,EAAE,gBAAgB;oBACvB,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;iBACrD;aACF;YACD,IAAI,EAAE,EAAE;YACR,gBAAgB,EAAE,IAAI;YACtB,2BAA2B,EAAE,CAAC,cAAc,CAAC;YAC7C,qBAAqB,EAAE,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC;YACtE,uBAAuB,EAAE,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC;SACzE,CAAC,CAAC;IACL,CAAC;IAEM,2DAAwB,GAA/B;QACE,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAEM,iDAAc,GAArB,UAAsB,KAAwB,EAAE,YAAwB;QAAxE,iBAiBC;QAhBC,IAAI,KAAK,CAAC,KAAK,EAAE;YACf,IAAM,MAAI,GAAS,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,mEAAS,CAAC,sBAAsB,CAAC,MAAI,EAAE,UAAC,WAAW;gBACjD,IAAI,WAAW,EAAE;oBACf,IAAM,UAAQ,GAAoB;wBAChC,eAAe,EAAE,WAAW;wBAC5B,YAAY,EAAE,MAAI,CAAC,IAAI;wBACvB,uBAAuB,EAAE,IAAI,IAAI,EAAE;qBACpC,CAAC;oBAEF,KAAI,CAAC,cAAc,CAAC,UAAQ,CAAC,CAAC;iBAC/B;YACH,CAAC,CAAC,CAAC;YAEH,YAAY,CAAC,KAAK,EAAE,CAAC;SACtB;IACH,CAAC;IAEM,0CAAO,GAAd;QACE,IAAI,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,KAAK,CAAC,EAAE;YAC1D,IAAI,CAAC,eAAe,gBAAQ,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAE,CAAC;YAC7E,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;YACtC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;SACnC;IACH,CAAC;IAEM,gDAAa,GAApB;QACE,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,QAAQ;YAC3D,mEAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,wDAAqB,GAA5B;QACE,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,EAAE;YACnD,QAAQ,GAAG,KAAK,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,GAAoB;gBACvE,IAAI,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE;oBACxB,QAAQ,GAAG,KAAK,CAAC;iBAClB;YACH,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAEM,oDAAiB,GAAxB;QACE,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,EAAE;YACnD,QAAQ,GAAG,KAAK,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,GAAoB;gBACvE,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE;oBACvB,QAAQ,GAAG,KAAK,CAAC;iBAClB;YACH,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAEM,0CAAO,GAAd;QACE,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,GAAoB;YACvE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,iDAAc,GAAtB,UAAuB,WAA4B;QACjD,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACjF,CAAC;IAEM,+CAAY,GAAnB;QACE,IAAI,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,KAAK,CAAC,EAAE;YAC1D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE;gBACxC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;aAChC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;aACnC;SACF;IACH,CAAC;IAEM,+CAAY,GAAnB;QACE,IAAI,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,KAAK,CAAC,EAAE;YAC1D,IAAI,CAAC,eAAe,gBAAQ,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAE,CAAC;YAC7E,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE;gBACxC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;aAChC;iBAAM;gBACL,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;aACnC;SACF;IACH,CAAC;IAEM,mDAAgB,GAAvB,UAAwB,QAAyB;QAC/C,IAAI,CAAC,wBAAwB,CAAC,WAAW,CACvC,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC,CAAC,EAC9C,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CACnC,CAAC;IACJ,CAAC;IAEM,sDAAmB,GAA1B,UAA2B,WAA4B;QACrD,IAAI,IAAI,CAAC,oBAAoB,KAAK,CAAC,CAAC,EAAE;YACpC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;SACpC;IACH,CAAC;IAEM,kDAAe,GAAtB;QAAA,iBAYC;QAXC,IAAM,iBAAiB,GACrB,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,GAAG,CAAC;YAClD,CAAC,CAAC,gCAAgC;YAClC,CAAC,CAAC,+BAA+B,CAAC;QAEtC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;YACrC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC;YACnD,MAAM,EAAE;gBACN,KAAI,CAAC,wBAAwB,CAAC,mBAAmB,EAAE,CAAC;YACtD,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAEM,4DAAyB,GAAhC;QACE,OAAO,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,EAAE,CAAC;IAC7D,CAAC;IAEO,sDAAmB,GAA3B,UAA4B,GAAoB;QAC9C,oBACK,GAAG,IACN,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IACxC;IACJ,CAAC;IAEM,mDAAgB,GAAvB,UAAwB,QAAyB;QAC/C,OAAO,mEAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;IACrE,CAAC;;IA5OD;QADC,2DAAK,EAAE;;8DACyB;IAEjC;QADC,2DAAK,EAAE;;;iEAGP;IAED;QADC,2DAAK,EAAE;;6EACgC;IAExC;QADC,2DAAK,EAAE;;oEACuB;IAE/B;QADC,4DAAM,EAAE;kCAC+B,0DAAY;qFAAU;IAZnD,wBAAwB;QAJpC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,gLAAgD;SACjD,CAAC;yCA+BmB,iFAAe;YACjB,6EAAa;YACZ,+EAAc;YACR,2FAAoB;YAC9B,uEAAU;YACF,yEAAW;YACN,oEAAgB;YACH,yFAAmB;OArChD,wBAAwB,CA+OpC;IAAD,+BAAC;CAAA,CA/O6C,2EAAa,GA+O1D;AA/OoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBI;AACS;AACA;AACI;AACY;AAEgF;AACW;AAC9D;AACqB;AAC7B;AACL;AACA;AAEV;AAExE;;+EAE+E;AAE/E,IAAM,gBAAgB,GAAG,CAAC,+DAAc,EAAE,+DAAc,EAAE,mEAAgB,EAAE,yDAAkB,CAAC,CAAC;AAEhG,IAAM,gBAAgB,GAAG,CAAC,kFAAW,EAAE,kFAAW,EAAE,iJAAuB,EAAE,4JAA0B,CAAC,CAAC;AAEzG;;+EAE+E;AAE/E,IAAM,UAAU,GAAG,CAAC,qFAAwB,CAAC,CAAC;AAE9C;;+EAE+E;AAE/E,IAAM,QAAQ,GAAG,EAAE,CAAC;AAcpB;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QAZjC,8DAAQ,CAAC;YACR,YAAY,WAAM,UAAU,CAAC;YAC7B,OAAO,WAAM,UAAU,CAAC;YACxB,OAAO;gBACL,8FAAyB;gBACzB,mHAAmC;gBACnC,sFAAqB;eAClB,gBAAgB,EAChB,gBAAgB,CACpB;YACD,SAAS,WAAM,QAAQ,CAAC;SACzB,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;AChDlC;AAAA;AAAA;IAAA;IA6BA,CAAC;IA5BwB,wDAAsB,GAAW,2BAA2B,CAAC;IAE7D,2DAAyB,GAAW,8BAA8B,CAAC;IAEnE,yDAAuB,GAAW,4BAA4B,CAAC;IAE/D,qDAAmB,GAAW,yBAAyB,CAAC;IAExD,mDAAiB,GAAW,uBAAuB,CAAC;IAEpD,0DAAwB,GAAW,6BAA6B,CAAC;IAExF,+CAA+C;IACxB,kDAAgB,GAAW,4BAA4B,CAAC;IAExD,kEAAgC,GAAW,0CAA0C,CAAC;IAEtF,sEAAoC,GAAW,6CAA6C,CAAC;IAE7F,gDAAc,GAAW,OAAO,CAAC;IAEjC,iDAAe,GAAW,OAAO,CAAC;IAElC,kDAAgB,GAAW,OAAO,CAAC;IAEnC,kDAAgB,GAAW,QAAQ,CAAC;IAEpC,6CAAW,GAAW,CAAC,CAAC;IACjD,wCAAC;CAAA;AA7B6C;;;;;;;;;;;;;ACA9C;AAAA;AAAA;IAAA;IAMA,CAAC;IALwB,qDAAgB,GAAW,OAAO,CAAC;IAEnC,2CAAM,GAAW,OAAO,CAAC;IAEzB,6CAAQ,GAAW,OAAO,CAAC;IACpD,2CAAC;CAAA;AANgD;;;;;;;;;;;;;ACAjD;AAAA;AAAA;IAAA;IAIA,CAAC;IAHwB,uCAAI,GAAW,OAAO,CAAC;IAEvB,2CAAQ,GAAW,OAAO,CAAC;IACpD,yCAAC;CAAA;AAJ8C;;;;;;;;;;;;;ACA/C;AAAA;AAAA;IAAA;IAMA,CAAC;IALwB,uCAAO,GAAW,OAAO,CAAC;IAE1B,uCAAO,GAAW,OAAO,CAAC;IAE1B,sCAAM,GAAW,OAAO,CAAC;IAClD,sCAAC;CAAA;AAN2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAM;AACP;AAGmC;AACC;AACG;AAIlF;IAAoD,kDAAqB;IACvE,wCACE,IAAgB,EAChB,gBAAkC,EACjB,iCAA6D;QAHhF,YAKE,kBAAM,IAAI,EAAE,gBAAgB,CAAC,SAC9B;QAHkB,uCAAiC,GAAjC,iCAAiC,CAA4B;;IAGhF,CAAC;IAEM,6DAAoB,GAA3B,UAA4B,MAAc;QACxC,OAAO,iBAAM,IAAI,YACf,IAAI,CAAC,iCAAiC,CAAC,mBAAmB,EAC1D,MAAM,CACP,CAAC;IACJ,CAAC;IAEM,uDAAc,GAArB,UAAsB,8BAA8D;QAClF,IACE,8BAA8B;YAC9B,8BAA8B,CAAC,eAAe;YAC9C,8BAA8B,CAAC,MAAM,EACrC;YACA,IAAM,qBAAqB,GAAG,UAAU,CAAC,8BAA8B,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC;YACpG,IAAM,YAAY,GAAG,UAAU,CAAC,8BAA8B,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;YAClF,IAAM,UAAU,GAAG,GAAG,CAAC;YACvB,IAAM,SAAS,GAAG,CAAC,CAAC;YACpB,IAAM,MAAM,GAAG,CAAC,qBAAqB,GAAG,CAAC,qBAAqB,GAAG,YAAY,CAAC,GAAG,UAAU,CAAC,CAAC,QAAQ,EAAE,CAAC;YACxG,IAAM,QAAQ,GACZ,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAClH,IAAI,CAAC,CAAC,QAAQ,EAAE;gBACd,8BAA8B,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;aACrG;iBAAM;gBACL,8BAA8B,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;aAC9D;SACF;IACH,CAAC;IAnCU,8BAA8B;QAD1C,gEAAU,EAAE;yCAGH,+DAAU;YACE,oFAAgB;YACkB,6FAA0B;OAJrE,8BAA8B,CAoC1C;IAAD,qCAAC;CAAA,CApCmD,mFAAqB,GAoCxE;AApC0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVO;AACP;AAImC;AACC;AACH;AAG5E;IAAiD,+CAAqB;IACpE,qCACE,IAAgB,EAChB,gBAAkC,EACjB,uBAAgD;QAHnE,YAKE,kBAAM,IAAI,EAAE,gBAAgB,CAAC,SAC9B;QAHkB,6BAAuB,GAAvB,uBAAuB,CAAyB;;IAGnE,CAAC;IAED;;+EAE2E;IAEpE,2DAAqB,GAA5B,UAA6B,uBAA+B;QAC1D,OAAO,iBAAM,IAAI,YAAqB,IAAI,CAAC,uBAAuB,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,CAAC;IACrH,CAAC;IAfU,2BAA2B;QADvC,gEAAU,EAAE;yCAGH,+DAAU;YACE,oFAAgB;YACQ,uFAAuB;OAJxD,2BAA2B,CAgBvC;IAAD,kCAAC;CAAA,CAhBgD,mFAAqB,GAgBrE;AAhBuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVU;AACP;AAGmC;AACC;AAGZ;AAQnE;IAA6C,2CAAqB;IAChE,iCACE,IAAgB,EAChB,gBAAkC,EACjB,mBAAwC;QAH3D,YAKE,kBAAM,IAAI,EAAE,gBAAgB,CAAC,SAC9B;QAHkB,yBAAmB,GAAnB,mBAAmB,CAAqB;;IAG3D,CAAC;IAED;;+EAE2E;IAEpE,0DAAwB,GAA/B,UACE,sBAAiD;QAEjD,OAAO,iBAAM,IAAI,YAAkC,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,sBAAsB,CAAC,EAAE,CAAC,CAAC;IAClH,CAAC;IAEM,0DAAwB,GAA/B,UACE,gBAA+C;QAE/C,OAAO,iBAAM,IAAI,YACf,IAAI,CAAC,mBAAmB,CAAC,WAAW,EACpC,gBAAgB,CACjB,CAAC;IACJ,CAAC;IAEM,oEAAkC,GAAzC,UACE,gBAA0D;QAE1D,OAAO,iBAAM,IAAI,YACf,IAAI,CAAC,mBAAmB,CAAC,cAAc,EACvC,gBAAgB,CACjB,CAAC;IACJ,CAAC;IAEM,qEAAmC,GAA1C,UACE,sBAAiD;QAEjD,OAAO,iBAAM,IAAI,YACf,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,EAC5C,sBAAsB,CAAC,EAAE,CAC1B,CAAC;IACJ,CAAC;IAEM,gEAA8B,GAArC,UACE,kBAA6C;QAE7C,OAAO,iBAAM,IAAI,YACf,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAC1C,kBAAkB,CAAC,EAAE,CACtB,CAAC;IACJ,CAAC;IAEM,uEAAqC,GAA5C,UACE,kBAA6C;QAE7C,OAAO,iBAAM,IAAI,YAA4B,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC;IACrH,CAAC;IA3DU,uBAAuB;QADnC,gEAAU,EAAE;yCAGH,+DAAU;YACE,oFAAgB;YACI,8EAAmB;OAJhD,uBAAuB,CA4DnC;IAAD,8BAAC;CAAA,CA5D4C,mFAAqB,GA4DjE;AA5DmC;;;;;;;;;;;;;AChBpC;AAAA;AAAA,IAAY,UAIX;AAJD,WAAY,UAAU;IACpB,uBAAS;IACT,0BAAY;IACZ,0BAAY;AACd,CAAC,EAJW,UAAU,KAAV,UAAU,QAIrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF0C;AAEO;AAClD;;GAEG;AACH;IAOE,2BACE,QAAqC,EACrC,cAAgD,EAChD,WAAkB;QAAlB,gDAAkB;QAElB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,sBAAW,mCAAI;aAAf;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAgB,IAAsB;YACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACzB,CAAC;;;OALA;IAOO,mCAAO,GAAf;QACE,8CAA8C;QAC9C,IAAI,CAAC,KAAK,YAAO,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAEM,wCAAY,GAAnB,UAAoB,SAAY,EAAE,UAA2B;QAC3D,IAAI,SAAS,EAAE;YACb,IAAM,SAAS,GAAmB,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,uDAAU,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1G,IAAI,UAAU,EAAE;gBACd,uBAAuB;gBACvB,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/D,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;oBACxB,UAAU,CAAC,QAAQ,GAAG,EAAE,CAAC;iBAC1B;gBACD,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACrC;iBAAM;gBACL,0BAA0B;gBAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC5B;YACD,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;IAEM,yCAAa,GAApB,UAAqB,IAAoB;QACvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACnC,CAAC;IAEM,sCAAU,GAAjB,UAAkB,IAAO,EAAE,IAAqB;QAC9C,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,yCAAyC;YACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,uDAAU,CAAC,MAAM,CAAC;SAChD;IACH,CAAC;IAEM,sCAAU,GAAjB,UAAkB,IAAqB;QACrC,IAAI,IAAI,EAAE;YACR,gEAAgE;YAChE,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;YAC1B,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACvC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;aACjC;YAED,IAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;gBACpB,0BAA0B;gBAC1B,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBAC9B,uBAAuB;gBACvB,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,yDAAyD;gBACzD,IAAI,IAAI,CAAC,MAAM,KAAK,uDAAU,CAAC,GAAG,EAAE;oBAClC,IAAI,CAAC,MAAM,GAAG,uDAAU,CAAC,MAAM,CAAC;oBAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC9B;aACF;SACF;IACH,CAAC;IAEM,gDAAoB,GAA3B;QACE,IAAM,oBAAoB,GAA4B;YACpD,cAAc,EAAE,EAAE;YAClB,eAAe,EAAE,EAAE;YACnB,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,IAAI,EAAT,CAAS,CAAC;SAC5D,CAAC;QACF,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;QAEnE,OAAO,oBAAoB,CAAC;IAC9B,CAAC;IACD;;;OAGG;IACI,gDAAoB,GAA3B,UAA+B,WAA2B;QACxD,IAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACtD,IAAM,oBAAoB,GAA4B;YACpD,cAAc,EAAE,8DAAa,CAAC,WAAW,CAAC,iBAAiB,CAAC,cAAc,EAAE,WAAW,CAAC;YACxF,eAAe,EAAE,iBAAiB,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC;YACnE,eAAe,EAAE,iBAAiB,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC;SACpE,CAAC;QAEF,OAAO,oBAAoB,CAAC;IAC9B,CAAC;IAEO,uDAA2B,GAAnC,UACE,KAAmC,EACnC,oBAA6C;QAF/C,iBAqBC;QAjBC,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI;gBACjB,QAAQ,IAAI,CAAC,MAAM,EAAE;oBACnB,KAAK,uDAAU,CAAC,GAAG;wBACjB,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC/C,4EAA4E;wBAC5E,MAAM;oBACR,KAAK,uDAAU,CAAC,MAAM;wBACpB,oBAAoB,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACrD,KAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;wBACtE,MAAM;oBACR;wBACE,KAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAAC;wBACtE,MAAM;iBACT;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACH,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC3ID;AAAA;AAAA;IAAA;IA4BA,CAAC;IA3BC;;;OAGG;IACW,yBAAW,GAAzB,UAAgC,QAAgC,EAAE,WAA2B;QAC3F,OAAO,QAAQ;YACb,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,QAAC;gBACtB,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC5B,QAAQ,EAAE,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC;aAChE,CAAC,EAHqB,CAGrB,CAAC;YACL,CAAC,CAAC,EAAE,CAAC;IACT,CAAC;IAED;;;OAGG;IACW,yBAAW,GAAzB,UAA0B,QAAgC,EAAE,QAAe,EAAE,WAAkB;QAAnC,0CAAe;QAAE,gDAAkB;QAC7F,IAAI,QAAQ,EAAE;YACZ,QAAQ,CAAC,OAAO,CAAC,UAAC,IAAI;gBACpB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,IAAI,WAAW,EAAE;oBACf,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;iBACjE;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;AC9BD,2HAA2H,+CAA+C,sHAAsH,qDAAqD,gRAAgR,qNAAqN,oDAAoD,sqBAAsqB,oDAAoD,0SAA0S,gCAAgC,6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz1D;AAEgB;AACA;AACT;AACM;AACN;AAOhE;IAA8C,yCAAe;IAmB3D,+BACkB,cAA8B,EAC7B,iBAAoC,EACpC,cAA8B;QAHjD,YAKE,kBAAM,iFAAiB,CAAC,KAAK,EAAE,uBAAuB,CAAC,SACxD;QALiB,oBAAc,GAAd,cAAc,CAAgB;QAC7B,uBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAc,GAAd,cAAc,CAAgB;;IAGjD,CAAC;IAEM,wCAAQ,GAAf;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEM,qCAAK,GAAZ;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAEO,8CAAc,GAAtB;QAAA,iBAkBC;QAjBC,IAAM,WAAW,GAAG,aAAa,CAAC;QAClC,IAAI,CAAC,iBAAiB;aACnB,mBAAmB,CAClB,IAAI,CAAC,uBAAuB,EAC5B,IAAI,CAAC,8BAA8B,EACnC,IAAI,CAAC,oCAAoC,EACzC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EACtB,IAAI,CAAC,YAAY,CAClB;aACA,SAAS,CACR,UAAC,MAAM;YACL,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QAC3B,CAAC,EACD;YACE,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,KAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,CAAC,CAAC;QACtF,CAAC,CACF,CAAC;IACN,CAAC;IApDQ;QAAR,2DAAK,EAAE;;uDAAgB;IAEf;QAAR,2DAAK,EAAE;;yDAAuB;IAEJ;QAA1B,2DAAK,CAAC,kBAAkB,CAAC;;mEAAkC;IAE1B;QAAjC,2DAAK,CAAC,yBAAyB,CAAC;;0EAAkD;IAE1C;QAAxC,2DAAK,CAAC,gCAAgC,CAAC;;iFAAyD;IAElD;QAA9C,2DAAK,CAAC,sCAAsC,CAAC;;uFAA+D;IAEtF;QAAtB,2DAAK,CAAC,cAAc,CAAC;;+DAAwC;IAbnD,qBAAqB;QAJjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,6IAA6C;SAC9C,CAAC;yCAqBkC,wEAAc;YACV,8EAAiB;YACpB,wEAAc;OAtBtC,qBAAqB,CAsDjC;IAAD,4BAAC;CAAA,CAtD6C,8EAAe,GAsD5D;AAtDiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbO;AACS;AACA;AAE6B;AACqB;AAC7B;AACnB;AAEc;AAElE;;+EAE+E;AAE/E,IAAM,gBAAgB,GAAG,CAAC,+DAAc,EAAE,+DAAc,CAAC,CAAC;AAE1D,IAAM,gBAAgB,GAAG,CAAC,+DAAW,CAAC,CAAC;AAEvC;;+EAE+E;AAE/E,IAAM,UAAU,GAAG,CAAC,8EAAqB,CAAC,CAAC;AAa3C;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAX9B,8DAAQ,CAAC;YACR,YAAY,WAAM,UAAU,CAAC;YAC7B,OAAO,WAAM,UAAU,CAAC;YACxB,OAAO;gBACL,uFAAyB;gBACzB,4GAAmC;gBACnC,+EAAqB;eAClB,gBAAgB,EAChB,gBAAgB,CACpB;SACF,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;;ACpC/B;AAAA;AAAA;IAAA;IAuBA,CAAC;IAtBiB,wBAAa,GAA3B,UAA4B,GAAW,EAAE,KAAa;QAAb,qCAAa;QACtD,OAAO,UAAC,CAAC,EAAE,CAAC;YACR,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAClD,0CAA0C;gBAC1C,OAAO,CAAC,CAAC;aACZ;YAED,IAAM,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1E,IAAM,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAE1E,IAAI,UAAU,GAAG,CAAC,CAAC;YACnB,IAAI,IAAI,GAAG,IAAI,EAAE;gBACb,UAAU,GAAG,CAAC,CAAC;aAClB;iBAAM,IAAI,IAAI,GAAG,IAAI,EAAE;gBACpB,UAAU,GAAG,CAAC,CAAC,CAAC;aACnB;YAED,OAAO,CACH,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CACtD,CAAC;QACN,CAAC,CAAC;IACF,CAAC;IACL,iBAAC;AAAD,CAAC","file":"modules-purchase-contract-components-purchase-contract-purchase-contract-module.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar common_1 = require(\"@angular/common\");\nvar InputTextarea = /** @class */ (function () {\n    function InputTextarea(el, ngModel) {\n        this.el = el;\n        this.ngModel = ngModel;\n        this.onResize = new core_1.EventEmitter();\n    }\n    InputTextarea.prototype.ngDoCheck = function () {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize();\n        }\n    };\n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    InputTextarea.prototype.onInput = function (e) {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.updateFilledState = function () {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    };\n    InputTextarea.prototype.onFocus = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.onBlur = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.resize = function (event) {\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n        this.onResize.emit(event || {});\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], InputTextarea.prototype, \"autoResize\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], InputTextarea.prototype, \"onResize\", void 0);\n    __decorate([\n        core_1.HostListener('input', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onInput\", null);\n    __decorate([\n        core_1.HostListener('focus', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onFocus\", null);\n    __decorate([\n        core_1.HostListener('blur', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onBlur\", null);\n    InputTextarea = __decorate([\n        core_1.Directive({\n            selector: '[pInputTextarea]',\n            host: {\n                '[class.ui-inputtext]': 'true',\n                '[class.ui-corner-all]': 'true',\n                '[class.ui-inputtextarea-resizable]': 'autoResize',\n                '[class.ui-state-default]': 'true',\n                '[class.ui-widget]': 'true',\n                '[class.ui-state-filled]': 'filled'\n            }\n        }),\n        __param(1, core_1.Optional()),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, forms_1.NgModel])\n    ], InputTextarea);\n    return InputTextarea;\n}());\nexports.InputTextarea = InputTextarea;\nvar InputTextareaModule = /** @class */ (function () {\n    function InputTextareaModule() {\n    }\n    InputTextareaModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [InputTextarea],\n            declarations: [InputTextarea]\n        })\n    ], InputTextareaModule);\n    return InputTextareaModule;\n}());\nexports.InputTextareaModule = InputTextareaModule;\n//# sourceMappingURL=inputtextarea.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar forms_1 = require(\"@angular/forms\");\nexports.KEYFILTER_VALIDATOR = {\n    provide: forms_1.NG_VALIDATORS,\n    useExisting: core_1.forwardRef(function () { return KeyFilter; }),\n    multi: true\n};\nvar KeyFilter = /** @class */ (function () {\n    function KeyFilter(el) {\n        this.el = el;\n    }\n    KeyFilter_1 = KeyFilter;\n    Object.defineProperty(KeyFilter.prototype, \"pattern\", {\n        get: function () {\n            return this._pattern;\n        },\n        set: function (_pattern) {\n            this._pattern = _pattern;\n            this.regex = KeyFilter_1.DEFAULT_MASKS[this._pattern] || this._pattern;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    KeyFilter.prototype.isNavKeyPress = function (e) {\n        var k = e.keyCode;\n        k = domhandler_1.DomHandler.getBrowser().safari ? (KeyFilter_1.SAFARI_KEYS[k] || k) : k;\n        return (k >= 33 && k <= 40) || k == KeyFilter_1.KEYS.RETURN || k == KeyFilter_1.KEYS.TAB || k == KeyFilter_1.KEYS.ESC;\n    };\n    ;\n    KeyFilter.prototype.isSpecialKey = function (e) {\n        var k = e.keyCode;\n        var c = e.charCode;\n        return k == 9 || k == 13 || k == 27 || k == 16 || k == 17 || (k >= 18 && k <= 20) ||\n            (domhandler_1.DomHandler.getBrowser().opera && !e.shiftKey && (k == 8 || (k >= 33 && k <= 35) || (k >= 36 && k <= 39) || (k >= 44 && k <= 45)));\n    };\n    KeyFilter.prototype.getKey = function (e) {\n        var k = e.keyCode || e.charCode;\n        return domhandler_1.DomHandler.getBrowser().safari ? (KeyFilter_1.SAFARI_KEYS[k] || k) : k;\n    };\n    KeyFilter.prototype.getCharCode = function (e) {\n        return e.charCode || e.keyCode || e.which;\n    };\n    ;\n    KeyFilter.prototype.onKeyPress = function (e) {\n        if (this.pValidateOnly) {\n            return;\n        }\n        var browser = domhandler_1.DomHandler.getBrowser();\n        if (e.ctrlKey || e.altKey) {\n            return;\n        }\n        var k = this.getKey(e);\n        if (k == 13) {\n            return;\n        }\n        if (browser.mozilla && (this.isNavKeyPress(e) || k == KeyFilter_1.KEYS.BACKSPACE || (k == KeyFilter_1.KEYS.DELETE && e.charCode == 0))) {\n            return;\n        }\n        var c = this.getCharCode(e);\n        var cc = String.fromCharCode(c);\n        var ok = true;\n        if (browser.mozilla && (this.isSpecialKey(e) || !cc)) {\n            return;\n        }\n        ok = this.regex.test(cc);\n        if (!ok) {\n            e.preventDefault();\n        }\n    };\n    KeyFilter.prototype.onPaste = function (e) {\n        var clipboardData = e.clipboardData || window.clipboardData.getData('text');\n        if (clipboardData) {\n            var pastedText = clipboardData;\n            if (!this.regex.test(pastedText)) {\n                e.preventDefault();\n            }\n        }\n    };\n    KeyFilter.prototype.validate = function (c) {\n        if (this.pValidateOnly) {\n            var value = this.el.nativeElement.value;\n            if (value && !this.regex.test(value)) {\n                return {\n                    validatePattern: false\n                };\n            }\n        }\n    };\n    var KeyFilter_1;\n    KeyFilter.DEFAULT_MASKS = {\n        pint: /[\\d]/,\n        'int': /[\\d\\-]/,\n        pnum: /[\\d\\.]/,\n        money: /[\\d\\.\\s,]/,\n        num: /[\\d\\-\\.]/,\n        hex: /[0-9a-f]/i,\n        email: /[a-z0-9_\\.\\-@]/i,\n        alpha: /[a-z_]/i,\n        alphanum: /[a-z0-9_]/i\n    };\n    KeyFilter.KEYS = {\n        TAB: 9,\n        RETURN: 13,\n        ESC: 27,\n        BACKSPACE: 8,\n        DELETE: 46\n    };\n    KeyFilter.SAFARI_KEYS = {\n        63234: 37,\n        63235: 39,\n        63232: 38,\n        63233: 40,\n        63276: 33,\n        63277: 34,\n        63272: 46,\n        63273: 36,\n        63275: 35 // end\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], KeyFilter.prototype, \"pValidateOnly\", void 0);\n    __decorate([\n        core_1.Input('pKeyFilter'),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], KeyFilter.prototype, \"pattern\", null);\n    __decorate([\n        core_1.HostListener('keypress', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [KeyboardEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], KeyFilter.prototype, \"onKeyPress\", null);\n    __decorate([\n        core_1.HostListener('paste', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], KeyFilter.prototype, \"onPaste\", null);\n    KeyFilter = KeyFilter_1 = __decorate([\n        core_1.Directive({\n            selector: '[pKeyFilter]',\n            providers: [exports.KEYFILTER_VALIDATOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\n    ], KeyFilter);\n    return KeyFilter;\n}());\nexports.KeyFilter = KeyFilter;\nvar KeyFilterModule = /** @class */ (function () {\n    function KeyFilterModule() {\n    }\n    KeyFilterModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [KeyFilter],\n            declarations: [KeyFilter]\n        })\n    ], KeyFilterModule);\n    return KeyFilterModule;\n}());\nexports.KeyFilterModule = KeyFilterModule;\n//# sourceMappingURL=keyfilter.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar UIMessage = /** @class */ (function () {\n    function UIMessage() {\n    }\n    Object.defineProperty(UIMessage.prototype, \"icon\", {\n        get: function () {\n            var icon = null;\n            if (this.severity) {\n                switch (this.severity) {\n                    case 'success':\n                        icon = 'pi pi-check';\n                        break;\n                    case 'info':\n                        icon = 'pi pi-info-circle';\n                        break;\n                    case 'error':\n                        icon = 'pi pi-times';\n                        break;\n                    case 'warn':\n                        icon = 'pi pi-exclamation-triangle';\n                        break;\n                    default:\n                        icon = 'pi pi-info-circle';\n                        break;\n                }\n            }\n            return icon;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], UIMessage.prototype, \"severity\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], UIMessage.prototype, \"text\", void 0);\n    UIMessage = __decorate([\n        core_1.Component({\n            selector: 'p-message',\n            template: \"\\n        <div aria-live=\\\"polite\\\" class=\\\"ui-message ui-widget ui-corner-all\\\" *ngIf=\\\"severity\\\"\\n        [ngClass]=\\\"{'ui-message-info': (severity === 'info'),\\n                'ui-message-warn': (severity === 'warn'),\\n                'ui-message-error': (severity === 'error'),\\n                'ui-message-success': (severity === 'success')}\\\">\\n            <span class=\\\"ui-message-icon\\\" [ngClass]=\\\"icon\\\"></span>\\n            <span class=\\\"ui-message-text\\\" [innerHTML]=\\\"text\\\"></span>\\n        </div>\\n    \"\n        })\n    ], UIMessage);\n    return UIMessage;\n}());\nexports.UIMessage = UIMessage;\nvar MessageModule = /** @class */ (function () {\n    function MessageModule() {\n    }\n    MessageModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [UIMessage],\n            declarations: [UIMessage]\n        })\n    ], MessageModule);\n    return MessageModule;\n}());\nexports.MessageModule = MessageModule;\n//# sourceMappingURL=message.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputtextarea/inputtextarea\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/treetable/treetable\"));","import { ConnectedPosition, Overlay, OverlayConfig, PositionStrategy } from '@angular/cdk/overlay';\r\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\r\nimport { Injectable, Injector, Type } from '@angular/core';\r\n\r\nimport { OverlayRef } from './overlay-ref';\r\nimport { OverlayComponent } from './overlay.component';\r\n\r\nexport interface OverlayParams {\r\n  content: Type<unknown>;\r\n  data?: unknown;\r\n  hasBackdrop?: boolean;\r\n  hasVisibleBackdrop?: boolean;\r\n  height?: number | string;\r\n  width?: number | string;\r\n}\r\n\r\nexport interface OverlayWithGlobalPositionParams extends OverlayParams {\r\n  positions: { bottom?: string; left?: string; right?: string; top?: string };\r\n}\r\n\r\nexport interface OverlayWithRelativePositionParams extends OverlayParams {\r\n  origin: HTMLElement;\r\n  positions?: ConnectedPosition[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OverlayService {\r\n  public constructor(private readonly _injector: Injector, private readonly _overlay: Overlay) {}\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public openWithPositionAbsolute<T>(params: OverlayWithGlobalPositionParams): OverlayRef<T> {\r\n    return this.open(params, this.getConfig(params, this.getPositionAbsolute(params)));\r\n  }\r\n\r\n  public openWithPositionCenter<T>(params: OverlayParams): OverlayRef<T> {\r\n    return this.open(\r\n      params,\r\n      this.getConfig(\r\n        { ...params, hasVisibleBackdrop: params.hasVisibleBackdrop !== undefined ? params.hasVisibleBackdrop : true },\r\n        this.getPositionCenter()\r\n      )\r\n    );\r\n  }\r\n\r\n  public openWithPositionRelative<T>(params: OverlayWithRelativePositionParams): OverlayRef<T> {\r\n    return this.open(params, this.getConfig(params, this.getPositionRelative(params)));\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  private createInjector<T>(overlayRef: OverlayRef<T>, injector: Injector): PortalInjector {\r\n    const tokens = new WeakMap([[OverlayRef, overlayRef]]);\r\n\r\n    return new PortalInjector(injector, tokens);\r\n  }\r\n\r\n  private getConfig(params: OverlayParams, positionStrategy: PositionStrategy): OverlayConfig {\r\n    const hasBackdrop = params.hasBackdrop !== undefined ? params.hasBackdrop : true;\r\n\r\n    return new OverlayConfig({\r\n      hasBackdrop,\r\n      positionStrategy,\r\n      backdropClass: hasBackdrop && params.hasVisibleBackdrop ? 'cdk-overlay-dark-backdrop' : '',\r\n      height: params.height,\r\n      scrollStrategy: this._overlay.scrollStrategies.reposition(),\r\n      width: params.width\r\n    });\r\n  }\r\n\r\n  private getPositionAbsolute(params: OverlayWithGlobalPositionParams): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .bottom(params.positions.bottom)\r\n      .left(params.positions.left)\r\n      .right(params.positions.right)\r\n      .top(params.positions.top);\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private getPositionCenter(): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .centerHorizontally()\r\n      .centerVertically();\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private getPositionRelative(params: OverlayWithRelativePositionParams): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .flexibleConnectedTo(params.origin)\r\n      .withPositions(params.positions || [])\r\n      .withFlexibleDimensions(false)\r\n      .withPush(false);\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private open<T>(params: OverlayParams, overlayConfig: OverlayConfig): OverlayRef<T> {\r\n    const cdkOverlayRef = this._overlay.create(overlayConfig);\r\n    const overlayRef = new OverlayRef<T>(cdkOverlayRef, params.content, params.data);\r\n\r\n    const injector = this.createInjector(overlayRef, this._injector);\r\n    cdkOverlayRef.attach(new ComponentPortal(OverlayComponent, undefined, injector));\r\n\r\n    return overlayRef;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AbstractApi } from '../../../shared/api/abstract.api';\r\n\r\n@Injectable()\r\nexport class PurchaseContractElementApi extends AbstractApi {\r\n  private static readonly baseUrl: string = 'purchasecontract/bidt_purchase_contract_element';\r\n\r\n  public readonly getElementsByItemId: string = super.appendToBaseUrl('/find_elements_by_item_id');\r\n\r\n  public constructor() {\r\n    super(PurchaseContractElementApi.baseUrl);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AbstractApi } from '../../../shared/api/abstract.api';\r\n\r\n@Injectable()\r\nexport class PurchaseContractItemApi extends AbstractApi {\r\n  private static readonly baseUrl: string = 'purchasecontract/bidt_purchase_contract_item';\r\n\r\n  public readonly getContractSliceItems: string = super.appendToBaseUrl('/get_contract_slice_items');\r\n\r\n  public constructor() {\r\n    super(PurchaseContractItemApi.baseUrl);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { AbstractApi } from '../../../shared/api/abstract.api';\r\n\r\n@Injectable()\r\nexport class PurchaseContractApi extends AbstractApi {\r\n  private static readonly baseUrl: string = 'purchasecontract/bidt_purchase_contract';\r\n\r\n  // public readonly findAll: string = super.appendToBaseUrl('/find_all');\r\n\r\n  public readonly findByCriteria: string = super.appendToBaseUrl('/find_by_criteria');\r\n\r\n  public readonly delete: string = super.appendToBaseUrl('/delete');\r\n\r\n  public readonly getById: string = super.appendToBaseUrl('/get_by_id');\r\n\r\n  public readonly addOrUpdate: string = super.appendToBaseUrl('/add_or_update');\r\n\r\n  public readonly getContractSlices: string = super.appendToBaseUrl('/get_contract_slices');\r\n\r\n  public readonly getContractPartners: string = super.appendToBaseUrl('/get_contract_partners');\r\n\r\n  public readonly getContractDocuments: string = super.appendToBaseUrl('/get_documents');\r\n\r\n  public constructor() {\r\n    super(PurchaseContractApi.baseUrl);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"column\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n              <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pnCode\\\" | translate }}</label>\\r\\n\\r\\n              <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: !isCreateOpenMode }\\\">\\r\\n                <div class=\\\"form-control-data\\\" (click)=\\\"openMaterialDialog()\\\">\\r\\n                  {{ bidtPurchaseContractElementDTO.birePnPnCode }}\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"bidtPurchaseContractElementDTO.birePnPnCode && !isReadOpenMode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                  <i\\r\\n                    class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    (click)=\\\"bidtPurchaseContractElementDTO.birePnPnCode = undefined\\\"\\r\\n                  ></i>\\r\\n                </div>\\r\\n                <div\\r\\n                  *ngIf=\\\"bidtPurchaseContractElementDTO.birePnPnCode === undefined && !isReadOpenMode\\\"\\r\\n                  class=\\\"btn-search-wrapper\\\"\\r\\n                >\\r\\n                  <i\\r\\n                    class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    (click)=\\\"openMaterialDialog()\\\"\\r\\n                  ></i>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pceUnit\\\" | translate }}</label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <input\\r\\n                  maxlength=\\\"37\\\"\\r\\n                  class=\\\"aw-input\\\"\\r\\n                  [(ngModel)]=\\\"bidtPurchaseContractElementDTO.pceUnit\\\"\\r\\n                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pceQuantity\\\" | translate }}</label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  pKeyFilter=\\\"int\\\"\\r\\n                  maxlength=\\\"37\\\"\\r\\n                  class=\\\"aw-input\\\"\\r\\n                  [(ngModel)]=\\\"bidtPurchaseContractElementDTO.pceQuantity\\\"\\r\\n                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"form-label\\\"\\r\\n                >{{ getComponentName() + \\\".pcePriceExclTax\\\" | translate }} ({{\\r\\n                  bidtPurchaseContractElementDTO.pceCurrency\\r\\n                }})</label\\r\\n              >\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <input\\r\\n                  #pciePriceExclTax=\\\"ngModel\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  [pKeyFilter]=\\\"inputValidationService.validatorOfMoney()\\\"\\r\\n                  [pValidateOnly]=\\\"true\\\"\\r\\n                  maxlength=\\\"37\\\"\\r\\n                  class=\\\"aw-input\\\"\\r\\n                  [(ngModel)]=\\\"bidtPurchaseContractElementDTO.pcePriceExclTax\\\"\\r\\n                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                  (blur)=\\\"calculatePrice()\\\"\\r\\n                />\\r\\n                <p-message\\r\\n                  *ngIf=\\\"pciePriceExclTax.invalid && (pciePriceExclTax.dirty || pciePriceExclTax.touched)\\\"\\r\\n                  severity=\\\"error\\\"\\r\\n                  [text]=\\\"inputValidationService.formatOfMoney()\\\"\\r\\n                ></p-message>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pceVat\\\" | translate }}</label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  [pKeyFilter]=\\\"inputValidationService.validatorOfMoney()\\\"\\r\\n                  maxlength=\\\"37\\\"\\r\\n                  class=\\\"aw-input\\\"\\r\\n                  [(ngModel)]=\\\"bidtPurchaseContractElementDTO.pceVat\\\"\\r\\n                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                  (blur)=\\\"calculatePrice()\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pcePrice\\\" | translate }}</label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  pKeyFilter=\\\"money\\\"\\r\\n                  maxlength=\\\"37\\\"\\r\\n                  class=\\\"aw-input\\\"\\r\\n                  [(ngModel)]=\\\"bidtPurchaseContractElementDTO.pcePrice\\\"\\r\\n                  [disabled]=\\\"true\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pceCurrency\\\" | translate }}</label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  pKeyFilter=\\\"alpha\\\"\\r\\n                  maxlength=\\\"37\\\"\\r\\n                  class=\\\"aw-input\\\"\\r\\n                  [(ngModel)]=\\\"bidtPurchaseContractElementDTO.pceCurrency\\\"\\r\\n                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pceTimeLimit\\\" | translate }}</label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  pKeyFilter=\\\"int\\\"\\r\\n                  maxlength=\\\"37\\\"\\r\\n                  class=\\\"aw-input\\\"\\r\\n                  [(ngModel)]=\\\"bidtPurchaseContractElementDTO.pceTimeLimit\\\"\\r\\n                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span *ngIf=\\\"!isReadOpenMode\\\">{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n      <span *ngIf=\\\"isReadOpenMode\\\">{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!bidtPurchaseContractElementDTO.birePnPnCode\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-material\\r\\n  *ngIf=\\\"showQuickSearchMaterialPopup\\\"\\r\\n  [(display)]=\\\"showQuickSearchMaterialPopup\\\"\\r\\n  [material-code]=\\\"bidtPurchaseContractElementDTO.birePnPnCode\\\"\\r\\n  (onSelected)=\\\"setSelectedMaterial($event)\\\"\\r\\n></aw-dialog-search-material>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { OrderDocumentFormService } from '../../../../../../../../main/logistics/order-document/form/order-document-form.service';\r\nimport { ComponentConstants } from '../../../../../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { InputValidationService } from '../../../../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../../../../shared/services/message.service';\r\nimport { BirePnDTO } from '../../../../../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { DialogComponent } from '../../../../../../../../shared/types/dialog-component';\r\nimport { StringUtils } from '../../../../../../../../shared/utils/string-utils';\r\nimport { BidtPurchaseContractElementDTO } from '../../../../../../dtos/bidt-purchase-contract-element-dto.interface';\r\nimport { PurchaseContractElementService } from '../../../../../../services/purchase-contract-element.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-purchase-contract-element',\r\n  templateUrl: './dialog-purchase-contract-element.component.html'\r\n})\r\nexport class DialogPurchaseContractElementComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public data: BidtPurchaseContractElementDTO;\r\n\r\n  @Output()\r\n  public onAddElementAndServices: EventEmitter<BidtPurchaseContractElementDTO>;\r\n\r\n  @Output()\r\n  public onUpdateElementAndServices: EventEmitter<BidtPurchaseContractElementDTO>;\r\n\r\n  public bidtPurchaseContractElementDTO: BidtPurchaseContractElementDTO;\r\n\r\n  public showQuickSearchMaterialPopup: boolean;\r\n\r\n  public constructor(\r\n    private readonly orderDocumentFormService: OrderDocumentFormService,\r\n    private readonly messageService: MessageService,\r\n    private readonly purchaseContractElementService: PurchaseContractElementService,\r\n    public inputValidationService: InputValidationService\r\n  ) {\r\n    super(ComponentOpenMode.Write, ComponentConstants.PCT_PURCHASE_ELEMENT_AND_SERVICES_DIALOG_FORM);\r\n    this.onAddElementAndServices = new EventEmitter<BidtPurchaseContractElementDTO>();\r\n    this.onUpdateElementAndServices = new EventEmitter<BidtPurchaseContractElementDTO>();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.PCT_PURCHASE_ELEMENT_AND_SERVICES_DIALOG_FORM;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.getLocalCurrency();\r\n    this.calculatePrice();\r\n    this.updateOpenMode(this.openMode); // create\r\n    if (!this.data) {\r\n      this.bidtPurchaseContractElementDTO = {};\r\n      this.getLocalCurrency();\r\n    } else {\r\n      this.bidtPurchaseContractElementDTO = { ...this.data };\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.openMode === ComponentOpenMode.Create) {\r\n        this.onAddElementAndServices.emit(this.bidtPurchaseContractElementDTO);\r\n      } else {\r\n        this.onUpdateElementAndServices.emit(this.bidtPurchaseContractElementDTO);\r\n      }\r\n      this.closeDialog();\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  private isScreenValidated() {\r\n    return !StringUtils.isNullOrEmpty(this.bidtPurchaseContractElementDTO.birePnPnCode);\r\n  }\r\n\r\n  public closeDialog(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public openMaterialDialog() {\r\n    this.showQuickSearchMaterialPopup = true;\r\n  }\r\n\r\n  public setSelectedMaterial(event: BirePnDTO): void {\r\n    this.bidtPurchaseContractElementDTO.birePnPnCode = event.pnCode;\r\n  }\r\n\r\n  private getLocalCurrency(): void {\r\n    this.orderDocumentFormService.getLocalCurrency().subscribe((res) => {\r\n      this.bidtPurchaseContractElementDTO.pceCurrency = res;\r\n    });\r\n  }\r\n\r\n  public calculatePrice(): void {\r\n    this.purchaseContractElementService.calculatePrice(this.bidtPurchaseContractElementDTO);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"75\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">\\r\\n      {{ getComponentName() + \\\".contractItems\\\" | translate }}\\r\\n    </div>\\r\\n  </a-header>\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group flex--2\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pciCode\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"item.pciCode\\\" [disabled]=\\\"isReadOnlyForm\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group flex--4\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pciLabel\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"item.pciLabel\\\" [disabled]=\\\"isReadOnlyForm\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pciType\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [options]=\\\"itemTypeListDisplay\\\"\\r\\n              [(ngModel)]=\\\"item.pciType\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".statusState\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [options]=\\\"itemStatusListDisplay\\\"\\r\\n              [(ngModel)]=\\\"item.statusState\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pcCommitmentAuthorization\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"item.pciCommitmentAuthorization\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pciFlagPackage\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-checkbox\\r\\n              binary=\\\"true\\\"\\r\\n              class=\\\"aw-checkbox\\\"\\r\\n              [(ngModel)]=\\\"item.pciFlagPackage\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            ></p-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pciPackagePrice\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"item.pciPackagePrice\\\" [disabled]=\\\"isReadOpenMode\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pcLegalCommitment\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"item.pciLegalCommitment\\\" [disabled]=\\\"isReadOnlyForm\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pciStartDate\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [(ngModel)]=\\\"item.pciStartDate\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              required\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pciEndDate\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [(ngModel)]=\\\"item.pciEndDate\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              required\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pciCommitedAmount\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"item.pciCommittedAmount\\\" [disabled]=\\\"isReadOpenMode\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pciFlagPartialReceipt\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-checkbox\\r\\n              binary=\\\"true\\\"\\r\\n              class=\\\"aw-checkbox\\\"\\r\\n              [(ngModel)]=\\\"item.pciFlagPartialReceipt\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            ></p-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pciPriceRevision\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-checkbox\\r\\n              binary=\\\"true\\\"\\r\\n              class=\\\"aw-checkbox\\\"\\r\\n              [(ngModel)]=\\\"item.pciPriceRevision\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            ></p-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pciPenalties\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-checkbox\\r\\n              binary=\\\"true\\\"\\r\\n              class=\\\"aw-checkbox\\\"\\r\\n              [(ngModel)]=\\\"item.pciPenalties\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            ></p-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\" [disabled]=\\\"!isValid()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../../../shared/services/session.service';\r\nimport { DialogComponent } from '../../../../../../../../shared/types/dialog-component';\r\nimport { ObjectUtils } from '../../../../../../../../shared/utils/object-utils';\r\nimport { StringUtils } from '../../../../../../../../shared/utils/string-utils';\r\nimport { BidtPurchaseContractItemDTO } from '../../../../../../dtos/bidt-purchase-contract-item-dto.interface';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-purchase-contract-item',\r\n  templateUrl: './dialog-purchase-contract-item.component.html'\r\n})\r\nexport class DialogPurchaseContractItemComponent extends DialogComponent implements OnInit {\r\n  @Input() public item: BidtPurchaseContractItemDTO;\r\n  @Input() public isReadOnlyForm: boolean;\r\n  @Input() public newItem: boolean;\r\n  @Input() public itemTypeListDisplay: SelectItem[];\r\n  @Input() public itemStatusListDisplay: SelectItem[];\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtPurchaseContractItemDTO>;\r\n  @Output()\r\n  public onUpdate: EventEmitter<BidtPurchaseContractItemDTO>;\r\n  public bidtPurchaseContractItemDTO: BidtPurchaseContractItemDTO;\r\n\r\n  public constructor(private readonly messageService: MessageService, public sessionService: SessionService) {\r\n    super(ComponentOpenMode.Write, 'DialogPurchaseContractItemComponent');\r\n\r\n    this.onValidated = new EventEmitter<BidtPurchaseContractItemDTO>();\r\n    this.onUpdate = new EventEmitter<BidtPurchaseContractItemDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.item) {\r\n      this.item = {};\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    const errors: string[] = this.validateItem();\r\n    if (errors.length === 0) {\r\n      if (this.newItem) {\r\n        this.onValidated.emit(this.item);\r\n      } else {\r\n        this.onUpdate.emit(this.item);\r\n      }\r\n      this.closeDialog();\r\n    } else {\r\n      errors.forEach((error) => this.messageService.showErrorMessage(error));\r\n    }\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  private validateItem(): string[] {\r\n    const errors: string[] = [];\r\n    if (\r\n      StringUtils.isNullOrEmpty(this.item.pciLabel) ||\r\n      StringUtils.isNullOrEmpty(this.item.pciType) ||\r\n      !ObjectUtils.isDefined(this.item.pciCode)\r\n    ) {\r\n      errors.push('global.warningOnMissingRequiredFields');\r\n    }\r\n\r\n    if (this.item.pciStartDate && this.item.pciEndDate && this.item.pciStartDate > this.item.pciEndDate) {\r\n      errors.push(this.getTranslateKey('incoherentDate'));\r\n    }\r\n\r\n    return errors;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"75\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"search-dialog-container\\\">\\r\\n      <div class=\\\"section search-criteria-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">{{ \\\"global.search\\\" | translate }}</h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <div class=\\\"column\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".pcNumber\\\" | translate }}\\r\\n                </label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.pcNumber\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".pcLabel\\\" | translate }}\\r\\n                </label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.pcLabel\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".statusState\\\" | translate }}\\r\\n                </label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"statusList\\\"\\r\\n                    [(ngModel)]=\\\"searchObject.statusState\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".pcLegalCommitment\\\" | translate }}\\r\\n                </label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.pcLegalCommitment\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".pcCreationDateStart\\\" | translate }}\\r\\n                </label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"searchObject.pcCreationDateInterval.minValue\\\"\\r\\n                  ></p-calendar>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".pcCreationDateEnd\\\" | translate }}\\r\\n                </label>\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"searchObject.pcCreationDateInterval.maxValue\\\"\\r\\n                  ></p-calendar>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row search-criteria-footer\\\">\\r\\n              <div class=\\\"search-actions\\\">\\r\\n                <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"search()\\\">\\r\\n                  <span>{{ \\\"global.toSearch\\\" | translate }}</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"section results-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">\\r\\n          {{ \\\"global.results\\\" | translate }} ({{\\r\\n            parentContractTableDataSource ? parentContractTableDataSource.dataCount : 0\\r\\n          }})\\r\\n        </h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <a-table [dataSource]=\\\"parentContractTableDataSource\\\"> </a-table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"onCancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"onValidate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { TableDataSource } from '../../../../../../../../shared/components/table/table-data-source';\r\nimport { ComponentOpenMode } from '../../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { PropertiesService } from '../../../../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../../../../shared/services/session.service';\r\nimport { DialogComponent } from '../../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../../shared/types/label-value.interface';\r\nimport { PurchaseContractPropertyConstants } from '../../../../../../constants/properties/purchase-contract-property-constants';\r\nimport { BidtPurchaseContractDTO } from '../../../../../../dtos/bidt-purchase-contract-dto.interface';\r\nimport { FindBidtPurchaseContractsByCriteriaInput } from '../../../../../../dtos/input/find-bidt-purchase-contracts-by-criteria-input.interface';\r\nimport { PurchaseContractService } from '../../../../../../services/purchase-contract.service';\r\nimport { LabelValueHelper } from '../../../../../../utils/label-value-helper';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-purchase-contract-parent-id',\r\n  templateUrl: './dialog-purchase-contract-parent-id.component.html'\r\n})\r\nexport class DialogPurchaseContractParentIdComponent extends DialogComponent implements OnInit {\r\n  public parentContractTableDataSource: TableDataSource<BidtPurchaseContractDTO>;\r\n  public searchObject: FindBidtPurchaseContractsByCriteriaInput;\r\n  public totalFilteredRows: number;\r\n  public isLoading: boolean;\r\n  public statusList: LabelValue<string>[];\r\n\r\n  @Output()\r\n  public onSelected = new EventEmitter<BidtPurchaseContractDTO>();\r\n\r\n  public constructor(\r\n    public purchaseContractService: PurchaseContractService,\r\n    public sessionService: SessionService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogPurchaseContractParentIdComponent');\r\n\r\n    this.onSelected = new EventEmitter<BidtPurchaseContractDTO>();\r\n    this.totalFilteredRows = 0;\r\n    this.searchObject = { pcCreationDateInterval: {} };\r\n    this.isLoading = false;\r\n\r\n    this.initParentContractTableDataSource();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.searchObject = this.searchObject || {};\r\n    this.loadStatusList();\r\n  }\r\n\r\n  private initParentContractTableDataSource(): void {\r\n    this.parentContractTableDataSource = new TableDataSource({\r\n      allowMultiSelect: false,\r\n      columns: [\r\n        {\r\n          field: 'pcNumber',\r\n          translateKey: this.getTranslateKey('pcNumber')\r\n        },\r\n        {\r\n          field: 'pcLabel',\r\n          translateKey: this.getTranslateKey('pcLabel')\r\n        },\r\n        {\r\n          field: 'statusState',\r\n          translateKey: this.getTranslateKey('statusState')\r\n        },\r\n        {\r\n          field: 'pcLegalCommitment',\r\n          translateKey: this.getTranslateKey('pcLegalCommitment')\r\n        },\r\n        {\r\n          field: 'pcCreationDateStart',\r\n          translateKey: this.getTranslateKey('pcCreationDateStart')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public cancel(): void {\r\n    super.closeDialog();\r\n  }\r\n\r\n  private loadStatusList(): void {\r\n    this.propertiesService\r\n      .getValue(PurchaseContractPropertyConstants.CONTRACT_STATUS_MAP)\r\n      .subscribe((result) => (this.statusList = result));\r\n  }\r\n\r\n  public search(): void {\r\n    this.loadContracts();\r\n  }\r\n\r\n  private loadContracts(): void {\r\n    this.isLoading = true;\r\n    this.purchaseContractService\r\n      .findBidtPurchaseContractByCriteria(this.searchObject)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.isLoading = false;\r\n        })\r\n      )\r\n      .subscribe((results) => {\r\n        if (results) {\r\n          this.parentContractTableDataSource.setData(results.list);\r\n          this.parentContractTableDataSource.dataSrc.forEach((element) => {\r\n            element.statusState = LabelValueHelper.getLabelByValue(this.statusList, element.statusState);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public onValidate(): void {\r\n    this.onSelected.emit(this.parentContractTableDataSource.dataSelection[0]);\r\n    super.closeDialog();\r\n  }\r\n\r\n  public onCancel(): void {\r\n    this.parentContractTableDataSource.setData([]);\r\n    this.totalFilteredRows = 0;\r\n    this.closeDialog();\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".customerCode\\\" | translate }}</label>\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown\\r\\n            appendTo=\\\"body\\\"\\r\\n            class=\\\"aw-dropdown fixed-width\\\"\\r\\n            placeholder=\\\"&nbsp;\\\"\\r\\n            [showClear]=\\\"true\\\"\\r\\n            [options]=\\\"cudstomersCodeOptions\\\"\\r\\n            [disabled]=\\\"isReadOpenMode\\\"\\r\\n            [(ngModel)]=\\\"bidtPurchaseContractPartnerDTO.customerCode\\\"\\r\\n          >\\r\\n          </p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group required\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".pcpRole\\\" | translate }}</label>\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown\\r\\n            appendTo=\\\"body\\\"\\r\\n            class=\\\"aw-dropdown fixed-width\\\"\\r\\n            placeholder=\\\"&nbsp;\\\"\\r\\n            [showClear]=\\\"true\\\"\\r\\n            [options]=\\\"partnerRoleList\\\"\\r\\n            [disabled]=\\\"isReadOpenMode\\\"\\r\\n            [(ngModel)]=\\\"bidtPurchaseContractPartnerDTO.pcpRole\\\"\\r\\n          >\\r\\n          </p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!bidtPurchaseContractPartnerDTO.customerCode\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { OrderDocumentSearchService } from '../../../../../../../../main/logistics/order-document/search/order-document-search.service';\r\nimport { ComponentConstants } from '../../../../../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../../shared/services/message.service';\r\nimport { DialogComponent } from '../../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../../shared/types/label-value.interface';\r\nimport { StringUtils } from '../../../../../../../../shared/utils/string-utils';\r\nimport { BidtPurchaseContractPartnerDTO } from '../../../../../../dtos/bidt-purchase-contract-partner-dto.interface';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-purchase-contract-partner',\r\n  templateUrl: './dialog-purchase-contract-partner.component.html'\r\n})\r\nexport class DialogPurchaseContractPartnerComponent<T> extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public data: BidtPurchaseContractPartnerDTO;\r\n\r\n  @Input()\r\n  public partnerRoleList: LabelValue<String>[];\r\n\r\n  @Output()\r\n  public onAddPartner: EventEmitter<BidtPurchaseContractPartnerDTO>;\r\n\r\n  @Output()\r\n  public onUpdatePartner: EventEmitter<BidtPurchaseContractPartnerDTO>;\r\n\r\n  public bidtPurchaseContractPartnerDTO: BidtPurchaseContractPartnerDTO;\r\n\r\n  public cudstomersCodeOptions: LabelValue<string>[];\r\n\r\n  public constructor(\r\n    private readonly orderDocumentSearchService: OrderDocumentSearchService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, ComponentConstants.PCT_PURCHASE_PARTNER_DIALOG_FORM);\r\n    this.onAddPartner = new EventEmitter<BidtPurchaseContractPartnerDTO>();\r\n    this.onUpdatePartner = new EventEmitter<BidtPurchaseContractPartnerDTO>();\r\n    this.partnerRoleList = [];\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.PCT_PURCHASE_PARTNER_DIALOG_FORM;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode); // create\r\n    if (!this.data) {\r\n      this.data = {};\r\n      this.bidtPurchaseContractPartnerDTO = {};\r\n    } else {\r\n      this.bidtPurchaseContractPartnerDTO = { ...this.data };\r\n    }\r\n    this.loadCudstomersCodeOptions();\r\n  }\r\n\r\n  private loadCudstomersCodeOptions(): void {\r\n    this.orderDocumentSearchService.findBidoCustomerBySearchCriteriaOrder().subscribe((results) => {\r\n      this.cudstomersCodeOptions = results || [];\r\n    });\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.openMode === ComponentOpenMode.Create) {\r\n        this.onAddPartner.emit(this.bidtPurchaseContractPartnerDTO);\r\n        this.closeDialog();\r\n      } else {\r\n        this.onUpdatePartner.emit(this.bidtPurchaseContractPartnerDTO);\r\n        this.closeDialog();\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  private isScreenValidated() {\r\n    return (\r\n      !StringUtils.isNullOrEmpty(this.bidtPurchaseContractPartnerDTO.customerCode) &&\r\n      !StringUtils.isNullOrEmpty(this.bidtPurchaseContractPartnerDTO.pcpRole)\r\n    );\r\n  }\r\n\r\n  public closeDialog(): void {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"70\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n  <a-content>\\r\\n    <div class=\\\"section-content\\\">\\r\\n      <div class=\\\"column\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group required\\\">\\r\\n            <label class=\\\"form-label\\\">\\r\\n              {{ getComponentName() + \\\".pcsOrder\\\" | translate }}\\r\\n            </label>\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <input type=\\\"number\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"data.pcsOrder\\\" [disabled]=\\\"isReadOpenMode\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group required\\\">\\r\\n            <label class=\\\"form-label\\\">\\r\\n              {{ getComponentName() + \\\".pcsType\\\" | translate }}\\r\\n            </label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [options]=\\\"sliceTypeListDisplay\\\"\\r\\n                (onChange)=\\\"onSliceTypeChange($event)\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"data.pcsType\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label\\\">\\r\\n              {{ getComponentName() + \\\".statusState\\\" | translate }}\\r\\n            </label>\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [options]=\\\"sliceStatusListDisplay\\\"\\r\\n                (onChange)=\\\"onSliceStatusChange($event)\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"data.statusState\\\"\\r\\n                [disabled]=\\\"isReadOpenMode\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"section-content\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pcsDescription\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <textarea\\r\\n              class=\\\"aw-textarea\\\"\\r\\n              [rows]=\\\"1\\\"\\r\\n              pInputTextarea\\r\\n              [(ngModel)]=\\\"data.pcsDescription\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"section-content\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pcsConsolidationDate\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [(ngModel)]=\\\"data.pcsConsolidationDate\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div id=\\\"pcsDuration\\\" class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pcsDuration\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              numeric\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              maxlength=\\\"50\\\"\\r\\n              [(ngModel)]=\\\"data.pcsDuration\\\"\\r\\n              (ngModelChange)=\\\"onDurationValueChange($event)\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div id=\\\"pcsDurationUnit\\\" class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".unit\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              numeric\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              maxlength=\\\"50\\\"\\r\\n              [ngModel]=\\\"data.pcsDuration\\\"\\r\\n              (ngModelChange)=\\\"onDurationValueChange($event)\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div id=\\\"pcsDurationUnit\\\" class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".unit\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [options]=\\\"sliceUnitList\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n              [ngModel]=\\\"data.pcsDurationUnit\\\"\\r\\n              (ngModelChange)=\\\"onDurationUnitValueChange($event)\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"section-content\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pcsStartDate\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [ngModel]=\\\"data.pcsStartDate\\\"\\r\\n              (ngModelChange)=\\\"onStartDateValueChange($event)\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".pcsEndDate\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [(ngModel)]=\\\"data.pcsEndDate\\\"\\r\\n              [disabled]=\\\"true\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"section-content\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".minAmount\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              numeric\\r\\n              decimals=\\\"2\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              maxlength=\\\"50\\\"\\r\\n              [(ngModel)]=\\\"data.pcsMinimumAmount\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".maxAmount\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              numeric\\r\\n              decimals=\\\"2\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              maxlength=\\\"50\\\"\\r\\n              [(ngModel)]=\\\"data.pcsMaximumAmount\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".commitedAmount\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              numeric\\r\\n              decimals=\\\"2\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              maxlength=\\\"50\\\"\\r\\n              [(ngModel)]=\\\"data.pcsCommitedAmount\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".currency\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"currency\\\" [disabled]=\\\"true\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\" [disabled]=\\\"!isValid()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentConstants } from '../../../../../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../../../../shared/services/session.service';\r\nimport { DialogComponent } from '../../../../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../../../../shared/types/label-value.interface';\r\nimport { StringUtils } from '../../../../../../../../shared/utils/string-utils';\r\nimport { PurchaseContractPropertyConstants } from '../../../../../../constants/properties/purchase-contract-property-constants';\r\nimport { PurchaseContractSliceStatusConstants } from '../../../../../../constants/properties/purchasecontract/purchase-contract-slice-status-constants';\r\nimport { PurchaseContractSliceTypeConstants } from '../../../../../../constants/properties/purchasecontract/purchase-contract-slice-type-constants';\r\nimport { BidtPurchaseContractSliceDTO } from '../../../../../../dtos/bidt-purchase-contract-slice-dto.interface';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-purchase-contract-slice',\r\n  templateUrl: './dialog-purchase-contract-slice.component.html'\r\n})\r\nexport class DialogPurchaseContractSliceComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Input()\r\n  public newSlice: boolean;\r\n\r\n  @Input()\r\n  public data: BidtPurchaseContractSliceDTO;\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n\r\n  @Output()\r\n  public onAddSlice: EventEmitter<BidtPurchaseContractSliceDTO>;\r\n\r\n  @Output()\r\n  public onUpdateSlice: EventEmitter<BidtPurchaseContractSliceDTO>;\r\n\r\n  @Input()\r\n  public sliceTypeListDisplay: LabelValue<string>[];\r\n\r\n  @Input()\r\n  public sliceStatusListDisplay: LabelValue<string>[];\r\n\r\n  @Input()\r\n  public sliceUnitList: LabelValue<string>[];\r\n\r\n  @Input()\r\n  public currency: string;\r\n\r\n  public constructor(private readonly messageService: MessageService, public sessionService: SessionService) {\r\n    super(ComponentOpenMode.Write, ComponentConstants.PCT_SLICES_DIALOG_FORM);\r\n    this.onAddSlice = new EventEmitter<BidtPurchaseContractSliceDTO>();\r\n    this.onUpdateSlice = new EventEmitter<BidtPurchaseContractSliceDTO>();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.PCT_SLICES_DIALOG_FORM;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode); // create\r\n    if (!this.data) {\r\n      this.data = {};\r\n    }\r\n    if (this.openMode === ComponentOpenMode.Write || this.openMode === ComponentOpenMode.Create) {\r\n      // this.loadPcsEndDate();\r\n    }\r\n  }\r\n\r\n  public onStartDateValueChange(event: Date): void {\r\n    this.data.pcsStartDate = event;\r\n    this.loadPcsEndDate();\r\n  }\r\n\r\n  public onDurationValueChange(event: number): void {\r\n    this.data.pcsDuration = event;\r\n    this.loadPcsEndDate();\r\n  }\r\n\r\n  public onDurationUnitValueChange(event: string): void {\r\n    this.data.pcsDurationUnit = event;\r\n    this.loadPcsEndDate();\r\n  }\r\n\r\n  public loadPcsEndDate(): void {\r\n    if (!!this.data && !!this.data.pcsStartDate && !!this.data.pcsDurationUnit && !!this.data.pcsDuration) {\r\n      const startDateSored = new Date(this.data.pcsStartDate);\r\n      if (this.data.pcsDuration === 0) {\r\n        this.data.pcsEndDate = startDateSored;\r\n      } else {\r\n        switch (this.data.pcsDurationUnit) {\r\n          case PurchaseContractPropertyConstants.UNIT_DAY_VALUE: {\r\n            this.data.pcsEndDate = new Date(\r\n              startDateSored.setTime(\r\n                startDateSored.getTime() + this.data.pcsDuration * PurchaseContractPropertyConstants.MILLI_SEC_IN_DAY\r\n              )\r\n            );\r\n            break;\r\n          }\r\n          case PurchaseContractPropertyConstants.UNIT_WEEK_VALUE: {\r\n            this.data.pcsEndDate = new Date(\r\n              startDateSored.setTime(\r\n                startDateSored.getTime() +\r\n                  this.data.pcsDuration *\r\n                    PurchaseContractPropertyConstants.MILLI_SEC_IN_DAY *\r\n                    PurchaseContractPropertyConstants.DAY_IN_WEEK\r\n              )\r\n            );\r\n\r\n            break;\r\n          }\r\n          case PurchaseContractPropertyConstants.UNIT_MONTH_VALUE: {\r\n            this.data.pcsEndDate = new Date(startDateSored.setMonth(startDateSored.getMonth() + this.data.pcsDuration));\r\n            break;\r\n          }\r\n          default: {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.isScreenValidated()) {\r\n      if (this.newSlice) {\r\n        this.onAddSlice.emit(this.data);\r\n      } else {\r\n        this.onUpdateSlice.emit(this.data);\r\n      }\r\n      this.closeDialog();\r\n    } else {\r\n      this.messageService.showErrorMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  private isScreenValidated() {\r\n    return (\r\n      this.data.pcsOrder &&\r\n      !StringUtils.isNullOrEmpty(this.data.pcsDescription) &&\r\n      this.data.pcsType &&\r\n      // Mandatory data if consolidation date is present\r\n      (!this.data.pcsConsolidationDate || (this.data.pcsEndDate && this.data.pcsStartDate && this.data.pcsDuration))\r\n    );\r\n  }\r\n\r\n  public onSliceStatusChange(event): void {\r\n    if (!this.data.pcsConsolidationDate && event.value === PurchaseContractSliceStatusConstants.FIRMED) {\r\n      this.data.pcsConsolidationDate = new Date();\r\n    }\r\n  }\r\n\r\n  public onSliceTypeChange(event) {\r\n    if (!this.data.pcsConsolidationDate && event.value === PurchaseContractSliceTypeConstants.FIRM) {\r\n      this.data.pcsConsolidationDate = new Date();\r\n    }\r\n  }\r\n\r\n  public closeDialog(): void {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div *ngIf=\\\"!isCreateOpenMode && purchaseContract\\\" class=\\\"page-subtitle\\\">- {{ purchaseContract.pcNumber }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"object-status\\\" *ngIf=\\\"purchaseContract.statusState\\\" (click)=\\\"showStatus()\\\">\\r\\n      {{ purchaseContract.statusState | formatSelectOption: statusList }}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"edit()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancel()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"save()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button\\r\\n        mat-menu-item\\r\\n        id=\\\"favorite\\\"\\r\\n        *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\"\\r\\n        (click)=\\\"updateFavoriteState()\\\"\\r\\n      >\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n      <button *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-menu-item (click)=\\\"reload()\\\">\\r\\n        {{ \\\"global.refresh\\\" | translate }}\\r\\n      </button>\\r\\n      <button mat-menu-item (click)=\\\"openStatusUpdatesPopup()\\\">{{ \\\"updates\\\" | translate }}</button>\\r\\n    </mat-menu>\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"Show all actions\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div #page class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <!-- HEADER DATA -->\\r\\n            <div #headerDataAnchor class=\\\"grid-cell--8\\\" (click)=\\\"selectPageTocEntry(component.HEADER_DATA_ANCHOR_ID)\\\">\\r\\n              <div\\r\\n                class=\\\"grid-cell grid-cell--container\\\"\\r\\n                [ngClass]=\\\"{ active: isPageTocEntrySelected(component.HEADER_DATA_ANCHOR_ID) }\\\"\\r\\n              >\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".headerDataAnchor\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div id=\\\"pcNumber\\\" class=\\\"form-group flex--6\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcNumber\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.pcNumber\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"pcLabel\\\" class=\\\"form-group flex--6\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcLabel\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.pcLabel\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div id=\\\"pcType\\\" class=\\\"form-group flex--6\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcType\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [options]=\\\"pcTypeList\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.pcType\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"pcCommitmentAuthorization\\\" class=\\\"form-group flex--6\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcCommitmentAuthorization\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.pcCommitmentAuthorization\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"pcLegalCommitment\\\" class=\\\"form-group flex--6\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcLegalCommitment\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.pcLegalCommitment\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div id=\\\"pcBusinessCode\\\" class=\\\"form-group flex--6\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcBusinessCode\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.pcBusinessCode\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"pcValidityStartDate\\\" class=\\\"form-group flex--6\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcValidityStartDate\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.pcValidityStartDate\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"pcValidityEndDate\\\" class=\\\"form-group flex--6\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcValidityEndDate\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.pcValidityEndDate\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div id=\\\"pcMinimumAmount\\\" class=\\\"form-group flex--6\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcMinimumAmount\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"number\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.pcMinimumAmount\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"pcMaximumAmount\\\" class=\\\"form-group flex--6\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcMaximumAmount\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"number\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.pcMaximumAmount\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"pcCurrency\\\" class=\\\"form-group flex--6\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pcCurrency\\\" | translate }}</label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"pcCurrencyList\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.pcCurrency\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div id=\\\"bidtSiteId\\\" class=\\\"form-group flex--6\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pcSite\\\" | translate }}</label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [options]=\\\"pcSiteList\\\"\\r\\n                          [(ngModel)]=\\\"purchaseContract.bidtSiteId\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"bidtEmployeeId\\\" class=\\\"form-group flex--6\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcEmployeeId\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div\\r\\n                        class=\\\"form-control form-control-with-modal\\\"\\r\\n                        [ngClass]=\\\"{ disabled: isReadOpenMode && !isCreateOpenMode }\\\"\\r\\n                      >\\r\\n                        <div\\r\\n                          class=\\\"form-control-data\\\"\\r\\n                          (click)=\\\"(!isReadOpenMode || isCreateOpenMode) && quickSearchEmployee()\\\"\\r\\n                        >\\r\\n                          {{ contractManagerName }}\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"contractManagerName\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"contractManagerName = undefined\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                        <div class=\\\"btn-search-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"!isReadOpenMode && quickSearchEmployee()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"bidtPurchaseContractId\\\" class=\\\"form-group flex--6\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".pcParentLabel\\\" | translate }}\\r\\n                      </label>\\r\\n                      <div\\r\\n                        class=\\\"form-control form-control-with-modal\\\"\\r\\n                        [ngClass]=\\\"{ disabled: isReadOpenMode && !isCreateOpenMode }\\\"\\r\\n                      >\\r\\n                        <div\\r\\n                          class=\\\"form-control-data\\\"\\r\\n                          (click)=\\\"(!isReadOpenMode || isCreateOpenMode) && selectParentId()\\\"\\r\\n                        >\\r\\n                          {{ parentContractLabel }}\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"purchaseContract.bidtPurchaseContractId\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"purchaseContract.bidtPurchaseContractId = undefined\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                        <div class=\\\"btn-search-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"!isReadOpenMode && selectParentId()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!-- PARTNER -->\\r\\n            <div #partnernAnchor class=\\\"grid-cell--4\\\" (click)=\\\"selectPageTocEntry(component.PARTNER_ANCHOR_ID)\\\">\\r\\n              <div\\r\\n                class=\\\"grid-cell grid-cell--container\\\"\\r\\n                [ngClass]=\\\"{ active: isPageTocEntrySelected(component.PARTNER_ANCHOR_ID) }\\\"\\r\\n              >\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ getComponentName() + \\\".partnerList\\\" | translate }} ({{ partnerTableDataSource.dataCount }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <a-table [dataSource]=\\\"partnerTableDataSource\\\">\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && partnerTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deletePartner()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && partnerTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editPartner()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && !partnerTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"addPartner()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n\\r\\n        <!-- SLICES -->\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"PurchaseContractFormComponent.slices\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div #sliceAnchor class=\\\"grid-cell--12\\\" (click)=\\\"selectPageTocEntry(component.SLICE_ANCHOR_ID)\\\">\\r\\n              <div\\r\\n                class=\\\"grid-cell grid-cell--container\\\"\\r\\n                [ngClass]=\\\"{ active: isPageTocEntrySelected(component.SLICE_ANCHOR_ID) }\\\"\\r\\n              >\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ \\\"PurchaseContractFormComponent.slices\\\" | translate }} ({{ slicesTableDataSource.dataCount }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <a-table\\r\\n                    [dataSource]=\\\"slicesTableDataSource\\\"\\r\\n                    (onRowSelect)=\\\"onSliceSelected($event)\\\"\\r\\n                    (onRowUnselect)=\\\"onSliceUnselected($event)\\\"\\r\\n                  >\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && slicesTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteSlices()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"isReadOpenMode && slicesTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openSlices()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && !slicesTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"addSlices()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && slicesTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editSlices()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pcsOrder\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.bidtPurchaseContractSliceDTO.pcsOrder }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pcsDescription\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.bidtPurchaseContractSliceDTO.pcsDescription }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"statusState\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.sliceStatusLabel }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pcsConsolidationDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{\\r\\n                        rowData.bidtPurchaseContractSliceDTO.pcsConsolidationDate\\r\\n                          | date: \\\"yyyy/MM/dd\\\":\\\"\\\":translateService.currentLang\\r\\n                      }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pcsDuration\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.bidtPurchaseContractSliceDTO.pcsDuration }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pcsStartDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{\\r\\n                        rowData.bidtPurchaseContractSliceDTO.pcsStartDate\\r\\n                          | date: \\\"yyyy/MM/dd\\\":\\\"\\\":translateService.currentLang\\r\\n                      }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pcsEndDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{\\r\\n                        rowData.bidtPurchaseContractSliceDTO.pcsEndDate\\r\\n                          | date: \\\"yyyy/MM/dd\\\":\\\"\\\":translateService.currentLang\\r\\n                      }}\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n\\r\\n        <!-- (OFFICE)/(PROVISION) -->\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".officeProvisionTitle\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div\\r\\n              #officeProvisionAnchor\\r\\n              class=\\\"grid-cell--12\\\"\\r\\n              (click)=\\\"selectPageTocEntry(component.OFFICE_PROVISION_ANCHOR_ID)\\\"\\r\\n            >\\r\\n              <div\\r\\n                class=\\\"grid-cell grid-cell--container\\\"\\r\\n                [ngClass]=\\\"{ active: isPageTocEntrySelected(component.OFFICE_PROVISION_ANCHOR_ID) }\\\"\\r\\n              >\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".officeProvisionTitle\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\" *ngIf=\\\"!itemsTreeTable\\\">\\r\\n                  {{ componentData.componentId + \\\".itemAccessDescription\\\" | translate }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-item-structure\\\" *ngIf=\\\"itemsTreeTable\\\">\\r\\n                  <!-- Item structure treetable -->\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"list-with-details\\\">\\r\\n                      <div class=\\\"list grid-cell--6\\\">\\r\\n                        <p-treeTable\\r\\n                          class=\\\"aw-tree-table2\\\"\\r\\n                          [value]=\\\"itemsTreeTable.tree\\\"\\r\\n                          [columns]=\\\"itemsTreeTableColList\\\"\\r\\n                          selectionMode=\\\"single\\\"\\r\\n                          [selection]=\\\"itemNodeSelected\\\"\\r\\n                          (selectionChange)=\\\"onItemSelection($event)\\\"\\r\\n                        >\\r\\n                          <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                            <colgroup>\\r\\n                              <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                            </colgroup>\\r\\n                          </ng-template>\\r\\n                          <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\" let-columns=\\\"columns\\\">\\r\\n                            <tr [ttRow]=\\\"rowNode\\\" [ttSelectableRow]=\\\"rowNode\\\">\\r\\n                              <td\\r\\n                                style=\\\"overflow: hidden; text-overflow: ellipsis;\\\"\\r\\n                                *ngFor=\\\"let col of columns; let i = index\\\"\\r\\n                                [ngSwitch]=\\\"col.field\\\"\\r\\n                              >\\r\\n                                <p-treeTableToggler [rowNode]=\\\"rowNode\\\" *ngIf=\\\"i == 0\\\"></p-treeTableToggler>\\r\\n                                <span *ngSwitchDefault> {{ rowData.bidtPurchaseContractItemDTO[col.field] }}</span>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </ng-template>\\r\\n                        </p-treeTable>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Item structure form -->\\r\\n                      <div class=\\\"details grid-cell--9\\\" [ngClass]=\\\"{ 'visibility--hidden': !itemsTreeTable.tree }\\\">\\r\\n                        <div class=\\\"column\\\">\\r\\n                          <div class=\\\"section\\\">\\r\\n                            <div class=\\\"section-content\\\">\\r\\n                              <div class=\\\"row structure-node-action-list\\\">\\r\\n                                <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"onAddItem()\\\">\\r\\n                                  {{ \\\"global.add\\\" | translate }}\\r\\n                                </button>\\r\\n                                <button\\r\\n                                  *ngIf=\\\"!isReadOpenMode && itemNodeSelected\\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  (click)=\\\"onEditItem()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.edit\\\" | translate }}\\r\\n                                </button>\\r\\n                                <button\\r\\n                                  *ngIf=\\\"!isReadOpenMode && itemNodeSelected\\\"\\r\\n                                  type=\\\"button\\\"\\r\\n                                  mat-raised-button\\r\\n                                  (click)=\\\"deleteItems()\\\"\\r\\n                                >\\r\\n                                  {{ \\\"global.delete\\\" | translate }}\\r\\n                                </button>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div *ngIf=\\\"itemSelected\\\" class=\\\"section\\\">\\r\\n                            <div class=\\\"section-content\\\">\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div id=\\\"pciCode\\\" class=\\\"form-group flex--4\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciCode\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <input\\r\\n                                      type=\\\"number\\\"\\r\\n                                      class=\\\"aw-input\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciCode\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    />\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div id=\\\"pciLabel\\\" class=\\\"form-group flex--4\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciLabel\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <input\\r\\n                                      type=\\\"text\\\"\\r\\n                                      class=\\\"aw-input\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciLabel\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    />\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div id=\\\"pciType\\\" class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciType\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-dropdown\\r\\n                                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                      placeholder=\\\"&nbsp;\\\"\\r\\n                                      [showClear]=\\\"true\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                      [options]=\\\"typeList\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciType\\\"\\r\\n                                    ></p-dropdown>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div id=\\\"pciStatus\\\" class=\\\"form-group\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciStatus\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-dropdown\\r\\n                                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                      placeholder=\\\"&nbsp;\\\"\\r\\n                                      [showClear]=\\\"true\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                      [options]=\\\"itemStatusStateList\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.statusState\\\"\\r\\n                                    ></p-dropdown>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div id=\\\"pciCommitmentAuthorization\\\" class=\\\"form-group\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciCommitmentAuthorization\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <input\\r\\n                                      type=\\\"text\\\"\\r\\n                                      class=\\\"aw-input\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciCommitmentAuthorization\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    />\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div id=\\\"pciFlagPackage\\\" class=\\\"form-group flex--3\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciFlagPackage\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-checkbox\\r\\n                                      binary=\\\"true\\\"\\r\\n                                      class=\\\"aw-checkbox\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciFlagPackage\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    ></p-checkbox>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div id=\\\"pciPackagePrice\\\" class=\\\"form-group flex--3\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciPackagePrice\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <input\\r\\n                                      type=\\\"number\\\"\\r\\n                                      class=\\\"aw-input\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciPackagePrice\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    />\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div id=\\\"pcLegalCommitment\\\" class=\\\"form-group flex--3\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciLegalCommitment\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <input\\r\\n                                      type=\\\"text\\\"\\r\\n                                      class=\\\"aw-input\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciLegalCommitment\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    />\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div id=\\\"pciStartDate\\\" class=\\\"form-group flex--4\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciStartDate\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-calendar\\r\\n                                      showButtonBar=\\\"true\\\"\\r\\n                                      [monthNavigator]=\\\"true\\\"\\r\\n                                      [yearNavigator]=\\\"true\\\"\\r\\n                                      [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                                      class=\\\"aw-calendar\\\"\\r\\n                                      [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                                      [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciStartDate\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    ></p-calendar>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div id=\\\"pciEndDate\\\" class=\\\"form-group flex--4\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciEndDate\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-calendar\\r\\n                                      showButtonBar=\\\"true\\\"\\r\\n                                      [monthNavigator]=\\\"true\\\"\\r\\n                                      [yearNavigator]=\\\"true\\\"\\r\\n                                      [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                                      class=\\\"aw-calendar\\\"\\r\\n                                      [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                                      [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciEndDate\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    ></p-calendar>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div id=\\\"pciCommitedAmount\\\" class=\\\"form-group flex--4\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciCommitedAmount\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <input\\r\\n                                      type=\\\"number\\\"\\r\\n                                      class=\\\"aw-input\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciCommittedAmount\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    />\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div id=\\\"pciCurrency\\\" class=\\\"form-group flex--4\\\">\\r\\n                                  <label class=\\\"form-label\\\">{{\\r\\n                                    getComponentName() + \\\".pciCurrency\\\" | translate\\r\\n                                  }}</label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-dropdown\\r\\n                                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                      [options]=\\\"pcCurrencyList\\\"\\r\\n                                      [showClear]=\\\"true\\\"\\r\\n                                      [(ngModel)]=\\\"purchaseContract.pcCurrency\\\"\\r\\n                                      placeholder=\\\"&nbsp;\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    ></p-dropdown>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div id=\\\"pciFlagPartialReceipt\\\" class=\\\"form-group flex--3\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciFlagPartialReceipt\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-checkbox\\r\\n                                      binary=\\\"true\\\"\\r\\n                                      class=\\\"aw-checkbox\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciFlagPartialReceipt\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    ></p-checkbox>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div id=\\\"pciPriceRevision\\\" class=\\\"form-group flex--3\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciPriceRevision\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-checkbox\\r\\n                                      binary=\\\"true\\\"\\r\\n                                      class=\\\"aw-checkbox\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciPriceRevision\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    ></p-checkbox>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                                <div id=\\\"pciPenalties\\\" class=\\\"form-group flex--3\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ componentData.componentId + \\\".pciPenalties\\\" | translate }}\\r\\n                                  </label>\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <p-checkbox\\r\\n                                      binary=\\\"true\\\"\\r\\n                                      class=\\\"aw-checkbox\\\"\\r\\n                                      [(ngModel)]=\\\"itemSelected.bidtPurchaseContractItemDTO.pciPenalties\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    ></p-checkbox>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <!-- PRICE TABLE -->\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".priceTableAnchor\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div #priceTableAnchor class=\\\"grid-cell--12\\\" (click)=\\\"selectPageTocEntry(component.PRICE_TABLE_ANCHOR_ID)\\\">\\r\\n              <div\\r\\n                class=\\\"grid-cell grid-cell--container\\\"\\r\\n                [ngClass]=\\\"{ active: isPageTocEntrySelected(component.PRICE_TABLE_ANCHOR_ID) }\\\"\\r\\n              >\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ getComponentName() + \\\".priceTableAnchor\\\" | translate }}\\r\\n                      {{ itemNodeSelected && \\\"(\\\" + elementAndServicesTableDataSource.dataCount + \\\")\\\" }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\" *ngIf=\\\"!itemNodeSelected\\\">\\r\\n                  {{ componentData.componentId + \\\".elementAccessDescription\\\" | translate }}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\" *ngIf=\\\"itemNodeSelected\\\">\\r\\n                  <a-table [dataSource]=\\\"elementAndServicesTableDataSource\\\">\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && elementAndServicesTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteElementAndService()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && elementAndServicesTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editElementAndServices()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && !elementAndServicesTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"addElementAndServices()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"birePnPnCode\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.bidtPurchaseContractElementDTO.birePnPnCode }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pceQuantity\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.bidtPurchaseContractElementDTO.pceQuantity }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pceCurrency\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.bidtPurchaseContractElementDTO.pceCurrency }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pcePriceExclTax\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.bidtPurchaseContractElementDTO.pcePriceExclTax }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pceVat\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.bidtPurchaseContractElementDTO.pceVat }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pcePrice\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.bidtPurchaseContractElementDTO.pcePrice }}\\r\\n                    </ng-template>\\r\\n                    <ng-template columnDef=\\\"pceTimeLimit\\\" let-rowData=\\\"rowData\\\">\\r\\n                      {{ rowData.bidtPurchaseContractElementDTO.pceTimeLimit }}\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n\\r\\n        <!-- Document section -->\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".documentsAnchor\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"section\\\" #documentsAnchor>\\r\\n            <aw-document-section\\r\\n              [isReadOnlyForm]=\\\"isReadOpenMode\\\"\\r\\n              [documentSectionSelected]=\\\"isPageTocEntrySelected(component.DOCUMENTS_ANCHOR_ID)\\\"\\r\\n              (onChangeDocumentSectionSelected)=\\\"selectDocumentSection($event)\\\"\\r\\n              [documentsList]=\\\"documentsList\\\"\\r\\n            >\\r\\n            </aw-document-section>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n\\r\\n    <!-- POPUP ZONE -->\\r\\n    <aw-dialog-status\\r\\n      *ngIf=\\\"showStatusUpdatesPopup\\\"\\r\\n      [isStatusEditable]=\\\"false\\\"\\r\\n      [item]=\\\"purchaseContract\\\"\\r\\n      [itemId]=\\\"purchaseContract.pcNumber\\\"\\r\\n      [(display)]=\\\"showStatusUpdatesPopup\\\"\\r\\n    >\\r\\n    </aw-dialog-status>\\r\\n\\r\\n    <aw-dialog-purchase-contract-slice\\r\\n      *ngIf=\\\"showSliceEditPopup\\\"\\r\\n      [(display)]=\\\"showSliceEditPopup\\\"\\r\\n      [data]=\\\"slicePopupData\\\"\\r\\n      [newSlice]=\\\"isNewSlice\\\"\\r\\n      [openMode]=\\\"slicesDialogOpenMode\\\"\\r\\n      [sliceStatusListDisplay]=\\\"sliceStatusList\\\"\\r\\n      [sliceTypeListDisplay]=\\\"sliceTypeList\\\"\\r\\n      [sliceUnitList]=\\\"sliceUnitList\\\"\\r\\n      [currency]=\\\"getCurrencyLabel()\\\"\\r\\n      (onAddSlice)=\\\"onAddSlice($event)\\\"\\r\\n      (onUpdateSlice)=\\\"onUpdateSlice($event)\\\"\\r\\n    >\\r\\n    </aw-dialog-purchase-contract-slice>\\r\\n\\r\\n    <aw-dialog-status\\r\\n      *ngIf=\\\"showStatusUpdatesPopup\\\"\\r\\n      [isStatusEditable]=\\\"false\\\"\\r\\n      [item]=\\\"purchaseContract\\\"\\r\\n      [itemId]=\\\"purchaseContract.purchaseContractNumber\\\"\\r\\n      [(display)]=\\\"showStatusUpdatesPopup\\\"\\r\\n    >\\r\\n    </aw-dialog-status>\\r\\n\\r\\n    <aw-dialog-purchase-contract-partner\\r\\n      *ngIf=\\\"showPartnerDialog\\\"\\r\\n      [(display)]=\\\"showPartnerDialog\\\"\\r\\n      [data]=\\\"currentPartner\\\"\\r\\n      [partnerRoleList]=\\\"partnerRoleList\\\"\\r\\n      [openMode]=\\\"partnerDialogOpenMode\\\"\\r\\n      (onAddPartner)=\\\"onAddPartner($event)\\\"\\r\\n      (onUpdatePartner)=\\\"onUpdatePartner($event)\\\"\\r\\n    ></aw-dialog-purchase-contract-partner>\\r\\n\\r\\n    <aw-dialog-purchase-contract-element\\r\\n      *ngIf=\\\"showElementAndServicesDialog\\\"\\r\\n      [(display)]=\\\"showElementAndServicesDialog\\\"\\r\\n      [data]=\\\"elementAndServicesPopupData\\\"\\r\\n      [openMode]=\\\"elementAndServicesDialogOpenMode\\\"\\r\\n      (onAddElementAndServices)=\\\"onAddElementAndServices($event)\\\"\\r\\n      (onUpdateElementAndServices)=\\\"onUpdateElementAndServices($event)\\\"\\r\\n    ></aw-dialog-purchase-contract-element>\\r\\n    <!-- Item dialog popup -->\\r\\n    <aw-dialog-purchase-contract-item\\r\\n      *ngIf=\\\"showItemPopup\\\"\\r\\n      [(display)]=\\\"showItemPopup\\\"\\r\\n      [item]=\\\"currentItem\\\"\\r\\n      [newItem]=\\\"isNewItem\\\"\\r\\n      [itemStatusListDisplay]=\\\"itemStatusStateList\\\"\\r\\n      [itemTypeListDisplay]=\\\"typeList\\\"\\r\\n      (onValidated)=\\\"addNewItem($event)\\\"\\r\\n      (onUpdate)=\\\"editSelectedItem($event)\\\"\\r\\n    ></aw-dialog-purchase-contract-item>\\r\\n    <!-- Framework contract popup -->\\r\\n    <aw-dialog-purchase-contract-parent-id\\r\\n      *ngIf=\\\"showParentIdDialog\\\"\\r\\n      [(display)]=\\\"showParentIdDialog\\\"\\r\\n      (onSelected)=\\\"onSelectedParentId($event)\\\"\\r\\n    ></aw-dialog-purchase-contract-parent-id>\\r\\n    <aw-dialog-search-employee\\r\\n      *ngIf=\\\"showEmployeePopup\\\"\\r\\n      [(display)]=\\\"showEmployeePopup\\\"\\r\\n      (onSelected)=\\\"setSelectedEmployee($event)\\\"\\r\\n    ></aw-dialog-search-employee>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host .grid-cell-item-structure .list-with-details .details,\\n:host .grid-cell-item-structure .list-with-details .list {\\n  max-height: 100rem; }\\n\\n:host .grid-cell-item-structure .list-with-details .details {\\n  flex-grow: 1; }\\n\\n:host .grid-cell-item-structure .list-with-details .details .structure-node-action-list {\\n    justify-content: flex-end; }\\n\\n:host .grid-cell-item-structure .list-with-details .details .structure-node-action-list > button {\\n      margin-right: 8px; }\\n\\n:host .grid-cell-item-structure .list-with-details .details .structure-node-action-list > button:last-of-type {\\n        margin-right: 0; }\\n\\n:host .grid-cell-item-structure .list-with-details .list {\\n  min-width: 25rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9wdXJjaGFzZS1jb250cmFjdC9jb21wb25lbnRzL3B1cmNoYXNlLWNvbnRyYWN0L3BhZ2VzL2Zvcm0vZDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxnaXRodWJfcGFnZXMvc3JjXFxhcHBcXG1vZHVsZXNcXHB1cmNoYXNlLWNvbnRyYWN0XFxjb21wb25lbnRzXFxwdXJjaGFzZS1jb250cmFjdFxccGFnZXNcXGZvcm1cXHB1cmNoYXNlLWNvbnRyYWN0LWZvcm0uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL21vZHVsZXMvcHVyY2hhc2UtY29udHJhY3QvY29tcG9uZW50cy9wdXJjaGFzZS1jb250cmFjdC9wYWdlcy9mb3JtL2Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZ2l0aHViX3BhZ2VzL3NyY1xcc3R5bGVzXFxfY29uc3RhbnRzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7O0VBS1Esa0JBQWtCLEVBQUE7O0FBTDFCO0VBU1EsWUFBWSxFQUFBOztBQVRwQjtJQVlVLHlCQUF5QixFQUFBOztBQVpuQztNQWVZLGlCQzBCTSxFQUFBOztBRHpDbEI7UUFrQmMsZUFBZSxFQUFBOztBQWxCN0I7RUF5QlEsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3B1cmNoYXNlLWNvbnRyYWN0L2NvbXBvbmVudHMvcHVyY2hhc2UtY29udHJhY3QvcGFnZXMvZm9ybS9wdXJjaGFzZS1jb250cmFjdC1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcImNvbnN0YW50c1wiO1xyXG5AaW1wb3J0IFwibWl4aW5zXCI7XHJcblxyXG46aG9zdCB7XHJcbiAgLmdyaWQtY2VsbC1pdGVtLXN0cnVjdHVyZSB7XHJcbiAgICAubGlzdC13aXRoLWRldGFpbHMge1xyXG4gICAgICAuZGV0YWlscyxcclxuICAgICAgLmxpc3Qge1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDEwMHJlbTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLmRldGFpbHMge1xyXG4gICAgICAgIGZsZXgtZ3JvdzogMTtcclxuXHJcbiAgICAgICAgLnN0cnVjdHVyZS1ub2RlLWFjdGlvbi1saXN0IHtcclxuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcblxyXG4gICAgICAgICAgJiA+IGJ1dHRvbiB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogJG1hcmdpbi12YWx1ZTtcclxuXHJcbiAgICAgICAgICAgICY6bGFzdC1vZi10eXBlIHtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5saXN0IHtcclxuICAgICAgICBtaW4td2lkdGg6IDI1cmVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIiRwcmltYXJ5LWJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcclxuJHByaW1hcnktdGV4dC1jb2xvcjogIzAwMDtcclxuJHNlY29uZGFyeS10ZXh0LWNvbG9yOiAjNTk1OTU5O1xyXG4kYWNjZW50LWNvbG9yOiAjMDE1NzliO1xyXG5cclxuJGJvZHktYmFja2dyb3VuZC1jb2xvcjogI2U4ZWJlZDtcclxuJHRvcGJhci1jb2xvcjogI2ZhZmFmYTtcclxuXHJcbi8vICRwcmltYXJ5LWJhY2tncm91bmQtY29sb3I6ICMxZTFlMWU7XHJcbi8vICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjogIzMzMzMzMztcclxuLy8gJHByaW1hcnktdGV4dC1jb2xvcjogI2U4ZThlODtcclxuLy8gJHNlY29uZGFyeS10ZXh0LWNvbG9yOiAjZmZmO1xyXG4vLyAkYWNjZW50LWNvbG9yOiAjOWNkY2ZlO1xyXG5cclxuJGJvcmRlci1jb2xvcjogJHNlY29uZGFyeS10ZXh0LWNvbG9yO1xyXG4kYm9yZGVyLWNvbG9yLS1kaXNhYmxlZDogdHJhbnNwYXJlbnQ7XHJcbiRib3JkZXItY29sb3ItLWZvY3VzOiAkYWNjZW50LWNvbG9yO1xyXG4kYm9yZGVyLWNvbG9yLS1ob3ZlcjogIzFhMWExYTtcclxuXHJcbiRncmVlbi1kYXJrMTogIzI3NjMyYTtcclxuJGdyZWVuLWxpZ2h0MTogIzRjYWY1MDtcclxuJG9yYW5nZTogI2ZmYzEwNztcclxuJHJlZC1kYXJrMTogI2E4MjUyNTtcclxuJHJlZC1saWdodDE6ICNmNjY4NWU7XHJcbiRibHVlLWxpZ2h0MTogI2I4ZDBlODtcclxuJGJsdWUtZGFyazE6ICMwMDZlYTk7XHJcbiRncmV5MTogI2M4ZDRkNjtcclxuJHllbGxvdzE6ICNkZGRmMDA7XHJcblxyXG4kY3JpdGljYWwtdmFsdWUtZGFyazogI2ZiYTY0MzsgLy8gVE9ETzogcmVtb3ZlIGl0XHJcbiRjcml0aWNhbC12YWx1ZS1saWdodDogI2ZlY2M4ZTsgLy8gVE9ETzogcmVtb3ZlIGl0XHJcbiRjYWxlbmRhci15ZWxsb3c6ICNlZmVmYjA7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG4kYmFkLXZhbHVlLWRhcms6ICNmZjY3NTg7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuJGJvcmRlci1yYWRpdXM6IDRweDtcclxuJGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiRib3JkZXItd2lkdGg6IDFweDtcclxuJGZvbnQtZmFtaWx5OiBcIkxhdG9MYXRpbldlYlwiO1xyXG4kZm9udC1zaXplOiAwLjg3NXJlbTtcclxuJGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiRsaW5lLWhlaWdodDogMS40Mjg1NzE0Mjk7XHJcbiRtYXJnaW4tdmFsdWU6IDhweDtcclxuJHBhZ2UtbWF4LXdpZHRoOiAxMzY2cHg7XHJcbiRhdHRyaWJ1dGVzLWNvbHVtbi13aWR0aC00OiA0O1xyXG4kYXR0cmlidXRlcy1jb2x1bW4td2lkdGgtMzogMztcclxuJGF0dHJpYnV0ZXMtY29sdW1uLXdpZHRoLTI6IDI7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcblxyXG4kbGVmdC1zaWRlYmFyLXdpZHRoLS1jb2xsYXBzZWQ6IDUwcHg7XHJcbiRsZWZ0LXNpZGViYXItd2lkdGgtLWV4cGFuZGVkOiAyMjBweDtcclxuJHJpZ2h0LXNpZGViYXItd2lkdGgtLWNvbGxhcHNlZDogNTBweDtcclxuJHJpZ2h0LXNpZGViYXItd2lkdGgtLWV4cGFuZGVkOiAyMjBweDtcclxuJHRvcGJhci1oZWlnaHQ6IDQwcHg7XHJcbiRtYWluYmFyLWJvcmRlci1jb2xvcjogZGFya2VuKCRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvciwgNSUpO1xyXG4kbWFpbmJhci1ib3JkZXItd2lkdGg6IDJweDtcclxuJHBhZ2UtaGVhZGVyLWhlaWdodDogNS41cmVtO1xyXG4kZm9ybS1jb250cm9sLWhlaWdodDogMi41cmVtO1xyXG4kY2hlY2tib3gtaGVpZ2h0OiAxLjI1cmVtO1xyXG4kcmFkaW9idXR0b24taGVpZ2h0OiAxLjI1cmVtO1xyXG4iXX0= */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem, TreeNode } from 'primeng/api';\r\nimport { Observable, forkJoin, of } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { MaterialFormService } from '../../../../../../main/logistics/material/form/material-form.service';\r\nimport { WorkOrderFormService } from '../../../../../../main/maintenance/work-order/form/work-order-form.service';\r\nimport { ObjectStatusComponent } from '../../../../../../main/object-status/object-status.component';\r\nimport { OverlayService } from '../../../../../../main/overlay/overlay.service';\r\nimport { PageTocService } from '../../../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { PageTocEntry } from '../../../../../../shared/components/component-sidebar/types/page-toc-entry.interface';\r\nimport { ComponentConstants } from '../../../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { FormatSelectOptionPipe } from '../../../../../../shared/pipes/format-select-option.pipe';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../../../shared/services/tab.service';\r\nimport { BidtDocumentDTO } from '../../../../../../shared/types/api-types/bidt-document-dto.interface';\r\nimport { BidtEmployeeDTO } from '../../../../../../shared/types/api-types/bidt-employee-dto.interface';\r\nimport { BidtSiteDTO } from '../../../../../../shared/types/api-types/bidt-site-dto.interface';\r\nimport { FormPageComponent } from '../../../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../../../shared/types/table-column.interface';\r\nimport { ListUtils } from '../../../../../../shared/utils/list-utils';\r\nimport { StringUtils } from '../../../../../../shared/utils/string-utils';\r\nimport { PurchaseContractPropertyConstants } from '../../../../constants/properties/purchase-contract-property-constants';\r\nimport { PurchaseContractStatusConstants } from '../../../../constants/properties/purchasecontract/purchase-contract-status-constants';\r\nimport { BidtPurchaseContractDTOId } from '../../../../dtos/bidt-purchase-contract-dto-id.interface';\r\nimport { BidtPurchaseContractDTO } from '../../../../dtos/bidt-purchase-contract-dto.interface';\r\nimport { BidtPurchaseContractElementDTO } from '../../../../dtos/bidt-purchase-contract-element-dto.interface';\r\nimport { BidtPurchaseContractItemDTO } from '../../../../dtos/bidt-purchase-contract-item-dto.interface';\r\nimport { BidtPurchaseContractPartnerDTO } from '../../../../dtos/bidt-purchase-contract-partner-dto.interface';\r\nimport { BidtPurchaseContractSliceDTO } from '../../../../dtos/bidt-purchase-contract-slice-dto.interface';\r\nimport { SaveBidtPurchaseContractInput } from '../../../../dtos/input/save-bidt-purchase-contract-input.interface';\r\nimport { PurchaseContractElementService } from '../../../../services/purchase-contract-element.service';\r\nimport { PurchaseContractItemService } from '../../../../services/purchase-contract-item.service';\r\nimport { PurchaseContractService } from '../../../../services/purchase-contract.service';\r\nimport { LabelValueHelper } from '../../../../utils/label-value-helper';\r\nimport { TableDataSourceWithHistory } from '../../../../utils/table-data-source-with-history';\r\nimport { TreeModifications } from '../../../../utils/tree/tree-modifications';\r\nimport { TreeNodeUtils } from '../../../../utils/tree/tree-node-utils';\r\nimport { DocumentSectionComponent } from '../../../shared/document-section/document-section.component';\r\n\r\ninterface ContractPartnerRow {\r\n  bidtPurchaseContractPartnerDTO: BidtPurchaseContractPartnerDTO;\r\n  customerCode?: string;\r\n  roleLabel?: string;\r\n}\r\ninterface ContractSliceRow {\r\n  bidtPurchaseContractSliceDTO: BidtPurchaseContractSliceDTO;\r\n  sliceTypeLabel?: string;\r\n  sliceStatusLabel?: string;\r\n  sliceItemsTree?: TreeModifications<ContractItemRow, string>;\r\n}\r\n\r\ninterface ContractItemRow {\r\n  bidtPurchaseContractItemDTO: BidtPurchaseContractItemDTO;\r\n  itemElementAndServicesTableDataSource?: TableDataSourceWithHistory<ContractElementRow>;\r\n}\r\n\r\ninterface ContractElementRow {\r\n  bidtPurchaseContractElementDTO: BidtPurchaseContractElementDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-purchase-contract-form',\r\n  styleUrls: ['./purchase-contract-form.component.scss'],\r\n  templateUrl: './purchase-contract-form.component.html'\r\n})\r\nexport class PurchaseContractFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public static readonly HEADER_DATA_ANCHOR_ID: string = 'headerDataAnchor';\r\n  public static readonly PARTNER_ANCHOR_ID: string = 'partnernAnchor';\r\n  public static readonly SLICE_ANCHOR_ID: string = 'sliceAnchor';\r\n  public static readonly OFFICE_PROVISION_ANCHOR_ID: string = 'officeProvisionAnchor';\r\n  public static readonly PRICE_TABLE_ANCHOR_ID: string = 'priceTableAnchor';\r\n  public static readonly DOCUMENTS_ANCHOR_ID: string = 'documentsAnchor';\r\n\r\n  public readonly component: typeof PurchaseContractFormComponent;\r\n\r\n  public purchaseContract: BidtPurchaseContractDTO;\r\n  public showStatusUpdatesPopup: boolean;\r\n  public showSaveSpinner: boolean;\r\n\r\n  // Item structure dialog popup\r\n  public currentItem: BidtPurchaseContractItemDTO | undefined;\r\n  public isNewItem: boolean;\r\n  public isReadOnlyItemPopup: boolean;\r\n  public showItemPopup: boolean;\r\n\r\n  // Dropdowns\r\n  public statusList: LabelValue<string>[];\r\n  public typeList: LabelValue<string>[];\r\n  public pcTypeList: LabelValue<string>[];\r\n  public pcCurrencyList: LabelValue<string>[];\r\n  public sliceUnitList: LabelValue<string>[];\r\n  public pcSiteList: SelectItem[];\r\n  public partnerRoleList: LabelValue<string>[];\r\n  public itemStatusStateList: LabelValue<string>[];\r\n\r\n  // Items\r\n  public itemsTreeTable?: TreeModifications<ContractItemRow, string>;\r\n  public itemNodeSelected: TreeNode | undefined;\r\n  public itemSelected: ContractItemRow | undefined;\r\n  public itemsTreeTableColList: TableColumn[];\r\n\r\n  // Slices\r\n  public slicesPurchaseContract: BidtPurchaseContractSliceDTO;\r\n  public slicesTableDataSource: TableDataSourceWithHistory<ContractSliceRow>;\r\n  public slicesDialogOpenMode: ComponentOpenMode;\r\n  public showSlicesDialog: boolean;\r\n  public isNewSlice: boolean;\r\n  public slicePopupData: BidtPurchaseContractSliceDTO;\r\n  public showSliceEditPopup: boolean;\r\n  public currentTabId: string;\r\n  public tabSlicesId: string;\r\n  public isReadOnlyPurchaseContractSliceDialog: boolean;\r\n  public sliceStatusList: LabelValue<string>[];\r\n  public sliceTypeList: LabelValue<string>[];\r\n  public sliceSelected: ContractSliceRow;\r\n\r\n  // Elements et services\r\n  public elementAndServicesTableDataSource: TableDataSourceWithHistory<ContractElementRow>;\r\n  public elementAndServicesDialogOpenMode: ComponentOpenMode;\r\n  public showElementAndServicesDialog: boolean;\r\n  public isNewElementAndServices: boolean;\r\n  public elementAndServicesPopupData?: BidtPurchaseContractElementDTO;\r\n\r\n  // Partner\r\n  public partnerTableDataSource: TableDataSourceWithHistory<ContractPartnerRow>;\r\n  public currentPartner: BidtPurchaseContractPartnerDTO;\r\n  public partnerDialogOpenMode: ComponentOpenMode;\r\n  public showPartnerDialog: boolean;\r\n\r\n  // Documents\r\n  public documentsList: BidtDocumentDTO[];\r\n  public bidtDocumentDTO: BidtDocumentDTO;\r\n  // Contract manager\r\n  public contractManagerName: string;\r\n\r\n  // Parent Contract id\r\n  public parentContractLabel: string | undefined;\r\n\r\n  public showParentIdDialog: boolean;\r\n  public showEmployeePopup: boolean;\r\n\r\n  // Table of content ***********************************************************\r\n\r\n  @ViewChild(DocumentSectionComponent)\r\n  public documentComponent: DocumentSectionComponent;\r\n\r\n  @ViewChild(PurchaseContractFormComponent.HEADER_DATA_ANCHOR_ID)\r\n  public headerDataEltRef: ElementRef;\r\n\r\n  @ViewChild(PurchaseContractFormComponent.PARTNER_ANCHOR_ID)\r\n  public partnerEltRef: ElementRef;\r\n\r\n  @ViewChild(PurchaseContractFormComponent.SLICE_ANCHOR_ID)\r\n  public sliceEltRef: ElementRef;\r\n\r\n  @ViewChild(PurchaseContractFormComponent.OFFICE_PROVISION_ANCHOR_ID)\r\n  public officeProvisionEltRef: ElementRef;\r\n\r\n  @ViewChild(PurchaseContractFormComponent.PRICE_TABLE_ANCHOR_ID)\r\n  public priceTableEltRef: ElementRef;\r\n\r\n  @ViewChild(PurchaseContractFormComponent.DOCUMENTS_ANCHOR_ID)\r\n  public documentsEltRef: ElementRef;\r\n\r\n  public toc: PageTocEntry[];\r\n\r\n  // ****************************************************************************\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    pageTocService: PageTocService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public materialFormService: MaterialFormService,\r\n    public sessionService: SessionService,\r\n    public translateService: TranslateService,\r\n    private readonly purchaseContractService: PurchaseContractService,\r\n    private readonly purchaseContractItemService: PurchaseContractItemService,\r\n    private readonly purchaseContractElementService: PurchaseContractElementService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly workOrderFormService: WorkOrderFormService,\r\n    private readonly _overlayService: OverlayService,\r\n    private readonly _formatSelectOption: FormatSelectOptionPipe\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Read,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n\r\n    this.component = PurchaseContractFormComponent;\r\n\r\n    this.pcTypeList = [];\r\n    this.statusList = [];\r\n    this.typeList = [];\r\n    this.sliceStatusList = [];\r\n    this.sliceTypeList = [];\r\n    this.pcCurrencyList = [];\r\n    this.pcSiteList = [];\r\n    this.partnerRoleList = [];\r\n    this.itemStatusStateList = [];\r\n\r\n    this.currentItem = undefined;\r\n    this.isReadOnlyItemPopup = true;\r\n    this.showItemPopup = false;\r\n\r\n    this.onBeforeLoad();\r\n    this.tabSlicesId = 'slices';\r\n    this.initItemTreeTableColList();\r\n  }\r\n\r\n  private onBeforeLoad() {\r\n    this.showEmployeePopup = false;\r\n    this.showParentIdDialog = false;\r\n    super.registerPageTocEntryObservable();\r\n    this.initSlicesTableDataSource();\r\n\r\n    this.loadReferentialData();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.PCT_PURCHASE_CONTRACT_FORM;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.updateOpenMode(this.componentData.openMode);\r\n\r\n    this.setTableOfContent();\r\n\r\n    this.init();\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n    this.reload();\r\n  }\r\n\r\n  public edit(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public reload(): void {\r\n    this.init();\r\n  }\r\n\r\n  public save(): void {\r\n    if (this.isScreenValidated()) {\r\n      this.savePurchaseContract({\r\n        bidtPurchaseContractDTO: this.purchaseContract,\r\n        partnersModifications: this.partnerTableDataSource.mapListModifications(\r\n          (row) => row.bidtPurchaseContractPartnerDTO\r\n        ),\r\n        slicesModifications: this.slicesTableDataSource.mapListModifications((row) => ({\r\n          bidtPurchaseContractSliceDTO: row.bidtPurchaseContractSliceDTO,\r\n          itemsTreeModifications:\r\n            row.sliceItemsTree &&\r\n            row.sliceItemsTree.mapTreeModifications((itemRow: ContractItemRow) => ({\r\n              bidtPurchaseContractItemDTO: itemRow.bidtPurchaseContractItemDTO,\r\n              elementsModificationsDTO:\r\n                itemRow.itemElementAndServicesTableDataSource &&\r\n                itemRow.itemElementAndServicesTableDataSource.mapListModifications((elementRow) => ({\r\n                  bidtPurchaseContractElementDTO: elementRow.bidtPurchaseContractElementDTO\r\n                }))\r\n            }))\r\n        })),\r\n        documentsModifications: this.documentComponent.getDocumentsModifications()\r\n      });\r\n    }\r\n  }\r\n\r\n  private isScreenValidated(): boolean {\r\n    let isScreenValidated = true;\r\n    // Validating purchase contract mandatory fields\r\n    if (\r\n      StringUtils.isNullOrEmpty(this.purchaseContract.pcNumber) ||\r\n      StringUtils.isNullOrEmpty(this.purchaseContract.statusState) ||\r\n      StringUtils.isNullOrEmpty(this.purchaseContract.pcLegalCommitment) ||\r\n      StringUtils.isNullOrEmpty(this.purchaseContract.pcLabel)\r\n    ) {\r\n      isScreenValidated = false;\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n\r\n    const sliceOrderDuplicate = this.slicesTableDataSource.dataSrc.filter((sliceRow, index) => {\r\n      return (\r\n        sliceRow.bidtPurchaseContractSliceDTO &&\r\n        index !==\r\n          this.slicesTableDataSource.dataSrc.findIndex(\r\n            (otherRow) =>\r\n              otherRow.bidtPurchaseContractSliceDTO &&\r\n              otherRow.bidtPurchaseContractSliceDTO.pcsOrder === sliceRow.bidtPurchaseContractSliceDTO.pcsOrder\r\n          )\r\n      );\r\n    });\r\n\r\n    if (sliceOrderDuplicate.length > 0) {\r\n      isScreenValidated = false;\r\n      this.messageService.showWarningMessage(this.getTranslateKey('errorDuplicateSliceNumber'));\r\n    }\r\n\r\n    // A supplier is mandatory on the contract\r\n    // TODO BRASIDAS : Add supplier support to enforce rule that at least one supplier should be selected\r\n    /*if (\r\n      !this.partnerTableDataSource.dataSrc.some(\r\n        (row) => row.bidtPurchaseContractPartnerDTO.pcpRole === PartnerRoleConstants.SUPPLIER\r\n      )\r\n    ) {\r\n      isScreenValidated = false;\r\n      this.messageService.showWarningMessage(this.getTranslateKey('errorNoSupplier'));\r\n    }*/\r\n\r\n    return isScreenValidated;\r\n  }\r\n\r\n  private savePurchaseContract(saveBidoCustomerInput: SaveBidtPurchaseContractInput): void {\r\n    this.showSaveSpinner = true;\r\n    this.purchaseContractService.saveBidtPurchaseContract(saveBidoCustomerInput).subscribe(\r\n      (result) => {\r\n        if (!this.purchaseContract.id) {\r\n          if (result.id) {\r\n            const purchaseContractId: BidtPurchaseContractDTOId = {\r\n              id: result.id\r\n            };\r\n            this.componentData.objectId = this.serializationService.serialize(purchaseContractId);\r\n          }\r\n          this.updateOpenMode(ComponentOpenMode.Write);\r\n          if (this.purchaseContract.pcNumber) {\r\n            this.displayComponentContext(this.purchaseContract.pcNumber, this.isCreateOpenMode);\r\n          }\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnCreatePurchaseContract'));\r\n        } else {\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnUpdatePurchaseContract'));\r\n        }\r\n        this.reload();\r\n        this.showSaveSpinner = false;\r\n      },\r\n      (error) => {\r\n        this.showSaveSpinner = false;\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnSave'));\r\n      }\r\n    );\r\n  }\r\n\r\n  private init(): void {\r\n    this.purchaseContract = {};\r\n    this.itemsTreeTable = undefined;\r\n    this.itemNodeSelected = undefined;\r\n    this.itemSelected = undefined;\r\n\r\n    this.loadPurchaseContract();\r\n    this.initTablePartnerCols();\r\n    this.loadPartner();\r\n    this.initTableElementAndServicesCols();\r\n    this.loadSlices();\r\n    this.loadPartner();\r\n    this.loadDocuments();\r\n    this.getSiteList();\r\n  }\r\n\r\n  private loadPurchaseContract(): void {\r\n    if (this.componentData && this.componentData.objectId) {\r\n      // Load purchase contract object\r\n      const contractId: BidtPurchaseContractDTOId = this.serializationService.deserialize(this.componentData.objectId);\r\n\r\n      this.purchaseContractService.findBidtPurchaseContract(contractId).subscribe(\r\n        (result) => {\r\n          if (!!result) {\r\n            this.purchaseContract = result;\r\n\r\n            if (!!this.purchaseContract.bidtEmployeeId) {\r\n              this.workOrderFormService.getEmployeeById(this.purchaseContract.bidtEmployeeId).subscribe((employee) => {\r\n                this.contractManagerName = this.getEmployeeName(employee);\r\n              });\r\n            }\r\n\r\n            if (!!this.purchaseContract.bidtPurchaseContractId) {\r\n              this.purchaseContractService\r\n                .findBidtPurchaseContract({ id: this.purchaseContract.bidtPurchaseContractId })\r\n                .subscribe((contract) => {\r\n                  this.parentContractLabel = this.getParentContractLabel(contract);\r\n                });\r\n            }\r\n\r\n            if (this.purchaseContract.pcNumber) {\r\n              this.displayComponentContext(this.purchaseContract.pcNumber, this.isCreateOpenMode);\r\n            }\r\n          }\r\n        },\r\n        () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadingContract'));\r\n        }\r\n      );\r\n    } else {\r\n      // Creation initialisation\r\n      this.purchaseContract = {\r\n        pcCreationDate: new Date(),\r\n        pcUpdateDate: new Date(),\r\n        pcValidityStartDate: new Date(),\r\n        pcValidityEndDate: new Date(),\r\n        statusState: PurchaseContractStatusConstants.CREATED\r\n      };\r\n    }\r\n  }\r\n\r\n  // Load dropdown lists\r\n  private loadReferentialData(): void {\r\n    forkJoin({\r\n      statusList: this.getReferencialObservable(this.statusList, PurchaseContractPropertyConstants.CONTRACT_STATUS_MAP),\r\n      typeList: this.getReferencialObservable(this.typeList, PurchaseContractPropertyConstants.CONTRACT_ITEM_TYPE_MAP),\r\n      sliceStatusList: this.getReferencialObservable(\r\n        this.sliceStatusList,\r\n        PurchaseContractPropertyConstants.CONTRACT_SLICE_STATUS_MAP\r\n      ),\r\n      sliceTypeList: this.getReferencialObservable(\r\n        this.sliceTypeList,\r\n        PurchaseContractPropertyConstants.CONTRACT_SLICE_TYPE_MAP\r\n      ),\r\n      pcTypeList: this.getReferencialObservable(this.pcTypeList, PurchaseContractPropertyConstants.CONTRACT_TYPE_MAP),\r\n      pcCurrencyList: this.getReferencialObservable(this.pcCurrencyList, GenericPropertyConstants.CURRENCY_MAP),\r\n      itemStatusList: this.getReferencialObservable(\r\n        this.itemStatusStateList,\r\n        PurchaseContractPropertyConstants.CONTRACT_ITEM_STATUS_MAP\r\n      ),\r\n      sliceUnitList: this.getReferencialObservable(\r\n        this.pcCurrencyList,\r\n        GenericPropertyConstants.MISSION_PERIODICITY_TYPE_MAP\r\n      ),\r\n      partnerRoleList: this.getReferencialObservable(\r\n        this.partnerRoleList,\r\n        PurchaseContractPropertyConstants.PARTNER_ROLE_MAP\r\n      )\r\n    }).subscribe((result) => {\r\n      this.statusList = result.statusList;\r\n      this.typeList = result.typeList;\r\n      this.sliceStatusList = result.sliceStatusList;\r\n      this.sliceTypeList = result.sliceTypeList;\r\n      this.pcTypeList = result.pcTypeList;\r\n      this.pcCurrencyList = result.pcCurrencyList;\r\n      this.itemStatusStateList = result.itemStatusList;\r\n      this.sliceUnitList = result.sliceUnitList;\r\n      this.partnerRoleList = result.partnerRoleList;\r\n    });\r\n  }\r\n\r\n  // Get site list data from server\r\n  public getSiteList(): void {\r\n    this.materialFormService.findAllSites().subscribe((result) => {\r\n      this.pcSiteList = ListUtils.orEmpty(result).map((site: BidtSiteDTO) => {\r\n        return {\r\n          label: `${site.siteCode}-${site.siteName}`,\r\n          value: site.siteId\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  private loadDocuments(): void {\r\n    if (this.componentData && this.componentData.objectId) {\r\n      const contractId: BidtPurchaseContractDTOId = this.serializationService.deserialize(this.componentData.objectId);\r\n\r\n      this.purchaseContractService\r\n        .findBidtDocumentsByPurchaseContractId(contractId)\r\n        .subscribe((results) => (this.documentsList = results));\r\n    }\r\n  }\r\n\r\n  private getReferencialObservable(\r\n    currentList: LabelValue<string>[],\r\n    mapKey: string\r\n  ): Observable<LabelValue<string>[]> {\r\n    return ListUtils.isEmpty(currentList) ? this.propertiesService.getValue(mapKey) : of(currentList);\r\n  }\r\n\r\n  private loadPartner(): void {\r\n    this.partnerTableDataSource.setData([]);\r\n    if (this.componentData && this.componentData.objectId) {\r\n      const contractId: BidtPurchaseContractDTOId = this.serializationService.deserialize(this.componentData.objectId);\r\n\r\n      this.partnerTableDataSource.isLoading = true;\r\n      this.purchaseContractService\r\n        .findBidoPartnerByPurchaseContractId(contractId)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.partnerTableDataSource.isLoading = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (result) => {\r\n            if (!!result) {\r\n              const partnerList = result.map((partner) => this.getContractPartnerRow(partner));\r\n              this.partnerTableDataSource.setData(partnerList);\r\n            } else {\r\n              this.partnerTableDataSource.setData([]);\r\n            }\r\n          },\r\n          () => {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadingPartners'));\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Table Of Content\r\n   *************************************************************************/\r\n\r\n  private setTableOfContent(): void {\r\n    const headerDataKey = this.getComponentName() + '.' + PurchaseContractFormComponent.HEADER_DATA_ANCHOR_ID;\r\n    const partnerKey = this.getComponentName() + '.' + PurchaseContractFormComponent.PARTNER_ANCHOR_ID;\r\n    const sliceKey = this.getComponentName() + '.' + PurchaseContractFormComponent.SLICE_ANCHOR_ID;\r\n    const officeProvisionKey = this.getComponentName() + '.' + PurchaseContractFormComponent.OFFICE_PROVISION_ANCHOR_ID;\r\n    const priceTableKey = this.getComponentName() + '.' + PurchaseContractFormComponent.PRICE_TABLE_ANCHOR_ID;\r\n    const documentsKey = this.getComponentName() + '.' + PurchaseContractFormComponent.DOCUMENTS_ANCHOR_ID;\r\n    this.translateService\r\n      .get([headerDataKey, partnerKey, sliceKey, officeProvisionKey, priceTableKey, documentsKey])\r\n      .subscribe((results: string[]) => {\r\n        const headerDataLabel = !!results ? results[headerDataKey] : 'Header Data Information';\r\n        const partnerLabel = !!results ? results[partnerKey] : 'Partner Information';\r\n        const sliceLabel = !!results ? results[sliceKey] : 'Slice Information';\r\n        const officeProvisionLabel = !!results ? results[officeProvisionKey] : 'Office / Provision Information';\r\n        const priceTableLabel = !!results ? results[priceTableKey] : 'Price Information';\r\n        const documentsLabel = !!results ? results[documentsKey] : 'Documents';\r\n        this.toc = [\r\n          {\r\n            id: PurchaseContractFormComponent.HEADER_DATA_ANCHOR_ID,\r\n            anchor: this.headerDataEltRef,\r\n            label: headerDataLabel\r\n          },\r\n          {\r\n            id: PurchaseContractFormComponent.PARTNER_ANCHOR_ID,\r\n            anchor: this.partnerEltRef,\r\n            label: partnerLabel\r\n          },\r\n          {\r\n            id: PurchaseContractFormComponent.SLICE_ANCHOR_ID,\r\n            anchor: this.sliceEltRef,\r\n            label: sliceLabel\r\n          },\r\n          {\r\n            id: PurchaseContractFormComponent.OFFICE_PROVISION_ANCHOR_ID,\r\n            anchor: this.officeProvisionEltRef,\r\n            label: officeProvisionLabel\r\n          },\r\n          {\r\n            id: PurchaseContractFormComponent.PRICE_TABLE_ANCHOR_ID,\r\n            anchor: this.priceTableEltRef,\r\n            label: priceTableLabel\r\n          },\r\n          {\r\n            id: PurchaseContractFormComponent.DOCUMENTS_ANCHOR_ID,\r\n            anchor: this.documentsEltRef,\r\n            label: documentsLabel\r\n          }\r\n        ];\r\n\r\n        super.selectPageTocEntry(this.component.HEADER_DATA_ANCHOR_ID);\r\n      });\r\n  }\r\n\r\n  public openStatusUpdatesPopup() {\r\n    this.showStatusUpdatesPopup = true;\r\n  }\r\n\r\n  public selectDocumentSection(selected: boolean): void {\r\n    if (selected) {\r\n      this.selectPageTocEntry(this.component.DOCUMENTS_ANCHOR_ID);\r\n    }\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Table Of Slices\r\n   *************************************************************************/\r\n  private initSlicesTableDataSource(): void {\r\n    this.slicesTableDataSource = new TableDataSourceWithHistory({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'pcsOrder',\r\n          translateKey: this.getTranslateKey('pcsOrder')\r\n        },\r\n        {\r\n          field: 'pcsDescription',\r\n          translateKey: this.getTranslateKey('pcsDescription')\r\n        },\r\n        {\r\n          field: 'statusState',\r\n          translateKey: this.getTranslateKey('statusState')\r\n        },\r\n        {\r\n          field: 'pcsConsolidationDate',\r\n          translateKey: this.getTranslateKey('pcsConsolidationDate')\r\n        },\r\n        {\r\n          field: 'pcsDuration',\r\n          translateKey: this.getTranslateKey('pcsDuration')\r\n        },\r\n        {\r\n          field: 'pcsStartDate',\r\n          translateKey: this.getTranslateKey('pcsStartDate')\r\n        },\r\n        {\r\n          field: 'pcsEndDate',\r\n          translateKey: this.getTranslateKey('pcsEndDate')\r\n        }\r\n      ],\r\n      data: [],\r\n      allowUniqueValue: true\r\n    });\r\n  }\r\n\r\n  private loadSlices(): void {\r\n    if (this.componentData && this.componentData.objectId) {\r\n      // Load business partner object\r\n      const contractId: BidtPurchaseContractDTOId = this.serializationService.deserialize(this.componentData.objectId);\r\n\r\n      this.slicesTableDataSource.setData([]);\r\n      this.slicesTableDataSource.isLoading = true;\r\n      this.purchaseContractService\r\n        .findSlicesByPurchaseContractId(contractId)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.slicesTableDataSource.isLoading = false;\r\n          })\r\n        )\r\n        .subscribe(\r\n          (result) => {\r\n            if (!!result) {\r\n              this.slicesTableDataSource.setData(result.map((slice) => this.sliceToRow(slice)));\r\n            }\r\n          },\r\n          () => {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadingSlices'));\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  private elementToRow(bidtPurchaseContractElementDTO: BidtPurchaseContractElementDTO): ContractElementRow {\r\n    this.purchaseContractElementService.calculatePrice(bidtPurchaseContractElementDTO);\r\n\r\n    return {\r\n      bidtPurchaseContractElementDTO\r\n    };\r\n  }\r\n\r\n  private sliceToRow(sliceDTO: BidtPurchaseContractSliceDTO): ContractSliceRow {\r\n    return {\r\n      bidtPurchaseContractSliceDTO: sliceDTO,\r\n      sliceStatusLabel: LabelValueHelper.getLabelByValue(this.sliceStatusList, sliceDTO.statusState) || '',\r\n      sliceTypeLabel: LabelValueHelper.getLabelByValue(this.sliceTypeList, sliceDTO.pcsType) || ''\r\n    };\r\n  }\r\n\r\n  public addSlices() {\r\n    this.slicesDialogOpenMode = ComponentOpenMode.Create;\r\n    this.slicePopupData = {};\r\n    this.isNewSlice = true;\r\n    this.openSliceEditPopup();\r\n  }\r\n\r\n  public onAddSlice(ev: BidtPurchaseContractSliceDTO) {\r\n    this.slicesTableDataSource.addData([this.sliceToRow(ev)]);\r\n  }\r\n\r\n  public editSlices() {\r\n    this.slicesDialogOpenMode = ComponentOpenMode.Write;\r\n    this.slicePopupData = { ...this.slicesTableDataSource.dataSelection[0].bidtPurchaseContractSliceDTO };\r\n    this.isNewSlice = false;\r\n    this.openSliceEditPopup();\r\n  }\r\n\r\n  public openSliceEditPopup() {\r\n    this.showSliceEditPopup = true;\r\n  }\r\n\r\n  public openSlices() {\r\n    this.slicesDialogOpenMode = ComponentOpenMode.Read;\r\n    this.slicePopupData = this.slicesTableDataSource.dataSelection[0].bidtPurchaseContractSliceDTO;\r\n    this.isNewSlice = false;\r\n    this.showSliceEditPopup = true;\r\n    // this.isReadOnlyPurchaseContractSliceDialog = true;\r\n  }\r\n\r\n  public onUpdateSlice(ev: BidtPurchaseContractSliceDTO) {\r\n    this.slicesTableDataSource.replaceData(this.slicesTableDataSource.dataSelection[0], this.sliceToRow(ev));\r\n  }\r\n\r\n  public deleteSlices() {\r\n    const partialMessageKey =\r\n      this.slicesTableDataSource.dataSelectionCount > 1 ? 'confirmOnDeleteSlices' : 'confirmOnDeleteSlice';\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.slicesTableDataSource.deleteDataSelection();\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteSlice'));\r\n        this.reinitializeItemTree();\r\n      }\r\n    });\r\n  }\r\n\r\n  public onSliceSelected(_event: { selectedData: ContractSliceRow }): void {\r\n    this.onSliceFocus();\r\n  }\r\n\r\n  public onSliceUnselected(_event: { selectedData: ContractSliceRow }): void {\r\n    this.onSliceFocus();\r\n  }\r\n\r\n  public onSliceFocus(): void {\r\n    if (this.slicesTableDataSource.dataSelectionCount === 1) {\r\n      const currentSlice = this.slicesTableDataSource.dataSelection[0];\r\n      // Tree already loaded\r\n      if (currentSlice.sliceItemsTree) {\r\n        // Tree already loaded => Direct affectation\r\n        this.itemsTreeTable = currentSlice.sliceItemsTree;\r\n      } else {\r\n        this.loadSliceItems(currentSlice);\r\n      }\r\n      this.sliceSelected = currentSlice;\r\n    } else {\r\n      this.reinitializeItemTree();\r\n    }\r\n  }\r\n\r\n  private reinitializeItemTree(): void {\r\n    this.itemsTreeTable = undefined;\r\n    this.itemSelected = undefined;\r\n    this.itemNodeSelected = undefined;\r\n    this.initTableElementAndServicesCols();\r\n  }\r\n\r\n  /**************************************************************************\r\n   * PARTNER\r\n   *************************************************************************/\r\n\r\n  public getContractPartnerRow(bidtPurchaseContractPartnerDTO: BidtPurchaseContractPartnerDTO): ContractPartnerRow {\r\n    return {\r\n      bidtPurchaseContractPartnerDTO,\r\n      customerCode: bidtPurchaseContractPartnerDTO.customerCode,\r\n      roleLabel: LabelValueHelper.getLabelByValue(this.partnerRoleList, bidtPurchaseContractPartnerDTO.pcpRole)\r\n    };\r\n  }\r\n\r\n  private initTablePartnerCols(): void {\r\n    this.partnerTableDataSource = new TableDataSourceWithHistory({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'customerCode', translateKey: this.getTranslateKey('customerCode') },\r\n        { field: 'roleLabel', translateKey: this.getTranslateKey('roleLabel') }\r\n      ],\r\n      data: [],\r\n      allowUniqueValue: true,\r\n      propertiesWitchIdentifyData: ['customerCode', 'roleLabel'],\r\n      errorOnAddedDuplicate: this.getTranslateKey('errorOnPartnerDuplicate'),\r\n      errorOnUpdatedDuplicate: this.getTranslateKey('errorOnPartnerDuplicate')\r\n    });\r\n  }\r\n\r\n  public addPartner() {\r\n    this.partnerDialogOpenMode = ComponentOpenMode.Create;\r\n    this.currentPartner = {};\r\n    this.showPartnerDialog = true;\r\n  }\r\n\r\n  public onAddPartner(ev: BidtPurchaseContractPartnerDTO) {\r\n    this.partnerTableDataSource.addData([this.getContractPartnerRow(ev)]);\r\n  }\r\n\r\n  public editPartner() {\r\n    this.currentPartner = this.partnerTableDataSource.dataSelection[0].bidtPurchaseContractPartnerDTO;\r\n    this.partnerDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showPartnerDialog = true;\r\n  }\r\n\r\n  public onUpdatePartner(ev: BidtPurchaseContractPartnerDTO) {\r\n    this.partnerTableDataSource.replaceData(\r\n      this.partnerTableDataSource.dataSelection[0],\r\n      this.getContractPartnerRow(ev)\r\n    );\r\n  }\r\n\r\n  public deletePartner() {\r\n    const partialMessageKey =\r\n      this.partnerTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedPartners'\r\n        : 'confirmDeleteSelectedPartner';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.partnerTableDataSource.deleteDataSelection();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**************************************************************************\r\n   * ELEMENT AND SERVICES\r\n   *************************************************************************/\r\n\r\n  private initTableElementAndServicesCols(): void {\r\n    this.elementAndServicesTableDataSource = this.getItemAndServiceDataSourceWithHistory();\r\n  }\r\n\r\n  public addElementAndServices() {\r\n    this.elementAndServicesPopupData = undefined;\r\n    this.elementAndServicesDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showElementAndServicesDialog = true;\r\n  }\r\n\r\n  public onAddElementAndServices(ev: BidtPurchaseContractElementDTO) {\r\n    this.elementAndServicesTableDataSource.addData([this.elementToRow(ev)]);\r\n    this.onElementsAndServicesModification();\r\n  }\r\n\r\n  private onElementsAndServicesModification(): void {\r\n    if (!!this.itemsTreeTable && !!this.itemNodeSelected) {\r\n      this.itemsTreeTable.markAsUpdated(this.itemNodeSelected);\r\n    }\r\n    this.onItemsTreeModification();\r\n  }\r\n\r\n  public editElementAndServices() {\r\n    this.elementAndServicesDialogOpenMode = ComponentOpenMode.Write;\r\n    this.elementAndServicesPopupData = {\r\n      ...this.elementAndServicesTableDataSource.dataSelection[0].bidtPurchaseContractElementDTO\r\n    };\r\n    this.isNewElementAndServices = false;\r\n    this.showElementAndServicesDialog = true;\r\n  }\r\n\r\n  public onUpdateElementAndServices(ev: BidtPurchaseContractElementDTO) {\r\n    this.elementAndServicesTableDataSource.replaceData(\r\n      this.elementAndServicesTableDataSource.dataSelection[0],\r\n      this.elementToRow(ev)\r\n    );\r\n    this.onElementsAndServicesModification();\r\n  }\r\n\r\n  public deleteElementAndService() {\r\n    const partialMessageKey =\r\n      this.elementAndServicesTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedElements'\r\n        : 'confirmDeleteSelectedElement';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.elementAndServicesTableDataSource.deleteDataSelection();\r\n        this.onElementsAndServicesModification();\r\n      }\r\n    });\r\n  }\r\n  /*************************************************************************\r\n   * Item Structure Popup\r\n   *************************************************************************/\r\n\r\n  private loadSliceItems(slice: ContractSliceRow): void {\r\n    const itemIdGetter = (row: ContractItemRow) =>\r\n      row.bidtPurchaseContractItemDTO && row.bidtPurchaseContractItemDTO.id;\r\n    const itemParentIdSetter = (row: ContractItemRow, parentId?: string) =>\r\n      (row.bidtPurchaseContractItemDTO.bidtPurchaseContractItemId = parentId);\r\n    if (!slice.bidtPurchaseContractSliceDTO || slice.bidtPurchaseContractSliceDTO.id === undefined) {\r\n      // Added slice => Direct initialisation\r\n      slice.sliceItemsTree = new TreeModifications<ContractItemRow, string>(itemIdGetter, itemParentIdSetter);\r\n      this.itemsTreeTable = slice.sliceItemsTree;\r\n    } else {\r\n      // Existing slice => items tree loading\r\n      this.purchaseContractItemService\r\n        .getContractSliceItems(slice.bidtPurchaseContractSliceDTO.id)\r\n        .subscribe((itemsTree) => {\r\n          slice.sliceItemsTree = new TreeModifications<ContractItemRow, string>(itemIdGetter, itemParentIdSetter);\r\n          slice.sliceItemsTree.tree = TreeNodeUtils.mapTreeNode(itemsTree, this.initContractItemRow);\r\n          TreeNodeUtils.setExpanded(slice.sliceItemsTree.tree);\r\n          this.itemsTreeTable = slice.sliceItemsTree;\r\n        });\r\n    }\r\n  }\r\n\r\n  private initContractItemRow(item: BidtPurchaseContractItemDTO): ContractItemRow {\r\n    return {\r\n      bidtPurchaseContractItemDTO: item\r\n    };\r\n  }\r\n\r\n  private initItemTreeTableColList(): void {\r\n    this.itemsTreeTableColList = [{ field: 'pciLabel', alignment: 'left' }];\r\n  }\r\n\r\n  public onItemSelection(itemNode: TreeNode | undefined): void {\r\n    this.itemNodeSelected = itemNode;\r\n    this.itemSelected = this.itemNodeSelected && this.itemNodeSelected.data;\r\n    if (!!this.itemSelected) {\r\n      if (this.itemSelected.itemElementAndServicesTableDataSource) {\r\n        this.elementAndServicesTableDataSource = this.itemSelected.itemElementAndServicesTableDataSource;\r\n      } else {\r\n        this.loadItemElements();\r\n      }\r\n    }\r\n  }\r\n\r\n  public onAddItem(): void {\r\n    // Show popup to create a new items\r\n    this.isNewItem = true;\r\n    if (this.sliceSelected && this.sliceSelected.bidtPurchaseContractSliceDTO) {\r\n      this.currentItem = {\r\n        pciStartDate: this.sliceSelected.bidtPurchaseContractSliceDTO.pcsStartDate,\r\n        pciEndDate: this.sliceSelected.bidtPurchaseContractSliceDTO.pcsEndDate\r\n      };\r\n    } else {\r\n      this.currentItem = undefined;\r\n    }\r\n    this.isReadOnlyItemPopup = false;\r\n    this.showItemPopup = true;\r\n  }\r\n\r\n  public onItemsTreeModification() {\r\n    // Force to register slice as modified to make its item modifications available on save\r\n    this.slicesTableDataSource.markAsUpdated(this.slicesTableDataSource.dataSelection[0]);\r\n  }\r\n  public addNewItem(newItem: BidtPurchaseContractItemDTO): void {\r\n    if (this.itemsTreeTable) {\r\n      this.itemsTreeTable.addChildNode(this.initContractItemRow(newItem), this.itemNodeSelected);\r\n      this.onItemsTreeModification();\r\n    }\r\n  }\r\n\r\n  public onEditItem(): void {\r\n    if (this.itemSelected) {\r\n      // Show popup to edit selected item\r\n      this.currentItem = { ...this.itemSelected.bidtPurchaseContractItemDTO };\r\n      this.isNewItem = false;\r\n      this.isReadOnlyItemPopup = false;\r\n      this.showItemPopup = true;\r\n    }\r\n  }\r\n\r\n  public editSelectedItem(item: BidtPurchaseContractItemDTO): void {\r\n    if (item && this.itemNodeSelected && this.itemsTreeTable) {\r\n      const itemRow: ContractItemRow = this.itemNodeSelected.data;\r\n      itemRow.bidtPurchaseContractItemDTO = item;\r\n      if (!!this.itemSelected) {\r\n        this.itemSelected.bidtPurchaseContractItemDTO = item;\r\n      }\r\n      this.itemsTreeTable.updateNode(itemRow, this.itemNodeSelected);\r\n      this.onItemsTreeModification();\r\n    }\r\n  }\r\n\r\n  public deleteItems() {\r\n    if (this.itemsTreeTable) {\r\n      this.itemsTreeTable.deleteNode(this.itemNodeSelected);\r\n      this.onItemsTreeModification();\r\n      this.initTableElementAndServicesCols();\r\n    }\r\n  }\r\n\r\n  private getItemAndServiceDataSourceWithHistory(): TableDataSourceWithHistory<ContractElementRow> {\r\n    return new TableDataSourceWithHistory({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'birePnPnCode', translateKey: this.getTranslateKey('pnCode') },\r\n        { field: 'pceQuantity', translateKey: this.getTranslateKey('pciQuantity') },\r\n        { field: 'pceCurrency', translateKey: this.getTranslateKey('pcieCurrency') },\r\n        { field: 'pcePriceExclTax', translateKey: this.getTranslateKey('pciePriceExclTax') },\r\n        { field: 'pceVat', translateKey: this.getTranslateKey('pcieVat') },\r\n        { field: 'pcePrice', translateKey: this.getTranslateKey('pciPrice') },\r\n        { field: 'pceTimeLimit', translateKey: this.getTranslateKey('pcieTimeLimit') }\r\n      ],\r\n      data: [],\r\n      allowUniqueValue: false\r\n    });\r\n  }\r\n\r\n  private itemAlreadyExists(): boolean {\r\n    return (\r\n      !!this.itemSelected &&\r\n      !!this.itemSelected.bidtPurchaseContractItemDTO &&\r\n      !!this.itemSelected.bidtPurchaseContractItemDTO.id\r\n    );\r\n  }\r\n\r\n  private loadItemElements(): void {\r\n    if (this.itemAlreadyExists()) {\r\n      this.purchaseContractElementService\r\n        .findElementsByItemId((this.itemSelected && this.itemSelected.bidtPurchaseContractItemDTO.id) as string)\r\n        .subscribe((elements) => {\r\n          if (!!this.itemSelected) {\r\n            this.itemSelected.itemElementAndServicesTableDataSource = this.getItemAndServiceDataSourceWithHistory();\r\n            this.itemSelected.itemElementAndServicesTableDataSource.setData(\r\n              elements.map((element) => this.elementToRow(element))\r\n            );\r\n            this.elementAndServicesTableDataSource = this.itemSelected.itemElementAndServicesTableDataSource;\r\n          }\r\n        });\r\n    } else if (!!this.itemSelected) {\r\n      this.itemSelected.itemElementAndServicesTableDataSource = this.getItemAndServiceDataSourceWithHistory();\r\n      this.elementAndServicesTableDataSource = this.itemSelected.itemElementAndServicesTableDataSource;\r\n    }\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Parent contract id Popup\r\n   *************************************************************************/\r\n  public selectParentId(): void {\r\n    this.showParentIdDialog = true;\r\n  }\r\n\r\n  public onSelectedParentId(selectedObject: BidtPurchaseContractDTO) {\r\n    if (selectedObject) {\r\n      this.purchaseContract.bidtPurchaseContractId = selectedObject.id;\r\n      this.parentContractLabel = this.getParentContractLabel(selectedObject);\r\n    }\r\n    this.showParentIdDialog = false;\r\n  }\r\n\r\n  private getParentContractLabel(selectedParentContract: BidtPurchaseContractDTO): string {\r\n    return `${selectedParentContract.pcNumber} ${selectedParentContract.pcLabel}`;\r\n  }\r\n\r\n  /*************************************************************************\r\n   * Search employee Popup\r\n   *************************************************************************/\r\n  public quickSearchEmployee(): void {\r\n    this.showEmployeePopup = true;\r\n  }\r\n\r\n  public setSelectedEmployee(selectedEmployee: BidtEmployeeDTO) {\r\n    if (selectedEmployee) {\r\n      this.showEmployeePopup = false;\r\n      this.purchaseContract.bidtEmployeeId = selectedEmployee.id;\r\n      this.contractManagerName = this.getEmployeeName(selectedEmployee);\r\n    }\r\n  }\r\n\r\n  private getEmployeeName(selectedEmployee: BidtEmployeeDTO): string {\r\n    return `${selectedEmployee.employeeLastName} ${selectedEmployee.employeeFirstName}`;\r\n  }\r\n\r\n  public getCurrencyLabel(): string | undefined {\r\n    let returnValue;\r\n    if (!!this.purchaseContract.pcCurrency && !!this.purchaseContract.pcCurrency) {\r\n      returnValue = LabelValueHelper.getLabelByValue(this.pcCurrencyList, this.purchaseContract.pcCurrency);\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  public showStatus(): void {\r\n    const overlayRef = this._overlayService.openWithPositionCenter<string | undefined>({\r\n      content: ObjectStatusComponent,\r\n      data: {\r\n        currentAuthor: this.purchaseContract.statusUser,\r\n        currentDate: this.purchaseContract.statusDate,\r\n        currentStatus: {\r\n          label: this._formatSelectOption.transform(this.purchaseContract.statusState, this.statusList),\r\n          value: this.purchaseContract.statusState\r\n        },\r\n        nextStatuses: this.statusList\r\n      }\r\n    });\r\n\r\n    overlayRef.afterClosed$.subscribe({\r\n      next: (event) => {\r\n        if (event.data) {\r\n          this.purchaseContract.statusState = event.data;\r\n          this.save();\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        {{ \\\"page.searchPage\\\" | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewPurchaseContract()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row search-criteria-header\\\">\\r\\n                  <aw-manage-search-criteria\\r\\n                    [componentId]=\\\"SEARCH_CRITERIA_ID\\\"\\r\\n                    (onSelected)=\\\"loadSearchCriteria($event)\\\"\\r\\n                    (onSavedAsked)=\\\"saveSearchCriteriaAsked()\\\"\\r\\n                    [objectFromPage]=\\\"searchCriteriaToSave\\\"\\r\\n                    [canChange]=\\\"!searchCriteriaCalculated\\\"\\r\\n                  ></aw-manage-search-criteria>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".pcNumber\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchCriteria.pcNumber\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".pcLabel\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchCriteria.pcLabel\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".statusState\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"statusList\\\"\\r\\n                        [(ngModel)]=\\\"searchCriteria.statusState\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".pcLegalCommitment\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchCriteria.pcLegalCommitment\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".pcCreationDateStart\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-calendar\\r\\n                        showButtonBar=\\\"true\\\"\\r\\n                        [monthNavigator]=\\\"true\\\"\\r\\n                        [yearNavigator]=\\\"true\\\"\\r\\n                        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                        class=\\\"aw-calendar\\\"\\r\\n                        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                        [(ngModel)]=\\\"searchCriteria.pcCreationDateInterval.minValue\\\"\\r\\n                      ></p-calendar>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".pcCreationDateEnd\\\" | translate }}\\r\\n                    </label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-calendar\\r\\n                        showButtonBar=\\\"true\\\"\\r\\n                        [monthNavigator]=\\\"true\\\"\\r\\n                        [yearNavigator]=\\\"true\\\"\\r\\n                        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                        class=\\\"aw-calendar\\\"\\r\\n                        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                        [(ngModel)]=\\\"searchCriteria.pcCreationDateInterval.maxValue\\\"\\r\\n                      ></p-calendar>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"advanced-criteria\\\" [ngClass]=\\\"{ 'display--none': !showAdvancedSearchCriteria }\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group flex--1\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pnCode\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control form-control-with-modal\\\">\\r\\n                        <div class=\\\"form-control-data\\\" (click)=\\\"openMaterialDialog()\\\">\\r\\n                          {{ searchCriteria.pnCode }}\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"searchCriteria.pnCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"searchCriteria.pnCode = undefined\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"searchCriteria.pnCode === undefined\\\" class=\\\"btn-search-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"openMaterialDialog()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group flex--2\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <button mat-button (click)=\\\"showAdvancedSearchCriteria = !showAdvancedSearchCriteria\\\">\\r\\n                    <ng-container *ngIf=\\\"showAdvancedSearchCriteria\\\">\\r\\n                      <mat-icon>remove</mat-icon>\\r\\n                      {{ \\\"global.collapseCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"!showAdvancedSearchCriteria\\\">\\r\\n                      <mat-icon>add</mat-icon>\\r\\n                      {{ \\\"global.expandCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                  </button>\\r\\n\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"search()\\\"\\r\\n                      appKeyPress\\r\\n                      color=\\\"primary\\\"\\r\\n                      [keyCode]=\\\"'Enter'\\\"\\r\\n                      (keyPress)=\\\"search()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.toSearch\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--12\\\">\\r\\n            <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ \\\"results\\\" | translate }} ({{ purchaseContractTableDataSource.dataCount\\r\\n                    }}{{ moreResults ? \\\"+\\\" : \\\"\\\" }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content\\\">\\r\\n                <a-table [dataSource]=\\\"purchaseContractTableDataSource\\\">\\r\\n                  <ng-template tableActionsDef>\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"openPurchaseContracts()\\\"\\r\\n                      *ngIf=\\\"purchaseContractTableDataSource.hasDataSelection\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.open\\\" | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"exportPurchaseContractTable()\\\"\\r\\n                      *ngIf=\\\"\\r\\n                        purchaseContractTableDataSource.hasData && !purchaseContractTableDataSource.hasDataSelection\\r\\n                      \\\"\\r\\n                    >\\r\\n                      {{ \\\"global.export\\\" | translate }}\\r\\n                    </button>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template columnDef=\\\"pcNumber\\\" let-rowData=\\\"rowData\\\">\\r\\n                    <a (click)=\\\"openPurchaseContract(rowData.id)\\\">{{ rowData.pcNumber }}</a>\\r\\n                  </ng-template>\\r\\n                  <ng-template columnDef=\\\"pcCreationDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                    {{ rowData.pcCreationDate | date: \\\"yyyy/MM/dd\\\":\\\"\\\":translateService.currentLang }}\\r\\n                  </ng-template>\\r\\n                </a-table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-dialog-search-material\\r\\n  *ngIf=\\\"showQuickSearchMaterialPopup\\\"\\r\\n  [(display)]=\\\"showQuickSearchMaterialPopup\\\"\\r\\n  [material-code]=\\\"pnCode\\\"\\r\\n  (onSelected)=\\\"setSelectedMaterial($event)\\\"\\r\\n></aw-dialog-search-material>\\r\\n\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { forkJoin, of } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ISearchCriteria } from '../../../../../../shared/components/manage-search-criteria/search-criteria.interface';\r\nimport { TableDataSource } from '../../../../../../shared/components/table/table-data-source';\r\nimport { AppConstants } from '../../../../../../shared/constants/app-constants';\r\nimport { ComponentConstants } from '../../../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../../shared/services/confirmation.service';\r\nimport { ExportService } from '../../../../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../../../shared/services/tab.service';\r\nimport { BirePnDTO } from '../../../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { LabelValue } from '../../../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../../../shared/types/page-component-data.interface';\r\nimport { ListUtils } from '../../../../../../shared/utils/list-utils';\r\nimport { PurchaseContractPropertyConstants } from '../../../../constants/properties/purchase-contract-property-constants';\r\nimport { FindBidtPurchaseContractsByCriteriaInput } from '../../../../dtos/input/find-bidt-purchase-contracts-by-criteria-input.interface';\r\nimport { PurchaseContractService } from '../../../../services/purchase-contract.service';\r\nimport { LabelValueHelper } from '../../../../utils/label-value-helper';\r\n\r\nimport { PurchaseContractSearchService } from './purchase-contract-search.service';\r\n\r\ninterface BidtPurchaseContractRow {\r\n  id?: string;\r\n  pcNumber?: string;\r\n  pcLabel?: string;\r\n  statusState?: string;\r\n  pcLegalCommitment?: string;\r\n  pcCreationDate?: Date;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-purchase-contract-search',\r\n  templateUrl: './purchase-contract-search.component.html'\r\n})\r\nexport class PurchaseContractSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  private static readonly PURCHASE_CONTRACT_TABLE_EXPORT_NAME: string = 'purchase-contract-list';\r\n\r\n  public readonly SEARCH_CRITERIA_ID: string = AppConstants.PURCHASE_CONTRACT_SEARCH_CRITERIA_ID;\r\n\r\n  public purchaseContractTableDataSource: TableDataSource<BidtPurchaseContractRow>;\r\n  public searchCriteria: FindBidtPurchaseContractsByCriteriaInput;\r\n  public searchCriteriaCalculated: boolean;\r\n  public searchCriteriaToSave: FindBidtPurchaseContractsByCriteriaInput;\r\n  public searchLoading: boolean;\r\n  public showQuickSearchMaterialPopup: boolean;\r\n  public showAdvancedSearchCriteria: boolean;\r\n\r\n  public statusList: LabelValue<string>[];\r\n\r\n  public moreResults: boolean;\r\n\r\n  /* HTML references ***********************************************************/\r\n\r\n  @ViewChild('resultsContainerAnchor')\r\n  public resultsContainerAnchor: ElementRef;\r\n\r\n  /* ***************************************************************************/\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public translateService: TranslateService,\r\n    public sessionService: SessionService,\r\n    private readonly purchaseContractSearchService: PurchaseContractSearchService,\r\n    private readonly purchaseContractService: PurchaseContractService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly exportService: ExportService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.statusList = [];\r\n    this.onBeforeLoad();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.PCT_PURCHASE_CONTRACT_SEARCH;\r\n  }\r\n\r\n  public onBeforeLoad(): void {\r\n    this.init();\r\n    this.initPurchaseContractTableDataSource();\r\n    this.loadReferentialData();\r\n  }\r\n\r\n  private init(): void {\r\n    this.moreResults = false;\r\n    this.searchCriteria = { pcCreationDateInterval: {} };\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public deletePurchaseContract(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(\r\n        this.purchaseContractTableDataSource.dataSelectionCount === 1\r\n          ? 'confirmDeleteSelectedPurchaseContract'\r\n          : 'confirmDeleteSelectedPurchaseContracts'\r\n      ),\r\n      accept: () => {\r\n        const observables = this.purchaseContractTableDataSource.dataSelection.map((purchaseContract) => {\r\n          this.purchaseContractSearchService.removeBidtPurchaseContract({\r\n            id: purchaseContract.id || ''\r\n          });\r\n        });\r\n        forkJoin(observables).subscribe({\r\n          next: () => {\r\n            this.messageService.showSuccessMessage(\r\n              this.getTranslateKey(\r\n                this.purchaseContractTableDataSource.dataSelectionCount === 1\r\n                  ? 'successOnDeletePurchaseContract'\r\n                  : 'successOnDeletePurchaseContracts'\r\n              )\r\n            );\r\n\r\n            this.purchaseContractTableDataSource.deleteDataSelection();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public exportPurchaseContractTable(): void {\r\n    this.exportService.toExcel(\r\n      this.purchaseContractTableDataSource.sanitizedData.map((data) => {\r\n        const idLess = { ...data };\r\n        delete idLess.id;\r\n\r\n        return idLess;\r\n      }),\r\n      PurchaseContractSearchComponent.PURCHASE_CONTRACT_TABLE_EXPORT_NAME,\r\n      this.componentData.componentId\r\n    );\r\n  }\r\n\r\n  public loadSearchCriteria(event: ISearchCriteria): void {\r\n    const criteria = event.criteria as FindBidtPurchaseContractsByCriteriaInput | undefined;\r\n    if (criteria) {\r\n      if (!this.componentData.objectId) {\r\n        this.searchCriteria = criteria;\r\n      } else {\r\n        this.componentData.objectId = undefined;\r\n      }\r\n\r\n      this.search();\r\n    } else {\r\n      this.clearSearchCriteria();\r\n    }\r\n  }\r\n\r\n  public openPurchaseContract(objectId: string): void {\r\n    this.purchaseContractSearchService.openPurchaseContract(objectId);\r\n  }\r\n\r\n  public openNewPurchaseContract(): void {\r\n    this.purchaseContractSearchService.openPurchaseContract(undefined);\r\n  }\r\n\r\n  public openPurchaseContracts(): void {\r\n    this.purchaseContractTableDataSource.dataSelection.forEach((purchaseContract) => {\r\n      this.purchaseContractSearchService.openPurchaseContract(purchaseContract.id as string);\r\n    });\r\n  }\r\n\r\n  private loadReferentialData(): void {\r\n    forkJoin({\r\n      statusList: ListUtils.isEmpty(this.statusList)\r\n        ? this.propertiesService.getValue(PurchaseContractPropertyConstants.CONTRACT_STATUS_MAP)\r\n        : of(this.statusList)\r\n    }).subscribe((result) => {\r\n      this.statusList = result.statusList;\r\n      this.purchaseContractTableDataSource.addReferenceDataToColumn('statusState', this.statusList);\r\n    });\r\n  }\r\n\r\n  public search(): void {\r\n    this.purchaseContractTableDataSource.setData([]);\r\n    this.moreResults = false;\r\n    this.purchaseContractTableDataSource.isLoading = true;\r\n\r\n    this.purchaseContractService\r\n      .findBidtPurchaseContractByCriteria(this.searchCriteria)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.purchaseContractTableDataSource.isLoading = false;\r\n          super.differ(() => {\r\n            super.scrollToAnchor(this.resultsContainerAnchor);\r\n          });\r\n        })\r\n      )\r\n      .subscribe((purchaseContracts) => {\r\n        if (purchaseContracts && purchaseContracts.list) {\r\n          const purchaseContractsRows = purchaseContracts.list.map((pc) => ({\r\n            id: pc.id,\r\n            pcNumber: pc.pcNumber,\r\n            pcLabel: pc.pcLabel,\r\n            statusState: LabelValueHelper.getLabelByValue(this.statusList, pc.statusState),\r\n            pcLegalCommitment: pc.pcLegalCommitment,\r\n            pcCreationDate: pc.pcCreationDate\r\n          }));\r\n          this.moreResults = purchaseContracts.moreResults;\r\n          this.purchaseContractTableDataSource.setData(purchaseContractsRows);\r\n        }\r\n        super.scrollToAnchor(this.resultsContainerAnchor);\r\n      });\r\n  }\r\n\r\n  private clearSearchCriteria(): void {\r\n    this.searchCriteria = { pcCreationDateInterval: {} };\r\n  }\r\n\r\n  public saveSearchCriteriaAsked(): void {\r\n    this.searchCriteriaToSave = this.searchCriteria;\r\n  }\r\n\r\n  public openMaterialDialog() {\r\n    this.showQuickSearchMaterialPopup = true;\r\n  }\r\n\r\n  public setSelectedMaterial(event: BirePnDTO): void {\r\n    this.searchCriteria.pnCode = event.pnCode;\r\n  }\r\n\r\n  private initPurchaseContractTableDataSource(): void {\r\n    this.purchaseContractTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'pcNumber',\r\n          translateKey: this.getTranslateKey('pcNumber')\r\n        },\r\n        {\r\n          field: 'pcLabel',\r\n          translateKey: this.getTranslateKey('pcLabel')\r\n        },\r\n        {\r\n          field: 'statusState',\r\n          translateKey: this.getTranslateKey('statusState')\r\n        },\r\n        {\r\n          field: 'pcLegalCommitment',\r\n          translateKey: this.getTranslateKey('pcLegalCommitment')\r\n        },\r\n        {\r\n          field: 'pcCreationDate',\r\n          translateKey: this.getTranslateKey('pcCreationDate')\r\n        }\r\n      ]\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ComponentConstants } from '../../../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../../../shared/enums/component-open-mode.enum';\r\nimport { AbstractAwHttpService } from '../../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../../shared/services/app-config.service';\r\nimport { SerializationService } from '../../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../../shared/services/tab.service';\r\nimport { PageComponentData } from '../../../../../../shared/types/page-component-data.interface';\r\nimport { PurchaseContractApi } from '../../../../api/purchase-contract.api';\r\nimport { BidtPurchaseContractDTOId } from '../../../../dtos/bidt-purchase-contract-dto-id.interface';\r\n\r\n@Injectable()\r\nexport class PurchaseContractSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly purchaseContractApi: PurchaseContractApi,\r\n    private readonly serializationService: SerializationService,\r\n    private readonly tabService: TabService\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public openPurchaseContract(objectId: string | undefined): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.PCT_PURCHASE_CONTRACT_FORM,\r\n      objectId: objectId ? this.serializationService.serialize({ id: objectId }) : undefined,\r\n      openMode: objectId ? ComponentOpenMode.Read : ComponentOpenMode.Create\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public removeBidtPurchaseContract(bidoCustomerId: BidtPurchaseContractDTOId): Observable<boolean> {\r\n    return super.post<BidtPurchaseContractDTOId, boolean>(this.purchaseContractApi.delete, bidoCustomerId);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\nimport { DynamicComponentLoaderModule } from '../../../../main/dynamic-component-loader/dynamic-component-loader.module';\r\nimport { MaterialFormService } from '../../../../main/logistics/material/form/material-form.service';\r\nimport { OrderDocumentFormService } from '../../../../main/logistics/order-document/form/order-document-form.service';\r\nimport { OrderDocumentSearchService } from '../../../../main/logistics/order-document/search/order-document-search.service';\r\nimport { WorkOrderFormService } from '../../../../main/maintenance/work-order/form/work-order-form.service';\r\nimport { AngularCommonSharedModule } from '../../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DialogSearchEmployeeModule } from '../../../../shared/components/dialog-search-employee/dialog-search-employee.module';\r\nimport { DialogSearchMaterialModule } from '../../../../shared/components/dialog-search-material/dialog-search-material.module';\r\nimport { DialogSearchMaterialService } from '../../../../shared/components/dialog-search-material/dialog-search-material.service';\r\nimport { DialogStatusModule } from '../../../../shared/components/dialog-status/dialog-status.module';\r\nimport { DialogTableModule } from '../../../../shared/components/dialog-table/dialog-table.module';\r\nimport { DynamicAttributesModule } from '../../../../shared/components/dynamic-attributes/dynamic-attributes.module';\r\nimport { ManageSearchCriteriaModule } from '../../../../shared/components/manage-search-criteria/manage-search-criteria.module';\r\nimport { ModalModule } from '../../../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../../../shared/components/table/table.module';\r\nimport { PurchaseContractElementApi } from '../../api/purchase-contract-element-api';\r\nimport { PurchaseContractItemApi } from '../../api/purchase-contract-item.api';\r\nimport { PurchaseContractApi } from '../../api/purchase-contract.api';\r\nimport { PurchaseContractElementService } from '../../services/purchase-contract-element.service';\r\nimport { PurchaseContractItemService } from '../../services/purchase-contract-item.service';\r\nimport { PurchaseContractService } from '../../services/purchase-contract.service';\r\nimport { DocumentSectionModule } from '../shared/document-section/document-section.module';\r\n\r\nimport { DialogPurchaseContractElementComponent } from './pages/form/dialogs/dialog-purchase-contract-element/dialog-purchase-contract-element.component';\r\nimport { DialogPurchaseContractItemComponent } from './pages/form/dialogs/dialog-purchase-contract-item/dialog-purchase-contract-item.component';\r\nimport { DialogPurchaseContractParentIdComponent } from './pages/form/dialogs/dialog-purchase-contract-parent-id/dialog-purchase-contract-parent-id.component';\r\nimport { DialogPurchaseContractPartnerComponent } from './pages/form/dialogs/dialog-purchase-contract-partner/dialog-purchase-contract-partner.component';\r\nimport { DialogPurchaseContractSliceComponent } from './pages/form/dialogs/dialog-purchase-contract-slice/dialog-purchase-contract-slice.component';\r\nimport { PurchaseContractFormComponent } from './pages/form/purchase-contract-form.component';\r\nimport { PurchaseContractSearchComponent } from './pages/search/purchase-contract-search.component';\r\nimport { PurchaseContractSearchService } from './pages/search/purchase-contract-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DropdownModule,\r\n  InputTextareaModule,\r\n  PrimeNgTableModule,\r\n  TooltipModule,\r\n  KeyFilterModule,\r\n  MessageModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [\r\n  ManageSearchCriteriaModule,\r\n  ComponentSidebarModule,\r\n  DialogTableModule,\r\n  DialogStatusModule,\r\n  DynamicAttributesModule,\r\n  ModalModule,\r\n  TableModule,\r\n  DialogSearchMaterialModule,\r\n  DocumentSectionModule,\r\n  DialogSearchEmployeeModule\r\n];\r\n\r\nconst PRIMENG_MODULES = [TreeModule, TreeTableModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [\r\n  DialogPurchaseContractSliceComponent,\r\n  DialogPurchaseContractItemComponent,\r\n  DialogPurchaseContractElementComponent,\r\n  DialogPurchaseContractPartnerComponent,\r\n  DialogPurchaseContractParentIdComponent\r\n];\r\n\r\nconst DYNAMIC_COMPONENTS = [PurchaseContractFormComponent, PurchaseContractSearchComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\nconst API = [PurchaseContractApi, PurchaseContractItemApi, PurchaseContractElementApi];\r\n\r\nconst SERVICES = [\r\n  PurchaseContractService,\r\n  PurchaseContractItemService,\r\n  PurchaseContractElementService,\r\n  PurchaseContractSearchService,\r\n  OrderDocumentSearchService,\r\n  DialogSearchMaterialService,\r\n  OrderDocumentFormService,\r\n  MaterialFormService,\r\n  WorkOrderFormService\r\n];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES,\r\n    ...PRIMENG_MODULES\r\n  ],\r\n  providers: [...API, ...SERVICES]\r\n})\r\nexport class PurchaseContractModule {}\r\n","module.exports = \"<div class=\\\"grid-row\\\">\\r\\n  <div #documentsAnchor class=\\\"grid-cell--12\\\" (click)=\\\"onChangeDocumentSelected()\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container\\\" [ngClass]=\\\"{ active: documentSectionSelected }\\\">\\r\\n      <div class=\\\"grid-cell-header\\\">\\r\\n        <div class=\\\"grid-cell-title-container\\\">\\r\\n          <h3 class=\\\"grid-cell-title\\\">\\r\\n            {{ \\\"global.documents\\\" | translate }} ({{\\r\\n              documentsTableDataSource ? documentsTableDataSource.dataCount : 0\\r\\n            }})\\r\\n          </h3>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <a-table [dataSource]=\\\"documentsTableDataSource\\\">\\r\\n          <ng-template tableActionsDef>\\r\\n            <div class=\\\"btn-file-upload-wrapper\\\">\\r\\n              <p-fileUpload\\r\\n                #fileUploader\\r\\n                *ngIf=\\\"!isReadOnlyForm && !documentsTableDataSource.hasDataSelection\\\"\\r\\n                name=\\\"document[]\\\"\\r\\n                customUpload=\\\"true\\\"\\r\\n                mode=\\\"basic\\\"\\r\\n                auto=\\\"true\\\"\\r\\n                chooseLabel=\\\"{{ 'global.upload' | translate }}\\\"\\r\\n                (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n              ></p-fileUpload>\\r\\n            </div>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!isReadOnlyForm && !documentsTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"linkUrl()\\\"\\r\\n            >\\r\\n              {{ getComponentName() + \\\".linkUrl\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button *ngIf=\\\"showDownloadDocButton()\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"downloadFiles()\\\">\\r\\n              {{ \\\"global.download\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button *ngIf=\\\"showGoToDocButton()\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"goToDoc()\\\">\\r\\n              {{ \\\"global.goTo\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!isReadOnlyForm && documentsTableDataSource.hasDataSelection\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteDocuments()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"!isReadOnlyForm && documentsTableDataSource.dataSelectionCount === 1\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"editDocument()\\\"\\r\\n            >\\r\\n              {{ \\\"global.edit\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              *ngIf=\\\"documentsTableDataSource.dataSelectionCount === 1\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"openDocument()\\\"\\r\\n            >\\r\\n              {{ \\\"global.open\\\" | translate }}\\r\\n            </button>\\r\\n          </ng-template>\\r\\n          <ng-template columnDef=\\\"documentName\\\" let-rowData=\\\"rowData\\\">\\r\\n            <a (click)=\\\"downloadFiles(rowData)\\\">{{ rowData.documentName }}</a>\\r\\n          </ng-template>\\r\\n          <ng-template columnDef=\\\"documentPublicationDate\\\" let-rowData=\\\"rowData\\\">\\r\\n            {{ rowData.documentPublicationDate | date: \\\"yyyy/MM/dd\\\":\\\"\\\":translateService.currentLang }}\\r\\n          </ng-template>\\r\\n        </a-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-document-popup-form\\r\\n  *ngIf=\\\"showDocumentDialog\\\"\\r\\n  [document]=\\\"currentDocument\\\"\\r\\n  [(display)]=\\\"showDocumentDialog\\\"\\r\\n  [isReadOnlyForm]=\\\"isReadOnlyDocumentDialog\\\"\\r\\n  (onValidated)=\\\"onUpdateDocument($event)\\\"\\r\\n></aw-document-popup-form>\\r\\n\\r\\n<aw-document-url-popup-form\\r\\n  *ngIf=\\\"showDocumentUrlDialog\\\"\\r\\n  [document]=\\\"currentDocument\\\"\\r\\n  [(display)]=\\\"showDocumentUrlDialog\\\"\\r\\n  [isReadOnlyForm]=\\\"isReadOnlyDocumentDialog\\\"\\r\\n  (onValidated)=\\\"onUpdateDocumentUrl($event)\\\"\\r\\n></aw-document-url-popup-form>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FileUpload } from 'primeng/fileupload';\r\n\r\nimport { PageTocService } from '../../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../../../shared/services/date.service';\r\nimport { FavoriteService } from '../../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../../shared/services/tab.service';\r\nimport { BidtDocumentDTO } from '../../../../../shared/types/api-types/bidt-document-dto.interface';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../../shared/types/page-component-data.interface';\r\nimport { FileUtils } from '../../../../../shared/utils/file-utils';\r\nimport { ListModificationsDTO } from '../../../dtos/list-modifications-dto.interface';\r\nimport { TableDataSourceWithHistory } from '../../../utils/table-data-source-with-history';\r\n\r\n@Component({\r\n  selector: 'aw-document-section',\r\n  templateUrl: './document-section.component.html'\r\n})\r\nexport class DocumentSectionComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  @Input()\r\n  public document: BidtDocumentDTO;\r\n  @Input()\r\n  public set documentsList(documentsTableDataSource: BidtDocumentDTO[]) {\r\n    this.documentsTableDataSource.setData(documentsTableDataSource);\r\n  }\r\n  @Input()\r\n  public documentSectionSelected: boolean;\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  public onChangeDocumentSectionSelected: EventEmitter<boolean>;\r\n\r\n  public readonly component: typeof DocumentSectionComponent;\r\n  public errorMarkerList: string[];\r\n  public documentsTableDataSource: TableDataSourceWithHistory<BidtDocumentDTO>;\r\n  public categories: LabelValue<string>[];\r\n  public typeList: LabelValue<string>[];\r\n  public maxDate: Date;\r\n  public isCategoryDisabled: boolean;\r\n  public pageTocService: PageTocService;\r\n  public showDocumentDialog: boolean;\r\n  public showDocumentUrlDialog: boolean;\r\n  public showAddDocumentDialog: boolean;\r\n  public currentDocument: BidtDocumentDTO;\r\n  public currentDocumentIndex: number;\r\n  public isReadOnlyDocumentDialog: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public dateService: DateService,\r\n    public translateService: TranslateService,\r\n    private readonly confirmationService: ConfirmationService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    this.component = DocumentSectionComponent;\r\n    this.categories = [];\r\n    this.typeList = [];\r\n    this.maxDate = new Date();\r\n    this.errorMarkerList = [];\r\n    this.initDocumentsTableDataSource();\r\n    this.onChangeDocumentSectionSelected = new EventEmitter<boolean>();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.updateOpenMode(this.openMode);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'DocumentSection';\r\n  }\r\n\r\n  private initDocumentsTableDataSource(): void {\r\n    this.documentsTableDataSource = new TableDataSourceWithHistory({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'documentName',\r\n          translateKey: this.getTranslateKey('documentName')\r\n        },\r\n        {\r\n          field: 'documentDescription',\r\n          translateKey: this.getTranslateKey('documentDescription')\r\n        },\r\n        {\r\n          field: 'documentType',\r\n          translateKey: this.getTranslateKey('documentType')\r\n        },\r\n        {\r\n          field: 'documentPublicationDate',\r\n          translateKey: this.getTranslateKey('documentPublicationDate')\r\n        },\r\n        {\r\n          field: 'documentSource',\r\n          translateKey: this.getTranslateKey('documentSource')\r\n        }\r\n      ],\r\n      data: [],\r\n      allowUniqueValue: true,\r\n      propertiesWitchIdentifyData: ['documentName'],\r\n      errorOnAddedDuplicate: this.getTranslateKey('errorOnPartnerDuplicate'),\r\n      errorOnUpdatedDuplicate: this.getTranslateKey('errorOnPartnerDuplicate')\r\n    });\r\n  }\r\n\r\n  public onChangeDocumentSelected(): void {\r\n    this.documentSectionSelected = true;\r\n    this.onChangeDocumentSectionSelected.emit(true);\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (event.files) {\r\n      const file: File = event.files[0];\r\n      FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n        if (fileContent) {\r\n          const document: BidtDocumentDTO = {\r\n            documentContent: fileContent,\r\n            documentName: file.name,\r\n            documentPublicationDate: new Date()\r\n          };\r\n\r\n          this.addNewDocument(document);\r\n        }\r\n      });\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public linkUrl(): void {\r\n    if (this.documentsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocument = { ...this.documentsTableDataSource.dataSelection[0] };\r\n      this.isReadOnlyDocumentDialog = false;\r\n      this.showDocumentUrlDialog = true;\r\n    } else {\r\n      this.currentDocumentIndex = -1;\r\n      this.currentDocument = {};\r\n      this.showDocumentUrlDialog = true;\r\n    }\r\n  }\r\n\r\n  public downloadFiles(): void {\r\n    this.documentsTableDataSource.dataSelection.forEach((document) => {\r\n      FileUtils.downloadFile(document.documentContent, document.documentName);\r\n    });\r\n  }\r\n\r\n  public showDownloadDocButton(): boolean {\r\n    let toReturn = true;\r\n    if (!this.documentsTableDataSource.hasDataSelection) {\r\n      toReturn = false;\r\n    } else {\r\n      this.documentsTableDataSource.dataSelection.forEach((doc: BidtDocumentDTO) => {\r\n        if (!!doc.documentSource) {\r\n          toReturn = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    return toReturn;\r\n  }\r\n\r\n  public showGoToDocButton(): boolean {\r\n    let toReturn = true;\r\n    if (!this.documentsTableDataSource.hasDataSelection) {\r\n      toReturn = false;\r\n    } else {\r\n      this.documentsTableDataSource.dataSelection.forEach((doc: BidtDocumentDTO) => {\r\n        if (!doc.documentSource) {\r\n          toReturn = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    return toReturn;\r\n  }\r\n\r\n  public goToDoc(): void {\r\n    this.documentsTableDataSource.dataSelection.forEach((doc: BidtDocumentDTO) => {\r\n      window.open(doc.documentSource);\r\n    });\r\n  }\r\n\r\n  private addNewDocument(newDocument: BidtDocumentDTO) {\r\n    this.documentsTableDataSource.addData([this.convertDocumentType(newDocument)]);\r\n  }\r\n\r\n  public openDocument(): void {\r\n    if (this.documentsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocument = this.documentsTableDataSource.dataSelection[0];\r\n      this.isReadOnlyDocumentDialog = true;\r\n      if (!this.currentDocument.documentSource) {\r\n        this.showDocumentDialog = true;\r\n      } else {\r\n        this.showDocumentUrlDialog = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public editDocument(): void {\r\n    if (this.documentsTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocument = { ...this.documentsTableDataSource.dataSelection[0] };\r\n      this.isReadOnlyDocumentDialog = false;\r\n      if (!this.currentDocument.documentSource) {\r\n        this.showDocumentDialog = true;\r\n      } else {\r\n        this.showDocumentUrlDialog = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onUpdateDocument(document: BidtDocumentDTO): void {\r\n    this.documentsTableDataSource.replaceData(\r\n      this.documentsTableDataSource.dataSelection[0],\r\n      this.convertDocumentType(document)\r\n    );\r\n  }\r\n\r\n  public onUpdateDocumentUrl(documentUrl: BidtDocumentDTO): void {\r\n    if (this.currentDocumentIndex === -1) {\r\n      this.addNewDocument(documentUrl);\r\n    } else {\r\n      this.onUpdateDocument(documentUrl);\r\n    }\r\n  }\r\n\r\n  public deleteDocuments() {\r\n    const partialMessageKey =\r\n      this.documentsTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedDocuments'\r\n        : 'confirmDeleteSelectedDocument';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.documentsTableDataSource.deleteDataSelection();\r\n      }\r\n    });\r\n  }\r\n\r\n  public getDocumentsModifications(): ListModificationsDTO<BidtDocumentDTO> {\r\n    return this.documentsTableDataSource.toListModifications();\r\n  }\r\n\r\n  private convertDocumentType(obj: BidtDocumentDTO): BidtDocumentDTO {\r\n    return {\r\n      ...obj,\r\n      documentType: this.showDocExtension(obj)\r\n    };\r\n  }\r\n\r\n  public showDocExtension(document: BidtDocumentDTO): string {\r\n    return FileUtils.getExtension(document.documentName).toUpperCase();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\n\r\nimport { DocumentPopupFormModule } from '../../../../../main/human-resources/employee-form/popups/document-popup-form/document-popup-form.module';\r\nimport { DocumentUrlPopupFormModule } from '../../../../../main/human-resources/employee-form/popups/document-url-popup-form/document-url-popup-form.module';\r\nimport { AngularCommonSharedModule } from '../../../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../../../shared/app-common-shared.module';\r\nimport { ModalModule } from '../../../../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../../../../shared/components/table/table.module';\r\n\r\nimport { DocumentSectionComponent } from './document-section.component';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [DropdownModule, CalendarModule, FileUploadModule, PrimeNgTableModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule, TableModule, DocumentPopupFormModule, DocumentUrlPopupFormModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DocumentSectionComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class DocumentSectionModule {}\r\n","export class PurchaseContractPropertyConstants {\r\n  public static readonly CONTRACT_ITEM_TYPE_MAP: string = 'getPctContractItemTypeMap';\r\n\r\n  public static readonly CONTRACT_SLICE_STATUS_MAP: string = 'getPctContractSliceStatusMap';\r\n\r\n  public static readonly CONTRACT_SLICE_TYPE_MAP: string = 'getPctContractSliceTypeMap';\r\n\r\n  public static readonly CONTRACT_STATUS_MAP: string = 'getPctContractStatusMap';\r\n\r\n  public static readonly CONTRACT_TYPE_MAP: string = 'getPctContractTypeMap';\r\n\r\n  public static readonly CONTRACT_ITEM_STATUS_MAP: string = 'getPctContractItemStatusMap';\r\n\r\n  // TODO Replace mock by 'getPctPartnerRoleMap';\r\n  public static readonly PARTNER_ROLE_MAP: string = 'getPurchaseContractTypeMap';\r\n\r\n  public static readonly CONTRACT_SLICE_DURATION_UNIT_MAP: string = 'getPctContractSliceDurationUnitStatusMap';\r\n\r\n  public static readonly CONTRACT_ELEMENT_TIME_LIMIT_UNIT_MAP: string = 'getPctContractElementTimeLimitUnitStatusMap';\r\n\r\n  public static readonly UNIT_DAY_VALUE: string = '1-day';\r\n\r\n  public static readonly UNIT_WEEK_VALUE: string = '2-wee';\r\n\r\n  public static readonly UNIT_MONTH_VALUE: string = '3-mon';\r\n\r\n  public static readonly MILLI_SEC_IN_DAY: number = 86400000;\r\n\r\n  public static readonly DAY_IN_WEEK: number = 7;\r\n}\r\n","export class PurchaseContractSliceStatusConstants {\r\n  public static readonly AWAITING_FIRMING: string = '1-wai';\r\n\r\n  public static readonly FIRMED: string = '2-fir';\r\n\r\n  public static readonly CANCELED: string = '3-can';\r\n}\r\n","export class PurchaseContractSliceTypeConstants {\r\n  public static readonly FIRM: string = '1-fir';\r\n\r\n  public static readonly OPTIONAL: string = '2-opt';\r\n}\r\n","export class PurchaseContractStatusConstants {\r\n  public static readonly CREATED: string = '1-cre';\r\n\r\n  public static readonly PENDING: string = '2-pen';\r\n\r\n  public static readonly CLOSED: string = '3-clo';\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { PurchaseContractElementApi } from '../api/purchase-contract-element-api';\r\nimport { BidtPurchaseContractElementDTO } from '../dtos/bidt-purchase-contract-element-dto.interface';\r\n\r\n@Injectable()\r\nexport class PurchaseContractElementService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly purchaseContractElementApiService: PurchaseContractElementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findElementsByItemId(itemId: string): Observable<BidtPurchaseContractElementDTO[]> {\r\n    return super.post<string, BidtPurchaseContractElementDTO[]>(\r\n      this.purchaseContractElementApiService.getElementsByItemId,\r\n      itemId\r\n    );\r\n  }\r\n\r\n  public calculatePrice(bidtPurchaseContractElementDTO: BidtPurchaseContractElementDTO): void {\r\n    if (\r\n      bidtPurchaseContractElementDTO &&\r\n      bidtPurchaseContractElementDTO.pcePriceExclTax &&\r\n      bidtPurchaseContractElementDTO.pceVat\r\n    ) {\r\n      const pciePriceExclTaxValue = parseFloat(bidtPurchaseContractElementDTO.pcePriceExclTax.toString());\r\n      const pcieVatValue = parseFloat(bidtPurchaseContractElementDTO.pceVat.toString());\r\n      const percentage = 100;\r\n      const nbdecimal = 2;\r\n      const result = (pciePriceExclTaxValue + (pciePriceExclTaxValue * pcieVatValue) / percentage).toString();\r\n      const indexSep =\r\n        result.indexOf('.') !== -1 ? result.indexOf('.') : result.indexOf(',') !== -1 ? result.indexOf(',') : undefined;\r\n      if (!!indexSep) {\r\n        bidtPurchaseContractElementDTO.pcePrice = parseFloat(result.substring(0, indexSep + nbdecimal + 1));\r\n      } else {\r\n        bidtPurchaseContractElementDTO.pcePrice = parseFloat(result);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { PurchaseContractItemApi } from '../api/purchase-contract-item.api';\r\n\r\n@Injectable()\r\nexport class PurchaseContractItemService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly purchaseContractItemApi: PurchaseContractItemApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Purchase contract api\r\n   *************************************************************************/\r\n\r\n  public getContractSliceItems(purchaseContractSliceId: string): Observable<TreeNode[]> {\r\n    return super.post<string, TreeNode[]>(this.purchaseContractItemApi.getContractSliceItems, purchaseContractSliceId);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { BidtDocumentDTO } from '../../../shared/types/api-types/bidt-document-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { PurchaseContractApi } from '../api/purchase-contract.api';\r\nimport { BidtPurchaseContractDTOId } from '../dtos/bidt-purchase-contract-dto-id.interface';\r\nimport { BidtPurchaseContractDTO } from '../dtos/bidt-purchase-contract-dto.interface';\r\nimport { BidtPurchaseContractPartnerDTO } from '../dtos/bidt-purchase-contract-partner-dto.interface';\r\nimport { FindBidtPurchaseContractsByCriteriaInput } from '../dtos/input/find-bidt-purchase-contracts-by-criteria-input.interface';\r\nimport { SaveBidtPurchaseContractInput } from '../dtos/input/save-bidt-purchase-contract-input.interface';\r\n\r\n@Injectable()\r\nexport class PurchaseContractService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly purchaseContractApi: PurchaseContractApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Purchase contract api\r\n   *************************************************************************/\r\n\r\n  public findBidtPurchaseContract(\r\n    bidtPurchaseContractId: BidtPurchaseContractDTOId\r\n  ): Observable<BidtPurchaseContractDTO> {\r\n    return super.post<string, BidtPurchaseContractDTO>(this.purchaseContractApi.getById, bidtPurchaseContractId.id);\r\n  }\r\n\r\n  public saveBidtPurchaseContract(\r\n    purchaseContract: SaveBidtPurchaseContractInput\r\n  ): Observable<BidtPurchaseContractDTO> {\r\n    return super.post<SaveBidtPurchaseContractInput, BidtPurchaseContractDTO>(\r\n      this.purchaseContractApi.addOrUpdate,\r\n      purchaseContract\r\n    );\r\n  }\r\n\r\n  public findBidtPurchaseContractByCriteria(\r\n    purchaseContract: FindBidtPurchaseContractsByCriteriaInput\r\n  ): Observable<SearchResultsDTO<BidtPurchaseContractDTO>> {\r\n    return super.post<FindBidtPurchaseContractsByCriteriaInput, SearchResultsDTO<BidtPurchaseContractDTO>>(\r\n      this.purchaseContractApi.findByCriteria,\r\n      purchaseContract\r\n    );\r\n  }\r\n\r\n  public findBidoPartnerByPurchaseContractId(\r\n    bidtPurchaseContractId: BidtPurchaseContractDTOId\r\n  ): Observable<BidtPurchaseContractPartnerDTO[]> {\r\n    return super.post<string, BidtPurchaseContractPartnerDTO[]>(\r\n      this.purchaseContractApi.getContractPartners,\r\n      bidtPurchaseContractId.id\r\n    );\r\n  }\r\n\r\n  public findSlicesByPurchaseContractId(\r\n    purchaseContractId: BidtPurchaseContractDTOId\r\n  ): Observable<BidtPurchaseContractDTO[]> {\r\n    return super.post<string, BidtPurchaseContractDTO[]>(\r\n      this.purchaseContractApi.getContractSlices,\r\n      purchaseContractId.id\r\n    );\r\n  }\r\n\r\n  public findBidtDocumentsByPurchaseContractId(\r\n    purchaseContractId: BidtPurchaseContractDTOId\r\n  ): Observable<BidtDocumentDTO[]> {\r\n    return super.post<string, BidtDocumentDTO[]>(this.purchaseContractApi.getContractDocuments, purchaseContractId.id);\r\n  }\r\n}\r\n","export enum ActionEnum {\r\n  Add = 'A',\r\n  Update = 'U',\r\n  Delete = 'D'\r\n}\r\n","import { TreeModificationsDTO } from '../../dtos/tree-modifications-dtos';\r\n\r\nimport { ActionEnum } from './action.enum';\r\nimport { TreeNodeAction } from './tree-node-action';\r\nimport { TreeNodeUtils } from './tree-node-utils';\r\n/**\r\n * Tree that keep track of modifications done\r\n */\r\nexport class TreeModifications<T, ID> {\r\n  private _tree: TreeNodeAction[];\r\n  private readonly idGetter: (data: T) => ID | undefined;\r\n  private readonly parentIdSetter: (data: T, parentId?: ID) => void;\r\n  private deletedNodes: TreeNodeAction[];\r\n  private readonly addExpanded: boolean;\r\n\r\n  public constructor(\r\n    idGetter: (data: T) => ID | undefined,\r\n    parentIdSetter: (data: T, parentId?: ID) => void,\r\n    addExpanded = true\r\n  ) {\r\n    this.idGetter = idGetter;\r\n    this.parentIdSetter = parentIdSetter;\r\n    this._tree = [];\r\n    this.deletedNodes = [];\r\n    this.addExpanded = addExpanded;\r\n  }\r\n\r\n  public get tree(): TreeNodeAction[] {\r\n    return this._tree;\r\n  }\r\n\r\n  public set tree(tree: TreeNodeAction[]) {\r\n    this._tree = tree;\r\n    this.deletedNodes = [];\r\n  }\r\n\r\n  private refresh(): void {\r\n    // Top level array copy for tree table refresh\r\n    this._tree = [...this._tree];\r\n  }\r\n\r\n  public addChildNode(childData: T, parentNode?: TreeNodeAction): void {\r\n    if (childData) {\r\n      const childNode: TreeNodeAction = { data: childData, action: ActionEnum.Add, expanded: this.addExpanded };\r\n      if (parentNode) {\r\n        // Affecting parent key\r\n        this.parentIdSetter(childData, this.idGetter(parentNode.data));\r\n        if (!parentNode.children) {\r\n          parentNode.children = [];\r\n        }\r\n        parentNode.children.push(childNode);\r\n      } else {\r\n        // Adding parent less node\r\n        this._tree.push(childNode);\r\n      }\r\n      this.refresh();\r\n    }\r\n  }\r\n\r\n  public markAsUpdated(node: TreeNodeAction): void {\r\n    this.updateNode(node.data, node);\r\n  }\r\n\r\n  public updateNode(data: T, node?: TreeNodeAction): void {\r\n    if (node) {\r\n      node.data = data;\r\n      // Keeps existing action or set as update\r\n      node.action = node.action || ActionEnum.Update;\r\n    }\r\n  }\r\n\r\n  public deleteNode(node?: TreeNodeAction): void {\r\n    if (node) {\r\n      // Selecting the node list from which the node should be deleted\r\n      let nodeList = this._tree;\r\n      if (node.parent && node.parent.children) {\r\n        nodeList = node.parent.children;\r\n      }\r\n\r\n      const nodeIndex = nodeList.indexOf(node);\r\n      if (nodeIndex !== -1) {\r\n        // Removing node from tree\r\n        nodeList.splice(nodeIndex, 1);\r\n        //  Refreshing the tree\r\n        this.refresh();\r\n        // Adding non added deleted node to modifications history\r\n        if (node.action !== ActionEnum.Add) {\r\n          node.action = ActionEnum.Delete;\r\n          this.deletedNodes.push(node);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public getTreeModifications(): TreeModificationsDTO<T> {\r\n    const treeModificationsDTO: TreeModificationsDTO<T> = {\r\n      addedNodesList: [],\r\n      updatedDataList: [],\r\n      deletedDataList: this.deletedNodes.map((node) => node.data)\r\n    };\r\n    this.getAddOrUpdateModifications(this._tree, treeModificationsDTO);\r\n\r\n    return treeModificationsDTO;\r\n  }\r\n  /**\r\n   * Returns tree modifications applying map function on data\r\n   * @param mapFunction Function to map data into expected result\r\n   */\r\n  public mapTreeModifications<R>(mapFunction: (data: T) => R): TreeModificationsDTO<R> {\r\n    const treeModifications = this.getTreeModifications();\r\n    const mapTreeModifications: TreeModificationsDTO<R> = {\r\n      addedNodesList: TreeNodeUtils.mapTreeNode(treeModifications.addedNodesList, mapFunction),\r\n      updatedDataList: treeModifications.updatedDataList.map(mapFunction),\r\n      deletedDataList: treeModifications.deletedDataList.map(mapFunction)\r\n    };\r\n\r\n    return mapTreeModifications;\r\n  }\r\n\r\n  private getAddOrUpdateModifications(\r\n    nodes: TreeNodeAction[] | undefined,\r\n    treeModificationsDTO: TreeModificationsDTO<T>\r\n  ): void {\r\n    if (nodes) {\r\n      nodes.forEach((node) => {\r\n        switch (node.action) {\r\n          case ActionEnum.Add:\r\n            treeModificationsDTO.addedNodesList.push(node);\r\n            // No recursive call: only added nodes should be present under an added node\r\n            break;\r\n          case ActionEnum.Update:\r\n            treeModificationsDTO.updatedDataList.push(node.data);\r\n            this.getAddOrUpdateModifications(node.children, treeModificationsDTO);\r\n            break;\r\n          default:\r\n            this.getAddOrUpdateModifications(node.children, treeModificationsDTO);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { TreeNode } from 'primeng/api';\r\n\r\nexport class TreeNodeUtils {\r\n  /**\r\n   * @param <T> Type of parameter tree nodes\r\n   * @param <ID> Type of result tree nodes\r\n   */\r\n  public static mapTreeNode<T, R>(treeNode: TreeNode[] | undefined, mapFunction: (node: T) => R): TreeNode[] {\r\n    return treeNode\r\n      ? treeNode.map((node) => ({\r\n          data: mapFunction(node.data),\r\n          children: TreeNodeUtils.mapTreeNode(node.children, mapFunction)\r\n        }))\r\n      : [];\r\n  }\r\n\r\n  /**\r\n   * @param <T> Type of parameter tree nodes\r\n   * @param <ID> Type of result tree nodes\r\n   */\r\n  public static setExpanded(treeNode: TreeNode[] | undefined, expanded = true, recursively = true): void {\r\n    if (treeNode) {\r\n      treeNode.forEach((node) => {\r\n        node.expanded = expanded;\r\n        if (recursively) {\r\n          TreeNodeUtils.setExpanded(node.children, expanded, recursively);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusState\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"statusList\\\"\\r\\n          [(ngModel)]=\\\"item.statusState\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [disabled]=\\\"!isStatusEditable\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"item.statusDate\\\"\\r\\n          [disabled]=\\\"true\\\"\\r\\n          [showTime]=\\\"true\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusUser\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"item.statusUser\\\" [disabled]=\\\"true\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.close\\\" | translate }}</button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { DialogComponent } from '../../../shared/types/dialog-component';\r\nimport { ComponentOpenMode } from '../../enums/component-open-mode.enum';\r\nimport { MessageService } from '../../services/message.service';\r\nimport { PropertiesService } from '../../services/properties.service';\r\nimport { SessionService } from '../../services/session.service';\r\nimport { LabelValue } from '../../types/label-value.interface';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-status',\r\n  templateUrl: './dialog-status.component.html'\r\n})\r\nexport class DialogStatusComponent<T> extends DialogComponent implements OnInit {\r\n  @Input() public item: T;\r\n\r\n  @Input() public itemId: string;\r\n\r\n  @Input('isStatusEditable') public isStatusEditable: boolean;\r\n\r\n  @Input('isObjectTypeOfBireSbDTO') public readonly isObjectTypeOfBireSbDTO: boolean;\r\n\r\n  @Input('isObjectTypeOfBireEvolutionDTO') public readonly isObjectTypeOfBireEvolutionDTO: boolean;\r\n\r\n  @Input('isObjectTypeOfBireMaintenancePlanDTO') public readonly isObjectTypeOfBireMaintenancePlanDTO: boolean;\r\n\r\n  @Input('isSapSession') private readonly isSapSession: boolean;\r\n\r\n  public statusList: LabelValue<string>[];\r\n\r\n  public readonly componentId: string;\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogStatusComponent');\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadStatusList();\r\n  }\r\n\r\n  public close(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private loadStatusList(): void {\r\n    const statusState = 'statusState';\r\n    this.propertiesService\r\n      .getObjectStatusList(\r\n        this.isObjectTypeOfBireSbDTO,\r\n        this.isObjectTypeOfBireEvolutionDTO,\r\n        this.isObjectTypeOfBireMaintenancePlanDTO,\r\n        this.item[statusState],\r\n        this.isSapSession\r\n      )\r\n      .subscribe(\r\n        (result) => {\r\n          this.statusList = result;\r\n        },\r\n        () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadStatusList'));\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\n\r\nimport { DialogStatusComponent } from './dialog-status.component';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [CalendarModule, DropdownModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogStatusComponent];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ]\r\n})\r\nexport class DialogStatusModule {}\r\n","export class ArrayUtils {\r\n    public static compareValues(key: string, order = 'asc') {\r\n    return (a, b) => {\r\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n            // property doesn't exist on either object\r\n            return 0;\r\n        }\r\n\r\n        const varA = (typeof a[key] === 'string') ? a[key].toUpperCase() : a[key];\r\n        const varB = (typeof b[key] === 'string') ? b[key].toUpperCase() : b[key];\r\n\r\n        let comparison = 0;\r\n        if (varA > varB) {\r\n            comparison = 1;\r\n        } else if (varA < varB) {\r\n            comparison = -1;\r\n        }\r\n\r\n        return (\r\n            (order === 'desc') ? (comparison * -1) : comparison\r\n        );\r\n    };\r\n    }\r\n}\r\n"],"sourceRoot":""}