{"version":3,"sources":["webpack:///./src/app/main/maintenance/asset-review/form/airworthiness-table-remaining-values/airworthiness-table-remaining-values.component.html","webpack:///./src/app/main/maintenance/asset-review/form/airworthiness-table-remaining-values/airworthiness-table-remaining-values.component.ts","webpack:///./src/app/main/maintenance/asset-review/form/asset-review-form.service.ts","webpack:///./src/app/shared/components/defect-list/defect-list.component.html","webpack:///./src/app/shared/components/defect-list/defect-list.component.scss","webpack:///./src/app/shared/components/defect-list/defect-list.component.ts","webpack:///./src/app/shared/components/defect-list/defect-list.module.ts","webpack:///./src/app/shared/components/defect-list/defect-list.service.ts"],"names":[],"mappings":"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","file":"default~maintenance-asset-review-asset-review-module~maintenance-maintenance-module~maintenance-work~2188dff0.js","sourcesContent":["module.exports = \"<div class=\\\"column\\\">\\r\\n<div class=\\\"row\\\">\\r\\n  <p-table [resizableColumns]=\\\"true\\\" #ptable class=\\\"aw-table2\\\" [columns]=\\\"tableCols\\\" [value]=\\\"table\\\" [scrollable]=\\\"true\\\">\\r\\n    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n      <span *ngIf=\\\"!remainingTableLoading\\\"> &nbsp;</span>\\r\\n\\r\\n      <div *ngIf=\\\"remainingTableLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n        <div class=\\\"lds-hourglass\\\"></div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n      <colgroup>\\r\\n        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n      </colgroup>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n      <tr>\\r\\n        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n          {{ getComponentName() + \\\".\\\" + col.field | translate }}\\r\\n        </th>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n        <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n          <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </ng-template>\\r\\n  </p-table>\\r\\n</div>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { ControlConfigConstants } from '../../../../../shared/constants/control-config-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { GenericComponent } from '../../../../../shared/types/generic-component';\r\nimport { TableColumn } from '../../../../../shared/types/table-column.interface';\r\nimport { AssetReviewFormService } from '../asset-review-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-airworthiness-table-remaining-values',\r\n  templateUrl: './airworthiness-table-remaining-values.component.html'\r\n})\r\nexport class AirworthinessTableRemainingValuesComponent extends GenericComponent implements OnInit {\r\n  public readonly controlConfigConstants: typeof ControlConfigConstants;\r\n\r\n  @Input()\r\n  // tslint:disable-next-line:no-any\r\n  public remainingTable: any;\r\n\r\n  @Input()\r\n  public remainingTableCols: TableColumn[];\r\n\r\n  @Input()\r\n  // tslint:disable-next-line:no-any\r\n  public get row(): any {\r\n    return this._row;\r\n  }\r\n  // tslint:disable-next-line:no-any\r\n  public set row(value: any) {\r\n    this._row = value;\r\n\r\n    this.remainingTableLoading = true;\r\n\r\n    if (!!this._row) {\r\n      this.load();\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public table: any;\r\n  public tableCols: TableColumn[];\r\n  public remainingTableLoading: boolean;\r\n\r\n  // tslint:disable-next-line:no-any\r\n  private _row: any;\r\n\r\n  public constructor(private readonly assetReviewFormService: AssetReviewFormService) {\r\n    super(ComponentOpenMode.Write);\r\n\r\n    this.controlConfigConstants = ControlConfigConstants;\r\n\r\n    this.registerPotentialUnitObservable();\r\n\r\n    this.init();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'AssetReviewTableRemainingValuesComponent';\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.setRemainingTableColumnList();\r\n  }\r\n  private init(): void {\r\n    this.remainingTableLoading = true;\r\n  }\r\n\r\n  private load(): void {\r\n    this.table = this.remainingTable;\r\n\r\n    this.remainingTableLoading = false;\r\n  }\r\n\r\n  private registerPotentialUnitObservable(): void {\r\n    this.assetReviewFormService.potentialUnit$.pipe(takeUntil(this.unsubscribe)).subscribe(() => {\r\n      this.load();\r\n    });\r\n  }\r\n\r\n  private setRemainingTableColumnList(): void {\r\n    this.tableCols = this.remainingTableCols;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { AirworthinessManagementApi } from '../../../../shared/api/airworthiness-management.api';\r\nimport { AMProjectManagementApi } from '../../../../shared/api/am-project-management.api';\r\nimport { FleetBusinessApi } from '../../../../shared/api/fleet-business.api';\r\nimport { FleetManagementApi } from '../../../../shared/api/fleet-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { AssetReviewInput } from '../../../../shared/types/api-input-types/airworthiness-management/asset-review-input.interface';\r\nimport { AssetWorkOrderOriginInput } from '../../../../shared/types/api-input-types/airworthiness-management/asset-work-order-origin-input.inteface';\r\nimport { CheckEquipmentForAirworthinessControlInput } from '../../../../shared/types/api-input-types/airworthiness-management/check-equipment-for-airworthiness-control-input.interface';\r\nimport { ComputePotentialForAirworthinessControlInput } from '../../../../shared/types/api-input-types/airworthiness-management/compute-potential-for-airworthiness-control-input.interface';\r\nimport { ComputeRemainingForAirworthinessControlPartInput } from '../../../../shared/types/api-input-types/airworthiness-management/compute-remaining-for-airworthiness-control-part-input.interface';\r\nimport { CreateAcrsInputEvent } from '../../../../shared/types/api-input-types/airworthiness-management/create-acrs-input-event.interface';\r\nimport { GenerateAirworthinessControlTableInput } from '../../../../shared/types/api-input-types/airworthiness-management/generate-airworthiness-control-table-input.interface';\r\nimport { ControlConfigurationInput } from '../../../../shared/types/api-input-types/fleet-business/control-configuration-input.interface';\r\nimport { FindAllBidoMissionEquipmentByCriteriaInput } from '../../../../shared/types/api-input-types/fleet-management/find-all-bido-mission-equipment-by-criteria-input.interface';\r\nimport { ADSBModRowDTO } from '../../../../shared/types/api-output-types/airworthiness-management/adsb-mod-row-dto.interface';\r\nimport { AssetFlightTableDTO } from '../../../../shared/types/api-output-types/airworthiness-management/asset-flight-table-dto.interface';\r\nimport { AssetReviewTabsTableDTO } from '../../../../shared/types/api-output-types/airworthiness-management/asset-review-tabs-table-dto.interface';\r\nimport { AssetWorkOrderOriginDataOutput } from '../../../../shared/types/api-output-types/airworthiness-management/asset-work-order-origin-data-output.inteface';\r\nimport { AssetWorkPackageStatusTableDTO } from '../../../../shared/types/api-output-types/airworthiness-management/asset-work-package-status-table-dto.interface';\r\nimport { ComputeRemainingForAirworthinessControlPartOutput } from '../../../../shared/types/api-output-types/airworthiness-management/compute-remaining-for-airworthiness-control-part-output.interface';\r\nimport { GenerateAirworthinessControlTableOutput } from '../../../../shared/types/api-output-types/airworthiness-management/generate-airworthiness-control-table-output.interface';\r\nimport { ReportPostponementElementDTO } from '../../../../shared/types/api-output-types/airworthiness-management/report-postponement-element-dto.interface';\r\nimport { ControlConfigurationOutput } from '../../../../shared/types/api-output-types/fleet-business/control-configuration-output.interface';\r\nimport { BidoMissionEquipmentLWO } from '../../../../shared/types/api-output-types/fleet-management/bido-mission-equipment-lwo.interface';\r\nimport { UpcomingEventDTO } from '../../../../shared/types/api-output-types/upcoming-event-dto.interface';\r\nimport { BidmProjectDTO } from '../../../../shared/types/api-types/bidm-project-dto.interface';\r\nimport { BidoEquipmentDTOId } from '../../../../shared/types/api-types/bido-equipment-dto-id.interface';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BidoNotificationDTOId } from '../../../../shared/types/api-types/bido-notification-dto-id.interface';\r\nimport { BidoNotificationDTO } from '../../../../shared/types/api-types/bido-notification-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AssetReviewFormService extends AbstractAwHttpService {\r\n  private readonly potentialUnitSource: Subject<void>;\r\n\r\n  private readonly _potentialUnit$: Observable<void>;\r\n\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly airworthinessManagementApi: AirworthinessManagementApi,\r\n    private readonly amProjectManagementApi: AMProjectManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly fleetBusinessApi: FleetBusinessApi\r\n  ) {\r\n    super(http, appConfigService);\r\n\r\n    this.potentialUnitSource = new Subject<void>();\r\n\r\n    this._potentialUnit$ = this.potentialUnitSource.asObservable();\r\n  }\r\n\r\n  public get potentialUnit$(): Observable<void> {\r\n    return this._potentialUnit$;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Airworthiness management api\r\n   *************************************************************************/\r\n\r\n  public computeRemainingForAd(\r\n    input: ComputeRemainingForAirworthinessControlPartInput\r\n  ): Observable<ComputeRemainingForAirworthinessControlPartOutput | undefined> {\r\n    return super.post<\r\n      ComputeRemainingForAirworthinessControlPartInput,\r\n      ComputeRemainingForAirworthinessControlPartOutput | undefined\r\n    >(this.airworthinessManagementApi.computeRemainingForAd, input);\r\n  }\r\n\r\n  public computeRemainingForDefect(\r\n    input: ComputeRemainingForAirworthinessControlPartInput\r\n  ): Observable<ComputeRemainingForAirworthinessControlPartOutput | undefined> {\r\n    return super.post<\r\n      ComputeRemainingForAirworthinessControlPartInput,\r\n      ComputeRemainingForAirworthinessControlPartOutput | undefined\r\n    >(this.airworthinessManagementApi.computeRemainingForDefect, input);\r\n  }\r\n\r\n  public computeRemainingForDocument(\r\n    equipmentCode: string\r\n  ): Observable<ComputeRemainingForAirworthinessControlPartOutput | undefined> {\r\n    return super.post<string, ComputeRemainingForAirworthinessControlPartOutput | undefined>(\r\n      this.airworthinessManagementApi.computeRemainingForDocument,\r\n      equipmentCode\r\n    );\r\n  }\r\n\r\n  public computeRemainingForLlp(\r\n    input: ComputeRemainingForAirworthinessControlPartInput\r\n  ): Observable<ComputeRemainingForAirworthinessControlPartOutput | undefined> {\r\n    return super.post<\r\n      ComputeRemainingForAirworthinessControlPartInput,\r\n      ComputeRemainingForAirworthinessControlPartOutput | undefined\r\n    >(this.airworthinessManagementApi.computeRemainingForLlp, input);\r\n  }\r\n\r\n  public computeRemainingForTask(\r\n    input: ComputeRemainingForAirworthinessControlPartInput\r\n  ): Observable<ComputeRemainingForAirworthinessControlPartOutput | undefined> {\r\n    return super.post<\r\n      ComputeRemainingForAirworthinessControlPartInput,\r\n      ComputeRemainingForAirworthinessControlPartOutput | undefined\r\n    >(this.airworthinessManagementApi.computeRemainingForTask, input);\r\n  }\r\n\r\n  public checkEquipmentForAirworthinessControl(\r\n    input: CheckEquipmentForAirworthinessControlInput\r\n  ): Observable<GenerateAirworthinessControlTableOutput> {\r\n    return super.post<CheckEquipmentForAirworthinessControlInput, GenerateAirworthinessControlTableOutput>(\r\n      this.airworthinessManagementApi.checkEquipmentForAirworthinessControl,\r\n      input\r\n    );\r\n  }\r\n\r\n  public computePotentialForAirworthinessControlInput(\r\n    input: ComputePotentialForAirworthinessControlInput\r\n  ): Observable<GenerateAirworthinessControlTableOutput[]> {\r\n    return super.post<ComputePotentialForAirworthinessControlInput, GenerateAirworthinessControlTableOutput[]>(\r\n      this.airworthinessManagementApi.computePotentialForAirworthinessControlInput,\r\n      input\r\n    );\r\n  }\r\n\r\n  public generateAirworthinessControlTable(\r\n    input: GenerateAirworthinessControlTableInput\r\n  ): Observable<GenerateAirworthinessControlTableOutput[]> {\r\n    return super.post<GenerateAirworthinessControlTableInput, GenerateAirworthinessControlTableOutput[]>(\r\n      this.airworthinessManagementApi.generateAirworthinessControlTable,\r\n      input\r\n    );\r\n  }\r\n\r\n  public getCsnLabelForAirworthinessControl(): Observable<string> {\r\n    return super.post<void, string>(this.airworthinessManagementApi.getCsnLabelForAirworthinessControl);\r\n  }\r\n\r\n  public getTsnLabelForAirworthinessControl(): Observable<string> {\r\n    return super.post<void, string>(this.airworthinessManagementApi.getTsnLabelForAirworthinessControl);\r\n  }\r\n\r\n  public getPotentialEquivalentValues(topEquipmentCode: string): Observable<number[]> {\r\n    return super.post<string, number[]>(this.airworthinessManagementApi.getPotentialEquivalentValues, topEquipmentCode);\r\n  }\r\n\r\n  public getWorkPackageList(equipmentCode: string): Observable<AssetWorkPackageStatusTableDTO[]> {\r\n    return super.post<string, AssetWorkPackageStatusTableDTO[]>(\r\n      this.airworthinessManagementApi.getWorkPackageList,\r\n      equipmentCode\r\n    );\r\n  }\r\n\r\n  public createAcrsEvent(input: CreateAcrsInputEvent[]): Observable<string> {\r\n    return super.post<CreateAcrsInputEvent[], string>(this.airworthinessManagementApi.createAcrsEvent, input);\r\n  }\r\n\r\n  public getAssetFlightList(equipmentCode: string): Observable<AssetFlightTableDTO[]> {\r\n    return super.post<string, AssetFlightTableDTO[]>(this.airworthinessManagementApi.getAssetFlightList, equipmentCode);\r\n  }\r\n\r\n  public getPostponedWorkOrderList(equipmentCode: string): Observable<ReportPostponementElementDTO[]> {\r\n    return super.post<string, ReportPostponementElementDTO[]>(\r\n      this.airworthinessManagementApi.getAssetPostponedWorkOrderList,\r\n      equipmentCode\r\n    );\r\n  }\r\n\r\n  public getAssetUpcomingEventsPotentialUnit(input: AssetReviewInput): Observable<UpcomingEventDTO[]> {\r\n    return super.post<AssetReviewInput, UpcomingEventDTO[]>(\r\n      this.airworthinessManagementApi.getAssetUpcomingEventsPotentialUnit,\r\n      input\r\n    );\r\n  }\r\n\r\n  public getAssetAirworthinessDocuments(equipmentCode: string): Observable<ADSBModRowDTO[]> {\r\n    return super.post<string, ADSBModRowDTO[]>(\r\n      this.airworthinessManagementApi.getAssetAirworthinessDocuments,\r\n      equipmentCode\r\n    );\r\n  }\r\n\r\n  public getAssetReviewTabsData(input: AssetReviewInput): Observable<AssetReviewTabsTableDTO> {\r\n    return super.post<AssetReviewInput, AssetReviewTabsTableDTO>(\r\n      this.airworthinessManagementApi.getAssetReviewTabsData,\r\n      input\r\n    );\r\n  }\r\n\r\n  public findWorkOrderOriginDetails(input: AssetWorkOrderOriginInput): Observable<AssetWorkOrderOriginDataOutput> {\r\n    return super.post<AssetWorkOrderOriginInput, AssetWorkOrderOriginDataOutput>(\r\n      this.airworthinessManagementApi.findWorkOrderOriginDetails,\r\n      input\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Am project management api\r\n   *************************************************************************/\r\n\r\n  public findBidmProject(projectId: string): Observable<BidmProjectDTO> {\r\n    return super.post<string, BidmProjectDTO>(this.amProjectManagementApi.findBidmProject, projectId);\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Fleet management api\r\n   *************************************************************************/\r\n\r\n  public getEquipment(input: BidoEquipmentDTOId): Observable<BidoEquipmentDTO> {\r\n    return super.post<BidoEquipmentDTOId, BidoEquipmentDTO>(this.fleetManagementApi.findBidoEquipment, input);\r\n  }\r\n\r\n  public findBidoNotification(notificationId: BidoNotificationDTOId): Observable<BidoNotificationDTO> {\r\n    return super.post<BidoNotificationDTOId, BidoNotificationDTO>(\r\n      this.fleetManagementApi.findBidoNotification,\r\n      notificationId\r\n    );\r\n  }\r\n\r\n  public findBidoNotificationList(id: BidoNotificationDTOId[]): Observable<SearchResultsDTO<BidoNotificationDTO>> {\r\n    return super.post<BidoNotificationDTOId[], SearchResultsDTO<BidoNotificationDTO>>(\r\n      this.fleetManagementApi.findBidoNotificationList,\r\n      id\r\n    );\r\n  }\r\n\r\n  public findAllBidoMissionEquipmentByCriteria(\r\n    criteria: FindAllBidoMissionEquipmentByCriteriaInput\r\n  ): Observable<SearchResultsDTO<BidoMissionEquipmentLWO>> {\r\n    return super.post<FindAllBidoMissionEquipmentByCriteriaInput, SearchResultsDTO<BidoMissionEquipmentLWO>>(\r\n      this.fleetManagementApi.findAllBidoMissionEquipmentLwoByCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Fleet business api\r\n   *************************************************************************/\r\n\r\n  public controlConfiguration(input: ControlConfigurationInput): Observable<ControlConfigurationOutput> {\r\n    return super.post<ControlConfigurationInput, ControlConfigurationOutput>(\r\n      this.fleetBusinessApi.controlConfiguration,\r\n      input\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"grid-cell-header\\\">\\r\\n  <div class=\\\"grid-cell-title-container\\\">\\r\\n    <h3 class=\\\"grid-cell-title\\\">\\r\\n      {{ getComponentName() + \\\".defects\\\" | translate }} ({{ defectsTable ? defectsTable.length : 0 }})\\r\\n    </h3>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"grid-cell-content\\\">\\r\\n  <div *ngIf=\\\"!isDefectTableLoading && _equipmentCode\\\" class=\\\"table-summary-wrapper\\\" style=\\\"width: 25%\\\">\\r\\n    <p-table\\r\\n      id=\\\"defectTableSummary\\\"\\r\\n      [resizableColumns]=\\\"true\\\"\\r\\n      class=\\\"table-control-summary\\\"\\r\\n      [columns]=\\\"defectSummaryTableCols\\\"\\r\\n      [value]=\\\"defectTableSummary\\\"\\r\\n    >\\r\\n      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n        <colgroup>\\r\\n          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n        </colgroup>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n        <tr>\\r\\n          <th\\r\\n            pResizableColumn\\r\\n            *ngFor=\\\"let col of columns\\\"\\r\\n            [ngSwitch]=\\\"col.field\\\"\\r\\n            [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n          >\\r\\n            <span *ngSwitchDefault> {{ getComponentName() + \\\".\\\" + col.field | translate }} </span>\\r\\n          </th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"body\\\" let-columns=\\\"columns\\\" let-rowData>\\r\\n        <tr>\\r\\n          <td\\r\\n            *ngFor=\\\"let col of columns\\\"\\r\\n            [ngSwitch]=\\\"col.field\\\"\\r\\n            [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n            style=\\\"padding-right: 1%; width: 60%\\\"\\r\\n          >\\r\\n            <span *ngSwitchCase=\\\"'nok'\\\" [ngClass]=\\\"{ nok: rowData['nok'] > 0 }\\\">\\r\\n              {{ rowData[col.field] }}\\r\\n            </span>\\r\\n\\r\\n            <span *ngSwitchCase=\\\"'warning'\\\" [ngClass]=\\\"{ warning: rowData['nok'] == 0 && rowData['warning'] > 0 }\\\">\\r\\n              {{ rowData[col.field] }}\\r\\n            </span>\\r\\n\\r\\n            <span\\r\\n              *ngSwitchCase=\\\"'ok'\\\"\\r\\n              [ngClass]=\\\"{ ok: rowData['nok'] == 0 && rowData['warning'] == 0 && rowData['ok'] >= 0 }\\\"\\r\\n            >\\r\\n              {{ rowData[col.field] }}\\r\\n            </span>\\r\\n\\r\\n            <span *ngSwitchDefault>\\r\\n              <span>{{ rowData[col.field] }}</span>\\r\\n            </span>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"table-wrapper\\\">\\r\\n    <p-table\\r\\n      id=\\\"defectsTableForDisplay\\\"\\r\\n      [resizableColumns]=\\\"true\\\"\\r\\n      #ptableDefects\\r\\n      class=\\\"aw-table2\\\"\\r\\n      [columns]=\\\"defectsTableCols\\\"\\r\\n      [value]=\\\"defectsTableForDisplay\\\"\\r\\n      [(selection)]=\\\"selectedDefects\\\"\\r\\n      [scrollable]=\\\"true\\\"\\r\\n      dataKey=\\\"rowId\\\"\\r\\n    >\\r\\n      <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n        <span *ngIf=\\\"!isDefectTableLoading\\\"> &nbsp;</span>\\r\\n\\r\\n        <div *ngIf=\\\"isDefectTableLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n          <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n          <div class=\\\"lds-hourglass\\\"></div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"caption\\\">\\r\\n        <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedDefects.length > 0 }\\\">\\r\\n          <div class=\\\"aw-table-global-filter\\\">\\r\\n            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </label>\\r\\n\\r\\n            <input\\r\\n              #ptableGlobalFilter\\r\\n              class=\\\"aw-table-global-filter-input\\\"\\r\\n              type=\\\"text\\\"\\r\\n              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n              (input)=\\\"ptableDefects.filterGlobal($event.target.value, 'contains')\\\"\\r\\n            />\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"aw-table-actions\\\">\\r\\n            <p-selectButton\\r\\n              *ngIf=\\\"selectedDefects.length === 0\\\"\\r\\n              class=\\\"aw-table-btn\\\"\\r\\n              [(ngModel)]=\\\"selectedFilterAlert\\\"\\r\\n              [options]=\\\"filterAlertList\\\"\\r\\n              (onChange)=\\\"onChangeFilterAlert($event)\\\"\\r\\n            ></p-selectButton>\\r\\n\\r\\n            <button\\r\\n              id=\\\"addToAcrsEventDefectsTableForDisplay\\\"\\r\\n              *ngIf=\\\"selectedDefects.length > 0 && acrsEventCodeList.length > 0 && enableDefectACRSButton()\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addToAcrsEvent()\\\"\\r\\n            >\\r\\n              {{ getComponentName() + \\\".addToAcrsEvent\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              id=\\\"addDefectsTableForDisplay\\\"\\r\\n              *ngIf=\\\"!statusState && selectedDefects.length === 0 && isAddAvailable\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"addDefect()\\\"\\r\\n            >\\r\\n              {{ \\\"global.add\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              id=\\\"deleteDefectsTableForDisplay\\\"\\r\\n              *ngIf=\\\"!statusState && selectedDefects.length > 0\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              color=\\\"warn\\\"\\r\\n              (click)=\\\"deleteDfects()\\\"\\r\\n            >\\r\\n              {{ \\\"global.delete\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              id=\\\"closeDefectsTableForDisplay\\\"\\r\\n              *ngIf=\\\"selectedDefects.length === 1 && !_workDataDefect\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"closeDefect()\\\"\\r\\n            >\\r\\n              {{ \\\"global.close\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              id=\\\"refreshDefectsTableForDisplay\\\"\\r\\n              *ngIf=\\\"selectedDefects.length === 0\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"refreshDefectList()\\\"\\r\\n            >\\r\\n              {{ \\\"global.refresh\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n              id=\\\"exportDefectsTableForDisplay\\\"\\r\\n              *ngIf=\\\"selectedDefects.length === 0\\\"\\r\\n              type=\\\"button\\\"\\r\\n              mat-raised-button\\r\\n              (click)=\\\"exportDefects()\\\"\\r\\n            >\\r\\n              {{ \\\"global.export\\\" | translate }}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n        <colgroup>\\r\\n          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n          <col class=\\\"row-expand-wrapper\\\" />\\r\\n          <col class=\\\"row-action-wrapper\\\" />\\r\\n        </colgroup>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n        <tr>\\r\\n          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n          </th>\\r\\n\\r\\n          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n            {{ getComponentName() + \\\".\\\" + col.field | translate }}\\r\\n          </th>\\r\\n\\r\\n          <th class=\\\"row-expand-wrapper\\\"></th>\\r\\n          <th class=\\\"row-action-wrapper\\\"></th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n          </td>\\r\\n\\r\\n          <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n            <span *ngSwitchCase=\\\"'control'\\\">\\r\\n              <span *ngIf=\\\"rowData.controlResultIcon === '9'\\\" class=\\\"airworthiness-alert airworthiness-alert--ok\\\"\\r\\n                ><span\\r\\n                  *ngIf=\\\"rowData.controlResultAlt !== null && rowData.controlResultAlt !== undefined\\\"\\r\\n                  title=\\\"{{ rowData.controlResultAlt }}\\\"\\r\\n                  >{{ rowData[col.field] }}</span\\r\\n                ><span *ngIf=\\\"rowData.controlResultAlt === null || rowData.controlResultAlt === undefined\\\">\\r\\n                  {{ rowData[col.field] }}\\r\\n                </span></span\\r\\n              >\\r\\n              <span *ngIf=\\\"rowData.controlResultIcon === '10'\\\" class=\\\"airworthiness-alert airworthiness-alert--nok\\\"\\r\\n                ><span\\r\\n                  *ngIf=\\\"rowData.controlResultAlt !== null && rowData.controlResultAlt !== undefined\\\"\\r\\n                  title=\\\"{{ rowData.controlResultAlt }}\\\"\\r\\n                  >{{ rowData[col.field] }}</span\\r\\n                ><span *ngIf=\\\"rowData.controlResultAlt === null || rowData.controlResultAlt === undefined\\\">\\r\\n                  {{ rowData[col.field] }}\\r\\n                </span></span\\r\\n              >\\r\\n              <span *ngIf=\\\"rowData.controlResultIcon === '11'\\\" class=\\\"airworthiness-alert airworthiness-alert--warning\\\"\\r\\n                ><span\\r\\n                  *ngIf=\\\"rowData.controlResultAlt !== null && rowData.controlResultAlt !== undefined\\\"\\r\\n                  title=\\\"{{ rowData.controlResultAlt }}\\\"\\r\\n                  >{{ rowData[col.field] }}</span\\r\\n                ><span *ngIf=\\\"rowData.controlResultAlt === null || rowData.controlResultAlt === undefined\\\">\\r\\n                  {{ rowData[col.field] }}\\r\\n                </span></span\\r\\n              >\\r\\n            </span>\\r\\n\\r\\n            <span *ngSwitchCase=\\\"'notificationLinkedEventCode'\\\"\\r\\n              ><a (click)=\\\"openLinkedEvent(rowData)\\\">{{ rowData[col.field] }}</a></span\\r\\n            >\\r\\n\\r\\n            <span *ngSwitchCase=\\\"'defectTitle'\\\"\\r\\n              ><a *ngIf=\\\"rowData[col.field]\\\" (click)=\\\"openDefect(rowData)\\\">{{ rowData[col.field] }}</a>\\r\\n              <a *ngIf=\\\"!rowData[col.field] && _workDataDefect\\\" (click)=\\\"openDefect(rowData)\\\">{{\\r\\n                rowData.bidoNotificationDTO.notificationCode\\r\\n              }}</a>\\r\\n            </span>\\r\\n\\r\\n            <span *ngSwitchCase=\\\"'isCriticalText'\\\">\\r\\n              <i\\r\\n                *ngIf=\\\"!!rowData[col.field] && rowData[col.field] === 'true'\\\"\\r\\n                class=\\\"fa fa-fw fa-check\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n              ></i>\\r\\n            </span>\\r\\n\\r\\n            <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n          </td>\\r\\n\\r\\n          <td class=\\\"row-expand-wrapper\\\" [pRowToggler]=\\\"rowData\\\">\\r\\n            <i\\r\\n              class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n              [ngClass]=\\\"rowData._expand ? 'fa-minus' : 'fa-plus'\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n              pTooltip=\\\"{{ 'global.showTableRowDetails' | translate }}\\\"\\r\\n              tooltipPosition=\\\"top\\\"\\r\\n              (click)=\\\"toggleDefectsExpand(rowData)\\\"\\r\\n            ></i>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"rowexpansion\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n        <tr class=\\\"row-expanded\\\" *ngIf=\\\"rowData._expand\\\">\\r\\n          <td [attr.colspan]=\\\"columns.length + 2\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div id=\\\"defectName\\\" class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".defectName\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.defectName\\\" [disabled]=\\\"true\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div id=\\\"defectLastAuthor\\\" class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".defectLastAuthor\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.defectLastAuthor\\\" [disabled]=\\\"true\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div id=\\\"defectCALastAuthor\\\" class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".defectCALastAuthor\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.defectCALastAuthor\\\" [disabled]=\\\"true\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div id=\\\"deferralLastAuthor\\\" class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\">\\r\\n                  {{ getComponentName() + \\\".deferralLastAuthor\\\" | translate }}\\r\\n                </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.deferralLastAuthor\\\" [disabled]=\\\"true\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--******************************-->\\r\\n<!--Defect > Add ACRS event dialig-->\\r\\n<!--******************************-->\\r\\n<aw-dialog-table\\r\\n  *ngIf=\\\"showAddACRSEventDialog\\\"\\r\\n  [data]=\\\"eventTableData\\\"\\r\\n  [(display)]=\\\"showAddACRSEventDialog\\\"\\r\\n  (onSelected)=\\\"onSelectedEvent($event)\\\"\\r\\n></aw-dialog-table>\\r\\n\\r\\n<aw-create-event-form\\r\\n  *ngIf=\\\"showDefectPopup\\\"\\r\\n  [(display)]=\\\"showDefectPopup\\\"\\r\\n  [event]=\\\"currentDefect\\\"\\r\\n  [assetTitle]=\\\"assetTitle\\\"\\r\\n  [openMode]=\\\"defectPopupOpenMode\\\"\\r\\n  [defaultCategory]=\\\"defaultCategory\\\"\\r\\n  (onValidated)=\\\"onAddDefect($event)\\\"\\r\\n></aw-create-event-form>\\r\\n\"","module.exports = \".display--flex-column {\\n  display: flex !important;\\n  flex-direction: column !important; }\\n\\n.display--flex-row {\\n  display: flex !important;\\n  flex-direction: row !important; }\\n\\n.display--none {\\n  display: none !important; }\\n\\n.height--100 {\\n  height: 100%; }\\n\\n.min-width--fit-content {\\n  min-width: -webkit-fit-content !important;\\n  min-width: -moz-fit-content !important;\\n  min-width: fit-content !important; }\\n\\n.position--relative {\\n  position: relative !important; }\\n\\n.scroll-y--none {\\n  overflow-y: hidden !important; }\\n\\n.text--unselectable {\\n  -webkit-user-select: none !important;\\n     -moz-user-select: none !important;\\n      -ms-user-select: none !important;\\n          user-select: none !important; }\\n\\n.visibility--hidden {\\n  visibility: hidden !important; }\\n\\n.width--10 {\\n  width: 10%; }\\n\\n.width--20 {\\n  width: 20%; }\\n\\n.width--30 {\\n  width: 30%; }\\n\\n.width--40 {\\n  width: 50%; }\\n\\n.width--50 {\\n  width: 50%; }\\n\\n.width--60 {\\n  width: 60%; }\\n\\n.width--70 {\\n  width: 70%; }\\n\\n.width--80 {\\n  width: 80%; }\\n\\n.width--90 {\\n  width: 90%; }\\n\\n.width--100 {\\n  width: 100%; }\\n\\n.flex--1 {\\n  flex: 1 !important; }\\n\\n.flex--2 {\\n  flex: 2 !important; }\\n\\n.flex--3 {\\n  flex: 3 !important; }\\n\\n.flex--4 {\\n  flex: 4 !important; }\\n\\n.flex--5 {\\n  flex: 5 !important; }\\n\\n.flex--auto {\\n  flex: auto !important; }\\n\\n.flex-row--align-center {\\n  align-items: center !important; }\\n\\n.flex-row--align-end {\\n  align-items: flex-end !important; }\\n\\n.flex-row--align-start {\\n  align-items: flex-start !important; }\\n\\n.flex-row--justify-center {\\n  justify-content: center !important; }\\n\\n.flex-row--justify-end {\\n  justify-content: flex-end !important; }\\n\\n.flex-row--justify-start {\\n  justify-content: flex-start !important; }\\n\\n:host .table-border-left {\\n  border-left: solid 1px #006ea9 !important; }\\n\\n:host .ok {\\n  background-color: #4caf50; }\\n\\n:host .warning {\\n  background-color: #ffc107; }\\n\\n:host .nok {\\n  background-color: #f6685e; }\\n\\n:host .aw-table-row-details .label-value-group > label {\\n  min-width: 10rem; }\\n\\n:host .table-summary-wrapper {\\n  margin: 0 auto;\\n  width: 30rem; }\\n\\n:host .table-control-summary td,\\n:host .table-control-summary th {\\n  background-color: #fff;\\n  border: 0;\\n  line-height: 1.42857143;\\n  vertical-align: middle;\\n  color: #000; }\\n\\n:host .table-control-summary th {\\n  color: #595959;\\n  font-weight: 400; }\\n\\n:host .table-control-summary td {\\n  color: #000; }\\n\\n:host .table-control-summary col,\\n:host .table-control-summary td,\\n:host .table-control-summary th {\\n  padding: 4px; }\\n\\n:host .table-control-summary tr td,\\n:host .table-control-summary tr th {\\n  text-align: center; }\\n\\n:host .table-control-summary tr td:first-of-type,\\n  :host .table-control-summary tr th:first-of-type {\\n    padding-right: 5%;\\n    text-align: right; }\\n\\n:host .table-control-summary .ui-table-tbody tr:nth-of-type(2) td {\\n  padding-top: 8px; }\\n\\n:host .table-control-summary td > span {\\n  background-color: #fff;\\n  display: block;\\n  padding: calc(8px - 4px); }\\n\\n:host .table-control-summary td > span:not(.category) {\\n    background-color: #f0f0f0; }\\n\\n:host .table-control-summary td > span.ok {\\n    background-color: #4caf50; }\\n\\n:host .table-control-summary td > span.warning {\\n    background-color: #ffc107; }\\n\\n:host .table-control-summary td > span.nok {\\n    background-color: #f6685e; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { DefectsDTO } from '../../../main/maintenance/asset-review/form/types/defects-dto.interface';\r\nimport { RemainingDefectsDTO } from '../../../main/maintenance/asset-review/form/types/remaining-defects-dto.interface';\r\nimport { AWPropertiesConstants } from '../../constants/aw-properties-constants';\r\nimport { BidoAttributeConstants } from '../../constants/bido-attribute-constants';\r\nimport { ComponentConstants } from '../../constants/component-constants';\r\nimport { ControlConfigConstants } from '../../constants/control-config-constants';\r\nimport { ComponentOpenMode } from '../../enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../services/confirmation.service';\r\nimport { DateService } from '../../services/date.service';\r\nimport { ExportService } from '../../services/export.service';\r\nimport { MessageService } from '../../services/message.service';\r\nimport { SerializationService } from '../../services/serialization.service';\r\nimport { TabService } from '../../services/tab.service';\r\nimport { AssociateDefectToAcrsEventInput } from '../../types/api-input-types/airworthiness-management/associate-defect-to-acrs-event-input.interface';\r\nimport { ReportDefectElementDTO } from '../../types/api-output-types/airworthiness-management/report-defect-element-dto.interface';\r\nimport { BidoNotificationAttributeDTO } from '../../types/api-types/bido-notification-attribute-dto.interface';\r\nimport { BidoNotificationDTOId } from '../../types/api-types/bido-notification-dto-id.interface';\r\nimport { BidoNotificationDTO } from '../../types/api-types/bido-notification-dto.interface';\r\nimport { NotificationTableDto } from '../../types/api-types/notification-table-dto.interface';\r\nimport { WorkDataDefect } from '../../types/component-input-types/maintenance/work-data-defect.interface';\r\nimport { GenericComponent } from '../../types/generic-component';\r\nimport { PageComponentData } from '../../types/page-component-data.interface';\r\nimport { TableColumn } from '../../types/table-column.interface';\r\n\r\nimport { DefectListService } from './defect-list.service';\r\n\r\ninterface DefectExportDTO {\r\n  defectTitle?: string;\r\n  control?: string;\r\n  remainingText?: string;\r\n  formattedNotificationStartDate?: string;\r\n  defectDetectionContext?: string;\r\n  isCriticalText?: string;\r\n  notificationStatus?: string;\r\n  defectCADescriptionShort?: string;\r\n  notificationLinkedEventCode?: string;\r\n}\r\n\r\ninterface DefectCountDTO {\r\n  ok: number;\r\n  nok: number;\r\n  warning: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-defect-list',\r\n  styleUrls: ['./defect-list.component.scss'],\r\n  templateUrl: './defect-list.component.html'\r\n})\r\nexport class DefectListComponent extends GenericComponent {\r\n  public awPropertiesConstants: typeof AWPropertiesConstants;\r\n\r\n  @Input()\r\n  public acrsEventCodeList: BidoNotificationDTOId[];\r\n\r\n  @Input()\r\n  public statusState: boolean;\r\n\r\n  @Input()\r\n  public set equipmentCode(equipmentCode) {\r\n    if (equipmentCode && this._equipmentCode !== equipmentCode) {\r\n      this._equipmentCode = equipmentCode;\r\n      this.refreshDefectTable();\r\n    }\r\n  }\r\n  public get equipmentCode() {\r\n    return this._equipmentCode;\r\n  }\r\n\r\n  @Input()\r\n  public set workDataDefect(workDataDefect) {\r\n    if (workDataDefect && this._workDataDefect !== workDataDefect) {\r\n      this._workDataDefect = workDataDefect;\r\n      if (this._workDataDefect.workOrder && this._workDataDefect.workPackage) {\r\n        this.detectionContext =\r\n          `${this._workDataDefect.workPackage.projectNumber}` + `/${this._workDataDefect.workOrder.woCode}`;\r\n      } else if (this._workDataDefect.workPackage) {\r\n        this.detectionContext = `${this._workDataDefect.workPackage.projectNumber}`;\r\n      }\r\n      if (!!this.detectionContext) {\r\n        this.refreshDefectTableWorkData();\r\n      }\r\n    }\r\n  }\r\n\r\n  public get workDataDefect() {\r\n    return this._workDataDefect;\r\n  }\r\n\r\n  @Input()\r\n  public equipmentName: string;\r\n\r\n  @Input()\r\n  public isAddAvailable: boolean;\r\n\r\n  @Output()\r\n  public updateDefectSummary: EventEmitter<DefectCountDTO>;\r\n\r\n  public _equipmentCode: string = '';\r\n  public _workDataDefect: WorkDataDefect;\r\n\r\n  public defectsByDetectionContext: ReportDefectElementDTO[];\r\n\r\n  public detectionContext: string;\r\n  public defectsTable: ReportDefectElementDTO[] = [];\r\n  public defectsTableForDisplay: DefectsDTO[];\r\n  public defectsTableBackup: DefectsDTO[];\r\n  public defectsTableCols: TableColumn[];\r\n  public selectedDefects: DefectsDTO[];\r\n\r\n  // Defect\r\n  public currentDefect: NotificationTableDto | undefined;\r\n  public defectPopupOpenMode: ComponentOpenMode;\r\n  public showDefectPopup: boolean;\r\n  public assetTitle: string;\r\n  public defaultCategory: string = '5-def';\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public remainingTable: any;\r\n  public remainingTableCols: TableColumn[];\r\n  public remainingTableCols2: TableColumn[];\r\n\r\n  public defectsToExport: DefectExportDTO[] = [];\r\n  public isDefectTableLoading: boolean = false;\r\n  public defectTableSummary: { ok?: number; warning?: number; nok?: number }[] = [];\r\n\r\n  public okString: string;\r\n  public nokString: string | '';\r\n  public warningString: string | '';\r\n\r\n  public defectSummaryTableCols = [\r\n    { field: 'ok', alignment: 'center' },\r\n    { field: 'warning', alignment: 'center' },\r\n    { field: 'nok', alignment: 'center' }\r\n  ];\r\n\r\n  public showAddACRSEventDialog: boolean | false;\r\n\r\n  private defectCounts: DefectCountDTO;\r\n\r\n  private defectResultsExportName: string;\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    private readonly exportService: ExportService,\r\n    private readonly dateService: DateService,\r\n    private readonly defectListService: DefectListService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly translateService: TranslateService,\r\n    private readonly serializationService: SerializationService,\r\n    private readonly tabService: TabService\r\n  ) {\r\n    super(ComponentOpenMode.Write);\r\n\r\n    this.init();\r\n    // tslint:disable-next-line: no-unsafe-any\r\n    this.defectListService.setRefreshButton(this.refreshDefectList.bind(this));\r\n\r\n    this.awPropertiesConstants = AWPropertiesConstants;\r\n  }\r\n\r\n  public init(): void {\r\n    this.updateDefectSummary = new EventEmitter<DefectCountDTO>();\r\n\r\n    this.defectsTableForDisplay = [];\r\n    this.selectedDefects = [];\r\n    this.initDefectSummary();\r\n    this.initDefectsSummaryCount();\r\n    this.setDefectExportFilename();\r\n    this.setTableCols();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'DefectListComponent';\r\n  }\r\n\r\n  public refreshDefectTableWorkData(): void {\r\n    this.getDefectsBydetectionContext();\r\n  }\r\n\r\n  public getDefectsBydetectionContext(): void {\r\n    this.selectedDefects = [];\r\n    this.defectsTable = [];\r\n    this.defectsTableBackup = [];\r\n    this.defectsTableForDisplay = [];\r\n    this.defectTableSummary = [];\r\n    this.initDefectsSummaryCount();\r\n    this.initDefectSummary();\r\n    this.isDefectTableLoading = true;\r\n\r\n    this.defectListService.findDefectsByDetectionContext(this.detectionContext).subscribe((defects) => {\r\n      this.defectsTable = defects;\r\n      this.loadDefectsTable();\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onChangeFilterAlert(event: any): void {\r\n    switch (event.value) {\r\n      case 0:\r\n        this.defectsTableForDisplay = JSON.parse(JSON.stringify(this.defectsTableBackup));\r\n        break;\r\n      case 1:\r\n        this.defectsTableForDisplay = JSON.parse(JSON.stringify(this.defectsTableForDisplay)).filter(\r\n          (defect: { isCriticalText: string }) => defect.isCriticalText === 'true'\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public setTableCols(): void {\r\n    this.defectsTableCols = [\r\n      { field: 'defectTitle', alignment: 'left', width: '10%' },\r\n      { field: 'control', alignment: 'left', width: '7%' },\r\n      { field: 'remainingText', alignment: 'left' },\r\n      { field: 'formattedNotificationStartDate', alignment: 'left', width: '12%' },\r\n      { field: 'defectDetectionContext', alignment: 'left' },\r\n      { field: 'isCriticalText', alignment: 'left', width: '5%' },\r\n      { field: 'notificationStatus', alignment: 'left' },\r\n      { field: 'defectCADescriptionShort', alignment: 'left' },\r\n      { field: 'notificationLinkedEventCode', alignment: 'left' }\r\n    ];\r\n  }\r\n\r\n  public enableDefectACRSButton(): boolean {\r\n    let response = true;\r\n    this.selectedDefects.forEach((defect) => {\r\n      response =\r\n        defect.notificationLinkedEventCode === null || defect.notificationLinkedEventCode === undefined\r\n          ? response && true\r\n          : response && false;\r\n    });\r\n\r\n    return response;\r\n  }\r\n\r\n  public addToAcrsEvent(): void {\r\n    this.showAddACRSEventDialog = true;\r\n  }\r\n\r\n  public addDefect() {\r\n    this.currentDefect = {\r\n      bidoNotificationDTO: {\r\n        reportingPeriodStartDate: new Date(),\r\n        bidoNotificationTypeDTO: {}\r\n      }\r\n    };\r\n    this.defectPopupOpenMode = ComponentOpenMode.Create;\r\n    this.showDefectPopup = true;\r\n    this.assetTitle = this.equipmentName;\r\n  }\r\n\r\n  public onAddDefect(event: NotificationTableDto): void {\r\n    let isExistingEvent = false;\r\n    event.bidoNotificationDTO.reportingPeriodStartDateStr = this.dateService.dateToString(\r\n      event.bidoNotificationDTO.reportingPeriodStartDate\r\n    );\r\n    if (!!this.defectsTableForDisplay) {\r\n      this.defectsTableForDisplay.forEach((eventDisplayed) => {\r\n        if (\r\n          !!eventDisplayed.bidoNotificationDTO &&\r\n          !!event.bidoNotificationDTO &&\r\n          eventDisplayed.bidoNotificationDTO.typeCode === event.bidoNotificationDTO.typeCode &&\r\n          eventDisplayed.bidoNotificationDTO.reportingDateStr === event.bidoNotificationDTO.reportingPeriodStartDateStr\r\n        ) {\r\n          isExistingEvent = true;\r\n        }\r\n      });\r\n    }\r\n    if (isExistingEvent) {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('warningOnDefectExists'));\r\n    } else if (this._workDataDefect) {\r\n      event.bidoNotificationDTO.equipmentCode = this._workDataDefect.equipementCode;\r\n      this.defectListService.createBidoNotification(event.bidoNotificationDTO).subscribe((notificationId) => {\r\n        const attribute: BidoNotificationAttributeDTO = {\r\n          notificationCode: notificationId.notificationCode,\r\n          attributeValue: this.detectionContext,\r\n          attributeId: BidoAttributeConstants.EVENT_DEFECT_DETECTION_CONTEXT.toString()\r\n        };\r\n        this.defectListService.createBidoNotificationAttribute(attribute).subscribe((attributeId) => {\r\n          this.getDefectsBydetectionContext();\r\n          const timer = 10;\r\n          setTimeout(() => {\r\n            this.openDefectAdd(notificationId.notificationCode);\r\n          }, timer);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public onSelectedEvent(event: BidoNotificationDTO) {\r\n    const bidoNotificationDTOList: BidoNotificationDTO[] = [];\r\n    this.selectedDefects.forEach((defect) => {\r\n      if (!!defect && !!defect._obj) {\r\n        bidoNotificationDTOList.push(defect._obj.bidoNotificationDTO);\r\n      }\r\n    });\r\n\r\n    if (!!event.notificationCode && bidoNotificationDTOList.length > 0) {\r\n      const input: AssociateDefectToAcrsEventInput = {\r\n        eventCode: event.notificationCode,\r\n        bidoNotificationDTOList\r\n      };\r\n      this.defectListService.associateDefectsAcrsEvent(input).subscribe(() => {\r\n        this.refreshDefectTable();\r\n      });\r\n    }\r\n  }\r\n\r\n  public toggleDefectsExpand(row: DefectsDTO): void {\r\n    this.remainingTable = [];\r\n    this.remainingTableCols = [\r\n      { field: 'defectName', alignment: 'left' },\r\n      { field: 'defectLastAuthor', alignment: 'left' },\r\n      { field: 'defectCALastAuthor', alignment: 'left' },\r\n      { field: 'deferralLastAuthor', alignment: 'left' }\r\n    ];\r\n    const remainingRow: RemainingDefectsDTO = {};\r\n    const def = this.defectsTable.filter((defect) => defect.defectName === row.defectName);\r\n    remainingRow.defectName = def[0].defectName;\r\n    remainingRow.defectLastAuthor = def[0].defectLastAuthor;\r\n    remainingRow.defectCALastAuthor = def[0].defectCALastAuthor;\r\n    remainingRow.deferralLastAuthor = def[0].deferralLastAuthor;\r\n    this.remainingTable.push(remainingRow);\r\n    row._expand = !row._expand;\r\n  }\r\n\r\n  public deleteDfects(): void {\r\n    const confirmMessageKey =\r\n      this.selectedDefects.length > 1 ? 'confirmDeleteSelectedDefects' : 'confirmDeleteSelectedDefect';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(confirmMessageKey),\r\n      accept: () => {\r\n        const eventIds: BidoNotificationDTOId[] = [];\r\n        this.selectedDefects.map((event) => {\r\n          if (!!event && !!event.bidoNotificationDTO.notificationCode) {\r\n            const dto: BidoNotificationDTOId = {\r\n              notificationCode: event.bidoNotificationDTO.notificationCode\r\n            };\r\n\r\n            eventIds.push(dto);\r\n          }\r\n        });\r\n\r\n        this.defectListService.removeBidoNotification(eventIds).subscribe((msg: string) => {\r\n          const successMessageKey =\r\n            this.selectedDefects.length > 1 ? 'successOnDeleteDefects' : 'successOnDeleteDefect';\r\n          if (!msg) {\r\n            this.messageService.showSuccessMessage(this.getTranslateKey(successMessageKey));\r\n          } else {\r\n            this.messageService.showWarningMessage(msg);\r\n          }\r\n          this.selectedDefects = [];\r\n          this.refreshDefectTableWorkData();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public refreshDefectList(): void {\r\n    if (this._workDataDefect) {\r\n      this.refreshDefectTableWorkData();\r\n    } else {\r\n      this.refreshDefectTable();\r\n    }\r\n  }\r\n\r\n  public refreshDefectTable(): void {\r\n    this.selectedDefects = [];\r\n    this.defectsTable = [];\r\n    this.defectsTableBackup = [];\r\n    this.defectsTableForDisplay = [];\r\n    this.defectTableSummary = [];\r\n    this.initDefectsSummaryCount();\r\n    this.initDefectSummary();\r\n    this.isDefectTableLoading = true;\r\n    this.defectListService.getDefectList(this._equipmentCode).subscribe((results) => {\r\n      this.defectsTable = results;\r\n      this.loadDefectsTable();\r\n    });\r\n  }\r\n\r\n  public openDefect(row: DefectsDTO): void {\r\n    if (row.bidoNotificationDTO.notificationCode) {\r\n      const defectId: BidoNotificationDTOId = {\r\n        notificationCode: row.bidoNotificationDTO.notificationCode\r\n      };\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.FLE_DEFECT_FORM,\r\n        objectId: this.serializationService.serialize(defectId),\r\n        openMode: ComponentOpenMode.Read\r\n      };\r\n\r\n      const labelKey = 'transaction.' + data.componentId;\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    }\r\n  }\r\n\r\n  public openDefectAdd(objectId: string | undefined): void {\r\n    if (!!objectId) {\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.FLE_DEFECT_FORM,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n\r\n      const defectId: BidoNotificationDTOId = {\r\n        notificationCode: objectId\r\n      };\r\n      data.objectId = this.serializationService.serialize(defectId);\r\n\r\n      const labelKey = 'transaction.' + data.componentId;\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    }\r\n  }\r\n\r\n  public closeDefect(): void {\r\n    this.confirmationService.confirm({\r\n      messageKey: this.getTranslateKey('confirmCloseDefect'),\r\n      accept: () => {\r\n        this.selectedDefects.forEach((defect) => {\r\n          this.defectListService.closeAssetDefect(defect.bidoNotificationDTO).subscribe(\r\n            (result) => {\r\n              this.messageService.showSuccessMessage(result);\r\n              this.refreshDefectTable();\r\n              // this.loadSummaryData();\r\n            },\r\n            (error) => {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('errorOnCloseDefect'));\r\n            }\r\n          );\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public exportDefects(): void {\r\n    this.exportService.toExcel(this.defectsToExport, this.defectResultsExportName, this.getComponentName());\r\n  }\r\n\r\n  private initDefectsSummaryCount(): void {\r\n    this.defectCounts = {\r\n      ok: 0,\r\n      nok: 0,\r\n      warning: 0\r\n    };\r\n  }\r\n\r\n  private loadDefectsTable(): void {\r\n    this.isDefectTableLoading = true;\r\n    if (this.defectsTable.length > 0) {\r\n      this.bindDefectsTable();\r\n\r\n      this.defectCounts.ok = this.defectsTable.filter(\r\n        (def) => def.controlResultIcon === ControlConfigConstants.ICON_GREEN\r\n      ).length;\r\n      this.defectCounts.nok = this.defectsTable.filter(\r\n        (def) => def.controlResultIcon === ControlConfigConstants.ICON_RED\r\n      ).length;\r\n      this.defectCounts.warning = this.defectsTable.filter(\r\n        (def) => def.controlResultIcon === ControlConfigConstants.ICON_YELLOW\r\n      ).length;\r\n\r\n      this.defectTableSummary[0].ok = this.defectCounts.ok;\r\n      this.defectTableSummary[0].nok = this.defectCounts.nok;\r\n      this.defectTableSummary[0].warning = this.defectCounts.warning;\r\n\r\n      this.updateDefectSummary.emit(this.defectCounts);\r\n    } else {\r\n      this.isDefectTableLoading = false;\r\n    }\r\n  }\r\n\r\n  private bindDefectsTable(): void {\r\n    this.defectsTable.forEach((def) => {\r\n      const defect: DefectsDTO = {\r\n        defectIsCritical: false,\r\n        bidoNotificationDTO: {\r\n          bidoNotificationTypeDTO: {}\r\n        }\r\n      };\r\n      defect.rowId = Math.random();\r\n      defect.defectName = def.defectName;\r\n      defect.remainingText = def.remainingText;\r\n      defect.formattedNotificationStartDate = def.formattedNotificationStartDate;\r\n      defect.defectDetectionContext = def.defectDetectionContext;\r\n      if (!!def.defectIsCritical) {\r\n        defect.isCriticalText = `${def.defectIsCritical}`;\r\n      }\r\n      defect.notificationStatus = def.notificationStatus;\r\n      defect.defectCADescriptionShort = def.defectCADescriptionShort;\r\n      defect.notificationLinkedEventCode = def.notificationLinkedEventCode;\r\n      defect.defectLastAuthor = def.defectLastAuthor;\r\n      defect.defectCALastAuthor = def.defectCALastAuthor;\r\n      defect.deferralLastAuthor = def.deferralLastAuthor;\r\n      defect.controlResultIcon = def.controlResultIcon;\r\n      defect.control =\r\n        def.controlResultIcon === ControlConfigConstants.ICON_GREEN\r\n          ? this.okString\r\n          : def.controlResultIcon === ControlConfigConstants.ICON_RED\r\n          ? this.nokString\r\n          : def.controlResultIcon === ControlConfigConstants.ICON_YELLOW\r\n          ? this.warningString\r\n          : '';\r\n      defect.bidoNotificationDTO = def.bidoNotificationDTO;\r\n      defect._obj = def;\r\n      defect.defectTitle = def.defectTitle;\r\n      this.defectsTableForDisplay.push(defect);\r\n    });\r\n    this.defectsTableBackup = JSON.parse(JSON.stringify(this.defectsTableForDisplay));\r\n    this.setDefectExportData();\r\n    this.isDefectTableLoading = false;\r\n  }\r\n\r\n  private initDefectSummary(): void {\r\n    this.defectTableSummary = [\r\n      {\r\n        ok: 0,\r\n        warning: 0,\r\n        nok: 0\r\n      }\r\n    ];\r\n  }\r\n\r\n  private setDefectExportData(): void {\r\n    this.defectsToExport = [];\r\n    this.defectsTableForDisplay.forEach((defect) => {\r\n      const defectToExport: DefectExportDTO = {\r\n        defectTitle: defect.defectTitle,\r\n        control: defect.control,\r\n        remainingText: defect.remainingText,\r\n        formattedNotificationStartDate: defect.formattedNotificationStartDate,\r\n        defectDetectionContext: defect.defectDetectionContext,\r\n        isCriticalText: defect.isCriticalText,\r\n        notificationStatus: defect.notificationStatus,\r\n        defectCADescriptionShort: defect.defectCADescriptionShort,\r\n        notificationLinkedEventCode: defect.notificationLinkedEventCode\r\n      };\r\n      this.defectsToExport.push(defectToExport);\r\n    });\r\n  }\r\n\r\n  private setDefectExportFilename(): void {\r\n    const filename = `${this.getComponentName()}.defectExportFileName`;\r\n    this.translateService.get(filename).subscribe((result) => {\r\n      this.defectResultsExportName = result;\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { CreateEventFormModule } from '../create-event-form/create-event-form.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\n\r\nimport { AirworthinessTableRemainingValuesComponent } from './../../../main/maintenance/asset-review/form/airworthiness-table-remaining-values/airworthiness-table-remaining-values.component';\r\nimport { DialogTableModule } from './../dialog-table/dialog-table.module';\r\nimport { DefectListComponent } from './defect-list.component';\r\nimport { DefectListService } from './defect-list.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  SelectButtonModule,\r\n  TooltipModule,\r\n  TableModule,\r\n  DialogTableModule,\r\n  ModalModule,\r\n  DropdownModule,\r\n  CalendarModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [CreateEventFormModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DefectListComponent, AirworthinessTableRemainingValuesComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [DefectListService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class DefectListModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../api/fleet-management.api';\r\nimport { AbstractAwHttpService } from '../../http/abstract-aw-http';\r\nimport { AppConfigService } from '../../services/app-config.service';\r\nimport { BidoNotificationAttributeDTOId } from '../../types/api-types/bido-notification-attribute-dto-id.interface';\r\nimport { BidoNotificationAttributeDTO } from '../../types/api-types/bido-notification-attribute-dto.interface';\r\nimport { BidoNotificationDTOId } from '../../types/api-types/bido-notification-dto-id.interface';\r\n\r\nimport { AirworthinessManagementApi } from './../../api/airworthiness-management.api';\r\nimport { AssociateDefectToAcrsEventInput } from './../../types/api-input-types/airworthiness-management/associate-defect-to-acrs-event-input.interface';\r\nimport { ReportDefectElementDTO } from './../../types/api-output-types/airworthiness-management/report-defect-element-dto.interface';\r\nimport { BidoNotificationDTO } from './../../types/api-types/bido-notification-dto.interface';\r\n\r\n@Injectable()\r\nexport class DefectListService extends AbstractAwHttpService {\r\n  private readonly _refreshButtonSource: Subject<() => void>;\r\n  private readonly _refreshButton$: Observable<() => void>;\r\n\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly airworthinessManagementApi: AirworthinessManagementApi,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n    this._refreshButtonSource = new Subject<() => void>();\r\n    this._refreshButton$ = this._refreshButtonSource.asObservable();\r\n  }\r\n\r\n  public get refreshButton$(): Observable<() => void> {\r\n    return this._refreshButton$;\r\n  }\r\n\r\n  public setRefreshButton(f: () => void): void {\r\n    this._refreshButtonSource.next(f);\r\n  }\r\n\r\n  public getDefectList(equipmentCode: string): Observable<ReportDefectElementDTO[]> {\r\n    return super.post<string, ReportDefectElementDTO[]>(\r\n      this.airworthinessManagementApi.getAssetDefectList,\r\n      equipmentCode\r\n    );\r\n  }\r\n\r\n  public closeAssetDefect(bidoNotificationDTO: BidoNotificationDTO): Observable<string> {\r\n    return super.post<BidoNotificationDTO, string>(\r\n      this.airworthinessManagementApi.closeAssetDefect,\r\n      bidoNotificationDTO\r\n    );\r\n  }\r\n\r\n  public associateDefectsAcrsEvent(input: AssociateDefectToAcrsEventInput): Observable<void> {\r\n    return super.post<AssociateDefectToAcrsEventInput, void>(\r\n      this.airworthinessManagementApi.associateDefectsAcrsEvent,\r\n      input\r\n    );\r\n  }\r\n\r\n  /***********************\r\n   * Fleet Managment Api\r\n   **********************/\r\n\r\n  public findDefectsByDetectionContext(detectionContext: string): Observable<ReportDefectElementDTO[]> {\r\n    return super.post<string, ReportDefectElementDTO[]>(\r\n      this.fleetManagementApi.findDefectsByDetectionContext,\r\n      detectionContext\r\n    );\r\n  }\r\n\r\n  public findAllBidoNotificationAttributeByNotificationCode(\r\n    bidoNotificationDTOId: BidoNotificationDTOId\r\n  ): Observable<BidoNotificationAttributeDTO[]> {\r\n    return super.post<BidoNotificationDTOId, BidoNotificationAttributeDTO[]>(\r\n      this.fleetManagementApi.findAllBidoNotificationAttributeByNotificationCode,\r\n      bidoNotificationDTOId\r\n    );\r\n  }\r\n\r\n  public createBidoNotification(bidoNotificationDTO: BidoNotificationDTO): Observable<BidoNotificationDTOId> {\r\n    return super.post<BidoNotificationDTO, BidoNotificationDTOId>(\r\n      this.fleetManagementApi.createBidoNotification,\r\n      bidoNotificationDTO\r\n    );\r\n  }\r\n\r\n  public createBidoNotificationAttribute(\r\n    notification: BidoNotificationAttributeDTO\r\n  ): Observable<BidoNotificationAttributeDTOId> {\r\n    return super.post<BidoNotificationAttributeDTO, BidoNotificationAttributeDTOId>(\r\n      this.fleetManagementApi.createBidoNotificationAttribute,\r\n      notification\r\n    );\r\n  }\r\n\r\n  public removeBidoNotification(bireId: BidoNotificationDTOId[]): Observable<String> {\r\n    return super.post<BidoNotificationDTOId[], String>(this.fleetManagementApi.removeBidoNotification, bireId);\r\n  }\r\n}\r\n"],"sourceRoot":""}