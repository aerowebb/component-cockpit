{"version":3,"sources":["webpack:///./node_modules/primeng/dialog.js","webpack:///./node_modules/primeng/keyfilter.js","webpack:///./node_modules/primeng/message.js","webpack:///./node_modules/primeng/radiobutton.js","webpack:///./src/app/main/flight-operations/flight-operations.module.ts","webpack:///./src/app/main/flight-operations/mission-form/dialog-flights-asset-popup/dialog-flights-asset-popup.component.html","webpack:///./src/app/main/flight-operations/mission-form/dialog-flights-asset-popup/dialog-flights-asset-popup.component.ts","webpack:///./src/app/main/flight-operations/mission-form/dialog-flights-popup/dialog-flights-popup.component.html","webpack:///./src/app/main/flight-operations/mission-form/dialog-flights-popup/dialog-flights-popup.component.ts","webpack:///./src/app/main/flight-operations/mission-form/mission-form.component.html","webpack:///./src/app/main/flight-operations/mission-form/mission-form.component.scss","webpack:///./src/app/main/flight-operations/mission-form/mission-form.component.ts","webpack:///./src/app/main/flight-operations/mission-form/mission-form.service.ts","webpack:///./src/app/main/flight-operations/mission-form/mission-table-remaining-values/mission-table-remaining-values.component.html","webpack:///./src/app/main/flight-operations/mission-form/mission-table-remaining-values/mission-table-remaining-values.component.ts","webpack:///./src/app/main/flight-operations/mission-search/mission-search.component.html","webpack:///./src/app/main/flight-operations/mission-search/mission-search.component.ts","webpack:///./src/app/main/flight-operations/mission-search/mission-search.service.ts","webpack:///./src/app/main/flight-operations/operation-search/dialog-operation/dialog-operation.component.html","webpack:///./src/app/main/flight-operations/operation-search/dialog-operation/dialog-operation.component.scss","webpack:///./src/app/main/flight-operations/operation-search/dialog-operation/dialog-operation.component.ts","webpack:///./src/app/main/flight-operations/operation-search/operation-search.component.html","webpack:///./src/app/main/flight-operations/operation-search/operation-search.component.scss","webpack:///./src/app/main/flight-operations/operation-search/operation-search.component.ts","webpack:///./src/app/shared/components/dialog-status/dialog-status.component.html","webpack:///./src/app/shared/components/dialog-status/dialog-status.component.ts","webpack:///./src/app/shared/components/dialog-status/dialog-status.module.ts","webpack:///./src/app/shared/components/dialog-work-package/dialog-work-package.module.ts"],"names":[],"mappings":"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","file":"flight-operations-flight-operations-module.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dialog/dialog\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/keyfilter/keyfilter\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/message/message\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/radiobutton/radiobutton\"));","import { DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\r\n\r\nimport { AngularCommonSharedModule } from '../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DialogSearchOperationalConfigModule } from '../../shared/components/dialog-search-operational-config/dialog-search-operational-config.module';\r\nimport { DialogStatusModule } from '../../shared/components/dialog-status/dialog-status.module';\r\nimport { DialogWorkPackageModule } from '../../shared/components/dialog-work-package/dialog-work-package.module';\r\nimport { ModalModule } from '../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../shared/components/table/table.module';\r\nimport { DynamicComponentLoaderModule } from '../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { FunctionalLocationSearchService } from '../engineering-management/functional-location-search/functional-location-search.service';\r\n\r\nimport { DialogFlightAssetPopupComponent } from './mission-form/dialog-flights-asset-popup/dialog-flights-asset-popup.component';\r\nimport { DialogFlightPopupComponent } from './mission-form/dialog-flights-popup/dialog-flights-popup.component';\r\nimport { MissionFormComponent } from './mission-form/mission-form.component';\r\nimport { MissionFormService } from './mission-form/mission-form.service';\r\nimport { MissionTableRemainingValuesComponent } from './mission-form/mission-table-remaining-values/mission-table-remaining-values.component';\r\nimport { MissionSearchComponent } from './mission-search/mission-search.component';\r\nimport { MissionSearchService } from './mission-search/mission-search.service';\r\nimport { DialogOperationComponent } from './operation-search/dialog-operation/dialog-operation.component';\r\nimport { OperationSearchComponent } from './operation-search/operation-search.component';\r\nimport { OperationSearchService } from './operation-search/operation-search.service';\r\n\r\nconst OTHER_LIBS_MODULES = [\r\n  CalendarModule,\r\n  ChartModule,\r\n  CheckboxModule,\r\n  DialogModule,\r\n  DropdownModule,\r\n  InputTextareaModule,\r\n  RadioButtonModule,\r\n  SplitButtonModule,\r\n  PrimeNgTableModule,\r\n  TooltipModule,\r\n  TriStateCheckboxModule,\r\n  KeyFilterModule,\r\n  MessageModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [DialogSearchOperationalConfigModule, TableModule];\r\n\r\nconst COMPONENTS = [DialogFlightPopupComponent, DialogFlightAssetPopupComponent, DialogOperationComponent];\r\n\r\nconst DYNAMIC_COMPONENTS = [\r\n  OperationSearchComponent,\r\n  MissionSearchComponent,\r\n  MissionFormComponent,\r\n  MissionTableRemainingValuesComponent\r\n];\r\n\r\nconst SERVICES = [OperationSearchService, MissionSearchService, MissionFormService, FunctionalLocationSearchService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ModalModule,\r\n    ComponentSidebarModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    DialogStatusModule,\r\n    ...OTHER_LIBS_MODULES,\r\n    ...INTERNAL_MODULES,\r\n    DialogWorkPackageModule\r\n  ],\r\n  providers: [...SERVICES, DatePipe]\r\n})\r\nexport class FlightOperationsModule {}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".familyVariantCode\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              appendTo=\\\"body\\\"\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [options]=\\\"familyVariants\\\"\\r\\n              [(ngModel)]=\\\"selectedFamilyVariantCode\\\"\\r\\n              (onChange)=\\\"loadAssets()\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n            ></p-dropdown>\\r\\n            <!-- <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"selectFlight.familyVariantCode\\\" [disabled]=\\\"true\\\" /> -->\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".chronoNumber\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"selectFlight.chronoNumber\\\" [disabled]=\\\"true\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".flightStatus\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"selectFlight.flightStatus\\\" [disabled]=\\\"true\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".startDate\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"startDate\\\" [disabled]=\\\"true\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".endDate\\\" | translate }} </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"endDate\\\" [disabled]=\\\"true\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".asset\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              appendTo=\\\"body\\\"\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [options]=\\\"selectFlight.asset\\\"\\r\\n              [(ngModel)]=\\\"selectedAssetValue\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"add()\\\"\\r\\n      [disabled]=\\\"selectFlight.familyVariantCode === undefined || selectFlight.familyVariantCode === null\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { DateService } from '../../../../shared/services/date.service';\r\nimport { MissionEquipmentTableOutputDTO } from '../../../../shared/types/api-output-types/fleet-management/bido-mission-flight-table-output-dto';\r\nimport { DialogComponent } from '../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { MissionFormService } from '../mission-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-flights-asset-popup',\r\n  templateUrl: './dialog-flights-asset-popup.component.html'\r\n})\r\nexport class DialogFlightAssetPopupComponent extends DialogComponent implements OnInit {\r\n  @Input('editFlightSelect')\r\n  public selectFlight: MissionEquipmentTableOutputDTO;\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  // tslint:disable-next-line:no-any\r\n  public onAdded: EventEmitter<any>;\r\n  public familyVariants: LabelValue<string>[];\r\n  public startDate: string | undefined;\r\n  public endDate: string | undefined;\r\n  public readonly componentId: string;\r\n\r\n  public displayValue: boolean;\r\n  public showOperationTableDialog: boolean;\r\n  public selectedFamilyVariantCode: string | undefined;\r\n  public selectedAssetValue: string | undefined;\r\n\r\n  public constructor(\r\n    private readonly missionFormService: MissionFormService,\r\n    private readonly dateService: DateService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogFlightAssetPopupComponent');\r\n    // tslint:disable-next-line:no-any\r\n    this.onAdded = new EventEmitter<any>();\r\n    this.showOperationTableDialog = false;\r\n    this.familyVariants = [];\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (!this.selectFlight) {\r\n      this.selectFlight = {};\r\n    } else {\r\n      this.loadFamilyVariant();\r\n      this.startDate = this.dateService.dateWithHourToString(this.selectFlight.startDate);\r\n      this.endDate = this.dateService.dateWithHourToString(this.selectFlight.endDate);\r\n    }\r\n  }\r\n  public loadFamilyVariant() {\r\n    this.missionFormService\r\n      .getFamilyVariantCodeMap(AWPropertiesConstants.FAMILY_FUNCTION_AIRCRAFT_KEY)\r\n      .subscribe((results) => {\r\n        results.forEach((variantElement) => {\r\n          if (variantElement.variantCode !== '') {\r\n            this.familyVariants.push({\r\n              label: `${variantElement.familyCode}-${variantElement.variantCode}`,\r\n              value: `${variantElement.familyCode}-${variantElement.variantCode}`\r\n            });\r\n          }\r\n        });\r\n        this.selectedFamilyVariantCode = this.selectFlight.familyVariantCode\r\n          ? this.selectFlight.familyVariantCode\r\n          : undefined;\r\n        this.loadAssets();\r\n      });\r\n  }\r\n  public loadAssets(): void {\r\n    if (!!this.selectedFamilyVariantCode) {\r\n      const familyVariantCode: MissionEquipmentTableOutputDTO = {\r\n        familyVariantCode: this.selectedFamilyVariantCode\r\n      };\r\n      this.missionFormService.getAssetListBySearchCriteria(familyVariantCode).subscribe((result) => {\r\n        const labelValue: LabelValue<string>[] = [];\r\n        result.forEach((res) => {\r\n          if (!!res) {\r\n            labelValue.push({\r\n              label: res.label,\r\n              value: res.value\r\n            });\r\n          }\r\n        });\r\n        this.selectFlight.asset = labelValue;\r\n        this.selectFlight.asset.forEach((res) => {\r\n          if (this.selectFlight.assetCodeText && this.selectFlight.assetCodeText === res.label) {\r\n            this.selectedAssetValue = res.value;\r\n          }\r\n        });\r\n      });\r\n    } else if (this.selectedFamilyVariantCode === null) {\r\n      this.selectFlight.asset = [];\r\n      this.selectedAssetValue = undefined;\r\n    }\r\n  }\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public add() {\r\n    if (this.selectedFamilyVariantCode !== undefined) {\r\n      this.selectFlight.familyVariantCode = this.selectedFamilyVariantCode;\r\n      this.selectFlight.assetCodeText = this.selectedAssetValue;\r\n      this.onAdded.emit(this.selectFlight);\r\n      this.display = false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".numberOfFlights\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              appendTo=\\\"body\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [options]=\\\"numberOfFlights\\\"\\r\\n              [(ngModel)]=\\\"popupFields.nbFlightsToCreate\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"add()\\\"\\r\\n      [disabled]=\\\"popupFields.nbFlightsToCreate === undefined || popupFields.nbFlightsToCreate === null\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { DialogComponent } from '../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { MissionFormService } from '../mission-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-flights-popup',\r\n  templateUrl: './dialog-flights-popup.component.html'\r\n})\r\nexport class DialogFlightPopupComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  // tslint:disable-next-line:no-any\r\n  public popupFields: any | null;\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n  @Output()\r\n  // tslint:disable-next-line:no-any\r\n  public onAdded: EventEmitter<any>;\r\n  public readonly componentId: string;\r\n  public displayValue: boolean;\r\n  public familyVariants: LabelValue<string>[];\r\n  public numberOfFlights: LabelValue<string>[];\r\n  public showOperationTableDialog: boolean;\r\n  public messageService: MessageService;\r\n  public constructor(private readonly missionFormService: MissionFormService) {\r\n    super(ComponentOpenMode.Write, 'DialogFlightPopupComponent');\r\n    // tslint:disable-next-line:no-any\r\n    this.onAdded = new EventEmitter<any>();\r\n    this.showOperationTableDialog = false;\r\n    this.familyVariants = [];\r\n    this.numberOfFlights = [];\r\n    this.loadDropDowns();\r\n  }\r\n  public ngOnInit() {\r\n    if (!this.popupFields) {\r\n      this.popupFields = {};\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private loadDropDowns(): void {\r\n    this.missionFormService\r\n      .getFamilyVariantCodeMap(AWPropertiesConstants.FAMILY_FUNCTION_AIRCRAFT_KEY)\r\n      .subscribe((results) => {\r\n        results.forEach((variantElement) => {\r\n          if (variantElement.variantCode !== '') {\r\n            this.familyVariants.push({\r\n              label: `${variantElement.familyCode}-${variantElement.variantCode}`,\r\n              value: `${variantElement.familyCode}-${variantElement.variantCode}`\r\n            });\r\n          }\r\n        });\r\n      });\r\n    const numberOfFlights = 20;\r\n    for (let i = 1; i <= numberOfFlights; i++) {\r\n      const labelValue: LabelValue<string> = {\r\n        label: i.toString(),\r\n        value: i.toString()\r\n      };\r\n      this.numberOfFlights.push(labelValue);\r\n    }\r\n  }\r\n  public add() {\r\n    if (this.popupFields.nbFlightsToCreate) {\r\n      this.onAdded.emit(this.popupFields);\r\n      this.display = false;\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('missingFields'));\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n          - {{ serializationService.deserialize(componentData.objectId)[\\\"missionCode\\\"] }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"editMissionFrom()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancelMissionFrom()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveMissionFrom()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-menu-item (click)=\\\"reloadMissionFrom()\\\">\\r\\n        {{ \\\"global.refresh\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button id=\\\"updates\\\" mat-menu-item (click)=\\\"openStatusUpdatesPopup()\\\">\\r\\n        {{ \\\"global.updates\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <!-- Home -->\\r\\n        <mat-tab id=\\\"homeTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ \\\"page.mainData\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".code\\\" | translate }} </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            maxlength=\\\"50\\\"\\r\\n                            [(ngModel)]=\\\"missionFieldData.missionCode\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".type\\\" | translate }} </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            appendTo=\\\"body\\\"\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"missionTypeList\\\"\\r\\n                            [(ngModel)]=\\\"missionFieldData.missionType\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".number\\\" | translate }} </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"missionFieldData.missionNumber\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div id=\\\"operatorCode\\\" class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ getComponentName() + \\\".operator\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"flightCustomerList\\\"\\r\\n                            [(ngModel)]=\\\"missionFieldData.customerOperatorCode\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group flex--2\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".missionDescription\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <textarea\\r\\n                            class=\\\"aw-textarea\\\"\\r\\n                            [rows]=\\\"3\\\"\\r\\n                            pInputTextarea\\r\\n                            [(ngModel)]=\\\"missionFieldData.missionDescription\\\"\\r\\n                            maxlength=\\\"300\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></textarea>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group flex--2\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".missionDetails\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <textarea\\r\\n                            class=\\\"aw-textarea\\\"\\r\\n                            [rows]=\\\"3\\\"\\r\\n                            pInputTextarea\\r\\n                            [(ngModel)]=\\\"missionFieldData.missionDetails\\\"\\r\\n                            maxlength=\\\"300\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></textarea>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--5\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".locations\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section section-locations\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".departure\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              appendTo=\\\"body\\\"\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"flightLocationList\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.departureLocation\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".arrival\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              appendTo=\\\"body\\\"\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"flightLocationList\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.arrivalLocation\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group flex--2 section-locations\\\">\\r\\n                          <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".timeZone\\\" | translate }} </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              appendTo=\\\"body\\\"\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"timeZoneList\\\"\\r\\n                              [(ngModel)]=\\\"selectedTimeZone\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              (onChange)=\\\"updateMissionDates()\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--7\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".schedule\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".startDate\\\" | translate }} </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-calendar\\r\\n                              showButtonBar=\\\"true\\\"\\r\\n                              [monthNavigator]=\\\"true\\\"\\r\\n                              [yearNavigator]=\\\"true\\\"\\r\\n                              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                              showTime=\\\"true\\\"\\r\\n                              class=\\\"aw-calendar\\\"\\r\\n                              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.startDate\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              (onSelect)=\\\"onSelectMissionDate()\\\"\\r\\n                              (onInput)=\\\"onSelectMissionDate()\\\"\\r\\n                              appendTo=\\\"body\\\"\\r\\n                            ></p-calendar>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".missionDuration\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              #missionDuration=\\\"ngModel\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.missionDuration\\\"\\r\\n                              pInputText\\r\\n                              [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n                              [pValidateOnly]=\\\"true\\\"\\r\\n                              maxlength=\\\"10\\\"\\r\\n                              (keypress)=\\\"maxLengthCheck($event, missionFieldData.missionDuration)\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                            <p-message\\r\\n                              *ngIf=\\\"missionDuration.invalid && (missionDuration.dirty || missionDuration.touched)\\\"\\r\\n                              severity=\\\"error\\\"\\r\\n                              [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n                            ></p-message>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".periodicity\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              appendTo=\\\"body\\\"\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"periodicityList\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.periodicityType\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".endDate\\\" | translate }} </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-calendar\\r\\n                              showButtonBar=\\\"true\\\"\\r\\n                              [monthNavigator]=\\\"true\\\"\\r\\n                              [yearNavigator]=\\\"true\\\"\\r\\n                              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                              showTime=\\\"true\\\"\\r\\n                              class=\\\"aw-calendar\\\"\\r\\n                              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.endDate\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              (onSelect)=\\\"onSelectMissionDate()\\\"\\r\\n                              (onInput)=\\\"onSelectMissionDate()\\\"\\r\\n                              appendTo=\\\"body\\\"\\r\\n                            ></p-calendar>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".cycleNumber\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              #cycleNumber=\\\"ngModel\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.cycleNumber\\\"\\r\\n                              pInputText\\r\\n                              [pKeyFilter]=\\\"inputValidationService.validatorOfNumber()\\\"\\r\\n                              [pValidateOnly]=\\\"true\\\"\\r\\n                              maxlength=\\\"10\\\"\\r\\n                              (keypress)=\\\"maxLengthCheck($event, missionFieldData.cycleNumber)\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                            <p-message\\r\\n                              *ngIf=\\\"cycleNumber.invalid && (cycleNumber.dirty || cycleNumber.touched)\\\"\\r\\n                              severity=\\\"error\\\"\\r\\n                              [text]=\\\"inputValidationService.formatOfNumber()\\\"\\r\\n                            ></p-message>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".periodicityLimitDate\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-calendar\\r\\n                              showButtonBar=\\\"true\\\"\\r\\n                              [monthNavigator]=\\\"true\\\"\\r\\n                              [yearNavigator]=\\\"true\\\"\\r\\n                              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                              class=\\\"aw-calendar\\\"\\r\\n                              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.periodicityLimitDate\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              appendTo=\\\"body\\\"\\r\\n                            ></p-calendar>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--5\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".operation\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".operation\\\" | translate }} </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              appendTo=\\\"body\\\"\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"operationCode\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.operationCode\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".operationalMissionCode\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              appendTo=\\\"body\\\"\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"operationalMissionList\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.operationalMissionCode\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell--7\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".conditions\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".environment\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <textarea\\r\\n                              class=\\\"aw-textarea\\\"\\r\\n                              [rows]=\\\"3\\\"\\r\\n                              pInputTextarea\\r\\n                              maxlength=\\\"300\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.environment\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></textarea>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ componentData.componentId + \\\".missionComment\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <textarea\\r\\n                              class=\\\"aw-textarea\\\"\\r\\n                              [rows]=\\\"3\\\"\\r\\n                              pInputTextarea\\r\\n                              maxlength=\\\"300\\\"\\r\\n                              [(ngModel)]=\\\"missionFieldData.missionComment\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></textarea>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab id=\\\"flightsTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"global.flights\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\" *ngIf=\\\"!isCreateOpenMode\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ \\\"global.flights\\\" | translate }} ({{ flightTabTableCols ? flightTableData.length : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableFlight\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"flightTabTableCols\\\"\\r\\n                    [value]=\\\"flightTableData\\\"\\r\\n                    [(selection)]=\\\"selectedFlights\\\"\\r\\n                    dataKey=\\\"chronoNumber\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedFlights.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableFlightGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableFlight.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedFlights.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteFlights()\\\"\\r\\n                          >\\r\\n                            <span>{{ \\\"global.delete\\\" | translate }}</span>\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedFlights.length === 1 && isFlightEditable()\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editFlights()\\\"\\r\\n                          >\\r\\n                            <span>{{ \\\"global.edit\\\" | translate }}</span>\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedFlights.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"createFlightData()\\\"\\r\\n                          >\\r\\n                            <span>{{ \\\"global.add\\\" | translate }}</span>\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"selectedFlights.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openFlightForm(selectedFlights)\\\"\\r\\n                          >\\r\\n                            <span>{{ \\\"global.open\\\" | translate }}</span>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                        <col class=\\\"row-expand-wrapper\\\" />\\r\\n                        <col class=\\\"row-action-wrapper\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th\\r\\n                          pResizableColumn\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment, width: col.width }\\\"\\r\\n                        >\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                        <th class=\\\"row-expand-wrapper\\\"></th>\\r\\n                        <th class=\\\"row-action-wrapper\\\"></th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngSwitch]=\\\"col.field\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment, width: col.width }\\\"\\r\\n                        >\\r\\n                          <span *ngSwitchCase=\\\"'startDate'\\\"> {{ rowData[col.field] | date: \\\"yyyy/MM/dd HH:mm\\\" }} </span>\\r\\n                          <span *ngSwitchCase=\\\"'endDate'\\\"> {{ rowData[col.field] | date: \\\"yyyy/MM/dd HH:mm\\\" }} </span>\\r\\n                          <a *ngSwitchCase=\\\"'chronoNumber'\\\" (click)=\\\"openFlightForm([rowData])\\\">\\r\\n                            {{ rowData[col.field] }}\\r\\n                          </a>\\r\\n                          <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n                        </td>\\r\\n                        <td class=\\\"row-expand-wrapper\\\" [pRowToggler]=\\\"rowData\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n                            [ngClass]=\\\"rowData._expand ? 'fa-minus' : 'fa-plus'\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            pTooltip=\\\"{{ 'global.showTableRowDetails' | translate }}\\\"\\r\\n                            tooltipPosition=\\\"top\\\"\\r\\n                            (click)=\\\"toggleExpandCollapse(rowData)\\\"\\r\\n                          ></i>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                    <ng-template pTemplate=\\\"rowexpansion\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                      <tr class=\\\"row-expanded\\\" *ngIf=\\\"rowData._expand\\\">\\r\\n                        <td [attr.colspan]=\\\"columns.length + 2\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ getComponentName() + \\\".engineStartDate\\\" | translate }}\\r\\n                              </label>\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-calendar\\r\\n                                  showButtonBar=\\\"true\\\"\\r\\n                                  [monthNavigator]=\\\"true\\\"\\r\\n                                  [yearNavigator]=\\\"true\\\"\\r\\n                                  [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                                  appendTo=\\\"body\\\"\\r\\n                                  class=\\\"aw-calendar\\\"\\r\\n                                  [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                                  [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                                  [(ngModel)]=\\\"rowData.engineStartDate\\\"\\r\\n                                  [disabled]=\\\"true\\\"\\r\\n                                ></p-calendar>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ getComponentName() + \\\".engineStopDate\\\" | translate }}\\r\\n                              </label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-calendar\\r\\n                                  showButtonBar=\\\"true\\\"\\r\\n                                  [monthNavigator]=\\\"true\\\"\\r\\n                                  [yearNavigator]=\\\"true\\\"\\r\\n                                  [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                                  appendTo=\\\"body\\\"\\r\\n                                  class=\\\"aw-calendar\\\"\\r\\n                                  [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                                  [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                                  [(ngModel)]=\\\"rowData.engineStopDate\\\"\\r\\n                                  [disabled]=\\\"true\\\"\\r\\n                                ></p-calendar>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ getComponentName() + \\\".fuelUsed\\\" | translate }}\\r\\n                              </label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.fuelUsed\\\" [disabled]=\\\"true\\\" />\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ getComponentName() + \\\".passengers\\\" | translate }}\\r\\n                              </label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input\\r\\n                                  class=\\\"aw-input\\\"\\r\\n                                  type=\\\"text\\\"\\r\\n                                  [(ngModel)]=\\\"rowData.passengers\\\"\\r\\n                                  [disabled]=\\\"true\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ getComponentName() + \\\".shipment\\\" | translate }}\\r\\n                              </label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.shipment\\\" [disabled]=\\\"true\\\" />\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ getComponentName() + \\\".pilot\\\" | translate }}\\r\\n                              </label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.pilot\\\" [disabled]=\\\"true\\\" />\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ getComponentName() + \\\".copilot\\\" | translate }}\\r\\n                              </label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.copilot\\\" [disabled]=\\\"true\\\" />\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ getComponentName() + \\\".dayMission\\\" | translate }}\\r\\n                              </label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <i\\r\\n                                  *ngIf=\\\"rowData['dayMission'] !== null && rowData['dayMission']\\\"\\r\\n                                  class=\\\"fa fa-fw fa-check\\\"\\r\\n                                  aria-hidden=\\\"true\\\"\\r\\n                                ></i>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">\\r\\n                                {{ getComponentName() + \\\".nightMission\\\" | translate }}\\r\\n                              </label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <i\\r\\n                                  *ngIf=\\\"rowData['nightMission'] !== null && rowData['nightMission']\\\"\\r\\n                                  class=\\\"fa fa-fw fa-check\\\"\\r\\n                                  aria-hidden=\\\"true\\\"\\r\\n                                ></i>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-flights-popup\\r\\n    *ngIf=\\\"showFlightDialog\\\"\\r\\n    [(display)]=\\\"showFlightDialog\\\"\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyFlightDialog\\\"\\r\\n    (onAdded)=\\\"onAddOperation($event)\\\"\\r\\n  ></aw-dialog-flights-popup>\\r\\n\\r\\n  <aw-dialog-flights-asset-popup\\r\\n    *ngIf=\\\"showFlightEditDialog\\\"\\r\\n    [(display)]=\\\"showFlightEditDialog\\\"\\r\\n    [editFlightSelect]=\\\"editFlightSelect\\\"\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyFlightEditDialog\\\"\\r\\n    (onAdded)=\\\"onEditOperation($event)\\\"\\r\\n  ></aw-dialog-flights-asset-popup>\\r\\n\\r\\n  <aw-dialog-status\\r\\n    *ngIf=\\\"showStatusUpdatesPopup\\\"\\r\\n    [isStatusEditable]=\\\"false\\\"\\r\\n    [item]=\\\"missionFieldData\\\"\\r\\n    [itemId]=\\\"missionFieldData.missionCode\\\"\\r\\n    [(display)]=\\\"showStatusUpdatesPopup\\\"\\r\\n  >\\r\\n  </aw-dialog-status>\\r\\n</div>\\r\\n\"","module.exports = \":host .section-locations {\\n  max-width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9mbGlnaHQtb3BlcmF0aW9ucy9taXNzaW9uLWZvcm0vRDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxmcm9udGVuZF9hZXJvd2ViYi9zcmNcXGFwcFxcbWFpblxcZmxpZ2h0LW9wZXJhdGlvbnNcXG1pc3Npb24tZm9ybVxcbWlzc2lvbi1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBRUksZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9mbGlnaHQtb3BlcmF0aW9ucy9taXNzaW9uLWZvcm0vbWlzc2lvbi1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcImNvbnN0YW50c1wiO1xuXG46aG9zdCB7XG4gIC5zZWN0aW9uLWxvY2F0aW9ucyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG4iXX0= */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as moment from 'moment';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { PageTocService } from '../../../shared/components/component-sidebar/page-toc.service';\r\nimport { PageTocEntry } from '../../../shared/components/component-sidebar/types/page-toc-entry.interface';\r\nimport { ComponentConstants } from '../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../shared/services/date.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { InputValidationService } from '../../../shared/services/input-validation.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../shared/services/session.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { MissionEquipmentTableOutputDTO } from '../../../shared/types/api-output-types/fleet-management/bido-mission-flight-table-output-dto';\r\nimport { BidoCustomerDTO } from '../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { CreateBidoMissionEquipmentFromExistingMissionInputDTO } from '../../../shared/types/api-types/bido-flights-dialog-dto.interface';\r\nimport { BidoMissionDTOId } from '../../../shared/types/api-types/bido-mission-dto-id.interface';\r\nimport { BidoMissionDTO } from '../../../shared/types/api-types/bido-mission-dto.interface';\r\nimport { BidoMissionEquipmentDTOId } from '../../../shared/types/api-types/bido-mission-equipment-dto-id.interface';\r\nimport { SaveMissionScreenInput } from '../../../shared/types/api-types/save-mission-screen-input.interface';\r\nimport { FormPageComponent } from '../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { ListUtils } from '../../../shared/utils/list-utils';\r\nimport { NumberUtils } from '../../../shared/utils/number-utils';\r\nimport { SelectItemUtils } from '../../../shared/utils/select-item-utils';\r\nimport { StringUtils } from '../../../shared/utils/string-utils';\r\nimport { FlightInputData } from '../flight/types/flight-input-data.interface';\r\n\r\nimport { FlightRowDTO } from './flight-row-dto.inerface';\r\nimport { MissionFormService } from './mission-form.service';\r\n\r\ninterface LabelValueTimeZone {\r\n  label?: string;\r\n  value?: string;\r\n  actValue?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-mission-form',\r\n  styleUrls: ['./mission-form.component.scss'],\r\n  templateUrl: './mission-form.component.html'\r\n})\r\nexport class MissionFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public static readonly MAIN_INFORMATION_ANCHOR_ID: string = 'mainInformationAnchor';\r\n  public static readonly ADDITIONAL_ANCHOR_ID: string = 'additionalInformationAnchor';\r\n  public static readonly SCHEDULE_ANCHOR_ID: string = 'scheduleAnchor';\r\n  public static readonly FLIGHTS_ANCHOR_ID: string = 'flightsAnchor';\r\n\r\n  // private static readonly TIMEZONE_VALUE_REGEX: RegExp = /([+-]\\d\\d):\\d\\d/;\r\n\r\n  public readonly component: typeof MissionFormComponent;\r\n  public readonly tabGeneralId: string;\r\n  public readonly tabFlightsTaskId: string;\r\n  public currentTabId: string;\r\n  public itemsTableCols: TableColumn[];\r\n  public partsTableCols: TableColumn[];\r\n  public flightTabTableCols: TableColumn[];\r\n  public flightSubTableCols: TableColumn[];\r\n  public status: LabelValue<string>[];\r\n  public isMenuOverlayVisible: boolean;\r\n  public isNavigationOverlayVisible: boolean;\r\n  public topMenuOffsetLeft: number;\r\n  public topMenuOffsetTop: number;\r\n  public flightTableData: FlightRowDTO[];\r\n  public flightTableDataAddedList: MissionEquipmentTableOutputDTO[];\r\n  public missionFieldData: BidoMissionDTO;\r\n  public missionFieldFromDb: BidoMissionDTO;\r\n  public missionTypeList: SelectItem[];\r\n  public flightLocationList: SelectItem[];\r\n  public periodicityList: SelectItem[];\r\n  public flightCustomerList: SelectItem[];\r\n  public timeZoneList: LabelValueTimeZone[];\r\n  public operationalMissionList: SelectItem[];\r\n  public isReadOnlyFlightDialog: boolean;\r\n  public isReadOnlyFlightEditDialog: boolean;\r\n  public showFlightDialog: boolean;\r\n  public showFlightEditDialog: boolean;\r\n  public numberOfFlights?: number;\r\n  public operationCode: LabelValue<string>[];\r\n  public selectedFlights: MissionEquipmentTableOutputDTO[];\r\n  public editFlightSelect: MissionEquipmentTableOutputDTO;\r\n  public addedFlights: CreateBidoMissionEquipmentFromExistingMissionInputDTO[];\r\n  public updatedFlights: MissionEquipmentTableOutputDTO[];\r\n  public deletedFlights: MissionEquipmentTableOutputDTO[];\r\n  public selectedTimeZone: string | undefined;\r\n  public updatedFilghtsAsset: MissionEquipmentTableOutputDTO;\r\n  public isLoading: boolean;\r\n  public remainingTable: FlightRowDTO[];\r\n  public remainingTableCols: TableColumn[];\r\n  public showStatusUpdatesPopup: boolean;\r\n\r\n  private defaultTimeZone: string | undefined;\r\n  private previousTimezone: string | undefined;\r\n\r\n  // Table of content\r\n  @ViewChild(MissionFormComponent.MAIN_INFORMATION_ANCHOR_ID)\r\n  public mainInformationEltRef: ElementRef;\r\n\r\n  @ViewChild(MissionFormComponent.ADDITIONAL_ANCHOR_ID)\r\n  public additionalInformationEltRef: ElementRef;\r\n\r\n  @ViewChild(MissionFormComponent.SCHEDULE_ANCHOR_ID)\r\n  public scheduleEltRef: ElementRef;\r\n\r\n  @ViewChild(MissionFormComponent.FLIGHTS_ANCHOR_ID)\r\n  public flightsEltRef: ElementRef;\r\n\r\n  public toc: PageTocEntry[];\r\n  public showSaveSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    public translateService: TranslateService,\r\n    tabService: TabService,\r\n    public inputValidationService: InputValidationService,\r\n    public sessionService: SessionService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly missionFormService: MissionFormService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly dateService: DateService,\r\n    pageTocService: PageTocService\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Write,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n    super.registerPageTocEntryObservable();\r\n    this.tabGeneralId = 'general';\r\n    this.tabFlightsTaskId = 'flights';\r\n    this.missionTypeList = [];\r\n    this.flightLocationList = [];\r\n    this.periodicityList = [];\r\n    this.selectedFlights = [];\r\n    this.addedFlights = [];\r\n    this.updatedFlights = [];\r\n    this.deletedFlights = [];\r\n    this.flightTableData = [];\r\n    this.flightTableDataAddedList = [];\r\n    this.numberOfFlights = undefined;\r\n    this.flightCustomerList = [];\r\n    this.selectedTimeZone = undefined;\r\n    this.isLoading = false;\r\n    this.updatedFilghtsAsset = {};\r\n    this.openGeneralTab();\r\n    this.setTableCols();\r\n    this.setSubTableCols();\r\n    this.loadFlightCustomerList();\r\n    this.loadStatus();\r\n    this.init();\r\n    this.missionFieldData = {};\r\n    this.missionFieldFromDb = {};\r\n    this.isReadOnlyFlightDialog = true;\r\n    this.isReadOnlyFlightEditDialog = true;\r\n    this.showFlightDialog = false;\r\n    this.showFlightEditDialog = false;\r\n    this.timeZoneList = [];\r\n    this.previousTimezone = undefined;\r\n    this.component = MissionFormComponent;\r\n  }\r\n\r\n  public openGeneralTab(): void {\r\n    this.currentTabId = this.tabGeneralId;\r\n  }\r\n\r\n  public openFlightsTaskTab(): void {\r\n    this.currentTabId = this.tabFlightsTaskId;\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.FLI_FLIGHTS_MISSION_FORM;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n    this.setTableOfContent();\r\n    if (this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n      const context = this.isCreateOpenMode\r\n        ? 'tab.createMode'\r\n        : !!this.componentData.objectId &&\r\n          this.serializationService.deserialize(this.componentData.objectId).missionCode;\r\n      this.displayComponentContext(context, this.isCreateOpenMode);\r\n      this.loadDropDowns();\r\n    }\r\n  }\r\n\r\n  public cancelMissionFrom(): void {\r\n    if (this.isWriteOpenMode) {\r\n      this.updateOpenMode(ComponentOpenMode.Read);\r\n    }\r\n    this.reloadMissionFrom();\r\n  }\r\n\r\n  public editMissionFrom(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public reloadMissionFrom(): void {\r\n    this.init();\r\n    this.loadMission();\r\n  }\r\n\r\n  public saveMissionFrom(): void {\r\n    if (this.missionFieldData.missionType) {\r\n      // tslint:disable-next-line: no-any\r\n      // const flightArray: any[] = [];\r\n      let isUpdate: boolean;\r\n      // let isAssetOverride = false;\r\n      this.componentData.openMode === ComponentOpenMode.Create ? (isUpdate = false) : (isUpdate = true);\r\n      this.missionFieldData.statusDate = undefined;\r\n      this.missionFieldData.statusUser = '';\r\n      this.missionFieldData.statusState = '';\r\n\r\n      /* this.flightTableData.forEach((flight) => {\r\n        if (!!flight.assetCodeText && !!flight.familyVariantCode) {\r\n          const found = flightArray.some((asset): boolean => {\r\n            return asset.familyVariantCode === flight.familyVariantCode && asset.assetCodeText === flight.assetCodeText;\r\n          });\r\n          if (!found) {\r\n            flightArray.push({ familyVariantCode: flight.familyVariantCode, assetCodeText: flight.assetCodeText });\r\n          } else {\r\n            isAssetOverride = true;\r\n          }\r\n        }\r\n      });\r\n\r\n      if (isAssetOverride) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('warningOnFlightExists'));\r\n\r\n        return;\r\n      } */\r\n\r\n      const saveMissionId: SaveMissionScreenInput = {\r\n        bidoMissionDTO: this.missionFieldData,\r\n        isForUpdate: isUpdate,\r\n        addedFlights: this.addedFlights,\r\n        removedFlights: [],\r\n        updatedFlights: this.updatedFlights,\r\n        selectedTimeZone: this.getActTimeZone()\r\n      };\r\n\r\n      this.showSaveSpinner = true;\r\n      this.missionFormService.saveBidoMission(saveMissionId).subscribe(\r\n        (result) => {\r\n          if (result && result !== {}) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            const missionEquipmentTableOutputDTO = result['MissionEquipmentTableOutputDTO'];\r\n            missionEquipmentTableOutputDTO.forEach((res) => {\r\n              res.asset.forEach((asset) => {\r\n                if (res.assetCodeText === asset.value) {\r\n                  res.assetCodeText = asset.label;\r\n                }\r\n              });\r\n            });\r\n            // tslint:disable-next-line: no-unsafe-any\r\n            this.flightTableData = missionEquipmentTableOutputDTO;\r\n            // tslint:disable-next-line:no-string-literal\r\n            this.missionFieldData = result['bidoMissionDTO'];\r\n            this.missionFieldFromDb = { ...this.missionFieldData }; // keep backup of mission field dto\r\n            this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveMission'));\r\n            this.numberOfFlights = this.flightTableData.length;\r\n            if (this.componentData.openMode === ComponentOpenMode.Create) {\r\n              this.componentData.objectId = this.serializationService.serialize(this.missionFieldData);\r\n              const context = this.serializationService.deserialize(this.componentData.objectId).missionCode;\r\n              this.displayComponentContext(context, this.isCreateOpenMode);\r\n            }\r\n            this.addedFlights = [];\r\n            this.deletedFlights = [];\r\n            this.updatedFlights = [];\r\n            this.selectedFlights = [];\r\n            this.reloadMissionFrom();\r\n            this.updateOpenMode(ComponentOpenMode.Read);\r\n            this.componentData.openMode = ComponentOpenMode.Read;\r\n          }\r\n          this.showSaveSpinner = false;\r\n        },\r\n        (error) => {\r\n          const subStringNumber = 16;\r\n          if (error.error) {\r\n            this.messageService.showErrorMessage(error.error.errorDetail.substring(subStringNumber));\r\n          } else {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnSaveMission'));\r\n          }\r\n          this.showSaveSpinner = false;\r\n        }\r\n      );\r\n    } else {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    }\r\n  }\r\n\r\n  private getActTimeZone(): string | undefined {\r\n    if (!!this.selectedTimeZone) {\r\n      const selectedZone = this.timeZoneList.filter((res) => {\r\n        return res.value === this.selectedTimeZone;\r\n      });\r\n\r\n      return !!selectedZone ? (selectedZone[0].actValue as string) : (this.selectedTimeZone as string);\r\n    }\r\n  }\r\n\r\n  private setTableCols(): void {\r\n    this.flightTabTableCols = [\r\n      { field: 'familyVariantCode', alignment: 'left', width: '10%' },\r\n      { field: 'assetCodeText', alignment: 'left', width: '21%' },\r\n      { field: 'chronoNumber', alignment: 'left', width: '11%' },\r\n      { field: 'flightStatus', alignment: 'left', width: '9%' },\r\n      { field: 'startDate', alignment: 'left', width: '14%' },\r\n      { field: 'endDate', alignment: 'left', width: '14%' },\r\n      { field: 'duration', alignment: 'center', width: '7%' },\r\n      { field: 'ifrDuration', alignment: 'center', width: '7%' },\r\n      { field: 'cycleNumber', alignment: 'center', width: '7%' }\r\n    ];\r\n  }\r\n\r\n  private setSubTableCols(): void {\r\n    this.flightSubTableCols = [\r\n      { field: 'engineStartDate', alignment: 'left', width: '12%' },\r\n      { field: 'engineStopDate', alignment: 'left', width: '12%' },\r\n      { field: 'fuelUsed', alignment: 'left', width: '10%' },\r\n      { field: 'passengers', alignment: 'center', width: '12%' },\r\n      { field: 'shipment', alignment: 'center', width: '10%' },\r\n      { field: 'pilot', alignment: 'left', width: '12%' },\r\n      { field: 'copilot', alignment: 'left', width: '12%' },\r\n      { field: 'dayMission', alignment: 'left', width: '10%' },\r\n      { field: 'nightMission', alignment: 'left', width: '10%' }\r\n    ];\r\n  }\r\n\r\n  private init(): void {\r\n    this.isMenuOverlayVisible = false;\r\n    this.isNavigationOverlayVisible = false;\r\n    this.topMenuOffsetTop = 0;\r\n    this.topMenuOffsetLeft = 0;\r\n  }\r\n  private loadFlightCustomerList(): void {\r\n    const criteria: BidoCustomerDTO = {\r\n      isOperator: true\r\n    };\r\n    this.missionFormService.findAllBidoCustomerBySearchCriteria(criteria).subscribe((results) => {\r\n      this.flightCustomerList = ListUtils.orEmpty(results)\r\n        .filter((result) => !StringUtils.isNullOrEmpty(result.customerCode))\r\n        .map((result) => {\r\n          const label = StringUtils.isNullOrEmpty(result.customerName)\r\n            ? result.customerCode\r\n            : `${result.customerName} (${result.customerCode})`;\r\n\r\n          return {\r\n            label,\r\n            value: result.customerCode as string\r\n          };\r\n        });\r\n    });\r\n  }\r\n  private loadStatus(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.FUNC_OBJECT_STATUS_MAP).subscribe((results) => {\r\n      this.status = results;\r\n    });\r\n  }\r\n\r\n  public loadMission(): void {\r\n    this.isLoading = true;\r\n    const missionTemp: BidoMissionDTOId = {\r\n      missionCode: this.componentData.objectId\r\n        ? // tslint:disable-next-line: no-unsafe-any\r\n          this.serializationService.deserialize(this.componentData.objectId).missionCode\r\n        : ''\r\n    };\r\n\r\n    forkJoin([\r\n      this.missionFormService.findBidoMissionsByMissionCode(missionTemp),\r\n      this.missionFormService.findBidoMissionEquipments(missionTemp)\r\n    ]).subscribe(([mission, flights]) => {\r\n      if (!!mission) {\r\n        this.missionFieldData = mission;\r\n        this.missionFieldFromDb = { ...this.missionFieldData }; // keep backup to add flight\r\n      }\r\n      this.getFlightTableData(flights);\r\n      this.updateMissionDates();\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  private getFlightTableData(results: MissionEquipmentTableOutputDTO[]): void {\r\n    this.flightTableData = results.map((flight) => {\r\n      const flightRow: FlightRowDTO = {\r\n        familyVariantCode: flight.familyVariantCode,\r\n        asset: flight.asset,\r\n        chronoNumber: flight.chronoNumber,\r\n        flightStatus: flight.flightStatus,\r\n        startDate: this.dateService.dateWithHourToString(flight.startDate),\r\n        endDate: this.dateService.dateWithHourToString(flight.endDate),\r\n        ifrDuration: flight.ifrDuration,\r\n        duration: flight.duration,\r\n        cycleNumber: flight.cycleNumber,\r\n        engineStartDate: flight.engineStartDate,\r\n        engineStopDate: flight.engineStopDate,\r\n        fuelUsed: flight.fuelUsed,\r\n        passengers: flight.passengers,\r\n        shipment: flight.shipment,\r\n        pilot: flight.pilot,\r\n        copilot: flight.copilot,\r\n        dayMission: flight.dayMission,\r\n        nightMission: flight.nightMission,\r\n        assetCodeText: flight.assetCodeText,\r\n        missionCode: flight.missionCode,\r\n        equipmentCode: flight.equipmentCode,\r\n        occurence: flight.occurence,\r\n        dataKeyId: flight.dataKeyId\r\n      };\r\n\r\n      return flightRow;\r\n    });\r\n    this.flightTableData.forEach((res) => {\r\n      res.dataKeyId = res.chronoNumber;\r\n      if (res.asset) {\r\n        res.asset.forEach((asset) => {\r\n          if (res.assetCodeText === asset.value) {\r\n            res.assetCodeText = asset.label;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.numberOfFlights = this.flightTableData.length;\r\n  }\r\n\r\n  public updateMissionDates(): void {\r\n    const previousTimezoneValue = Number(this.previousTimezone);\r\n    const currentTimeZoneValue = Number(this.selectedTimeZone);\r\n\r\n    if (currentTimeZoneValue !== previousTimezoneValue) {\r\n      const gap =\r\n        Math.abs(previousTimezoneValue) >= 0 && Math.abs(currentTimeZoneValue)\r\n          ? Math.abs(Math.abs(previousTimezoneValue) - Math.abs(currentTimeZoneValue))\r\n          : Math.abs(previousTimezoneValue) + Math.abs(currentTimeZoneValue);\r\n      const isGapPositive = currentTimeZoneValue >= previousTimezoneValue;\r\n\r\n      if (!!this.missionFieldData) {\r\n        if (!!this.missionFieldData.startDate) {\r\n          let newDate = '';\r\n          newDate = this.updateDate(\r\n            gap,\r\n            isGapPositive,\r\n            this.sessionService.dateTimeFormatMomentJS,\r\n            String(this.missionFieldData.startDate)\r\n          );\r\n          this.missionFieldData.startDate = new Date(newDate);\r\n        }\r\n\r\n        if (!!this.missionFieldData.endDate) {\r\n          let newDate = '';\r\n          newDate = this.updateDate(\r\n            gap,\r\n            isGapPositive,\r\n            this.sessionService.dateTimeFormatMomentJS,\r\n            String(this.missionFieldData.endDate)\r\n          );\r\n          this.missionFieldData.endDate = new Date(newDate);\r\n        }\r\n\r\n        if (!!this.missionFieldData.periodicityLimitDate) {\r\n          let newDate = '';\r\n          newDate = this.updateDate(\r\n            gap,\r\n            isGapPositive,\r\n            this.sessionService.dateFormatMomentJS,\r\n            String(this.missionFieldData.periodicityLimitDate)\r\n          );\r\n          this.missionFieldData.periodicityLimitDate = new Date(newDate);\r\n        }\r\n      }\r\n\r\n      this.flightTableData.forEach((res) => {\r\n        res.startDate = this.updateDate(\r\n          gap,\r\n          isGapPositive,\r\n          this.sessionService.dateTimeFormatMomentJS,\r\n          String(res.startDate)\r\n        );\r\n        res.endDate = this.updateDate(\r\n          gap,\r\n          isGapPositive,\r\n          this.sessionService.dateTimeFormatMomentJS,\r\n          String(res.endDate)\r\n        );\r\n      });\r\n\r\n      this.previousTimezone = this.selectedTimeZone;\r\n    }\r\n  }\r\n\r\n  private updateDate(gap: number, isGapPositive: boolean, dateFormat: string, date: string): string {\r\n    if (StringUtils.isNullOrEmpty(date)) {\r\n      return '';\r\n    } else {\r\n      const dateValue = new Date(date);\r\n      const updatedDate = isGapPositive\r\n        ? moment(dateValue).add(gap, 'hours')\r\n        : moment(dateValue).subtract(gap, 'hours');\r\n\r\n      return updatedDate.format(dateFormat);\r\n    }\r\n  }\r\n\r\n  private loadDropDowns(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.EVENT_MISSION_TYPE_MAP).subscribe((results) => {\r\n      this.missionTypeList = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n\r\n    this.propertiesService.getValue(GenericPropertyConstants.FLIGHT_BASE_MAP).subscribe((results) => {\r\n      this.flightLocationList = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n\r\n    this.propertiesService.getValue(GenericPropertyConstants.MISSION_PERIODICITY_TYPE_MAP).subscribe((results) => {\r\n      this.periodicityList = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n\r\n    this.missionFormService.findAllBidoOperations({}).subscribe((result) => {\r\n      this.operationCode = result;\r\n    });\r\n\r\n    this.missionFormService.getOperationalMissionCodeMap().subscribe((results) => {\r\n      this.operationalMissionList = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n\r\n    this.loadTimeZoneList();\r\n  }\r\n\r\n  private loadTimeZoneList(): void {\r\n    this.propertiesService.getTimeZones().subscribe((results) => {\r\n      this.timeZoneList = results\r\n        .map((result) => {\r\n          return {\r\n            label: result.label as string,\r\n            value: this.dateService.getTimeZoneValue(result.value) as string,\r\n            actValue: result.value\r\n          };\r\n        })\r\n        .filter((timezone) => !!timezone.value);\r\n\r\n      this.propertiesService.getDefaultTimeZoneCode().subscribe((result) => {\r\n        this.defaultTimeZone = this.dateService.getTimeZoneValue(result);\r\n        // this.defaultTimeZone = result;\r\n\r\n        this.resetTimezone();\r\n      });\r\n\r\n      this.loadMission();\r\n    });\r\n  }\r\n\r\n  private resetTimezone(): void {\r\n    this.selectedTimeZone = this.defaultTimeZone;\r\n    this.previousTimezone = this.defaultTimeZone;\r\n  }\r\n\r\n  public createFlightData(): void {\r\n    if (this.missionFieldData.startDate && this.missionFieldData.endDate) {\r\n      this.isReadOnlyFlightDialog = false;\r\n      this.showFlightDialog = true;\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('errorOnAddFlights'));\r\n    }\r\n  }\r\n  public maxLengthCheck(event, percent) {\r\n    const min = -99999999.99;\r\n    const max = 99999999.99;\r\n    if (percent < min || percent > max) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  public editFlights(): void {\r\n    this.isReadOnlyFlightEditDialog = false;\r\n    this.showFlightEditDialog = true;\r\n    this.editFlightSelect = { ...this.selectedFlights[0] };\r\n  }\r\n\r\n  public deleteFlights(): void {\r\n    const partialMessageKey =\r\n      this.selectedFlights.length > 1 ? 'confirmDeleteSelectedFlights' : 'confirmDeleteSelectedFlight';\r\n\r\n    const flights: BidoMissionEquipmentDTOId[] = [];\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.selectedFlights.forEach((sel, index) => {\r\n          this.flightTableData.forEach((res, index1) => {\r\n            if (sel.dataKeyId === res.dataKeyId) {\r\n              if (sel.chronoNumber) {\r\n                this.deletedFlights.push(sel);\r\n                this.updatedFlights = this.updatedFlights.filter(\r\n                  (updatedFlight) => sel.chronoNumber !== updatedFlight.chronoNumber\r\n                );\r\n                this.flightTableData.splice(index1, 1);\r\n              } else {\r\n                this.flightTableData.splice(index1, 1);\r\n\r\n                this.addedFlights.forEach((result, indexF) => {\r\n                  if (sel.familyVariantCode === result.familyVariantCode) {\r\n                    result.nbFlightsToCreate = result.nbFlightsToCreate && result.nbFlightsToCreate - 1;\r\n\r\n                    if (result.nbFlightsToCreate === 0) {\r\n                      this.addedFlights.splice(indexF, 1);\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        if (this.deletedFlights.length > 0) {\r\n          this.deletedFlights.forEach((flight) => {\r\n            if (flight) {\r\n              const flightId: BidoMissionEquipmentDTOId = {\r\n                missionCode: flight.missionCode ? flight.missionCode : '',\r\n                equipmentCode: flight.equipmentCode ? flight.equipmentCode : '',\r\n                occurrence: flight.occurence as number\r\n              };\r\n              flights.push(flightId);\r\n            }\r\n          });\r\n          this.missionFormService.removeBidoMissionEquipment(flights).subscribe(\r\n            (result) => {\r\n              this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteMission'));\r\n              if (this.selectedFlights) {\r\n                this.selectedFlights = [];\r\n              }\r\n              this.numberOfFlights = this.flightTableData.length;\r\n            },\r\n            (error) => {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeleteMission'));\r\n            }\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public onAddOperation(event) {\r\n    this.isLoading = true;\r\n    const editMissionEquipmentFromExistingMissionDto: CreateBidoMissionEquipmentFromExistingMissionInputDTO = {\r\n      nbFlightsToCreate: event.nbFlightsToCreate\r\n    };\r\n    this.addedFlights = [...this.addedFlights, editMissionEquipmentFromExistingMissionDto];\r\n    const saveMissionId: SaveMissionScreenInput = {\r\n      bidoMissionDTO: this.missionFieldData,\r\n      addedFlights: this.addedFlights,\r\n      isForUpdate: false\r\n    };\r\n    this.missionFormService.addBidoFlights(saveMissionId).subscribe(\r\n      (result) => {\r\n        this.addedFlights = [];\r\n        if (result) {\r\n          result.forEach((res) => {\r\n            if (res.asset) {\r\n              res.asset.forEach((asset) => {\r\n                if (res.assetCodeText === asset.value) {\r\n                  res.assetCodeText = asset.label;\r\n                }\r\n              });\r\n            }\r\n          });\r\n          this.flightTableData = result.map((flight) => {\r\n            const flightRow: FlightRowDTO = {\r\n              familyVariantCode: flight.familyVariantCode,\r\n              asset: flight.asset,\r\n              chronoNumber: flight.chronoNumber,\r\n              flightStatus: flight.flightStatus,\r\n              startDate: !!this.missionFieldData.startDate\r\n                ? this.dateService.dateWithHourToString(this.missionFieldData.startDate)\r\n                : this.dateService.dateWithHourToString(flight.startDate),\r\n              endDate: !!this.missionFieldData.endDate\r\n                ? this.dateService.dateWithHourToString(this.missionFieldData.endDate)\r\n                : this.dateService.dateWithHourToString(flight.endDate),\r\n              ifrDuration: flight.ifrDuration,\r\n              duration: flight.duration,\r\n              cycleNumber: flight.cycleNumber,\r\n              engineStartDate: flight.engineStartDate,\r\n              engineStopDate: flight.engineStopDate,\r\n              fuelUsed: flight.fuelUsed,\r\n              passengers: flight.passengers,\r\n              shipment: flight.shipment,\r\n              pilot: flight.pilot,\r\n              copilot: flight.copilot,\r\n              dayMission: flight.dayMission,\r\n              nightMission: flight.nightMission,\r\n              assetCodeText: flight.assetCodeText,\r\n              missionCode: flight.missionCode,\r\n              equipmentCode: flight.equipmentCode,\r\n              occurence: flight.occurence,\r\n              dataKeyId: flight.dataKeyId\r\n            };\r\n\r\n            return flightRow;\r\n          });\r\n          this.flightTableData.forEach((res) => {\r\n            res.dataKeyId = res.chronoNumber;\r\n            if (res.asset) {\r\n              res.asset.forEach((asset) => {\r\n                if (res.assetCodeText === asset.value) {\r\n                  res.assetCodeText = asset.label;\r\n                }\r\n              });\r\n            }\r\n          });\r\n          this.numberOfFlights = this.flightTableData.length;\r\n          this.isLoading = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        this.isLoading = false;\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnValidateFlights'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public onEditOperation(event) {\r\n    if (event.familyVariantCode) {\r\n      event.asset.forEach((res) => {\r\n        if (event.assetCodeText === res.value) {\r\n          this.selectedFlights[0].assetCodeText = res.label;\r\n        }\r\n      });\r\n      this.selectedFlights[0].familyVariantCode = event.familyVariantCode;\r\n      this.selectedFlights[0].asset = event.asset;\r\n      if (this.selectedFlights[0].chronoNumber !== '') {\r\n        this.selectedFlights[0].startDate = this.missionFieldData.startDate;\r\n        this.selectedFlights[0].endDate = this.missionFieldData.endDate;\r\n        const selectedFlights = { ...this.selectedFlights[0] };\r\n        this.updatedFilghtsAsset = selectedFlights;\r\n        if (!!this.updatedFilghtsAsset.asset) {\r\n          this.updatedFilghtsAsset.asset.forEach((res) => {\r\n            if (event.assetCodeText === res.value) {\r\n              this.updatedFilghtsAsset.assetCodeText = event.assetCodeText;\r\n            }\r\n          });\r\n        }\r\n        this.updatedFlights.forEach((res, index) => {\r\n          if (res.chronoNumber === event.chronoNumber) {\r\n            this.updatedFlights.splice(index, 1);\r\n          }\r\n        });\r\n        this.updatedFlights.push(this.updatedFilghtsAsset);\r\n      }\r\n    }\r\n  }\r\n  public openFlightForm(rows: MissionEquipmentTableOutputDTO[]): void {\r\n    rows.forEach((row) => {\r\n      this.openFlightScreen(row, ComponentOpenMode.Read);\r\n    });\r\n  }\r\n\r\n  public openFlightScreen(row: MissionEquipmentTableOutputDTO, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.FLI_FLIGHT_FORM,\r\n      openMode\r\n    };\r\n\r\n    if (!!row) {\r\n      const missionEquipmentId: FlightInputData = {\r\n        equipmentCode: row.equipmentCode as string,\r\n        missionCode: row.missionCode as string,\r\n        occurrence: Number(row.occurence),\r\n        chronoNumber: row.chronoNumber as string\r\n      };\r\n      data.objectId = this.serializationService.serialize(missionEquipmentId);\r\n    }\r\n\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public isFlightEditable(): boolean {\r\n    return this.selectedFlights[0].chronoNumber !== '';\r\n  }\r\n\r\n  public toggleExpandCollapse(row: FlightRowDTO): void {\r\n    row._expand = !row._expand;\r\n  }\r\n\r\n  private setTableOfContent(): void {\r\n    const mainInfoKey = 'page.mainData';\r\n    const additionalInfoKey = 'global.general';\r\n    const scheduleKey = this.getTranslateKey('schedule');\r\n    const flightsKey = this.getTranslateKey('flights');\r\n\r\n    this.translateService\r\n      .get([mainInfoKey, additionalInfoKey, scheduleKey, flightsKey])\r\n      .subscribe((results: string[]) => {\r\n        const mainInfoLabel = !!results ? results[mainInfoKey] : 'Main Information';\r\n        const additionalInfoLabel = !!results ? results[additionalInfoKey] : 'Additional Information';\r\n        const scheduleLabel = !!results ? results[scheduleKey] : 'Schedule';\r\n        const flightsLabel = !!results ? results[flightsKey] : 'Flights';\r\n\r\n        this.toc = [\r\n          {\r\n            id: 'mainInformationAnchor',\r\n            anchor: this.mainInformationEltRef,\r\n            label: mainInfoLabel\r\n          },\r\n          {\r\n            id: 'additionalInformationAnchor',\r\n            anchor: this.additionalInformationEltRef,\r\n            label: additionalInfoLabel\r\n          },\r\n          {\r\n            id: 'scheduleAnchor',\r\n            anchor: this.scheduleEltRef,\r\n            label: scheduleLabel\r\n          },\r\n          {\r\n            id: 'flightsAnchor',\r\n            anchor: this.flightsEltRef,\r\n            label: flightsLabel\r\n          }\r\n        ];\r\n        super.selectPageTocEntry(this.component.MAIN_INFORMATION_ANCHOR_ID);\r\n      });\r\n  }\r\n\r\n  public openStatusUpdatesPopup() {\r\n    this.showStatusUpdatesPopup = true;\r\n  }\r\n\r\n  public onSelectMissionDate(): void {\r\n    if (this.isCreateOpenMode && !!this.missionFieldData.startDate && !!this.missionFieldData.endDate) {\r\n      const diff = this.dateService.getDurationBetweenDatesInHour(\r\n        this.missionFieldData.startDate,\r\n        this.missionFieldData.endDate\r\n      );\r\n      this.missionFieldData.missionDuration = NumberUtils.toString(diff);\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../shared/api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { PropertiesService } from '../../../shared/services/properties.service';\r\nimport { MissionEquipmentTableOutputDTO } from '../../../shared/types/api-output-types/fleet-management/bido-mission-flight-table-output-dto';\r\nimport { BidoCustomerDTO } from '../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { BidoMissionDTOId } from '../../../shared/types/api-types/bido-mission-dto-id.interface';\r\nimport { BidoMissionDTO } from '../../../shared/types/api-types/bido-mission-dto.interface';\r\nimport { BidoMissionEquipmentDTOId } from '../../../shared/types/api-types/bido-mission-equipment-dto-id.interface';\r\nimport { BireVariantVersionDTO } from '../../../shared/types/api-types/bire-variant-version-dto.interface';\r\nimport { SaveMissionScreenInput } from '../../../shared/types/api-types/save-mission-screen-input.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class MissionFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBidoMissionsByMissionCode(criteria: BidoMissionDTOId): Observable<BidoMissionDTO> {\r\n    return super.post<BidoMissionDTOId, BidoMissionDTO>(\r\n      this.fleetManagementApi.findBidoMissionsByMissionCode,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public findBidoMissionEquipments(criteria: BidoMissionDTOId): Observable<MissionEquipmentTableOutputDTO[]> {\r\n    return super.post<BidoMissionDTOId, MissionEquipmentTableOutputDTO[]>(\r\n      this.fleetManagementApi.findBidoMissionEquipments,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public findAllBidoCustomerBySearchCriteria(input: BidoCustomerDTO): Observable<BidoCustomerDTO[]> {\r\n    return super.post<BidoCustomerDTO, BidoCustomerDTO[]>(\r\n      this.fleetManagementApi.findAllBidoCustomerBySearchCriteria,\r\n      input\r\n    );\r\n  }\r\n\r\n  public getOperationalMissionCodeMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue('getOperationalMissionCodeMap');\r\n  }\r\n\r\n  public getFamilyVariantCodeMap(criteria): Observable<BireVariantVersionDTO[]> {\r\n    return super.post<string, BireVariantVersionDTO[]>(\r\n      this.productStructureManagementApi.findBireVariantVersionsByFamilyFunctionConfigurationEvent,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public removeBidoMissionEquipment(bidoMissionEquipmentDTOId: BidoMissionEquipmentDTOId[]): Observable<boolean> {\r\n    return super.post<BidoMissionEquipmentDTOId[], boolean>(\r\n      this.fleetManagementApi.removeBidoMissionEquipment,\r\n      bidoMissionEquipmentDTOId\r\n    );\r\n  }\r\n\r\n  public saveBidoMission(mission: SaveMissionScreenInput): Observable<Object> {\r\n    return super.post<SaveMissionScreenInput, Object>(this.fleetManagementApi.saveBidoMission, mission);\r\n  }\r\n  public findAllBidoOperations(input: {}): Observable<LabelValue<string>[]> {\r\n    return super.post<{}, LabelValue<string>[]>(this.fleetManagementApi.findAllBidoOperations, input);\r\n  }\r\n\r\n  public getAssetListBySearchCriteria(input: MissionEquipmentTableOutputDTO): Observable<LabelValue<string>[]> {\r\n    return super.post<MissionEquipmentTableOutputDTO, LabelValue<string>[]>(\r\n      this.fleetManagementApi.getAssetListBySearchCriteria,\r\n      input\r\n    );\r\n  }\r\n  public addBidoFlights(input: SaveMissionScreenInput): Observable<MissionEquipmentTableOutputDTO[]> {\r\n    return super.post<SaveMissionScreenInput, MissionEquipmentTableOutputDTO[]>(\r\n      this.fleetManagementApi.addBidoFlights,\r\n      input\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"column\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <p-table [resizableColumns]=\\\"true\\\" #ptable class=\\\"aw-table2\\\" [columns]=\\\"tableCols\\\" [value]=\\\"table\\\" [scrollable]=\\\"true\\\">\\r\\n      <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n        <span *ngIf=\\\"!remainingTableLoading\\\"> &nbsp;</span>\\r\\n\\r\\n        <div *ngIf=\\\"remainingTableLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n          <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n          <div class=\\\"lds-hourglass\\\"></div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n        <colgroup>\\r\\n          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n        </colgroup>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n        <tr>\\r\\n          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment, width: col.width }\\\">\\r\\n            {{ getComponentName() + \\\".\\\" + col.field | translate }}\\r\\n          </th>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n\\r\\n      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n          <td\\r\\n            *ngFor=\\\"let col of columns\\\"\\r\\n            [ngSwitch]=\\\"col.field\\\"\\r\\n            [ngStyle]=\\\"{ 'text-align': col.alignment, width: col.width }\\\"\\r\\n          >\\r\\n            <span *ngSwitchCase=\\\"'engineStartDate'\\\"> {{ rowData[col.field] | date: \\\"yyyy/MM/dd\\\" }} </span>\\r\\n\\r\\n            <span *ngSwitchCase=\\\"'engineStopDate'\\\"> {{ rowData[col.field] | date: \\\"yyyy/MM/dd\\\" }} </span>\\r\\n            <span *ngSwitchCase=\\\"'dayMission'\\\">\\r\\n              <i\\r\\n                *ngIf=\\\"rowData[col.field] !== null && rowData[col.field]\\\"\\r\\n                class=\\\"fa fa-fw fa-check\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n              ></i>\\r\\n            </span>\\r\\n\\r\\n            <span *ngSwitchCase=\\\"'nightMission'\\\">\\r\\n              <i\\r\\n                *ngIf=\\\"rowData[col.field] !== null && rowData[col.field]\\\"\\r\\n                class=\\\"fa fa-fw fa-check\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n              ></i>\\r\\n            </span>\\r\\n            <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { GenericComponent } from '../../../../shared/types/generic-component';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { FlightRowDTO } from '../flight-row-dto.inerface';\r\n\r\n@Component({\r\n  selector: 'aw-mission-table-remaining-values',\r\n  templateUrl: './mission-table-remaining-values.component.html'\r\n})\r\nexport class MissionTableRemainingValuesComponent extends GenericComponent implements OnInit {\r\n  @Input()\r\n  public remainingTable: FlightRowDTO[];\r\n\r\n  @Input()\r\n  public remainingTableCols: TableColumn[];\r\n\r\n  public table: FlightRowDTO[];\r\n  public tableCols: TableColumn[];\r\n  public remainingTableLoading: boolean;\r\n\r\n  public constructor() {\r\n    super(ComponentOpenMode.Write);\r\n    this.remainingTableLoading = true;\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.FLI_FLIGHTS_MISSION_FORM;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.setRemainingTableColumnList();\r\n    this.load();\r\n  }\r\n\r\n  private load(): void {\r\n    this.table = this.remainingTable;\r\n    this.remainingTableLoading = false;\r\n  }\r\n\r\n  private setRemainingTableColumnList(): void {\r\n    this.tableCols = this.remainingTableCols;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        {{ \\\"page.searchPage\\\" | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"openCreateMission()\\\"\\r\\n      *ngIf=\\\"hasUpdateAccessRight && hasCreateButton\\\"\\r\\n    >\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row search-criteria-header\\\">\\r\\n                  <i\\r\\n                    class=\\\"fa fa-fw fa-undo aw-icon aw-icon-with-border search-criteria-action\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    pTooltip=\\\"{{ 'global.reset' | translate }}\\\"\\r\\n                    tooltipPosition=\\\"top\\\"\\r\\n                    (click)=\\\"resetSearchCriteria()\\\"\\r\\n                  ></i>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{\\r\\n                        componentData.componentId + \\\".\\\" + componentData.componentId + \\\"Field\\\" + \\\".missionCode\\\"\\r\\n                          | translate\\r\\n                      }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchFields.missionCode\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{\\r\\n                        componentData.componentId + \\\".\\\" + componentData.componentId + \\\"Field\\\" + \\\".missionType\\\"\\r\\n                          | translate\\r\\n                      }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"missionTypeList\\\"\\r\\n                        [(ngModel)]=\\\"searchFields.missionType\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{\\r\\n                        componentData.componentId + \\\".\\\" + componentData.componentId + \\\"Field\\\" + \\\".missionNumber\\\"\\r\\n                          | translate\\r\\n                      }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchFields.missionNumber\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div id=\\\"operatorCode\\\" class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ getComponentName() + \\\".customerOperatorCode\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"flightCustomerList\\\"\\r\\n                        [(ngModel)]=\\\"searchFields.customerOperatorCode\\\"\\r\\n                        [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".missionDateFrom\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-calendar\\r\\n                        showButtonBar=\\\"true\\\"\\r\\n                        [monthNavigator]=\\\"true\\\"\\r\\n                        [yearNavigator]=\\\"true\\\"\\r\\n                        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                        class=\\\"aw-calendar\\\"\\r\\n                        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                        [(ngModel)]=\\\"searchFields.startDate\\\"\\r\\n                      ></p-calendar>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".missionDateTo\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-calendar\\r\\n                        showButtonBar=\\\"true\\\"\\r\\n                        [monthNavigator]=\\\"true\\\"\\r\\n                        [yearNavigator]=\\\"true\\\"\\r\\n                        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                        class=\\\"aw-calendar\\\"\\r\\n                        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                        [(ngModel)]=\\\"searchFields.endDate\\\"\\r\\n                      ></p-calendar>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"advanced-criteria\\\" [ngClass]=\\\"{ 'display--none': !showAdvancedCriteria }\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{\\r\\n                          componentData.componentId + \\\".\\\" + componentData.componentId + \\\"Field\\\" + \\\".departureLocation\\\"\\r\\n                            | translate\\r\\n                        }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"flightLocationList\\\"\\r\\n                          [(ngModel)]=\\\"searchFields.departureLocation\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{\\r\\n                          componentData.componentId + \\\".\\\" + componentData.componentId + \\\"Field\\\" + \\\".arrivalLocation\\\"\\r\\n                            | translate\\r\\n                        }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"flightLocationList\\\"\\r\\n                          [(ngModel)]=\\\"searchFields.arrivalLocation\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{\\r\\n                          componentData.componentId + \\\".\\\" + componentData.componentId + \\\"Field\\\" + \\\".operation\\\"\\r\\n                            | translate\\r\\n                        }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"operationCode\\\"\\r\\n                          [(ngModel)]=\\\"searchFields.operationCode\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <button mat-button (click)=\\\"showAdvancedCriteria = !showAdvancedCriteria\\\">\\r\\n                    <ng-container *ngIf=\\\"showAdvancedCriteria\\\">\\r\\n                      <mat-icon>remove</mat-icon>\\r\\n                      {{ \\\"global.collapseCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"!showAdvancedCriteria\\\">\\r\\n                      <mat-icon>add</mat-icon>\\r\\n                      {{ \\\"global.expandCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                  </button>\\r\\n\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"search()\\\"\\r\\n                      color=\\\"primary\\\"\\r\\n                      appKeyPress\\r\\n                      [keyCode]=\\\"'Enter'\\\"\\r\\n                      (keyPress)=\\\"search()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.toSearch\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }} ({{ resultsTable ? resultsTable.length : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #ptableResults\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"resultsTableCols\\\"\\r\\n                [value]=\\\"resultsTable\\\"\\r\\n                [(selection)]=\\\"selectedMissions\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n                dataKey=\\\"missionCode\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedMissions.length > 0 }\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableResultsGlobalFilter\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"ptableResults.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        *ngIf=\\\"resultsTable && resultsTable.length > 0 && selectedMissions.length === 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"exportTable()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.export\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"hasManageAccessRight && selectedMissions.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteMissions()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedMissions.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openSelectedMissions()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                    <col class=\\\"row-expand-wrapper\\\" />\\r\\n                    <col class=\\\"row-action-wrapper\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                    <th class=\\\"row-expand-wrapper\\\"></th>\\r\\n                    <th class=\\\"row-action-wrapper\\\"></th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      <span *ngSwitchCase=\\\"'isOperator'\\\">\\r\\n                        <i\\r\\n                          *ngIf=\\\"rowData[col.field] !== null && rowData[col.field]\\\"\\r\\n                          class=\\\"fa fa-fw fa-check\\\"\\r\\n                          aria-hidden=\\\"true\\\"\\r\\n                        ></i>\\r\\n                      </span>\\r\\n\\r\\n                      <span *ngSwitchCase=\\\"'isOwner'\\\">\\r\\n                        <i\\r\\n                          *ngIf=\\\"rowData[col.field] !== null && rowData[col.field]\\\"\\r\\n                          class=\\\"fa fa-fw fa-check\\\"\\r\\n                          aria-hidden=\\\"true\\\"\\r\\n                        ></i>\\r\\n                      </span>\\r\\n\\r\\n                      <span *ngSwitchCase=\\\"'missionCode'\\\">\\r\\n                        <a (click)=\\\"openMissionScreen(rowData)\\\"> {{ rowData[\\\"missionCode\\\"] }}</a>\\r\\n                      </span>\\r\\n                      <span *ngSwitchCase=\\\"'customerOperatorCode'\\\">\\r\\n                        {{ rowData[\\\"customerOperatorCode\\\"] | formatSelectOption: flightCustomerList }}\\r\\n                      </span>\\r\\n                      <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n                    </td>\\r\\n                    <td class=\\\"row-expand-wrapper\\\" [pRowToggler]=\\\"rowData\\\">\\r\\n                      <i\\r\\n                        class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n                        [ngClass]=\\\"rowData._expand ? 'fa-minus' : 'fa-plus'\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                        pTooltip=\\\"{{ 'global.showTableRowDetails' | translate }}\\\"\\r\\n                        tooltipPosition=\\\"top\\\"\\r\\n                        (click)=\\\"toggleWorkPackageExpand(rowData)\\\"\\r\\n                      ></i>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"rowexpansion\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                  <tr class=\\\"row-expanded\\\" *ngIf=\\\"rowData._expand\\\">\\r\\n                    <td [attr.colspan]=\\\"columns.length + 2\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".missionDuration\\\" | translate }} </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              [(ngModel)]=\\\"rowData.missionDuration\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".cycleNumber\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"rowData.cycleNumber\\\" [disabled]=\\\"true\\\" />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".periodicityType\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              [(ngModel)]=\\\"rowData.periodicityType\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ getComponentName() + \\\".periodicityLimitDate\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              [(ngModel)]=\\\"rowData.periodicityLimitDate\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ComponentConstants } from '../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../shared/services/date.service';\r\nimport { ExportService } from '../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../shared/services/session.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { BidoCustomerDTO } from '../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { BidoMissionDTOId } from '../../../shared/types/api-types/bido-mission-dto-id.interface';\r\nimport { BidoMissionDTO } from '../../../shared/types/api-types/bido-mission-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { ListUtils } from '../../../shared/utils/list-utils';\r\nimport { StringUtils } from '../../../shared/utils/string-utils';\r\nimport { MissionFormService } from '../mission-form/mission-form.service';\r\n\r\nimport { MissionSearchService } from './mission-search.service';\r\n\r\nexport interface MissionRowExport {\r\n  missionCode?: string;\r\n  missionType?: string;\r\n  missionNumber?: string;\r\n  operationalMissionCode?: string;\r\n  customerOperatorCode?: string;\r\n  departureLocation?: string;\r\n  arrivalLocation?: string;\r\n  startDate?: string;\r\n  endDate?: string;\r\n  missionDuration?: string;\r\n  cycleNumber?: string;\r\n  periodicityType?: string;\r\n  periodicityLimitDate?: string;\r\n  _obj?: BidoMissionDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-mission-search',\r\n  templateUrl: './mission-search.component.html'\r\n})\r\nexport class MissionSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public resultsTable: MissionRowExport[];\r\n  public resultsTableCols: TableColumn[];\r\n  public searchFields: BidoMissionDTO;\r\n  public selectedMissions: MissionRowExport[];\r\n  public missionTypeList: SelectItem[];\r\n  public flightLocationList: SelectItem[];\r\n  public periodicityType: LabelValue<string>[];\r\n  public operationCode: LabelValue<string>[];\r\n  public flightCustomerList: SelectItem[];\r\n  private readonly resultsTableExportName: string;\r\n  public keyMap: Map<string, Observable<LabelValue<string>[]>>;\r\n  public isLoading: boolean = false;\r\n  public showAdvancedCriteria: boolean;\r\n  public hasCreateButton: boolean;\r\n\r\n  /* HTML references ***********************************************************/\r\n\r\n  @ViewChild('resultsContainerAnchor')\r\n  public resultsContainerAnchor: ElementRef;\r\n\r\n  /* ***************************************************************************/\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public translateService: TranslateService,\r\n    private readonly missionSearchService: MissionSearchService,\r\n    private readonly missionFormService: MissionFormService,\r\n    private readonly exportService: ExportService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly dateService: DateService,\r\n    public readonly sessionService: SessionService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    this.resultsTableExportName = 'mission-list';\r\n    this.showAdvancedCriteria = false;\r\n    this.resultsTable = [];\r\n    this.selectedMissions = [];\r\n    this.missionTypeList = [];\r\n    this.flightLocationList = [];\r\n    this.periodicityType = [];\r\n    this.flightCustomerList = [];\r\n\r\n    this.keyMap = new Map<string, Observable<LabelValue<string>[]>>();\r\n    this.resetSearchCriteria();\r\n    this.initTableCols();\r\n    this.fillDropDown();\r\n    this.initHasCreateButton();\r\n    this.fillDropDown();\r\n  }\r\n  public initTableCols(): void {\r\n    this.resultsTableCols = [\r\n      { field: 'missionCode', alignment: 'left', width: '10%' },\r\n      { field: 'missionType', alignment: 'left', width: '11%' },\r\n      { field: 'missionNumber', alignment: 'left', width: '8%' },\r\n      { field: 'operationalMissionCode', alignment: 'left', width: '12%' },\r\n      { field: 'customerOperatorCode', alignment: 'left', width: '13%' },\r\n      { field: 'departureLocation', alignment: 'left', width: '10%' },\r\n      { field: 'arrivalLocation', alignment: 'left', width: '10%' },\r\n      { field: 'startDate', alignment: 'left', width: '13%' },\r\n      { field: 'endDate', alignment: 'left', width: '13%' }\r\n    ];\r\n  }\r\n\r\n  public initHasCreateButton(): void {\r\n    this.hasCreateButton = true;\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.FLI_FLIGHTS_MISSION_SEARCH;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public deleteMissions(): void {\r\n    const partialMessageKey =\r\n      this.selectedMissions.length > 1 ? 'confirmDeleteSelectedMissions' : 'confirmDeleteSelectedMission';\r\n\r\n    const missions: BidoMissionDTOId[] = [];\r\n    this.selectedMissions.forEach((mission) => {\r\n      if (mission && mission.missionCode) {\r\n        const missionId: BidoMissionDTOId = {\r\n          missionCode: mission.missionCode\r\n        };\r\n        missions.push(missionId);\r\n      }\r\n    });\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.missionSearchService.removeBidoMission(missions).subscribe(\r\n          (result) => {\r\n            this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteMission'));\r\n            this.selectedMissions = [];\r\n            this.search();\r\n          },\r\n          (error) => {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeleteMission'));\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  public exportTable(): void {\r\n    const missionExportData: MissionRowExport[] = this.resultsTable.map((mission) => {\r\n      const missionRowExport: MissionRowExport = {\r\n        missionCode: mission.missionCode,\r\n        missionType: mission.missionType,\r\n        missionNumber: mission.missionNumber,\r\n        operationalMissionCode: mission.operationalMissionCode,\r\n        departureLocation: mission.departureLocation,\r\n        arrivalLocation: mission.arrivalLocation,\r\n        startDate: mission.startDate,\r\n        endDate: mission.endDate,\r\n        missionDuration: mission.missionDuration,\r\n        cycleNumber: mission.cycleNumber,\r\n        periodicityType: mission.periodicityType,\r\n        periodicityLimitDate: mission.periodicityLimitDate\r\n      };\r\n\r\n      return missionRowExport;\r\n    });\r\n    this.exportService.toExcel(missionExportData, this.resultsTableExportName, this.componentData.componentId);\r\n  }\r\n\r\n  public openCreateMission(): void {\r\n    this.openMission(undefined, ComponentOpenMode.Create);\r\n  }\r\n\r\n  public openMissionScreen(missionRow: MissionRowExport): void {\r\n    this.openMission(missionRow, ComponentOpenMode.Read);\r\n  }\r\n\r\n  public openSelectedMissions(): void {\r\n    this.selectedMissions.forEach((mission) => {\r\n      if (mission) {\r\n        if (StringUtils.isNullOrEmpty(mission.missionCode)) {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('errorOnMissingCustomerCode'));\r\n        } else {\r\n          this.openMission(mission, ComponentOpenMode.Read);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public resetResultsTable(table: Table): void {\r\n    table.reset();\r\n    table.filters = {};\r\n  }\r\n\r\n  public resetSearchCriteria(): void {\r\n    this.searchFields = {};\r\n  }\r\n\r\n  public search(): void {\r\n    this.isLoading = true;\r\n    super.scrollToAnchor(this.resultsContainerAnchor);\r\n    this.missionSearchService.findBidoMissionsBySearchCriteria(this.searchFields).subscribe(\r\n      (results) => {\r\n        this.isLoading = false;\r\n        if (results) {\r\n          this.resultsTable = results.list.map((mission) => {\r\n            const matchingOperationCode = this.operationCode.find((elt) => elt.value === mission.operationCode);\r\n\r\n            const missionRow: MissionRowExport = {\r\n              missionCode: mission.missionCode,\r\n              missionType: mission.missionType,\r\n              missionNumber: mission.missionNumber,\r\n              operationalMissionCode: matchingOperationCode ? matchingOperationCode.label : '',\r\n              customerOperatorCode: mission.customerOperatorCode,\r\n              departureLocation: mission.departureLocation,\r\n              arrivalLocation: mission.arrivalLocation,\r\n              startDate: this.dateService.dateWithHourToString(mission.startDate),\r\n              endDate: this.dateService.dateWithHourToString(mission.endDate),\r\n              missionDuration: mission.missionDuration,\r\n              cycleNumber: mission.cycleNumber,\r\n              periodicityType: mission.periodicityType,\r\n              periodicityLimitDate: this.dateService.dateToString(mission.periodicityLimitDate),\r\n              _obj: mission\r\n            };\r\n\r\n            return missionRow;\r\n          });\r\n          this.resultsTable.forEach((element) => {\r\n            this.missionTypeList.forEach((result) => {\r\n              if (result.value === element.missionType) {\r\n                element.missionType = result.label;\r\n              }\r\n            });\r\n            this.flightLocationList.forEach((result) => {\r\n              if (result.value === element.arrivalLocation) {\r\n                element.arrivalLocation = result.label;\r\n              }\r\n            });\r\n            this.flightLocationList.forEach((result) => {\r\n              if (result.value === element.departureLocation) {\r\n                element.departureLocation = result.label;\r\n              }\r\n            });\r\n\r\n            this.periodicityType.forEach((result) => {\r\n              if (result.value === element.periodicityType) {\r\n                element.periodicityType = result.label;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetResults'));\r\n      }\r\n    );\r\n    this.selectedMissions = [];\r\n  }\r\n\r\n  public toggleWorkPackageExpand(row: BidoMissionDTO): void {\r\n    row._expand = !row._expand;\r\n  }\r\n\r\n  public openMission(object: MissionRowExport | undefined, openMode: ComponentOpenMode): void {\r\n    const labelKey = 'transaction.MissionFormComponent';\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: 'MissionFormComponent',\r\n      objectId: this.serializationService.serialize(object),\r\n      openMode\r\n    };\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public fillDropDown() {\r\n    this.loadFlightCustomerList();\r\n    this.missionSearchService.getMissionTypeMap().subscribe((results) => {\r\n      this.missionTypeList = results;\r\n    });\r\n    this.missionSearchService.getLocationTypeMap().subscribe((results) => {\r\n      this.flightLocationList = results;\r\n    });\r\n    this.missionSearchService.getPeriodicityTypeMap().subscribe((result) => {\r\n      this.periodicityType = result;\r\n    });\r\n    this.missionSearchService.findAllBidoOperations({}).subscribe((result) => {\r\n      this.operationCode = result;\r\n    });\r\n  }\r\n\r\n  private loadFlightCustomerList(): void {\r\n    const criteria: BidoCustomerDTO = {\r\n      isOperator: true\r\n    };\r\n    this.missionFormService.findAllBidoCustomerBySearchCriteria(criteria).subscribe((results) => {\r\n      this.flightCustomerList = ListUtils.orEmpty(results)\r\n        .filter((result) => !StringUtils.isNullOrEmpty(result.customerCode))\r\n        .map((result) => {\r\n          const label = StringUtils.isNullOrEmpty(result.customerName)\r\n            ? result.customerCode\r\n            : `${result.customerName} (${result.customerCode})`;\r\n\r\n          return {\r\n            label,\r\n            value: result.customerCode as string\r\n          };\r\n        });\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../shared/api/fleet-management.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { PropertiesService } from '../../../shared/services/properties.service';\r\nimport { FindBidoMissionBySearchCriteriaInput } from '../../../shared/types/api-input-types/fleet-management/find-bido-mission-by-criteria-input.interface';\r\nimport { BidoMissionDTOId } from '../../../shared/types/api-types/bido-mission-dto-id.interface';\r\nimport { BidoMissionDTO } from '../../../shared/types/api-types/bido-mission-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class MissionSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBidoMissionsBySearchCriteria(\r\n    criteria: FindBidoMissionBySearchCriteriaInput\r\n  ): Observable<SearchResultsDTO<BidoMissionDTO>> {\r\n    return super.post<FindBidoMissionBySearchCriteriaInput, SearchResultsDTO<BidoMissionDTO>>(\r\n      this.fleetManagementApi.findBidoMissionsBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public findAllBidoOperations(input: {}): Observable<LabelValue<string>[]> {\r\n    return super.post<{}, LabelValue<string>[]>(this.fleetManagementApi.findAllBidoOperations, input);\r\n  }\r\n\r\n  public removeBidoMission(bidoMissionDTOId: BidoMissionDTOId[]): Observable<boolean> {\r\n    return super.post<BidoMissionDTOId[], boolean>(this.fleetManagementApi.removeBidoMission, bidoMissionDTOId);\r\n  }\r\n\r\n  public getPeriodicityTypeMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue('getMissionPeriodicityTypeMap');\r\n  }\r\n\r\n  public getMissionTypeMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue('getEventMissionTypeMap');\r\n  }\r\n\r\n  public getLocationTypeMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue('getFlightBaseMap');\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".operationCode\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"operationCode\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          maxlength=\\\"50\\\"\\r\\n          [(ngModel)]=\\\"flightOperationOutputDTO.bidoOpearationDTO.operationCode\\\"\\r\\n          [disabled]=\\\"isReadOpenMode || isWriteOpenMode\\\"\\r\\n          required\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".operationName\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          name=\\\"operationName\\\"\\r\\n          maxlength=\\\"100\\\"\\r\\n          class=\\\"aw-input\\\"\\r\\n          [(ngModel)]=\\\"flightOperationOutputDTO.bidoOpearationDTO.operationName\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".operationDescription\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [rows]=\\\"3\\\"\\r\\n          pInputTextarea\\r\\n          maxlength=\\\"300\\\"\\r\\n          [(ngModel)]=\\\"flightOperationOutputDTO.bidoOpearationDTO.operationDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!isCreateOpenMode\\\" class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".startDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"flightOperationOutputDTO.startDate\\\"\\r\\n          [disabled]=\\\"true\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!isCreateOpenMode\\\" class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".endDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"flightOperationOutputDTO.endDate\\\"\\r\\n          [disabled]=\\\"true\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      [disabled]=\\\"\\r\\n        flightOperationOutputDTO.bidoOpearationDTO.operationCode === null ||\\r\\n        flightOperationOutputDTO.bidoOpearationDTO.operationCode === undefined ||\\r\\n        flightOperationOutputDTO.bidoOpearationDTO.operationCode.trim() === ''\\r\\n      \\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      {{ \\\"global.close\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vZmxpZ2h0LW9wZXJhdGlvbnMvb3BlcmF0aW9uLXNlYXJjaC9kaWFsb2ctb3BlcmF0aW9uL2RpYWxvZy1vcGVyYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { BidoOperationDTO } from '../../../../shared/types/api-types/bido-operation-dto.interface';\r\nimport { FlightOperationOutputDTO } from '../../../../shared/types/api-types/flight-operation-output-dto.interface';\r\nimport { DialogComponent } from '../../../../shared/types/dialog-component';\r\nimport { OperationSearchService } from '../operation-search.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-operation',\r\n  styleUrls: ['./dialog-operation.component.scss'],\r\n  templateUrl: './dialog-operation.component.html'\r\n})\r\nexport class DialogOperationComponent extends DialogComponent implements OnInit {\r\n  public flightOperationOutputDTO: FlightOperationOutputDTO;\r\n  @Input()\r\n  public operation: BidoOperationDTO;\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Input()\r\n  public isNew: boolean;\r\n  @Output()\r\n  public onValidated: EventEmitter<BidoOperationDTO>;\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly messageService: MessageService,\r\n    private readonly operationSearchService: OperationSearchService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogOperationComponent');\r\n\r\n    this.onValidated = new EventEmitter<BidoOperationDTO>();\r\n    this.flightOperationOutputDTO = { bidoOpearationDTO: {} };\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.updateOpenMode(this.openMode);\r\n\r\n    if (!this.operation) {\r\n      this.operation = {};\r\n    } else {\r\n      this.operationSearchService.findBidoOperation(this.operation.operationCode).subscribe(\r\n        (result) => {\r\n          this.flightOperationOutputDTO = result;\r\n        },\r\n        () => {\r\n          this.flightOperationOutputDTO.bidoOpearationDTO = this.operation;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public validate(): void {\r\n    if (\r\n      !!this.flightOperationOutputDTO.bidoOpearationDTO &&\r\n      (!this.flightOperationOutputDTO.bidoOpearationDTO.operationCode ||\r\n        this.flightOperationOutputDTO.bidoOpearationDTO.operationCode.length === 0)\r\n    ) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    } else {\r\n      this.onValidated.emit(this.flightOperationOutputDTO.bidoOpearationDTO);\r\n      this.display = false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ \\\"page.searchPage\\\" | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"saveOperation()\\\">\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button type=\\\"button\\\" mat-menu-item (click)=\\\"reloadOperation()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }} ({{ resultsTable.list ? resultsTable.list.length : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #ptableOperation\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"resultsTableCols\\\"\\r\\n                [value]=\\\"resultsTable.list\\\"\\r\\n                [(selection)]=\\\"selectedOperation\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedOperation.length > 0 }\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableOperationGlobalFilter\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"ptableOperation.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        *ngIf=\\\"resultsTable.list && resultsTable.list.length > 0 && selectedOperation.length === 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"exportTable()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.export\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedOperation.length === 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"createOperation()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"hasManageAccessRight && selectedOperation.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteOperation()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedOperation.length === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editOperation()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedOperation.length === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openOperation()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td\\r\\n                      *ngFor=\\\"let col of columns\\\"\\r\\n                      [ngSwitch]=\\\"col.field\\\"\\r\\n                      [ngClass]=\\\"{ 'text-align-center': col.field === 'isOwner' || col.field === 'isOperator' }\\\"\\r\\n                      [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                    >\\r\\n                      <span *ngSwitchCase=\\\"'operationDescription'\\\">\\r\\n                        {{\\r\\n                          rowData[col.field]?.length > 35\\r\\n                            ? (rowData[col.field] | slice: 0:35) + \\\"[...]\\\"\\r\\n                            : rowData[col.field]\\r\\n                        }}\\r\\n                      </span>\\r\\n\\r\\n                      <span *ngSwitchCase=\\\"'operationCode'\\\">\\r\\n                        <a (click)=\\\"openOperationLink(rowData)\\\"> {{ rowData[\\\"operationCode\\\"] }}</a>\\r\\n                      </span>\\r\\n\\r\\n                      <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-dialog-operation\\r\\n  *ngIf=\\\"showOperationDialog\\\"\\r\\n  [operation]=\\\"currentOperation\\\"\\r\\n  [isNew]=\\\"isNew\\\"\\r\\n  [(display)]=\\\"showOperationDialog\\\"\\r\\n  [openMode]=\\\"operationDialogOpenMode\\\"\\r\\n  (onValidated)=\\\"onAddOperation($event)\\\"\\r\\n></aw-dialog-operation>\\r\\n\"","module.exports = \":host .criteria-checkboxes,\\n:host .form-group {\\n  margin-right: 20px;\\n  max-width: 15rem;\\n  min-width: 10rem;\\n  width: 20%; }\\n  :host .criteria-checkboxes:last-of-type,\\n  :host .form-group:last-of-type {\\n    margin-right: 0; }\\n  :host .search-criteria-primary {\\n  justify-content: flex-start; }\\n  :host .search-criteria-primary .criteria-checkboxes {\\n    display: flex;\\n    flex-direction: column; }\\n  :host .search-criteria-primary .criteria-checkboxes p-checkbox:first-of-type {\\n      margin-bottom: 5px; }\\n  :host .search-criteria-primary .criteria-checkboxes p-checkbox:nth-of-type(2) {\\n      margin-top: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9mbGlnaHQtb3BlcmF0aW9ucy9vcGVyYXRpb24tc2VhcmNoL0Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZnJvbnRlbmRfYWVyb3dlYmIvc3JjXFxhcHBcXG1haW5cXGZsaWdodC1vcGVyYXRpb25zXFxvcGVyYXRpb24tc2VhcmNoXFxvcGVyYXRpb24tc2VhcmNoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUdJLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFVBQVUsRUFBQTtFQU5kOztJQVNNLGVBQWUsRUFBQTtFQVRyQjtFQWNJLDJCQUEyQixFQUFBO0VBZC9CO0lBaUJNLGFBQWE7SUFDYixzQkFBc0IsRUFBQTtFQWxCNUI7TUFxQlEsa0JBQWtCLEVBQUE7RUFyQjFCO01BeUJRLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vZmxpZ2h0LW9wZXJhdGlvbnMvb3BlcmF0aW9uLXNlYXJjaC9vcGVyYXRpb24tc2VhcmNoLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIC5jcml0ZXJpYS1jaGVja2JveGVzLFxyXG4gIC5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICAgIG1heC13aWR0aDogMTVyZW07XHJcbiAgICBtaW4td2lkdGg6IDEwcmVtO1xyXG4gICAgd2lkdGg6IDIwJTtcclxuXHJcbiAgICAmOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zZWFyY2gtY3JpdGVyaWEtcHJpbWFyeSB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcblxyXG4gICAgLmNyaXRlcmlhLWNoZWNrYm94ZXMge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgICAgcC1jaGVja2JveDpmaXJzdC1vZi10eXBlIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHAtY2hlY2tib3g6bnRoLW9mLXR5cGUoMikge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDVweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { ComponentConstants } from '../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { ExportService } from '../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { BidoOperationDTOId } from '../../../shared/types/api-types/bido-operation-dto-id.interface';\r\nimport { BidoOperationDTO } from '../../../shared/types/api-types/bido-operation-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { DTOUtils } from '../../../shared/utils/dto-utils';\r\n\r\nimport { OperationSearchService } from './operation-search.service';\r\n\r\ninterface OperationRow {\r\n  operationCode?: string | '';\r\n  operationName?: string | '';\r\n  operationDescription?: string | '';\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-operation-search',\r\n  styleUrls: ['./operation-search.component.scss'],\r\n  templateUrl: './operation-search.component.html'\r\n})\r\nexport class OperationSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  private static readonly RESULTS_TABLE_EXPORT_NAME: string = 'operation-list';\r\n\r\n  public isNew: boolean;\r\n  public filteredRowsNb: number;\r\n  public resultsTable: SearchResultsDTO<OperationRow>;\r\n  public resultsTableCols: TableColumn[];\r\n  public selectedOperation: OperationRow[];\r\n  public isNavigationOverlayVisible: boolean;\r\n\r\n  public currentOperation: OperationRow | undefined;\r\n  public currentOperationIndex: number | undefined;\r\n  public operationDialogOpenMode: ComponentOpenMode;\r\n  public showOperationDialog: boolean;\r\n\r\n  public operationAdded: OperationRow[];\r\n  public isLoading: boolean;\r\n\r\n  public databaseData: OperationRow[];\r\n\r\n  /* HTML references ***********************************************************/\r\n\r\n  @ViewChild('resultsContainerAnchor')\r\n  public resultsContainerAnchor: ElementRef;\r\n\r\n  public showSaveSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly operationSearchService: OperationSearchService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly exportService: ExportService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.filteredRowsNb = 0;\r\n    this.resultsTable = { list: [], moreResults: false };\r\n    this.selectedOperation = [];\r\n    this.isNavigationOverlayVisible = false;\r\n\r\n    this.currentOperation = undefined;\r\n    this.currentOperationIndex = -1;\r\n    this.operationDialogOpenMode = ComponentOpenMode.Read;\r\n    this.showOperationDialog = false;\r\n    this.isNew = false;\r\n    this.isLoading = false;\r\n    this.operationAdded = [];\r\n\r\n    this.databaseData = [];\r\n\r\n    this.resultsTableCols = [\r\n      { field: 'operationCode', alignment: 'center' },\r\n      { field: 'operationName', alignment: 'center' },\r\n      { field: 'operationDescription', alignment: 'center' }\r\n    ];\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.FLI_OPERATION_SEARCH;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.search();\r\n\r\n    this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public deleteOperation(): void {\r\n    if (this.selectedOperation.length > 0) {\r\n      this.confirmationService.confirmDelete({\r\n        messageKey: 'global.deleteConfirmationMsg',\r\n        accept: () => {\r\n          const selectedBireOperationDTOIdInAddedList = new Array<BidoOperationDTOId>();\r\n          const selectedBireOperationDTOIdInDatabase = new Array<BidoOperationDTOId>();\r\n          this.selectedOperation.forEach((operation) => {\r\n            if (operation) {\r\n              const bireOperationDTOId: BidoOperationDTOId = {\r\n                operationCode: operation.operationCode\r\n              };\r\n              const inAddedList = this.operationAdded.some((op) => op.operationCode === operation.operationCode);\r\n              if (inAddedList) {\r\n                selectedBireOperationDTOIdInAddedList.push(bireOperationDTOId);\r\n                this.operationAdded = this.operationAdded.filter((op) => op.operationCode !== operation.operationCode);\r\n              } else {\r\n                selectedBireOperationDTOIdInDatabase.push(bireOperationDTOId);\r\n                this.databaseData = this.databaseData.filter((op) => op.operationCode !== operation.operationCode);\r\n              }\r\n\r\n              this.resultsTable.list = this.resultsTable.list.filter(\r\n                (op) => op.operationCode !== operation.operationCode\r\n              );\r\n\r\n              this.selectedOperation = [];\r\n            }\r\n          });\r\n          if (selectedBireOperationDTOIdInDatabase.length > 0) {\r\n            this.operationSearchService.removeBidoOperation(selectedBireOperationDTOIdInDatabase).subscribe(\r\n              (result) => {\r\n                this.messageService.showSuccessMessage('global.deleteSuccessMsg');\r\n                // this.search();\r\n                this.selectedOperation = [];\r\n              },\r\n              () => {\r\n                this.messageService.showErrorMessage('global.deleteErrorMsg');\r\n              }\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public exportTable(): void {\r\n    this.exportService.toExcel(\r\n      this.databaseData,\r\n      OperationSearchComponent.RESULTS_TABLE_EXPORT_NAME,\r\n      this.componentData.componentId\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public onFilter(event: any): void {\r\n    this.filteredRowsNb = event.filteredValue.length;\r\n  }\r\n\r\n  public createOperation(): void {\r\n    this.currentOperation = undefined;\r\n    this.operationDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showOperationDialog = true;\r\n    this.currentOperationIndex = undefined;\r\n  }\r\n\r\n  public openOperationLink(object: OperationRow): void {\r\n    this.currentOperation = object;\r\n    this.currentOperationIndex = undefined;\r\n    this.operationDialogOpenMode = ComponentOpenMode.Read;\r\n    this.showOperationDialog = true;\r\n  }\r\n\r\n  public openOperation(): void {\r\n    if (this.selectedOperation.length === 1) {\r\n      this.currentOperation = this.selectedOperation[0];\r\n      this.currentOperationIndex = undefined;\r\n      this.operationDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showOperationDialog = true;\r\n    }\r\n  }\r\n\r\n  public editOperation(): void {\r\n    this.currentOperation = { ...this.selectedOperation[0] };\r\n    if (!!this.currentOperation) {\r\n      this.currentOperationIndex = this.resultsTable.list.findIndex((operation) => {\r\n        return DTOUtils.equalsBidoOperationDTO(operation, this.currentOperation);\r\n      });\r\n    }\r\n    this.operationDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showOperationDialog = true;\r\n  }\r\n\r\n  public onAddOperation(operation: OperationRow): void {\r\n    if (!!operation) {\r\n      const operationCodeExists = this.resultsTable.list.some((op) => op.operationCode === operation.operationCode);\r\n      if (\r\n        this.currentOperationIndex !== null &&\r\n        this.currentOperationIndex !== undefined &&\r\n        this.currentOperationIndex !== -1\r\n      ) {\r\n        // edit mode\r\n        const indexInTable = this.resultsTable.list.findIndex((op) => op.operationCode === operation.operationCode);\r\n        this.resultsTable.list[indexInTable] = operation;\r\n\r\n        const inAddedList = this.operationAdded.some((op) => op.operationCode === operation.operationCode);\r\n        if (inAddedList) {\r\n          const indexInAddedList = this.operationAdded.findIndex((op) => op.operationCode === operation.operationCode);\r\n          this.operationAdded[indexInAddedList] = operation;\r\n        } else {\r\n          this.operationAdded.push(operation);\r\n        }\r\n      } else {\r\n        // creation mode\r\n        if (operationCodeExists) {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('warningOnOperationExists'));\r\n        } else {\r\n          this.resultsTable.list.push(operation);\r\n          this.operationAdded.push(operation);\r\n        }\r\n      }\r\n    }\r\n    this.selectedOperation = [];\r\n  }\r\n\r\n  public saveOperation(): void {\r\n    this.showSaveSpinner = true;\r\n    this.operationSearchService.saveFlightOperation(this.operationAdded).subscribe(\r\n      (result) => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSave'));\r\n        this.search();\r\n        this.operationAdded = [];\r\n        this.currentOperationIndex = -1;\r\n        this.selectedOperation = [];\r\n        this.showSaveSpinner = false;\r\n      },\r\n      (error) => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnSave'));\r\n        this.showSaveSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  public search(): void {\r\n    this.isLoading = true;\r\n    super.scrollToAnchor(this.resultsContainerAnchor);\r\n    this.operationSearchService.findBidoOperationsBySearchCriteria().subscribe((result) => {\r\n      this.isLoading = false;\r\n      this.setResultsTable(result);\r\n    });\r\n  }\r\n\r\n  private setResultsTable(result: SearchResultsDTO<BidoOperationDTO>): void {\r\n    if (!!result) {\r\n      this.databaseData = [];\r\n      this.resultsTable.moreResults = result.moreResults;\r\n      this.resultsTable.list = result.list.map((operation) => {\r\n        const operationRow: OperationRow = {\r\n          operationCode: operation.operationCode,\r\n          operationName: operation.operationName,\r\n          operationDescription: operation.operationDescription\r\n        };\r\n        this.databaseData.push(operationRow);\r\n\r\n        return operationRow;\r\n      });\r\n\r\n      this.filteredRowsNb = this.resultsTable.list.length;\r\n    }\r\n\r\n    this.selectedOperation = [];\r\n  }\r\n\r\n  public reloadOperation(): void {\r\n    this.search();\r\n    this.operationAdded = [];\r\n    this.currentOperationIndex = -1;\r\n    this.selectedOperation = [];\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusState\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"statusList\\\"\\r\\n          [(ngModel)]=\\\"item.statusState\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [disabled]=\\\"!isStatusEditable\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"item.statusDate\\\"\\r\\n          [disabled]=\\\"true\\\"\\r\\n          [showTime]=\\\"true\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusUser\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"item.statusUser\\\" [disabled]=\\\"true\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.close\\\" | translate }}</button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { DialogComponent } from '../../../shared/types/dialog-component';\r\nimport { ComponentOpenMode } from '../../enums/component-open-mode.enum';\r\nimport { MessageService } from '../../services/message.service';\r\nimport { PropertiesService } from '../../services/properties.service';\r\nimport { SessionService } from '../../services/session.service';\r\nimport { LabelValue } from '../../types/label-value.interface';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-status',\r\n  templateUrl: './dialog-status.component.html'\r\n})\r\nexport class DialogStatusComponent<T> extends DialogComponent implements OnInit {\r\n  @Input() public item: T;\r\n\r\n  @Input() public itemId: string;\r\n\r\n  @Input('isStatusEditable') public isStatusEditable: boolean;\r\n\r\n  @Input('isObjectTypeOfBireSbDTO') public readonly isObjectTypeOfBireSbDTO: boolean;\r\n\r\n  @Input('isObjectTypeOfBireEvolutionDTO') public readonly isObjectTypeOfBireEvolutionDTO: boolean;\r\n\r\n  @Input('isObjectTypeOfBireMaintenancePlanDTO') public readonly isObjectTypeOfBireMaintenancePlanDTO: boolean;\r\n\r\n  @Input('isSapSession') private readonly isSapSession: boolean;\r\n\r\n  public statusList: LabelValue<string>[];\r\n\r\n  public readonly componentId: string;\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogStatusComponent');\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadStatusList();\r\n  }\r\n\r\n  public close(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private loadStatusList(): void {\r\n    const statusState = 'statusState';\r\n    this.propertiesService\r\n      .getObjectStatusList(\r\n        this.isObjectTypeOfBireSbDTO,\r\n        this.isObjectTypeOfBireEvolutionDTO,\r\n        this.isObjectTypeOfBireMaintenancePlanDTO,\r\n        this.item[statusState],\r\n        this.isSapSession\r\n      )\r\n      .subscribe(\r\n        (result) => {\r\n          this.statusList = result;\r\n        },\r\n        () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadStatusList'));\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\n\r\nimport { DialogStatusComponent } from './dialog-status.component';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [CalendarModule, DropdownModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogStatusComponent];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ]\r\n})\r\nexport class DialogStatusModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\n\r\nimport { DialogWorkPackageComponent } from './dialog-work-package.component';\r\nimport { DialogWorkPackageService } from './dialog-work-package.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [CalendarModule, DropdownModule, InputTextareaModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogWorkPackageComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [DialogWorkPackageService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class DialogWorkPackageModule {}\r\n"],"sourceRoot":""}