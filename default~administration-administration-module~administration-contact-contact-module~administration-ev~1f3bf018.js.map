{"version":3,"sources":["webpack:///./src/app/shared/components/dialog-search-customer/dialog-search-customer.component.html","webpack:///./src/app/shared/components/dialog-search-customer/dialog-search-customer.component.ts","webpack:///./src/app/shared/components/dialog-search-customer/dialog-search-customer.module.ts","webpack:///./src/app/shared/components/dialog-search-customer/dialog-search-customer.service.ts"],"names":[],"mappings":"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","file":"default~administration-administration-module~administration-contact-contact-module~administration-ev~1f3bf018.js","sourcesContent":["module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"50\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ \\\"customerPopin.title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <h4 class=\\\"section-title\\\">\\r\\n        {{ \\\"global.results\\\" | translate }} ({{ resultsTable.list ? resultsTable.list.length : 0 }})\\r\\n      </h4>\\r\\n\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <p-table\\r\\n          [resizableColumns]=\\\"true\\\"\\r\\n          #ptable\\r\\n          class=\\\"aw-table2\\\"\\r\\n          [columns]=\\\"resultsTableCols\\\"\\r\\n          [value]=\\\"resultsTable.list\\\"\\r\\n          [(selection)]=\\\"selectedObject\\\"\\r\\n          selectionMode=\\\"single\\\"\\r\\n          dataKey=\\\"customerCode\\\"\\r\\n          [scrollable]=\\\"true\\\"\\r\\n          (onRowUnselect)=\\\"onRowUnselect()\\\"\\r\\n        >\\r\\n          <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n            <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n            <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n              <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n              <div class=\\\"lds-hourglass\\\"></div>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template pTemplate=\\\"caption\\\">\\r\\n            <div class=\\\"aw-table-header\\\">\\r\\n              <div class=\\\"aw-table-global-filter\\\">\\r\\n                <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                  <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </label>\\r\\n\\r\\n                <input\\r\\n                  #ptableGlobalFilter\\r\\n                  class=\\\"aw-table-global-filter-input\\\"\\r\\n                  type=\\\"text\\\"\\r\\n                  placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                  (input)=\\\"ptable.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                />\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"aw-table-actions\\\"></div>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n            <colgroup>\\r\\n              <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n            </colgroup>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n            <tr>\\r\\n              <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                {{ \\\"customerPopin.\\\" + col.field | translate }}\\r\\n              </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n            <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n              <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">{{ rowData[col.field] }}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </p-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"onCancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"onValidate()\\\" [disabled]=\\\"isOneObjectSelected()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { BidoCustomerDTO } from '../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { DialogComponent } from '../../../shared/types/dialog-component';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { ComponentOpenMode } from '../../enums/component-open-mode.enum';\r\n\r\nimport { DialogSearchCustomerService } from './dialog-search-customer.service';\r\n\r\n/**\r\n * DEPRECATED: use `aw-dialog-bido-customer`\r\n */\r\n@Component({\r\n  selector: 'aw-dialog-search-customer',\r\n  templateUrl: 'dialog-search-customer.component.html'\r\n})\r\nexport class DialogSearchCustomerComponent extends DialogComponent implements OnInit {\r\n  public resultsTableCols: TableColumn[];\r\n  public resultsTable: SearchResultsDTO<BidoCustomerDTO>;\r\n  public selectedObject: BidoCustomerDTO;\r\n  public searchObject: BidoCustomerDTO;\r\n  public totalFilteredRows: number;\r\n  @Input() public iscustomerOwner: boolean;\r\n  @Input() public iscustomerOperator: boolean;\r\n  @Input('customer-code')\r\n  public set qualificationCode(code: string) {\r\n    this.searchObject = {};\r\n    this.searchObject.customerCode = code;\r\n  }\r\n\r\n  @Output()\r\n  public onSelected = new EventEmitter<BidoCustomerDTO>();\r\n\r\n  public constructor(public dialogSearchCustomerService: DialogSearchCustomerService) {\r\n    super(ComponentOpenMode.Write, 'customerOVSPopup');\r\n\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n    this.searchObject = {};\r\n    this.selectedObject = {};\r\n\r\n    this.resultsTableCols = [\r\n      { field: 'customerCode', alignment: 'left' },\r\n      { field: 'customerName', alignment: 'left' }\r\n    ];\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.searchCustomers();\r\n  }\r\n\r\n  /**\r\n   * Search customers for operator or owner\r\n   */\r\n  public searchCustomers(): void {\r\n    if (!!this.iscustomerOwner) {\r\n      this.searchObject.isOwner = true;\r\n      this.dialogSearchCustomerService.findBidoCustomersBySearchCriteria(this.searchObject).subscribe(\r\n        (results) => {\r\n          if (results) {\r\n            this.resultsTable = results;\r\n            this.totalFilteredRows = this.resultsTable.list.length;\r\n          }\r\n        },\r\n        () => {\r\n          // TODO\r\n        }\r\n      );\r\n    } else if (!!this.iscustomerOperator) {\r\n      this.searchObject.isOperator = true;\r\n      this.dialogSearchCustomerService.findBidoCustomersBySearchCriteria(this.searchObject).subscribe(\r\n        (results) => {\r\n          if (results) {\r\n            this.resultsTable = results;\r\n            this.totalFilteredRows = this.resultsTable.list.length;\r\n          }\r\n        },\r\n        () => {\r\n          // TODO\r\n        }\r\n      );\r\n    } else {\r\n      this.searchObject = {};\r\n      this.dialogSearchCustomerService.findBidoCustomersBySearchCriteria(this.searchObject).subscribe(\r\n        (results) => {\r\n          if (results) {\r\n            this.resultsTable = results;\r\n            this.totalFilteredRows = this.resultsTable.list.length;\r\n          }\r\n        },\r\n        () => {\r\n          // TODO\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /*\r\n    <summary>Emit the selectedObject on validate</summary>\r\n    */\r\n  public onValidate(): void {\r\n    this.onSelected.emit(this.selectedObject);\r\n    this.display = false;\r\n  }\r\n\r\n  // Clean the selectedObject object if the row is unselect\r\n  public onRowUnselect(): void {\r\n    this.selectedObject = {};\r\n  }\r\n\r\n  // Clean all the object on rerender\r\n  public onShow(): void {\r\n    this.selectedObject = {};\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n  }\r\n\r\n  /*\r\n    <summary>Close the pop up on cancel</summary>\r\n    */\r\n  public onCancel(): void {\r\n    this.selectedObject = {};\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n    this.display = false;\r\n  }\r\n\r\n  public isOneObjectSelected(): boolean {\r\n    return !this.selectedObject.customerCode;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TableModule } from 'primeng/table';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\n\r\nimport { DialogSearchCustomerComponent } from './dialog-search-customer.component';\r\nimport { DialogSearchCustomerService } from './dialog-search-customer.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [TableModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogSearchCustomerComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [DialogSearchCustomerService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class DialogSearchCustomerModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../shared/api/fleet-management.api';\r\nimport { BidoCustomerDTO } from '../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { AbstractAwHttpService } from '../../http/abstract-aw-http';\r\nimport { AppConfigService } from '../../services/app-config.service';\r\n\r\n@Injectable()\r\nexport class DialogSearchCustomerService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBidoCustomersBySearchCriteria(criteria: BidoCustomerDTO): Observable<SearchResultsDTO<BidoCustomerDTO>> {\r\n    return super.post<BidoCustomerDTO, SearchResultsDTO<BidoCustomerDTO>>(\r\n      this.fleetManagementApi.findBidoCustomersBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}