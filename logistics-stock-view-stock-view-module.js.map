{"version":3,"sources":["webpack:///./node_modules/primeng/chart.js","webpack:///./node_modules/primeng/treetable.js","webpack:///./src/app/main/logistics/stock-view/dialog-select-location-stock/dialog-select-location-stock.component.html","webpack:///./src/app/main/logistics/stock-view/dialog-select-location-stock/dialog-select-location-stock.component.scss","webpack:///./src/app/main/logistics/stock-view/dialog-select-location-stock/dialog-select-location-stock.component.ts","webpack:///./src/app/main/logistics/stock-view/form/stock-view-filter/stock-view-filter.component.html","webpack:///./src/app/main/logistics/stock-view/form/stock-view-filter/stock-view-filter.component.scss","webpack:///./src/app/main/logistics/stock-view/form/stock-view-filter/stock-view-filter.component.ts","webpack:///./src/app/main/logistics/stock-view/form/stock-view-form.component.html","webpack:///./src/app/main/logistics/stock-view/form/stock-view-form.component.scss","webpack:///./src/app/main/logistics/stock-view/form/stock-view-form.component.ts","webpack:///./src/app/main/logistics/stock-view/form/stock-view-form.service.ts","webpack:///./src/app/main/logistics/stock-view/search/stock-view-search.component.html","webpack:///./src/app/main/logistics/stock-view/search/stock-view-search.component.ts","webpack:///./src/app/main/logistics/stock-view/search/stock-view-search.service.ts","webpack:///./src/app/main/logistics/stock-view/stock-view.module.ts"],"names":[],"mappings":"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","file":"logistics-stock-view-stock-view-module.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/chart/chart\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/treetable/treetable\"));","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <h3 class=\\\"section-title\\\">\\r\\n        {{ getComponentName() + \\\".newLocation\\\" | translate }}\\r\\n      </h3>\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".zone\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-selectButton\\r\\n              [(ngModel)]=\\\"selectedZone\\\"\\r\\n              [options]=\\\"storageZoneList\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              (onChange)=\\\"loadBinDropDown()\\\"\\r\\n            ></p-selectButton>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group required\\\" *ngIf=\\\"isZoneHaveBins\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".bins\\\" | translate }}\\r\\n          </label>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [(ngModel)]=\\\"selectedBin\\\"\\r\\n              [options]=\\\"storageBinList\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"!isZoneHaveBins\\\"></div>\\r\\n        <div class=\\\"form-group\\\"></div>\\r\\n        <div class=\\\"form-group\\\"></div>\\r\\n        <div class=\\\"form-group\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"section\\\">\\r\\n      <h3 class=\\\"section-title\\\">\\r\\n        {{ getComponentName() + \\\".assetToMove\\\" | translate }}\\r\\n      </h3>\\r\\n\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <p-table\\r\\n          #ptableStockInformation\\r\\n          class=\\\"aw-table2\\\"\\r\\n          [resizableColumns]=\\\"true\\\"\\r\\n          [scrollable]=\\\"true\\\"\\r\\n          [value]=\\\"rows\\\"\\r\\n          [customSort]=\\\"false\\\"\\r\\n        >\\r\\n          <ng-template pTemplate=\\\"colgroup\\\">\\r\\n            <colgroup>\\r\\n              <col style=\\\"width: 18%;\\\" />\\r\\n              <col style=\\\"width: 18%;\\\" />\\r\\n              <col style=\\\"width: 16%;\\\" />\\r\\n              <col style=\\\"width: 16%;\\\" />\\r\\n              <col style=\\\"width: 16%;\\\" *ngIf=\\\"withAlternatives\\\" />\\r\\n              <col style=\\\"width: 16%;\\\" />\\r\\n            </colgroup>\\r\\n          </ng-template>\\r\\n          <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n              <th style=\\\"text-align: left;\\\">\\r\\n                {{ getComponentName() + \\\".material\\\" | translate }}\\r\\n              </th>\\r\\n              <th style=\\\"text-align: left;\\\">\\r\\n                {{ getComponentName() + \\\".batchNumber\\\" | translate }}\\r\\n              </th>\\r\\n\\r\\n              <th style=\\\"text-align: left;\\\">\\r\\n                {{ getComponentName() + \\\".snAndManufactoring\\\" | translate }}\\r\\n              </th>\\r\\n              <th style=\\\"text-align: right;\\\">\\r\\n                {{ getComponentName() + \\\".quantity\\\" | translate }}\\r\\n              </th>\\r\\n              <th style=\\\"text-align: left;\\\" *ngIf=\\\"withAlternatives\\\">\\r\\n                {{ getComponentName() + \\\".interchangeability\\\" | translate }}\\r\\n              </th>\\r\\n              <th style=\\\"text-align: left;\\\">\\r\\n                {{ getComponentName() + \\\".storage\\\" | translate }}\\r\\n              </th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template pTemplate=\\\"body\\\" let-rowData let-rowIndex=\\\"rowIndex\\\">\\r\\n            <tr>\\r\\n              <td>\\r\\n                <div>\\r\\n                  <div>\\r\\n                    <span class=\\\"bold\\\">\\r\\n                      {{ rowData[\\\"pn\\\"] }}\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <div>\\r\\n                    <span class=\\\"italic\\\">{{ rowData[\\\"designation\\\"] }}</span>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </td>\\r\\n\\r\\n              <td>\\r\\n                <div>\\r\\n                  <span class=\\\"bold\\\">\\r\\n                    {{ rowData[\\\"stockBatchNumber\\\"] }}\\r\\n                  </span>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"rowData['stockBatchNumber']\\\">\\r\\n                  <span class=\\\"italic\\\">\\r\\n                    {{ rowData[\\\"operationalStatus\\\"] | formatSelectOption: equipmentStatuses }}\\r\\n                  </span>\\r\\n                </div>\\r\\n              </td>\\r\\n\\r\\n              <td>\\r\\n                <div>\\r\\n                  <span class=\\\"bold\\\" *ngIf=\\\"rowData['stockSn'] && !rowData['manufacturingBatchNumber']\\\">\\r\\n                    {{ rowData[\\\"stockSn\\\"] }}\\r\\n                  </span>\\r\\n                  <span class=\\\"bold\\\" *ngIf=\\\"!rowData['stockSn'] && rowData['manufacturingBatchNumber']\\\">\\r\\n                    {{ rowData[\\\"manufacturingBatchNumber\\\"] }}\\r\\n                  </span>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!rowData['stockBatchNumber']\\\">\\r\\n                  <span class=\\\"italic\\\">\\r\\n                    {{ rowData[\\\"operationalStatus\\\"] | formatSelectOption: equipmentStatuses }}\\r\\n                  </span>\\r\\n                </div>\\r\\n              </td>\\r\\n\\r\\n              <td style=\\\"text-align: right;\\\">\\r\\n                {{ rowData[\\\"stockQuantity\\\"] | formatNumber }}\\r\\n              </td>\\r\\n\\r\\n              <td *ngIf=\\\"withAlternatives\\\">\\r\\n                {{ rowData[\\\"interchangeabilityText\\\"] }}\\r\\n              </td>\\r\\n              <td>\\r\\n                <div>\\r\\n                  <div>\\r\\n                    <span class=\\\"bold\\\">\\r\\n                      {{ rowData[\\\"areaText\\\"] }}\\r\\n                    </span>\\r\\n                  </div>\\r\\n                  <div>\\r\\n                    {{ rowData[\\\"storageBinText\\\"] }}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </p-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" color=\\\"primary\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \":host .custom-icon {\\n  font-size: 6em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3Mvc3RvY2stdmlldy9kaWFsb2ctc2VsZWN0LWxvY2F0aW9uLXN0b2NrL0Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZnJvbnRlbmRfYWVyb3dlYmIvc3JjXFxhcHBcXG1haW5cXGxvZ2lzdGljc1xcc3RvY2stdmlld1xcZGlhbG9nLXNlbGVjdC1sb2NhdGlvbi1zdG9ja1xcZGlhbG9nLXNlbGVjdC1sb2NhdGlvbi1zdG9jay5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vbG9naXN0aWNzL3N0b2NrLXZpZXcvZGlhbG9nLXNlbGVjdC1sb2NhdGlvbi1zdG9jay9kaWFsb2ctc2VsZWN0LWxvY2F0aW9uLXN0b2NrLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gIC5jdXN0b20taWNvbiB7XHJcbiAgICBmb250LXNpemU6IDZlbTtcclxuICB9XHJcbn1cclxuIl19 */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { BidtStorageBinTypeConstant } from '../../../../shared/constants/bidt-storage-bin-type-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { FindStockMvtsByCriteriaInput } from '../../../../shared/types/api-input-types/logistic/find-stock-mvts-by-criteria-input.interface';\r\nimport { BidtStockMvtDTO } from '../../../../shared/types/api-types/bidt-stock-mvt-dto.interface';\r\nimport { BidtStorageBinDTO } from '../../../../shared/types/api-types/bidt-storage-bin-dto.interface';\r\nimport { StockInformationDTO } from '../../../../shared/types/api-types/stock-information-dto-interface';\r\nimport { DialogComponent } from '../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { StockMvtParameters } from '../../stock-movements/stock-movement-parameters.interface';\r\nimport { StockViewFormService } from '../form/stock-view-form.service';\r\n\r\ninterface DropDownObject extends LabelValue<number> {\r\n  number: number;\r\n  _zone: BidtStorageBinDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-select-location',\r\n  templateUrl: './dialog-select-location-stock.component.html',\r\n  styleUrls: ['./dialog-select-location-stock.component.scss']\r\n})\r\nexport class DialogSelectLocationStockComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public rows: StockInformationDTO[];\r\n\r\n  @Input() public withAlternatives: boolean;\r\n\r\n  @Input() public equipmentStatuses: LabelValue<string>[];\r\n\r\n  @Output()\r\n  public onChangeLocation: EventEmitter<StockMvtParameters>;\r\n\r\n  public storageZoneList: DropDownObject[];\r\n  public selectedZone: number;\r\n\r\n  public storageBinList: DropDownObject[];\r\n  public selectedBin: number;\r\n\r\n  public isZoneHaveBins: boolean;\r\n\r\n  public constructor(private readonly stockViewFormService: StockViewFormService) {\r\n    super(ComponentOpenMode.Write, 'DialogSelectLocationStockComponent');\r\n    this.onChangeLocation = new EventEmitter<StockMvtParameters>();\r\n    this.init();\r\n  }\r\n\r\n  private init(): void {\r\n    this.storageZoneList = [];\r\n    this.storageBinList = [];\r\n    this.isZoneHaveBins = false;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.loadZoneDropDown();\r\n  }\r\n\r\n  private loadZoneDropDown(): void {\r\n    if (this.rows[0].warehouseId) {\r\n      this.stockViewFormService.findBidtWarehouseById(Number(this.rows[0].warehouseId)).subscribe((warehouse) => {\r\n        if (warehouse.bidtStorageBinDTOs) {\r\n          warehouse.bidtStorageBinDTOs\r\n            .filter((storage) => storage.bidtStorageBinTypeId === BidtStorageBinTypeConstant.SERVICEABLE)\r\n            .forEach((storageBin) => {\r\n              const row: DropDownObject = {\r\n                label: storageBin.sbDescription\r\n                  ? `${storageBin.sbNumber} - ${storageBin.sbDescription}`\r\n                  : `${storageBin.sbNumber}`,\r\n                value: storageBin.id as number,\r\n                number: Number(storageBin.sbNumber),\r\n                _zone: storageBin\r\n              };\r\n              this.storageZoneList.push(row);\r\n            });\r\n          this.storageZoneList.sort((a, b) => a.number - b.number);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public loadBinDropDown(): void {\r\n    this.isZoneHaveBins = false;\r\n    this.storageBinList = [];\r\n    const storageZone = this.storageZoneList.filter((storage) => storage.value === this.selectedZone)[0]._zone;\r\n    if (storageZone.bins) {\r\n      storageZone.bins.forEach((storageBin) => {\r\n        const row: DropDownObject = {\r\n          label: storageBin.sbDescription\r\n            ? `${storageBin.sbNumber} - ${storageBin.sbDescription}`\r\n            : `${storageBin.sbNumber}`,\r\n          value: storageBin.id as number,\r\n          number: Number(storageBin.sbNumber),\r\n          _zone: storageBin\r\n        };\r\n        this.storageBinList.push(row);\r\n      });\r\n      this.storageBinList.sort((a, b) => a.number - b.number);\r\n      this.isZoneHaveBins = true;\r\n    }\r\n  }\r\n\r\n  public validate() {\r\n    const stockMvtDTOList: BidtStockMvtDTO[] = [];\r\n    this.rows.forEach((stockInformation) => {\r\n      const stockMvtDTO: BidtStockMvtDTO = {\r\n        birePnPnCode: stockInformation.pn,\r\n        stockMvtSn: stockInformation.stockSn,\r\n        stockMvtBatchNumber: stockInformation.stockBatchNumber,\r\n        stockMvtQuantity: stockInformation.stockQuantity,\r\n        bidtSiteByBidtSiteIssueId: Number(stockInformation.siteId),\r\n        bidtWarehouseByBidtWarehouseIssueId: Number(stockInformation.warehouseId),\r\n        bidtStorageBinByBidtSbZoneIssueId: stockInformation.areaId ? Number(stockInformation.areaId) : undefined,\r\n        bidtStorageBinByBidtSbBinIssueId: stockInformation.storageBinId\r\n          ? Number(stockInformation.storageBinId)\r\n          : undefined,\r\n        bidtSiteByBidtSiteReceiptId: Number(stockInformation.siteId),\r\n        bidtWarehouseByBidtWarehouseReceiptId: Number(stockInformation.warehouseId),\r\n        bidtStorageBinByBidtSbZoneReceiptId: this.selectedZone,\r\n        bidtStorageBinByBidtSbBinReceiptId: this.selectedBin\r\n      };\r\n      stockMvtDTOList.push(stockMvtDTO);\r\n    });\r\n    this.stockViewFormService.mmfCreateStockMvtLocationChange(stockMvtDTOList).subscribe((updateList) => {\r\n      const mvtStatus: string[] = [];\r\n      let mvtStatusExcluded: string[] = [];\r\n\r\n      mvtStatusExcluded = [\r\n        AWPropertiesConstants.MM_MVT_STATUS_CANCELED_KEY,\r\n        AWPropertiesConstants.MM_MVT_STATUS_EXECUTED_KEY\r\n      ];\r\n\r\n      const searchCriteria: FindStockMvtsByCriteriaInput = {\r\n        mvtStatus,\r\n        mvtStatusExcluded,\r\n        untilPlannedDate: new Date(),\r\n        stockMvt: {\r\n          bidtSiteByBidtSiteIssueId: updateList[0].bidtSiteByBidtSiteIssueId,\r\n          bidtSiteByBidtSiteReceiptId: updateList[0].bidtSiteByBidtSiteReceiptId,\r\n          bidtWarehouseByBidtWarehouseIssueId: updateList[0].bidtWarehouseByBidtWarehouseIssueId,\r\n          bidtWarehouseByBidtWarehouseReceiptId: updateList[0].bidtWarehouseByBidtWarehouseReceiptId,\r\n          bidtStockMvtTypeId: updateList[0].bidtStockMvtTypeId,\r\n          stockMvtSn: updateList[0].stockMvtSn,\r\n          stockMvtBatchNumber: updateList[0].stockMvtBatchNumber\r\n        },\r\n        pnCode: updateList[0].birePnPnCode,\r\n        withAlternatives: false,\r\n        dfShipmentSearch: false\r\n      };\r\n\r\n      const params: StockMvtParameters = {\r\n        searchParameters: searchCriteria,\r\n        bidtStockList: updateList\r\n      };\r\n\r\n      this.onChangeLocation.emit(params);\r\n      this.closeDialog();\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-content\\\">\\r\\n  <div class=\\\"grid-row\\\">\\r\\n    <div class=\\\"grid-cell grid-cell--container custom-border\\\">\\r\\n      <div class=\\\"grid-cell-content\\\">\\r\\n        <div class=\\\"column\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group flex--auto\\\">\\r\\n              <label class=\\\"form-label\\\">{{ getComponentName() + \\\".material\\\" | translate }} </label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <p-dropdown\\r\\n                  class=\\\"aw-dropdown fixed-width\\\"\\r\\n                  placeholder=\\\"&nbsp;\\\"\\r\\n                  [showClear]=\\\"true\\\"\\r\\n                  [options]=\\\"listInterface.pnList\\\"\\r\\n                  [(ngModel)]=\\\"searchCriteria.pn\\\"\\r\\n                ></p-dropdown>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group flex--auto\\\">\\r\\n              <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".site\\\" | translate }} </label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <p-dropdown\\r\\n                  class=\\\"aw-dropdown fixed-width\\\"\\r\\n                  placeholder=\\\"&nbsp;\\\"\\r\\n                  [showClear]=\\\"true\\\"\\r\\n                  [options]=\\\"listInterface.siteList\\\"\\r\\n                  [(ngModel)]=\\\"searchCriteria.siteId\\\"\\r\\n                ></p-dropdown>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group flex--auto\\\">\\r\\n              <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".warehouse\\\" | translate }} </label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <p-dropdown\\r\\n                  class=\\\"aw-dropdown fixed-width\\\"\\r\\n                  placeholder=\\\"&nbsp;\\\"\\r\\n                  [showClear]=\\\"true\\\"\\r\\n                  [options]=\\\"listInterface.woList\\\"\\r\\n                  [(ngModel)]=\\\"searchCriteria.warehouseId\\\"\\r\\n                ></p-dropdown>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group flex--auto\\\">\\r\\n              <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".area\\\" | translate }} </label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <p-dropdown\\r\\n                  class=\\\"aw-dropdown fixed-width\\\"\\r\\n                  placeholder=\\\"&nbsp;\\\"\\r\\n                  [showClear]=\\\"true\\\"\\r\\n                  [options]=\\\"listInterface.areaList\\\"\\r\\n                  [(ngModel)]=\\\"searchCriteria.areaId\\\"\\r\\n                ></p-dropdown>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group flex--auto\\\">\\r\\n              <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".storage\\\" | translate }} </label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <p-dropdown\\r\\n                  class=\\\"aw-dropdown fixed-width\\\"\\r\\n                  placeholder=\\\"&nbsp;\\\"\\r\\n                  [showClear]=\\\"true\\\"\\r\\n                  [options]=\\\"listInterface.storageBinList\\\"\\r\\n                  [(ngModel)]=\\\"searchCriteria.storageBinId\\\"\\r\\n                ></p-dropdown>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group flex--auto\\\">\\r\\n              <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".plannedIssue\\\" | translate }} </label>\\r\\n\\r\\n              <div class=\\\"form-control\\\">\\r\\n                <p-calendar\\r\\n                  showButtonBar=\\\"true\\\"\\r\\n                  [monthNavigator]=\\\"true\\\"\\r\\n                  [yearNavigator]=\\\"true\\\"\\r\\n                  [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                  appendTo=\\\"body\\\"\\r\\n                  class=\\\"aw-calendar\\\"\\r\\n                  [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                  [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                  [readonlyInput]=\\\"true\\\"\\r\\n                  [(ngModel)]=\\\"searchCriteria.stockIssueDate\\\"\\r\\n                ></p-calendar>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row action-list\\\">\\r\\n            <button type=\\\"button\\\" mat-raised-button (click)=\\\"reset()\\\">\\r\\n              {{ \\\"global.reset\\\" | translate }}\\r\\n            </button>\\r\\n\\r\\n            <button type=\\\"button\\\" mat-raised-button (click)=\\\"filter()\\\">\\r\\n              {{ \\\"global.filter\\\" | translate }}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".custom-border {\\n  border: 0px !important;\\n  box-shadow: none !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3Mvc3RvY2stdmlldy9mb3JtL3N0b2NrLXZpZXctZmlsdGVyL0Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZnJvbnRlbmRfYWVyb3dlYmIvc3JjXFxhcHBcXG1haW5cXGxvZ2lzdGljc1xcc3RvY2stdmlld1xcZm9ybVxcc3RvY2stdmlldy1maWx0ZXJcXHN0b2NrLXZpZXctZmlsdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQXNCO0VBQ3RCLDJCQUEyQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9sb2dpc3RpY3Mvc3RvY2stdmlldy9mb3JtL3N0b2NrLXZpZXctZmlsdGVyL3N0b2NrLXZpZXctZmlsdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmN1c3RvbS1ib3JkZXIge1xyXG4gIGJvcmRlcjogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcbiJdfQ== */\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { StockInformationDTO } from '../../../../../shared/types/api-types/stock-information-dto-interface';\r\nimport { GenericComponent } from '../../../../../shared/types/generic-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\n\r\ninterface StockViewTableFilter {\r\n  pn?: string;\r\n  siteId?: string;\r\n  warehouseId?: string;\r\n  areaId?: string;\r\n  storageBinId?: string;\r\n  stockIssueDate?: Date;\r\n}\r\n\r\ninterface DropdownListInterface {\r\n  pnList: LabelValue<string>[];\r\n  siteList: LabelValue<string>[];\r\n  woList: LabelValue<string>[];\r\n  areaList: LabelValue<string>[];\r\n  storageBinList: LabelValue<string>[];\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-stock-view-filter',\r\n  templateUrl: './stock-view-filter.component.html',\r\n  styleUrls: ['./stock-view-filter.component.scss']\r\n})\r\nexport class StockViewFilterComponent extends GenericComponent {\r\n  @Input('stockInformationTable')\r\n  public set setDropdownData(data: StockInformationDTO[]) {\r\n    this.initDropdown();\r\n    if (!!data && data.length) {\r\n      data.forEach((element) => {\r\n        this.setDropdowns(element);\r\n      });\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  public familyCodeMap: Map<string, string>;\r\n\r\n  @Output()\r\n  public onFilter: EventEmitter<StockViewTableFilter>;\r\n\r\n  public listInterface: DropdownListInterface;\r\n  public searchCriteria: StockViewTableFilter;\r\n\r\n  public constructor(public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Write);\r\n    this.init();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'StockViewFilterComponent';\r\n  }\r\n\r\n  private init(): void {\r\n    this.onFilter = new EventEmitter<StockViewTableFilter>();\r\n    this.initDropdown();\r\n  }\r\n\r\n  /*********************************************\r\n   * INITILIZE DROPDOWNS\r\n   ********************************************/\r\n  private initDropdown() {\r\n    this.listInterface = {\r\n      siteList: [],\r\n      pnList: [],\r\n      woList: [],\r\n      areaList: [],\r\n      storageBinList: []\r\n    };\r\n    this.searchCriteria = {};\r\n  }\r\n\r\n  public reset(): void {\r\n    this.searchCriteria = {};\r\n  }\r\n\r\n  private setDropdowns(eleClone: StockInformationDTO): void {\r\n    if (!!this.listInterface) {\r\n      if (eleClone && eleClone.siteId && this.listInterface.siteList) {\r\n        const isPresent = this.listInterface.siteList.filter((res) => res.value === eleClone.siteId);\r\n\r\n        if (isPresent.length === 0) {\r\n          this.listInterface.siteList.push({\r\n            label: eleClone.siteText || eleClone.siteId,\r\n            value: eleClone.siteId\r\n          });\r\n        }\r\n      }\r\n\r\n      if (eleClone && eleClone.warehouseId && this.listInterface.woList) {\r\n        const isPresent = this.listInterface.woList.filter((res) => res.value === eleClone.warehouseId);\r\n\r\n        if (isPresent.length === 0) {\r\n          this.listInterface.woList.push({\r\n            label: eleClone.warehouseText || eleClone.warehouseText,\r\n            value: eleClone.warehouseId\r\n          });\r\n        }\r\n      }\r\n\r\n      if (eleClone && eleClone.pn && this.listInterface.pnList) {\r\n        const isPresent = this.listInterface.pnList.filter((res) => res.value === eleClone.pn);\r\n\r\n        if (isPresent.length === 0) {\r\n          this.listInterface.pnList.push({\r\n            label: eleClone.pn,\r\n            value: eleClone.pn\r\n          });\r\n        }\r\n      }\r\n\r\n      if (eleClone && eleClone.areaId && this.listInterface.areaList) {\r\n        const isPresent = this.listInterface.areaList.filter((res) => res.value === eleClone.areaId);\r\n\r\n        if (isPresent.length === 0) {\r\n          this.listInterface.areaList.push({\r\n            label: eleClone.areaText || eleClone.areaId,\r\n            value: eleClone.areaId\r\n          });\r\n        }\r\n      }\r\n\r\n      if (eleClone && eleClone.storageBinId && this.listInterface.storageBinList) {\r\n        const isPresent = this.listInterface.storageBinList.filter((res) => res.value === eleClone.storageBinId);\r\n\r\n        if (isPresent.length === 0) {\r\n          this.listInterface.storageBinList.push({\r\n            label: eleClone.storageBinText || eleClone.storageBinId,\r\n            value: eleClone.storageBinId\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public filter(): void {\r\n    // todo: need to implemented for planned date\r\n    this.onFilter.emit(this.searchCriteria);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ componentData.componentId + \\\".stockStatus\\\" | translate }}\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"section\\\" style=\\\"padding-right: 8px; width: 20%;\\\">\\r\\n                  <h3 class=\\\"section-title\\\">\\r\\n                    &nbsp;\\r\\n                  </h3>\\r\\n\\r\\n                  <div class=\\\"section-content\\\">\\r\\n                    <p-treeTable\\r\\n                      class=\\\"aw-tree-table2\\\"\\r\\n                      selectionMode=\\\"single\\\"\\r\\n                      [value]=\\\"stockViewTreeTable\\\"\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                      [(selection)]=\\\"selectedStockViewTreeNode\\\"\\r\\n                      (onNodeSelect)=\\\"onSelectStockViewTreeNode($event.node)\\\"\\r\\n                      (onNodeUnselect)=\\\"onUnselectStockViewTreeNode()\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\">\\r\\n                        <colgroup>\\r\\n                          <col style=\\\"width: 80%;\\\" />\\r\\n                          <col style=\\\"width: 20%;\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\">\\r\\n                        <tr>\\r\\n                          <th ttResizableColumn style=\\\"text-align: left;\\\">\\r\\n                            {{ getComponentName() + \\\".location\\\" | translate }}\\r\\n                          </th>\\r\\n\\r\\n                          <th ttResizableColumn style=\\\"text-align: right;\\\">\\r\\n                            {{ getComponentName() + \\\".quantity\\\" | translate }}\\r\\n                          </th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowNode let-rowData=\\\"rowData\\\">\\r\\n                        <tr [ttRow]=\\\"rowNode\\\" [ttSelectableRow]=\\\"rowNode\\\">\\r\\n                          <td style=\\\"overflow: hidden; text-overflow: ellipsis;\\\">\\r\\n                            <p-treeTableToggler [rowNode]=\\\"rowNode\\\"></p-treeTableToggler>\\r\\n\\r\\n                            <ng-container *ngIf=\\\"rowData.type == treeNodeType.SITE\\\">\\r\\n                              {{ rowData.data.site.siteName }}\\r\\n                            </ng-container>\\r\\n\\r\\n                            <ng-container *ngIf=\\\"rowData.type == treeNodeType.WAREHOUSE\\\">\\r\\n                              {{ rowData.data.warehouse.whName }}\\r\\n                            </ng-container>\\r\\n\\r\\n                            <ng-container *ngIf=\\\"rowData.type == treeNodeType.ZONE\\\">\\r\\n                              {{ rowData.data.zone.sbNumber }}\\r\\n                              <ng-container *ngIf=\\\"rowData.data.zone.sbDescription\\\">\\r\\n                                - {{ rowData.data.zone.sbDescription }}\\r\\n                              </ng-container>\\r\\n                            </ng-container>\\r\\n                          </td>\\r\\n\\r\\n                          <td style=\\\"text-align: right;\\\">\\r\\n                            {{ rowData.quantity }}\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-treeTable>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"section\\\" style=\\\"border-left: 1px solid #000; padding-left: 8px; width: 80%;\\\">\\r\\n                  <h3 class=\\\"section-title\\\">\\r\\n                    {{ componentData.componentId + \\\".stockToDate\\\" | translate }}\\r\\n                    ({{ date | date: \\\"shortDate\\\":\\\"\\\":translateService.currentLang }})\\r\\n                  </h3>\\r\\n\\r\\n                  <div class=\\\"section-content\\\">\\r\\n                    <p-table\\r\\n                      #ptableStockInformation\\r\\n                      class=\\\"aw-table2\\\"\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                      [value]=\\\"stockInformationTable\\\"\\r\\n                      [(selection)]=\\\"selectedStockInformations\\\"\\r\\n                      [globalFilterFields]=\\\"[\\r\\n                        'pn',\\r\\n                        'designation',\\r\\n                        'stockSn',\\r\\n                        'stockBatchNumber',\\r\\n                        'manufacturingBatchNumber',\\r\\n                        'interchangeabilityText',\\r\\n                        'siteText',\\r\\n                        'warehouseText',\\r\\n                        'areaText',\\r\\n                        'storageBinText',\\r\\n                        'stockIssueDate'\\r\\n                      ]\\\"\\r\\n                      (sortFunction)=\\\"customSort($event)\\\"\\r\\n                      [customSort]=\\\"true\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"caption\\\">\\r\\n                        <div\\r\\n                          class=\\\"aw-table-header\\\"\\r\\n                          [ngClass]=\\\"{ 'rows-selected': selectedStockInformations.length > 0 }\\\"\\r\\n                        >\\r\\n                          <div class=\\\"aw-table-global-filter\\\">\\r\\n                            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </label>\\r\\n\\r\\n                            <input\\r\\n                              #ptableStockInformationGlobalFilter\\r\\n                              class=\\\"aw-table-global-filter-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                              (input)=\\\"ptableStockInformation.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"aw-table-actions\\\">\\r\\n                            <button\\r\\n                              *ngIf=\\\"\\r\\n                                selectedStockInformations.length > 0 &&\\r\\n                                selectedStockViewTreeNode.data.type != treeNodeType.SITE\\r\\n                              \\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"changeLocation()\\\"\\r\\n                            >\\r\\n                              {{ getComponentName() + \\\".changeLocation\\\" | translate }}\\r\\n                            </button>\\r\\n                          </div>\\r\\n                          <div class=\\\"aw-table-icon-actions\\\">\\r\\n                            <i\\r\\n                              *ngIf=\\\"!!completeStockInformationTable && completeStockInformationTable.length > 0\\\"\\r\\n                              class=\\\"fa fa-fw fa-filter aw-icon aw-icon-with-border aw-icon-with-overlay\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              [ngClass]=\\\"{ active: filtersVisible }\\\"\\r\\n                              (click)=\\\"opFilters.toggle($event); openFilters()\\\"\\r\\n                            ></i>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\">\\r\\n                        <colgroup>\\r\\n                          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                          <col style=\\\"width: 15%;\\\" />\\r\\n                          <col style=\\\"width: 15%;\\\" />\\r\\n                          <col style=\\\"width: 15%;\\\" />\\r\\n                          <col style=\\\"width: 5%;\\\" />\\r\\n                          <col style=\\\"width: 15%;\\\" *ngIf=\\\"withAlternatives\\\" />\\r\\n                          <col style=\\\"width: 15%;\\\" />\\r\\n                          <col style=\\\"width: 10%;\\\" />\\r\\n                          <col style=\\\"width: 10%;\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\">\\r\\n                        <tr>\\r\\n                          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                          </th>\\r\\n                          <th style=\\\"text-align: left;\\\" pSortableColumn=\\\"pn\\\">\\r\\n                            {{ getComponentName() + \\\".material\\\" | translate }}\\r\\n                            <p-sortIcon field=\\\"pn\\\"></p-sortIcon>\\r\\n                          </th>\\r\\n                          <th style=\\\"text-align: left;\\\" pSortableColumn=\\\"stockBatchNumber\\\">\\r\\n                            {{ getComponentName() + \\\".batchNumber\\\" | translate }}\\r\\n                            <p-sortIcon field=\\\"stockBatchNumber\\\"></p-sortIcon>\\r\\n                          </th>\\r\\n                          <th style=\\\"text-align: left;\\\" pSortableColumn=\\\"stockSn\\\">\\r\\n                            {{ getComponentName() + \\\".snAndManufactoring\\\" | translate }}\\r\\n                            <p-sortIcon field=\\\"stockSn\\\"></p-sortIcon>\\r\\n                          </th>\\r\\n                          <th style=\\\"text-align: right;\\\" pSortableColumn=\\\"stockQuantity\\\">\\r\\n                            {{ getComponentName() + \\\".quantity\\\" | translate }}\\r\\n                            <p-sortIcon field=\\\"stockQuantity\\\"></p-sortIcon>\\r\\n                          </th>\\r\\n                          <th\\r\\n                            style=\\\"text-align: left;\\\"\\r\\n                            *ngIf=\\\"withAlternatives\\\"\\r\\n                            pSortableColumn=\\\"interchangeabilityText\\\"\\r\\n                          >\\r\\n                            {{ getComponentName() + \\\".interchangeability\\\" | translate }}\\r\\n                            <p-sortIcon field=\\\"interchangeabilityText\\\"></p-sortIcon>\\r\\n                          </th>\\r\\n                          <th style=\\\"text-align: left;\\\" pSortableColumn=\\\"siteText\\\">\\r\\n                            {{ getComponentName() + \\\".location\\\" | translate }}\\r\\n                            <p-sortIcon field=\\\"siteText\\\"></p-sortIcon>\\r\\n                          </th>\\r\\n                          <th style=\\\"text-align: left;\\\" pSortableColumn=\\\"areaText\\\">\\r\\n                            {{ getComponentName() + \\\".storage\\\" | translate }}\\r\\n                            <p-sortIcon field=\\\"areaText\\\"></p-sortIcon>\\r\\n                          </th>\\r\\n                          <th style=\\\"text-align: left;\\\" pSortableColumn=\\\"stockIssueDate\\\">\\r\\n                            {{ getComponentName() + \\\".plannedIssue\\\" | translate }}\\r\\n                            <p-sortIcon field=\\\"stockIssueDate\\\"></p-sortIcon>\\r\\n                          </th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowData let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            <div>\\r\\n                              <div>\\r\\n                                <a class=\\\"bold\\\" (click)=\\\"openPn(rowData)\\\">\\r\\n                                  {{ rowData[\\\"pn\\\"] }}\\r\\n                                </a>\\r\\n                              </div>\\r\\n                              <div>\\r\\n                                <span class=\\\"italic\\\">{{ rowData[\\\"designation\\\"] }}</span>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </td>\\r\\n\\r\\n                          <td>\\r\\n                            <div>\\r\\n                              <a\\r\\n                                class=\\\"bold\\\"\\r\\n                                (click)=\\\"rowData['stockSn'] ? openEquipment(rowData) : openBatch(rowData)\\\"\\r\\n                              >\\r\\n                                {{ rowData[\\\"stockBatchNumber\\\"] }}\\r\\n                              </a>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"rowData['stockBatchNumber']\\\">\\r\\n                              <span class=\\\"italic\\\">\\r\\n                                {{ rowData[\\\"operationalStatus\\\"] | formatSelectOption: equipmentStatuses }}\\r\\n                              </span>\\r\\n                            </div>\\r\\n                          </td>\\r\\n\\r\\n                          <td>\\r\\n                            <div>\\r\\n                              <a\\r\\n                                class=\\\"bold\\\"\\r\\n                                (click)=\\\"openEquipment(rowData)\\\"\\r\\n                                *ngIf=\\\"rowData['stockSn'] && !rowData['manufacturingBatchNumber']\\\"\\r\\n                              >\\r\\n                                {{ rowData[\\\"stockSn\\\"] }}\\r\\n                              </a>\\r\\n                              <a\\r\\n                                class=\\\"bold\\\"\\r\\n                                (click)=\\\"openManufacturingBatch(rowData)\\\"\\r\\n                                *ngIf=\\\"!rowData['stockSn'] && rowData['manufacturingBatchNumber']\\\"\\r\\n                              >\\r\\n                                {{ rowData[\\\"manufacturingBatchNumber\\\"] }}\\r\\n                              </a>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!rowData['stockBatchNumber']\\\">\\r\\n                              <span class=\\\"italic\\\">\\r\\n                                {{ rowData[\\\"operationalStatus\\\"] | formatSelectOption: equipmentStatuses }}\\r\\n                              </span>\\r\\n                            </div>\\r\\n                          </td>\\r\\n\\r\\n                          <td style=\\\"text-align: right;\\\">\\r\\n                            {{ rowData[\\\"stockQuantity\\\"] | formatNumber }}\\r\\n                          </td>\\r\\n\\r\\n                          <td *ngIf=\\\"withAlternatives\\\">\\r\\n                            {{ rowData[\\\"interchangeabilityText\\\"] }}\\r\\n                          </td>\\r\\n\\r\\n                          <td>\\r\\n                            <div>\\r\\n                              <div>\\r\\n                                <span class=\\\"bold\\\">\\r\\n                                  {{ rowData[\\\"siteText\\\"] }}\\r\\n                                </span>\\r\\n                              </div>\\r\\n                              <div>\\r\\n                                {{ rowData[\\\"warehouseText\\\"] }}\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </td>\\r\\n\\r\\n                          <td>\\r\\n                            <div>\\r\\n                              <div>\\r\\n                                <span class=\\\"bold\\\">\\r\\n                                  {{ rowData[\\\"areaText\\\"] }}\\r\\n                                </span>\\r\\n                              </div>\\r\\n                              <div>\\r\\n                                {{ rowData[\\\"storageBinText\\\"] }}\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </td>\\r\\n\\r\\n                          <td>\\r\\n                            <span class=\\\"bold\\\">\\r\\n                              {{ rowData[\\\"stockIssueDate\\\"] | date: \\\"shortDate\\\":\\\"\\\":translateService.currentLang }}\\r\\n                            </span>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <p-overlayPanel\\r\\n    #opFilters\\r\\n    [appendTo]=\\\"'body'\\\"\\r\\n    class=\\\"aw-overlay\\\"\\r\\n    [dismissable]=\\\"false\\\"\\r\\n    (onShow)=\\\"filtersVisible = true\\\"\\r\\n    (onHide)=\\\"filtersVisible = false\\\"\\r\\n  >\\r\\n    <aw-stock-view-filter\\r\\n      *ngIf=\\\"showFilterOverlay && !!completeStockInformationTable && completeStockInformationTable.length > 0\\\"\\r\\n      [stockInformationTable]=\\\"completeStockInformationTable\\\"\\r\\n      (onFilter)=\\\"opFilters.hide(); filtersVisible = false; filterWithCriteria($event)\\\"\\r\\n    ></aw-stock-view-filter>\\r\\n  </p-overlayPanel>\\r\\n\\r\\n  <aw-dialog-select-location\\r\\n    *ngIf=\\\"isChangeLocationDisplayed\\\"\\r\\n    [(display)]=\\\"isChangeLocationDisplayed\\\"\\r\\n    [rows]=\\\"selectedStockInformations\\\"\\r\\n    [equipmentStatuses]=\\\"equipmentStatuses\\\"\\r\\n    [withAlternatives]=\\\"withAlternatives\\\"\\r\\n    (onChangeLocation)=\\\"onValidateChangeLocation($event)\\\"\\r\\n  ></aw-dialog-select-location>\\r\\n</div>\\r\\n\"","module.exports = \"::ng-deep .ui-table-scrollable-body {\\n  max-height: 38rem !important; }\\n\\n::ng-deep .ui-treetable-scrollable-body {\\n  max-height: 38rem !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3Mvc3RvY2stdmlldy9mb3JtL0Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZnJvbnRlbmRfYWVyb3dlYmIvc3JjXFxhcHBcXG1haW5cXGxvZ2lzdGljc1xcc3RvY2stdmlld1xcZm9ybVxcc3RvY2stdmlldy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNEJBQTRCLEVBQUE7O0FBRzlCO0VBQ0UsNEJBQTRCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2xvZ2lzdGljcy9zdG9jay12aWV3L2Zvcm0vc3RvY2stdmlldy1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIC51aS10YWJsZS1zY3JvbGxhYmxlLWJvZHkge1xyXG4gIG1heC1oZWlnaHQ6IDM4cmVtICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAudWktdHJlZXRhYmxlLXNjcm9sbGFibGUtYm9keSB7XHJcbiAgbWF4LWhlaWdodDogMzhyZW0gIWltcG9ydGFudDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { cloneDeep as _cloneDeep } from 'lodash-es';\r\nimport { SortEvent, TreeNode } from 'primeng/api';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { StockInformationDTO } from '../../../../shared/types/api-types/stock-information-dto-interface';\r\nimport { StockViewSiteNodeDTO } from '../../../../shared/types/api-types/stock-view-site-node-dto.interface';\r\nimport { StockViewWarehouseNodeDTO } from '../../../../shared/types/api-types/stock-view-warehouse-node-dto.interface';\r\nimport { StockViewZoneNodeDTO } from '../../../../shared/types/api-types/stock-view-zone-node-dto.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { NumberUtils } from '../../../../shared/utils/number-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\nimport { StockMvtParameters } from '../../stock-movements/stock-movement-parameters.interface';\r\n\r\nimport { StockViewFormService } from './stock-view-form.service';\r\n\r\ninterface TreeNodeData {\r\n  data: StockViewSiteNodeDTO | StockViewWarehouseNodeDTO | StockViewZoneNodeDTO;\r\n  quantity: number;\r\n  type: string;\r\n}\r\n\r\nenum TreeNodeType {\r\n  SITE = 'site',\r\n  WAREHOUSE = 'warehouse',\r\n  ZONE = 'zone'\r\n}\r\n\r\ninterface StockViewTableFilter {\r\n  pn?: string;\r\n  siteId?: string;\r\n  warehouseId?: string;\r\n  areaId?: string;\r\n  storageBinId?: string;\r\n  stockIssueDate?: Date;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-stock-view-form',\r\n  styleUrls: ['./stock-view-form.component.scss'],\r\n  templateUrl: './stock-view-form.component.html'\r\n})\r\nexport class StockViewFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  // private static readonly SEARCH_TEXT_DEBOUNCE_TIME: number = 500;\r\n  private static readonly issueData: string = 'stockIssueDate';\r\n  public readonly treeNodeType: typeof TreeNodeType;\r\n\r\n  public date: Date;\r\n  public withAlternatives: boolean;\r\n\r\n  public stockInformationTable: StockInformationDTO[];\r\n  public stockViewTreeTable: TreeNode[];\r\n\r\n  public equipmentStatuses: LabelValue<string>[];\r\n\r\n  public selectedStockInformations: StockInformationDTO[] | undefined;\r\n  public selectedStockViewTreeNode: TreeNode | undefined;\r\n  public isChangeLocationDisplayed: boolean;\r\n  public filtersVisible: boolean;\r\n  public showFilterOverlay: boolean;\r\n  public completeStockInformationTable: StockInformationDTO[];\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public readonly translateService: TranslateService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly stockViewFormService: StockViewFormService\r\n  ) {\r\n    super(ComponentOpenMode.Read, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.treeNodeType = TreeNodeType;\r\n\r\n    this.init();\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_STOCK_VIEW_FORM;\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    if (this.componentData.objectId) {\r\n      const input = this.serializationService.deserialize(this.componentData.objectId) as {\r\n        data: StockViewSiteNodeDTO[];\r\n        date: Date;\r\n        withAlternatives: boolean;\r\n      };\r\n\r\n      this.date = input.date;\r\n      this.withAlternatives = input.withAlternatives;\r\n      this.stockViewTreeTable = input.data.map((node) => this.createSiteTreeNode(node));\r\n\r\n      if (this.stockViewTreeTable.length === 1) {\r\n        this.stockViewTreeTable[0].expanded = true;\r\n        this.selectedStockViewTreeNode = this.stockViewTreeTable[0];\r\n        this.onSelectStockViewTreeNode(this.selectedStockViewTreeNode);\r\n      }\r\n    }\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public customSort(event: SortEvent): void {\r\n    if (event.data) {\r\n      event.data.sort((data1: StockInformationDTO, data2: StockInformationDTO) => {\r\n        let value1: unknown;\r\n        let value2: unknown;\r\n        let result: number;\r\n\r\n        if (event.field === 'stockSn') {\r\n          value1 = data1.stockSn || data1.manufacturingBatchNumber;\r\n          value2 = data2.stockSn || data2.manufacturingBatchNumber;\r\n        } else {\r\n          value1 = data1[event.field as string];\r\n          value2 = data2[event.field as string];\r\n        }\r\n\r\n        if (value1 === null && value2 !== null) {\r\n          result = -1;\r\n        } else if (value1 !== null && value2 === null) {\r\n          result = 1;\r\n        } else if (value1 === null && value2 === null) {\r\n          result = 0;\r\n        } else if (typeof value1 === 'string' && typeof value2 === 'string') {\r\n          result = value1.localeCompare(value2);\r\n        } else {\r\n          result = (value1 as number) < (value2 as number) ? -1 : (value1 as number) > (value2 as number) ? 1 : 0;\r\n        }\r\n\r\n        return (event.order as number) * result;\r\n      });\r\n    }\r\n  }\r\n\r\n  public onSelectStockViewTreeNode(node: TreeNode): void {\r\n    this.stockInformationTable = (node.data as TreeNodeData).data.stockInformation.sort((x, y) =>\r\n      x.pn.localeCompare(y.pn)\r\n    );\r\n    this.completeStockInformationTable = _cloneDeep(this.stockInformationTable);\r\n    this.selectedStockInformations = [];\r\n  }\r\n\r\n  public onUnselectStockViewTreeNode(): void {\r\n    this.stockInformationTable = [];\r\n    this.completeStockInformationTable = [];\r\n  }\r\n\r\n  public openBatch(row: StockInformationDTO): void {\r\n    const equip: BidoEquipmentDTO = {};\r\n    equip.pnCode = row.pn;\r\n    equip.batchNumber = row.stockBatchNumber;\r\n    equip.bidoEquipmentAttributeList = [];\r\n    equip.equipmentFunction = '';\r\n    this.stockViewFormService.findBidoEquipmentByPnAndBatchNumber(equip).subscribe({\r\n      next: (result) => {\r\n        if (result) {\r\n          const data: PageComponentData = {\r\n            id: this.tabService.generateId(),\r\n            componentId: ComponentConstants.LOG_PACKAGING_BATCH_FORM,\r\n            openMode: ComponentOpenMode.Read\r\n          };\r\n\r\n          data.objectId = result.equipmentCode;\r\n          const labelKey = 'transaction.' + data.componentId;\r\n          this.tabService.open(this.tabService.create(data, labelKey, true));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public openEquipment(row: StockInformationDTO): void {\r\n    this.loadStockInformationEquipment(row).subscribe({\r\n      next: (equipment) => {\r\n        if (equipment) {\r\n          const data: PageComponentData = {\r\n            componentId: ComponentConstants.FLE_EQUIPMENT_FORM,\r\n            id: this.tabService.generateId(),\r\n            objectId: this.serializationService.serialize({\r\n              equipmentCode: equipment.equipmentCode\r\n            }),\r\n            openMode: ComponentOpenMode.Read\r\n          };\r\n          const labelKey = 'transaction.' + data.componentId;\r\n          this.tabService.open(this.tabService.create(data, labelKey, true));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public openManufacturingBatch(row: StockInformationDTO): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_MANUFACTURING_BATCH_FORM,\r\n      objectId: this.serializationService.serialize({ customerCode: row.manufacturingBatchNumber }),\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public openPn(row: StockInformationDTO): void {\r\n    const data: PageComponentData = {\r\n      componentId: ComponentConstants.ENG_PART_NUMBER_FORM,\r\n      id: this.tabService.generateId(),\r\n      objectId: row.pn,\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  private calculateQuantity(stockInformation: StockInformationDTO[]): number {\r\n    return stockInformation\r\n      .filter((aStockInformation) => !StringUtils.isNullOrEmpty(aStockInformation.stockQuantity))\r\n      .map((aStockInformation) => aStockInformation.stockQuantity as string)\r\n      .map((quantity) => NumberUtils.fromString(quantity))\r\n      .reduce((x, y) => x + y, 0);\r\n  }\r\n\r\n  private createSiteTreeNode(node: StockViewSiteNodeDTO): TreeNode {\r\n    return {\r\n      data: { data: node, quantity: this.calculateQuantity(node.stockInformation), type: TreeNodeType.SITE },\r\n      children: node.warehouseNodes.map((warehouseNode) => this.createWarehouseTreeNode(warehouseNode))\r\n    };\r\n  }\r\n\r\n  private createWarehouseTreeNode(node: StockViewWarehouseNodeDTO): TreeNode {\r\n    return {\r\n      data: { data: node, quantity: this.calculateQuantity(node.stockInformation), type: TreeNodeType.WAREHOUSE },\r\n      children: node.zoneNodes.map((zoneNode) => this.createZoneTreeNode(zoneNode))\r\n    };\r\n  }\r\n\r\n  private createZoneTreeNode(node: StockViewZoneNodeDTO): TreeNode {\r\n    return {\r\n      data: { data: node, quantity: this.calculateQuantity(node.stockInformation), type: TreeNodeType.ZONE },\r\n      children: []\r\n    };\r\n  }\r\n\r\n  private init(): void {\r\n    this.stockInformationTable = [];\r\n    this.stockViewTreeTable = [];\r\n\r\n    this.equipmentStatuses = [];\r\n\r\n    this.selectedStockInformations = [];\r\n    this.selectedStockViewTreeNode = undefined;\r\n    this.isChangeLocationDisplayed = false;\r\n\r\n    this.loadEquipmentStatuses();\r\n  }\r\n\r\n  private loadEquipmentStatuses(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.OPERATIONAL_STATUS_MAP).subscribe((statuses) => {\r\n      this.equipmentStatuses = statuses.sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n    });\r\n  }\r\n\r\n  private loadStockInformationEquipment(rowData: StockInformationDTO): Observable<BidoEquipmentDTO | undefined> {\r\n    return this.stockViewFormService\r\n      .findBidoEquipmentsByPnAndSn({\r\n        pnCode: rowData.pn,\r\n        sn: rowData.stockSn\r\n      })\r\n      .pipe(map((equipments) => (equipments.length > 0 ? equipments[0] : undefined)));\r\n  }\r\n\r\n  public changeLocation(): void {\r\n    this.isChangeLocationDisplayed = true;\r\n  }\r\n\r\n  public openFilters() {\r\n    this.showFilterOverlay = !this.filtersVisible;\r\n  }\r\n\r\n  public filterWithCriteria(event: StockViewTableFilter) {\r\n    if (Object.keys(event).length === 0) {\r\n      this.stockInformationTable = [];\r\n      this.stockInformationTable = _cloneDeep(this.completeStockInformationTable);\r\n    } else {\r\n      this.stockInformationTable = this.completeStockInformationTable.filter((element) => {\r\n        for (const prop in event) {\r\n          if (prop === StockViewFormComponent.issueData && element[prop] && event[prop]) {\r\n            const currentDate = new Date(event[prop]).getTime();\r\n            const savedDate = new Date(element[prop]).getTime();\r\n\r\n            return currentDate < savedDate ? false : true;\r\n          } else if (event[prop] && element[prop] !== event[prop]) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        return true;\r\n      });\r\n    }\r\n  }\r\n\r\n  public onValidateChangeLocation(params: StockMvtParameters) {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_STOCK_MOVEMENTS_FORM,\r\n      openMode: ComponentOpenMode.Read,\r\n      objectId: JSON.stringify(params)\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtStockMvtApi } from '../../../../shared/api/bidt-stock-mvt.api';\r\nimport { BidtWarehouseApi } from '../../../../shared/api/bidt-warehouse.api';\r\nimport { FleetManagementApi } from '../../../../shared/api/fleet-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BidtStockMvtDTO } from '../../../../shared/types/api-types/bidt-stock-mvt-dto.interface';\r\nimport { BidtWarehouseDTO } from '../../../../shared/types/api-types/bidt-warehouse-dto.interface';\r\n\r\n@Injectable()\r\nexport class StockViewFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    appConfigService: AppConfigService,\r\n    http: HttpClient,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly bidtWarehouseApi: BidtWarehouseApi,\r\n    private readonly bidtStockMvtApi: BidtStockMvtApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findBidoEquipmentsByPnAndSn(input: BidoEquipmentDTO): Observable<BidoEquipmentDTO[]> {\r\n    return super.post<BidoEquipmentDTO, BidoEquipmentDTO[]>(\r\n      this.fleetManagementApi.findBidoEquipmentsByPnAndSnCodes,\r\n      input\r\n    );\r\n  }\r\n\r\n  public findBidtWarehouseById(warehouseId: number): Observable<BidtWarehouseDTO> {\r\n    return super.post<number, BidtWarehouseDTO>(this.bidtWarehouseApi.findBidtWarehouseById, warehouseId);\r\n  }\r\n\r\n  public mmfCreateStockMvtLocationChange(stockMvtDtoList: BidtStockMvtDTO[]): Observable<BidtStockMvtDTO[]> {\r\n    return super.post<BidtStockMvtDTO[], BidtStockMvtDTO[]>(\r\n      this.bidtStockMvtApi.mmfCreateStockMvtLocationChange,\r\n      stockMvtDtoList\r\n    );\r\n  }\r\n\r\n  public findBidoEquipmentByPnAndBatchNumber(input: BidoEquipmentDTO): Observable<BidoEquipmentDTO> {\r\n    return super.post<BidoEquipmentDTO, BidoEquipmentDTO>(\r\n      this.fleetManagementApi.findBidoEquipmentByPnAndBatchNumber,\r\n      input\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".research\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group required\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".date\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-calendar\\r\\n                        showButtonBar=\\\"true\\\"\\r\\n                        [monthNavigator]=\\\"true\\\"\\r\\n                        [yearNavigator]=\\\"true\\\"\\r\\n                        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                        appendTo=\\\"body\\\"\\r\\n                        class=\\\"aw-calendar\\\"\\r\\n                        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                        [readonlyInput]=\\\"true\\\"\\r\\n                        [(ngModel)]=\\\"searchCriteria.date\\\"\\r\\n                      ></p-calendar>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group required may-required\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".material\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control form-control-with-modal\\\">\\r\\n                      <div class=\\\"form-control-data\\\" (click)=\\\"openItemPnDialog()\\\">\\r\\n                        {{ searchCriteria.pnCode }}\\r\\n                      </div>\\r\\n\\r\\n                      <div *ngIf=\\\"searchCriteria.pnCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                        <i\\r\\n                          class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                          aria-hidden=\\\"true\\\"\\r\\n                          (click)=\\\"clearItemPn()\\\"\\r\\n                        ></i>\\r\\n                      </div>\\r\\n                      <div class=\\\"btn-search-wrapper\\\">\\r\\n                        <i\\r\\n                          class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                          aria-hidden=\\\"true\\\"\\r\\n                          (click)=\\\"openItemPnDialog()\\\"\\r\\n                        ></i>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".itsAlternatives\\\" | translate }}</label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-checkbox\\r\\n                        binary=\\\"true\\\"\\r\\n                        class=\\\"aw-checkbox\\\"\\r\\n                        [(ngModel)]=\\\"searchCriteria.withAlternatives\\\"\\r\\n                      ></p-checkbox>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\"></div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group required may-required\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".site\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        [options]=\\\"sites\\\"\\r\\n                        [(ngModel)]=\\\"searchCriteria.siteId\\\"\\r\\n                        (onChange)=\\\"onChangeSiteOrWarehouseCategory()\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group required may-required flex--2\\\" style=\\\"height: 47px;\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ selectedWarehouseCategory | formatSelectOption: warehouseCategories }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control aw-selectbutton-wrapper aw-selectbutton-with-dropdown\\\">\\r\\n                      <p-selectButton\\r\\n                        [options]=\\\"warehouseCategories\\\"\\r\\n                        [(ngModel)]=\\\"selectedWarehouseCategory\\\"\\r\\n                        (onChange)=\\\"onChangeSiteOrWarehouseCategory()\\\"\\r\\n                      ></p-selectButton>\\r\\n\\r\\n                      <p-dropdown\\r\\n                        appendTo=\\\"body\\\"\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        [options]=\\\"warehouses\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        [(ngModel)]=\\\"searchCriteria.warehouseId\\\"\\r\\n                        (onChange)=\\\"onChangeWarehouse()\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group required may-required\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".zone\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        [options]=\\\"areas\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        [(ngModel)]=\\\"searchCriteria.areaId\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group \\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".storageBin\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        [options]=\\\"storageBins\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        [(ngModel)]=\\\"searchCriteria.storageBinId\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row flex-row--justify-end\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      appKeyPress\\r\\n                      mat-raised-button\\r\\n                      color=\\\"primary\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      [keyCode]=\\\"'Enter'\\\"\\r\\n                      (click)=\\\"calculate()\\\"\\r\\n                      (keyPress)=\\\"calculate()\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".toCalculate\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-search-pn\\r\\n    [showPartTypeSelection]=\\\"true\\\"\\r\\n    [(display)]=\\\"itemPnDialogVisible\\\"\\r\\n    (onSelected)=\\\"onSelectItemPn($event)\\\"\\r\\n    *ngIf=\\\"itemPnDialogVisible\\\"\\r\\n  ></aw-dialog-search-pn>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { StockViewSiteNodeDTO } from '../../../../shared/types/api-types/stock-view-site-node-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { ListUtils } from '../../../../shared/utils/list-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\n\r\nimport { StockViewSearchService } from './stock-view-search.service';\r\n\r\ninterface SearchCriteria {\r\n  areaId?: number;\r\n  date?: Date;\r\n  pnCode?: string;\r\n  siteId?: number;\r\n  storageBinId?: number;\r\n  warehouseId?: number;\r\n  withAlternatives?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-stock-view-search',\r\n  templateUrl: './stock-view-search.component.html'\r\n})\r\nexport class StockViewSearchComponent extends PageComponent<PageComponentData> {\r\n  public readonly awPropertiesConstants: typeof AWPropertiesConstants;\r\n\r\n  public searchCriteria: SearchCriteria;\r\n\r\n  public areas: LabelValue<number>[];\r\n  public sites: LabelValue<number>[];\r\n  public storageBins: LabelValue<string>[];\r\n  public warehouseCategories: LabelValue<string>[];\r\n  public warehouses: LabelValue<number>[];\r\n\r\n  public selectedWarehouseCategory: string | undefined;\r\n\r\n  public itemPnDialogVisible: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public readonly sessionService: SessionService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly stockViewSearchService: StockViewSearchService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.awPropertiesConstants = AWPropertiesConstants;\r\n\r\n    this.init();\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_STOCK_VIEW_SEARCH;\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public calculate(): void {\r\n    if (\r\n      this.searchCriteria.date &&\r\n      (!StringUtils.isNullOrEmpty(this.searchCriteria.pnCode) ||\r\n        (this.searchCriteria.siteId && this.searchCriteria.warehouseId && this.searchCriteria.areaId))\r\n    ) {\r\n      this.stockViewSearchService.loadStockView(this.searchCriteria).subscribe((stockView) => {\r\n        if (ListUtils.isNullOrEmpty(stockView)) {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('noResult'));\r\n        } else {\r\n          this.openStockView(stockView);\r\n        }\r\n      });\r\n    } else {\r\n      this.messageService.showWarningMessage(this.getTranslateKey('missingCriteria'));\r\n    }\r\n  }\r\n\r\n  public clearItemPn(): void {\r\n    this.searchCriteria.pnCode = undefined;\r\n  }\r\n\r\n  public onChangeSiteOrWarehouseCategory(): void {\r\n    this.unselectWarehouse();\r\n    this.unselectArea();\r\n\r\n    if (this.searchCriteria.siteId) {\r\n      this.loadWareHouses(this.searchCriteria.siteId, this.selectedWarehouseCategory as string);\r\n    }\r\n  }\r\n\r\n  public onChangeWarehouse(): void {\r\n    this.unselectArea();\r\n\r\n    if (this.searchCriteria.warehouseId) {\r\n      this.loadAreas(this.searchCriteria.warehouseId);\r\n    }\r\n  }\r\n\r\n  public onSelectItemPn(pn: BirePnDTO): void {\r\n    this.searchCriteria.pnCode = pn.pnCode;\r\n  }\r\n\r\n  public openItemPnDialog(): void {\r\n    this.itemPnDialogVisible = true;\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  private init(): void {\r\n    this.searchCriteria = {\r\n      date: new Date()\r\n    };\r\n\r\n    this.areas = [];\r\n    this.sites = [];\r\n    this.storageBins = [];\r\n    this.warehouses = [];\r\n    this.warehouseCategories = [];\r\n\r\n    this.selectedWarehouseCategory = undefined;\r\n\r\n    this.itemPnDialogVisible = false;\r\n\r\n    this.loadSites();\r\n    this.loadUserSiteId();\r\n    this.loadWarehouseCategories();\r\n  }\r\n\r\n  private loadAreas(warehouseId: number): void {\r\n    this.stockViewSearchService.findBidtWarehouseById(warehouseId).subscribe({\r\n      next: (warehouse) => {\r\n        this.areas = ListUtils.orEmpty(warehouse.bidtStorageBinDTOs)\r\n          .map((area) => {\r\n            return {\r\n              label: StringUtils.orEmpty(area.sbNumber) + (area.sbDescription ? ` - ${area.sbDescription}` : ''),\r\n              value: area.id as number\r\n            };\r\n          })\r\n          .sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadSites(): void {\r\n    this.stockViewSearchService.findAllBireSite().subscribe({\r\n      next: (sites) => {\r\n        this.sites = sites\r\n          .map((site) => {\r\n            return {\r\n              label: `${site.siteCode} - ${site.siteName}`,\r\n              value: site.siteId as number\r\n            };\r\n          })\r\n          .sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadUserSiteId(): void {\r\n    this.sessionService.getUserSiteId().subscribe({\r\n      next: (site) => {\r\n        if (site && site.siteId) {\r\n          this.searchCriteria.siteId = site.siteId;\r\n\r\n          this.loadUserWarehouseId(site.siteId);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadUserWarehouseId(siteId: number): void {\r\n    this.sessionService.getUserWarehouseId().subscribe({\r\n      next: (warehouse) => {\r\n        if (warehouse && warehouse.wareHouseId && warehouse.whCategory) {\r\n          this.searchCriteria.warehouseId = warehouse.wareHouseId;\r\n          this.selectedWarehouseCategory = warehouse.whCategory;\r\n\r\n          this.loadWareHouses(siteId, this.selectedWarehouseCategory);\r\n          this.loadAreas(this.searchCriteria.warehouseId);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadWarehouseCategories(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.WAREHOUSE_CATEGORY_MAP).subscribe({\r\n      next: (warehouseCategories) => {\r\n        this.warehouseCategories = warehouseCategories.sort((s1, s2) => s1.value.localeCompare(s2.value));\r\n\r\n        const warehouseCategory = this.warehouseCategories.length > 0 ? this.warehouseCategories[0].value : undefined;\r\n        this.selectedWarehouseCategory = warehouseCategory;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadWareHouses(site: number, warehouseCategory: string): void {\r\n    this.stockViewSearchService.getWarehousesBySiteId(site).subscribe({\r\n      next: (warehouses) => {\r\n        this.warehouses = warehouses\r\n          .filter((warehouse) => warehouse.whCategory === warehouseCategory)\r\n          .map((warehouse) => {\r\n            return {\r\n              label: `${warehouse.whCode} - ${warehouse.whName}`,\r\n              value: warehouse.wareHouseId as number\r\n            };\r\n          })\r\n          .sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n      }\r\n    });\r\n  }\r\n\r\n  private openStockView(stockView: StockViewSiteNodeDTO[]): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_STOCK_VIEW_FORM,\r\n      objectId: this.searchCriteria\r\n        ? this.serializationService.serialize({\r\n            data: stockView,\r\n            date: this.searchCriteria.date,\r\n            withAlternatives: !!this.searchCriteria.withAlternatives\r\n          })\r\n        : undefined,\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  private unselectArea(): void {\r\n    this.areas = [];\r\n    this.searchCriteria.areaId = undefined;\r\n  }\r\n\r\n  private unselectWarehouse(): void {\r\n    this.warehouses = [];\r\n    this.searchCriteria.warehouseId = undefined;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtSiteApi } from '../../../../shared/api/bidt-site.api';\r\nimport { BidtStockMvtApi } from '../../../../shared/api/bidt-stock-mvt.api';\r\nimport { BidtWarehouseApi } from '../../../../shared/api/bidt-warehouse.api';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { StockConsultElementInput } from '../../../../shared/types/api-input-types/bidt-stock-mvt/stock-consult-element-input-dto.interface';\r\nimport { BidtSiteDTO } from '../../../../shared/types/api-types/bidt-site-dto.interface';\r\nimport { BidtWarehouseDTO } from '../../../../shared/types/api-types/bidt-warehouse-dto.interface';\r\nimport { StockViewSiteNodeDTO } from '../../../../shared/types/api-types/stock-view-site-node-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class StockViewSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    private readonly bidtSiteApi: BidtSiteApi,\r\n    private readonly bidtStockMvtApi: BidtStockMvtApi,\r\n    private readonly bidtWarehouseApi: BidtWarehouseApi,\r\n    private readonly propertiesService: PropertiesService,\r\n    appConfigService: AppConfigService\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public loadStockView(input: StockConsultElementInput): Observable<StockViewSiteNodeDTO[]> {\r\n    return super.post<StockConsultElementInput, StockViewSiteNodeDTO[]>(this.bidtStockMvtApi.loadStockView, input);\r\n  }\r\n\r\n  public findBidtWarehouseById(id: number): Observable<BidtWarehouseDTO> {\r\n    return super.post<number, BidtWarehouseDTO>(this.bidtWarehouseApi.findBidtWarehouseById, id);\r\n  }\r\n\r\n  public findAllBireSite(): Observable<BidtSiteDTO[]> {\r\n    return super.post<void, BidtSiteDTO[]>(this.bidtSiteApi.findAll);\r\n  }\r\n\r\n  public getWarehousesBySiteId(siteId: number | undefined): Observable<BidtWarehouseDTO[]> {\r\n    return super.post<number | undefined, BidtWarehouseDTO[]>(this.bidtWarehouseApi.findBySiteId, siteId);\r\n  }\r\n\r\n  public getWarehouseCategoryMap(): Observable<LabelValue<string>[]> {\r\n    return this.propertiesService.getValue(GenericPropertyConstants.WAREHOUSE_CATEGORY_MAP);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { AutoCompleteModule } from 'primeng/primeng';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { DialogSearchMaterialModule } from '../../../shared/components/dialog-search-material/dialog-search-material.module';\r\nimport { DialogSearchPnModule } from '../../../shared/components/dialog-search-pn/dialog-search-pn.module';\r\nimport { ManageSearchCriteriaModule } from '../../../shared/components/manage-search-criteria/manage-search-criteria.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { FormService } from '../stock-movements/form/form.service';\r\n\r\nimport { DialogSelectLocationStockComponent } from './dialog-select-location-stock/dialog-select-location-stock.component';\r\nimport { StockViewFilterComponent } from './form/stock-view-filter/stock-view-filter.component';\r\nimport { StockViewFormComponent } from './form/stock-view-form.component';\r\nimport { StockViewFormService } from './form/stock-view-form.service';\r\nimport { StockViewSearchComponent } from './search/stock-view-search.component';\r\nimport { StockViewSearchService } from './search/stock-view-search.service';\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  TooltipModule,\r\n  CalendarModule,\r\n  DropdownModule,\r\n  TableModule,\r\n  ChartModule,\r\n  TreeTableModule,\r\n  SelectButtonModule,\r\n  CheckboxModule,\r\n  OverlayPanelModule,\r\n  AutoCompleteModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [DialogSearchMaterialModule, DialogSearchPnModule, ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [];\r\n\r\nconst DYNAMIC_COMPONENTS = [\r\n  StockViewFormComponent,\r\n  StockViewSearchComponent,\r\n  DialogSelectLocationStockComponent,\r\n  StockViewFilterComponent\r\n];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [StockViewFormService, StockViewSearchService, FormService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ManageSearchCriteriaModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class StockViewModule {}\r\n"],"sourceRoot":""}