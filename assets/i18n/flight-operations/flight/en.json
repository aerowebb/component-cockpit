{
  "CrewComponent": {
    "copilot": "Copilot",
    "crew": "Crew",
    "pilot": "Pilot"
  },
  "DialogAddDefectComponent": {
    "defectType": "Defect Type"
  },
  "DialogAddLoadComponent": {
    "category": "Category",
    "title": "Add Load",
    "uom": "Unit of Measure",
    "value": "Value"
  },
  "DialogAfterFlightQuantityComponent": {
    "afterFlightQuantityFromAicraft": "After Flight Quantity From A/C"
  },
  "DialogCrewMemberComponent": {
    "crewMember": "Crew Member",
    "title": "Add Crew Member"
  },
  "DialogEditLoadComponent": {
    "category": "Category",
    "title": "Edit Load",
    "uom": "Unit of Measure",
    "value": "Value"
  },
  "DialogEngineComponent": {
    "cycles": "Cycles",
    "hours": "Hours",
    "positiveValuesOnly": "Please enter positive values only",
    "title": "Edit Engine"
  },
  "DialogEngineDatesComponent": {
    "endDate": "End Date",
    "startDate": "Start Date",
    "title": "Edit Engines Dates"
  },
  "DialogEngineOilReplenishmentMeasureComponent": {
    "coldReplenishment": "Cold Replenishment",
    "date": "Date",
    "hotReplenishment": "hot Replenishment",
    "title": "New Measure",
    "volume": "Volume"
  },
  "DialogMeasureComponent": {
    "code": "Code",
    "title": "Add Measure",
    "value": "Value"
  },
  "DialogReplenishmentMeasureComponent": {
    "batchNumber": "Batch number",
    "context": "Context",
    "date": "Date",
    "deltaValue": "Delta Value",
    "density": "Density",
    "meteredSource": "Metered Source",
    "occurrence": "Occurrence",
    "origin": "Origin",
    "quantity": "Quantity",
    "title": "New Measure",
    "volume": "Volume",
    "warningOnMissingQuantity": "A quantity must be filled"
  },
  "DialogUpdateTaskApplicationComponent": {
    "errorOnDateBeforePreviousPostFlightTask": "Task Execution Date must be posterior to the one of previous flight post-flight tasks.",
    "errorOnDateInFuture": "Date is in the future.",
    "comment": "Comment",
    "date": "Date",
    "title": "Apply Task"
  },
  "EngineOilReplenishmentComponent": {
    "coldReplenishmentDate": "Date (cold)",
    "coldReplenishmentVolume": "Volume (cold)",
    "designation": "Id",
    "editReplenishmentMeasure": "Edit",
    "engineOilReplenishment": "Engine Oil Replenishment",
    "engineOil": "Engine Oil",
    "engineType": "Engine",
    "hotReplenishmentDate": "Date (hot)",
    "hotReplenishmentVolume": "Volume (hot)",
    "oilConsumption": "Oil Consumption",
    "resetDate": "Reset Date",
    "resetOilConsumption": "Reset Oil Consumption"
  },
  "EnginesComponent": {
    "cycles": "Cycles",
    "edit": "Edit",
    "editDates": "Edit Dates",
    "endDate": "Stop Date",
    "engine": "ID",
    "engines": "Engines",
    "hours": "Hours",
    "startDate": "Start Date"
  },
  "FlightFormComponent": {
    "aircraft": "Aircraft",
    "area": "Area",
    "arrivalLocation": "Arrival Location",
    "assetReview": "Asset Review",
    "chronoNumber": "Chrono Number",
    "comments": "Comments",
    "createMission": "Create Mission",
    "crew": "Crew",
    "customer": "Customer",
    "cyclesNumber": "Cycles Number",
    "datesAndDuration": "Dates And Duration",
    "departureLocation": "Departure Location",
    "details": "Details",
    "duration": "Duration",
    "endDateWithTimeZone": "End Date (Time Zone)",
    "endOfPeriodicity": "End of Periodicity",
    "engines": "Engines",
    "environment": "Environment",
    "errorOnInvalidFlightStatus": "This status can not be assigned to this flight !",
    "errorOnLoadMission": "Unable to load mission",
    "errorOnLoadMissionEquipment": "Unable to load mission equipment",
    "errorOnSaveFlight": "Unable to save flight",
    "flightLabel": "Flight Label",
    "flightMeasures": "Flight Measures",
    "flightNumber": "Flight Number",
    "flightType": "Flight Type",
    "fuel": "Fuel",
    "gonogoValidation": "Go - NoGo Validation",
    "historicPopup": {
      "action": "Action",
      "arrivalLocation": "Arrival Location",
      "commander": "Commander",
      "copilot": "Copilot",
      "crewExtra": "Crew Extra",
      "customerCode": "Customer",
      "cycleNumber": "Cycles Number",
      "dayMission": "Day Mission",
      "departureLocation": "Departure Location",
      "deplannedPassengerNumber": "Deplanned Passengers",
      "endDate": "End Date",
      "engine1AssetCode": "Engine 1 Asset Code",
      "engine2AssetCode": "Engine 2 Asset Code",
      "engine3AssetCode": "Engine 3 Asset Code",
      "engine4AssetCode": "Engine 4 Asset Code",
      "engine1CycleNumber": "Engine 1 Cycles Number",
      "engine2CycleNumber": "Engine 2 Cycles Number",
      "engine3CycleNumber": "Engine 3 Cycles Number",
      "engine4CycleNumber": "Engine 4 Cycles Number",
      "engineStartDate": "Engine Start Date",
      "engineStopDate": "Engine Stop Date",
      "equipmentCode": "Equipment Code",
      "flightDetails": "Details",
      "flightLabel": "Flight Label",
      "flightType": "Flight Type",
      "fuelUsed": "Used fuel (Liter)",
      "ifrDuration": "IFR Duration",
      "missionArea": "Area",
      "missionCode": "Mission",
      "missionComment": "Comments",
      "missionDuration": "Mission Duration",
      "missionInstanceCode": "Mission Instance Code",
      "nightMission": "Night Mission",
      "occurrence": "Occurrence",
      "passengerNumber": "Passengers",
      "plannedPassengerNumber": "Planned Passengers",
      "requestedOpeConfigCode": "Operational Configuration",
      "requestedOpeConfigDetails": "Operational Configuration Details",
      "requestedOpeConfigModifs": "Operational Configuration Modifications",
      "shipmentNumber": "Shipment",
      "startDate": "Start Date",
      "status": "Status",
      "statusDate": "Time",
      "statusState": "State",
      "statusUser": "Author",
      "timestamp": "Time",
      "updates": "Updates",
      "userFlightNumber": "User flight number"
    },
    "gonogoHover": "Please fill the comment in Go - NoGo Validation tab",
    "hums": "HUMS",
    "ifrDuration": "IFR Duration",
    "lineMaintenance": "Line Maintenance",
    "manualFlightEntries": "Manual Flight Entries?",
    "mission": "Mission",
    "nightMission": "Night Mission",
    "occurrence": "Occurrence",
    "operationalConfiguration": "Operational Configuration",
    "otherMeasures": "Other Measures",
    "passengersLoads": "Passengers/Loads",
    "periodicity": "Periodicity",
    "postFlightRecords": "Post Flight Records",
    "replenishmentsValidation": "Replenishments Validation",
    "schedule": "Schedule",
    "sourceSystemId": "Source System Id",
    "sourceSystemReference": "Source System Reference",
    "startDateWithTimeZone": "Start Date (Time Zone)",
    "status": "Status",
    "successOnSaveFlight": "Flight successfully saved",
    "timezone": "Time Zone",
    "validateMeasures": "Validate Measures",
    "warningOnMissingEngineCycle": "Please fill all engines cycles",
    "warningOnMissingMissionDurationAndCycle": "Please fill mission duration and cycles number",
    "warningOnMissingRequiredFields": "Please fill all required fields"
  },
  "FlightMeasuresComponent": {
    "author": "Author",
    "code": "Code",
    "coefficient": "Coefficient",
    "comment": "Comment",
    "delta": "delta",
    "designation": "Designation",
    "fileNamePrefix": "measure_list",
    "flightMeasures": "Flight Measures",
    "formattedValue": "Value",
    "item": "Item",
    "pn": "P/N",
    "readingDate": "Reading Date",
    "sn": "S/N",
    "source": "Source",
    "state": "State",
    "status": "Status",
    "time": "Time",
    "unit": "Unit",
    "value": "Value"
  },
  "FlightMeasuresComponentExport": {
    "code": "Code",
    "delta": "delta",
    "designation": "Designation",
    "item": "Item",
    "pn": "P/N",
    "readingDate": "Reading Date",
    "sn": "S/N",
    "source": "Source",
    "status": "Status",
    "statusDate": "Status Date",
    "statusState": "Status State",
    "statusUser": "Status User",
    "unit": "Unit",
    "value": "Value"
  },
  "FlightStatusComponent": {
    "arrivedRow1": "Aircraft has reached destination.",
    "arrivedRow2": "This status has an informative value only. Fill Dates and Duration, and Engine information to move on to Completed status.",
    "canceledRow1": "Flight is Canceled.",
    "changeToArrivedStatus": "Update to Arrived",
    "changeToCanceledStatus": "Cancel Flight",
    "changeToCompletedStatus": "Update to Completed",
    "changeToDelayedStatus": "Update to Delayed",
    "changeToScheduledStatus": "Update to Scheduled",
    "changeToValidatedStatus": "Update to Validated",
    "changeToGoValidatedStatus": "Update to Go Validated",
    "completedRow1": "Flight is completed.",
    "completedRow2": "You can fill Post-Flight information, Flight validation is automatic after counters update.",
    "delayedRow1": "Flight has been delayed.",
    "delayedRow2": "You can update \"Dates and Duration\" information and resume to initial process.",
    "draftRow1": "Flight is being created.",
    "draftRow2": "Update to Scheduled status will be possible as the flight is saved.",
    "draftRow3": "You must fill \"Dates and Duration\" information in order to save.",
    "goToLineMaintenance": "Go to Line Maintenance",
    "goValidatedRow1": "Flight can be performed.",
    "goValidatedRow2": "Once the aircraft has reached destination, you can update flight's status to Arrived, or directly switch to Completed status (if you already filled Dates & Duration, and Engine information) and provide Post-Flight information.",
    "goValidatedRow3": "You can also declare this flight Delayed, or go back to previous status.",
    "returnToArrivedStatus": "Return to Arrived",
    "returnToCompletedStatus": "Return to Completed",
    "returnToDelayedStatus": "Return to Delayed",
    "returnToDraftStatus": "Return to Draft",
    "returnToGoValidate": "Return to Go Validated",
    "returnToScheduledStatus": "Return to Scheduled",
    "returnToValidatedStatus": "Return to Validated",
    "scheduledRow1": "Flight is taken into account in Flight Operations.",
    "scheduledRow2": "Once an aircraft is selected for this flight, you can validate the Go - NoGo via the dedicated tab to move on to next step.",
    "scheduledRow3": "You can also declare this flight Delayed, Canceled, or go back to previous status.",
    "validatedRow1": "Flight is validated.",
    "validatedRow2": "Flight's measure are taken into account. Aicraft and its sub-assemblies' counters have been updated.",
    "validatedRow3": "This status cannot be changed.",
    "warningOnCanceledUpdate": "Do you really want to cancel this flight ?"
  },
  "FuelComponent": {
    "fuel": "Fuel",
    "fuelLoadDesired": "Load Desired",
    "fuelLoadDesiredTotal": "Load Desired Total",
    "fuelLoadFactual": "Load Factual",
    "fuelUsed": "Used Fuel",
    "defaultVolumeUnit": "Liter"
  },
  "GonogoValidationFormComponent": {
    "acrsEvent": "ACRS Event",
    "acrsAvailability": "ACRS Availability",
    "acrsDate": "ACRS Date",
    "aircraft": "Aircraft",
    "aircraftRegistration": "Registration",
    "aircraftStatus": "Status",
    "assetReview": "Asset Review",
    "comment": "Comment",
    "commentGoNoGo": "GoNoGo Comment",
    "context": "Context",
    "control": "Control",
    "critical": "Critical",
    "currentValue": "Current Value",
    "date": "Date",
    "defectsToProcess": "Defects To Process",
    "description": "Description",
    "errorOnNoAcrsEvent": "No ACRS Event for this Flight",
    "eventCode": "Event Code",
    "expectedValue": "Expected Value",
    "flight": "Flight",
    "flightCustomer": "Customer",
    "flightDate": "Date",
    "flightDuration": "Duration",
    "flightRestriction": "Flight Restriction",
    "flightStatus": "Status",
    "flightType": "Type",
    "gonogoValidation": "GoNoGo",
    "id": "Id",
    "lastAuthor": "Last Author",
    "linkedEvent": "Linked Event",
    "location": "Location",
    "logNumber": "Log Number",
    "missionAbility": "Mission Ability",
    "missionAvailability": "Mission Availability",
    "name": "Name",
    "reportElementNok": "NOK",
    "reportElementOk": "OK",
    "reportElementWarning": "WARNING",
    "rootCause": "Root Cause",
    "status": "Status",
    "title": "Title",
    "validateGonogo": "Validate GoNoGo",
    "warningOnCountersUpdate": "Do you really want to validate the GoNoGo?"
  },
  "GonogoValidationStatusComponent": {
    "backToGoValidatedStatus": "Back to Go Validated Status",
    "confirmBackToGoValidatedStatus": "Do you really want to go back to status Go Validated?",
    "date": "Date",
    "gonogo": "GoNoGo",
    "gonogoValidation": "GoNoGo",
    "status": "Status",
    "user": "User",
    "validationNok": "NOK",
    "validationOk": "OK"
  },
  "HumsComponent": {
    "hums": "HUMS",
    "message": "Message",
    "sendFsc": "Send FSC",
    "status": "Status",
    "statusFscDone": "FSC Message Done",
    "statusFscInError": "FSC Message in Error",
    "statusFscNotSent": "FSC Message not Sent",
    "statusFscSent": "FSC Message Sent",
    "statusFscValidated": "FSC Message Validated",
    "statusPotentialInError": "Potential Message in Error",
    "statusPotentialReceived": "Potential Message Received",
    "statusUndoInProcess": "UNDO Message in Process",
    "statusUndoSent": "UNDO Message Sent",
    "validationNok": "NOK",
    "validationOk": "OK",
    "warningOnCountersUpdate": "Counters updates might not be correct if there have been modifications to the Aircraft configuration since FSC initial sending"
  },
  "OtherMeasuresComponent": {
    "code": "Code",
    "description": "Description",
    "otherMeasures": "Other Measures",
    "uom": "Unit of Measure",
    "value": "Value"
  },
  "PassengersLoadsComponent": {
    "category": "Category",
    "passengers": "Passengers",
    "passengersDeplanned": "Passengers Deplanned",
    "passengersLoads": "Passengers/Loads",
    "passengersPlanned": "Passengers Planned",
    "shipment": "Shipment",
    "uom": "Unit of Measure",
    "value": "Value"
  },
  "PostFlightRecordsComponent": {
    "addDefect": "Add Defect",
    "applyTask": "Apply Task",
    "comment": "Comment",
    "context": "Context",
    "date": "Date",
    "defects": "Defects",
    "designation": "Designation",
    "description": "Description",
    "dmc": "DMC",
    "eventCode": "Event Code",
    "flightRestriction": "Flight Restriction",
    "isCritical": "Critical",
    "isDone": "Done for this flight?",
    "lastAuthor": "Last Auhtor",
    "linkedEventCode": "Linked Event Code",
    "location": "Location",
    "logNumber": "Log Number",
    "name": "Name",
    "operation": "Operation",
    "postFlightRecords": "Post Flight Records",
    "postFlightVisits": "Post-Flight Visits",
    "remove": "Remove",
    "roleEquipment": "Role Equipment",
    "roleEquipments": "Role Equipments",
    "rootCause": "Root Cause",
    "title": "Title"
  },
  "ReplenishmentsComponent": {
    "addMeasure": "Add",
    "afterFlight": "After Flight",
    "afterFlightQuantityFromAicraft": "After Flight Quantity From A/C",
    "confirmInvalidation": "Do you really want to cancel flight replenishments? Future modifications to replenishments on the current flight will not be taken into account on already initialized flights with the same aircraft.",
    "confirmValidation": "Do you really want to validate flight replenishments? This will initialize the initial status of posterior flights on which the same aircraft is assigned.",
    "beforeFlight": "Before Flight",
    "date": "Date",
    "density": "Density",
    "endStatus": "End Status",
    "errorOnInvalidation": "An error occured while trying to invalidate replenishments",
    "errorOnValidation": "An error occured while trying to validate replenishments",
    "initialStatus": "Initial Status",
    "measures": "Measures",
    "measureSource": "Measure",
    "measuresByStep": "Measures By Step",
    "occurrence": "Occurrence",
    "origin": "Origin",
    "quantity": "Quantity",
    "removeSelectedMeasures": "Remove",
    "replenishments": "Replenishments",
    "replenishmentType": "Replenishment Type",
    "rmBatchNumber": "Batch number",
    "successOnInvalidation": "Replenishments validation cancelled",
    "successOnUpdateAfterFlightQuantityFromAircraft": "Replenishments successfully updated",
    "successOnValidation": "Replenishments validated",
    "volume": "Volume"
  },
  "ReplenishmentsValidationComponent": {
    "confirmInvalidation": "Do you really want to cancel flight replenishments? Future modifications to replenishments on the current flight will not be taken into account on already initialized flights with the same aircraft.",
    "confirmValidation": "Do you really want to validate flight replenishments? This will initialize the initial status of posterior flights on which the same aircraft is assigned.",
    "date": "Date",
    "replenishmentsValidation": "Replenishments Validation",
    "status": "Status",
    "successOnInvalidation": "Replenishments validation cancelled",
    "successOnValidation": "Replenishments validated",
    "user": "User",
    "validationNok": "NOK",
    "validationOk": "OK"
  },
  "SearchComponent": {
    "aircraftRegistration": "A/C Registration",
    "arrival": "Arrival",
    "asset": "Asset",
    "chronoNumber": "Chrono Number",
    "confirmDeleteSelectedMissionEquipment": "Do you want to delete selected flight?",
    "confirmDeleteSelectedMissionEquipments": "Do you want to delete selected flights?",
    "copilot": "Copilot",
    "customer": "Customer",
    "cycleNumber": "Cycles Number",
    "departure": "Departure",
    "duration": "Duration (hours)",
    "endDate": "End Date",
    "engineStartDate": "Engine Start Date",
    "engineStopDate": "Engine Stop Date",
    "exportFlightLogbook": "Flight Logbook Export",
    "flightDateFrom": "Flight Date From",
    "flightDateTo": "To",
    "flightStatus": "Flight Status",
    "flightType": "Flight Type",
    "fuelUsed": "Used fuel (Liter)",
    "ifrDuration": "IFR Duration (Hours)",
    "missionArrivalLocation": "Arrival",
    "missionCode": "Mission Code",
    "missionDepartureLocation": "Departure",
    "missionNumber": "Number",
    "msn": "MSN",
    "onlyNonAffectedFlights": "Only Non Affected Flights",
    "operationalConfiguration": "Operational Configuration",
    "pendingForValidation": "Pending For Validation",
    "pilot": "Pilot",
    "reset": "Reset",
    "resetOilState": "Reset Oil Cons. ?",
    "resetOilEngine": "Reset Oil Cons. Engine",
    "sourceSystemId": "Source System Id",
    "sourceSystemReference": "Source System Reference",
    "startDate": "Start Date",
    "statusState": "Flight Status",
    "successOnDeleteMissionEquipment": "Flight removed"
  }
}
