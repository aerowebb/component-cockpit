{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/primeng/dialog.js","webpack:///./node_modules/primeng/radiobutton.js","webpack:///./src/app/main/human-resources/employee-form/employee-form.component.html","webpack:///./src/app/main/human-resources/employee-form/employee-form.component.scss","webpack:///./src/app/main/human-resources/employee-form/employee-form.component.ts","webpack:///./src/app/main/human-resources/employee-form/popups/absence-popup-form/absence-popup-form.component.html","webpack:///./src/app/main/human-resources/employee-form/popups/absence-popup-form/absence-popup-form.component.ts","webpack:///./src/app/main/human-resources/employee-form/popups/evaluation-popup-form/evaluation-popup-form.component.html","webpack:///./src/app/main/human-resources/employee-form/popups/evaluation-popup-form/evaluation-popup-form.component.ts","webpack:///./src/app/main/human-resources/employee-form/popups/expense-popup-form/expense-popup-form.component.html","webpack:///./src/app/main/human-resources/employee-form/popups/expense-popup-form/expense-popup-form.component.ts","webpack:///./src/app/main/human-resources/employee-form/popups/holidays-popup-form/holidays-popup-form.component.html","webpack:///./src/app/main/human-resources/employee-form/popups/holidays-popup-form/holidays-popup-form.component.ts","webpack:///./src/app/main/human-resources/employee-form/popups/hourly-costs-popup-form/hourly-costs-popup-form.component.html","webpack:///./src/app/main/human-resources/employee-form/popups/hourly-costs-popup-form/hourly-costs-popup-form.component.ts","webpack:///./src/app/main/human-resources/employee-form/popups/medical-examination-popup-form/medical-examination-popup-form.component.html","webpack:///./src/app/main/human-resources/employee-form/popups/medical-examination-popup-form/medical-examination-popup-form.component.ts","webpack:///./src/app/main/human-resources/employee-form/popups/qualification-popup-form/qualification-popup-form.component.html","webpack:///./src/app/main/human-resources/employee-form/popups/qualification-popup-form/qualification-popup-form.component.ts","webpack:///./src/app/main/human-resources/employee-form/popups/qualification-popup-form/qualification-popup-form.service.ts","webpack:///./src/app/main/human-resources/employee-form/popups/training-popup-form/training-popup-form.component.html","webpack:///./src/app/main/human-resources/employee-form/popups/training-popup-form/training-popup-form.component.ts","webpack:///./src/app/main/human-resources/employee-form/work-flight-table-filters/work-flight-table-filters.component.html","webpack:///./src/app/main/human-resources/employee-form/work-flight-table-filters/work-flight-table-filters.component.scss","webpack:///./src/app/main/human-resources/employee-form/work-flight-table-filters/work-flight-table-filters.component.ts","webpack:///./src/app/main/human-resources/employee-search/employee-search.component.html","webpack:///./src/app/main/human-resources/employee-search/employee-search.component.scss","webpack:///./src/app/main/human-resources/employee-search/employee-search.component.ts","webpack:///./src/app/main/human-resources/employee-search/employee-search.service.ts","webpack:///./src/app/main/human-resources/human-resources.module.ts","webpack:///./src/app/shared/constants/bido-notification-type-constants.ts","webpack:///./src/app/shared/utils/bido-equipment-utils.ts","webpack:///./src/app/shared/utils/bido-family-variant-utils.ts","webpack:///./src/app/shared/utils/file-utils.ts"],"names":[],"mappings":"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","file":"human-resources-human-resources-module.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dialog/dialog\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/radiobutton/radiobutton\"));","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\" class=\\\"page-subtitle\\\">\\r\\n          - {{ employeeName }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"editEmployee()\\\">\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancelEmployee()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveEmployee()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-menu-item (click)=\\\"editEmployeeCard()\\\">\\r\\n        <span>{{ componentData.componentId + \\\".editCard\\\" | translate }}</span>\\r\\n      </button>\\r\\n\\r\\n      <button *ngIf=\\\"isReadOpenMode && !isCreateOpenMode\\\" type=\\\"button\\\" mat-menu-item (click)=\\\"reloadEmployee()\\\">\\r\\n        {{ \\\"global.refresh\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <!-- Home -->\\r\\n        <mat-tab id=\\\"homeTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ \\\"page.mainData\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".employeeFirstName\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"employeeFormData.employeeFirstName\\\"\\r\\n                            maxlength=\\\"30\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".employeeLastName\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"employeeFormData.employeeLastName\\\"\\r\\n                            maxlength=\\\"30\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".employeeNumber\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"employeeFormData.employeeNumber\\\"\\r\\n                            maxlength=\\\"20\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".employeeBirthday\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-calendar\\r\\n                            showButtonBar=\\\"true\\\"\\r\\n                            [monthNavigator]=\\\"true\\\"\\r\\n                            [yearNavigator]=\\\"true\\\"\\r\\n                            [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                            class=\\\"aw-calendar\\\"\\r\\n                            [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                            [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                            [(ngModel)]=\\\"employeeFormData.employeeBirthday\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-calendar>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\">{{\\r\\n                          componentData.componentId + \\\".bidtCompanyName\\\" | translate\\r\\n                        }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"companies\\\"\\r\\n                            [(ngModel)]=\\\"selectedCompany\\\"\\r\\n                            (onChange)=\\\"loadSites()\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".bidtSiteName\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"sites\\\"\\r\\n                            (onChange)=\\\"loadWarehousesBysite()\\\"\\r\\n                            [(ngModel)]=\\\"employeeFormData.bidtSiteId\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">\\r\\n                          {{ componentData.componentId + \\\".warehouseOrWorkshop\\\" | translate }}\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-dropdown\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [options]=\\\"warehouses\\\"\\r\\n                            [(ngModel)]=\\\"employeeFormData.bidtWarehouseId\\\"\\r\\n                            [showClear]=\\\"true\\\"\\r\\n                            placeholder=\\\"&nbsp;\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                          ></p-dropdown>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".location\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            [(ngModel)]=\\\"employeeFormData.employeeComment\\\"\\r\\n                            maxlength=\\\"300\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--equally\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".contactInfo\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".employeeAdress\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"employeeFormData.employeeAdress\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"300\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".employeeZipCode\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"employeeFormData.employeeZipCode\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"20\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".employeeCity\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"employeeFormData.employeeCity\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"100\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".employeeCountry\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"countries\\\"\\r\\n                              [(ngModel)]=\\\"employeeFormData.employeeCountry\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".employeeWorkPhone\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"employeeFormData.employeeWorkPhone\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"20\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".employeePersonnalPhone\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"employeeFormData.employeePersonnalPhone\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"20\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".employeeMail\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"employeeFormData.employeeMail\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"150\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--grow3 grid-cell--no-padding\\\">\\r\\n              <div class=\\\"grid-row\\\">\\r\\n                <div class=\\\"grid-cell--equally\\\">\\r\\n                  <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                    <div class=\\\"grid-cell-header\\\">\\r\\n                      <div class=\\\"grid-cell-title-container\\\">\\r\\n                        <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".contract\\\" | translate }}</h3>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                      <div class=\\\"section\\\">\\r\\n                        <div class=\\\"section-content\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".startDate\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-calendar\\r\\n                                  showButtonBar=\\\"true\\\"\\r\\n                                  [monthNavigator]=\\\"true\\\"\\r\\n                                  [yearNavigator]=\\\"true\\\"\\r\\n                                  [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                                  class=\\\"aw-calendar\\\"\\r\\n                                  [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                                  [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                                  [(ngModel)]=\\\"selectedContractEmployeeStartDate\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                ></p-calendar>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".contractName\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-dropdown\\r\\n                                  class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                  [options]=\\\"contractNames\\\"\\r\\n                                  [(ngModel)]=\\\"selectedContractName\\\"\\r\\n                                  (onChange)=\\\"loadContractTypesOnChange()\\\"\\r\\n                                  [showClear]=\\\"true\\\"\\r\\n                                  placeholder=\\\"&nbsp;\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                ></p-dropdown>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".contractType\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input\\\"\\r\\n                                  [(ngModel)]=\\\"selectedContractTypeName\\\"\\r\\n                                  [disabled]=\\\"true\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".endDate\\\" | translate }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-calendar\\r\\n                                  showButtonBar=\\\"true\\\"\\r\\n                                  [monthNavigator]=\\\"true\\\"\\r\\n                                  [yearNavigator]=\\\"true\\\"\\r\\n                                  [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                                  class=\\\"aw-calendar\\\"\\r\\n                                  [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                                  [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                                  [(ngModel)]=\\\"selectedContractEmployeeEndDate\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                ></p-calendar>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-row\\\">\\r\\n                <div class=\\\"grid-cell--equally\\\">\\r\\n                  <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                    <div class=\\\"grid-cell-header\\\">\\r\\n                      <div class=\\\"grid-cell-title-container\\\">\\r\\n                        <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".salary\\\" | translate }}</h3>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                      <div class=\\\"section\\\">\\r\\n                        <div class=\\\"section-content\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".grossSalary\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input\\r\\n                                  #salaryValue=\\\"ngModel\\\"\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input\\\"\\r\\n                                  [(ngModel)]=\\\"salaryFormData.salaryValue\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                  [pKeyFilter]=\\\"inputValidationService.validatorOfPositiveNumber()\\\"\\r\\n                                  [pValidateOnly]=\\\"true\\\"\\r\\n                                />\\r\\n                                <p-message\\r\\n                                  *ngIf=\\\"salaryValue.invalid && (salaryValue.dirty || salaryValue.touched)\\\"\\r\\n                                  severity=\\\"error\\\"\\r\\n                                  [text]=\\\"inputValidationService.formatOfPositiveNumber()\\\"\\r\\n                                ></p-message>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                              <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".period\\\" | translate }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <p-dropdown\\r\\n                                  class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                  [options]=\\\"periods\\\"\\r\\n                                  [(ngModel)]=\\\"salaryFormData.salaryPayPeriod\\\"\\r\\n                                  [showClear]=\\\"true\\\"\\r\\n                                  placeholder=\\\"&nbsp;\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                ></p-dropdown>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".internalCost\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input\\r\\n                                  #salaryInternalCost=\\\"ngModel\\\"\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input\\\"\\r\\n                                  [(ngModel)]=\\\"salaryFormData.salaryInternalCost\\\"\\r\\n                                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                                  [pKeyFilter]=\\\"inputValidationService.validatorOfPositiveNumber()\\\"\\r\\n                                  [pValidateOnly]=\\\"true\\\"\\r\\n                                />\\r\\n                                <p-message\\r\\n                                  *ngIf=\\\"\\r\\n                                    salaryInternalCost.invalid &&\\r\\n                                    (salaryInternalCost.dirty || salaryInternalCost.touched)\\r\\n                                  \\\"\\r\\n                                  severity=\\\"error\\\"\\r\\n                                  [text]=\\\"inputValidationService.formatOfPositiveNumber()\\\"\\r\\n                                ></p-message>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".currency\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div class=\\\"form-control\\\">\\r\\n                                <input\\r\\n                                  type=\\\"text\\\"\\r\\n                                  class=\\\"aw-input\\\"\\r\\n                                  [(ngModel)]=\\\"selectedSalaryCurrency\\\"\\r\\n                                  [disabled]=\\\"true\\\"\\r\\n                                />\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-row\\\">\\r\\n                <div class=\\\"grid-cell--equally\\\">\\r\\n                  <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                    <div class=\\\"grid-cell-header\\\">\\r\\n                      <div class=\\\"grid-cell-title-container\\\">\\r\\n                        <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".management\\\" | translate }}</h3>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                      <div class=\\\"section\\\">\\r\\n                        <div class=\\\"section-content\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"form-group flex--2\\\">\\r\\n                              <label class=\\\"form-label\\\">{{\\r\\n                                componentData.componentId + \\\".superior\\\" | translate\\r\\n                              }}</label>\\r\\n\\r\\n                              <div\\r\\n                                class=\\\"form-control form-control-with-modal\\\"\\r\\n                                [ngClass]=\\\"{ disabled: isReadOpenMode }\\\"\\r\\n                              >\\r\\n                                <div class=\\\"form-control-data\\\" (click)=\\\"openSuperiorPopup()\\\">\\r\\n                                  {{ superiorFormData.employeeLastName }} {{ superiorFormData.employeeFirstName }}\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"superiorFormData.employeeNumber\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                                  <i\\r\\n                                    class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                                    aria-hidden=\\\"true\\\"\\r\\n                                    (click)=\\\"refreshSuperior()\\\"\\r\\n                                  ></i>\\r\\n                                </div>\\r\\n                                <div class=\\\"btn-search-wrapper\\\">\\r\\n                                  <i\\r\\n                                    class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                                    aria-hidden=\\\"true\\\"\\r\\n                                    (click)=\\\"openSuperiorPopup()\\\"\\r\\n                                  ></i>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group flex--2\\\"></div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab id=\\\"qualificationsTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".qualifications\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".qualifications\\\" | translate }} ({{\\r\\n                        bidtQualifEmployeeDisplayed ? bidtQualifEmployeeDisplayed.length : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableQualification\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"qualificationsTableCols\\\"\\r\\n                    [value]=\\\"bidtQualifEmployeeDisplayed\\\"\\r\\n                    [(selection)]=\\\"selectedQualifications\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoadingQualificationTable\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoadingQualificationTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedQualifications.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableQualificationGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableQualification.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedQualifications.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteQualification()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedQualifications.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editQualification()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"selectedQualifications.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openQualification()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedQualifications.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"createQualification()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngSwitch]=\\\"col.field\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                        >\\r\\n                          <span *ngSwitchCase=\\\"'qualifOngoing'\\\">\\r\\n                            <span *ngIf=\\\"rowData[col.field] !== null && rowData[col.field]\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-check\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </span>\\r\\n                          </span>\\r\\n                          <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".qualificationRenewal\\\" | translate }} ({{\\r\\n                        qualificationRenewalTableDataSource ? qualificationRenewalTableDataSource.dataCount : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".startDate\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [(ngModel)]=\\\"qualificationRenewalStartDateFilter\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".endDate\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [(ngModel)]=\\\"qualificationRenewalEndDateFilter\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <button\\r\\n                      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"filterQualificationRenewalDates()\\\"\\r\\n                    >\\r\\n                      {{ componentData.componentId + \\\".filter\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n\\r\\n                  <a-table [dataSource]=\\\"qualificationRenewalTableDataSource\\\"> </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".training\\\" | translate }} ({{\\r\\n                        bidtTrainingDisplayed ? bidtTrainingDisplayed.length : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableTraining\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"trainingsTableCols\\\"\\r\\n                    [value]=\\\"bidtTrainingDisplayed\\\"\\r\\n                    [(selection)]=\\\"selectedTrainings\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoadingTrainingTable\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoadingTrainingTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedTrainings.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableTrainingGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableTraining.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedTrainings.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteTraining()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedTrainings.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editTraining()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"selectedTrainings.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openTraining()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedTrainings.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"createTraining()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngSwitch]=\\\"col.field\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                        >\\r\\n                          <span *ngSwitchCase=\\\"'trainingPerformed'\\\">\\r\\n                            <i *ngIf=\\\"rowData[col.field]\\\" class=\\\"fa fa-fw fa-check\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </span>\\r\\n                          <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab id=\\\"licenseTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".license\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".license\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".licenseNumber\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"licenseFormData.licenseNumber\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"50\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".licenseIssuingCountry\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"licenseFormData.licenseIssuingCountry\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              maxlength=\\\"50\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".licenseIssueDate\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-calendar\\r\\n                              showButtonBar=\\\"true\\\"\\r\\n                              [monthNavigator]=\\\"true\\\"\\r\\n                              [yearNavigator]=\\\"true\\\"\\r\\n                              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                              class=\\\"aw-calendar\\\"\\r\\n                              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                              [(ngModel)]=\\\"selectedLicenseIssueDate\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-calendar>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".licenseValidatingDate\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-calendar\\r\\n                              showButtonBar=\\\"true\\\"\\r\\n                              [monthNavigator]=\\\"true\\\"\\r\\n                              [yearNavigator]=\\\"true\\\"\\r\\n                              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                              class=\\\"aw-calendar\\\"\\r\\n                              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                              [(ngModel)]=\\\"selectedLicenseValidatingDate\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-calendar>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".categories\\\" | translate }} ({{\\r\\n                        categoryLevelTableData ? categoryLevelTableData.length : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <p-table\\r\\n                        [resizableColumns]=\\\"true\\\"\\r\\n                        #ptableCategories\\r\\n                        class=\\\"aw-table2\\\"\\r\\n                        [columns]=\\\"licensesTableCols\\\"\\r\\n                        [value]=\\\"categoryLevelTableData\\\"\\r\\n                      >\\r\\n                        <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                          <span *ngIf=\\\"!isLoadingCategoryTable\\\"> &nbsp;</span>\\r\\n\\r\\n                          <div *ngIf=\\\"isLoadingCategoryTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                            <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                            <div class=\\\"lds-hourglass\\\"></div>\\r\\n                          </div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <ng-template pTemplate=\\\"caption\\\">\\r\\n                          <div class=\\\"aw-table-header\\\"></div>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                          <colgroup>\\r\\n                            <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                          </colgroup>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                          <tr>\\r\\n                            <th>{{ componentData.componentId + \\\".categoryLevelHeader\\\" | translate }}</th>\\r\\n\\r\\n                            <th\\r\\n                              pResizableColumn\\r\\n                              *ngFor=\\\"let col of columns\\\"\\r\\n                              [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                            >\\r\\n                              {{ showHeaderText(col.field) | translate }}\\r\\n                            </th>\\r\\n                          </tr>\\r\\n                        </ng-template>\\r\\n\\r\\n                        <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                          <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                            <td>{{ showCategory(rowIndex) }}</td>\\r\\n\\r\\n                            <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                              <p-checkbox\\r\\n                                class=\\\"aw-table-checkbox\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [(ngModel)]=\\\"rowData[col.field]\\\"\\r\\n                                [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </td>\\r\\n                          </tr>\\r\\n                        </ng-template>\\r\\n                      </p-table>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab id=\\\"worksTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".works\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\" [style.display]=\\\"!showFlightTab ? 'none' : ''\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".flights\\\" | translate }} ({{\\r\\n                        flightsDisplayed ? flightsDisplayed.length : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableFlights\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"flightsTableCols\\\"\\r\\n                    [value]=\\\"flightsDisplayed\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoadingFlightsTable\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoadingFlightsTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableFlightsGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableFlights.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <div class=\\\"aw-table-icon-actions\\\" *ngIf=\\\"!isLoadingFlightsTable\\\">\\r\\n                            <i\\r\\n                              class=\\\"fa fa-fw fa-filter aw-icon aw-icon-with-border aw-icon-with-overlay\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              pTooltip=\\\"{{\\r\\n                                'global' + (flightFiltersVisible ? '.hideFilters' : '.showFilters') | translate\\r\\n                              }}\\\"\\r\\n                              tooltipPosition=\\\"top\\\"\\r\\n                              [ngClass]=\\\"{ active: flightFiltersVisible }\\\"\\r\\n                              (click)=\\\"flightFilters.toggle($event)\\\"\\r\\n                            ></i>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment, width: col.width }\\\"\\r\\n                        />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th\\r\\n                          pResizableColumn\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment, width: col.width }\\\"\\r\\n                        >\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment, width: col.width }\\\">\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ componentData.componentId + \\\".workTemplate\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".ltName\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"workTemplateNames\\\"\\r\\n                              [(ngModel)]=\\\"selectedWorkTemplateName\\\"\\r\\n                              (onChange)=\\\"setWorkTemplatedata()\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".ltDayPerWeek\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"laborTemplateFormData.ltDayPerWeek\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".ltHourPerWeek\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"laborTemplateFormData.ltHourPerWeek\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <h4 class=\\\"section-title\\\">{{ \\\"global.workingDay\\\" | translate }}</h4>\\r\\n\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ \\\"global.hours\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"laborTemplateFormData.ltNbHourWd\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".ltIsMonday\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-checkbox\\r\\n                              class=\\\"aw-checkbox\\\"\\r\\n                              binary=\\\"true\\\"\\r\\n                              [(ngModel)]=\\\"laborTemplateFormData.ltIsMonday\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                            ></p-checkbox>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".ltIsTuesday\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-checkbox\\r\\n                              class=\\\"aw-checkbox\\\"\\r\\n                              binary=\\\"true\\\"\\r\\n                              [(ngModel)]=\\\"laborTemplateFormData.ltIsTuesday\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                            ></p-checkbox>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".ltIsWednesday\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-checkbox\\r\\n                              class=\\\"aw-checkbox\\\"\\r\\n                              binary=\\\"true\\\"\\r\\n                              [(ngModel)]=\\\"laborTemplateFormData.ltIsWednesday\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                            ></p-checkbox>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{\\r\\n                            componentData.componentId + \\\".ltIsThursday\\\" | translate\\r\\n                          }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-checkbox\\r\\n                              class=\\\"aw-checkbox\\\"\\r\\n                              binary=\\\"true\\\"\\r\\n                              [(ngModel)]=\\\"laborTemplateFormData.ltIsThursday\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                            ></p-checkbox>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".ltIsFriday\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-checkbox\\r\\n                              class=\\\"aw-checkbox\\\"\\r\\n                              binary=\\\"true\\\"\\r\\n                              [(ngModel)]=\\\"laborTemplateFormData.ltIsFriday\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                            ></p-checkbox>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <h4 class=\\\"section-title\\\">{{ \\\"global.weekEnd\\\" | translate }}</h4>\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ \\\"global.hours\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            [(ngModel)]=\\\"laborTemplateFormData.ltNbHourWe\\\"\\r\\n                            [disabled]=\\\"true\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".ltIsSaturday\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-checkbox\\r\\n                            class=\\\"aw-checkbox\\\"\\r\\n                            binary=\\\"true\\\"\\r\\n                            [(ngModel)]=\\\"laborTemplateFormData.ltIsSaturday\\\"\\r\\n                            [disabled]=\\\"true\\\"\\r\\n                          ></p-checkbox>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".ltIsSunday\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-checkbox\\r\\n                            class=\\\"aw-checkbox\\\"\\r\\n                            binary=\\\"true\\\"\\r\\n                            [(ngModel)]=\\\"laborTemplateFormData.ltIsSunday\\\"\\r\\n                            [disabled]=\\\"true\\\"\\r\\n                          ></p-checkbox>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                      <div class=\\\"form-group\\\"></div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".hourlyCosts\\\" | translate }} ({{\\r\\n                        bidtHourlyCostDisplayed ? bidtHourlyCostDisplayed.length : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableHourlyCost\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"hourlyCostsTableCols\\\"\\r\\n                    [value]=\\\"bidtHourlyCostDisplayed\\\"\\r\\n                    [(selection)]=\\\"selectedHourlyCosts\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoadingHourlyCostTable\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoadingHourlyCostTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedHourlyCosts.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableHourlyCostGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableHourlyCost.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedHourlyCosts.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteHourlyCost()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedHourlyCosts.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editHourlyCost()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"selectedHourlyCosts.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openHourlyCost()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedHourlyCosts.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"createHourlyCost()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".evaluation\\\" | translate }} ({{\\r\\n                        bidtEvaluationDisplayed ? bidtEvaluationDisplayed.length : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableEvaluation\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"evaluationsTableCols\\\"\\r\\n                    [value]=\\\"bidtEvaluationDisplayed\\\"\\r\\n                    [(selection)]=\\\"selectedEvaluations\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoadingEvaluationTable\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoadingEvaluationTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedEvaluations.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableEvaluationGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableEvaluation.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedEvaluations.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteEvaluation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedEvaluations.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editEvaluation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"selectedEvaluations.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openEvaluation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedEvaluations.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"createEvaluation()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          <span> {{ rowData[col.field] }} </span>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ \\\"global.documents\\\" | translate }} ({{\\r\\n                        bidtDocumentDisplayed ? bidtDocumentDisplayed.length : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableDocuments\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"documentsTableCols\\\"\\r\\n                    [value]=\\\"bidtDocumentDisplayed\\\"\\r\\n                    [(selection)]=\\\"selectedDocuments\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoadingDocumentTable\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoadingDocumentTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedDocuments.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableDocumentsGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableDocuments.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <p-fileUpload\\r\\n                            #fileUploader\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedDocuments.length === 0\\\"\\r\\n                            class=\\\"aw-fileupload aw-table-action\\\"\\r\\n                            name=\\\"document[]\\\"\\r\\n                            customUpload=\\\"true\\\"\\r\\n                            mode=\\\"basic\\\"\\r\\n                            auto=\\\"true\\\"\\r\\n                            chooseLabel=\\\"{{ 'global.upload' | translate }}\\\"\\r\\n                            (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                          ></p-fileUpload>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedDocuments.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"linkUrl()\\\"\\r\\n                          >\\r\\n                            {{ componentData.componentId + \\\".linkUrl\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"showDownloadDocButton()\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"downloadFiles()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.download\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button *ngIf=\\\"showGoToDocButton()\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"goToDoc()\\\">\\r\\n                            {{ \\\"global.goTo\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedDocuments.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteSelectedDocuments()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedDocuments.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editDocument()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"selectedDocuments.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openDocument()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td\\r\\n                          *ngFor=\\\"let col of columns\\\"\\r\\n                          [ngSwitch]=\\\"col.field\\\"\\r\\n                          [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                        >\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Display only in edit and read mode -->\\r\\n          <div [style.visibility]=\\\"!isCreateOpenMode ? 'visible' : 'hidden'\\\">\\r\\n            <div class=\\\"grid-row\\\" [style.display]=\\\"!showWorkTab ? 'none' : ''\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container\\\">\\r\\n                      <h3 class=\\\"grid-cell-title\\\">\\r\\n                        {{ componentData.componentId + \\\".works\\\" | translate }} ({{\\r\\n                          worksDisplayed ? worksDisplayed.length : 0\\r\\n                        }})\\r\\n                      </h3>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content\\\">\\r\\n                    <p-table\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                      #ptableWorks\\r\\n                      class=\\\"aw-table2\\\"\\r\\n                      [columns]=\\\"worksTableCols\\\"\\r\\n                      [value]=\\\"worksDisplayed\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                      dataKey=\\\"rowIndex\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                        <span *ngIf=\\\"!isLoadingWorksTable\\\"> &nbsp;</span>\\r\\n\\r\\n                        <div *ngIf=\\\"isLoadingWorksTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                          <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                          <div class=\\\"lds-hourglass\\\"></div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"caption\\\">\\r\\n                        <div class=\\\"aw-table-header\\\">\\r\\n                          <div class=\\\"aw-table-global-filter\\\">\\r\\n                            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </label>\\r\\n\\r\\n                            <input\\r\\n                              #ptableHolidaysGlobalFilter\\r\\n                              class=\\\"aw-table-global-filter-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                              (input)=\\\"ptableWorks.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"aw-table-actions\\\">\\r\\n                            <button type=\\\"button\\\" mat-raised-button (click)=\\\"onExportWorks()\\\">\\r\\n                              {{ \\\"global.export\\\" | translate }}\\r\\n                            </button>\\r\\n                            <div class=\\\"aw-table-icon-actions\\\" *ngIf=\\\"!isLoadingWorksTable\\\">\\r\\n                              <i\\r\\n                                class=\\\"fa fa-fw fa-filter aw-icon aw-icon-with-border aw-icon-with-overlay\\\"\\r\\n                                aria-hidden=\\\"true\\\"\\r\\n                                pTooltip=\\\"{{\\r\\n                                  'global' + (workFiltersVisible ? '.hideFilters' : '.showFilters') | translate\\r\\n                                }}\\\"\\r\\n                                tooltipPosition=\\\"top\\\"\\r\\n                                [ngClass]=\\\"{ active: workFiltersVisible }\\\"\\r\\n                                (click)=\\\"workFilters.toggle($event)\\\"\\r\\n                              ></i>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                        <colgroup>\\r\\n                          <col\\r\\n                            *ngFor=\\\"let col of columns\\\"\\r\\n                            [ngStyle]=\\\"{ 'text-align': col.alignment, width: col.width }\\\"\\r\\n                          />\\r\\n                          <col [ngStyle]=\\\"{ width: '3%' }\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                          <th\\r\\n                            pResizableColumn\\r\\n                            *ngFor=\\\"let col of columns\\\"\\r\\n                            [ngStyle]=\\\"{ 'text-align': col.alignment, width: col.width }\\\"\\r\\n                          >\\r\\n                            {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                          </th>\\r\\n                          <th [ngStyle]=\\\"{ width: '3%' }\\\"></th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                          <td\\r\\n                            *ngFor=\\\"let col of columns\\\"\\r\\n                            [ngStyle]=\\\"{ 'text-align': col.alignment, width: col.width }\\\"\\r\\n                            [ngSwitch]=\\\"col.field\\\"\\r\\n                          >\\r\\n                            <a *ngSwitchCase=\\\"'originText'\\\" (click)=\\\"openOrigin(rowData)\\\">{{ rowData[col.field] }}</a>\\r\\n\\r\\n                            <a *ngSwitchCase=\\\"'workOrder'\\\" (click)=\\\"openWorkOrder(rowData)\\\">{{ rowData[col.field] }}</a>\\r\\n\\r\\n                            <span *ngSwitchDefault>\\r\\n                              {{ rowData[col.field] }}\\r\\n                            </span>\\r\\n                          </td>\\r\\n                          <td class=\\\"row-expand-wrapper\\\" [pRowToggler]=\\\"rowData\\\" [ngStyle]=\\\"{ width: '3%' }\\\">\\r\\n                            <i\\r\\n                              class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n                              [ngClass]=\\\"rowData.expand ? 'fa-minus' : 'fa-plus'\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                              pTooltip=\\\"{{ 'global.showTableRowDetails' | translate }}\\\"\\r\\n                              tooltipPosition=\\\"top\\\"\\r\\n                              (click)=\\\"toggleRowDetailsVisibility(rowData)\\\"\\r\\n                            ></i>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"rowData.expand\\\" class=\\\"row-expanded\\\">\\r\\n                          <td [attr.colspan]=\\\"columns.length + 1\\\">\\r\\n                            <div class=\\\"column forced-backgroung\\\">\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group flex--1\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ getComponentName() + \\\".\\\" + \\\"relatedItem\\\" | translate }}\\r\\n                                  </label>\\r\\n\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <a *ngIf=\\\"rowData['isRelatedItemEnabled']\\\" (click)=\\\"openRelatedItem(rowData)\\\">{{\\r\\n                                      rowData[\\\"relatedItem\\\"]\\r\\n                                    }}</a>\\r\\n                                    <span *ngIf=\\\"!rowData['isRelatedItemEnabled']\\\" (click)=\\\"openRelatedItem(rowData)\\\">{{\\r\\n                                      rowData[\\\"relatedItem\\\"]\\r\\n                                    }}</span>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group flex--1\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ getComponentName() + \\\".\\\" + \\\"totalElapsed\\\" | translate }}\\r\\n                                  </label>\\r\\n\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <input\\r\\n                                      type=\\\"text\\\"\\r\\n                                      class=\\\"aw-input\\\"\\r\\n                                      [(ngModel)]=\\\"rowData.totalElapsed\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    />\\r\\n                                  </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group flex--1\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ getComponentName() + \\\".\\\" + \\\"openingDate\\\" | translate }}\\r\\n                                  </label>\\r\\n\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <input\\r\\n                                      type=\\\"text\\\"\\r\\n                                      class=\\\"aw-input\\\"\\r\\n                                      [(ngModel)]=\\\"rowData.openingDate\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    />\\r\\n                                  </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group flex--1\\\">\\r\\n                                  <label class=\\\"form-label\\\">\\r\\n                                    {{ getComponentName() + \\\".\\\" + \\\"closingDate\\\" | translate }}\\r\\n                                  </label>\\r\\n\\r\\n                                  <div class=\\\"form-control\\\">\\r\\n                                    <input\\r\\n                                      type=\\\"text\\\"\\r\\n                                      class=\\\"aw-input\\\"\\r\\n                                      [(ngModel)]=\\\"rowData.closingDate\\\"\\r\\n                                      [disabled]=\\\"true\\\"\\r\\n                                    />\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-row\\\" [style.display]=\\\"!showAcrsEventTab ? 'none' : ''\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                  <div class=\\\"grid-cell-header\\\">\\r\\n                    <div class=\\\"grid-cell-title-container\\\">\\r\\n                      <h3 class=\\\"grid-cell-title\\\">\\r\\n                        {{ getComponentName() + \\\".\\\" + \\\"acrs\\\" | translate }} ({{\\r\\n                          acrsEventTable.list ? acrsEventTable.list.length : 0\\r\\n                        }})\\r\\n                      </h3>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"grid-cell-content\\\">\\r\\n                    <p-table\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                      #ptableAcrsEvent\\r\\n                      class=\\\"aw-table2\\\"\\r\\n                      [columns]=\\\"acrsEventTableColList\\\"\\r\\n                      [value]=\\\"acrsEventTable.list\\\"\\r\\n                      [(selection)]=\\\"acrsEventTableSelectionList\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                        <span *ngIf=\\\"!isLoadingAcrsEventTable\\\"> &nbsp;</span>\\r\\n\\r\\n                        <div *ngIf=\\\"isLoadingAcrsEventTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                          <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                          <div class=\\\"lds-hourglass\\\"></div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"caption\\\">\\r\\n                        <div\\r\\n                          class=\\\"aw-table-header\\\"\\r\\n                          [ngClass]=\\\"{ 'rows-selected': acrsEventTableSelectionList.length > 0 }\\\"\\r\\n                        >\\r\\n                          <div class=\\\"aw-table-global-filter\\\">\\r\\n                            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </label>\\r\\n\\r\\n                            <input\\r\\n                              class=\\\"aw-table-global-filter-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                              (input)=\\\"ptableAcrsEvent.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                        <colgroup>\\r\\n                          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                          </th>\\r\\n\\r\\n                          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                            {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                          </th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                          </td>\\r\\n\\r\\n                          <td\\r\\n                            *ngFor=\\\"let col of columns\\\"\\r\\n                            [ngSwitch]=\\\"col.field\\\"\\r\\n                            [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                          >\\r\\n                            <span *ngSwitchCase=\\\"'eventCode'\\\">\\r\\n                              <a (click)=\\\"openEvent(rowData)\\\">{{ rowData[col.field] }}</a>\\r\\n                            </span>\\r\\n\\r\\n                            <span *ngSwitchCase=\\\"'asset'\\\">\\r\\n                              <a (click)=\\\"openEquipment(rowData)\\\">{{ rowData[col.field] }}</a>\\r\\n                            </span>\\r\\n\\r\\n                            <span *ngSwitchDefault> {{ rowData[col.field] }} </span>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab id=\\\"homeTab\\\">\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".hrManagement\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".expense\\\" | translate }} ({{\\r\\n                        bidtExpenseDisplayed ? bidtExpenseDisplayed.length : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableExpenses\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"expensesTableCols\\\"\\r\\n                    [value]=\\\"bidtExpenseDisplayed\\\"\\r\\n                    [(selection)]=\\\"selectedExpenses\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoadingExpenseTable\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoadingExpenseTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedExpenses.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableExpensesGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableExpenses.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedExpenses.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteExpense()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedExpenses.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editExpense()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"selectedExpenses.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openExpense()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedExpenses.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"createExpense()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".holidays\\\" | translate }} ({{\\r\\n                        bidtHolidayDisplayed ? bidtHolidayDisplayed.length : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableHolidays\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"holidaysTableCols\\\"\\r\\n                    [value]=\\\"bidtHolidayDisplayed\\\"\\r\\n                    [(selection)]=\\\"selectedHolidays\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoadingHolidaysTable\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoadingHolidaysTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedHolidays.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableHolidaysGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableHolidays.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedHolidays.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteHoliday()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedHolidays.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editHoliday()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"selectedHolidays.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openHoliday()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedHolidays.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"createHoliday()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".absence\\\" | translate }} ({{\\r\\n                        bidtAbsenceDisplayed ? bidtAbsenceDisplayed.length : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableAbsence\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"absencesTableCols\\\"\\r\\n                    [value]=\\\"bidtAbsenceDisplayed\\\"\\r\\n                    [(selection)]=\\\"selectedAbsences\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoadingAbsenceTable\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoadingAbsenceTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedAbsences.length > 0 }\\\">\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableAbsenceGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableAbsence.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedAbsences.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteAbsence()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedAbsences.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editAbsence()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"selectedAbsences.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openAbsence()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedAbsences.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"createAbsence()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".medicalExamination\\\" | translate }} ({{\\r\\n                        bidtMedicalExaminationDisplayed ? bidtMedicalExaminationDisplayed.length : 0\\r\\n                      }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <p-table\\r\\n                    [resizableColumns]=\\\"true\\\"\\r\\n                    #ptableMedicalExaminations\\r\\n                    class=\\\"aw-table2\\\"\\r\\n                    [columns]=\\\"medicalExaminationsTableCols\\\"\\r\\n                    [value]=\\\"bidtMedicalExaminationDisplayed\\\"\\r\\n                    [(selection)]=\\\"selectedMedicalExaminations\\\"\\r\\n                    [scrollable]=\\\"true\\\"\\r\\n                  >\\r\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                      <span *ngIf=\\\"!isLoadingMedicalExaminationTable\\\"> &nbsp;</span>\\r\\n\\r\\n                      <div *ngIf=\\\"isLoadingMedicalExaminationTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                        <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                        <div class=\\\"lds-hourglass\\\"></div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"caption\\\">\\r\\n                      <div\\r\\n                        class=\\\"aw-table-header\\\"\\r\\n                        [ngClass]=\\\"{ 'rows-selected': selectedMedicalExaminations.length > 0 }\\\"\\r\\n                      >\\r\\n                        <div class=\\\"aw-table-global-filter\\\">\\r\\n                          <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                            <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                          </label>\\r\\n\\r\\n                          <input\\r\\n                            #ptableMedicalExaminationsGlobalFilter\\r\\n                            class=\\\"aw-table-global-filter-input\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                            (input)=\\\"ptableMedicalExaminations.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"aw-table-actions\\\">\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedMedicalExaminations.length > 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            color=\\\"warn\\\"\\r\\n                            (click)=\\\"deleteMedicalExamination()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.delete\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedMedicalExaminations.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"editMedicalExamination()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.edit\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"selectedMedicalExaminations.length === 1\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"openMedicalExamination()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.open\\\" | translate }}\\r\\n                          </button>\\r\\n\\r\\n                          <button\\r\\n                            *ngIf=\\\"!isReadOpenMode && selectedMedicalExaminations.length === 0\\\"\\r\\n                            type=\\\"button\\\"\\r\\n                            mat-raised-button\\r\\n                            (click)=\\\"createMedicalExamination()\\\"\\r\\n                          >\\r\\n                            {{ \\\"global.add\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                      <colgroup>\\r\\n                        <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                        <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                      </colgroup>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                      <tr>\\r\\n                        <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n\\r\\n                        <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n\\r\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                      <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                        <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                          <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n\\r\\n                        <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </ng-template>\\r\\n                  </p-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-search-employee\\r\\n    *ngIf=\\\"showSuperiorPopup\\\"\\r\\n    [(display)]=\\\"!!showSuperiorPopup\\\"\\r\\n    [employee-name]=\\\"superiorFormData.employeeLastName\\\"\\r\\n    (onSelected)=\\\"setSelectedSuperior($event)\\\"\\r\\n  ></aw-dialog-search-employee>\\r\\n\\r\\n  <aw-absence-popup-form\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyAbsenceDialog\\\"\\r\\n    *ngIf=\\\"showAbsencePopup\\\"\\r\\n    [(display)]=\\\"showAbsencePopup\\\"\\r\\n    [component-data]=\\\"dataAbsence\\\"\\r\\n    (onValidated)=\\\"saveAbsence($event)\\\"\\r\\n  ></aw-absence-popup-form>\\r\\n\\r\\n  <aw-evaluation-popup-form\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyEvaluationDialog\\\"\\r\\n    *ngIf=\\\"showEvaluationPopup\\\"\\r\\n    [(display)]=\\\"showEvaluationPopup\\\"\\r\\n    [component-data]=\\\"dataEvaluation\\\"\\r\\n    (onValidated)=\\\"saveEvaluation($event)\\\"\\r\\n  ></aw-evaluation-popup-form>\\r\\n\\r\\n  <aw-expense-popup-form\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyExpenseDialog\\\"\\r\\n    *ngIf=\\\"showExpensePopup\\\"\\r\\n    [(display)]=\\\"showExpensePopup\\\"\\r\\n    [component-data]=\\\"dataExpense\\\"\\r\\n    (onValidated)=\\\"saveExpense($event)\\\"\\r\\n  ></aw-expense-popup-form>\\r\\n\\r\\n  <aw-holidays-popup-form\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyHolidayDialog\\\"\\r\\n    *ngIf=\\\"showHolidayPopup\\\"\\r\\n    [(display)]=\\\"showHolidayPopup\\\"\\r\\n    [component-data]=\\\"dataHoliday\\\"\\r\\n    (onValidated)=\\\"saveHoliday($event)\\\"\\r\\n  ></aw-holidays-popup-form>\\r\\n\\r\\n  <aw-hourly-costs-popup-form\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyHourlyCostDialog\\\"\\r\\n    *ngIf=\\\"showHourlyCostPopup\\\"\\r\\n    [(display)]=\\\"showHourlyCostPopup\\\"\\r\\n    [component-data]=\\\"dataHourlyCost\\\"\\r\\n    (onValidated)=\\\"saveHourlyCost($event)\\\"\\r\\n  ></aw-hourly-costs-popup-form>\\r\\n\\r\\n  <aw-medical-examination-popup-form\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyMedicalExaminationDialog\\\"\\r\\n    *ngIf=\\\"showMedicalExaminationPopup\\\"\\r\\n    [(display)]=\\\"showMedicalExaminationPopup\\\"\\r\\n    [component-data]=\\\"dataMedicalExamination\\\"\\r\\n    (onValidated)=\\\"saveMedicalExamination($event)\\\"\\r\\n  ></aw-medical-examination-popup-form>\\r\\n\\r\\n  <aw-qualification-popup-form\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyQualificationDialog\\\"\\r\\n    *ngIf=\\\"showQualificationPopup\\\"\\r\\n    [(display)]=\\\"showQualificationPopup\\\"\\r\\n    [component-data]=\\\"dataQualification\\\"\\r\\n    (onValidated)=\\\"saveQualification($event)\\\"\\r\\n  ></aw-qualification-popup-form>\\r\\n\\r\\n  <aw-training-popup-form\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyTrainingDialog\\\"\\r\\n    *ngIf=\\\"showTrainingPopup\\\"\\r\\n    [(display)]=\\\"showTrainingPopup\\\"\\r\\n    [component-data]=\\\"dataTraining\\\"\\r\\n    (onValidated)=\\\"saveTraining($event)\\\"\\r\\n  ></aw-training-popup-form>\\r\\n\\r\\n  <aw-document-popup-form\\r\\n    *ngIf=\\\"showDocumentDialog\\\"\\r\\n    [document]=\\\"currentDocument\\\"\\r\\n    [(display)]=\\\"showDocumentDialog\\\"\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyDocumentDialog\\\"\\r\\n    (onValidated)=\\\"updateDocument($event)\\\"\\r\\n  ></aw-document-popup-form>\\r\\n\\r\\n  <aw-document-url-popup-form\\r\\n    *ngIf=\\\"showDocumentUrlDialog\\\"\\r\\n    [document]=\\\"currentDocument\\\"\\r\\n    [(display)]=\\\"showDocumentUrlDialog\\\"\\r\\n    [isReadOnlyForm]=\\\"isReadOnlyDocumentDialog\\\"\\r\\n    (onValidated)=\\\"updateDocumentUrl($event)\\\"\\r\\n  ></aw-document-url-popup-form>\\r\\n\\r\\n  <p-overlayPanel\\r\\n    #workFilters\\r\\n    class=\\\"aw-overlay\\\"\\r\\n    (onShow)=\\\"workFiltersVisible = true\\\"\\r\\n    (onHide)=\\\"workFiltersVisible = false\\\"\\r\\n    [dismissable]=\\\"false\\\"\\r\\n  >\\r\\n    <aw-work-flight-table-filters\\r\\n      [searchCriteria]=\\\"searchCriteriaWork\\\"\\r\\n      (onFilter)=\\\"workFilters.hide(); workFiltersVisible = false; filterWorkWithCriteria()\\\"\\r\\n      (onReset)=\\\"resetWorkTableFilters()\\\"\\r\\n    >\\r\\n    </aw-work-flight-table-filters>\\r\\n  </p-overlayPanel>\\r\\n\\r\\n  <p-overlayPanel\\r\\n    #flightFilters\\r\\n    class=\\\"aw-overlay\\\"\\r\\n    (onShow)=\\\"flightFiltersVisible = true\\\"\\r\\n    (onHide)=\\\"flightFiltersVisible = false\\\"\\r\\n    [dismissable]=\\\"false\\\"\\r\\n  >\\r\\n    <aw-work-flight-table-filters\\r\\n      [searchCriteria]=\\\"searchCriteriaFlight\\\"\\r\\n      (onFilter)=\\\"flightFilters.hide(); flightFiltersVisible = false; filterFlightWithCriteria()\\\"\\r\\n      (onReset)=\\\"resetFlightTableFilters()\\\"\\r\\n    >\\r\\n    </aw-work-flight-table-filters>\\r\\n  </p-overlayPanel>\\r\\n</div>\\r\\n\"","module.exports = \":host .custom-calendar-margin {\\n  margin-right: 6em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9odW1hbi1yZXNvdXJjZXMvZW1wbG95ZWUtZm9ybS9EOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGZyb250ZW5kX2Flcm93ZWJiL3NyY1xcYXBwXFxtYWluXFxodW1hbi1yZXNvdXJjZXNcXGVtcGxveWVlLWZvcm1cXGVtcGxveWVlLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vaHVtYW4tcmVzb3VyY2VzL2VtcGxveWVlLWZvcm0vZW1wbG95ZWUtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAuY3VzdG9tLWNhbGVuZGFyLW1hcmdpbiB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDZlbTtcclxuICB9XHJcbn1cclxuIl19 */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as moment from 'moment';\r\nimport { FileUpload } from 'primeng/fileupload';\r\nimport { forkJoin } from 'rxjs';\r\nimport { finalize, takeUntil } from 'rxjs/operators';\r\n\r\nimport { PageTocService } from '../../../shared/components/component-sidebar/page-toc.service';\r\nimport { PageTocEntry } from '../../../shared/components/component-sidebar/types/page-toc-entry.interface';\r\nimport { DynamicAttributesService } from '../../../shared/components/dynamic-attributes/dynamic-attributes.service';\r\nimport { TableDataSource } from '../../../shared/components/table/table-data-source';\r\nimport { AWPropertiesConstants } from '../../../shared/constants/aw-properties-constants';\r\nimport { BidoNotificationTypeConstants } from '../../../shared/constants/bido-notification-type-constants';\r\nimport { ComponentConstants } from '../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../shared/services/date.service';\r\nimport { ExportService } from '../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { InputValidationService } from '../../../shared/services/input-validation.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { PageService } from '../../../shared/services/page.service';\r\nimport { PropertiesService } from '../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../shared/services/session.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { FindEmployeeWorksInput } from '../../../shared/types/api-input-types/bidt-employee/find-employee-works-input.interface';\r\nimport { FindWorksInformationByCriteriaInput } from '../../../shared/types/api-input-types/bidt-employee/find-works-information-by-criteria-input.interface';\r\nimport { SaveEmployeesInput } from '../../../shared/types/api-input-types/bidt-employee/save-employee-input.interface';\r\nimport { FindAcrsEventListByUserInput } from '../../../shared/types/api-input-types/fleet-management/find-acrs-event-list-by-user-input.interface';\r\nimport { CatalogPropertiesTableDTO } from '../../../shared/types/api-output-types/administration-catalog/catalog-properties-table-dto.interface';\r\nimport { BidtEvaluationsOutputDTO } from '../../../shared/types/api-output-types/bidt-employee/bidt-evaluations-output.interface';\r\nimport { BidtHourlyCostsOutputDTO } from '../../../shared/types/api-output-types/bidt-employee/bidt-hourly-costs-output-dto.interface';\r\nimport { EmployeeFlightOutputDTO } from '../../../shared/types/api-output-types/bidt-employee/employee-flight-output-dto.interface';\r\nimport { EmployeeHolidaysTableDTO } from '../../../shared/types/api-output-types/bidt-employee/employee-holidays-table-dto.interface';\r\nimport { EmployeeWorkOutputDTO } from '../../../shared/types/api-output-types/bidt-employee/employee-work-output-dto.interface';\r\nimport { FindEmployeeQualificationDTO } from '../../../shared/types/api-output-types/bidt-qualif-employee/find-employee-qualification-dto.interface';\r\nimport { EmployeeWorksInformationOutputDTO } from '../../../shared/types/api-output-types/employee-works-information/employee-works-information-output-dto.interface';\r\nimport { BidmWorkOrderDTOId } from '../../../shared/types/api-types/bidm-work-order-dto-id.interface';\r\nimport { BidoEquipmentDTOId } from '../../../shared/types/api-types/bido-equipment-dto-id.interface';\r\nimport { BidoNotificationDTOId } from '../../../shared/types/api-types/bido-notification-dto-id.interface';\r\nimport { BidoNotificationDTO } from '../../../shared/types/api-types/bido-notification-dto.interface';\r\nimport { BidtAbsenceDTO } from '../../../shared/types/api-types/bidt-absence-dto.interface';\r\nimport { BidtCategoryDTO } from '../../../shared/types/api-types/bidt-category-dto.interface';\r\nimport { BidtContractDTO } from '../../../shared/types/api-types/bidt-contract-dto.interface';\r\nimport { BidtDocumentDTO } from '../../../shared/types/api-types/bidt-document-dto.interface';\r\nimport { BidtEmployeeDTO } from '../../../shared/types/api-types/bidt-employee-dto.interface';\r\nimport { BidtEvaluationDTO } from '../../../shared/types/api-types/bidt-evaluation-dto.interface';\r\nimport { BidtExpenseDTO } from '../../../shared/types/api-types/bidt-expense-dto.interface';\r\nimport { BidtHourlyCostDTO } from '../../../shared/types/api-types/bidt-hourly-cost-dto.interface';\r\nimport { BidtLaborTemplateDTO } from '../../../shared/types/api-types/bidt-labor-template-dto.interface';\r\nimport { BidtLicenseDTO } from '../../../shared/types/api-types/bidt-license-dto.interface';\r\nimport { BidtMedicalVisitDTO } from '../../../shared/types/api-types/bidt-medical-visit-dto.interface';\r\nimport { BidtSalaryDTO } from '../../../shared/types/api-types/bidt-salary-dto.interface';\r\nimport { BidtSiteDTO } from '../../../shared/types/api-types/bidt-site-dto.interface';\r\nimport { BidtTrainingDTO } from '../../../shared/types/api-types/bidt-training-dto.interface';\r\nimport { BidtWarehouseDTO } from '../../../shared/types/api-types/bidt-warehouse-dto.interface';\r\nimport { BireEvolutionDTOId } from '../../../shared/types/api-types/bire-evolution-dto-id.interface';\r\nimport { BireItemDTO } from '../../../shared/types/api-types/bire-item-dto.interface';\r\nimport { BireTaskDTOId } from '../../../shared/types/api-types/bire-task-dto-id.interface';\r\nimport { EmployeeLicenseCategoryTableDTO } from '../../../shared/types/api-types/employee-license-category-table-dto.interface';\r\nimport { FileContent } from '../../../shared/types/api-types/file-content.interface';\r\nimport { GetEmployeeFormDTO } from '../../../shared/types/api-types/get-employee-form-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { FormPageComponent } from '../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { PopupEntry } from '../../../shared/types/popup-entry.interface';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { BidoEquipmentUtils } from '../../../shared/utils/bido-equipment-utils';\r\nimport { FileUtils } from '../../../shared/utils/file-utils';\r\nimport { ListUtils } from '../../../shared/utils/list-utils';\r\nimport { ObjectUtils } from '../../../shared/utils/object-utils';\r\nimport { StringUtils } from '../../../shared/utils/string-utils';\r\n\r\nimport { EmployeeFormService } from './employee-form.service';\r\n\r\ninterface TrainingRow {\r\n  trainingName: string | undefined;\r\n  trainingStartDate: string | undefined;\r\n  trainingEndDate: string | undefined;\r\n  trainingPerformed: boolean | undefined;\r\n  trainingAskedBy: string | undefined;\r\n  trainingInstructor: string | undefined;\r\n  trainingCenter: string | undefined;\r\n  trainingComment: string | undefined;\r\n  _obj: BidtTrainingDTO;\r\n}\r\n\r\ninterface EvaluationRow {\r\n  evaluationDate: string | undefined;\r\n  evaluationType: string | undefined;\r\n  evaluator: string | undefined;\r\n  evaluationComment: string | undefined;\r\n  _obj: BidtEvaluationsOutputDTO;\r\n}\r\n\r\ninterface AbsenceRow {\r\n  absenceStartDate: string | undefined;\r\n  absenceEndDate: string | undefined;\r\n  absenceType: string | undefined;\r\n  absenceDescription: string | undefined;\r\n  _obj: BidtAbsenceDTO;\r\n}\r\n\r\ninterface HolidayRow {\r\n  holidayStartDate: string | undefined;\r\n  holidayEndDate: string | undefined;\r\n  holidayStatus: string | undefined;\r\n  holidayValidator: string | undefined;\r\n  _obj: EmployeeHolidaysTableDTO;\r\n}\r\n\r\ninterface ExpenseRow {\r\n  expenseDate: string | undefined;\r\n  expenseType: string | undefined;\r\n  expenseValue: string | undefined;\r\n  expenseDescription: string | undefined;\r\n  _obj: BidtExpenseDTO;\r\n}\r\n\r\ninterface MedicalExaminationRow {\r\n  visitDate: string | undefined;\r\n  visitExpiration: string | undefined;\r\n  visitComment: string | undefined;\r\n  _obj: BidtMedicalVisitDTO;\r\n}\r\n\r\ninterface DocumentRow {\r\n  documentName: string | undefined;\r\n  documentCategory: string | undefined;\r\n  documentType: string | undefined;\r\n  documentContent: string | undefined;\r\n  documentPublicationDate: string | undefined;\r\n  documentSource: string | undefined;\r\n  _obj: BidtDocumentDTO;\r\n}\r\n\r\ninterface QualificationRow {\r\n  qualificationType: string | undefined;\r\n  qualificationTitle: string | undefined;\r\n  qualifEmployeeInstitution: string | undefined;\r\n  qualifEmployeeStartDate: string | undefined;\r\n  qualifEmployeeEndDate: string | undefined;\r\n  qualifOngoing: boolean | undefined;\r\n  _obj: FindEmployeeQualificationDTO;\r\n}\r\n\r\ninterface WorkRow {\r\n  isRelatedItemEnabled?: boolean;\r\n  origin?: string;\r\n  type?: string;\r\n  description?: string;\r\n  relatedItem?: string;\r\n  openingDate?: string;\r\n  closingDate?: string;\r\n  jobCardText?: string;\r\n  fromIcon?: string;\r\n  relatedItemIcon?: string;\r\n  treeNodeIcon?: string;\r\n  workOrder?: string;\r\n  treeNodeTooltip?: string;\r\n  status?: string;\r\n  originText?: string;\r\n  statusText?: string;\r\n  projectNumber?: string;\r\n  projectAsset?: string;\r\n  totalElapsed?: string;\r\n  qualif?: string;\r\n  _obj: EmployeeWorkOutputDTO;\r\n  expand?: boolean;\r\n  rowIndex: number;\r\n}\r\n\r\ninterface WorkRowExport {\r\n  projectNumber?: string;\r\n  projectAsset?: string;\r\n  workOrder?: string;\r\n  originText?: string;\r\n  type?: string;\r\n  qualif?: string;\r\n  description?: string;\r\n  statusText?: string;\r\n}\r\n\r\ninterface FlightRow {\r\n  missionCode?: string;\r\n  missionType?: string;\r\n  duration?: string;\r\n  cycleNumber?: string;\r\n  startDateText?: string;\r\n  endDateText?: string;\r\n  pilot?: string;\r\n  copilot?: string;\r\n  dayMission?: boolean;\r\n  engineStartDateText?: string;\r\n  engineStopDateText?: string;\r\n  fuelUsed?: string;\r\n  ifrDuration?: string;\r\n  nightMission?: boolean;\r\n  passengerNumber?: string;\r\n  shipmentNumber?: string;\r\n  missionNumber?: string;\r\n  missionDepartureLocation?: string;\r\n  missionArrivalLocation?: string;\r\n  equipmentCode?: string;\r\n  occurrence?: number;\r\n  assetText?: string;\r\n  chronoNumber?: string;\r\n  flightType?: string;\r\n  flightStatus?: string;\r\n  _obj: EmployeeFlightOutputDTO;\r\n}\r\n\r\ninterface AcrsEventRow {\r\n  asset: string;\r\n  eventCode: string;\r\n  eventDate: string;\r\n  eventDescription: string;\r\n  eventStatus: string;\r\n  _obj: BidoNotificationDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-employee-form',\r\n  templateUrl: './employee-form.component.html'\r\n})\r\nexport class EmployeeFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  private static readonly DATE_DIFF: number = 18;\r\n  private static readonly DOCUMENT_CATEGORY_ID = 120;\r\n  public workFiltersVisible: boolean;\r\n  public flightFiltersVisible: boolean;\r\n  public companies: LabelValue<string>[];\r\n  public countries: LabelValue<string>[];\r\n  public warehouses: LabelValue<number>[];\r\n  public sites: LabelValue<number>[];\r\n  public periods: LabelValue<string>[];\r\n  public contractNames: LabelValue<string>[];\r\n  public contractTypes: LabelValue<string>[];\r\n  public salaryDevises: LabelValue<string>[];\r\n  public workTemplateNames: LabelValue<string>[];\r\n  private holidayStatusList: LabelValue<string>[];\r\n  private absenceTypes: LabelValue<string>[];\r\n  private evaluationTypes: LabelValue<string>[];\r\n  private requestedByList: LabelValue<string>[];\r\n  private expenseTypes: LabelValue<string>[];\r\n  private categoryTypes: LabelValue<string>[];\r\n  private categoryLevels: LabelValue<string>[];\r\n\r\n  public siteDTO: BidtSiteDTO;\r\n  public employeeFormData: BidtEmployeeDTO;\r\n  public superiorFormData: BidtEmployeeDTO;\r\n  public salaryFormData: BidtSalaryDTO;\r\n  public contractFormData: BidtContractDTO;\r\n  public siteFormData: BidtSiteDTO;\r\n  public laborTemplateFormData: BidtLaborTemplateDTO;\r\n  public licenseFormData: BidtLicenseDTO;\r\n  public isFormValidated: boolean;\r\n  public employeeName: string;\r\n  public selectedContractEmployeeStartDate: Date | undefined;\r\n  public selectedContractEmployeeEndDate: Date | undefined;\r\n  public showSuperiorPopup: boolean;\r\n  public selectedContractTypeName: string | undefined;\r\n  public selectedSalaryCurrency: string;\r\n  public selectedWorkTemplateName: string | undefined;\r\n  public selectedLicenseIssueDate: Date;\r\n  public selectedLicenseValidatingDate: Date;\r\n\r\n  public currentTabId: string;\r\n  public selectedCompany: string | undefined;\r\n  public selectedContractName: string | undefined;\r\n\r\n  private siteDTOList: BidtSiteDTO[];\r\n  private contractNameDTOList: BidtContractDTO[];\r\n  private workTemplateNameList: BidtLaborTemplateDTO[];\r\n  private employeeDetails: GetEmployeeFormDTO;\r\n\r\n  // Tab id\r\n  public tabWorkTemplateId: string;\r\n  public tabHourlyCostsId: string;\r\n  public tabQualificationId: string;\r\n  public tabLicenseId: string;\r\n  public tabTrainingId: string;\r\n  public tabEvaluationId: string;\r\n  public tabAbsenceId: string;\r\n  public tabHolidaysId: string;\r\n  public tabExpenseId: string;\r\n  public tabMedicalExaminationId: string;\r\n  public tabDocumentsId: string;\r\n\r\n  // Table column fields, align and width\r\n  public workTemplatesTableCols: TableColumn[];\r\n  public hourlyCostsTableCols: TableColumn[];\r\n  public qualificationsTableCols: TableColumn[];\r\n  public licensesTableCols: TableColumn[];\r\n  public trainingsTableCols: TableColumn[];\r\n  public evaluationsTableCols: TableColumn[];\r\n  public absencesTableCols: TableColumn[];\r\n  public holidaysTableCols: TableColumn[];\r\n  public expensesTableCols: TableColumn[];\r\n  public medicalExaminationsTableCols: TableColumn[];\r\n  public documentsTableCols: TableColumn[];\r\n  public worksTableCols: TableColumn[];\r\n  public flightsTableCols: TableColumn[];\r\n  public acrsEventTableColList: TableColumn[];\r\n\r\n  // Selected objects in table\r\n  public selectedWorkTemplates: BidtLaborTemplateDTO[];\r\n  public selectedHourlyCosts: BidtHourlyCostsOutputDTO[];\r\n  public selectedQualifications: QualificationRow[];\r\n  public selectedLicenses: BidtLicenseDTO[];\r\n  public selectedTrainings: TrainingRow[];\r\n  public selectedEvaluations: EvaluationRow[];\r\n  public selectedAbsences: AbsenceRow[];\r\n  public selectedHolidays: HolidayRow[];\r\n  public selectedExpenses: ExpenseRow[];\r\n  public selectedMedicalExaminations: MedicalExaminationRow[];\r\n  public selectedDocuments: DocumentRow[];\r\n  public selectedWorks: WorkRow[];\r\n  public selectedFlights: FlightRow[];\r\n  public acrsEventTableSelectionList: AcrsEventRow[];\r\n\r\n  // For work template visit tab\r\n  public dataWorkTemplate: PopupEntry<BidtLaborTemplateDTO>;\r\n  public isReadOnlyWorkTemplateDialog: boolean;\r\n  public currentWorkTemplates: BidtLaborTemplateDTO;\r\n  public currentWorkTemplateIndex: number;\r\n  public isNewWorkTemplate: boolean;\r\n\r\n  // For hourly cost tab\r\n  public dataHourlyCost: PopupEntry<BidtHourlyCostsOutputDTO>;\r\n  public isReadOnlyHourlyCostDialog: boolean;\r\n  public currentHourlyCosts: BidtHourlyCostsOutputDTO;\r\n  public currentHourlyCostIndex: number;\r\n  public isNewHourlyCost: boolean;\r\n  public showHourlyCostPopup: boolean;\r\n\r\n  // For qualifications tab\r\n  public dataQualification: PopupEntry<FindEmployeeQualificationDTO>;\r\n  public isReadOnlyQualificationDialog: boolean;\r\n  public currentQualifications: FindEmployeeQualificationDTO;\r\n  public currentQualificationIndex: number;\r\n  public isNewQualification: boolean;\r\n  public showQualificationPopup: boolean;\r\n\r\n  // For qualification renewal tab\r\n  public dataQualificationRenewal: PopupEntry<EmployeeWorksInformationOutputDTO>;\r\n  public qualificationRenewalTableDataSource: TableDataSource<EmployeeWorksInformationOutputDTO>;\r\n  public qualificationRenewalStartDateFilter?: Date;\r\n  public qualificationRenewalEndDateFilter?: Date;\r\n\r\n  // For licenses tab\r\n  public dataLicense: PopupEntry<BidtLicenseDTO>;\r\n  public isReadOnlyLicenseDialog: boolean;\r\n  public currentLicenses: BidtLicenseDTO;\r\n  public currentLicenseIndex: number;\r\n  public isNewLicense: boolean;\r\n  public categoryLevelTableData: EmployeeLicenseCategoryTableDTO[];\r\n\r\n  // For training tab\r\n  public dataTraining: PopupEntry<BidtTrainingDTO>;\r\n  public isReadOnlyTrainingDialog: boolean;\r\n  public currentTrainings: BidtTrainingDTO;\r\n  public currentTrainingIndex: number;\r\n  public isNewTraining: boolean;\r\n  public showTrainingPopup: boolean;\r\n\r\n  // For evaluation tab\r\n  public dataEvaluation: PopupEntry<BidtEvaluationsOutputDTO>;\r\n  public isReadOnlyEvaluationDialog: boolean;\r\n  public currentEvaluations: BidtEvaluationsOutputDTO;\r\n  public currentEvaluationIndex: number;\r\n  public isNewEvaluation: boolean;\r\n  public showEvaluationPopup: boolean;\r\n\r\n  // For absence tab\r\n  public dataAbsence: PopupEntry<BidtAbsenceDTO>;\r\n  public isReadOnlyAbsenceDialog: boolean;\r\n  public currentAbsences: BidtAbsenceDTO;\r\n  public currentAbsenceIndex: number;\r\n  public isNewAbsence: boolean;\r\n  public showAbsencePopup: boolean;\r\n\r\n  // For holiday tab\r\n  public dataHoliday: PopupEntry<EmployeeHolidaysTableDTO>;\r\n  public isReadOnlyHolidayDialog: boolean;\r\n  public currentHolidays: EmployeeHolidaysTableDTO;\r\n  public currentHolidayIndex: number;\r\n  public isNewHoliday: boolean;\r\n  public showHolidayPopup: boolean;\r\n\r\n  // For expense tab\r\n  public dataExpense: PopupEntry<BidtExpenseDTO>;\r\n  public isReadOnlyExpenseDialog: boolean;\r\n  public currentExpenses: BidtExpenseDTO;\r\n  public currentExpenseIndex: number;\r\n  public isNewExpense: boolean;\r\n  public showExpensePopup: boolean;\r\n\r\n  // For medical visit tab\r\n  public dataMedicalExamination: PopupEntry<BidtMedicalVisitDTO>;\r\n  public isReadOnlyMedicalExaminationDialog: boolean;\r\n  public currentMedicalExaminations: BidtMedicalVisitDTO;\r\n  public currentMedicalExaminationIndex: number;\r\n  public isNewMedicalExamination: boolean;\r\n  public showMedicalExaminationPopup: boolean;\r\n\r\n  // For document tab\r\n  public showDocumentDialog: boolean;\r\n  public showDocumentUrlDialog: boolean;\r\n  public isReadOnlyDocumentDialog: boolean;\r\n  public currentDocument: BidtDocumentDTO;\r\n  public currentDocumentIndex: number;\r\n\r\n  // DTO objects from database\r\n  public bidtLaborTemplateDTO: BidtLaborTemplateDTO[];\r\n  public bidtHourlyCostDTO: BidtHourlyCostDTO[];\r\n  public bidtQualifEmployeeDTO: FindEmployeeQualificationDTO[];\r\n  public bidtLicenseDTO: BidtLicenseDTO[];\r\n  public bidtTrainingDTO: BidtTrainingDTO[];\r\n  public bidtEvaluationDTO: BidtEvaluationDTO[];\r\n  public bidtAbsenceDTO: BidtAbsenceDTO[];\r\n  public bidtHolidayDTO: BidtAbsenceDTO[];\r\n  public bidtExpenseDTO: BidtExpenseDTO[];\r\n  public bidtMedicalExaminationDTO: BidtMedicalVisitDTO[];\r\n  public bidtDocument: BidtDocumentDTO[];\r\n  public works: EmployeeWorkOutputDTO[];\r\n  public flights: EmployeeFlightOutputDTO[];\r\n  public acrsEventTable: SearchResultsDTO<AcrsEventRow>;\r\n\r\n  // DTO objects for display\r\n  public bidtLaborTemplateDisplayed: BidtLaborTemplateDTO[];\r\n  public bidtHourlyCostDisplayed: BidtHourlyCostsOutputDTO[];\r\n  public bidtQualifEmployeeDisplayed: QualificationRow[];\r\n  public bidtCategoryDisplayed: BidtCategoryDTO[];\r\n  public bidtTrainingDisplayed: TrainingRow[];\r\n  public bidtEvaluationDisplayed: EvaluationRow[];\r\n  public bidtAbsenceDisplayed: AbsenceRow[];\r\n  public bidtHolidayDisplayed: HolidayRow[];\r\n  public bidtExpenseDisplayed: ExpenseRow[];\r\n  public bidtMedicalExaminationDisplayed: MedicalExaminationRow[];\r\n  public bidtDocumentDisplayed: DocumentRow[];\r\n  public worksDisplayed: WorkRow[];\r\n  public flightsDisplayed: FlightRow[];\r\n\r\n  private readonly bidtDocumentAddedList: BidtDocumentDTO[];\r\n  private readonly bidtDocumentUpdatedList: BidtDocumentDTO[];\r\n  private bidtDocumentDeletedList: BidtDocumentDTO[];\r\n\r\n  private empID: number;\r\n  public selectedAnchor: string | undefined;\r\n  public showSaveSpinner: boolean;\r\n\r\n  public toc: PageTocEntry[];\r\n\r\n  public searchCriteriaWork: FindEmployeeWorksInput;\r\n  public searchCriteriaFlight: FindEmployeeWorksInput;\r\n\r\n  public isLoadingFlightsTable: boolean;\r\n  public isLoadingWorksTable: boolean;\r\n  public isLoadingQualificationTable: boolean;\r\n  public isLoadingCategoryTable: boolean;\r\n  public isLoadingTrainingTable: boolean;\r\n  public isLoadingHourlyCostTable: boolean;\r\n  public isLoadingEvaluationTable: boolean;\r\n  public isLoadingExpenseTable: boolean;\r\n  public isLoadingAbsenceTable: boolean;\r\n  public isLoadingHolidaysTable: boolean;\r\n  public isLoadingMedicalExaminationTable: boolean;\r\n  public isLoadingDocumentTable: boolean;\r\n  public isLoadingAcrsEventTable: boolean;\r\n\r\n  public showWorkTab: boolean;\r\n  public showFlightTab: boolean;\r\n  public showAcrsEventTab: boolean;\r\n\r\n  private eventStatusList: LabelValue<string>[];\r\n\r\n  private documentCategories: CatalogPropertiesTableDTO[];\r\n\r\n  @ViewChild('mainDataAnchor')\r\n  public mainDataAnchor: ElementRef;\r\n\r\n  @ViewChild('generalDataAnchor')\r\n  public generalDataAnchor: ElementRef;\r\n\r\n  @ViewChild('qualificationDataAnchor')\r\n  public qualificationDataAnchor: ElementRef;\r\n\r\n  @ViewChild('qualificationRenewalAnchor')\r\n  public qualificationRenewalAnchor: ElementRef;\r\n\r\n  @ViewChild('licenseDataAnchor')\r\n  public licenseDataAnchor: ElementRef;\r\n\r\n  @ViewChild('trainingDataAnchor')\r\n  public trainingDataAnchor: ElementRef;\r\n\r\n  @ViewChild('workTemplateDataAnchor')\r\n  public workTemplateDataAnchor: ElementRef;\r\n\r\n  @ViewChild('hourlyCostDataAnchor')\r\n  public hourlyCostDataAnchor: ElementRef;\r\n\r\n  @ViewChild('evaluationDataAnchor')\r\n  public evaluationDataAnchor: ElementRef;\r\n\r\n  @ViewChild('expenseDataAnchor')\r\n  public expenseDataAnchor: ElementRef;\r\n\r\n  @ViewChild('absenceDataAnchor')\r\n  public absenceDataAnchor: ElementRef;\r\n\r\n  @ViewChild('holidayDataAnchor')\r\n  public holidayDataAnchor: ElementRef;\r\n\r\n  @ViewChild('medicalExaminationDataAnchor')\r\n  public medicalExaminationDataAnchor: ElementRef;\r\n\r\n  @ViewChild('documentDataAnchor')\r\n  public documentDataAnchor: ElementRef;\r\n\r\n  @ViewChild('workDataAnchor')\r\n  public workDataAnchor: ElementRef;\r\n\r\n  @ViewChild('flightDataAnchor')\r\n  public flightDataAnchor: ElementRef;\r\n\r\n  @ViewChild('acrsEventAnchor')\r\n  public acrsEventAnchor: ElementRef;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    pageTocService: PageTocService,\r\n    public dynamicAttributesService: DynamicAttributesService,\r\n    public inputValidationService: InputValidationService,\r\n    public sessionService: SessionService,\r\n    public translateService: TranslateService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly employeeFormService: EmployeeFormService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly pageService: PageService,\r\n    public dateService: DateService,\r\n    private readonly exportService: ExportService\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Read,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n\r\n    this.registerPageTocEntrySelectedObservable();\r\n    this.searchCriteriaWork = {};\r\n    this.searchCriteriaFlight = {};\r\n    this.showMedicalExaminationPopup = false;\r\n    this.selectedContractTypeName = '';\r\n    this.selectedSalaryCurrency = '';\r\n    this.selectedWorkTemplateName = undefined;\r\n    this.companies = [];\r\n    this.countries = [];\r\n    this.warehouses = [];\r\n    this.sites = [];\r\n    this.periods = [];\r\n    this.contractNames = [];\r\n    this.contractTypes = [];\r\n    this.salaryDevises = [];\r\n    this.expenseTypes = [];\r\n    this.workTemplatesTableCols = [];\r\n    this.hourlyCostsTableCols = [];\r\n    this.qualificationsTableCols = [];\r\n    this.licensesTableCols = [];\r\n    this.trainingsTableCols = [];\r\n    this.evaluationsTableCols = [];\r\n    this.absencesTableCols = [];\r\n    this.holidaysTableCols = [];\r\n    this.expensesTableCols = [];\r\n    this.medicalExaminationsTableCols = [];\r\n    this.documentsTableCols = [];\r\n    this.categoryLevelTableData = [];\r\n    this.siteDTO = {};\r\n    this.employeeFormData = {};\r\n    this.superiorFormData = {};\r\n    this.siteFormData = {};\r\n    this.contractFormData = {};\r\n    this.salaryFormData = {};\r\n    this.laborTemplateFormData = {};\r\n    this.licenseFormData = {};\r\n    this.isFormValidated = false;\r\n    this.employeeName = '';\r\n    this.employeeDetails = {};\r\n    this.selectedWorkTemplates = [];\r\n    this.selectedHourlyCosts = [];\r\n    this.selectedQualifications = [];\r\n    this.selectedLicenses = [];\r\n    this.selectedTrainings = [];\r\n    this.selectedEvaluations = [];\r\n    this.selectedAbsences = [];\r\n    this.selectedHolidays = [];\r\n    this.selectedExpenses = [];\r\n    this.selectedMedicalExaminations = [];\r\n    this.selectedDocuments = [];\r\n    this.bidtDocumentDisplayed = [];\r\n    this.bidtDocumentAddedList = [];\r\n    this.bidtDocumentUpdatedList = [];\r\n    this.bidtDocumentDeletedList = [];\r\n    this.bidtHourlyCostDisplayed = [];\r\n    this.currentHourlyCosts = {};\r\n    this.bidtQualifEmployeeDisplayed = [];\r\n    this.bidtTrainingDisplayed = [];\r\n    this.bidtEvaluationDisplayed = [];\r\n    this.bidtAbsenceDisplayed = [];\r\n    this.bidtHolidayDisplayed = [];\r\n    this.bidtExpenseDisplayed = [];\r\n    this.bidtMedicalExaminationDisplayed = [];\r\n    this.documentCategories = [];\r\n    this.worksDisplayed = [];\r\n    this.flightsDisplayed = [];\r\n    this.works = [];\r\n    this.flights = [];\r\n    this.categoryTypes = [];\r\n    this.categoryLevels = [];\r\n    this.holidayStatusList = [];\r\n    this.absenceTypes = [];\r\n    this.evaluationTypes = [];\r\n    this.requestedByList = [];\r\n    this.tabWorkTemplateId = 'work-template';\r\n    this.tabHourlyCostsId = 'hoyrly-costs';\r\n    this.tabQualificationId = 'qualification';\r\n    this.tabLicenseId = 'license';\r\n    this.tabTrainingId = 'training';\r\n    this.tabEvaluationId = 'evaluation';\r\n    this.tabAbsenceId = 'absence';\r\n    this.tabHolidaysId = 'holidays';\r\n    this.tabExpenseId = 'expense';\r\n    this.tabMedicalExaminationId = 'medical-examination';\r\n    this.tabDocumentsId = 'documents';\r\n    this.currentTabId = this.tabWorkTemplateId;\r\n    this.workFiltersVisible = false;\r\n    this.flightFiltersVisible = false;\r\n    this.acrsEventTable = { list: [], moreResults: false };\r\n    this.acrsEventTableSelectionList = [];\r\n    this.eventStatusList = [];\r\n    this.loadCountries();\r\n    this.loadContractNames();\r\n    this.loadContractTypes();\r\n    this.loadSalaryDevices();\r\n    this.loadWorktemplateNames();\r\n    this.loadExpenseType();\r\n    this.loadHolidayStatus();\r\n    this.loadAbsenceType();\r\n    this.loadEvaluationType();\r\n    this.loadRequestedbyList();\r\n    this.loadEventStatus();\r\n    // Fill table column information\r\n    this.initTableColumnField();\r\n    this.registerPageTocEntryObservable();\r\n    this.initQualificationRenewalTableDataSource();\r\n    this.initQualificationRenewalDates();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.HR_EMPLOYEE_FORM;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    super.ngOnInit();\r\n\r\n    if (this.componentData) {\r\n      this.updateOpenMode(this.componentData.openMode);\r\n      if (!this.isCreateOpenMode && this.componentData.objectId) {\r\n        const employee = this.serializationService.deserialize(this.componentData.objectId);\r\n        this.employeeName = `${employee.employeeFirstName} ${employee.employeeLastName}`;\r\n      }\r\n      const context = this.isCreateOpenMode ? 'tab.createMode' : this.employeeName;\r\n      this.displayComponentContext(context, this.isCreateOpenMode);\r\n      this.loadEmployee();\r\n    }\r\n\r\n    this.loadCategories();\r\n  }\r\n\r\n  private initQualificationRenewalTableDataSource(): void {\r\n    this.qualificationRenewalTableDataSource = new TableDataSource({\r\n      allowMultiSelect: false,\r\n      enableSelection: false,\r\n      columns: [\r\n        {\r\n          field: 'qualification',\r\n          translateKey: this.getTranslateKey('qualification')\r\n        },\r\n        {\r\n          field: 'worksNumber',\r\n          translateKey: this.getTranslateKey('worksNumber')\r\n        },\r\n        {\r\n          field: 'workingHoursNumber',\r\n          translateKey: this.getTranslateKey('workingHoursNumber')\r\n        },\r\n        {\r\n          field: 'theoreticalHoursNumber',\r\n          translateKey: this.getTranslateKey('theoreticalHoursNumber')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private loadCategories(): void {\r\n    this.employeeFormService\r\n      .findDocumentCategories(EmployeeFormComponent.DOCUMENT_CATEGORY_ID)\r\n      .subscribe((data: CatalogPropertiesTableDTO[]) => {\r\n        this.documentCategories = data;\r\n      });\r\n  }\r\n\r\n  private createContentTable(): void {\r\n    const mainDataKey = 'page.mainData';\r\n    const generalKey = 'global.general';\r\n    const qualificationKey = this.getTranslateKey('qualification');\r\n    const qualificationRenewalKey = this.getTranslateKey('qualificationRenewal');\r\n    const licenseKey = this.getTranslateKey('license');\r\n    const worksKey = this.getTranslateKey('works');\r\n    const acrsKey = this.getTranslateKey('acrs');\r\n    const flightsKey = this.getTranslateKey('flights');\r\n    const trainingKey = this.getTranslateKey('training');\r\n    const workTemplateKey = this.getTranslateKey('workTemplate');\r\n    const hourlyCostsKey = this.getTranslateKey('hourlyCosts');\r\n    const evaluationKey = this.getTranslateKey('evaluation');\r\n    const expenseKey = this.getTranslateKey('expense');\r\n    const absenceKey = this.getTranslateKey('absence');\r\n    const holidaysKey = this.getTranslateKey('holidays');\r\n    const medicalExaminationKey = this.getTranslateKey('medicalExamination');\r\n    const documentsKey = this.getTranslateKey('documents');\r\n\r\n    this.translateService\r\n      .get([\r\n        mainDataKey,\r\n        generalKey,\r\n        qualificationKey,\r\n        qualificationRenewalKey,\r\n        licenseKey,\r\n        worksKey,\r\n        acrsKey,\r\n        flightsKey,\r\n        trainingKey,\r\n        workTemplateKey,\r\n        hourlyCostsKey,\r\n        evaluationKey,\r\n        expenseKey,\r\n        absenceKey,\r\n        holidaysKey,\r\n        medicalExaminationKey,\r\n        documentsKey\r\n      ])\r\n      .subscribe((results: string[]) => {\r\n        const mainDataLabel = !!results ? results[mainDataKey] : 'Main Information';\r\n        const generalLabel = !!results ? results[generalKey] : 'Additional Information';\r\n        const qualificationLabel = !!results ? results[qualificationKey] : 'Qualification';\r\n        const qualificationRenewalLabel = !!results ? results[qualificationRenewalKey] : 'Qualification Renewal';\r\n        const licenseLabel = !!results ? results[licenseKey] : 'License';\r\n        const worksLabel = !!results ? results[worksKey] : 'Works';\r\n        const acrsLabel = !!results ? results[acrsKey] : 'ACRS';\r\n        const flightsLabel = !!results ? results[flightsKey] : 'Flights';\r\n        const trainingLabel = !!results ? results[trainingKey] : 'Training';\r\n        const workTemplateLabel = !!results ? results[workTemplateKey] : 'Work Template';\r\n        const hourlyCostsLabel = !!results ? results[hourlyCostsKey] : 'Hourly Costs';\r\n        const evaluationLabel = !!results ? results[evaluationKey] : 'Evaluation';\r\n        const expenseLabel = !!results ? results[expenseKey] : 'Expense';\r\n        const absenceLabel = !!results ? results[absenceKey] : 'Absence';\r\n        const holidaysLabel = !!results ? results[holidaysKey] : 'Holidays';\r\n        const medicalExaminationLabel = !!results ? results[medicalExaminationKey] : 'Medical Examination';\r\n        const documentsLabel = !!results ? results[documentsKey] : 'Documents';\r\n\r\n        this.toc = [\r\n          {\r\n            id: 'mainDataAnchor',\r\n            anchor: this.mainDataAnchor,\r\n            label: mainDataLabel\r\n          },\r\n          {\r\n            id: 'generalDataAnchor',\r\n            anchor: this.generalDataAnchor,\r\n            label: generalLabel\r\n          },\r\n          {\r\n            id: 'qualificationDataAnchor',\r\n            anchor: this.qualificationDataAnchor,\r\n            label: qualificationLabel\r\n          },\r\n          {\r\n            id: 'qualificationRenewalAnchor',\r\n            anchor: this.qualificationRenewalAnchor,\r\n            label: qualificationRenewalLabel\r\n          },\r\n          {\r\n            id: 'licenseDataAnchor',\r\n            anchor: this.licenseDataAnchor,\r\n            label: licenseLabel\r\n          }\r\n        ];\r\n\r\n        if (this.showWorkTab) {\r\n          this.toc.push({\r\n            id: 'workDataAnchor',\r\n            anchor: this.workDataAnchor,\r\n            label: worksLabel\r\n          });\r\n        }\r\n\r\n        if (this.showAcrsEventTab) {\r\n          this.toc.push({\r\n            id: 'acrsEventAnchor',\r\n            anchor: this.acrsEventAnchor,\r\n            label: acrsLabel\r\n          });\r\n        }\r\n\r\n        if (this.showFlightTab) {\r\n          this.toc.push({\r\n            id: 'flightDataAnchor',\r\n            anchor: this.flightDataAnchor,\r\n            label: flightsLabel\r\n          });\r\n        }\r\n\r\n        const tocTemp = [\r\n          {\r\n            id: 'trainingDataAnchor',\r\n            anchor: this.trainingDataAnchor,\r\n            label: trainingLabel\r\n          },\r\n          {\r\n            id: 'workTemplateDataAnchor',\r\n            anchor: this.workTemplateDataAnchor,\r\n            label: workTemplateLabel\r\n          },\r\n          {\r\n            id: 'hourlyCostDataAnchor',\r\n            anchor: this.hourlyCostDataAnchor,\r\n            label: hourlyCostsLabel\r\n          },\r\n          {\r\n            id: 'evaluationDataAnchor',\r\n            anchor: this.evaluationDataAnchor,\r\n            label: evaluationLabel\r\n          },\r\n          {\r\n            id: 'expenseDataAnchor',\r\n            anchor: this.expenseDataAnchor,\r\n            label: expenseLabel\r\n          },\r\n          {\r\n            id: 'absenceDataAnchor',\r\n            anchor: this.absenceDataAnchor,\r\n            label: absenceLabel\r\n          },\r\n          {\r\n            id: 'holidayDataAnchor',\r\n            anchor: this.holidayDataAnchor,\r\n            label: holidaysLabel\r\n          },\r\n          {\r\n            id: 'medicalExaminationDataAnchor',\r\n            anchor: this.medicalExaminationDataAnchor,\r\n            label: medicalExaminationLabel\r\n          },\r\n          {\r\n            id: 'documentDataAnchor',\r\n            anchor: this.documentDataAnchor,\r\n            label: documentsLabel\r\n          }\r\n        ];\r\n\r\n        this.toc = this.toc.concat(tocTemp);\r\n\r\n        setTimeout(() => {\r\n          this.setSelectedAnchor('mainDataAnchor');\r\n        });\r\n      });\r\n  }\r\n\r\n  private registerPageTocEntrySelectedObservable(): void {\r\n    this.pageTocService.pageTocEntrySelected$.pipe(takeUntil(this.unsubscribe)).subscribe((pageTocEntrySelected) => {\r\n      this.selectedAnchor = pageTocEntrySelected;\r\n    });\r\n  }\r\n\r\n  public isSelectedAnchor(anchorId: string): boolean {\r\n    return anchorId === this.selectedAnchor;\r\n  }\r\n\r\n  public setSelectedAnchor(anchorId: string): void {\r\n    this.pageTocService.setAnchorSelected(anchorId);\r\n\r\n    this.selectedAnchor = anchorId;\r\n  }\r\n\r\n  private loadExpenseType(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_EXPENSE_TYPE_MAP).subscribe((results) => {\r\n      this.expenseTypes = results;\r\n    });\r\n  }\r\n\r\n  private loadHolidayStatus(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_ABSENCE_STATUS_MAP).subscribe((results) => {\r\n      this.holidayStatusList = results;\r\n    });\r\n  }\r\n\r\n  public loadAbsenceType(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_ABSENCE_TYPE_MAP).subscribe((results) => {\r\n      this.absenceTypes = results;\r\n    });\r\n  }\r\n\r\n  private loadEvaluationType(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_EVALUATION_TYPE_MAP).subscribe((results) => {\r\n      this.evaluationTypes = results;\r\n    });\r\n  }\r\n\r\n  private loadRequestedbyList(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_TRAINING_ASKED_BY_MAP).subscribe((results) => {\r\n      this.requestedByList = JSON.parse(JSON.stringify(results)) as LabelValue<string>[];\r\n    });\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return ComponentConstants.HR_EMPLOYEE_FORM;\r\n  }\r\n\r\n  public showCategory(index: number): string {\r\n    return this.categoryTypes[index] && this.categoryTypes[index].label;\r\n  }\r\n\r\n  public showHeaderText(col: string): string {\r\n    const headerValue = col.replace('level', '');\r\n    const headerTextObj =\r\n      this.categoryLevels &&\r\n      this.categoryLevels.filter((level) => {\r\n        return level.value === headerValue;\r\n      })[0];\r\n\r\n    return headerTextObj && headerTextObj.label;\r\n  }\r\n\r\n  private initTableColumnField() {\r\n    this.hourlyCostsTableCols = [\r\n      { field: 'costType', alignment: 'left' },\r\n      { field: 'costText', alignment: 'left' }\r\n    ];\r\n\r\n    this.qualificationsTableCols = [\r\n      { field: 'qualificationType', alignment: 'left' },\r\n      { field: 'qualificationTitle', alignment: 'left' },\r\n      { field: 'qualifEmployeeInstitution', alignment: 'left' },\r\n      { field: 'qualifEmployeeStartDate', alignment: 'left' },\r\n      { field: 'qualifEmployeeEndDate', alignment: 'left' },\r\n      { field: 'qualifOngoing', alignment: 'left' }\r\n    ];\r\n\r\n    const getCategoryTypeMap = this.propertiesService.getValue(GenericPropertyConstants.HR_CATEGORY_TYPE_MAP);\r\n    const getCategorylevelMap = this.propertiesService.getValue(GenericPropertyConstants.HR_CATEGORY_LEVEL_MAP);\r\n\r\n    forkJoin([getCategoryTypeMap, getCategorylevelMap]).subscribe((results) => {\r\n      if (results[1] !== null && results[1] !== undefined) {\r\n        results[1].forEach((level) => {\r\n          this.licensesTableCols.push({ field: `level${level.value}`, alignment: 'center' });\r\n        });\r\n        this.categoryLevels = results[1];\r\n      }\r\n\r\n      // reset table checkboxes\r\n      if (results[0] !== null && results[0] !== undefined) {\r\n        this.categoryTypes = results[0];\r\n        results[0].forEach((categoryType) => {\r\n          const obj: EmployeeLicenseCategoryTableDTO = {};\r\n          this.licensesTableCols.forEach((col) => {\r\n            obj[col.field] = false;\r\n          });\r\n          obj.categoryType = categoryType.value;\r\n          this.categoryLevelTableData.push(obj);\r\n        });\r\n      }\r\n    });\r\n\r\n    this.trainingsTableCols = [\r\n      { field: 'trainingName', alignment: 'left' },\r\n      { field: 'trainingStartDate', alignment: 'left' },\r\n      { field: 'trainingEndDate', alignment: 'left' },\r\n      { field: 'trainingPerformed', alignment: 'left' },\r\n      { field: 'trainingAskedBy', alignment: 'left' },\r\n      { field: 'trainingInstructor', alignment: 'left' },\r\n      { field: 'trainingCenter', alignment: 'left' },\r\n      { field: 'trainingComment', alignment: 'left' }\r\n    ];\r\n\r\n    this.evaluationsTableCols = [\r\n      { field: 'evaluationDate', alignment: 'left' },\r\n      { field: 'evaluationType', alignment: 'left' },\r\n      { field: 'evaluator', alignment: 'left' },\r\n      { field: 'evaluationComment', alignment: 'left' }\r\n    ];\r\n\r\n    this.absencesTableCols = [\r\n      { field: 'absenceStartDate', alignment: 'left' },\r\n      { field: 'absenceEndDate', alignment: 'left' },\r\n      { field: 'absenceType', alignment: 'left' },\r\n      { field: 'absenceDescription', alignment: 'left' }\r\n    ];\r\n\r\n    this.holidaysTableCols = [\r\n      { field: 'holidayStartDate', alignment: 'left' },\r\n      { field: 'holidayEndDate', alignment: 'left' },\r\n      { field: 'holidayStatus', alignment: 'left' },\r\n      { field: 'holidayValidator', alignment: 'left' }\r\n    ];\r\n\r\n    this.expensesTableCols = [\r\n      { field: 'expenseDate', alignment: 'left' },\r\n      { field: 'expenseType', alignment: 'left' },\r\n      { field: 'expenseValue', alignment: 'left' },\r\n      { field: 'expenseDescription', alignment: 'left' }\r\n    ];\r\n\r\n    this.medicalExaminationsTableCols = [\r\n      { field: 'visitDate', alignment: 'left' },\r\n      { field: 'visitExpiration', alignment: 'left' },\r\n      { field: 'visitComment', alignment: 'left' }\r\n    ];\r\n\r\n    this.documentsTableCols = [\r\n      { field: 'documentName', alignment: 'left' },\r\n      { field: 'documentCategory', alignment: 'left' },\r\n      { field: 'documentType', alignment: 'left' },\r\n      { field: 'documentContent', alignment: 'left' },\r\n      { field: 'documentPublicationDate', alignment: 'left' }\r\n    ];\r\n\r\n    this.worksTableCols = [\r\n      { field: 'projectNumber', alignment: 'left', width: '10%' },\r\n      { field: 'projectAsset', alignment: 'left', width: '22%' },\r\n      { field: 'workOrder', alignment: 'left', width: '10%' },\r\n      { field: 'originText', alignment: 'left', width: '17%' },\r\n      { field: 'type', alignment: 'left', width: '10%' },\r\n      { field: 'qualif', alignment: 'left', width: '7%' },\r\n      { field: 'description', alignment: 'left', width: '25%' },\r\n      { field: 'statusText', alignment: 'left', width: '6%' }\r\n    ];\r\n\r\n    this.flightsTableCols = [\r\n      { field: 'assetText', alignment: 'left', width: '28%' },\r\n      { field: 'chronoNumber', alignment: 'left', width: '12%' },\r\n      { field: 'missionCode', alignment: 'left', width: '12%' },\r\n      { field: 'flightType', alignment: 'left', width: '12%' },\r\n      { field: 'startDateText', alignment: 'left', width: '12%' },\r\n      { field: 'endDateText', alignment: 'left', width: '12%' },\r\n      { field: 'flightStatus', alignment: 'left', width: '12%' }\r\n\r\n      // { field: 'missionNumber', alignment: 'left' },\r\n      // { field: 'missionDepartureLocation', alignment: 'left' },\r\n      // { field: 'missionArrivalLocation', alignment: 'left' },\r\n      // { field: 'duration', alignment: 'left' },\r\n      // { field: 'ifrDuration', alignment: 'left' },\r\n      // { field: 'cycleNumber', alignment: 'left' },\r\n      // { field: 'engineStartDateText', alignment: 'left' },\r\n      // { field: 'engineStopDateText', alignment: 'left' },\r\n      // { field: 'pilot', alignment: 'left' },\r\n      // { field: 'copilot', alignment: 'left' }\r\n    ];\r\n\r\n    this.acrsEventTableColList = [\r\n      { field: 'eventCode', alignment: 'left', width: '15%' },\r\n      { field: 'eventDate', alignment: 'left', width: '10%' },\r\n      { field: 'asset', alignment: 'left', width: '25%' },\r\n      { field: 'eventDescription', alignment: 'left', width: '40%' },\r\n      { field: 'eventStatus', alignment: 'left', width: '10%' }\r\n    ];\r\n  }\r\n\r\n  public checkValidation(): boolean {\r\n    let isPageValid = false;\r\n    if (\r\n      !!this.employeeFormData.employeeFirstName &&\r\n      !!this.employeeFormData.employeeLastName &&\r\n      !!this.selectedCompany &&\r\n      !!this.employeeFormData.bidtSiteId &&\r\n      !!this.selectedContractEmployeeStartDate &&\r\n      !!this.selectedContractName &&\r\n      !!this.salaryFormData.salaryValue &&\r\n      !!this.salaryFormData.salaryPayPeriod\r\n    ) {\r\n      isPageValid = true;\r\n    }\r\n\r\n    return isPageValid;\r\n  }\r\n\r\n  private loadCountries(): void {\r\n    this.propertiesService.getCountries().subscribe((results) => {\r\n      this.countries = results;\r\n    });\r\n  }\r\n\r\n  private loadContractNames(): void {\r\n    this.employeeFormService.findAllContractNames({}).subscribe((results) => {\r\n      this.contractNameDTOList = results;\r\n      this.contractNames = this.contractNameDTOList.map((element) => {\r\n        let labelValue: LabelValue<string> = {\r\n          label: '',\r\n          value: ''\r\n        };\r\n        if (element.id !== null && element.id !== undefined) {\r\n          labelValue = {\r\n            label: element.contractName || '',\r\n            value: element.id.toString() || ''\r\n          };\r\n        }\r\n\r\n        return labelValue;\r\n      });\r\n    });\r\n  }\r\n\r\n  public loadContractTypes(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_CONTRACT_TYPE_MAP).subscribe((results) => {\r\n      this.contractTypes = results;\r\n    });\r\n  }\r\n\r\n  public loadContractTypesOnChange(): void {\r\n    if (this.selectedContractName) {\r\n      const selectedContractNameObj: BidtContractDTO = this.contractNameDTOList.filter((name) => {\r\n        if (name.id !== null && name.id !== undefined) {\r\n          return name.id.toString() === this.selectedContractName;\r\n        }\r\n\r\n        return false;\r\n      })[0];\r\n\r\n      const contractName =\r\n        this.contractTypes &&\r\n        this.contractTypes.filter((contractType) => {\r\n          return contractType.value === (selectedContractNameObj && selectedContractNameObj.contractType);\r\n        })[0];\r\n\r\n      this.selectedContractTypeName = contractName && contractName.label;\r\n    } else {\r\n      this.selectedContractTypeName = '';\r\n    }\r\n  }\r\n\r\n  private loadSalaryDevices(): void {\r\n    const getCurrenciesObservable = this.propertiesService.getValue(GenericPropertyConstants.CURRENCY_MAP);\r\n    const defaultCurrencyObservable = this.employeeFormService.getLocalCurrency();\r\n\r\n    forkJoin([defaultCurrencyObservable, getCurrenciesObservable]).subscribe((results) => {\r\n      this.salaryDevises = results[1];\r\n      const selectedCurrency: LabelValue<string> =\r\n        this.salaryDevises &&\r\n        this.salaryDevises.filter((currency) => {\r\n          return currency.label === results[0];\r\n        })[0];\r\n      this.salaryFormData.salaryDevise = selectedCurrency.value;\r\n      this.selectedSalaryCurrency = selectedCurrency && selectedCurrency.label;\r\n    });\r\n  }\r\n\r\n  private displaySalaryCurrency(salaryDeviseId?: string): void {\r\n    if (salaryDeviseId !== null && salaryDeviseId !== undefined) {\r\n      const selectedCurrency: LabelValue<string> =\r\n        this.salaryDevises &&\r\n        this.salaryDevises.filter((currency) => {\r\n          return currency.value === salaryDeviseId;\r\n        })[0];\r\n      this.selectedSalaryCurrency = selectedCurrency && selectedCurrency.label;\r\n    }\r\n  }\r\n\r\n  public loadSites(): void {\r\n    this.sites = [];\r\n    if (\r\n      this.selectedCompany !== null &&\r\n      this.selectedCompany !== undefined &&\r\n      this.siteDTOList !== null &&\r\n      this.siteDTOList !== undefined\r\n    ) {\r\n      this.siteDTOList.forEach((element) => {\r\n        if (\r\n          element.bidtCompanyId !== null &&\r\n          element.bidtCompanyId !== undefined &&\r\n          element.bidtCompanyId.toString() === this.selectedCompany\r\n        ) {\r\n          const labelValue: LabelValue<number> = {\r\n            label: `${element.siteCode} - ${element.siteName}`,\r\n            value: element.siteId as number\r\n          };\r\n          this.sites.push(labelValue);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public loadWarehousesBysite(): void {\r\n    if (this.employeeFormData.bidtSiteId) {\r\n      this.warehouses = [];\r\n      const siteId = this.employeeFormData.bidtSiteId.toString();\r\n      this.employeeFormService.findWarehousesBySite(siteId).subscribe((results: BidtWarehouseDTO[]) => {\r\n        if (!!results) {\r\n          this.warehouses = results.map((bidtWarehouseDTO: BidtWarehouseDTO) => {\r\n            return {\r\n              label: bidtWarehouseDTO.whName as string,\r\n              value: bidtWarehouseDTO.wareHouseId as number\r\n            };\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public loadEmployee(): void {\r\n    const companiesObservable = this.employeeFormService.findBidtCompanyByCriteria({});\r\n    const siteObservable = this.employeeFormService.findBidtSiteByCriteria({});\r\n    const periodObservable = this.propertiesService.getValue(GenericPropertyConstants.HR_SALARY_PERIOD_MAP);\r\n\r\n    forkJoin([companiesObservable, siteObservable, periodObservable]).subscribe((results) => {\r\n      const periodIndex = 2;\r\n      this.companies = results[0];\r\n      this.siteDTOList = results[1];\r\n      this.periods = results[periodIndex];\r\n\r\n      this.employeeFormData.bidtSiteId = undefined;\r\n\r\n      if (this.componentData.objectId || this.empID) {\r\n        let employeeTemp: BidtEmployeeDTO = {};\r\n        if (this.componentData.objectId) {\r\n          employeeTemp = {\r\n            id: this.serializationService.deserialize(this.componentData.objectId).id\r\n          };\r\n        } else if (this.empID) {\r\n          employeeTemp = {\r\n            id: this.empID\r\n          };\r\n        }\r\n\r\n        if (employeeTemp.id) {\r\n          this.employeeFormService.getEmployeeDetails(employeeTemp.id).subscribe(\r\n            (result) => {\r\n              this.employeeDetails = result[0];\r\n              if (this.employeeDetails) {\r\n                // make a copy of all tab and section data\r\n                this.employeeFormData = { ...(this.employeeDetails.bidtEmployeeDTO || {}) };\r\n                this.salaryFormData = { ...(this.employeeDetails.bidtSalaryDTO || {}) };\r\n                this.contractFormData = { ...(this.employeeDetails.bidtContractDTO || {}) };\r\n                this.laborTemplateFormData = { ...(this.employeeDetails.bidtLaborTemplateDTO || {}) };\r\n                this.superiorFormData = { ...(this.employeeDetails.bidtSuperiorData || {}) };\r\n                this.licenseFormData = { ...(this.employeeDetails.bidtLicenseDTO || {}) };\r\n\r\n                // set selected site and company\r\n                const selectedSite: BidtSiteDTO =\r\n                  this.siteDTOList &&\r\n                  this.siteDTOList.filter((siteObj) => {\r\n                    return (\r\n                      this.employeeDetails.bidtEmployeeDTO &&\r\n                      siteObj.siteId === this.employeeDetails.bidtEmployeeDTO.bidtSiteId\r\n                    );\r\n                  })[0];\r\n\r\n                this.selectedCompany =\r\n                  selectedSite && selectedSite.bidtCompanyId !== undefined && selectedSite.bidtCompanyId !== null\r\n                    ? selectedSite.bidtCompanyId.toString()\r\n                    : undefined;\r\n\r\n                // load sites for selected company\r\n                this.loadSites();\r\n\r\n                // load warehouses\r\n                this.loadWarehousesBysite();\r\n\r\n                if (this.employeeFormData.employeeBirthday) {\r\n                  this.employeeFormData.employeeBirthday = new Date(this.employeeFormData.employeeBirthday);\r\n                }\r\n                if (this.employeeFormData.contractEmployeeStartDate) {\r\n                  this.selectedContractEmployeeStartDate = new Date(this.employeeFormData.contractEmployeeStartDate);\r\n                }\r\n                if (this.employeeFormData.contractEmployeeEndDate) {\r\n                  this.selectedContractEmployeeEndDate = new Date(this.employeeFormData.contractEmployeeEndDate);\r\n                }\r\n                if (this.licenseFormData.licenseIssueDate) {\r\n                  this.selectedLicenseIssueDate = new Date(this.licenseFormData.licenseIssueDate);\r\n                }\r\n                if (this.licenseFormData.licenseValidatingDate) {\r\n                  this.selectedLicenseValidatingDate = new Date(this.licenseFormData.licenseValidatingDate);\r\n                }\r\n\r\n                if (this.laborTemplateFormData.ltName) {\r\n                  this.selectedWorkTemplateName = this.laborTemplateFormData.ltName;\r\n                  this.calculateTemplateData();\r\n                }\r\n                const contractName: LabelValue<string> =\r\n                  this.contractNames &&\r\n                  this.contractNames.filter((contractObj) => {\r\n                    return contractObj.label === this.contractFormData.contractName;\r\n                  })[0];\r\n                this.selectedContractName = contractName && contractName.value;\r\n                this.initOnEmployeeLoad();\r\n              }\r\n            },\r\n            () => {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadEmployee'));\r\n            }\r\n          );\r\n        }\r\n      } else {\r\n        // reset dropdowns and textboxes values when employee is being created\r\n        this.employeeFormData = {};\r\n        this.salaryFormData = {\r\n          salaryInternalCost: '0',\r\n          salaryValue: '0'\r\n        };\r\n        this.contractFormData = {};\r\n        this.superiorFormData = {};\r\n        this.selectedCompany = undefined;\r\n        this.sites = [];\r\n        this.warehouses = [];\r\n        this.selectedContractEmployeeEndDate = undefined;\r\n        this.selectedContractEmployeeStartDate = undefined;\r\n        this.selectedContractName = undefined;\r\n        this.selectedContractTypeName = undefined;\r\n        if (this.periods.length > 0) {\r\n          this.salaryFormData.salaryPayPeriod = this.periods[0].value;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public initQualificationRenewalDates(): void {\r\n    this.qualificationRenewalEndDateFilter = new Date();\r\n    this.qualificationRenewalStartDateFilter = new Date();\r\n    this.qualificationRenewalStartDateFilter.setFullYear(this.qualificationRenewalEndDateFilter.getFullYear() - 1);\r\n  }\r\n\r\n  public onExportWorks(): void {\r\n    const dataToExport: WorkRowExport[] = [];\r\n    this.worksDisplayed.forEach((elem: WorkRow) => {\r\n      dataToExport.push({\r\n        projectNumber: elem.projectNumber,\r\n        projectAsset: elem.projectAsset,\r\n        workOrder: elem.workOrder,\r\n        originText: elem.originText,\r\n        type: elem.type,\r\n        qualif: elem.qualif,\r\n        description: elem.description,\r\n        statusText: elem.statusText\r\n      });\r\n    });\r\n    const name = `${this.employeeFormData.employeeLastName}-${this.employeeFormData.employeeFirstName}-Works-List`;\r\n    this.exportService.toExcel(dataToExport, name, this.componentData.componentId);\r\n  }\r\n\r\n  private initOnEmployeeLoad(): void {\r\n    this.isLoadingAcrsEventTable = true;\r\n\r\n    this.loadContractTypesOnChange();\r\n    this.displaySalaryCurrency(this.salaryFormData.salaryDevise);\r\n    this.salaryFormData.salaryInternalCost = this.salaryFormData.salaryInternalCost || '0';\r\n    this.salaryFormData.salaryValue = this.salaryFormData.salaryValue || '0';\r\n\r\n    if (this.employeeDetails.bidtEmployeeDTO && this.employeeDetails.bidtEmployeeDTO.id) {\r\n      this.isLoadingHourlyCostTable = true;\r\n      this.employeeFormService\r\n        .findHourlyCostsByEmployeeId(this.employeeDetails.bidtEmployeeDTO.id)\r\n        .subscribe((results) => {\r\n          this.bidtHourlyCostDisplayed = results || [];\r\n          this.isLoadingHourlyCostTable = false;\r\n        });\r\n\r\n      this.bidtQualifEmployeeDisplayed = [];\r\n      this.isLoadingQualificationTable = true;\r\n      this.employeeFormService\r\n        .findQualificationsByEmployeeId(this.employeeDetails.bidtEmployeeDTO.id)\r\n        .subscribe((results) => {\r\n          this.bidtQualifEmployeeDisplayed = [];\r\n          if (results !== null && results !== undefined) {\r\n            results.forEach((obj) => {\r\n              this.bidtQualifEmployeeDisplayed.push(this.convertToQualificationRowObj(obj));\r\n            });\r\n          }\r\n          this.isLoadingQualificationTable = false;\r\n        });\r\n      const licenseId: BidtCategoryDTO = {\r\n        bidtLicenseId: this.employeeDetails.bidtEmployeeDTO.bidtLicenseId\r\n      };\r\n      this.employeeFormService.findByLicenseId(licenseId).subscribe((results) => {\r\n        this.bidtCategoryDisplayed = results || [];\r\n\r\n        this.categoryLevelTableData.forEach((rowObj) => {\r\n          this.bidtCategoryDisplayed.forEach((categoryObj) => {\r\n            if (rowObj.categoryType === categoryObj.categoryType) {\r\n              rowObj[`level${categoryObj.categoryLevel}`] = true;\r\n            }\r\n          });\r\n        });\r\n      });\r\n\r\n      this.loadQualificationRenewal();\r\n\r\n      this.bidtTrainingDisplayed = [];\r\n      this.isLoadingTrainingTable = true;\r\n      this.employeeFormService\r\n        .findTrainingByEmployeeId(this.employeeDetails.bidtEmployeeDTO.id)\r\n        .subscribe((results) => {\r\n          this.bidtTrainingDisplayed = [];\r\n          if (results) {\r\n            if (results !== null && results !== undefined) {\r\n              results.forEach((obj) => {\r\n                this.bidtTrainingDisplayed.push(this.convertToTrainingRowObj(obj));\r\n              });\r\n            }\r\n          }\r\n          this.isLoadingTrainingTable = false;\r\n        });\r\n\r\n      this.isLoadingEvaluationTable = true;\r\n      this.bidtEvaluationDisplayed = [];\r\n      this.employeeFormService\r\n        .findEvaluationsByEmployeeId(this.employeeDetails.bidtEmployeeDTO.id)\r\n        .subscribe((results) => {\r\n          this.bidtEvaluationDisplayed = [];\r\n          if (results !== null && results !== undefined) {\r\n            results.forEach((obj) => {\r\n              this.bidtEvaluationDisplayed.push(this.convertToEvaluationRowObj(obj));\r\n            });\r\n          }\r\n          this.isLoadingEvaluationTable = false;\r\n        });\r\n\r\n      this.isLoadingAbsenceTable = true;\r\n      this.bidtAbsenceDisplayed = [];\r\n      this.employeeFormService.findAbsenceByEmployeeId(this.employeeDetails.bidtEmployeeDTO.id).subscribe((results) => {\r\n        this.bidtAbsenceDisplayed = [];\r\n        if (results !== null && results !== undefined) {\r\n          results.forEach((obj) => {\r\n            this.bidtAbsenceDisplayed.push(this.convertToAbsenceRowObj(obj));\r\n          });\r\n        }\r\n        this.isLoadingAbsenceTable = false;\r\n      });\r\n\r\n      this.isLoadingHolidaysTable = true;\r\n      this.bidtHolidayDisplayed = [];\r\n      this.employeeFormService\r\n        .findHolidaysByEmployeeId(this.employeeDetails.bidtEmployeeDTO.id)\r\n        .subscribe((results) => {\r\n          this.bidtHolidayDisplayed = [];\r\n          if (results !== null && results !== undefined) {\r\n            results.forEach((obj) => {\r\n              this.bidtHolidayDisplayed.push(this.convertToHolidayRowObj(obj));\r\n            });\r\n          }\r\n          this.isLoadingHolidaysTable = false;\r\n        });\r\n\r\n      this.isLoadingExpenseTable = true;\r\n      this.bidtExpenseDisplayed = [];\r\n      this.employeeFormService.findExpenseByEmployeeId(this.employeeDetails.bidtEmployeeDTO.id).subscribe((results) => {\r\n        this.bidtExpenseDisplayed = [];\r\n        if (results !== null && results !== undefined) {\r\n          results.forEach((obj) => {\r\n            this.bidtExpenseDisplayed.push(this.convertToExpenseRowObj(obj));\r\n          });\r\n        }\r\n        this.isLoadingExpenseTable = false;\r\n      });\r\n\r\n      this.isLoadingMedicalExaminationTable = true;\r\n      this.bidtMedicalExaminationDisplayed = [];\r\n      this.employeeFormService\r\n        .findByEmployeeIdMedicalEmployee(this.employeeDetails.bidtEmployeeDTO.id)\r\n        .subscribe((results) => {\r\n          this.bidtMedicalExaminationDisplayed = [];\r\n          if (results !== null && results !== undefined) {\r\n            results.forEach((obj) => {\r\n              this.bidtMedicalExaminationDisplayed.push(this.convertToMedicalExaminationRowObj(obj));\r\n            });\r\n          }\r\n          this.isLoadingMedicalExaminationTable = false;\r\n        });\r\n\r\n      this.isLoadingDocumentTable = true;\r\n      this.bidtDocumentDisplayed = [];\r\n      this.employeeFormService\r\n        .findDocumentByEmployeeId(this.employeeDetails.bidtEmployeeDTO.id)\r\n        .subscribe((results) => {\r\n          this.bidtDocumentDisplayed = [];\r\n          if (results !== null && results !== undefined) {\r\n            results.forEach((obj) => {\r\n              this.bidtDocumentDisplayed.push(this.convertToDocumentRowObj(obj));\r\n            });\r\n          }\r\n          this.isLoadingDocumentTable = false;\r\n        });\r\n\r\n      this.resetWorkTableFilters();\r\n      this.resetFlightTableFilters();\r\n      this.isLoadingWorksTable = true;\r\n      this.isLoadingFlightsTable = true;\r\n      this.worksDisplayed = [];\r\n      this.flightsDisplayed = [];\r\n\r\n      const acrsEventListInput: FindAcrsEventListByUserInput = {\r\n        status: AWPropertiesConstants.EVENT_STATUS_CLOSED_KEY,\r\n        typeCode: BidoNotificationTypeConstants.ACRS_TYPE_CODE,\r\n        user: `${this.employeeFormData.employeeFirstName} ${this.employeeFormData.employeeLastName}`\r\n      };\r\n\r\n      forkJoin([\r\n        this.employeeFormService.getWorksByEmployee(this.searchCriteriaWork),\r\n        this.employeeFormService.getFlightsByEmployee(this.searchCriteriaFlight),\r\n        this.employeeFormService.findAcrsEventListByUser(acrsEventListInput)\r\n      ])\r\n        .pipe(\r\n          finalize(() => {\r\n            this.isLoadingAcrsEventTable = true;\r\n          })\r\n        )\r\n        .subscribe((results) => {\r\n          this.worksDisplayed = [];\r\n          this.flightsDisplayed = [];\r\n          this.isLoadingWorksTable = false;\r\n          this.isLoadingFlightsTable = false;\r\n\r\n          if (results[0] !== null && results[0] !== undefined && results[0].length > 0) {\r\n            results[0].forEach((obj, index) => {\r\n              this.worksDisplayed.push(this.convertToWorkRowObj(obj, index));\r\n            });\r\n          }\r\n\r\n          if (results[1] !== null && results[1] !== undefined && results[1].length > 0) {\r\n            results[1].forEach((obj) => {\r\n              this.flightsDisplayed.push(this.convertToFlightRowObj(obj));\r\n            });\r\n          }\r\n\r\n          if (ObjectUtils.isDefined(results[2])) {\r\n            this.acrsEventTable.moreResults = results[2].moreResults;\r\n            this.acrsEventTable.list = ListUtils.orEmpty(results[2].list).map((notification) => {\r\n              const matchingStatus = this.eventStatusList.find((elt) => elt.value === notification.status);\r\n\r\n              const acrsEventRow: AcrsEventRow = {\r\n                asset: '',\r\n                eventCode: StringUtils.orEmpty(notification.notificationCode),\r\n                eventDate: this.dateService.dateToString(notification.reportingDate),\r\n                eventDescription: StringUtils.orEmpty(notification.notificationDescription),\r\n                eventStatus: matchingStatus ? matchingStatus.label : StringUtils.orEmpty(notification.status),\r\n                _obj: notification\r\n              };\r\n\r\n              this.employeeFormService\r\n                .findBidoEquipment({ equipmentCode: notification.equipmentCode })\r\n                .subscribe((equipment) => {\r\n                  acrsEventRow.asset = BidoEquipmentUtils.toString(equipment);\r\n                });\r\n\r\n              return acrsEventRow;\r\n            });\r\n          }\r\n\r\n          this.showWorkTab = !!results[0].length;\r\n          this.showFlightTab = !!results[1].length;\r\n          this.showAcrsEventTab = results[2].list.length > 0;\r\n          this.createContentTable();\r\n        });\r\n    }\r\n  }\r\n\r\n  private loadQualificationRenewal() {\r\n    const criteria: FindWorksInformationByCriteriaInput = {\r\n      employeeId: this.employeeFormData.id,\r\n      dateFrom: this.qualificationRenewalStartDateFilter,\r\n      dateTo: this.qualificationRenewalEndDateFilter\r\n    };\r\n    this.employeeFormService.findWorksInformationByCriteria(criteria).subscribe((results) => {\r\n      if (results !== null && results !== undefined) {\r\n        this.qualificationRenewalTableDataSource.setData(results);\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadWorks() {\r\n    this.isLoadingWorksTable = true;\r\n    this.worksDisplayed = [];\r\n    this.employeeFormService.getWorksByEmployee(this.searchCriteriaWork).subscribe((results) => {\r\n      results.forEach((obj, index) => {\r\n        this.worksDisplayed.push(this.convertToWorkRowObj(obj, index));\r\n      });\r\n      this.isLoadingWorksTable = false;\r\n    });\r\n  }\r\n\r\n  private loadFlights() {\r\n    this.isLoadingFlightsTable = true;\r\n    this.flightsDisplayed = [];\r\n    this.employeeFormService.getFlightsByEmployee(this.searchCriteriaFlight).subscribe((results) => {\r\n      results.forEach((obj) => {\r\n        this.flightsDisplayed.push(this.convertToFlightRowObj(obj));\r\n      });\r\n      this.isLoadingFlightsTable = false;\r\n    });\r\n  }\r\n\r\n  private loadWorktemplateNames(): void {\r\n    this.workTemplateNames = [];\r\n    this.employeeFormService.findAllWorkTemplateNames().subscribe((results) => {\r\n      if (results !== null && results !== undefined && results.list !== null && results.list !== undefined) {\r\n        results.list.forEach((element) => {\r\n          if (element !== null && element !== undefined) {\r\n            element.ltHourPerWeek = element.ltHourPerWeek && this.getHourWithSecond(element.ltHourPerWeek);\r\n            element.ltNbHourWd = element.ltNbHourWd && this.getHourWithSecond(element.ltNbHourWd);\r\n            element.ltNbHourWe = element.ltNbHourWe && this.getHourWithSecond(element.ltNbHourWe);\r\n            const labelValue: LabelValue<string> = {\r\n              label: element.ltName || '',\r\n              value: element.ltName || ''\r\n            };\r\n            this.workTemplateNames.push(labelValue);\r\n          }\r\n        });\r\n        this.workTemplateNameList = results.list || [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public cancelEmployee(): void {\r\n    if (this.isWriteOpenMode) {\r\n      this.updateOpenMode(ComponentOpenMode.Read);\r\n    }\r\n    this.reloadEmployee();\r\n    this.resetSelectedRow();\r\n  }\r\n\r\n  public editEmployee(): void {\r\n    this.checkValidation();\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public editEmployeeCard(): void {\r\n    this.employeeFormService.generateEmployeeCard(this.employeeFormData).subscribe(\r\n      (result) => {\r\n        const file: FileContent = result || {};\r\n        if (!!file.fileContent && !!file.fileName) {\r\n          const byteCharacters = atob(file.fileContent.toString());\r\n          const byteNumbers = new Array(byteCharacters.length);\r\n          for (let i = 0; i < byteCharacters.length; i++) {\r\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n          }\r\n\r\n          const fileURL = URL.createObjectURL(new Blob([new Uint8Array(byteNumbers)], { type: 'application/pdf' }));\r\n          window.open(fileURL);\r\n        }\r\n      },\r\n      (error) => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnSaveEmployee'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public reloadEmployee(): void {\r\n    this.loadEmployee();\r\n  }\r\n\r\n  public saveEmployee(): void {\r\n    if (!this.checkValidation()) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n\r\n      return;\r\n    }\r\n    // this.employeeFormData.employeeBirthday = new Date(this.employeeFormData.employeeBirthday);\r\n    this.employeeFormData.contractEmployeeStartDate =\r\n      this.selectedContractEmployeeStartDate && this.selectedContractEmployeeStartDate.toISOString();\r\n    this.employeeFormData.contractEmployeeEndDate =\r\n      this.selectedContractEmployeeEndDate && this.selectedContractEmployeeEndDate.toISOString();\r\n    this.contractFormData =\r\n      this.contractNameDTOList &&\r\n      this.contractNameDTOList.filter((contract) => {\r\n        return contract.id && contract.id.toString() === this.selectedContractName;\r\n      })[0];\r\n\r\n    this.licenseFormData.licenseValidatingDate =\r\n      this.selectedLicenseValidatingDate && this.selectedLicenseValidatingDate.toISOString();\r\n\r\n    this.licenseFormData.licenseIssueDate =\r\n      this.selectedLicenseIssueDate && this.selectedLicenseIssueDate.toISOString();\r\n\r\n    const saveEmployeeObj: SaveEmployeesInput = {\r\n      bidtEmployeeDTO: this.employeeFormData,\r\n      bidtSalaryDTO: this.salaryFormData,\r\n      bidContractDTO: this.contractFormData,\r\n      bidtLaborTemplateDTO: this.laborTemplateFormData,\r\n      superiorId: this.superiorFormData.id,\r\n      bidtLicenseDTO: this.licenseFormData,\r\n      bidtCategoryDTO: [],\r\n      bidtTrainingDTO: [],\r\n      bidtEvaluationDTO: [],\r\n      bidtMedicalVisitDTO: [],\r\n      bidtAbsenceDTO: [],\r\n      bidtHolidayDTO: [],\r\n      bidtExpenseDTO: [],\r\n      bidtHourlyCostDTO: [],\r\n      bidtQualifEmployeeDTO: [],\r\n      bidtDocumentDTO: []\r\n    };\r\n\r\n    if (this.bidtHourlyCostDisplayed.length > 0) {\r\n      this.bidtHourlyCostDisplayed.forEach((hourlyCost) => {\r\n        if (hourlyCost.bitHourlyCostDTO) {\r\n          hourlyCost.bitHourlyCostDTO.bidtEmployeeId = this.employeeFormData.id;\r\n          saveEmployeeObj.bidtHourlyCostDTO = saveEmployeeObj.bidtHourlyCostDTO || [];\r\n          saveEmployeeObj.bidtHourlyCostDTO.push(hourlyCost.bitHourlyCostDTO);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.bidtQualifEmployeeDisplayed.length > 0) {\r\n      this.bidtQualifEmployeeDisplayed.forEach((qualif) => {\r\n        if (qualif._obj.bidtQualifEmployeeDTO) {\r\n          qualif._obj.bidtQualifEmployeeDTO.bidtEmployeeId = this.employeeFormData.id;\r\n          saveEmployeeObj.bidtQualifEmployeeDTO = saveEmployeeObj.bidtQualifEmployeeDTO || [];\r\n          saveEmployeeObj.bidtQualifEmployeeDTO.push(qualif._obj.bidtQualifEmployeeDTO);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.bidtTrainingDisplayed.length > 0) {\r\n      this.bidtTrainingDisplayed.forEach((training) => {\r\n        training._obj.bidtEmployeeId = this.employeeFormData.id;\r\n        const typeValue: LabelValue<string> =\r\n          this.requestedByList &&\r\n          this.requestedByList.filter((requestor) => {\r\n            return requestor.label === training.trainingAskedBy;\r\n          })[0];\r\n        training._obj.trainingAskedBy = typeValue && typeValue.value;\r\n        saveEmployeeObj.bidtTrainingDTO = saveEmployeeObj.bidtTrainingDTO || [];\r\n        saveEmployeeObj.bidtTrainingDTO.push(training._obj);\r\n      });\r\n    }\r\n\r\n    if (this.bidtMedicalExaminationDisplayed.length > 0) {\r\n      this.bidtMedicalExaminationDisplayed.forEach((medicalExam) => {\r\n        medicalExam._obj.bidtEmployeeId = this.employeeFormData.id;\r\n        saveEmployeeObj.bidtMedicalVisitDTO = saveEmployeeObj.bidtMedicalVisitDTO || [];\r\n        saveEmployeeObj.bidtMedicalVisitDTO.push(medicalExam._obj);\r\n      });\r\n    }\r\n\r\n    if (this.bidtExpenseDisplayed.length > 0) {\r\n      this.bidtExpenseDisplayed.forEach((expense) => {\r\n        expense._obj.bidtEmployeeId = this.employeeFormData.id;\r\n        const typeValue: LabelValue<string> =\r\n          this.expenseTypes &&\r\n          this.expenseTypes.filter((expenseType) => {\r\n            return expenseType.label === expense.expenseType;\r\n          })[0];\r\n        expense._obj.expenseType = typeValue && typeValue.value;\r\n        saveEmployeeObj.bidtExpenseDTO = saveEmployeeObj.bidtExpenseDTO || [];\r\n        saveEmployeeObj.bidtExpenseDTO.push(expense._obj);\r\n      });\r\n    }\r\n\r\n    if (this.bidtAbsenceDisplayed.length > 0) {\r\n      this.bidtAbsenceDisplayed.forEach((absence) => {\r\n        absence._obj.bidtEmployeeByBidtEmployeeId = this.employeeFormData.id;\r\n        const typeValue: LabelValue<string> =\r\n          this.absenceTypes &&\r\n          this.absenceTypes.filter((type) => {\r\n            return type.label === absence.absenceType;\r\n          })[0];\r\n        absence._obj.absenceType = typeValue && typeValue.value;\r\n        saveEmployeeObj.bidtAbsenceDTO = saveEmployeeObj.bidtAbsenceDTO || [];\r\n        saveEmployeeObj.bidtAbsenceDTO.push(absence._obj);\r\n      });\r\n    }\r\n\r\n    if (this.bidtHolidayDisplayed.length > 0) {\r\n      this.bidtHolidayDisplayed.forEach((holiday) => {\r\n        const holidayStatusValue: LabelValue<string> =\r\n          this.holidayStatusList &&\r\n          this.holidayStatusList.filter((status) => {\r\n            return status.label === holiday.holidayStatus;\r\n          })[0];\r\n        const holidayStatus = holidayStatusValue && holidayStatusValue.value;\r\n\r\n        const absenceHoliday: BidtAbsenceDTO = {\r\n          bidtEmployeeByBidtEmployeeId: this.employeeFormData.id,\r\n          absenceStartDate: holiday._obj.holidayStartDate,\r\n          absenceEndDate: holiday._obj.holidayEndDate,\r\n          absenceStatus: holidayStatus,\r\n          bidtEmployeeByBidtEmployeeId2Id: holiday._obj.bidtEmployeeByBidtEmployeeId2Id\r\n        };\r\n        saveEmployeeObj.bidtHolidayDTO = saveEmployeeObj.bidtHolidayDTO || [];\r\n        saveEmployeeObj.bidtHolidayDTO.push(absenceHoliday);\r\n      });\r\n    }\r\n\r\n    if (this.bidtEvaluationDisplayed.length > 0) {\r\n      this.bidtEvaluationDisplayed.forEach((evaluation) => {\r\n        if (evaluation._obj.bidtEvaluationDTO !== null && evaluation._obj.bidtEvaluationDTO !== undefined) {\r\n          evaluation._obj.bidtEvaluationDTO.bidtEmployeeByBidtEmployeeId = this.employeeFormData.id;\r\n\r\n          const evaluationTypeValue: LabelValue<string> =\r\n            this.evaluationTypes &&\r\n            this.evaluationTypes.filter((type) => {\r\n              if (evaluation._obj.bidtEvaluationDTO) {\r\n                return type.label === evaluation._obj.bidtEvaluationDTO.evaluationType;\r\n              }\r\n\r\n              return false;\r\n            })[0];\r\n          evaluation._obj.bidtEvaluationDTO.evaluationType = evaluationTypeValue && evaluationTypeValue.value;\r\n          saveEmployeeObj.bidtEvaluationDTO = saveEmployeeObj.bidtEvaluationDTO || [];\r\n          saveEmployeeObj.bidtEvaluationDTO.push(evaluation._obj.bidtEvaluationDTO);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.bidtDocumentDisplayed.length > 0) {\r\n      this.bidtDocumentDisplayed.forEach((doc) => {\r\n        doc._obj.bidtEmployeeId = this.employeeFormData.id;\r\n        saveEmployeeObj.bidtDocumentDTO = saveEmployeeObj.bidtDocumentDTO || [];\r\n        saveEmployeeObj.bidtDocumentDTO.push(doc._obj);\r\n      });\r\n    }\r\n\r\n    this.categoryLevelTableData.forEach((rowObj) => {\r\n      this.licensesTableCols.forEach((colObj) => {\r\n        if (rowObj[colObj.field] === true) {\r\n          const bidtCategoryDTOObj: BidtCategoryDTO = {\r\n            bidtLicenseId: this.employeeFormData.bidtLicenseId,\r\n            categoryType: rowObj.categoryType,\r\n            categoryLevel: colObj.field.replace('level', '')\r\n          };\r\n          saveEmployeeObj.bidtCategoryDTO = saveEmployeeObj.bidtCategoryDTO || [];\r\n          saveEmployeeObj.bidtCategoryDTO.push(bidtCategoryDTOObj);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.showSaveSpinner = true;\r\n    this.employeeFormService\r\n      .saveEmployees(saveEmployeeObj)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.showSaveSpinner = false;\r\n        })\r\n      )\r\n      .subscribe((result) => {\r\n        if (this.isCreateOpenMode) {\r\n          this.empID = result;\r\n          this.employeeFormData.id = result;\r\n        }\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnSaveEmployee'));\r\n        this.loadEmployee();\r\n        if (this.isCreateOpenMode) {\r\n          // In order to show tabs\r\n          this.componentData.objectId = this.serializationService.serialize(this.employeeFormData);\r\n          this.employeeName = `${this.employeeFormData.employeeFirstName} ${this.employeeFormData.employeeLastName}`;\r\n          this.displayComponentContext(this.employeeName, this.isCreateOpenMode);\r\n          this.updateOpenMode(ComponentOpenMode.Read);\r\n          this.createContentTable();\r\n        }\r\n      });\r\n\r\n    this.resetSelectedRow();\r\n  }\r\n\r\n  public openSuperiorPopup(): void {\r\n    this.showSuperiorPopup = !this.isReadOpenMode ? true : false;\r\n  }\r\n\r\n  public refreshSuperior(): void {\r\n    this.superiorFormData = {};\r\n  }\r\n\r\n  public setSelectedSuperior(superior: Event): void {\r\n    this.superiorFormData = superior as BidtEmployeeDTO;\r\n  }\r\n\r\n  public openWorkTemplateTab(): void {\r\n    this.currentTabId = this.tabWorkTemplateId;\r\n  }\r\n  public openHourlyCostsTab(): void {\r\n    this.currentTabId = this.tabHourlyCostsId;\r\n  }\r\n  public openQualificationTab(): void {\r\n    this.currentTabId = this.tabQualificationId;\r\n  }\r\n  public openLicenseTab(): void {\r\n    this.currentTabId = this.tabLicenseId;\r\n  }\r\n  public openTrainingTab(): void {\r\n    this.currentTabId = this.tabTrainingId;\r\n  }\r\n  public openEvaluationTab(): void {\r\n    this.currentTabId = this.tabEvaluationId;\r\n  }\r\n  public openAbsenceTab(): void {\r\n    this.currentTabId = this.tabAbsenceId;\r\n  }\r\n  public openHolidaysTab(): void {\r\n    this.currentTabId = this.tabHolidaysId;\r\n  }\r\n  public openExpenseTab(): void {\r\n    this.currentTabId = this.tabExpenseId;\r\n  }\r\n  public openMedicalExaminationTab(): void {\r\n    this.currentTabId = this.tabMedicalExaminationId;\r\n  }\r\n\r\n  /**\r\n   * Convert template form data hours into second on load\r\n   */\r\n  private calculateTemplateData(): void {\r\n    this.laborTemplateFormData.ltHourPerWeek =\r\n      this.laborTemplateFormData.ltHourPerWeek && this.getHourWithSecond(this.laborTemplateFormData.ltHourPerWeek);\r\n    this.laborTemplateFormData.ltNbHourWd =\r\n      this.laborTemplateFormData.ltNbHourWd && this.getHourWithSecond(this.laborTemplateFormData.ltNbHourWd);\r\n    this.laborTemplateFormData.ltNbHourWe =\r\n      this.laborTemplateFormData.ltNbHourWe && this.getHourWithSecond(this.laborTemplateFormData.ltNbHourWe);\r\n  }\r\n\r\n  public setWorkTemplatedata(): void {\r\n    if (this.selectedWorkTemplateName) {\r\n      this.laborTemplateFormData =\r\n        this.workTemplateNameList &&\r\n        this.workTemplateNameList.filter((template) => {\r\n          return template.ltName === this.selectedWorkTemplateName;\r\n        })[0];\r\n    } else {\r\n      this.laborTemplateFormData = {};\r\n    }\r\n  }\r\n\r\n  /****\r\n   * Convert hour into second\r\n   */\r\n  private getHourWithSecond(valueInSecond: number): number {\r\n    if (valueInSecond !== null && valueInSecond !== undefined) {\r\n      const second = 3600;\r\n\r\n      return valueInSecond / second;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Documents Tab\r\n   ***********************************************************************************/\r\n  public openDocumentsTab(): void {\r\n    this.currentTabId = this.tabDocumentsId;\r\n  }\r\n\r\n  /*\r\n        Documents handler functions\r\n    */\r\n  private addNewDocument(newDocument: BidtDocumentDTO) {\r\n    const searchInDisplayedList = this.bidtDocumentDisplayed.find(\r\n      (value) => value.documentName === newDocument.documentName\r\n    );\r\n    if (!searchInDisplayedList) {\r\n      this.bidtDocumentAddedList.push(newDocument);\r\n      this.bidtDocumentDisplayed.push(this.convertToDocumentRowObj(newDocument));\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('errorFileAlreadyExist'));\r\n    }\r\n  }\r\n  public deleteSelectedDocuments() {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: 'global.confirmSelectedDataDelete',\r\n      accept: () => {\r\n        this.selectedDocuments.forEach((element) => {\r\n          const searchInAddedList = this.bidtDocumentAddedList.find(\r\n            (value) => value.documentName === element.documentName\r\n          );\r\n          const searchInUpdatedList = this.bidtDocumentUpdatedList.find(\r\n            (value) => value.documentName === element.documentName\r\n          );\r\n          if (searchInAddedList) {\r\n            const indexInAddedList = this.bidtDocumentAddedList.indexOf(searchInAddedList);\r\n            this.bidtDocumentAddedList.splice(indexInAddedList, 1);\r\n          } else if (searchInUpdatedList) {\r\n            const indexInUpdatedList = this.bidtDocumentUpdatedList.indexOf(searchInUpdatedList);\r\n            this.bidtDocumentUpdatedList.splice(indexInUpdatedList, 1);\r\n            this.bidtDocumentDeletedList.push(element._obj);\r\n          } else {\r\n            this.bidtDocumentDeletedList.push(element._obj);\r\n          }\r\n          const indexInDisplayedList = this.bidtDocumentDisplayed.indexOf(element);\r\n          this.bidtDocumentDisplayed.splice(indexInDisplayedList, 1);\r\n        });\r\n        this.bidtDocumentDeletedList = [...this.bidtDocumentDeletedList];\r\n        this.selectedDocuments = [];\r\n      }\r\n    });\r\n  }\r\n  public updateDocument(updatedDocument: BidtDocumentDTO) {\r\n    const previousDocumentObject = this.bidtDocumentDisplayed[this.currentDocumentIndex];\r\n    const searchInAddedList = this.bidtDocumentAddedList.find(\r\n      (value) => value.documentName === previousDocumentObject.documentName\r\n    );\r\n    const searchInUpdatedList = this.bidtDocumentUpdatedList.find(\r\n      (value) => value.documentCode === previousDocumentObject._obj.documentCode\r\n    );\r\n    if (searchInAddedList) {\r\n      const indexInAddedList = this.bidtDocumentAddedList.indexOf(searchInAddedList);\r\n      this.bidtDocumentAddedList[indexInAddedList] = updatedDocument;\r\n    } else if (searchInUpdatedList) {\r\n      const indexInUpdatedList = this.bidtDocumentUpdatedList.indexOf(searchInUpdatedList);\r\n      this.bidtDocumentUpdatedList[indexInUpdatedList] = updatedDocument;\r\n    } else {\r\n      this.bidtDocumentUpdatedList.push(updatedDocument);\r\n    }\r\n    this.bidtDocumentDisplayed[this.currentDocumentIndex] = this.convertToDocumentRowObj(updatedDocument);\r\n    this.selectedDocuments = [];\r\n  }\r\n\r\n  // File handler utilities\r\n  public showDocExtension(document: BidtDocumentDTO): string {\r\n    return FileUtils.getExtension(document.documentName).toUpperCase();\r\n  }\r\n\r\n  public showDocSize(document: BidtDocumentDTO): string {\r\n    return document.documentContent ? FileUtils.getFormattedSize(document.documentContent.length) : '';\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (event.files) {\r\n      const file: File = event.files[0];\r\n      FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n        if (fileContent) {\r\n          const document: BidtDocumentDTO = {\r\n            documentContent: fileContent,\r\n            documentName: file.name,\r\n            documentPublicationDate: new Date()\r\n          };\r\n\r\n          this.addNewDocument(document);\r\n        }\r\n      });\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public editDocument(): void {\r\n    if (this.selectedDocuments.length === 1) {\r\n      this.currentDocumentIndex = this.bidtDocumentDisplayed.findIndex((document) => {\r\n        return document === this.selectedDocuments[0];\r\n      });\r\n\r\n      this.currentDocument = { ...this.selectedDocuments[0]._obj };\r\n      this.isReadOnlyDocumentDialog = false;\r\n      if (!this.currentDocument.documentSource) {\r\n        this.showDocumentDialog = true;\r\n      } else {\r\n        this.showDocumentUrlDialog = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public openDocument(): void {\r\n    if (this.selectedDocuments.length === 1) {\r\n      this.currentDocument = this.selectedDocuments[0]._obj;\r\n      this.isReadOnlyDocumentDialog = true;\r\n      if (!this.currentDocument.documentSource) {\r\n        this.showDocumentDialog = true;\r\n      } else {\r\n        this.showDocumentUrlDialog = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public downloadFiles(): void {\r\n    this.selectedDocuments.forEach((document) => {\r\n      if (!!document._obj.documentContent) {\r\n        FileUtils.downloadFile(document._obj.documentContent, document.documentName);\r\n      }\r\n    });\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Medical Examination Tab\r\n   ***********************************************************************************/\r\n  public openMedicalExamination(): void {\r\n    this.isReadOnlyMedicalExaminationDialog = true;\r\n    if (this.selectedMedicalExaminations.length === 1) {\r\n      this.currentMedicalExaminations = { ...this.selectedMedicalExaminations[0]._obj };\r\n      this.currentMedicalExaminationIndex = this.bidtMedicalExaminationDisplayed.indexOf(\r\n        this.selectedMedicalExaminations[0]\r\n      );\r\n      this.showMedicalExaminationPopup = true;\r\n      this.dataMedicalExamination = {\r\n        componentId: 'MedicalExaminationPopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentMedicalExaminations,\r\n        openMode: ComponentOpenMode.Read\r\n      };\r\n    }\r\n  }\r\n\r\n  public createMedicalExamination(): void {\r\n    this.currentMedicalExaminationIndex = -1;\r\n    this.currentMedicalExaminations = {};\r\n    this.showMedicalExaminationPopup = true;\r\n    this.isNewMedicalExamination = true;\r\n    this.isReadOnlyMedicalExaminationDialog = false;\r\n    this.dataMedicalExamination = {\r\n      componentId: 'MedicalExaminationPopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: this.currentMedicalExaminations,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n  public editMedicalExamination(): void {\r\n    this.isNewMedicalExamination = false;\r\n    this.isReadOnlyMedicalExaminationDialog = false;\r\n    if (this.selectedMedicalExaminations.length === 1) {\r\n      this.currentMedicalExaminations = { ...this.selectedMedicalExaminations[0]._obj };\r\n      this.currentMedicalExaminationIndex = this.bidtMedicalExaminationDisplayed.indexOf(\r\n        this.selectedMedicalExaminations[0]\r\n      );\r\n      this.showMedicalExaminationPopup = true;\r\n      this.dataMedicalExamination = {\r\n        componentId: 'MedicalExaminationPopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentMedicalExaminations,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public deleteMedicalExamination(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: 'global.confirmSelectedDataDelete',\r\n      accept: () => {\r\n        this.selectedMedicalExaminations.forEach((element) => {\r\n          const indexInDisplayedList = this.bidtMedicalExaminationDisplayed.indexOf(element);\r\n          this.bidtMedicalExaminationDisplayed.splice(indexInDisplayedList, 1);\r\n        });\r\n        this.currentMedicalExaminationIndex = -1;\r\n        this.selectedMedicalExaminations = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveMedicalExamination(medicalExamObj: BidtMedicalVisitDTO): void {\r\n    if (!!medicalExamObj) {\r\n      if (this.currentMedicalExaminationIndex > -1) {\r\n        this.bidtMedicalExaminationDisplayed[\r\n          this.currentMedicalExaminationIndex\r\n        ] = this.convertToMedicalExaminationRowObj(medicalExamObj);\r\n      } else {\r\n        this.bidtMedicalExaminationDisplayed = [\r\n          ...this.bidtMedicalExaminationDisplayed,\r\n          this.convertToMedicalExaminationRowObj(medicalExamObj)\r\n        ];\r\n      }\r\n    }\r\n    this.currentMedicalExaminationIndex = -1;\r\n    this.selectedMedicalExaminations = [];\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Absence Tab\r\n   ***********************************************************************************/\r\n  public openAbsence(): void {\r\n    this.isNewAbsence = false;\r\n    this.isReadOnlyAbsenceDialog = true;\r\n    if (this.selectedAbsences.length === 1) {\r\n      this.currentAbsences = { ...this.selectedAbsences[0]._obj };\r\n      this.currentAbsenceIndex = this.bidtAbsenceDisplayed.indexOf(this.selectedAbsences[0]);\r\n      this.showAbsencePopup = true;\r\n      this.dataAbsence = {\r\n        componentId: 'AbsencePopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentAbsences,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public createAbsence(): void {\r\n    this.currentAbsenceIndex = -1;\r\n    this.currentAbsences = {};\r\n    this.showAbsencePopup = true;\r\n    this.isNewAbsence = true;\r\n    this.isReadOnlyAbsenceDialog = false;\r\n    this.dataAbsence = {\r\n      componentId: 'AbsencePopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: this.currentAbsences,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n\r\n  public editAbsence(): void {\r\n    this.isNewAbsence = false;\r\n    this.isReadOnlyAbsenceDialog = false;\r\n    if (this.selectedAbsences.length === 1) {\r\n      this.currentAbsences = { ...this.selectedAbsences[0]._obj };\r\n      this.currentAbsenceIndex = this.bidtAbsenceDisplayed.indexOf(this.selectedAbsences[0]);\r\n      this.showAbsencePopup = true;\r\n      this.dataAbsence = {\r\n        componentId: 'AbsencePopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentAbsences,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public deleteAbsence(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: 'global.confirmSelectedDataDelete',\r\n      accept: () => {\r\n        this.selectedAbsences.forEach((element) => {\r\n          const indexInDisplayedList = this.bidtAbsenceDisplayed.indexOf(element);\r\n          this.bidtAbsenceDisplayed.splice(indexInDisplayedList, 1);\r\n        });\r\n        this.currentAbsenceIndex = -1;\r\n        this.selectedAbsences = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveAbsence(absenceObj: BidtAbsenceDTO): void {\r\n    if (!!absenceObj) {\r\n      if (this.currentAbsenceIndex > -1) {\r\n        this.bidtAbsenceDisplayed[this.currentAbsenceIndex] = this.convertToAbsenceRowObj(absenceObj);\r\n      } else {\r\n        this.bidtAbsenceDisplayed = [...this.bidtAbsenceDisplayed, this.convertToAbsenceRowObj(absenceObj)];\r\n      }\r\n    }\r\n    this.currentAbsenceIndex = -1;\r\n    this.selectedAbsences = [];\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Evaluation Tab\r\n   ***********************************************************************************/\r\n  public openEvaluation(): void {\r\n    this.isNewEvaluation = false;\r\n    this.isReadOnlyEvaluationDialog = true;\r\n    if (this.selectedEvaluations.length === 1) {\r\n      this.currentEvaluations = { ...this.selectedEvaluations[0]._obj };\r\n      this.currentEvaluationIndex = this.bidtEvaluationDisplayed.indexOf(this.selectedEvaluations[0]);\r\n      this.showEvaluationPopup = true;\r\n      this.dataEvaluation = {\r\n        componentId: 'EvaluationPopupFormComponent',\r\n        selectedRow: this.selectedEvaluations,\r\n        object: this.currentEvaluations,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public createEvaluation(): void {\r\n    this.currentEvaluationIndex = -1;\r\n    this.currentEvaluations = {};\r\n    this.showEvaluationPopup = true;\r\n    this.isNewEvaluation = true;\r\n    this.isReadOnlyEvaluationDialog = false;\r\n    this.dataEvaluation = {\r\n      componentId: 'EvaluationPopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: this.currentEvaluations,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n\r\n  public editEvaluation(): void {\r\n    this.isNewEvaluation = false;\r\n    this.isReadOnlyEvaluationDialog = false;\r\n    if (this.selectedEvaluations.length === 1) {\r\n      this.currentEvaluations = { ...this.selectedEvaluations[0]._obj };\r\n      this.currentEvaluationIndex = this.bidtEvaluationDisplayed.indexOf(this.selectedEvaluations[0]);\r\n      this.showEvaluationPopup = true;\r\n      this.dataEvaluation = {\r\n        componentId: 'EvaluationPopupFormComponent',\r\n        selectedRow: this.selectedEvaluations,\r\n        object: this.currentEvaluations,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public deleteEvaluation(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: 'global.confirmSelectedDataDelete',\r\n      accept: () => {\r\n        this.selectedEvaluations.forEach((element) => {\r\n          const indexInDisplayedList = this.bidtEvaluationDisplayed.indexOf(element);\r\n          this.bidtEvaluationDisplayed.splice(indexInDisplayedList, 1);\r\n        });\r\n        this.currentEvaluationIndex = -1;\r\n        this.selectedEvaluations = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveEvaluation(evaluationObj: BidtEvaluationsOutputDTO): void {\r\n    if (!!evaluationObj) {\r\n      if (this.currentEvaluationIndex > -1) {\r\n        this.bidtEvaluationDisplayed[this.currentEvaluationIndex] = this.convertToEvaluationRowObj(evaluationObj);\r\n      } else {\r\n        this.bidtEvaluationDisplayed = [...this.bidtEvaluationDisplayed, this.convertToEvaluationRowObj(evaluationObj)];\r\n      }\r\n    }\r\n    this.currentEvaluationIndex = -1;\r\n    this.selectedEvaluations = [];\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Expense Tab\r\n   ***********************************************************************************/\r\n  public openExpense(): void {\r\n    this.isNewExpense = false;\r\n    this.isReadOnlyExpenseDialog = true;\r\n    if (this.selectedExpenses.length === 1) {\r\n      this.currentExpenses = { ...this.selectedExpenses[0]._obj };\r\n      this.currentExpenseIndex = this.bidtExpenseDisplayed.indexOf(this.selectedExpenses[0]);\r\n      this.showExpensePopup = true;\r\n      this.dataExpense = {\r\n        componentId: 'ExpensePopupFormComponent',\r\n        selectedRow: this.selectedExpenses,\r\n        object: this.currentExpenses,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public createExpense(): void {\r\n    this.currentExpenseIndex = -1;\r\n    this.currentExpenses = {};\r\n    this.showExpensePopup = true;\r\n    this.isNewExpense = true;\r\n    this.isReadOnlyExpenseDialog = false;\r\n    this.dataExpense = {\r\n      componentId: 'ExpensePopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: this.currentExpenses,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n\r\n  public editExpense(): void {\r\n    this.isNewExpense = false;\r\n    this.isReadOnlyExpenseDialog = false;\r\n    if (this.selectedExpenses.length === 1) {\r\n      this.currentExpenses = { ...this.selectedExpenses[0]._obj };\r\n      this.currentExpenseIndex = this.bidtExpenseDisplayed.indexOf(this.selectedExpenses[0]);\r\n      this.showExpensePopup = true;\r\n      this.dataExpense = {\r\n        componentId: 'ExpensePopupFormComponent',\r\n        selectedRow: this.selectedExpenses,\r\n        object: this.currentExpenses,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public deleteExpense(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: 'global.confirmSelectedDataDelete',\r\n      accept: () => {\r\n        this.selectedExpenses.forEach((element) => {\r\n          const indexInDisplayedList = this.bidtExpenseDisplayed.indexOf(element);\r\n          this.bidtExpenseDisplayed.splice(indexInDisplayedList, 1);\r\n        });\r\n        this.currentExpenseIndex = -1;\r\n        this.selectedExpenses = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveExpense(expenseObj: BidtAbsenceDTO): void {\r\n    if (!!expenseObj) {\r\n      if (this.currentExpenseIndex > -1) {\r\n        this.bidtExpenseDisplayed[this.currentExpenseIndex] = this.convertToExpenseRowObj(expenseObj);\r\n      } else {\r\n        this.bidtExpenseDisplayed = [...this.bidtExpenseDisplayed, this.convertToExpenseRowObj(expenseObj)];\r\n      }\r\n    }\r\n    this.currentExpenseIndex = -1;\r\n    this.selectedExpenses = [];\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Holidays Tab\r\n   ***********************************************************************************/\r\n  public openHoliday(): void {\r\n    this.isNewHoliday = false;\r\n    this.isReadOnlyHolidayDialog = true;\r\n    if (this.selectedHolidays.length === 1) {\r\n      this.currentHolidays = { ...this.selectedHolidays[0]._obj };\r\n      this.currentHolidayIndex = this.bidtHolidayDisplayed.indexOf(this.selectedHolidays[0]);\r\n      this.showHolidayPopup = true;\r\n      this.dataHoliday = {\r\n        componentId: 'HolidaysPopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentHolidays,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public createHoliday(): void {\r\n    this.currentHolidayIndex = -1;\r\n    this.currentHolidays = {};\r\n    this.showHolidayPopup = true;\r\n    this.isNewHoliday = true;\r\n    this.isReadOnlyHolidayDialog = false;\r\n    this.dataHoliday = {\r\n      componentId: 'HolidaysPopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: this.currentHolidays,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n\r\n  public editHoliday(): void {\r\n    this.isNewHoliday = false;\r\n    this.isReadOnlyHolidayDialog = false;\r\n    if (this.selectedHolidays.length === 1) {\r\n      this.currentHolidays = { ...this.selectedHolidays[0]._obj };\r\n      this.currentHolidayIndex = this.bidtHolidayDisplayed.indexOf(this.selectedHolidays[0]);\r\n      this.showHolidayPopup = true;\r\n      this.dataHoliday = {\r\n        componentId: 'HolidaysPopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentHolidays,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public deleteHoliday(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: 'global.confirmSelectedDataDelete',\r\n      accept: () => {\r\n        this.selectedHolidays.forEach((element) => {\r\n          const indexInDisplayedList = this.bidtHolidayDisplayed.indexOf(element);\r\n          this.bidtHolidayDisplayed.splice(indexInDisplayedList, 1);\r\n        });\r\n        this.currentHolidayIndex = -1;\r\n        this.selectedHolidays = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveHoliday(holidayObj: EmployeeHolidaysTableDTO): void {\r\n    if (!!holidayObj) {\r\n      if (this.currentHolidayIndex > -1) {\r\n        this.bidtHolidayDisplayed[this.currentHolidayIndex] = this.convertToHolidayRowObj(holidayObj);\r\n      } else {\r\n        this.bidtHolidayDisplayed = [...this.bidtHolidayDisplayed, this.convertToHolidayRowObj(holidayObj)];\r\n      }\r\n    }\r\n    this.currentHolidayIndex = -1;\r\n    this.selectedHolidays = [];\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * HourlyCosts Tab\r\n   ***********************************************************************************/\r\n  public openHourlyCost(): void {\r\n    this.isNewHourlyCost = false;\r\n    this.isReadOnlyHourlyCostDialog = true;\r\n    if (this.selectedHourlyCosts.length === 1) {\r\n      this.currentHourlyCosts = JSON.parse(JSON.stringify(this.selectedHourlyCosts[0]));\r\n      this.currentHourlyCostIndex = this.bidtHourlyCostDisplayed.indexOf(this.selectedHourlyCosts[0]);\r\n      this.showHourlyCostPopup = true;\r\n      this.dataHourlyCost = {\r\n        componentId: 'HourlyCostsPopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentHourlyCosts,\r\n        openMode: ComponentOpenMode.Read\r\n      };\r\n    }\r\n  }\r\n\r\n  public createHourlyCost(): void {\r\n    this.currentHourlyCosts = {};\r\n    this.showHourlyCostPopup = true;\r\n    this.currentHourlyCostIndex = -1;\r\n    this.isReadOnlyHourlyCostDialog = false;\r\n    this.dataHourlyCost = {\r\n      componentId: 'HourlyCostsPopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: this.currentHourlyCosts,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n\r\n  public editHourlyCost(): void {\r\n    this.isNewHourlyCost = false;\r\n    this.isReadOnlyHourlyCostDialog = false;\r\n    if (this.selectedHourlyCosts.length === 1) {\r\n      this.currentHourlyCosts = JSON.parse(JSON.stringify(this.selectedHourlyCosts[0]));\r\n      this.currentHourlyCostIndex = this.bidtHourlyCostDisplayed.indexOf(this.selectedHourlyCosts[0]);\r\n      this.showHourlyCostPopup = true;\r\n      this.dataHourlyCost = {\r\n        componentId: 'HourlyCostsPopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentHourlyCosts,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public deleteHourlyCost(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: 'global.confirmSelectedDataDelete',\r\n      accept: () => {\r\n        this.selectedHourlyCosts.forEach((element) => {\r\n          const indexInDisplayedList = this.bidtHourlyCostDisplayed.indexOf(element);\r\n          this.bidtHourlyCostDisplayed.splice(indexInDisplayedList, 1);\r\n        });\r\n\r\n        this.currentHourlyCostIndex = -1;\r\n        this.selectedHourlyCosts = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveHourlyCost(hourlyCostObj: BidtHourlyCostsOutputDTO): void {\r\n    if (!!hourlyCostObj) {\r\n      if (this.currentHourlyCostIndex > -1) {\r\n        this.bidtHourlyCostDisplayed[this.currentHourlyCostIndex] = hourlyCostObj;\r\n      } else {\r\n        this.bidtHourlyCostDisplayed = [...this.bidtHourlyCostDisplayed, hourlyCostObj];\r\n      }\r\n    }\r\n    this.currentHourlyCostIndex = -1;\r\n    this.selectedHourlyCosts = [];\r\n  }\r\n  /***********************************************************************************\r\n   * Qualification Tab\r\n   ***********************************************************************************/\r\n  public openQualification(): void {\r\n    this.isNewQualification = false;\r\n    this.isReadOnlyQualificationDialog = true;\r\n    if (this.selectedQualifications.length === 1) {\r\n      this.currentQualifications = { ...this.selectedQualifications[0]._obj };\r\n      this.currentQualificationIndex = this.bidtQualifEmployeeDisplayed.indexOf(this.selectedQualifications[0]);\r\n      this.showQualificationPopup = true;\r\n      this.dataQualification = {\r\n        componentId: 'QualificationPopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentQualifications,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public createQualification(): void {\r\n    this.currentQualificationIndex = -1;\r\n    this.currentQualifications = {};\r\n    this.showQualificationPopup = true;\r\n    this.isNewQualification = true;\r\n    this.isReadOnlyQualificationDialog = false;\r\n    this.dataQualification = {\r\n      componentId: 'QualificationPopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: this.currentQualifications,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n\r\n  public editQualification(): void {\r\n    this.isNewQualification = false;\r\n    this.isReadOnlyQualificationDialog = false;\r\n    if (this.selectedQualifications.length === 1) {\r\n      this.currentQualifications = { ...this.selectedQualifications[0]._obj };\r\n      this.currentQualificationIndex = this.bidtQualifEmployeeDisplayed.indexOf(this.selectedQualifications[0]);\r\n      this.showQualificationPopup = true;\r\n      this.dataQualification = {\r\n        componentId: 'QualificationPopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentQualifications,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public deleteQualification(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: 'global.confirmSelectedDataDelete',\r\n      accept: () => {\r\n        this.selectedQualifications.forEach((element) => {\r\n          const indexInDisplayedList = this.bidtQualifEmployeeDisplayed.indexOf(element);\r\n          this.bidtQualifEmployeeDisplayed.splice(indexInDisplayedList, 1);\r\n        });\r\n        this.currentQualificationIndex = -1;\r\n        this.selectedQualifications = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveQualification(qualificationObj: FindEmployeeQualificationDTO): void {\r\n    if (!!qualificationObj) {\r\n      if (this.currentQualificationIndex > -1) {\r\n        this.bidtQualifEmployeeDisplayed[this.currentQualificationIndex] = this.convertToQualificationRowObj(\r\n          qualificationObj\r\n        );\r\n      } else {\r\n        this.bidtQualifEmployeeDisplayed = [\r\n          ...this.bidtQualifEmployeeDisplayed,\r\n          this.convertToQualificationRowObj(qualificationObj)\r\n        ];\r\n      }\r\n    }\r\n    this.currentQualificationIndex = -1;\r\n    this.selectedQualifications = [];\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Qualification Renewal dates filter\r\n   ***********************************************************************************/\r\n  public filterQualificationRenewalDates(): void {\r\n    if (this.qualificationRenewalStartDateFilter && this.qualificationRenewalEndDateFilter) {\r\n      if (this.qualificationRenewalStartDateFilter < this.qualificationRenewalEndDateFilter) {\r\n        this.loadQualificationRenewal();\r\n      } else {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnDates'));\r\n      }\r\n    } else {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('errorOnMissingDates'));\r\n    }\r\n  }\r\n\r\n  /***********************************************************************************\r\n   * Training Tab\r\n   ***********************************************************************************/\r\n  public openTraining(): void {\r\n    this.isNewTraining = false;\r\n    this.isReadOnlyTrainingDialog = true;\r\n    if (this.selectedTrainings.length === 1) {\r\n      this.currentTrainings = { ...this.selectedTrainings[0]._obj };\r\n      this.currentTrainingIndex = this.bidtTrainingDisplayed.indexOf(this.selectedTrainings[0]);\r\n      this.showTrainingPopup = true;\r\n      this.dataTraining = {\r\n        componentId: 'TrainingPopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentTrainings,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public createTraining(): void {\r\n    this.currentTrainingIndex = -1;\r\n    this.currentTrainings = {};\r\n    this.showTrainingPopup = true;\r\n    this.isNewTraining = true;\r\n    this.isReadOnlyTrainingDialog = false;\r\n    this.dataTraining = {\r\n      componentId: 'TrainingPopupFormComponent',\r\n      selectedRow: undefined,\r\n      object: this.currentTrainings,\r\n      openMode: ComponentOpenMode.Write\r\n    };\r\n  }\r\n\r\n  public editTraining(): void {\r\n    this.isNewTraining = false;\r\n    this.isReadOnlyTrainingDialog = false;\r\n    if (this.selectedTrainings.length === 1) {\r\n      this.currentTrainings = { ...this.selectedTrainings[0]._obj };\r\n      this.currentTrainingIndex = this.bidtTrainingDisplayed.indexOf(this.selectedTrainings[0]);\r\n      this.showTrainingPopup = true;\r\n      this.dataTraining = {\r\n        componentId: 'TrainingPopupFormComponent',\r\n        selectedRow: [],\r\n        object: this.currentTrainings,\r\n        openMode: ComponentOpenMode.Write\r\n      };\r\n    }\r\n  }\r\n\r\n  public deleteTraining(): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: 'global.confirmSelectedDataDelete',\r\n      accept: () => {\r\n        this.selectedTrainings.forEach((element) => {\r\n          const indexInDisplayedList = this.bidtTrainingDisplayed.indexOf(element);\r\n          this.bidtTrainingDisplayed.splice(indexInDisplayedList, 1);\r\n        });\r\n        this.currentTrainingIndex = -1;\r\n        this.selectedTrainings = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveTraining(trainingObj: BidtTrainingDTO): void {\r\n    if (!!trainingObj) {\r\n      if (this.currentTrainingIndex > -1) {\r\n        this.bidtTrainingDisplayed[this.currentTrainingIndex] = this.convertToTrainingRowObj(trainingObj);\r\n      } else {\r\n        this.bidtTrainingDisplayed = [...this.bidtTrainingDisplayed, this.convertToTrainingRowObj(trainingObj)];\r\n      }\r\n    }\r\n    this.currentTrainingIndex = -1;\r\n    this.selectedTrainings = [];\r\n  }\r\n\r\n  private convertToTrainingRowObj(obj: BidtTrainingDTO): TrainingRow {\r\n    return {\r\n      trainingName: obj.trainingName,\r\n      trainingAskedBy: obj.trainingAskedBy,\r\n      trainingCenter: obj.trainingCenter,\r\n      trainingComment: obj.trainingComment,\r\n      trainingEndDate: obj.trainingEndDate && moment(obj.trainingEndDate).format('YYYY/MM/DD A'),\r\n      trainingInstructor: obj.trainingInstructor,\r\n      trainingPerformed: obj.trainingPerformed && obj.trainingPerformed === 1 ? true : false,\r\n      trainingStartDate: obj.trainingStartDate && moment(obj.trainingStartDate).format('YYYY/MM/DD A'),\r\n      _obj: obj\r\n    };\r\n  }\r\n\r\n  private convertToQualificationRowObj(obj: FindEmployeeQualificationDTO): QualificationRow {\r\n    return {\r\n      qualifEmployeeEndDate:\r\n        obj.bidtQualifEmployeeDTO &&\r\n        obj.bidtQualifEmployeeDTO.qualifEmployeeEndDate &&\r\n        this.dateService.dateToString(new Date(obj.bidtQualifEmployeeDTO.qualifEmployeeEndDate)),\r\n      qualifEmployeeInstitution: obj.bidtQualifEmployeeDTO && obj.bidtQualifEmployeeDTO.qualifEmployeeInstitution,\r\n      qualifEmployeeStartDate:\r\n        obj.bidtQualifEmployeeDTO &&\r\n        obj.bidtQualifEmployeeDTO.qualifEmployeeStartDate &&\r\n        this.dateService.dateToString(new Date(obj.bidtQualifEmployeeDTO.qualifEmployeeStartDate)),\r\n      qualificationTitle: obj.qualificationTitle,\r\n      qualificationType: obj.qualificationType,\r\n      qualifOngoing: obj.bidtQualifEmployeeDTO && obj.bidtQualifEmployeeDTO.qualifOngoing,\r\n      _obj: obj\r\n    };\r\n  }\r\n\r\n  private convertToAbsenceRowObj(obj: BidtAbsenceDTO): AbsenceRow {\r\n    return {\r\n      absenceDescription: obj.absenceDescription,\r\n      absenceEndDate: obj.absenceEndDate && moment(obj.absenceEndDate).format('YYYY/MM/DD A'),\r\n      absenceStartDate: obj.absenceStartDate && moment(obj.absenceStartDate).format('YYYY/MM/DD A'),\r\n      absenceType: obj.absenceType,\r\n      _obj: obj\r\n    };\r\n  }\r\n\r\n  private convertToEvaluationRowObj(obj: BidtEvaluationsOutputDTO): EvaluationRow {\r\n    return {\r\n      evaluationComment: obj.bidtEvaluationDTO && obj.bidtEvaluationDTO.evaluationComment,\r\n      evaluationDate:\r\n        obj.bidtEvaluationDTO &&\r\n        obj.bidtEvaluationDTO.evaluationDate &&\r\n        this.dateService.dateToString(new Date(obj.bidtEvaluationDTO.evaluationDate)),\r\n      evaluationType: obj.bidtEvaluationDTO && obj.bidtEvaluationDTO.evaluationType,\r\n      evaluator: obj.evaluator,\r\n      _obj: obj\r\n    };\r\n  }\r\n\r\n  private convertToHolidayRowObj(obj: EmployeeHolidaysTableDTO): HolidayRow {\r\n    return {\r\n      holidayEndDate: obj.holidayEndDate && moment(obj.holidayEndDate).format('YYYY/MM/DD A'),\r\n      holidayStartDate: obj.holidayStartDate && moment(obj.holidayStartDate).format('YYYY/MM/DD A'),\r\n      holidayStatus: obj.holidayStatus,\r\n      holidayValidator: obj.holidayValidator,\r\n      _obj: obj\r\n    };\r\n  }\r\n\r\n  private convertToDocumentRowObj(obj: BidtDocumentDTO): DocumentRow {\r\n    return {\r\n      documentContent: this.showDocSize(obj),\r\n      documentName: obj.documentName,\r\n      documentPublicationDate:\r\n        obj.documentPublicationDate && this.dateService.dateToString(new Date(obj.documentPublicationDate)),\r\n      documentType: this.showDocExtension(obj),\r\n      documentCategory: this.getDocumentCategoryText(obj.documentCategory),\r\n      documentSource: obj.documentSource,\r\n      _obj: obj\r\n    };\r\n  }\r\n\r\n  private getDocumentCategoryText(docCategory: string | undefined): string | undefined {\r\n    let toReturn: string | undefined;\r\n    if (!docCategory) {\r\n      return toReturn;\r\n    }\r\n    this.documentCategories.forEach((elem: CatalogPropertiesTableDTO) => {\r\n      if (elem.propertiesKey === docCategory) {\r\n        toReturn = elem.enPropertiesValue;\r\n      }\r\n    });\r\n\r\n    return toReturn;\r\n  }\r\n\r\n  private convertToMedicalExaminationRowObj(obj: BidtMedicalVisitDTO): MedicalExaminationRow {\r\n    return {\r\n      visitComment: obj.visitComment,\r\n      visitDate: obj.visitDate && this.dateService.dateToString(new Date(obj.visitDate)),\r\n      visitExpiration: obj.visitExpiration && this.dateService.dateToString(new Date(obj.visitExpiration)),\r\n      _obj: obj\r\n    };\r\n  }\r\n\r\n  private convertToExpenseRowObj(obj: BidtExpenseDTO): ExpenseRow {\r\n    return {\r\n      expenseDate: obj.expenseDate && this.dateService.dateToString(new Date(obj.expenseDate)),\r\n      expenseDescription: obj.expenseDescription,\r\n      expenseType: obj.expenseType,\r\n      expenseValue: obj.expenseValue,\r\n      _obj: obj\r\n    };\r\n  }\r\n\r\n  private convertToWorkRowObj(obj: EmployeeWorkOutputDTO, index: number): WorkRow {\r\n    return {\r\n      origin: obj.origin,\r\n      originText: obj.originText,\r\n      type: obj.type,\r\n      openingDate: obj.openingDate && this.dateService.dateWithHourMinSecToString(obj.openingDate),\r\n      closingDate: obj.closingDate && this.dateService.dateWithHourMinSecToString(obj.closingDate),\r\n      description: obj.description,\r\n      projectNumber: obj.projectNumber,\r\n      projectAsset: obj.projectAsset,\r\n      statusText: obj.statusText,\r\n      totalElapsed: obj.totalElapsed,\r\n      qualif: obj.qualification,\r\n      relatedItem: obj.relatedItem,\r\n      workOrder: obj.treeNodeText,\r\n      isRelatedItemEnabled: obj.isRelatedItemEnabled,\r\n      _obj: obj,\r\n      rowIndex: index\r\n    };\r\n  }\r\n\r\n  private convertToFlightRowObj(obj: EmployeeFlightOutputDTO): FlightRow {\r\n    return {\r\n      missionCode: obj.missionCode,\r\n      missionType: obj.missionType,\r\n      missionNumber: obj.missionNumber,\r\n      startDateText: obj.startDateText && this.dateService.dateToString(obj.startDateText),\r\n      endDateText: obj.endDateText && this.dateService.dateToString(obj.endDateText),\r\n      assetText: obj.assetText,\r\n      pilot: obj.pilot,\r\n      copilot: obj.copilot,\r\n      dayMission: obj.dayMission,\r\n      engineStartDateText: obj.engineStartDateText && this.dateService.dateToString(obj.engineStartDateText),\r\n      engineStopDateText: obj.engineStopDateText && this.dateService.dateToString(obj.engineStopDateText),\r\n      missionDepartureLocation: obj.missionDepartureLocation,\r\n      missionArrivalLocation: obj.missionArrivalLocation,\r\n      chronoNumber: obj.chronoNumber,\r\n      duration: obj.duration,\r\n      ifrDuration: obj.ifrDuration,\r\n      cycleNumber: obj.cycleNumber,\r\n      flightStatus: obj.flightStatus,\r\n      flightType: obj.flightType,\r\n      _obj: obj\r\n    };\r\n  }\r\n\r\n  private resetSelectedRow(): void {\r\n    this.selectedQualifications = [];\r\n    this.selectedLicenses = [];\r\n    this.selectedTrainings = [];\r\n    this.selectedHourlyCosts = [];\r\n    this.selectedEvaluations = [];\r\n    this.selectedAbsences = [];\r\n    this.selectedHolidays = [];\r\n    this.selectedExpenses = [];\r\n    this.selectedMedicalExaminations = [];\r\n    this.selectedDocuments = [];\r\n  }\r\n\r\n  public filterWorkWithCriteria() {\r\n    this.loadWorks();\r\n  }\r\n\r\n  public filterFlightWithCriteria() {\r\n    this.loadFlights();\r\n  }\r\n\r\n  public resetWorkTableFilters() {\r\n    const toDate = new Date();\r\n    const fromDate = new Date(toDate);\r\n    fromDate.setMonth(toDate.getMonth() - EmployeeFormComponent.DATE_DIFF);\r\n\r\n    if (this.employeeDetails.bidtEmployeeDTO) {\r\n      this.searchCriteriaWork = {\r\n        employeeId: this.employeeDetails.bidtEmployeeDTO.id,\r\n        fromEndTimeFilter: fromDate,\r\n        fromStartTimeFilter: fromDate,\r\n        toEndTimeFilter: toDate,\r\n        toStartTimeTimeFilter: toDate\r\n      };\r\n    }\r\n  }\r\n\r\n  public resetFlightTableFilters() {\r\n    const toDate = new Date();\r\n    const fromDate = new Date(toDate);\r\n    fromDate.setMonth(toDate.getMonth() - EmployeeFormComponent.DATE_DIFF);\r\n\r\n    if (this.employeeDetails.bidtEmployeeDTO) {\r\n      this.searchCriteriaFlight = {\r\n        employeeId: this.employeeDetails.bidtEmployeeDTO.id,\r\n        fromEndTimeFilter: fromDate,\r\n        fromStartTimeFilter: fromDate,\r\n        toEndTimeFilter: toDate,\r\n        toStartTimeTimeFilter: toDate\r\n      };\r\n    }\r\n  }\r\n\r\n  public openOrigin(row: WorkRow) {\r\n    const openMode: ComponentOpenMode = ComponentOpenMode.Read;\r\n    if (row._obj && row.origin && row._obj.bidmWorkOrderData) {\r\n      const bidmWorkOrderData = row._obj.bidmWorkOrderData;\r\n      const arr = row.origin.split('#');\r\n      if (AWPropertiesConstants.AIRM_WORK_ORDER_TYPE_TASK === bidmWorkOrderData.woType) {\r\n        const objectId: BireTaskDTOId = {\r\n          taskCode: arr[0],\r\n          taskVersion: arr[1]\r\n        };\r\n        const labelKey = 'transaction.TaskFormComponent';\r\n        const data: PageComponentData = {\r\n          id: this.tabService.generateId(),\r\n          componentId: 'TaskFormComponent',\r\n          objectId: this.serializationService.serialize(objectId),\r\n          openMode\r\n        };\r\n        this.tabService.open(this.tabService.create(data, labelKey, true));\r\n      } else if (AWPropertiesConstants.AIRM_WORK_ORDER_TYPE_EVOLUTION === bidmWorkOrderData.woType) {\r\n        const objectId: BireEvolutionDTOId = {\r\n          evolutionNumber: arr[1],\r\n          evolutionRevisionNumber: `${arr[2]}`\r\n        };\r\n        const labelKey = 'transaction.EvolutionFormComponent';\r\n        const data: PageComponentData = {\r\n          id: this.tabService.generateId(),\r\n          componentId: 'EvolutionFormComponent',\r\n          objectId: this.serializationService.serialize(objectId),\r\n          openMode\r\n        };\r\n\r\n        this.tabService.open(this.tabService.create(data, labelKey, true));\r\n      } else if (AWPropertiesConstants.AIRM_WORK_ORDER_TYPE_DEFECT === bidmWorkOrderData.woType) {\r\n        const data: PageComponentData = {\r\n          id: this.tabService.generateId(),\r\n          componentId: ComponentConstants.FLE_DEFECT_FORM,\r\n          openMode: ComponentOpenMode.Read\r\n        };\r\n\r\n        const defectId: BidoNotificationDTOId = {\r\n          notificationCode: arr[0]\r\n        };\r\n        data.objectId = this.serializationService.serialize(defectId);\r\n\r\n        const labelKey = 'transaction.' + data.componentId;\r\n        this.tabService.open(this.tabService.create(data, labelKey, true));\r\n      }\r\n    }\r\n  }\r\n\r\n  public openRelatedItem(row: WorkRow) {\r\n    const openMode: ComponentOpenMode = ComponentOpenMode.Read;\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.ENG_ITEM_FORM,\r\n      openMode\r\n    };\r\n    if (!!row && row._obj.bidmWorkOrderData) {\r\n      const itemFormId: BireItemDTO = {\r\n        familyCode: row._obj.bidmWorkOrderData.bireItemFamilyCode,\r\n        chapter: row._obj.bidmWorkOrderData.bireItemChapter,\r\n        section: row._obj.bidmWorkOrderData.bireItemSection,\r\n        sheet: row._obj.bidmWorkOrderData.bireItemSheet,\r\n        marks: row._obj.bidmWorkOrderData.bireItemMarks,\r\n        subject: row._obj.bidmWorkOrderData.bireItemSubject,\r\n        structureType: AWPropertiesConstants.STRUCTURE_TYPE_IPC_KEY,\r\n        variantCode: row._obj.bidmWorkOrderData.bireItemVariantCode\r\n      };\r\n      data.objectId = this.serializationService.serialize(itemFormId);\r\n      const labelKey = 'transaction.' + data.componentId;\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    }\r\n  }\r\n\r\n  public toggleRowDetailsVisibility(row: WorkRow): void {\r\n    row.expand = !row.expand;\r\n  }\r\n\r\n  private loadEventStatus(): void {\r\n    this.employeeFormService.getEventStatusValues().subscribe((results) => {\r\n      this.eventStatusList = ListUtils.orEmpty(results);\r\n    });\r\n  }\r\n\r\n  public openEvent(acrsEventRow: AcrsEventRow): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId:\r\n        acrsEventRow._obj.bidoNotificationTypeDTO &&\r\n        acrsEventRow._obj.bidoNotificationTypeDTO.typeCategory === AWPropertiesConstants.EVENT_CATEGORY_DEFECT_KEY\r\n          ? ComponentConstants.FLE_DEFECT_FORM\r\n          : ComponentConstants.FLE_EVENT_CREATE,\r\n      objectId: this.serializationService.serialize(acrsEventRow._obj),\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public openEquipment(acrsEventRow: AcrsEventRow): void {\r\n    const input: BidoEquipmentDTOId = {\r\n      equipmentCode: acrsEventRow.asset\r\n    };\r\n    this.employeeFormService.findBidoEquipment(input).subscribe((result) => {\r\n      this.pageService.openAsset(result.equipmentCode, result.equipmentFunction);\r\n    });\r\n  }\r\n\r\n  public openWorkOrder(row: WorkRow): void {\r\n    if (row._obj.bidmWorkOrderData) {\r\n      const objectId: BidmWorkOrderDTOId = {\r\n        projectId: row._obj.bidmWorkOrderData.projectId as string,\r\n        woId: row._obj.bidmWorkOrderData.woId as string\r\n      };\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.MAI_WORK_ORDER_FORM,\r\n        openMode: ComponentOpenMode.Read,\r\n        objectId: this.serializationService.serialize(objectId)\r\n      };\r\n      const labelKey = 'transaction.' + data.componentId;\r\n\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    }\r\n  }\r\n\r\n  public linkUrl(): void {\r\n    if (this.selectedDocuments.length === 1) {\r\n      this.currentDocumentIndex = this.bidtDocumentDisplayed.findIndex((document) => {\r\n        return document === this.selectedDocuments[0];\r\n      });\r\n\r\n      this.currentDocument = { ...this.selectedDocuments[0]._obj };\r\n      this.isReadOnlyDocumentDialog = false;\r\n      this.showDocumentUrlDialog = true;\r\n    } else {\r\n      this.currentDocumentIndex = -1;\r\n      this.currentDocument = {};\r\n      this.showDocumentUrlDialog = true;\r\n    }\r\n  }\r\n\r\n  public updateDocumentUrl(doc: BidtDocumentDTO): void {\r\n    if (this.currentDocumentIndex === -1) {\r\n      this.addNewDocument(doc);\r\n    } else {\r\n      this.updateDocument(doc);\r\n    }\r\n  }\r\n\r\n  public showDownloadDocButton(): boolean {\r\n    let toReturn = true;\r\n    if (this.selectedDocuments.length === 0) {\r\n      toReturn = false;\r\n    } else {\r\n      this.selectedDocuments.forEach((doc: DocumentRow) => {\r\n        if (!!doc.documentSource) {\r\n          toReturn = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    return toReturn;\r\n  }\r\n\r\n  public showGoToDocButton(): boolean {\r\n    let toReturn = true;\r\n    if (this.selectedDocuments.length === 0) {\r\n      toReturn = false;\r\n    } else {\r\n      this.selectedDocuments.forEach((doc: DocumentRow) => {\r\n        if (!doc.documentSource) {\r\n          toReturn = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    return toReturn;\r\n  }\r\n\r\n  public goToDoc(): void {\r\n    this.selectedDocuments.forEach((doc: DocumentRow) => {\r\n      window.open(doc.documentSource);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentData.componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".from\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar custom-calendar-margin\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [(ngModel)]=\\\"selectedFrom\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">AM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"AM\\\" [(ngModel)]=\\\"selectedFromAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">PM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"PM\\\" [(ngModel)]=\\\"selectedFromAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".to\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar custom-calendar-margin\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [(ngModel)]=\\\"selectedTo\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">AM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"AM\\\" [(ngModel)]=\\\"selectedToAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">PM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"PM\\\" [(ngModel)]=\\\"selectedToAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".type\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"absenceTypes\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [(ngModel)]=\\\"absenceDTO.absenceType\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".comment\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <textarea\\r\\n              class=\\\"aw-textarea\\\"\\r\\n              [rows]=\\\"3\\\"\\r\\n              pInputTextarea\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [(ngModel)]=\\\"absenceDTO.absenceDescription\\\"\\r\\n              maxlength=\\\"300\\\"\\r\\n            ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"\\r\\n        selectedFrom === undefined ||\\r\\n        selectedFrom === null ||\\r\\n        selectedTo === undefined ||\\r\\n        selectedTo === null ||\\r\\n        absenceDTO.absenceType === undefined ||\\r\\n        absenceDTO.absenceType === null\\r\\n      \\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { AWPropertiesConstants } from '../../../../../shared/constants/aw-properties-constants';\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidtAbsenceDTO } from '../../../../../shared/types/api-types/bidt-absence-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\n\r\n@Component({\r\n  selector: 'aw-absence-popup-form',\r\n  styleUrls: ['../../employee-form.component.scss'],\r\n  templateUrl: './absence-popup-form.component.html'\r\n})\r\nexport class AbsencePopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtAbsenceDTO>;\r\n\r\n  @Input('component-data')\r\n  public componentData: PopupEntry<BidtAbsenceDTO>;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public absenceDTO: BidtAbsenceDTO;\r\n  public isEditable: boolean;\r\n  public absenceTypes: LabelValue<string>[];\r\n  public selectedFrom: Date;\r\n  public selectedTo: Date;\r\n  public selectedFromAM: string;\r\n  public selectedToAM: string;\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'AbsencePopupFormComponent');\r\n\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidtAbsenceDTO>();\r\n    this.absenceDTO = {};\r\n    this.loadAbsenceType();\r\n    this.selectedFromAM = 'AM';\r\n    this.selectedToAM = 'PM';\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (this.componentData && this.componentData.componentId && this.componentData.componentId.length > 0) {\r\n      this.absenceDTO = this.componentData.object || {};\r\n      const hourValue = 12;\r\n      if (this.absenceDTO.absenceStartDate) {\r\n        this.selectedFrom = new Date(this.absenceDTO.absenceStartDate);\r\n        const fromHour = this.selectedFrom.getHours();\r\n        this.selectedFromAM = fromHour < hourValue ? 'AM' : 'PM';\r\n      }\r\n\r\n      if (this.absenceDTO.absenceEndDate) {\r\n        this.selectedTo = new Date(this.absenceDTO.absenceEndDate);\r\n        const toHour = this.selectedTo.getHours();\r\n        this.selectedToAM = toHour < hourValue ? 'AM' : 'PM';\r\n      }\r\n    }\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'AbsencePopupFormComponent';\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.selectedFrom && this.selectedTo && this.absenceDTO.absenceType) {\r\n      // the service count the total day only if selectedFrom's value is strictly before 14h/02pm and selectedTo's value is strictly after 14h/02pm\r\n      const addedMilliSeconds = 43200000; // 12h\r\n      const addedMilliSecondsFromMidnightToThreeAM = 10800000; // 3h\r\n\r\n      const hourFromMidnightToThreeAMValue = 3;\r\n      const hourHalfdayValue = 12;\r\n      const hourValueForAfternoon = 14;\r\n\r\n      if (this.selectedFromAM === 'PM') {\r\n        let timestamp = this.selectedFrom.getTime();\r\n        if (this.selectedFrom.getHours() < hourHalfdayValue) {\r\n          timestamp = timestamp + addedMilliSeconds;\r\n          if (this.selectedFrom.getHours() < hourFromMidnightToThreeAMValue) {\r\n            timestamp = timestamp + addedMilliSecondsFromMidnightToThreeAM;\r\n          }\r\n          this.absenceDTO.absenceStartDate = new Date(timestamp).toISOString();\r\n        } else if (this.selectedFrom.getHours() <= hourValueForAfternoon) {\r\n          timestamp = timestamp + addedMilliSecondsFromMidnightToThreeAM;\r\n          this.absenceDTO.absenceStartDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.absenceDTO.absenceStartDate = new Date(this.selectedFrom).toISOString();\r\n        }\r\n      } else if (this.selectedFromAM === 'AM') {\r\n        if (this.selectedFrom.getHours() >= hourHalfdayValue) {\r\n          let timestamp = this.selectedFrom.getTime();\r\n          timestamp = timestamp - addedMilliSeconds;\r\n          this.absenceDTO.absenceStartDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.absenceDTO.absenceStartDate = new Date(this.selectedFrom).toISOString();\r\n        }\r\n      }\r\n\r\n      if (this.selectedToAM === 'PM') {\r\n        let timestamp = this.selectedTo.getTime();\r\n        if (this.selectedTo.getHours() < hourHalfdayValue) {\r\n          timestamp = timestamp + addedMilliSeconds;\r\n          if (this.selectedTo.getHours() < hourFromMidnightToThreeAMValue) {\r\n            timestamp = timestamp + addedMilliSecondsFromMidnightToThreeAM;\r\n          }\r\n          this.absenceDTO.absenceEndDate = new Date(timestamp).toISOString();\r\n        } else if (this.selectedTo.getHours() <= hourValueForAfternoon) {\r\n          timestamp = timestamp + addedMilliSecondsFromMidnightToThreeAM;\r\n          this.absenceDTO.absenceEndDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.absenceDTO.absenceEndDate = new Date(this.selectedTo).toISOString();\r\n        }\r\n      } else if (this.selectedToAM === 'AM') {\r\n        if (this.selectedTo.getHours() >= hourHalfdayValue) {\r\n          let timestamp = this.selectedTo.getTime();\r\n          timestamp = timestamp - addedMilliSeconds;\r\n          this.absenceDTO.absenceEndDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.absenceDTO.absenceEndDate = new Date(this.selectedTo).toISOString();\r\n        }\r\n      }\r\n\r\n      if (\r\n        this.absenceDTO.absenceEndDate &&\r\n        this.absenceDTO.absenceStartDate &&\r\n        new Date(this.absenceDTO.absenceEndDate) < new Date(this.absenceDTO.absenceStartDate)\r\n      ) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('fromDateGreaterThanToDateError'));\r\n\r\n        return;\r\n      }\r\n\r\n      this.onValidated.emit(this.absenceDTO);\r\n      this.display = false;\r\n    } else {\r\n      this.messageService.showErrorMessage('global.missingFields');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  public loadAbsenceType(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_ABSENCE_TYPE_MAP).subscribe((results) => {\r\n      this.absenceTypes = JSON.parse(JSON.stringify(results)) as LabelValue<string>[];\r\n      this.absenceTypes = this.absenceTypes.filter((element) => {\r\n        return element.value !== AWPropertiesConstants.HR_ABSENCE_TYPE_HOLIDAY;\r\n      });\r\n      this.absenceTypes.map((absence) => {\r\n        return (absence.value = absence.label);\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentData.componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".date\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [(ngModel)]=\\\"evaluationDate\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".evaluator\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOnlyForm }\\\">\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"openEvaluatorPopup()\\\">{{ bidtEvaluationsOutputDTO.evaluator }}</div>\\r\\n\\r\\n            <div *ngIf=\\\"bidtEvaluationsOutputDTO.evaluator\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"bidtEvaluationsOutputDTO.evaluator = undefined\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openEvaluatorPopup()\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".type\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [(ngModel)]=\\\"evaluationDTO.evaluationType\\\"\\r\\n              [options]=\\\"evaluationTypes\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".evaluation\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"evaluationDTO.evaluationComment\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              maxlength=\\\"300\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"\\r\\n        evaluationDate === undefined ||\\r\\n        evaluationDate === null ||\\r\\n        bidtEvaluationsOutputDTO.evaluator === undefined ||\\r\\n        bidtEvaluationsOutputDTO.evaluator === null\\r\\n      \\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-employee\\r\\n  *ngIf=\\\"showEvaluatorPopup\\\"\\r\\n  [(display)]=\\\"!!showEvaluatorPopup\\\"\\r\\n  [employee-name]=\\\"bidtEvaluationsOutputDTO.evaluator\\\"\\r\\n  (onSelected)=\\\"setSelectedEvaluator($event)\\\"\\r\\n></aw-dialog-search-employee>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidtEvaluationsOutputDTO } from '../../../../../shared/types/api-output-types/bidt-employee/bidt-evaluations-output.interface';\r\nimport { BidtEmployeeDTO } from '../../../../../shared/types/api-types/bidt-employee-dto.interface';\r\nimport { BidtEvaluationDTO } from '../../../../../shared/types/api-types/bidt-evaluation-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\n\r\n@Component({\r\n  selector: 'aw-evaluation-popup-form',\r\n  templateUrl: './evaluation-popup-form.component.html'\r\n})\r\nexport class EvaluationPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtEvaluationsOutputDTO>;\r\n\r\n  @Input('component-data')\r\n  public componentData: PopupEntry<BidtEvaluationsOutputDTO>;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public evaluationDTO: BidtEvaluationDTO;\r\n  public bidtEvaluationsOutputDTO: BidtEvaluationsOutputDTO;\r\n  public isEditable: boolean;\r\n  public evaluationTypes: LabelValue<string>[];\r\n  public evaluationDate: Date;\r\n  public showEvaluatorPopup: boolean;\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'EvaluationPopupFormComponent');\r\n\r\n    this.showEvaluatorPopup = false;\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidtEvaluationsOutputDTO>();\r\n    this.evaluationDTO = {};\r\n    this.loadEvaluationType();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (this.componentData && this.componentData.componentId && this.componentData.componentId.length > 0) {\r\n      this.bidtEvaluationsOutputDTO = this.componentData.object || {};\r\n      this.bidtEvaluationsOutputDTO.bidtEvaluationDTO = this.bidtEvaluationsOutputDTO.bidtEvaluationDTO || {};\r\n      this.evaluationDTO = this.bidtEvaluationsOutputDTO.bidtEvaluationDTO;\r\n      if (this.evaluationDTO && !!this.evaluationDTO.evaluationDate) {\r\n        this.evaluationDate = new Date(this.evaluationDTO.evaluationDate);\r\n      }\r\n    }\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'EvaluationPopupFormComponent';\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.evaluationDate && this.bidtEvaluationsOutputDTO.evaluator) {\r\n      this.evaluationDTO.evaluationDate = this.evaluationDate.toISOString();\r\n      this.onValidated.emit(this.bidtEvaluationsOutputDTO);\r\n      this.display = false;\r\n    } else {\r\n      this.messageService.showErrorMessage('global.missingFields');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private loadEvaluationType(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_EVALUATION_TYPE_MAP).subscribe((results) => {\r\n      this.evaluationTypes = JSON.parse(JSON.stringify(results)) as LabelValue<string>[];\r\n      this.evaluationTypes.map((evaluation) => {\r\n        evaluation.value = evaluation.label;\r\n      });\r\n    });\r\n  }\r\n\r\n  public openEvaluatorPopup(): void {\r\n    this.showEvaluatorPopup = this.isReadOnlyForm ? false : true;\r\n  }\r\n\r\n  public setSelectedEvaluator(evaluator: Event): void {\r\n    this.bidtEvaluationsOutputDTO.evaluator = (evaluator as BidtEmployeeDTO).employeeLastName;\r\n    this.evaluationDTO.bidtEmployeeByBidtEmployeeId2Id = (evaluator as BidtEmployeeDTO).id;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentData.componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".date\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [(ngModel)]=\\\"expenseDate\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".type\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"expenseTypes\\\"\\r\\n              [(ngModel)]=\\\"expenseDTO.expenseType\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".value\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              #expenseValue=\\\"ngModel\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [(ngModel)]=\\\"expenseDTO.expenseValue\\\"\\r\\n              [pKeyFilter]=\\\"inputValidationService.validatorOfPositiveNumber()\\\"\\r\\n              [pValidateOnly]=\\\"true\\\"\\r\\n              maxlength=\\\"50\\\"\\r\\n            />\\r\\n            <p-message\\r\\n              *ngIf=\\\"expenseValue.invalid && (expenseValue.dirty || expenseValue.touched)\\\"\\r\\n              severity=\\\"error\\\"\\r\\n              [text]=\\\"inputValidationService.formatOfPositiveNumber()\\\"\\r\\n            ></p-message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".description\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <textarea\\r\\n              class=\\\"aw-textarea\\\"\\r\\n              [rows]=\\\"3\\\"\\r\\n              pInputTextarea\\r\\n              [(ngModel)]=\\\"expenseDTO.expenseDescription\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              maxlength=\\\"300\\\"\\r\\n            ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"\\r\\n        expenseDTO.expenseValue === undefined ||\\r\\n        expenseDTO.expenseValue === null ||\\r\\n        expenseDTO.expenseType === undefined ||\\r\\n        expenseDTO.expenseType === null ||\\r\\n        expenseDate === undefined ||\\r\\n        expenseDate === null ||\\r\\n        expenseDTO.expenseValue === '' ||\\r\\n        (expenseValue.invalid && (expenseValue.dirty || expenseValue.touched))\\r\\n      \\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { InputValidationService } from '../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidtExpenseDTO } from '../../../../../shared/types/api-types/bidt-expense-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\n\r\n@Component({\r\n  selector: 'aw-expense-popup-form',\r\n  templateUrl: './expense-popup-form.component.html'\r\n})\r\nexport class ExpensePopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtExpenseDTO>;\r\n\r\n  @Input('component-data')\r\n  public componentData: PopupEntry<BidtExpenseDTO>;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public expenseDTO: BidtExpenseDTO;\r\n  public isEditable: boolean;\r\n  public expenseTypes: LabelValue<string>[];\r\n  public expenseDate: Date;\r\n\r\n  public constructor(\r\n    public inputValidationService: InputValidationService,\r\n    private readonly messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'ExpensePopupFormComponent');\r\n\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidtExpenseDTO>();\r\n    this.expenseDTO = {};\r\n    this.expenseTypes = [];\r\n    this.loadExpenseType();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (this.componentData && this.componentData.componentId && this.componentData.componentId.length > 0) {\r\n      this.expenseDTO = this.componentData.object || {};\r\n      if (this.expenseDTO && !!this.expenseDTO.expenseDate) {\r\n        this.expenseDate = new Date(this.expenseDTO.expenseDate);\r\n      }\r\n      this.expenseDTO.expenseValue = this.expenseDTO.expenseValue || '0';\r\n    }\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'ExpensePopupFormComponent';\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.expenseDTO.expenseType && this.expenseDTO.expenseValue && this.expenseDate) {\r\n      this.expenseDTO.expenseDate = this.expenseDate.toISOString();\r\n      this.onValidated.emit(this.expenseDTO);\r\n      this.display = false;\r\n    } else {\r\n      this.messageService.showErrorMessage('global.missingFields');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private loadExpenseType(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_EXPENSE_TYPE_MAP).subscribe((results) => {\r\n      this.expenseTypes = JSON.parse(JSON.stringify(results)) as LabelValue<string>[];\r\n      this.expenseTypes.map((element) => {\r\n        element.value = element.label;\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentData.componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".from\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar custom-calendar-margin\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [(ngModel)]=\\\"startDate\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">AM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"AM\\\" [(ngModel)]=\\\"selectedFromAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">PM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"PM\\\" [(ngModel)]=\\\"selectedFromAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".to\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar custom-calendar-margin\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [(ngModel)]=\\\"endDate\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">AM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"AM\\\" [(ngModel)]=\\\"selectedToAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">PM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"PM\\\" [(ngModel)]=\\\"selectedToAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".status\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [(ngModel)]=\\\"holidayDTO.holidayStatus\\\"\\r\\n              [options]=\\\"holidayStatusList\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".validator\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOnlyForm }\\\">\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"openValidatorPopup()\\\">{{ holidayDTO.holidayValidator }}</div>\\r\\n\\r\\n            <div *ngIf=\\\"holidayDTO.holidayValidator\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"holidayDTO.holidayValidator = undefined\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openValidatorPopup()\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"startDate === undefined || startDate === null || endDate === undefined || endDate === null\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-employee\\r\\n  *ngIf=\\\"showValidatorPopup\\\"\\r\\n  [(display)]=\\\"!!showValidatorPopup\\\"\\r\\n  [employee-name]=\\\"holidayDTO.holidayValidator\\\"\\r\\n  (onSelected)=\\\"setSelectedValidator($event)\\\"\\r\\n></aw-dialog-search-employee>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { EmployeeHolidaysTableDTO } from '../../../../../shared/types/api-output-types/bidt-employee/employee-holidays-table-dto.interface';\r\nimport { BidtEmployeeDTO } from '../../../../../shared/types/api-types/bidt-employee-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\n\r\n@Component({\r\n  selector: 'aw-holidays-popup-form',\r\n  styleUrls: ['../../employee-form.component.scss'],\r\n  templateUrl: './holidays-popup-form.component.html'\r\n})\r\nexport class HolidaysPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<EmployeeHolidaysTableDTO>;\r\n\r\n  @Input('component-data')\r\n  public componentData: PopupEntry<EmployeeHolidaysTableDTO>;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public holidayDTO: EmployeeHolidaysTableDTO;\r\n  public isEditable: boolean;\r\n  public holidayStatusList: LabelValue<string>[];\r\n  public showValidatorPopup: boolean;\r\n  public selectedFromAM: string;\r\n  public selectedToAM: string;\r\n  public startDate: Date;\r\n  public endDate: Date;\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'HolidaysPopupFormComponent');\r\n    this.showValidatorPopup = false;\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<EmployeeHolidaysTableDTO>();\r\n    this.holidayDTO = {};\r\n    this.selectedFromAM = 'AM';\r\n    this.selectedToAM = 'PM';\r\n    this.loadHolidayStatus();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (this.componentData && this.componentData.componentId && this.componentData.componentId.length > 0) {\r\n      this.holidayDTO = this.componentData.object || {};\r\n      const hourValue = 12;\r\n      if (this.holidayDTO.holidayStartDate) {\r\n        this.startDate = new Date(this.holidayDTO.holidayStartDate);\r\n        const fromHour = new Date(this.holidayDTO.holidayStartDate).getHours();\r\n        this.selectedFromAM = fromHour < hourValue ? 'AM' : 'PM';\r\n      }\r\n\r\n      if (this.holidayDTO.holidayEndDate) {\r\n        this.endDate = new Date(this.holidayDTO.holidayEndDate);\r\n        const toHour = new Date(this.holidayDTO.holidayEndDate).getHours();\r\n        this.selectedToAM = toHour < hourValue ? 'AM' : 'PM';\r\n      }\r\n    }\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'HolidaysPopupFormComponent';\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.startDate && this.endDate) {\r\n      // the service count the total day only if startDate's value is strictly before 14h/02pm and endDate's value is strictly after 14h/02pm\r\n      const addedMilliSeconds = 43200000; // 12h\r\n      const addedMilliSecondsFromMidnightToThreeAM = 10800000; // 3h\r\n\r\n      const hourFromMidnightToThreeAMValue = 3;\r\n      const hourHalfdayValue = 12;\r\n      const hourValueForAfternoon = 14;\r\n\r\n      if (this.selectedFromAM === 'PM') {\r\n        let timestamp = this.startDate.getTime();\r\n        if (this.startDate.getHours() < hourHalfdayValue) {\r\n          timestamp = timestamp + addedMilliSeconds;\r\n          if (this.startDate.getHours() < hourFromMidnightToThreeAMValue) {\r\n            timestamp = timestamp + addedMilliSecondsFromMidnightToThreeAM;\r\n          }\r\n          this.holidayDTO.holidayStartDate = new Date(timestamp).toISOString();\r\n        } else if (this.startDate.getHours() <= hourValueForAfternoon) {\r\n          timestamp = timestamp + addedMilliSecondsFromMidnightToThreeAM;\r\n          this.holidayDTO.holidayStartDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.holidayDTO.holidayStartDate = new Date(this.startDate).toISOString();\r\n        }\r\n      } else if (this.selectedFromAM === 'AM') {\r\n        if (this.startDate.getHours() >= hourHalfdayValue) {\r\n          let timestamp = this.startDate.getTime();\r\n          timestamp = timestamp - addedMilliSeconds;\r\n          this.holidayDTO.holidayStartDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.holidayDTO.holidayStartDate = new Date(this.startDate).toISOString();\r\n        }\r\n      }\r\n\r\n      if (this.selectedToAM === 'PM') {\r\n        let timestamp = this.endDate.getTime();\r\n        if (this.endDate.getHours() < hourHalfdayValue) {\r\n          timestamp = timestamp + addedMilliSeconds;\r\n          if (this.endDate.getHours() < hourFromMidnightToThreeAMValue) {\r\n            timestamp = timestamp + addedMilliSecondsFromMidnightToThreeAM;\r\n          }\r\n          this.holidayDTO.holidayEndDate = new Date(timestamp).toISOString();\r\n        } else if (this.endDate.getHours() <= hourValueForAfternoon) {\r\n          timestamp = timestamp + addedMilliSecondsFromMidnightToThreeAM;\r\n          this.holidayDTO.holidayEndDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.holidayDTO.holidayEndDate = new Date(this.endDate).toISOString();\r\n        }\r\n      } else if (this.selectedToAM === 'AM') {\r\n        if (this.endDate.getHours() >= hourHalfdayValue) {\r\n          let timestamp = this.endDate.getTime();\r\n          timestamp = timestamp - addedMilliSeconds;\r\n          this.holidayDTO.holidayEndDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.holidayDTO.holidayEndDate = new Date(this.endDate).toISOString();\r\n        }\r\n      }\r\n\r\n      if (\r\n        this.holidayDTO.holidayEndDate &&\r\n        this.holidayDTO.holidayStartDate &&\r\n        new Date(this.holidayDTO.holidayEndDate) < new Date(this.holidayDTO.holidayStartDate)\r\n      ) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('fromDateGreaterThanToDateError'));\r\n\r\n        return;\r\n      }\r\n\r\n      this.onValidated.emit(this.holidayDTO);\r\n      this.display = false;\r\n    } else {\r\n      this.messageService.showErrorMessage('global.missingFields');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private loadHolidayStatus(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_ABSENCE_STATUS_MAP).subscribe((results) => {\r\n      this.holidayStatusList = JSON.parse(JSON.stringify(results)) as LabelValue<string>[];\r\n      this.holidayStatusList.map((holiday) => {\r\n        return (holiday.value = holiday.label);\r\n      });\r\n    });\r\n  }\r\n\r\n  public openValidatorPopup(): void {\r\n    this.showValidatorPopup = true;\r\n  }\r\n\r\n  public setSelectedValidator(validator: Event): void {\r\n    this.holidayDTO.holidayValidator = (validator as BidtEmployeeDTO).employeeLastName;\r\n    this.holidayDTO.bidtEmployeeByBidtEmployeeId2Id = (validator as BidtEmployeeDTO).id;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentData.componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".type\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"hourlyCostTypes\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [(ngModel)]=\\\"hourlyCostsDTO.hcDayType\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ componentData.componentId + \\\".cost\\\" | translate }} <span *ngIf=\\\"currencyLebel\\\">{{ currencyLebel }}</span>\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              #hcCost=\\\"ngModel\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"hourlyCostsDTO.hcCost\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [pKeyFilter]=\\\"inputValidationService.validatorOfPositiveNumber()\\\"\\r\\n              [pValidateOnly]=\\\"true\\\"\\r\\n            />\\r\\n            <p-message\\r\\n              *ngIf=\\\"hcCost.invalid && (hcCost.dirty || hcCost.touched)\\\"\\r\\n              severity=\\\"error\\\"\\r\\n              [text]=\\\"inputValidationService.formatOfPositiveNumber()\\\"\\r\\n            ></p-message>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"\\r\\n        hourlyCostsDTO.hcDayType === undefined ||\\r\\n        hourlyCostsDTO.hcDayType === null ||\\r\\n        hourlyCostsDTO.hcCost === undefined ||\\r\\n        hourlyCostsDTO.hcCost === null ||\\r\\n        hourlyCostsDTO.hcCost === '' ||\\r\\n        (hcCost.invalid && (hcCost.dirty || hcCost.touched))\\r\\n      \\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { InputValidationService } from '../../../../../shared/services/input-validation.service';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidtHourlyCostsOutputDTO } from '../../../../../shared/types/api-output-types/bidt-employee/bidt-hourly-costs-output-dto.interface';\r\nimport { BidtHourlyCostDTO } from '../../../../../shared/types/api-types/bidt-hourly-cost-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\nimport { EmployeeFormService } from '../../employee-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-hourly-costs-popup-form',\r\n  templateUrl: './hourly-costs-popup-form.component.html'\r\n})\r\nexport class HourlyCostsPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtHourlyCostsOutputDTO>;\r\n\r\n  @Input('component-data')\r\n  public componentData: PopupEntry<BidtHourlyCostsOutputDTO>;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public hourlyCostsDTO: BidtHourlyCostDTO;\r\n  public isEditable: boolean;\r\n  public hourlyCostTypes: LabelValue<string>[];\r\n  public hourlyCostsOutputDTO: BidtHourlyCostsOutputDTO;\r\n  public currencyLebel: string;\r\n\r\n  public constructor(\r\n    public inputValidationService: InputValidationService,\r\n    private readonly messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService,\r\n    public employeeFormService: EmployeeFormService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'HourlyCostsPopupFormComponent');\r\n\r\n    this.currencyLebel = '';\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidtHourlyCostsOutputDTO>();\r\n    this.hourlyCostsDTO = {};\r\n    this.hourlyCostsOutputDTO = {};\r\n    this.loadHourlyCostType();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (this.componentData && this.componentData.componentId && this.componentData.componentId.length > 0) {\r\n      this.hourlyCostsOutputDTO = this.componentData.object || {};\r\n      if (!this.hourlyCostsOutputDTO.bitHourlyCostDTO) {\r\n        this.hourlyCostsOutputDTO.bitHourlyCostDTO = {};\r\n      }\r\n      this.hourlyCostsDTO = this.hourlyCostsOutputDTO.bitHourlyCostDTO;\r\n      this.hourlyCostsDTO.hcCost = this.hourlyCostsDTO.hcCost || 0;\r\n    }\r\n\r\n    this.employeeFormService.getLocalCurrency().subscribe((result) => {\r\n      this.currencyLebel = result;\r\n    });\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'HourlyCostsPopupFormComponent';\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.hourlyCostsDTO.hcDayType && Number(this.hourlyCostsDTO.hcCost) >= 0) {\r\n      const costType = this.hourlyCostTypes.filter((costObj) => {\r\n        return costObj.value === this.hourlyCostsDTO.hcDayType;\r\n      })[0];\r\n      const decimalPrecision = 2;\r\n      const decimalFactor = 100;\r\n      this.hourlyCostsOutputDTO.costType = costType.label;\r\n      if (this.hourlyCostsOutputDTO.bitHourlyCostDTO) {\r\n        this.hourlyCostsOutputDTO.bitHourlyCostDTO.hcCost = this.hourlyCostsDTO.hcCost;\r\n      }\r\n\r\n      const costText = parseFloat(\r\n        (Math.round(Number(this.hourlyCostsDTO.hcCost) * decimalFactor) / decimalFactor).toString()\r\n      ).toFixed(decimalPrecision);\r\n      this.hourlyCostsOutputDTO.costText = `${costText} ${this.currencyLebel}`;\r\n\r\n      this.onValidated.emit(this.hourlyCostsOutputDTO);\r\n      this.display = false;\r\n    } else {\r\n      this.messageService.showErrorMessage('global.missingFields');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private loadHourlyCostType(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_HC_DAY_TYPE_MAP).subscribe((results) => {\r\n      this.hourlyCostTypes = results;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentData.componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".date\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [(ngModel)]=\\\"visitDate\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".endOfValidity\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [(ngModel)]=\\\"visitExpiration\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".comment\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <textarea\\r\\n              class=\\\"aw-textarea\\\"\\r\\n              [rows]=\\\"3\\\"\\r\\n              pInputTextarea\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [(ngModel)]=\\\"medicalExaminationObj.visitComment\\\"\\r\\n              maxlength=\\\"300\\\"\\r\\n            ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"visitDate === undefined || visitDate === null\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidtMedicalVisitDTO } from '../../../../../shared/types/api-types/bidt-medical-visit-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\n\r\n@Component({\r\n  selector: 'aw-medical-examination-popup-form',\r\n  templateUrl: './medical-examination-popup-form.component.html'\r\n})\r\nexport class MedicalExaminationPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtMedicalVisitDTO>;\r\n\r\n  @Input('component-data')\r\n  public componentData: PopupEntry<BidtMedicalVisitDTO>;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public medicalExaminationObj: BidtMedicalVisitDTO;\r\n  public isEditable: boolean;\r\n  public visitDate: Date;\r\n  public visitExpiration: Date;\r\n\r\n  public constructor(private readonly messageService: MessageService, public sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'MedicalExaminationPopupFormComponent');\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidtMedicalVisitDTO>();\r\n    this.medicalExaminationObj = {};\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (this.componentData && this.componentData.componentId && this.componentData.componentId.length > 0) {\r\n      this.medicalExaminationObj = this.componentData.object || {};\r\n      if (this.medicalExaminationObj && !!this.medicalExaminationObj.visitDate) {\r\n        this.visitDate = new Date(this.medicalExaminationObj.visitDate);\r\n      }\r\n      if (this.medicalExaminationObj && !!this.medicalExaminationObj.visitExpiration) {\r\n        this.visitExpiration = new Date(this.medicalExaminationObj.visitExpiration);\r\n      }\r\n    }\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'MedicalExaminationPopupFormComponent';\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.visitDate) {\r\n      this.medicalExaminationObj.visitDate = this.visitDate.toISOString();\r\n      this.medicalExaminationObj.visitExpiration = this.visitExpiration && this.visitExpiration.toISOString();\r\n      this.onValidated.emit(this.medicalExaminationObj);\r\n      this.display = false;\r\n    } else {\r\n      this.messageService.showErrorMessage('global.missingFields');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentData.componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".type\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"qualificationTypes\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [(ngModel)]=\\\"selectedQualificationType\\\"\\r\\n              (onChange)=\\\"loadTitles()\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".qualificationTitle\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"qualificationTitles\\\"\\r\\n              [(ngModel)]=\\\"selectedQualificationTitle\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".institution\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              [(ngModel)]=\\\"bidtQualifEmployeeDTO.qualifEmployeeInstitution\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              maxlength=\\\"100\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".obtainingDate\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [(ngModel)]=\\\"qualifEmployeeStartDate\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".endingDate\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [(ngModel)]=\\\"qualifEmployeeEndDate\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".qualifOngoing\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-checkbox\\r\\n              binary=\\\"true\\\"\\r\\n              class=\\\"aw-checkbox general-type-checkbox\\\"\\r\\n              [(ngModel)]=\\\"bidtQualifEmployeeDTO.qualifOngoing\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n            ></p-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"\\r\\n        selectedQualificationType === undefined ||\\r\\n        selectedQualificationType === null ||\\r\\n        selectedQualificationTitle === undefined ||\\r\\n        selectedQualificationTitle === null\\r\\n      \\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { FindEmployeeQualificationDTO } from '../../../../../shared/types/api-output-types/bidt-qualif-employee/find-employee-qualification-dto.interface';\r\nimport { QualificationTitleListDTO } from '../../../../../shared/types/api-output-types/bidt-qualification/qualification-title-list-dto.interface';\r\nimport { BidtQualifEmployeeDTO } from '../../../../../shared/types/api-types/bidt-qualif-employee-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\n\r\nimport { QualificationPopupFormService } from './qualification-popup-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-qualification-popup-form',\r\n  templateUrl: './qualification-popup-form.component.html'\r\n})\r\nexport class QualificationPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<FindEmployeeQualificationDTO>;\r\n\r\n  @Input('component-data')\r\n  public componentData: PopupEntry<FindEmployeeQualificationDTO>;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public qualifEmployeeDTO: FindEmployeeQualificationDTO;\r\n  public isEditable: boolean;\r\n  public qualificationTypes: LabelValue<string>[];\r\n  public qualificationTitles: LabelValue<string>[];\r\n\r\n  public bidtQualifEmployeeDTO: BidtQualifEmployeeDTO;\r\n  public qualifEmployeeStartDate: Date;\r\n  public qualifEmployeeEndDate: Date;\r\n  public selectedQualificationType: string;\r\n  public selectedQualificationTitle: string;\r\n  private qualificationTitlesCache: QualificationTitleListDTO[];\r\n\r\n  public constructor(\r\n    public qualificationPopupFormService: QualificationPopupFormService,\r\n    private readonly messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'QualificationPopupFormComponent');\r\n\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<FindEmployeeQualificationDTO>();\r\n    this.qualificationTitles = [];\r\n    this.qualificationTypes = [];\r\n    this.qualificationTitlesCache = [];\r\n    this.qualifEmployeeDTO = {};\r\n    this.bidtQualifEmployeeDTO = {};\r\n    this.loadQualificationType();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.qualificationPopupFormService.findQualificationTitle().subscribe((results) => {\r\n      this.qualificationTitlesCache = results;\r\n\r\n      if (this.componentData && this.componentData.componentId) {\r\n        this.qualifEmployeeDTO = this.componentData.object || {};\r\n\r\n        if (!this.qualifEmployeeDTO.bidtQualifEmployeeDTO) {\r\n          this.qualifEmployeeDTO.bidtQualifEmployeeDTO = {};\r\n        }\r\n        this.bidtQualifEmployeeDTO = this.qualifEmployeeDTO.bidtQualifEmployeeDTO;\r\n\r\n        if (this.bidtQualifEmployeeDTO && !!this.bidtQualifEmployeeDTO.qualifEmployeeStartDate) {\r\n          this.qualifEmployeeStartDate = new Date(this.bidtQualifEmployeeDTO.qualifEmployeeStartDate);\r\n        }\r\n        if (this.bidtQualifEmployeeDTO && !!this.bidtQualifEmployeeDTO.qualifEmployeeEndDate) {\r\n          this.qualifEmployeeEndDate = new Date(this.bidtQualifEmployeeDTO.qualifEmployeeEndDate);\r\n        }\r\n        this.showQualificationType();\r\n        this.loadTitles();\r\n      }\r\n    });\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'QualificationPopupFormComponent';\r\n  }\r\n\r\n  public validate(): void {\r\n    if (\r\n      this.qualifEmployeeDTO.bidtQualifEmployeeDTO &&\r\n      this.selectedQualificationTitle &&\r\n      this.selectedQualificationType\r\n    ) {\r\n      this.qualifEmployeeDTO.bidtQualifEmployeeDTO.qualifEmployeeEndDate =\r\n        this.qualifEmployeeEndDate && this.qualifEmployeeEndDate.toISOString();\r\n      this.qualifEmployeeDTO.bidtQualifEmployeeDTO.qualifEmployeeStartDate =\r\n        this.qualifEmployeeStartDate && this.qualifEmployeeStartDate.toISOString();\r\n\r\n      this.qualifEmployeeDTO.qualificationType = this.qualificationTypes.filter((types) => {\r\n        return types.value === this.selectedQualificationType;\r\n      })[0].label;\r\n\r\n      this.qualifEmployeeDTO.bidtQualifEmployeeDTO.bidtQualificationId = Number(this.selectedQualificationTitle);\r\n\r\n      this.qualifEmployeeDTO.qualificationTitle = this.qualificationTitles.filter((title) => {\r\n        return title.value === this.selectedQualificationTitle;\r\n      })[0].label;\r\n\r\n      this.onValidated.emit(this.qualifEmployeeDTO);\r\n      this.display = false;\r\n    } else {\r\n      this.messageService.showErrorMessage('global.missingFields');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private showQualificationType(): void {\r\n    const temp = this.qualificationTypes.filter((qualifType) => {\r\n      return qualifType.label === this.qualifEmployeeDTO.qualificationType;\r\n    })[0];\r\n    this.selectedQualificationType = temp && temp.value;\r\n  }\r\n\r\n  private loadQualificationType(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_QUALIFICATION_TYPE_MAP).subscribe((results) => {\r\n      this.qualificationTypes = results;\r\n    });\r\n  }\r\n\r\n  public loadTitles(): void {\r\n    this.qualificationTitles = [];\r\n    if (this.selectedQualificationType) {\r\n      const titlesTemp = this.qualificationTitlesCache.filter((title) => {\r\n        return title.bidtQualificationData.qualificationType === this.selectedQualificationType;\r\n      });\r\n      titlesTemp.forEach((title) => {\r\n        this.qualificationTitles.push({ label: title.labelValueList.label, value: title.labelValueList.value });\r\n      });\r\n      // show selected title\r\n      const selectedTitleObj = this.qualificationTitles.filter((title) => {\r\n        return title.label === this.qualifEmployeeDTO.qualificationTitle;\r\n      })[0];\r\n\r\n      this.selectedQualificationTitle = selectedTitleObj && selectedTitleObj.value;\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtQualificationApi } from '../../../../../shared/api/bidt-qualification.api';\r\nimport { AbstractAwHttpService } from '../../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../../shared/services/app-config.service';\r\nimport { QualificationTitleListDTO } from '../../../../../shared/types/api-output-types/bidt-qualification/qualification-title-list-dto.interface';\r\n\r\n@Injectable()\r\nexport class QualificationPopupFormService extends AbstractAwHttpService {\r\n  public displayDialog: boolean;\r\n\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtQualificationApi: BidtQualificationApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findQualificationTitle(): Observable<QualificationTitleListDTO[]> {\r\n    return super.post<void, QualificationTitleListDTO[]>(this.bidtQualificationApi.findQualificationTitle);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentData.componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".trainingTitle\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [(ngModel)]=\\\"trainingDTO.trainingName\\\"\\r\\n              maxlength=\\\"100\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\"></div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group flex--2\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".startTime\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [(ngModel)]=\\\"selectedTrainingStartDate\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">AM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"AM\\\" [(ngModel)]=\\\"selectedFromAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">PM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"PM\\\" [(ngModel)]=\\\"selectedFromAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group flex--2\\\" [ngClass]=\\\"{ required: !isReadOnlyForm }\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".endTime\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-calendar\\r\\n              showButtonBar=\\\"true\\\"\\r\\n              [monthNavigator]=\\\"true\\\"\\r\\n              [yearNavigator]=\\\"true\\\"\\r\\n              [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n              class=\\\"aw-calendar\\\"\\r\\n              [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n              [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              [(ngModel)]=\\\"selectedTrainingEndDate\\\"\\r\\n            ></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">AM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"AM\\\" [(ngModel)]=\\\"selectedToAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">PM</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-radioButton class=\\\"aw-radiobutton\\\" value=\\\"PM\\\" [(ngModel)]=\\\"selectedToAM\\\"></p-radioButton>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".performed\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-checkbox\\r\\n              binary=\\\"true\\\"\\r\\n              class=\\\"aw-checkbox\\\"\\r\\n              [(ngModel)]=\\\"trainingDTO.trainingPerformed\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n            ></p-checkbox>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".requestedBy\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [options]=\\\"requestedByList\\\"\\r\\n              [(ngModel)]=\\\"trainingDTO.trainingAskedBy\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".instructor\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [(ngModel)]=\\\"trainingDTO.trainingInstructor\\\"\\r\\n              maxlength=\\\"100\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".center\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [(ngModel)]=\\\"trainingDTO.trainingCenter\\\"\\r\\n              maxlength=\\\"100\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".comment\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [disabled]=\\\"isReadOnlyForm\\\"\\r\\n              [(ngModel)]=\\\"trainingDTO.trainingComment\\\"\\r\\n              maxlength=\\\"300\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOnlyForm\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"cancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOnlyForm\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"\\r\\n        trainingDTO.trainingName === undefined ||\\r\\n        trainingDTO.trainingName === null ||\\r\\n        trainingDTO.trainingName.trim().length === 0 ||\\r\\n        selectedTrainingStartDate === undefined ||\\r\\n        selectedTrainingStartDate === null ||\\r\\n        selectedTrainingEndDate === undefined ||\\r\\n        selectedTrainingEndDate === null\\r\\n      \\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidtTrainingDTO } from '../../../../../shared/types/api-types/bidt-training-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { PopupEntry } from '../../../../../shared/types/popup-entry.interface';\r\n\r\n@Component({\r\n  selector: 'aw-training-popup-form',\r\n  templateUrl: './training-popup-form.component.html'\r\n})\r\nexport class TrainingPopupFormComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Input()\r\n  public isReadOnlyForm: boolean;\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Output()\r\n  public onValidated: EventEmitter<BidtTrainingDTO>;\r\n\r\n  @Input('component-data')\r\n  public componentData: PopupEntry<BidtTrainingDTO>;\r\n\r\n  public displayValue: boolean;\r\n\r\n  public trainingDTO: BidtTrainingDTO;\r\n  public isEditable: boolean;\r\n  public requestedByList: LabelValue<string>[];\r\n  public selectedTrainingStartDate: Date;\r\n  public selectedTrainingEndDate: Date;\r\n  public selectedFromAM: string;\r\n  public selectedToAM: string;\r\n\r\n  public constructor(\r\n    private readonly messageService: MessageService,\r\n    public sessionService: SessionService,\r\n    public propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'TrainingPopupFormComponent');\r\n\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidtTrainingDTO>();\r\n    this.trainingDTO = {};\r\n    this.selectedFromAM = 'AM';\r\n    this.selectedToAM = 'PM';\r\n    this.loadRequestedbyList();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    if (this.componentData && this.componentData.componentId && this.componentData.componentId.length > 0) {\r\n      this.trainingDTO = this.componentData.object || {};\r\n      if (this.trainingDTO && this.trainingDTO.trainingStartDate) {\r\n        this.selectedTrainingStartDate = new Date(this.trainingDTO.trainingStartDate);\r\n      }\r\n      if (this.trainingDTO && this.trainingDTO.trainingEndDate) {\r\n        this.selectedTrainingEndDate = new Date(this.trainingDTO.trainingEndDate);\r\n      }\r\n\r\n      const hourValue = 12;\r\n      if (this.trainingDTO.trainingStartDate) {\r\n        const startTime = new Date(this.trainingDTO.trainingStartDate);\r\n        const fromHour = startTime.getHours();\r\n        this.selectedFromAM = fromHour < hourValue ? 'AM' : 'PM';\r\n      }\r\n\r\n      if (this.trainingDTO.trainingEndDate) {\r\n        const endTime = new Date(this.trainingDTO.trainingEndDate);\r\n        const toHour = endTime.getHours();\r\n        this.selectedToAM = toHour < hourValue ? 'AM' : 'PM';\r\n      }\r\n    }\r\n  }\r\n\r\n  public getTypeName(): string {\r\n    return 'TrainingPopupFormComponent';\r\n  }\r\n\r\n  public validate(): void {\r\n    if (this.trainingDTO.trainingName && this.selectedTrainingStartDate && this.selectedTrainingEndDate) {\r\n      const addedMilliSeconds = 43200000;\r\n      const hourValue = 12;\r\n      if (this.selectedFromAM === 'PM') {\r\n        if (this.selectedTrainingStartDate.getHours() < hourValue) {\r\n          let timestamp = this.selectedTrainingStartDate.getTime();\r\n          timestamp = timestamp + addedMilliSeconds;\r\n          this.trainingDTO.trainingStartDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.trainingDTO.trainingStartDate =\r\n            this.selectedTrainingStartDate && this.selectedTrainingStartDate.toISOString();\r\n        }\r\n      } else if (this.selectedFromAM === 'AM') {\r\n        if (this.selectedTrainingStartDate.getHours() >= hourValue) {\r\n          let timestamp = this.selectedTrainingStartDate.getTime();\r\n          timestamp = timestamp - addedMilliSeconds;\r\n          this.trainingDTO.trainingStartDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.trainingDTO.trainingStartDate =\r\n            this.selectedTrainingStartDate && this.selectedTrainingStartDate.toISOString();\r\n        }\r\n      }\r\n\r\n      if (this.selectedToAM === 'PM') {\r\n        if (this.selectedTrainingEndDate.getHours() < hourValue) {\r\n          let timestamp = this.selectedTrainingEndDate.getTime();\r\n          timestamp = timestamp + addedMilliSeconds;\r\n          this.trainingDTO.trainingEndDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.trainingDTO.trainingEndDate = this.selectedTrainingEndDate && this.selectedTrainingEndDate.toISOString();\r\n        }\r\n      } else if (this.selectedToAM === 'AM') {\r\n        if (this.selectedTrainingEndDate.getHours() >= hourValue) {\r\n          let timestamp = this.selectedTrainingEndDate.getTime();\r\n          timestamp = timestamp - addedMilliSeconds;\r\n          this.trainingDTO.trainingEndDate = new Date(timestamp).toISOString();\r\n        } else {\r\n          this.trainingDTO.trainingEndDate = this.selectedTrainingEndDate && this.selectedTrainingEndDate.toISOString();\r\n        }\r\n      }\r\n\r\n      if (\r\n        this.trainingDTO.trainingEndDate &&\r\n        this.trainingDTO.trainingStartDate &&\r\n        new Date(this.trainingDTO.trainingEndDate) < new Date(this.trainingDTO.trainingStartDate)\r\n      ) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('fromDateGreaterThanToDateError'));\r\n\r\n        return;\r\n      }\r\n\r\n      this.trainingDTO.trainingPerformed = this.trainingDTO.trainingPerformed ? 1 : 0;\r\n      this.onValidated.emit(this.trainingDTO);\r\n      this.display = false;\r\n    } else {\r\n      this.messageService.showErrorMessage('global.missingFields');\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private loadRequestedbyList(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.HR_TRAINING_ASKED_BY_MAP).subscribe((results) => {\r\n      this.requestedByList = JSON.parse(JSON.stringify(results)) as LabelValue<string>[];\r\n      this.requestedByList.map((requestedBy) => {\r\n        return (requestedBy.value = requestedBy.label);\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".filterOnStart\\\" | translate }} </label>\\r\\n    <div class=\\\"form-control\\\"></div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".from\\\" | translate }} </label>\\r\\n    <div class=\\\"form-control\\\">\\r\\n      <p-calendar\\r\\n        showButtonBar=\\\"true\\\"\\r\\n        [monthNavigator]=\\\"true\\\"\\r\\n        [yearNavigator]=\\\"true\\\"\\r\\n        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n        class=\\\"aw-calendar\\\"\\r\\n        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n        [(ngModel)]=\\\"searchCriteria.fromStartTimeFilter\\\"\\r\\n        appendTo=\\\"body\\\"\\r\\n        class=\\\"aw-calendar\\\"\\r\\n      ></p-calendar>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".to\\\" | translate }} </label>\\r\\n    <div class=\\\"form-control\\\">\\r\\n      <p-calendar\\r\\n        showButtonBar=\\\"true\\\"\\r\\n        [monthNavigator]=\\\"true\\\"\\r\\n        [yearNavigator]=\\\"true\\\"\\r\\n        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n        class=\\\"aw-calendar\\\"\\r\\n        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n        [(ngModel)]=\\\"searchCriteria.toStartTimeTimeFilter\\\"\\r\\n        appendTo=\\\"body\\\"\\r\\n      ></p-calendar>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".filterOnEnd\\\" | translate }} </label>\\r\\n    <div class=\\\"form-control\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".from\\\" | translate }} </label>\\r\\n    <div class=\\\"form-control\\\">\\r\\n      <p-calendar\\r\\n        showButtonBar=\\\"true\\\"\\r\\n        [monthNavigator]=\\\"true\\\"\\r\\n        [yearNavigator]=\\\"true\\\"\\r\\n        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n        class=\\\"aw-calendar\\\"\\r\\n        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n        [(ngModel)]=\\\"searchCriteria.fromEndTimeFilter\\\"\\r\\n        appendTo=\\\"body\\\"\\r\\n      ></p-calendar>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".to\\\" | translate }} </label>\\r\\n    <div class=\\\"form-control\\\">\\r\\n      <p-calendar\\r\\n        showButtonBar=\\\"true\\\"\\r\\n        [monthNavigator]=\\\"true\\\"\\r\\n        [yearNavigator]=\\\"true\\\"\\r\\n        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n        class=\\\"aw-calendar\\\"\\r\\n        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n        [(ngModel)]=\\\"searchCriteria.toEndTimeFilter\\\"\\r\\n        appendTo=\\\"body\\\"\\r\\n      ></p-calendar>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row action-list\\\">\\r\\n  <button type=\\\"button\\\" mat-raised-button (click)=\\\"reset()\\\">\\r\\n    {{ \\\"global.reset\\\" | translate }}\\r\\n  </button>\\r\\n\\r\\n  <button type=\\\"button\\\" mat-raised-button (click)=\\\"filter()\\\">\\r\\n    {{ \\\"global.filter\\\" | translate }}\\r\\n  </button>\\r\\n</div>\\r\\n\"","module.exports = \":host .action-list {\\n  justify-content: flex-end; }\\n  :host .action-list .aw-btn {\\n    margin-left: 8px; }\\n  :host .action-list .aw-btn:first-of-type {\\n      margin-left: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9odW1hbi1yZXNvdXJjZXMvZW1wbG95ZWUtZm9ybS93b3JrLWZsaWdodC10YWJsZS1maWx0ZXJzL0Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZnJvbnRlbmRfYWVyb3dlYmIvc3JjXFxhcHBcXG1haW5cXGh1bWFuLXJlc291cmNlc1xcZW1wbG95ZWUtZm9ybVxcd29yay1mbGlnaHQtdGFibGUtZmlsdGVyc1xcd29yay1mbGlnaHQtdGFibGUtZmlsdGVycy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFpbi9odW1hbi1yZXNvdXJjZXMvZW1wbG95ZWUtZm9ybS93b3JrLWZsaWdodC10YWJsZS1maWx0ZXJzL0Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZnJvbnRlbmRfYWVyb3dlYmIvc3JjXFxzdHlsZXNcXF9jb25zdGFudHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUVJLHlCQUF5QixFQUFBO0VBRjdCO0lBS00sZ0JDcUNZLEVBQUE7RUQxQ2xCO01BUVEsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9odW1hbi1yZXNvdXJjZXMvZW1wbG95ZWUtZm9ybS93b3JrLWZsaWdodC10YWJsZS1maWx0ZXJzL3dvcmstZmxpZ2h0LXRhYmxlLWZpbHRlcnMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiY29uc3RhbnRzXCI7XHJcblxyXG46aG9zdCB7XHJcbiAgLmFjdGlvbi1saXN0IHtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcblxyXG4gICAgLmF3LWJ0biB7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAkbWFyZ2luLXZhbHVlO1xyXG5cclxuICAgICAgJjpmaXJzdC1vZi10eXBlIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIkcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4kc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XHJcbiRwcmltYXJ5LXRleHQtY29sb3I6ICMwMDA7XHJcbiRzZWNvbmRhcnktdGV4dC1jb2xvcjogIzU5NTk1OTtcclxuJGFjY2VudC1jb2xvcjogIzAxNTc5YjtcclxuXHJcbiRib2R5LWJhY2tncm91bmQtY29sb3I6ICNlOGViZWQ7XHJcbiR0b3BiYXItY29sb3I6ICNmYWZhZmE7XHJcblxyXG4vLyAkcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjMWUxZTFlO1xyXG4vLyAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7XHJcbi8vICRwcmltYXJ5LXRleHQtY29sb3I6ICNlOGU4ZTg7XHJcbi8vICRzZWNvbmRhcnktdGV4dC1jb2xvcjogI2ZmZjtcclxuLy8gJGFjY2VudC1jb2xvcjogIzljZGNmZTtcclxuXHJcbiRib3JkZXItY29sb3I6ICRzZWNvbmRhcnktdGV4dC1jb2xvcjtcclxuJGJvcmRlci1jb2xvci0tZGlzYWJsZWQ6IHRyYW5zcGFyZW50O1xyXG4kYm9yZGVyLWNvbG9yLS1mb2N1czogJGFjY2VudC1jb2xvcjtcclxuJGJvcmRlci1jb2xvci0taG92ZXI6ICMxYTFhMWE7XHJcblxyXG4kZ3JlZW4tZGFyazE6ICMyNzYzMmE7XHJcbiRncmVlbi1saWdodDE6ICM0Y2FmNTA7XHJcbiRvcmFuZ2U6ICNmZmMxMDc7XHJcbiRyZWQtZGFyazE6ICNhODI1MjU7XHJcbiRyZWQtbGlnaHQxOiAjZjY2ODVlO1xyXG4kYmx1ZS1saWdodDE6ICNiOGQwZTg7XHJcbiRibHVlLWRhcmsxOiAjMDA2ZWE5O1xyXG4kZ3JleTE6ICNjOGQ0ZDY7XHJcbiR5ZWxsb3cxOiAjZGRkZjAwO1xyXG5cclxuJGNyaXRpY2FsLXZhbHVlLWRhcms6ICNmYmE2NDM7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG4kY3JpdGljYWwtdmFsdWUtbGlnaHQ6ICNmZWNjOGU7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG4kY2FsZW5kYXIteWVsbG93OiAjZWZlZmIwOyAvLyBUT0RPOiByZW1vdmUgaXRcclxuJGJhZC12YWx1ZS1kYXJrOiAjZmY2NzU4OyAvLyBUT0RPOiByZW1vdmUgaXRcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbiRib3JkZXItcmFkaXVzOiA0cHg7XHJcbiRib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4kYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiRmb250LWZhbWlseTogXCJMYXRvTGF0aW5XZWJcIjtcclxuJGZvbnQtc2l6ZTogMC44NzVyZW07XHJcbiRmb250LXdlaWdodDogNDAwO1xyXG4kbGluZS1oZWlnaHQ6IDEuNDI4NTcxNDI5O1xyXG4kbWFyZ2luLXZhbHVlOiA4cHg7XHJcbiRwYWdlLW1heC13aWR0aDogMTM2NnB4O1xyXG4kYXR0cmlidXRlcy1jb2x1bW4td2lkdGgtNDogNDtcclxuJGF0dHJpYnV0ZXMtY29sdW1uLXdpZHRoLTM6IDM7XHJcbiRhdHRyaWJ1dGVzLWNvbHVtbi13aWR0aC0yOiAyO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuJGxlZnQtc2lkZWJhci13aWR0aC0tY29sbGFwc2VkOiA1MHB4O1xyXG4kbGVmdC1zaWRlYmFyLXdpZHRoLS1leHBhbmRlZDogMjIwcHg7XHJcbiRyaWdodC1zaWRlYmFyLXdpZHRoLS1jb2xsYXBzZWQ6IDUwcHg7XHJcbiRyaWdodC1zaWRlYmFyLXdpZHRoLS1leHBhbmRlZDogMjIwcHg7XHJcbiR0b3BiYXItaGVpZ2h0OiA0MHB4O1xyXG4kbWFpbmJhci1ib3JkZXItY29sb3I6IGRhcmtlbigkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3IsIDUlKTtcclxuJG1haW5iYXItYm9yZGVyLXdpZHRoOiAycHg7XHJcbiRwYWdlLWhlYWRlci1oZWlnaHQ6IDUuNXJlbTtcclxuJGZvcm0tY29udHJvbC1oZWlnaHQ6IDIuNXJlbTtcclxuJGNoZWNrYm94LWhlaWdodDogMS4yNXJlbTtcclxuJHJhZGlvYnV0dG9uLWhlaWdodDogMS4yNXJlbTtcclxuIl19 */\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { FindEmployeeWorksInput } from '../../../../shared/types/api-input-types/bidt-employee/find-employee-works-input.interface';\r\nimport { GenericComponent } from '../../../../shared/types/generic-component';\r\n\r\n@Component({\r\n  selector: 'aw-work-flight-table-filters',\r\n  styleUrls: ['./work-flight-table-filters.component.scss'],\r\n  templateUrl: './work-flight-table-filters.component.html'\r\n})\r\nexport class WorkFlightTableFiltersComponent extends GenericComponent {\r\n  @Input()\r\n  public searchCriteria: FindEmployeeWorksInput;\r\n\r\n  @Output()\r\n  public onFilter: EventEmitter<void>;\r\n\r\n  @Output()\r\n  public onReset: EventEmitter<void>;\r\n\r\n  public constructor(public sessionService: SessionService) {\r\n    super(ComponentOpenMode.Write);\r\n    this.onFilter = new EventEmitter<void>();\r\n    this.onReset = new EventEmitter<void>();\r\n    this.searchCriteria = this.searchCriteria || {};\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'WorkFlightTableFiltersComponent';\r\n  }\r\n\r\n  public filter(): void {\r\n    this.onFilter.emit();\r\n  }\r\n\r\n  public reset(): void {\r\n    this.onReset.emit();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header-container\\\">\\r\\n  <div class=\\\"page-context\\\">\\r\\n    <div class=\\\"page-title-container\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-secondary-actions\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n          [ngClass]=\\\"{ 'fa-star': isFavoriteEntry, 'fa-star-o': !isFavoriteEntry }\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"updateFavoriteState()\\\"\\r\\n          pTooltip=\\\"{{ 'page.' + (isFavoriteEntry ? 'removeFromFavorites' : 'addToFavorites') | translate }}\\\"\\r\\n          tooltipPosition=\\\"bottom\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-subtitle-container\\\">\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        {{ \\\"page.searchPage\\\" | translate }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewEmployee()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row search-criteria-header\\\">\\r\\n                  <i\\r\\n                    class=\\\"fa fa-fw fa-undo aw-icon aw-icon-with-border search-criteria-action\\\"\\r\\n                    aria-hidden=\\\"true\\\"\\r\\n                    pTooltip=\\\"{{ 'global.reset' | translate }}\\\"\\r\\n                    tooltipPosition=\\\"top\\\"\\r\\n                    (click)=\\\"resetSearchCriteria()\\\"\\r\\n                  ></i>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".employeeFirstName\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"aw-input\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.bidtEmployeeDTO.employeeFirstName\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".employeeLastName\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.bidtEmployeeDTO.employeeLastName\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".employeeNumber\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.bidtEmployeeDTO.employeeNumber\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".bidtCompanyName\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"companies\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.companyId\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                        (onChange)=\\\"loadSites()\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".bidtSiteName\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"sites\\\"\\r\\n                        [(ngModel)]=\\\"searchObject.bidtEmployeeDTO.bidtSiteId\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      (click)=\\\"search()\\\"\\r\\n                      color=\\\"primary\\\"\\r\\n                      appKeyPress\\r\\n                      [keyCode]=\\\"'Enter'\\\"\\r\\n                      (keyPress)=\\\"search()\\\"\\r\\n                    >\\r\\n                      {{ \\\"global.toSearch\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ \\\"global.results\\\" | translate }} ({{ resultsTable.list ? resultsTable.list.length : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #ptable\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"resultsTableCols\\\"\\r\\n                [value]=\\\"resultsTable.list\\\"\\r\\n                [(selection)]=\\\"selectedEmployees\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedEmployees.length > 0 }\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableGlobalFilter\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"ptable.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        *ngIf=\\\"resultsTable.list && resultsTable.list.length > 0 && selectedEmployees.length === 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"exportTable()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.export\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"hasManageAccessRight && selectedEmployees.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"deleteSelectedEmployees()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedEmployees.length > 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openSelectedEmployees()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ rowData[col.field] }}\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host .form-group {\\n  margin-right: 20px;\\n  max-width: 15rem;\\n  min-width: 10rem;\\n  width: 20%; }\\n  :host .form-group:last-of-type {\\n    margin-right: 0; }\\n  :host .search-criteria-primary {\\n  justify-content: flex-start; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9odW1hbi1yZXNvdXJjZXMvZW1wbG95ZWUtc2VhcmNoL0Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZnJvbnRlbmRfYWVyb3dlYmIvc3JjXFxhcHBcXG1haW5cXGh1bWFuLXJlc291cmNlc1xcZW1wbG95ZWUtc2VhcmNoXFxlbXBsb3llZS1zZWFyY2guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixVQUFVLEVBQUE7RUFMZDtJQVFNLGVBQWUsRUFBQTtFQVJyQjtFQWFJLDJCQUEyQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9odW1hbi1yZXNvdXJjZXMvZW1wbG95ZWUtc2VhcmNoL2VtcGxveWVlLXNlYXJjaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDE1cmVtO1xyXG4gICAgbWluLXdpZHRoOiAxMHJlbTtcclxuICAgIHdpZHRoOiAyMCU7XHJcblxyXG4gICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuc2VhcmNoLWNyaXRlcmlhLXByaW1hcnkge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Table } from 'primeng/table';\r\n\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../shared/services/confirmation.service';\r\nimport { ExportService } from '../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { FindEmployeeBySearchCriteriaInput } from '../../../shared/types/api-input-types/bidt-employee/find-employee-by-search-criteria-input.interface';\r\nimport { BidtEmployeeDTO } from '../../../shared/types/api-types/bidt-employee-dto.interface';\r\nimport { BidtSiteDTO } from '../../../shared/types/api-types/bidt-site-dto.interface';\r\nimport { SearchEmployeeTableDTO } from '../../../shared/types/api-types/search-employee-table-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\n\r\nimport { EmployeeSearchService } from './employee-search.service';\r\n\r\ninterface EmployeeListTableExport {\r\n  employeeLastName: string;\r\n  employeeFirstName: string;\r\n  employeeNumber?: string;\r\n  bidtCompanyName: string;\r\n  bidtSiteName: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-employee-search',\r\n  templateUrl: './employee-search.component.html',\r\n  styleUrls: ['./employee-search.component.scss']\r\n})\r\nexport class EmployeeSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  public searchObject: FindEmployeeBySearchCriteriaInput;\r\n  public companies: LabelValue<string>[];\r\n  public sites: LabelValue<string>[];\r\n  public resultsTable: SearchResultsDTO<SearchEmployeeTableDTO>;\r\n  public resultsTableCols: TableColumn[];\r\n  public selectedEmployees: SearchEmployeeTableDTO[];\r\n  public companyId: number;\r\n  public globalFilterTxt: string;\r\n  private siteDTOList: BidtSiteDTO[];\r\n  private readonly resultsTableExportName: string;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly employeeSearchService: EmployeeSearchService,\r\n    private readonly exportService: ExportService,\r\n    private readonly confirmationService: ConfirmationService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.resultsTableExportName = 'employee-list';\r\n\r\n    this.searchObject = { bidtEmployeeDTO: {} };\r\n    this.companies = [];\r\n    this.sites = [];\r\n    this.resultsTable = { list: [], moreResults: false };\r\n    this.selectedEmployees = [];\r\n    this.siteDTOList = [];\r\n    this.resultsTableCols = [\r\n      { field: 'employeeLastName', alignment: 'left' },\r\n      { field: 'employeeFirstName', alignment: 'left' },\r\n      { field: 'employeeNumber', alignment: 'left' },\r\n      { field: 'bidtCompanyName', alignment: 'left' },\r\n      { field: 'bidtSiteName', alignment: 'left' }\r\n    ];\r\n\r\n    this.loadCompanies();\r\n    this.loadSites();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return 'EmployeeSearchComponent';\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public resetSearchCriteria(): void {\r\n    this.searchObject = { bidtEmployeeDTO: {}, companyId: undefined };\r\n    // reload sites data\r\n    this.loadSites();\r\n  }\r\n\r\n  private loadCompanies(): void {\r\n    this.employeeSearchService.findBidtCompanyByCriteria({}).subscribe((results) => {\r\n      this.companies = results;\r\n    });\r\n  }\r\n\r\n  public loadSites(): void {\r\n    this.sites = [];\r\n    if (this.searchObject.companyId !== null && this.searchObject.companyId !== undefined) {\r\n      this.siteDTOList.forEach((element) => {\r\n        if (\r\n          element.bidtCompanyId &&\r\n          this.searchObject.companyId &&\r\n          element.bidtCompanyId.toString() === this.searchObject.companyId.toString()\r\n        ) {\r\n          const labelValue: LabelValue<string> = {\r\n            label: `${element.siteCode} - ${element.siteName}`,\r\n            value: (element.siteId && element.siteId.toString()) || ''\r\n          };\r\n          this.sites.push(labelValue);\r\n        }\r\n      });\r\n      if (this.sites.length > 0) {\r\n        this.searchObject.bidtEmployeeDTO.bidtSiteId = Number.parseInt(this.sites[0].value, 0);\r\n      }\r\n    } else {\r\n      this.employeeSearchService.findBidtSiteByCriteria({}).subscribe((results) => {\r\n        this.siteDTOList = results;\r\n        this.sites = this.siteDTOList.map((element) => {\r\n          const labelValue: LabelValue<string> = {\r\n            label: `${element.siteCode} - ${element.siteName}`,\r\n            value: (element.siteId && element.siteId.toString()) || ''\r\n          };\r\n\r\n          return labelValue;\r\n        });\r\n        this.searchObject.bidtEmployeeDTO.bidtSiteId = undefined;\r\n      });\r\n    }\r\n  }\r\n\r\n  public resetResultsTable(table: Table): void {\r\n    table.reset();\r\n    table.filters = {};\r\n  }\r\n\r\n  public search(): void {\r\n    this.employeeSearchService.findEmployeeBySearchCriteria(this.searchObject).subscribe((result) => {\r\n      this.setResultsTable(result);\r\n    });\r\n  }\r\n\r\n  private setResultsTable(result: SearchResultsDTO<SearchEmployeeTableDTO>): void {\r\n    if (!!result) {\r\n      this.resultsTable = result;\r\n      this.resultsTable.list.forEach((element) => {\r\n        if (element.bidtSiteId !== null && element.bidtSiteId !== undefined) {\r\n          element.bidtCompanyName = this.formatCompany(element.bidtSiteId);\r\n          element.bidtSiteName = this.formatSite(element.bidtSiteId);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.selectedEmployees = [];\r\n  }\r\n\r\n  public exportTable(): void {\r\n    const tableList: EmployeeListTableExport[] = this.resultsTable.list.map((row) => {\r\n      const tableRow: EmployeeListTableExport = {\r\n        employeeLastName: row.employeeLastName as string,\r\n        employeeFirstName: row.employeeFirstName as string,\r\n        employeeNumber: row.employeeNumber,\r\n        bidtCompanyName: row.bidtCompanyName as string,\r\n        bidtSiteName: row.bidtSiteName as string\r\n      };\r\n\r\n      return tableRow;\r\n    });\r\n\r\n    this.exportService.toExcel(tableList, this.resultsTableExportName, this.componentData.componentId);\r\n  }\r\n\r\n  public formatCompany(siteId: number): string {\r\n    const selectedSite = this.siteDTOList.find((siteObj) => {\r\n      return siteObj.siteId === siteId;\r\n    });\r\n    const selectedCompany = this.companies.find((company) => {\r\n      if (selectedSite && selectedSite.bidtCompanyId !== null && selectedSite.bidtCompanyId !== undefined) {\r\n        return company.value === selectedSite.bidtCompanyId.toString();\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return selectedCompany ? selectedCompany.label : '';\r\n  }\r\n\r\n  public formatSite(siteId: number): string {\r\n    const selectedSite = this.sites.find((site) => {\r\n      return site.value === siteId.toString();\r\n    });\r\n\r\n    return selectedSite ? selectedSite.label : '';\r\n  }\r\n\r\n  public deleteSelectedEmployees(): void {\r\n    const selectedBidtEmployees: BidtEmployeeDTO[] = [];\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: 'global.confirmSelectedDataDelete',\r\n      accept: () => {\r\n        this.selectedEmployees.forEach((employee) => {\r\n          selectedBidtEmployees.push(employee as BidtEmployeeDTO);\r\n        });\r\n\r\n        this.employeeSearchService.deleteEmployees(selectedBidtEmployees).subscribe(\r\n          (result) => {\r\n            this.search();\r\n            this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteEmployee'));\r\n          },\r\n          (error) => {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('errorOnDeleteEmployee'));\r\n          }\r\n        );\r\n        this.selectedEmployees = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  private openEmployee(openMode: ComponentOpenMode, object?: BidtEmployeeDTO): void {\r\n    const labelKey = 'transaction.EmployeeFormComponent';\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: 'EmployeeFormComponent',\r\n      objectId: object && this.serializationService.serialize(object),\r\n      openMode\r\n    };\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public openNewEmployee(): void {\r\n    this.openEmployee(ComponentOpenMode.Create);\r\n  }\r\n\r\n  public openSelectedEmployees(): void {\r\n    this.selectedEmployees.forEach((employee) => {\r\n      this.openEmployee(ComponentOpenMode.Read, employee as BidtEmployeeDTO);\r\n    });\r\n    this.selectedEmployees = [];\r\n  }\r\n\r\n  public resetTableFilter(): void {\r\n    this.globalFilterTxt = '';\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { BidtCompanyApi } from '../../../shared/api/bidt-company.api';\r\nimport { BidtContractApi } from '../../../shared/api/bidt-contract.api';\r\nimport { BidtEmployeeApi } from '../../../shared/api/bidt-employee.api';\r\nimport { BidtSiteApi } from '../../../shared/api/bidt-site.api';\r\nimport { AbstractAwHttpService } from '../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../shared/services/app-config.service';\r\nimport { FindEmployeeBySearchCriteriaInput } from '../../../shared/types/api-input-types/bidt-employee/find-employee-by-search-criteria-input.interface';\r\nimport { BidtCompanyDTO } from '../../../shared/types/api-types/bidt-company-dto.interface';\r\nimport { BidtEmployeeDTO } from '../../../shared/types/api-types/bidt-employee-dto.interface';\r\nimport { BidtSiteDTO } from '../../../shared/types/api-types/bidt-site-dto.interface';\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { LabelValue } from '../../../shared/types/label-value.interface';\r\n\r\n@Injectable()\r\nexport class EmployeeSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly bidtCompanyApi: BidtCompanyApi,\r\n    private readonly bidtEmployeeApi: BidtEmployeeApi,\r\n    private readonly bidtSiteApi: BidtSiteApi,\r\n    private readonly bidtContractApi: BidtContractApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Employee api\r\n   *************************************************************************/\r\n  public findEmployeeBySearchCriteria(\r\n    criteria: FindEmployeeBySearchCriteriaInput\r\n  ): Observable<SearchResultsDTO<BidtEmployeeDTO>> {\r\n    return super.post<FindEmployeeBySearchCriteriaInput, SearchResultsDTO<BidtEmployeeDTO>>(\r\n      this.bidtEmployeeApi.findEmployeeBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Contract api\r\n   *************************************************************************/\r\n  public deleteEmployees(employeList: BidtEmployeeDTO[]): Observable<boolean> {\r\n    return super.post<BidtEmployeeDTO[], boolean>(this.bidtContractApi.deleteEmployee, employeList);\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Company api\r\n   *************************************************************************/\r\n  public findBidtCompanyByCriteria(criteria: BidtCompanyDTO): Observable<LabelValue<string>[]> {\r\n    return super.post<BidtCompanyDTO, LabelValue<string>[]>(this.bidtCompanyApi.findByCriteria, criteria);\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Site api\r\n   *************************************************************************/\r\n  public findBidtSiteByCriteria(criteria: BidtSiteDTO): Observable<BidtSiteDTO[]> {\r\n    return super.post<BidtSiteDTO, BidtSiteDTO[]>(this.bidtSiteApi.findAll, criteria);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KeyFilterModule } from 'primeng/keyfilter';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\r\n\r\nimport { AngularCommonSharedModule } from '../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DialogSearchEmployeeModule } from '../../shared/components/dialog-search-employee/dialog-search-employee.module';\r\nimport { DynamicAttributesService } from '../../shared/components/dynamic-attributes/dynamic-attributes.service';\r\nimport { ModalModule } from '../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../shared/components/table/table.module';\r\nimport { DynamicComponentLoaderModule } from '../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { EmployeeFormComponent } from './employee-form/employee-form.component';\r\nimport { EmployeeFormService } from './employee-form/employee-form.service';\r\nimport { AbsencePopupFormComponent } from './employee-form/popups/absence-popup-form/absence-popup-form.component';\r\nimport { DocumentPopupFormModule } from './employee-form/popups/document-popup-form/document-popup-form.module';\r\nimport { DocumentUrlPopupFormModule } from './employee-form/popups/document-url-popup-form/document-url-popup-form.module';\r\nimport { EvaluationPopupFormComponent } from './employee-form/popups/evaluation-popup-form/evaluation-popup-form.component';\r\nimport { ExpensePopupFormComponent } from './employee-form/popups/expense-popup-form/expense-popup-form.component';\r\nimport { HolidaysPopupFormComponent } from './employee-form/popups/holidays-popup-form/holidays-popup-form.component';\r\nimport { HourlyCostsPopupFormComponent } from './employee-form/popups/hourly-costs-popup-form/hourly-costs-popup-form.component';\r\nimport { MedicalExaminationPopupFormComponent } from './employee-form/popups/medical-examination-popup-form/medical-examination-popup-form.component';\r\nimport { QualificationPopupFormComponent } from './employee-form/popups/qualification-popup-form/qualification-popup-form.component';\r\nimport { QualificationPopupFormService } from './employee-form/popups/qualification-popup-form/qualification-popup-form.service';\r\nimport { TrainingPopupFormComponent } from './employee-form/popups/training-popup-form/training-popup-form.component';\r\nimport { WorkFlightTableFiltersComponent } from './employee-form/work-flight-table-filters/work-flight-table-filters.component';\r\nimport { EmployeePlanningModule } from './employee-planning/employee-planning.module';\r\nimport { EmployeeSearchComponent } from './employee-search/employee-search.component';\r\nimport { EmployeeSearchService } from './employee-search/employee-search.service';\r\nimport { StaffAlertModule } from './staff-alert/staff-alert.module';\r\n\r\nconst INTERNAL_MODULES = [TableModule];\r\n\r\nconst PRIMENG_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DialogModule,\r\n  DropdownModule,\r\n  InputTextareaModule,\r\n  OverlayPanelModule,\r\n  RadioButtonModule,\r\n  SplitButtonModule,\r\n  PrimeNgTableModule,\r\n  TooltipModule,\r\n  TriStateCheckboxModule,\r\n  FileUploadModule,\r\n  KeyFilterModule,\r\n  MessageModule,\r\n  EmployeePlanningModule\r\n];\r\n\r\nconst COMPONENTS = [WorkFlightTableFiltersComponent];\r\n\r\nconst DYNAMIC_COMPONENTS = [\r\n  EmployeeSearchComponent,\r\n  EmployeeFormComponent,\r\n  AbsencePopupFormComponent,\r\n  EvaluationPopupFormComponent,\r\n  ExpensePopupFormComponent,\r\n  HolidaysPopupFormComponent,\r\n  HourlyCostsPopupFormComponent,\r\n  MedicalExaminationPopupFormComponent,\r\n  QualificationPopupFormComponent,\r\n  TrainingPopupFormComponent\r\n];\r\n\r\nconst SERVICES = [EmployeeSearchService, EmployeeFormService, QualificationPopupFormService, DynamicAttributesService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ModalModule,\r\n    ComponentSidebarModule,\r\n    DialogSearchEmployeeModule,\r\n    DocumentPopupFormModule,\r\n    DocumentUrlPopupFormModule,\r\n    StaffAlertModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...PRIMENG_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class HumanResourcesModule {}\r\n","export class BidoNotificationTypeConstants {\r\n  // Maintenance\r\n  public static readonly ACRS_TYPE_CODE = 'ACRS';\r\n  public static readonly TASK_APPLIED_TYPE_CODE = 'TA';\r\n  public static readonly EVOLUTION_APPLIED_TYPE_CODE = 'EA';\r\n  public static readonly ASSEMBLY_TYPE_CODE = 'AS';\r\n  public static readonly DISASSEMBLY_TYPE_CODE = 'DI';\r\n  public static readonly FORM1_TYPE_CODE = 'FORM1';\r\n}\r\n","import { BidoEquipmentDTO } from '../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BireItemDTOId } from '../../shared/types/api-types/bire-item-dto-id.interface';\r\nimport { StringUtils } from '../../shared/utils/string-utils';\r\nimport { AWPropertiesConstants } from '../constants/aw-properties-constants';\r\n\r\nimport { BidoFamilyVariantUtils } from './bido-family-variant-utils';\r\n\r\nexport class BidoEquipmentUtils {\r\n  public static createAssetName(equipment: BidoEquipmentDTO | undefined): string {\r\n    if (!equipment) {\r\n      return '';\r\n    } else {\r\n      let designation: string;\r\n      switch (equipment.equipmentFunction) {\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_AIRCRAFT_KEY:\r\n          designation = StringUtils.orEmpty(equipment.registration);\r\n          break;\r\n\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_ENGINE_KEY:\r\n          designation = StringUtils.orEmpty(equipment.sn);\r\n          break;\r\n\r\n        default:\r\n          designation = StringUtils.orEmpty(equipment.pnCode) + '/' + StringUtils.orEmpty(equipment.sn);\r\n          break;\r\n      }\r\n\r\n      return designation;\r\n    }\r\n  }\r\n\r\n  public static createAircraftRepresentation(equipment: BidoEquipmentDTO | undefined): string {\r\n    let aircraftRepresentation = '';\r\n    if (!equipment) {\r\n      return '';\r\n    } else {\r\n      if (BidoEquipmentUtils.createAssetName(equipment) !== '') {\r\n        aircraftRepresentation =\r\n          'MSN ' + StringUtils.orEmpty(equipment.sn) + ' | ' + BidoEquipmentUtils.createAssetName(equipment);\r\n      }\r\n      if (BidoEquipmentUtils.createAssetName(equipment) === '' && StringUtils.orEmpty(equipment.sn) !== '') {\r\n        aircraftRepresentation = 'MSN ' + StringUtils.orEmpty(equipment.sn);\r\n      }\r\n\r\n      return aircraftRepresentation;\r\n    }\r\n  }\r\n\r\n  public static createAssetRepresentation(equipment: BidoEquipmentDTO | undefined): string {\r\n    let assetRepresentation = '';\r\n    if (equipment) {\r\n      let designation: string;\r\n      switch (equipment.equipmentFunction) {\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_AIRCRAFT_KEY:\r\n          assetRepresentation =\r\n            StringUtils.orEmpty(equipment.familyVariantCode) +\r\n            ' | MSN ' +\r\n            StringUtils.orEmpty(equipment.sn) +\r\n            ' | ' +\r\n            StringUtils.orEmpty(equipment.registration);\r\n          designation = StringUtils.orEmpty(equipment.registration);\r\n          break;\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_ENGINE_KEY:\r\n          assetRepresentation =\r\n            StringUtils.orEmpty(equipment.familyVariantCode) +\r\n            ' | MSN ' +\r\n            StringUtils.orEmpty(equipment.sn) +\r\n            ' | ' +\r\n            StringUtils.orEmpty(equipment.registration);\r\n          designation = StringUtils.orEmpty(equipment.registration);\r\n          break;\r\n        default:\r\n          assetRepresentation =\r\n            StringUtils.orEmpty(equipment.familyVariantCode) + ' | SN ' + StringUtils.orEmpty(equipment.sn);\r\n          designation = StringUtils.orEmpty(equipment.sn);\r\n          break;\r\n      }\r\n    }\r\n\r\n    return assetRepresentation;\r\n  }\r\n\r\n  public static getBireItemPK(equipment: BidoEquipmentDTO): BireItemDTOId | undefined {\r\n    if (\r\n      !!equipment.chapter &&\r\n      !StringUtils.isEmpty(equipment.chapter) &&\r\n      !!equipment.marks &&\r\n      !StringUtils.isEmpty(equipment.marks) &&\r\n      !!equipment.section &&\r\n      !StringUtils.isEmpty(equipment.section) &&\r\n      !!equipment.sheet &&\r\n      !StringUtils.isEmpty(equipment.sheet) &&\r\n      !!equipment.subject &&\r\n      !StringUtils.isEmpty(equipment.subject)\r\n    ) {\r\n      const itemId: BireItemDTOId = {\r\n        familyCode: BidoFamilyVariantUtils.getFamilyCodeFromFamilyVariantCode(equipment.familyVariantCode),\r\n        chapter: equipment.chapter,\r\n        subject: equipment.subject,\r\n        variantCode: BidoFamilyVariantUtils.getVariantCodeFromFamilyVariantCode(equipment.familyVariantCode),\r\n        section: equipment.section,\r\n        sheet: equipment.sheet,\r\n        marks: equipment.marks,\r\n        structureType: AWPropertiesConstants.STRUCTURE_TYPE_IPC_KEY\r\n      };\r\n\r\n      return itemId;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public static toString(asset: BidoEquipmentDTO | undefined, withFamilyVariantCode: boolean = true): string {\r\n    if (!asset) {\r\n      return '';\r\n    }\r\n\r\n    const equipmentCode = asset.equipmentCode;\r\n    const equipmentFunction = asset.equipmentFunction;\r\n    const familyVariantCode = withFamilyVariantCode ? `${asset.familyVariantCode} | ` : '';\r\n    const pn = asset.pnCode;\r\n    const registration = asset.registration;\r\n    const sn = asset.sn;\r\n\r\n    if (equipmentFunction === AWPropertiesConstants.ITEM_FAMILY_CODE_AIRCRAFT_KEY) {\r\n      const formattedMsn = !StringUtils.isNullOrEmpty(sn) ? `MSN ${sn}` : '';\r\n      const formattedRegistration = !StringUtils.isNullOrEmpty(registration) ? ` | ${registration}` : '';\r\n\r\n      return `${familyVariantCode}${formattedMsn}${formattedRegistration}`;\r\n    } else if (equipmentFunction === AWPropertiesConstants.ITEM_FAMILY_CODE_ENGINE_KEY) {\r\n      const formattedEsn = !StringUtils.isNullOrEmpty(sn) ? `ESN ${sn}` : '';\r\n\r\n      return `${familyVariantCode}${formattedEsn}`;\r\n    } else {\r\n      if (!StringUtils.isNullOrEmpty(pn)) {\r\n        if (!StringUtils.isNullOrEmpty(sn)) {\r\n          return `P/N ${pn} | S/N ${sn}`;\r\n        } else {\r\n          return `P/N ${pn}`;\r\n        }\r\n      } else if (!StringUtils.isNullOrEmpty(sn)) {\r\n        return `S/N ${sn}`;\r\n      } else {\r\n        return StringUtils.orEmpty(equipmentCode);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { StringUtils } from '../../shared/utils/string-utils';\r\n\r\nexport class BidoFamilyVariantUtils {\r\n  public static buildFamilyVariantCode(\r\n    familyCode: string | undefined,\r\n    variantCode: string | undefined\r\n  ): string | undefined {\r\n    if (StringUtils.isNullOrEmpty(familyCode) || StringUtils.isNullOrEmpty(variantCode)) {\r\n      return undefined;\r\n    } else {\r\n      return `${familyCode}-${variantCode}`;\r\n    }\r\n  }\r\n\r\n  public static getFamilyCodeFromFamilyVariantCode(familyVariantCode: string | undefined): string | undefined {\r\n    return !!familyVariantCode && familyVariantCode.indexOf('-') > -1\r\n      ? familyVariantCode.substring(0, familyVariantCode.indexOf('-'))\r\n      : undefined;\r\n  }\r\n\r\n  public static getVariantCodeFromFamilyVariantCode(familyVariantCode: string | undefined): string | undefined {\r\n    return !!familyVariantCode && familyVariantCode.indexOf('-') > -1\r\n      ? familyVariantCode.substring(familyVariantCode.indexOf('-') + 1)\r\n      : undefined;\r\n  }\r\n}\r\n","import * as FileSaver from 'file-saver';\r\n\r\nimport { NumberUtils } from './number-utils';\r\n\r\nexport class FileUtils {\r\n  public static readonly KIBIOCTET: number = 1024;\r\n  public static readonly KILOOCTET: number = 1000;\r\n\r\n  public static downloadFile(file: Uint8Array | undefined, fileName: string | undefined): void {\r\n    if (!!file && !!fileName) {\r\n      const byteCharacters = atob(file.toString());\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n\r\n      FileSaver.saveAs(new Blob([new Uint8Array(byteNumbers)]), fileName);\r\n    }\r\n  }\r\n\r\n  public static getExtension(fileName: string | undefined): string {\r\n    return !!fileName && fileName.includes('.') ? fileName.substring(fileName.lastIndexOf('.') + 1) : '';\r\n  }\r\n\r\n  public static getFileContentAsBase64(file: File | undefined, callback: (fileContent: Uint8Array) => void): void {\r\n    if (!!file) {\r\n      const reader: FileReader = new FileReader();\r\n      reader.onloadend = () => {\r\n        let fileContent: any = reader.result; // tslint:disable-line:no-any\r\n        fileContent = fileContent.substring((fileContent.indexOf(',') as number) + 1); // Remove data:*/*;base64,\r\n        callback(fileContent);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  public static getFormattedSize(size: number | undefined): string {\r\n    if (!!size) {\r\n      return size / FileUtils.KILOOCTET < FileUtils.KILOOCTET\r\n        ? `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET)} Ko`\r\n        : `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET / FileUtils.KILOOCTET)} Mo`;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}