{"version":3,"sources":["webpack:///./node_modules/primeng/inputtextarea.js","webpack:///./node_modules/primeng/overlaypanel.js","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-add-item/dialog-add-item.component.html","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-add-item/dialog-add-item.component.scss","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-add-item/dialog-add-item.component.ts","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-add-material/dialog-add-material.component.html","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-add-material/dialog-add-material.component.scss","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-add-material/dialog-add-material.component.ts","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-add-package/dialog-add-package.component.html","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-add-package/dialog-add-package.component.scss","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-add-package/dialog-add-package.component.ts","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-create-litigation/dialog-create-litigation.component.html","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-create-litigation/dialog-create-litigation.component.scss","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-create-litigation/dialog-create-litigation.component.ts","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-document-categories/dialog-document-categories.component.html","webpack:///./src/app/main/logistics/goods-receipt/form/dialog-document-categories/dialog-document-categories.component.ts","webpack:///./src/app/main/logistics/goods-receipt/form/goods-receipt-form.component.html","webpack:///./src/app/main/logistics/goods-receipt/form/goods-receipt-form.component.scss","webpack:///./src/app/main/logistics/goods-receipt/form/goods-receipt-form.component.ts","webpack:///./src/app/main/logistics/goods-receipt/goods-receipt.module.ts","webpack:///./src/app/main/logistics/goods-receipt/search/dialog-asset-scan/dialog-asset-scan.component.html","webpack:///./src/app/main/logistics/goods-receipt/search/dialog-asset-scan/dialog-asset-scan.component.scss","webpack:///./src/app/main/logistics/goods-receipt/search/dialog-asset-scan/dialog-asset-scan.component.ts","webpack:///./src/app/main/logistics/goods-receipt/search/dialog-create-receipt/dialog-create-receipt.component.html","webpack:///./src/app/main/logistics/goods-receipt/search/dialog-create-receipt/dialog-create-receipt.component.scss","webpack:///./src/app/main/logistics/goods-receipt/search/dialog-create-receipt/dialog-create-receipt.component.ts","webpack:///./src/app/main/logistics/goods-receipt/search/dialog-package-scan/dialog-package-scan.component.html","webpack:///./src/app/main/logistics/goods-receipt/search/dialog-package-scan/dialog-package-scan.component.scss","webpack:///./src/app/main/logistics/goods-receipt/search/dialog-package-scan/dialog-package-scan.component.ts","webpack:///./src/app/main/logistics/goods-receipt/search/external-good-receipt-search.components.ts","webpack:///./src/app/main/logistics/goods-receipt/search/goods-receipt-search.component.html","webpack:///./src/app/main/logistics/goods-receipt/search/goods-receipt-search.component.scss","webpack:///./src/app/main/logistics/goods-receipt/search/goods-receipt-search.component.ts","webpack:///./src/app/main/logistics/goods-receipt/search/local-good-receipt-search.components.ts","webpack:///./src/app/main/overlay/overlay.service.ts","webpack:///./src/app/shared/constants/bire-measure-reference-constants.ts","webpack:///./src/app/shared/constants/bire-rating-constants.ts","webpack:///./src/app/shared/utils/bido-equipment-utils.ts","webpack:///./src/app/shared/utils/bido-family-variant-utils.ts"],"names":[],"mappings":"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","file":"logistics-goods-receipt-goods-receipt-module.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputtextarea/inputtextarea\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/overlaypanel/overlaypanel\"));","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"40\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n          <p-selectButton\\r\\n            [(ngModel)]=\\\"selectedChoiceItem\\\"\\r\\n            [options]=\\\"choiceListItem\\\"\\r\\n            (onChange)=\\\"resetChoiceItem()\\\"\\r\\n          ></p-selectButton>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"selectedChoiceItem === component.CURRENT_PACKAGE && createWithPackage\\\">\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".packageNumber\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown\\r\\n            class=\\\"aw-dropdown fixed-width\\\"\\r\\n            placeholder=\\\"&nbsp;\\\"\\r\\n            [showClear]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"packageDto\\\"\\r\\n            [options]=\\\"packageList\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n          ></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"selectedChoiceItem === component.NEW_PACKAGE && createWithPackage\\\">\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".packageType\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown\\r\\n            class=\\\"aw-dropdown fixed-width\\\"\\r\\n            [showClear]=\\\"true\\\"\\r\\n            placeholder=\\\"&nbsp;\\\"\\r\\n            [(ngModel)]=\\\"this.packageDto.packageType\\\"\\r\\n            [options]=\\\"packagesTypesList\\\"\\r\\n          ></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"selectedChoiceItem === component.NEW_PACKAGE && createWithPackage\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n          <p-selectButton\\r\\n            [(ngModel)]=\\\"selectedChoicePackage\\\"\\r\\n            [options]=\\\"choiceListPackage\\\"\\r\\n            (onChange)=\\\"resetChoicePackage()\\\"\\r\\n          ></p-selectButton>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group required\\\" *ngIf=\\\"!isPackageCodeGenerated\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".packageNumber\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"packageDto.externalPackageCode\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".article\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control form-control-with-modal\\\">\\r\\n          <div class=\\\"form-control-data\\\" (click)=\\\"openSearchPnDialog()\\\">\\r\\n            {{ article }}\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"article\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n            <i\\r\\n              class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n              aria-hidden=\\\"true\\\"\\r\\n              (click)=\\\"article = undefined\\\"\\r\\n            ></i>\\r\\n          </div>\\r\\n          <div class=\\\"btn-search-wrapper\\\">\\r\\n            <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openSearchPnDialog()\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"articleDesignation\\\" *ngIf=\\\"pnUse\\\">\\r\\n      {{ pnUse.articleDesignation }}\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".quantity\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <input\\r\\n            type=\\\"number\\\"\\r\\n            name=\\\"docName\\\"\\r\\n            [min]=\\\"0\\\"\\r\\n            oninput=\\\"validity.valid||(value='');\\\"\\r\\n            class=\\\"aw-input\\\"\\r\\n            [(ngModel)]=\\\"quantity\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"form-group\\\"\\r\\n        [ngClass]=\\\"{\\r\\n          'visibility--hidden': !(pnUse && pnUse.quantityUnit)\\r\\n        }\\\"\\r\\n      >\\r\\n        <label class=\\\"form-label\\\">{{ \\\"unit\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <div class=\\\"form-control-generic\\\" *ngIf=\\\"pnUse && pnUse.pnCode && pnUse.quantityUnit\\\">\\r\\n            {{ pnUse.quantityUnit }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-pn\\r\\n  *ngIf=\\\"searchPnDialogVisible\\\"\\r\\n  [(display)]=\\\"searchPnDialogVisible\\\"\\r\\n  (onSelected)=\\\"onSelectPn($event)\\\"\\r\\n  [withAllTypes]=\\\"true\\\"\\r\\n  [showPartTypeSelection]=\\\"true\\\"\\r\\n></aw-dialog-search-pn>\\r\\n\"","module.exports = \":host .articleDesignation {\\n  font-style: italic;\\n  padding: 0px 0 0 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvZ29vZHMtcmVjZWlwdC9mb3JtL2RpYWxvZy1hZGQtaXRlbS9EOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGZyb250ZW5kX2Flcm93ZWJiL3NyY1xcYXBwXFxtYWluXFxsb2dpc3RpY3NcXGdvb2RzLXJlY2VpcHRcXGZvcm1cXGRpYWxvZy1hZGQtaXRlbVxcZGlhbG9nLWFkZC1pdGVtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksa0JBQWtCO0VBQ2xCLHFCQUFxQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvZ29vZHMtcmVjZWlwdC9mb3JtL2RpYWxvZy1hZGQtaXRlbS9kaWFsb2ctYWRkLWl0ZW0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgLmFydGljbGVEZXNpZ25hdGlvbiB7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICBwYWRkaW5nOiAwcHggMCAwIDE2cHg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { AddReceiptItemInput } from '../../../../../shared/types/api-input-types/logistic/add-receipt-item-input.interface';\r\nimport { BidtDeliveryFolderDTO } from '../../../../../shared/types/api-types/bidt-delivery-folder-dto.interface';\r\nimport { BidtPackageDTO } from '../../../../../shared/types/api-types/bidt-package-dto.interface';\r\nimport { BirePnDTO } from '../../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { ListUtils } from '../../../../../shared/utils/list-utils';\r\nimport { LogisticsService } from '../../../logistics.service';\r\nimport { DeliveryFolderSearchService } from '../../delivery-folder-search.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-add-item',\r\n  templateUrl: './dialog-add-item.component.html',\r\n  styleUrls: ['./dialog-add-item.component.scss']\r\n})\r\nexport class DialogAddItemComponent extends DialogComponent implements OnInit {\r\n  public static readonly GENERATE: string = '0';\r\n  public static readonly ENTER: string = '1';\r\n\r\n  public static readonly CURRENT_PACKAGE: string = '0';\r\n  public static readonly NEW_PACKAGE: string = '1';\r\n  public static readonly WWITHOUT_PACKAGE: string = '2';\r\n\r\n  public component: typeof DialogAddItemComponent;\r\n\r\n  public article: string;\r\n  public choiceListItem: LabelValue<string>[];\r\n  public choiceListPackage: LabelValue<string>[];\r\n  public createWithPackage: boolean;\r\n  public isPackageCodeGenerated: boolean;\r\n  public packageDto: BidtPackageDTO | undefined;\r\n  public pnUse: BirePnDTO;\r\n  public packageList: LabelValue<BidtPackageDTO>[];\r\n  public quantity: number;\r\n  public selectedChoiceItem: string;\r\n  public selectedChoicePackage: string;\r\n  public searchPnDialogVisible: boolean;\r\n  public packagesTypesList: LabelValue<string>[];\r\n\r\n  @Input() public deliveryFolder: BidtDeliveryFolderDTO;\r\n\r\n  @Input() public packageDtoList: BidtPackageDTO[];\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<BidtDeliveryFolderDTO>;\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly logisticsService: LogisticsService,\r\n    private readonly propertiesService: PropertiesService,\r\n    public readonly deliveryFolderSearchService: DeliveryFolderSearchService,\r\n    public readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogAddItemComponent');\r\n    this.component = DialogAddItemComponent;\r\n    this.onCreate = new EventEmitter<BidtDeliveryFolderDTO>();\r\n    this.init();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.loadDropDowns();\r\n  }\r\n\r\n  private loadDropDowns(): void {\r\n    const packageTypes = this.propertiesService.getValue(GenericPropertyConstants.PACKAGE_TYPE_MAP);\r\n\r\n    forkJoin({ packageTypes }).subscribe({\r\n      next: (results) => {\r\n        this.packagesTypesList = results.packageTypes;\r\n        this.packageList = this.loadPackageList();\r\n        this.getChoiceListItem();\r\n        this.getChoiceListPackage();\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadPackageList(): LabelValue<BidtPackageDTO>[] {\r\n    return ListUtils.orEmpty(this.packageDtoList)\r\n      .filter((pack) => !!pack.packageCode)\r\n      .map((bidtPackage: BidtPackageDTO) => {\r\n        const unit: LabelValue<BidtPackageDTO> = {\r\n          label: bidtPackage.packageCode as string,\r\n          value: bidtPackage\r\n        };\r\n\r\n        return unit;\r\n      });\r\n  }\r\n\r\n  private getChoiceListItem(): void {\r\n    this.choiceListItem = this.deliveryFolderSearchService.loadCreationChoiceList();\r\n    this.selectedChoiceItem = this.choiceListItem && this.choiceListItem.length ? this.choiceListItem[0].value : '';\r\n  }\r\n\r\n  private getChoiceListPackage(): void {\r\n    this.choiceListPackage = this.deliveryFolderSearchService.loadCreationChoiceListPackageNumber();\r\n    this.selectedChoicePackage =\r\n      this.choiceListPackage && this.choiceListPackage.length ? this.choiceListPackage[0].value : '';\r\n  }\r\n\r\n  public onSelectPn(pn: BirePnDTO): void {\r\n    this.article = pn.pnCode as string;\r\n    this.pnUse = pn;\r\n  }\r\n\r\n  public openSearchPnDialog(): void {\r\n    this.searchPnDialogVisible = true;\r\n  }\r\n\r\n  public validate() {\r\n    if (this.validateInputs()) {\r\n      // C50\r\n      const input: AddReceiptItemInput = {\r\n        material: this.pnUse,\r\n        packageDto: this.packageDto,\r\n        createWithPackage: this.createWithPackage,\r\n        quantity: this.quantity,\r\n        bidtDeliveryFolder: this.deliveryFolder,\r\n        isPackageCodeGenerated: this.isPackageCodeGenerated\r\n      };\r\n\r\n      this.logisticsService.addReceiptItem(input).subscribe((res) => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnCreate'));\r\n        this.onCreate.emit(res);\r\n        this.closeDialog();\r\n      });\r\n    }\r\n  }\r\n\r\n  private init(): void {\r\n    this.searchPnDialogVisible = false;\r\n    this.createWithPackage = true;\r\n    this.isPackageCodeGenerated = true;\r\n  }\r\n\r\n  private validateInputs(): boolean {\r\n    return !!this.article && this.packageDto !== undefined && !!this.quantity;\r\n  }\r\n\r\n  public resetChoiceItem(): void {\r\n    this.changeModeItem();\r\n  }\r\n\r\n  private changeModeItem(): void {\r\n    switch (this.selectedChoiceItem) {\r\n      case this.component.CURRENT_PACKAGE:\r\n        this.packageDto = undefined;\r\n        this.createWithPackage = true;\r\n        break;\r\n\r\n      case this.component.NEW_PACKAGE:\r\n        this.packageDto = {};\r\n        this.createWithPackage = true;\r\n        break;\r\n\r\n      case this.component.WWITHOUT_PACKAGE:\r\n        this.packageDto = {};\r\n        this.createWithPackage = false;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public resetChoicePackage(): void {\r\n    this.changeModePackage();\r\n  }\r\n\r\n  private changeModePackage(): void {\r\n    switch (this.selectedChoicePackage) {\r\n      case this.component.GENERATE:\r\n        this.isPackageCodeGenerated = true;\r\n        break;\r\n\r\n      case this.component.ENTER:\r\n        this.isPackageCodeGenerated = false;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"55\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <h4 class=\\\"section-title\\\">\\r\\n        {{ getComponentName() + \\\".item\\\" | translate }}\\r\\n      </h4>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n            <p-selectButton\\r\\n              [(ngModel)]=\\\"selectedChoiceItem\\\"\\r\\n              [options]=\\\"choiceListItem\\\"\\r\\n              (onChange)=\\\"resetChoiceItem()\\\"\\r\\n            ></p-selectButton>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"selectedChoiceItem === component.EXISTING_ITEM\\\">\\r\\n        <div class=\\\"form-group required flex--3\\\" [ngClass]=\\\"isDraftStatus ? 'flex--4' : 'flex--3'\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".item\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"item\\\"\\r\\n              [options]=\\\"itemsList\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n              (onChange)=\\\"onChangeItem(item)\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group flex--1\\\" *ngIf=\\\"item\\\">\\r\\n          <label class=\\\"form-label\\\">{{\\r\\n            getComponentName() + (isDraftStatus ? \\\".quantity\\\" : \\\".missingQuantity\\\") | translate\\r\\n          }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            {{ getMissingQuantity() }}\\r\\n            <ng-container *ngIf=\\\"pnChoose && pnChoose.pnCode && pnChoose.quantityUnit\\\">\\r\\n              {{ pnChoose.quantityUnit }}\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"selectedChoiceItem === component.NEW_ITEM\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n            <p-selectButton\\r\\n              [(ngModel)]=\\\"selectedChoiceItemPackage\\\"\\r\\n              [options]=\\\"choiceListItemPackage\\\"\\r\\n              (onChange)=\\\"resetChoiceItemPackage()\\\"\\r\\n            ></p-selectButton>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          selectedChoiceItemPackage === component.CURRENT_PACKAGE &&\\r\\n          createWithPackage &&\\r\\n          selectedChoiceItem === component.NEW_ITEM\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".packageNumber\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"packageDto\\\"\\r\\n              [options]=\\\"packageList\\\"\\r\\n              appendTo=\\\"body\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          selectedChoiceItemPackage === component.NEW_PACKAGE &&\\r\\n          createWithPackage &&\\r\\n          selectedChoiceItem === component.NEW_ITEM\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n            <p-selectButton\\r\\n              [(ngModel)]=\\\"selectedChoicePackage\\\"\\r\\n              [options]=\\\"choiceListPackage\\\"\\r\\n              (onChange)=\\\"resetChoicePackage()\\\"\\r\\n            ></p-selectButton>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group required\\\" *ngIf=\\\"!isPackageCodeGenerated\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".packageNumber\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"packageDto.externalPackageCode\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div\\r\\n        class=\\\"row\\\"\\r\\n        *ngIf=\\\"\\r\\n          selectedChoiceItemPackage === component.NEW_PACKAGE &&\\r\\n          createWithPackage &&\\r\\n          selectedChoiceItem === component.NEW_ITEM\\r\\n        \\\"\\r\\n      >\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".packageType\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [(ngModel)]=\\\"this.packageDto.packageType\\\"\\r\\n              [options]=\\\"packagesTypesList\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"selectedChoiceItem === component.NEW_ITEM\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".article\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control form-control-with-modal\\\">\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"openSearchPnDialog()\\\">\\r\\n              {{ article }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"article\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"article = undefined\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div>\\r\\n              <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openSearchPnDialog()\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"article-designation\\\" *ngIf=\\\"pnChoose\\\">\\r\\n        {{ pnChoose.articleDesignation }}\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"selectedChoiceItem === component.NEW_ITEM\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".quantity\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"number\\\"\\r\\n              name=\\\"docName\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              min=\\\"0\\\"\\r\\n              oninput=\\\"validity.valid||(value='');\\\"\\r\\n              [(ngModel)]=\\\"quantityItem\\\"\\r\\n              (blur)=\\\"updateRemainingQuantity()\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div\\r\\n          class=\\\"form-group\\\"\\r\\n          [ngClass]=\\\"{\\r\\n            'visibility--hidden': !(pnChoose && pnChoose.quantityUnit)\\r\\n          }\\\"\\r\\n        >\\r\\n          <label class=\\\"form-label\\\">{{ \\\"unit\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <div class=\\\"form-control-generic\\\" *ngIf=\\\"pnChoose && pnChoose.pnCode && pnChoose.quantityUnit\\\">\\r\\n              {{ pnChoose.quantityUnit }}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"section\\\">\\r\\n      <h4 class=\\\"section-title\\\">\\r\\n        {{ getComponentName() + \\\".asset\\\" | translate }}\\r\\n      </h4>\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group flex--3\\\">\\r\\n            <div class=\\\"form-control aw-selectbutton-wrapper\\\" *ngIf=\\\"!isTracabilityBySN\\\">\\r\\n              <p-selectButton\\r\\n                [(ngModel)]=\\\"selectedChoicePackagingNumber\\\"\\r\\n                [options]=\\\"choiceListPackagingNumber\\\"\\r\\n                (onChange)=\\\"resetChoicePackagingnumber()\\\"\\r\\n              ></p-selectButton>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div\\r\\n            class=\\\"form-group flex--1\\\"\\r\\n            *ngIf=\\\"(item || (pnChoose && stockMvtTable && stockMvtTable.length > 0)) && !isDraftStatus\\\"\\r\\n          >\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".quantityToReceipt\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control required\\\">\\r\\n              <input\\r\\n                type=\\\"number\\\"\\r\\n                name=\\\"docName\\\"\\r\\n                class=\\\"aw-input\\\"\\r\\n                [(ngModel)]=\\\"quantity\\\"\\r\\n                min=\\\"0\\\"\\r\\n                oninput=\\\"validity.valid||(value='');\\\"\\r\\n                (blur)=\\\"updateRemainingQuantity()\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div\\r\\n          class=\\\"row\\\"\\r\\n          style=\\\"justify-content: space-between; align-items: center; margin-bottom: 8px;\\\"\\r\\n          *ngIf=\\\"item || (pnChoose && stockMvtTable && stockMvtTable.length > 0)\\\"\\r\\n        >\\r\\n          <div>\\r\\n            {{ getComponentName() + \\\".missingQuantity\\\" | translate }}: <span class=\\\"bold\\\">{{ remainingQuantity }}</span>\\r\\n            <ng-container *ngIf=\\\"pnChoose && pnChoose.pnCode && pnChoose.quantityUnit\\\">\\r\\n              {{ pnChoose.quantityUnit }}\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <p-table\\r\\n          #ptableStockMvt\\r\\n          class=\\\"aw-table2\\\"\\r\\n          [resizableColumns]=\\\"true\\\"\\r\\n          [scrollable]=\\\"true\\\"\\r\\n          [value]=\\\"stockMvtTable\\\"\\r\\n          [customSort]=\\\"false\\\"\\r\\n        >\\r\\n          <ng-template pTemplate=\\\"colgroup\\\">\\r\\n            <colgroup>\\r\\n              <col style=\\\"width: 20%;\\\" *ngIf=\\\"!isGeneratedPackagingNumber\\\" />\\r\\n              <col style=\\\"width: 20%;\\\" *ngIf=\\\"isTracabilityBySN || isTracabilityByBatchAndSn\\\" />\\r\\n              <col style=\\\"width: 20%;\\\" *ngIf=\\\"isTracabilityByBatch\\\" />\\r\\n              <col style=\\\"width: 20%;\\\" *ngIf=\\\"!isTracabilityByPackagingBatch\\\" />\\r\\n              <col style=\\\"width: 20%;\\\" *ngIf=\\\"isTracabilityByBatch\\\" />\\r\\n              <col style=\\\"width: 20%;\\\" *ngIf=\\\"!(isTracabilityBySN || isTracabilityByBatchAndSn)\\\" />\\r\\n              <col style=\\\"width: 64px;\\\" />\\r\\n            </colgroup>\\r\\n          </ng-template>\\r\\n          <ng-template pTemplate=\\\"header\\\">\\r\\n            <tr>\\r\\n              <th style=\\\"text-align: left;\\\" *ngIf=\\\"!isGeneratedPackagingNumber\\\">\\r\\n                {{ getComponentName() + \\\".packagingNumber\\\" | translate }}\\r\\n              </th>\\r\\n              <th style=\\\"text-align: left;\\\" *ngIf=\\\"isTracabilityBySN || isTracabilityByBatchAndSn\\\">\\r\\n                {{ getComponentName() + \\\".sn\\\" | translate }}\\r\\n              </th>\\r\\n              <th style=\\\"text-align: left;\\\" *ngIf=\\\"isTracabilityByBatch\\\">\\r\\n                {{ getComponentName() + \\\".manufacturingBatch\\\" | translate }}\\r\\n              </th>\\r\\n              <th style=\\\"text-align: left;\\\" *ngIf=\\\"!isTracabilityByPackagingBatch\\\">\\r\\n                {{ getComponentName() + \\\".manufacuringDate\\\" | translate }}\\r\\n              </th>\\r\\n              <th style=\\\"text-align: left;\\\" *ngIf=\\\"isTracabilityByBatch || isTracabilityByPackagingBatch\\\">\\r\\n                {{ getComponentName() + \\\".expirationDate\\\" | translate }}\\r\\n              </th>\\r\\n              <th style=\\\"text-align: left;\\\" *ngIf=\\\"!(isTracabilityBySN || isTracabilityByBatchAndSn)\\\">\\r\\n                {{ getComponentName() + \\\".quantity\\\" | translate }}\\r\\n                <ng-container *ngIf=\\\"pnChoose && pnChoose.pnCode && pnChoose.quantityUnit\\\">\\r\\n                  ({{ pnChoose.quantityUnit }})\\r\\n                </ng-container>\\r\\n              </th>\\r\\n              <th style=\\\"text-align: center;\\\"></th>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n\\r\\n          <ng-template pTemplate=\\\"body\\\" let-rowData let-rowIndex=\\\"rowIndex\\\">\\r\\n            <tr>\\r\\n              <td style=\\\"text-align: left;\\\" *ngIf=\\\"!isGeneratedPackagingNumber\\\">\\r\\n                <div style=\\\"display: flex; align-items: baseline\\\">\\r\\n                  <div class=\\\"form-control required\\\">\\r\\n                    <input\\r\\n                      class=\\\"aw-input\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      [(ngModel)]=\\\"rowData.stockMvtBatchNumber\\\"\\r\\n                      [disabled]=\\\"!rowData.isEditable\\\"\\r\\n                      [required]=\\\"!isGeneratedPackagingNumber\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n\\r\\n                  <button\\r\\n                    mat-icon-button\\r\\n                    color=\\\"accent\\\"\\r\\n                    (click)=\\\"fillByBatch(rowData, rowData.stockMvtBatchNumber, false)\\\"\\r\\n                    *ngIf=\\\"rowData.isEditable\\\"\\r\\n                  >\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </td>\\r\\n\\r\\n              <td style=\\\"text-align: left;\\\" *ngIf=\\\"isTracabilityBySN || isTracabilityByBatchAndSn\\\">\\r\\n                <div style=\\\"display: flex; align-items: baseline\\\" *ngIf=\\\"isAssetUnknow || !rowData.isEditable\\\">\\r\\n                  <div class=\\\"form-control required\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"aw-input\\\"\\r\\n                      [(ngModel)]=\\\"rowData.stockMvtSn\\\"\\r\\n                      [disabled]=\\\"!rowData.isEditable\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n\\r\\n                  <button mat-icon-button color=\\\"accent\\\" (click)=\\\"fillBySn(rowData)\\\" *ngIf=\\\"rowData.isEditable\\\">\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                  </button>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-control form-control-with-modal\\\" *ngIf=\\\"!isAssetUnknow && rowData.isEditable\\\">\\r\\n                  <div class=\\\"form-control-data\\\" (click)=\\\"openAssetDialog()\\\">\\r\\n                    {{ selectedAssetName }}\\r\\n                  </div>\\r\\n\\r\\n                  <div *ngIf=\\\"selectedAssetName\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                    <i\\r\\n                      class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                      aria-hidden=\\\"true\\\"\\r\\n                      (click)=\\\"selectedAssetName = undefined\\\"\\r\\n                    ></i>\\r\\n                  </div>\\r\\n                  <div class=\\\"btn-search-wrapper\\\">\\r\\n                    <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openAssetDialog()\\\"></i>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </td>\\r\\n\\r\\n              <td style=\\\"text-align: left;\\\" *ngIf=\\\"isTracabilityByBatch\\\">\\r\\n                <div style=\\\"display: flex; align-items: baseline\\\">\\r\\n                  <div class=\\\"form-control required\\\">\\r\\n                    <input\\r\\n                      class=\\\"aw-input\\\"\\r\\n                      type=\\\"text\\\"\\r\\n                      [(ngModel)]=\\\"rowData.manufacturingBatch\\\"\\r\\n                      [disabled]=\\\"!rowData.isEditable\\\"\\r\\n                      [required]=\\\"isTracabilityByBatch\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n\\r\\n                  <button\\r\\n                    mat-icon-button\\r\\n                    color=\\\"accent\\\"\\r\\n                    (click)=\\\"fillByBatch(rowData, rowData.manufacturingBatch, true)\\\"\\r\\n                    *ngIf=\\\"rowData.isEditable\\\"\\r\\n                  >\\r\\n                    <mat-icon>search</mat-icon>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </td>\\r\\n\\r\\n              <td style=\\\"text-align: left;\\\" *ngIf=\\\"!isTracabilityByPackagingBatch\\\">\\r\\n                <div class=\\\"form-control required\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"rowData.manufacturingDate\\\"\\r\\n                    [disabled]=\\\"!rowData.isEditable\\\"\\r\\n                  ></p-calendar>\\r\\n                </div>\\r\\n              </td>\\r\\n\\r\\n              <td style=\\\"text-align: left;\\\" *ngIf=\\\"isTracabilityByBatch || isTracabilityByPackagingBatch\\\">\\r\\n                <div class=\\\"form-control required\\\">\\r\\n                  <p-calendar\\r\\n                    showButtonBar=\\\"true\\\"\\r\\n                    [monthNavigator]=\\\"true\\\"\\r\\n                    [yearNavigator]=\\\"true\\\"\\r\\n                    [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                    class=\\\"aw-calendar\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                    [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                    [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                    [(ngModel)]=\\\"rowData.expirationDate\\\"\\r\\n                    [disabled]=\\\"!rowData.isEditable\\\"\\r\\n                  ></p-calendar>\\r\\n                </div>\\r\\n              </td>\\r\\n\\r\\n              <td *ngIf=\\\"!(isTracabilityBySN || isTracabilityByBatchAndSn)\\\">\\r\\n                <div class=\\\"form-control required\\\">\\r\\n                  <input\\r\\n                    class=\\\"aw-input\\\"\\r\\n                    type=\\\"number\\\"\\r\\n                    [(ngModel)]=\\\"rowData.stockMvtQuantity\\\"\\r\\n                    [disabled]=\\\"!rowData.isEditable\\\"\\r\\n                    [required]=\\\"true\\\"\\r\\n                    [min]=\\\"0\\\"\\r\\n                    [max]=\\\"remainingQuantity\\\"\\r\\n                    oninput=\\\"validity.valid||(value='');\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </td>\\r\\n\\r\\n              <td>\\r\\n                <button\\r\\n                  mat-icon-button\\r\\n                  class=\\\"mat-elevation-z1\\\"\\r\\n                  color=\\\"warn\\\"\\r\\n                  (click)=\\\"deleteStockItem(rowData)\\\"\\r\\n                  *ngIf=\\\"!rowData.isEditable\\\"\\r\\n                >\\r\\n                  <mat-icon>remove</mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <button\\r\\n                  mat-icon-button\\r\\n                  class=\\\"mat-elevation-z1\\\"\\r\\n                  (click)=\\\"updateStockMvtTable(rowData)\\\"\\r\\n                  *ngIf=\\\"rowData.isEditable\\\"\\r\\n                >\\r\\n                  <mat-icon>done</mat-icon>\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </p-table>\\r\\n      </div>\\r\\n      <div class=\\\"section-content\\\" *ngIf=\\\"!isNotReceiptDone\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label warning\\\">{{ getComponentName() + \\\".warnigDeliver\\\" | translate }}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"section-content\\\" *ngIf=\\\"!isNotQuantityOver\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label warning\\\">{{ getComponentName() + \\\".warnigQuanttity\\\" | translate }}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      mat-raised-button\\r\\n      [disabled]=\\\"disableButton && isNotReceiptDone\\\"\\r\\n      (click)=\\\"validateAssetListForPackage()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-pn\\r\\n  *ngIf=\\\"searchPnDialogVisible\\\"\\r\\n  [(display)]=\\\"searchPnDialogVisible\\\"\\r\\n  [withAllTypes]=\\\"true\\\"\\r\\n  [showPartTypeSelection]=\\\"true\\\"\\r\\n  (onSelected)=\\\"checkPn($event)\\\"\\r\\n></aw-dialog-search-pn>\\r\\n<aw-dialog-search-equipment\\r\\n  *ngIf=\\\"assetDialogVisible\\\"\\r\\n  [(display)]=\\\"assetDialogVisible\\\"\\r\\n  [selectionMultiple]=\\\"false\\\"\\r\\n  [searchAllEquipment]=\\\"true\\\"\\r\\n  [pnChoose]=\\\"article\\\"\\r\\n  (onSelected)=\\\"onSelectAsset($event)\\\"\\r\\n></aw-dialog-search-equipment>\\r\\n\"","module.exports = \":host .article-designation {\\n  font-style: italic;\\n  padding: 0px 0 0 16px; }\\n\\n:host .form-label.warning {\\n  color: #a82525 !important;\\n  font-style: italic; }\\n\\n:host td div.form-control-with-modal {\\n  display: flex;\\n  flex-direction: row;\\n  border-bottom-color: #595959;\\n  border-left-color: transparent;\\n  border-radius: 0;\\n  border-right-color: transparent;\\n  border-style: solid;\\n  border-top-color: transparent;\\n  border-width: 1px;\\n  padding: 5px;\\n  transition: border-bottom-color 0.25s ease-in-out; }\\n\\n:host td div.form-control-data {\\n  color: inherit;\\n  flex-grow: 1;\\n  font-family: inherit;\\n  font-size: inherit;\\n  font-weight: inherit;\\n  line-height: 1.42857143;\\n  padding: 2px 0 4px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvZ29vZHMtcmVjZWlwdC9mb3JtL2RpYWxvZy1hZGQtbWF0ZXJpYWwvRDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxmcm9udGVuZF9hZXJvd2ViYi9zcmNcXGFwcFxcbWFpblxcbG9naXN0aWNzXFxnb29kcy1yZWNlaXB0XFxmb3JtXFxkaWFsb2ctYWRkLW1hdGVyaWFsXFxkaWFsb2ctYWRkLW1hdGVyaWFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBRUksa0JBQWtCO0VBQ2xCLHFCQUFxQixFQUFBOztBQUh6QjtFQVFNLHlCQUE0QjtFQUM1QixrQkFBa0IsRUFBQTs7QUFUeEI7RUFjSSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDRCQUE0QjtFQUM1Qiw4QkFBOEI7RUFDOUIsZ0JBQWdCO0VBQ2hCLCtCQUErQjtFQUMvQixtQkFBbUI7RUFDbkIsNkJBQTZCO0VBQzdCLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osaURBQWlELEVBQUE7O0FBeEJyRDtFQTRCSSxjQUFjO0VBQ2QsWUFBWTtFQUNaLG9CQUFvQjtFQUNwQixrQkFBa0I7RUFDbEIsb0JBQW9CO0VBQ3BCLHVCQUF1QjtFQUN2QixvQkFBb0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vbG9naXN0aWNzL2dvb2RzLXJlY2VpcHQvZm9ybS9kaWFsb2ctYWRkLW1hdGVyaWFsL2RpYWxvZy1hZGQtbWF0ZXJpYWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiY29uc3RhbnRzXCI7XHJcblxyXG46aG9zdCB7XHJcbiAgLmFydGljbGUtZGVzaWduYXRpb24ge1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgcGFkZGluZzogMHB4IDAgMCAxNnB4O1xyXG4gIH1cclxuXHJcbiAgLmZvcm0tbGFiZWwge1xyXG4gICAgJi53YXJuaW5nIHtcclxuICAgICAgY29sb3I6ICRyZWQtZGFyazEgIWltcG9ydGFudDtcclxuICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdGQgZGl2LmZvcm0tY29udHJvbC13aXRoLW1vZGFsIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzU5NTk1OTtcclxuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgICBib3JkZXItcmlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci10b3AtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICB0cmFuc2l0aW9uOiBib3JkZXItYm90dG9tLWNvbG9yIDAuMjVzIGVhc2UtaW4tb3V0O1xyXG4gIH1cclxuXHJcbiAgdGQgZGl2LmZvcm0tY29udHJvbC1kYXRhIHtcclxuICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgZmxleC1ncm93OiAxO1xyXG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XHJcbiAgICBmb250LXdlaWdodDogaW5oZXJpdDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjQyODU3MTQzO1xyXG4gICAgcGFkZGluZzogMnB4IDAgNHB4IDA7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { AWPropertiesConstants } from '../../../../../shared/constants/aw-properties-constants';\r\nimport { BireMeasureReferenceConstants } from '../../../../../shared/constants/bire-measure-reference-constants';\r\nimport { BireRatingConstants } from '../../../../../shared/constants/bire-rating-constants';\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { AddReceiptMaterialInput } from '../../../../../shared/types/api-input-types/logistic/add-receipt-material-input.interface';\r\nimport { BidoEquipmentDTO } from '../../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BidtDeliveryFolderDTO } from '../../../../../shared/types/api-types/bidt-delivery-folder-dto.interface';\r\nimport { BidtDfItemDTO } from '../../../../../shared/types/api-types/bidt-df-item-dto.interface';\r\nimport { BidtPackageDTO } from '../../../../../shared/types/api-types/bidt-package-dto.interface';\r\nimport { BidtStockMvtDTO } from '../../../../../shared/types/api-types/bidt-stock-mvt-dto.interface';\r\nimport { BirePnDTO } from '../../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { BidoEquipmentUtils } from '../../../../../shared/utils/bido-equipment-utils';\r\nimport { BidoFamilyVariantUtils } from '../../../../../shared/utils/bido-family-variant-utils';\r\nimport { ListUtils } from '../../../../../shared/utils/list-utils';\r\nimport { NumberUtils } from '../../../../../shared/utils/number-utils';\r\nimport { ObjectUtils } from '../../../../../shared/utils/object-utils';\r\nimport { StringUtils } from '../../../../../shared/utils/string-utils';\r\nimport { LogisticsService } from '../../../logistics.service';\r\nimport { DeliveryFolderSearchService } from '../../delivery-folder-search.service';\r\n\r\ninterface TableBidtStockDTO extends BidtStockMvtDTO {\r\n  id?: number;\r\n  isEditable?: boolean;\r\n  manufacturingBatch?: string;\r\n  manufacturingDate?: Date;\r\n  expirationDate?: Date;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-add-material',\r\n  templateUrl: './dialog-add-material.component.html',\r\n  styleUrls: ['./dialog-add-material.component.scss']\r\n})\r\nexport class DialogAddMaterialComponent extends DialogComponent implements OnInit {\r\n  public static readonly GENERATE: string = '0';\r\n  public static readonly ENTER: string = '1';\r\n\r\n  public static readonly EXISTING_ITEM: string = '0';\r\n  public static readonly NEW_ITEM: string = '1';\r\n\r\n  public static readonly CURRENT_PACKAGE: string = '0';\r\n  public static readonly NEW_PACKAGE: string = '1';\r\n  public static readonly WWITHOUT_PACKAGE: string = '2';\r\n\r\n  public static readonly ASSET_UNKNOW: string = '0';\r\n  public static readonly ASSET_KNOW: string = '1';\r\n\r\n  @Input() private readonly bidtDeliveryFolder: BidtDeliveryFolderDTO;\r\n\r\n  @Input() private readonly itemsDtoList: BidtDfItemDTO[];\r\n\r\n  @Input() public packageDtoList: BidtPackageDTO[];\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<BidtStockMvtDTO>;\r\n\r\n  public article?: string;\r\n  public choiceListItemPackage: LabelValue<string>[];\r\n  public choiceListPackagingNumber: LabelValue<string>[];\r\n  public choiceListPackage: LabelValue<string>[];\r\n  public choiceListItem: LabelValue<string>[];\r\n  public choiceListAsset: LabelValue<string>[];\r\n\r\n  public createWithPackage: boolean;\r\n  public isGeneratedPackagingNumber: boolean;\r\n  public isPackageCodeGenerated: boolean;\r\n  public isTracabilityBySN: boolean;\r\n  public isTracabilityByBatchAndSn: boolean;\r\n  public isTracabilityByPackagingBatch: boolean;\r\n  public isTracabilityByBatch: boolean;\r\n  public isExistingItem: boolean;\r\n  public isNotReceiptDone: boolean;\r\n  public isAssetUnknow: boolean;\r\n  public item: BidtDfItemDTO | undefined;\r\n  public itemsList: LabelValue<BidtDfItemDTO>[];\r\n  public packageList: LabelValue<BidtPackageDTO>[];\r\n  public packageDto: BidtPackageDTO | undefined;\r\n  public pnChoose: BirePnDTO | undefined;\r\n  public quantity: number;\r\n  public quantityItem: number;\r\n\r\n  public selectedChoicePackagingNumber: string;\r\n  public selectedChoiceItemPackage: string;\r\n  public selectedChoicePackage: string;\r\n  public selectedChoiceItem: string;\r\n  public selectedChoiceAsset: string;\r\n\r\n  public assetDialogVisible: boolean;\r\n  public searchPnDialogVisible: boolean;\r\n\r\n  public selectedAssetName: string;\r\n  public packagesTypesList: LabelValue<string>[];\r\n\r\n  public stockMvtTable: TableBidtStockDTO[];\r\n  public remainingQuantity: number;\r\n  public isNotQuantityOver: boolean;\r\n  public disableButton: boolean;\r\n  public isDraftStatus: boolean;\r\n\r\n  public component: typeof DialogAddMaterialComponent;\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    public readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService,\r\n    public readonly deliveryFolderSearchService: DeliveryFolderSearchService,\r\n    private readonly logisticsService: LogisticsService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogAddMaterialComponent');\r\n    this.component = DialogAddMaterialComponent;\r\n    this.onCreate = new EventEmitter<BidtStockMvtDTO>();\r\n    this.init();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.loadDropDowns();\r\n    this.isDraftStatus = this.bidtDeliveryFolder.dfStatus === AWPropertiesConstants.RECEIPT_FOLDER_STATUS_DRAFT;\r\n  }\r\n\r\n  private init(): void {\r\n    this.isExistingItem = true;\r\n    this.choiceListItemPackage = [];\r\n    this.choiceListPackage = [];\r\n    this.choiceListPackagingNumber = [];\r\n    this.choiceListItem = [];\r\n    this.itemsList = [];\r\n    this.resetModelValues();\r\n    this.resetTraceabilityvalues();\r\n  }\r\n\r\n  private resetModelValues(): void {\r\n    this.item = undefined;\r\n    this.pnChoose = undefined;\r\n    this.quantity = 1;\r\n    this.isNotQuantityOver = true;\r\n    this.isNotReceiptDone = true;\r\n    this.stockMvtTable = [];\r\n    this.isPackageCodeGenerated = true;\r\n    this.isGeneratedPackagingNumber = true;\r\n    this.disableButton = false;\r\n    this.isAssetUnknow = true;\r\n    this.assetDialogVisible = false;\r\n    this.searchPnDialogVisible = false;\r\n    this.createWithPackage = true;\r\n  }\r\n\r\n  private initializeStockMvtTable(): void {\r\n    this.stockMvtTable = [];\r\n    this.stockMvtTable.push(this.getInitialRow());\r\n  }\r\n\r\n  private getInitialRow(): TableBidtStockDTO {\r\n    return {\r\n      id: this.stockMvtTable.length,\r\n      stockMvtBatchNumber: undefined,\r\n      stockMvtQuantity: undefined,\r\n      isEditable: true,\r\n      manufacturingBatch: undefined,\r\n      manufacturingDate: undefined,\r\n      expirationDate: undefined,\r\n      stockMvtSn: undefined\r\n    };\r\n  }\r\n  private loadDropDowns() {\r\n    const packageTypes = this.propertiesService.getValue(GenericPropertyConstants.PACKAGE_TYPE_MAP);\r\n\r\n    forkJoin({ packageTypes }).subscribe({\r\n      next: (results) => {\r\n        this.packagesTypesList = results.packageTypes;\r\n        this.itemsList = [];\r\n        this.itemsList = this.loadItemsList();\r\n        this.packageList = this.loadPackageList();\r\n        this.getChoiceListPackagingNumber();\r\n        this.getChoiceListItemPackage();\r\n        this.getChoiceListPackage();\r\n        this.getChoiceListItem();\r\n        this.getChoiceListAsset();\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadPackageList(): LabelValue<BidtPackageDTO>[] {\r\n    return ListUtils.orEmpty(this.packageDtoList)\r\n      .filter((pack) => !!pack.packageCode)\r\n      .map((bidtPackage: BidtPackageDTO) => {\r\n        const unit: LabelValue<BidtPackageDTO> = {\r\n          label: bidtPackage.packageCode as string,\r\n          value: bidtPackage\r\n        };\r\n\r\n        return unit;\r\n      });\r\n  }\r\n\r\n  private loadItemsList(): LabelValue<BidtDfItemDTO>[] {\r\n    return ListUtils.orEmpty(this.itemsDtoList)\r\n      .filter((item) => !!item.dfiCode)\r\n      .map((bidtItem: BidtDfItemDTO) => {\r\n        const unit: LabelValue<BidtDfItemDTO> = {\r\n          label: `${bidtItem.dfiCode} : ${bidtItem.birePnPnCode} (${\r\n            (bidtItem.birePn as BirePnDTO).articleDesignation\r\n          })`,\r\n          value: bidtItem\r\n        };\r\n\r\n        return unit;\r\n      });\r\n  }\r\n\r\n  private getChoiceListPackagingNumber(): void {\r\n    this.choiceListPackagingNumber = this.deliveryFolderSearchService.loadCreationChoiceListPackagingNumber();\r\n    this.setSelectedChoicePackagingNumber();\r\n  }\r\n\r\n  private setSelectedChoicePackagingNumber(): void {\r\n    this.selectedChoicePackagingNumber =\r\n      this.choiceListPackagingNumber && this.choiceListPackagingNumber.length\r\n        ? this.choiceListPackagingNumber[0].value\r\n        : '';\r\n  }\r\n\r\n  private getChoiceListItemPackage(): void {\r\n    this.choiceListItemPackage = this.deliveryFolderSearchService.loadCreationChoiceList();\r\n    this.selectedChoiceItemPackage =\r\n      this.choiceListItemPackage && this.choiceListItemPackage.length ? this.choiceListItemPackage[0].value : '';\r\n  }\r\n\r\n  private getChoiceListPackage(): void {\r\n    this.choiceListPackage = this.deliveryFolderSearchService.loadCreationChoiceListPackageNumber();\r\n    this.selectedChoicePackage =\r\n      this.choiceListPackage && this.choiceListPackage.length ? this.choiceListPackage[0].value : '';\r\n  }\r\n\r\n  private getChoiceListItem(): void {\r\n    this.choiceListItem = this.deliveryFolderSearchService.loadCreationChoiceListItem();\r\n    this.selectedChoiceItem = this.choiceListItem && this.choiceListItem.length ? this.choiceListItem[0].value : '';\r\n  }\r\n\r\n  private getChoiceListAsset(): void {\r\n    this.choiceListAsset = this.deliveryFolderSearchService.loadCreationAssetChoice();\r\n    this.selectedChoiceAsset = this.choiceListAsset && this.choiceListAsset.length ? this.choiceListAsset[0].value : '';\r\n  }\r\n\r\n  public onChangeItem(item: BidtDfItemDTO): void {\r\n    const missingQuantity: number = this.getMissingQuantity();\r\n    this.quantity = this.isDraftStatus ? missingQuantity : missingQuantity > 0 ? 1 : 0;\r\n    this.checkPn(item.birePn);\r\n    this.remainingQuantity = this.quantity;\r\n    this.isNotReceiptDone = this.checkIsNotReceiptdone(item);\r\n    this.isNotQuantityOver = this.checkQuanntityOnSelectedItem(item);\r\n  }\r\n\r\n  public checkIsNotReceiptdone(item: BidtDfItemDTO): boolean {\r\n    return item.bidtPackage && item.bidtPackage.packageStatus === AWPropertiesConstants.PACKAGE_STATUS_DELIVERED\r\n      ? false\r\n      : true;\r\n  }\r\n\r\n  private resetTraceabilityvalues(): void {\r\n    this.disableButton = true;\r\n    this.isTracabilityByPackagingBatch = false;\r\n    this.isTracabilityBySN = false;\r\n    this.isTracabilityByBatchAndSn = false;\r\n    this.isTracabilityByBatch = false;\r\n    this.isAssetUnknow = true;\r\n  }\r\n\r\n  public checkPn(pn: BirePnDTO | undefined) {\r\n    this.initializeStockMvtTable();\r\n    this.resetTraceabilityvalues();\r\n    if (pn) {\r\n      this.article = pn.pnCode as string;\r\n      this.pnChoose = pn;\r\n      switch (pn.traceability) {\r\n        case AWPropertiesConstants.PN_TRACEABILITY_BY_BATCH:\r\n          this.isTracabilityByBatch = true;\r\n          break;\r\n        case AWPropertiesConstants.PN_TRACEABILITY_BY_SN:\r\n          this.isTracabilityBySN = true;\r\n          break;\r\n        case AWPropertiesConstants.PN_TRACEABILITY_BY_PACKAGING_BATCH:\r\n          this.isTracabilityByPackagingBatch = true;\r\n          break;\r\n        case AWPropertiesConstants.PN_TRACEABILITY_BY_PACKAGING_BATCH_AND_SN:\r\n          this.isTracabilityByBatchAndSn = true;\r\n          break;\r\n        default:\r\n          this.isTracabilityBySN = true;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateRemainingQuantity(): void {\r\n    if (this.getMissingQuantity() && this.quantity && this.getMissingQuantity() < this.quantity) {\r\n      this.quantity = this.getMissingQuantity();\r\n      this.messageService.showWarningMessage(this.getTranslateKey('warning'));\r\n    } else if (this.quantityItem && this.quantity && this.quantityItem < this.quantity) {\r\n      this.quantity = this.quantityItem;\r\n      this.messageService.showWarningMessage(this.getTranslateKey('warning'));\r\n    }\r\n    const computedQuantity = this.quantity ? this.quantity : this.quantityItem;\r\n    if (this.stockMvtTable.length === 1 && !this.isStockMvtTableComplete(this.stockMvtTable[0])) {\r\n      this.remainingQuantity = computedQuantity;\r\n    } else {\r\n      let totalStockMvtQuantity = 0;\r\n      this.stockMvtTable.forEach((item) => {\r\n        totalStockMvtQuantity += Number(item.stockMvtQuantity || 0);\r\n      });\r\n      this.remainingQuantity = computedQuantity - totalStockMvtQuantity;\r\n      if (\r\n        !this.stockMvtTable.length ||\r\n        this.isStockMvtTableComplete(this.stockMvtTable[this.stockMvtTable.length - 1])\r\n      ) {\r\n        this.addNewStockInTable();\r\n      }\r\n    }\r\n  }\r\n\r\n  public openSearchPnDialog(): void {\r\n    this.searchPnDialogVisible = true;\r\n  }\r\n\r\n  public getMissingQuantity(): number {\r\n    let missingQuantity = 0;\r\n    if (this.item) {\r\n      const actualQuantity = this.getMaterialTotalQuantityOfItem(this.item);\r\n      missingQuantity = Number(this.item.quantity) - actualQuantity;\r\n    }\r\n\r\n    return missingQuantity;\r\n  }\r\n\r\n  public checkQuanntityOnSelectedItem(bidtDfItemDTO: BidtDfItemDTO): boolean {\r\n    const actualQuantity = this.getMaterialTotalQuantityOfItem(bidtDfItemDTO);\r\n\r\n    return actualQuantity < Number(bidtDfItemDTO.quantity);\r\n  }\r\n\r\n  public checkQuantity(): boolean {\r\n    if (this.item) {\r\n      const actualQuantity = this.getMaterialTotalQuantityOfItem(this.item);\r\n      const newQuantity = actualQuantity + this.quantity;\r\n\r\n      return newQuantity <= Number(this.item.quantity);\r\n    } else {\r\n      return this.quantity <= this.quantityItem;\r\n    }\r\n  }\r\n\r\n  private getMaterialTotalQuantityOfItem(bidtDfItemDTO: BidtDfItemDTO): number {\r\n    let totalQuantity = 0;\r\n    if (bidtDfItemDTO.bidtStockMvts && bidtDfItemDTO.bidtStockMvts.length > 0) {\r\n      bidtDfItemDTO.bidtStockMvts.forEach((mvt) => {\r\n        totalQuantity = totalQuantity + Number(mvt.stockMvtQuantity);\r\n      });\r\n    }\r\n\r\n    return totalQuantity;\r\n  }\r\n\r\n  public resetChoiceItem(): void {\r\n    this.changeModeItem();\r\n  }\r\n\r\n  private changeModeItem(): void {\r\n    this.resetModelValues();\r\n    switch (this.selectedChoiceItem) {\r\n      case this.component.EXISTING_ITEM:\r\n        this.isExistingItem = true;\r\n        this.disableButton = true;\r\n        this.quantityItem = 0;\r\n        break;\r\n\r\n      case this.component.NEW_ITEM:\r\n        this.isExistingItem = false;\r\n        this.article = undefined;\r\n        this.disableButton = false;\r\n        this.remainingQuantity = 0;\r\n        this.quantity = 0;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public resetChoicePackagingnumber(): void {\r\n    this.initializeStockMvtTable();\r\n    this.updateRemainingQuantity();\r\n    this.changeModePackagingNumber();\r\n  }\r\n\r\n  private changeModePackagingNumber(): void {\r\n    switch (this.selectedChoicePackagingNumber) {\r\n      case this.component.GENERATE:\r\n        this.isGeneratedPackagingNumber = true;\r\n        break;\r\n\r\n      case this.component.ENTER:\r\n        this.isGeneratedPackagingNumber = false;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public resetChoiceItemPackage(): void {\r\n    this.changeModeItemPackage();\r\n  }\r\n\r\n  private changeModeItemPackage(): void {\r\n    switch (this.selectedChoiceItemPackage) {\r\n      case this.component.CURRENT_PACKAGE:\r\n        this.packageDto = undefined;\r\n        this.createWithPackage = true;\r\n        break;\r\n\r\n      case this.component.NEW_PACKAGE:\r\n        this.packageDto = {};\r\n        this.createWithPackage = true;\r\n        break;\r\n\r\n      case this.component.WWITHOUT_PACKAGE:\r\n        this.packageDto = {};\r\n        this.createWithPackage = false;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public resetChoicePackage(): void {\r\n    this.changeModePackage();\r\n  }\r\n\r\n  private changeModePackage(): void {\r\n    switch (this.selectedChoicePackage) {\r\n      case this.component.GENERATE:\r\n        this.isPackageCodeGenerated = true;\r\n        break;\r\n\r\n      case this.component.ENTER:\r\n        this.isPackageCodeGenerated = false;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public resetChoiceAsset(): void {\r\n    this.isGeneratedPackagingNumber = true;\r\n    this.setSelectedChoicePackagingNumber();\r\n    this.changeModeAsset();\r\n  }\r\n\r\n  private changeModeAsset(): void {\r\n    switch (this.selectedChoiceAsset) {\r\n      case this.component.ASSET_UNKNOW:\r\n        this.isAssetUnknow = true;\r\n        break;\r\n\r\n      case this.component.ASSET_KNOW:\r\n        this.isAssetUnknow = false;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public openAssetDialog(): void {\r\n    this.assetDialogVisible = true;\r\n  }\r\n\r\n  public onSelectAsset(equipment: BidoEquipmentDTO): void {\r\n    if (equipment.sn) {\r\n      this.stockMvtTable[this.stockMvtTable.length - 1].stockMvtSn = equipment.sn;\r\n    }\r\n    if (equipment.batchNumber) {\r\n      this.stockMvtTable[this.stockMvtTable.length - 1].stockMvtBatchNumber = equipment.batchNumber;\r\n    }\r\n    this.selectedAssetName = BidoEquipmentUtils.createAssetRepresentation(equipment);\r\n  }\r\n\r\n  public updateStockMvtTable(): void {\r\n    if (this.stockMvtTable.length > 0) {\r\n      const rowData = this.stockMvtTable[this.stockMvtTable.length - 1];\r\n\r\n      if (!this.isStockMvtTableComplete(rowData)) {\r\n        return;\r\n      }\r\n      if (this.isTracabilityBySN || this.isTracabilityByBatchAndSn) {\r\n        rowData.stockMvtQuantity = '1';\r\n      }\r\n      if (this.remainingQuantity < Number(rowData.stockMvtQuantity)) {\r\n        this.messageService.showWarningMessage(this.getTranslateKey('warning'));\r\n\r\n        return;\r\n      }\r\n\r\n      this.stockMvtTable.pop();\r\n      rowData.isEditable = false;\r\n      this.remainingQuantity = this.remainingQuantity - Number(rowData.stockMvtQuantity);\r\n      this.stockMvtTable.push(rowData);\r\n      this.addNewStockInTable();\r\n    }\r\n  }\r\n\r\n  public isAddBtnVisible(): boolean {\r\n    return this.remainingQuantity > 0 && this.stockMvtTable.every((row) => !row.isEditable);\r\n  }\r\n\r\n  private addNewStockInTable(): void {\r\n    this.selectedAssetName = '';\r\n    if (this.remainingQuantity > 0) {\r\n      this.disableButton = true;\r\n      this.stockMvtTable.push(this.getInitialRow());\r\n    } else {\r\n      this.disableButton = false;\r\n    }\r\n  }\r\n\r\n  private isExpirationDateMandatory(): boolean {\r\n    return !!this.pnChoose && !!this.pnChoose.hasExpirationDate;\r\n  }\r\n\r\n  private isStockMvtTableComplete(rowData: TableBidtStockDTO): boolean {\r\n    let complete = false;\r\n    if (this.isTracabilityByBatch) {\r\n      complete =\r\n        rowData.manufacturingBatch &&\r\n        (!this.isExpirationDateMandatory() || !!rowData.expirationDate) &&\r\n        (this.isGeneratedPackagingNumber || rowData.stockMvtBatchNumber) &&\r\n        rowData.stockMvtQuantity\r\n          ? true\r\n          : false;\r\n    } else if (this.isTracabilityBySN) {\r\n      complete = ObjectUtils.isDefined(rowData.stockMvtSn);\r\n    } else if (this.isTracabilityByPackagingBatch) {\r\n      complete =\r\n        rowData.stockMvtQuantity &&\r\n        (!this.isExpirationDateMandatory() || !!rowData.expirationDate) &&\r\n        (this.isGeneratedPackagingNumber || rowData.stockMvtBatchNumber)\r\n          ? true\r\n          : false;\r\n    } else if (this.isTracabilityByBatchAndSn) {\r\n      complete =\r\n        rowData.stockMvtSn &&\r\n        (!this.isExpirationDateMandatory() || !!rowData.expirationDate) &&\r\n        (this.isGeneratedPackagingNumber || rowData.stockMvtBatchNumber)\r\n          ? true\r\n          : false;\r\n    }\r\n\r\n    return complete;\r\n  }\r\n\r\n  public validateAssetListForPackage() {\r\n    const input: AddReceiptMaterialInput[] = [];\r\n    this.stockMvtTable.forEach((mvtObject) => {\r\n      input.push(this.updateAssetRequestBody(mvtObject));\r\n    });\r\n    this.logisticsService.addReceiptMaterialList(input).subscribe((res) => {\r\n      this.messageService.showSuccessMessage(this.getTranslateKey('successOnCreate'));\r\n      this.onCreate.emit((res && res.length && res[0]) || undefined);\r\n      this.closeDialog();\r\n    });\r\n  }\r\n\r\n  private updateAssetRequestBody(mvtObject?: TableBidtStockDTO): AddReceiptMaterialInput {\r\n    const receiptMaterialObject: AddReceiptMaterialInput = {\r\n      bidtDeliveyFolder: this.bidtDeliveryFolder,\r\n      bidtDfItem: this.item ? this.item : undefined,\r\n      bidtStockMvt: this.getBidtStockMvtObject(mvtObject),\r\n      birePnDTO: this.pnChoose ? this.pnChoose : undefined,\r\n      createWithPackage: this.createWithPackage,\r\n      isExistingItem: this.isExistingItem,\r\n      isPackageCodeGenerated: this.isPackageCodeGenerated,\r\n      packageDTO: this.packageDto,\r\n      quantityItem: this.quantity ? this.quantity : this.quantityItem\r\n    };\r\n    if (mvtObject) {\r\n      receiptMaterialObject.manufacturingBatchNumber = mvtObject.manufacturingBatch\r\n        ? mvtObject.manufacturingBatch\r\n        : undefined;\r\n      receiptMaterialObject.manufacturingDate = mvtObject.manufacturingDate ? mvtObject.manufacturingDate : undefined;\r\n      receiptMaterialObject.expirationDate = mvtObject.expirationDate ? mvtObject.expirationDate : undefined;\r\n    }\r\n\r\n    return receiptMaterialObject;\r\n  }\r\n\r\n  private getBidtStockMvtObject(bidtObject?: TableBidtStockDTO): BidtStockMvtDTO {\r\n    const stockMvtObject: BidtStockMvtDTO = {};\r\n    if (bidtObject) {\r\n      stockMvtObject.stockMvtSn = bidtObject.stockMvtSn ? bidtObject.stockMvtSn : undefined;\r\n      stockMvtObject.stockMvtQuantity = bidtObject.stockMvtQuantity\r\n        ? bidtObject.stockMvtQuantity.toString()\r\n        : undefined;\r\n      stockMvtObject.stockMvtBatchNumber = bidtObject.stockMvtBatchNumber ? bidtObject.stockMvtBatchNumber : undefined;\r\n    }\r\n\r\n    return stockMvtObject;\r\n  }\r\n\r\n  public deleteStockItem(row: TableBidtStockDTO): void {\r\n    this.stockMvtTable = this.stockMvtTable.filter((data) => row.id !== data.id);\r\n\r\n    this.updateListId();\r\n    this.updateRemainingQuantity();\r\n  }\r\n\r\n  private updateListId(): void {\r\n    let newId = 0;\r\n    this.stockMvtTable.forEach((row) => {\r\n      row.id = newId;\r\n      newId++;\r\n    });\r\n  }\r\n\r\n  public fillByBatch(row: TableBidtStockDTO, batchNumber: string | undefined, isManufacturingBatchType: boolean): void {\r\n    if (this.pnChoose && !StringUtils.isNullOrEmpty(batchNumber)) {\r\n      const logUnknownEquipment = () => {\r\n        this.messageService.showWarningMessage(\r\n          this.getTranslateKey(\r\n            isManufacturingBatchType ? 'warningOnUnknownBatchNumber' : 'warningOnUnknownPackagingNumber'\r\n          )\r\n        );\r\n      };\r\n\r\n      const existingRow =\r\n        isManufacturingBatchType &&\r\n        this.stockMvtTable\r\n          .slice(0, -1)\r\n          .find((r) => !!r.manufacturingBatch && r.manufacturingBatch === row.manufacturingBatch);\r\n\r\n      if (!!existingRow) {\r\n        row.manufacturingDate = existingRow.manufacturingDate;\r\n        row.expirationDate = existingRow.expirationDate;\r\n\r\n        if (!isManufacturingBatchType) {\r\n          row.stockMvtQuantity = existingRow.stockMvtQuantity;\r\n        }\r\n      } else {\r\n        this.logisticsService\r\n          .findEquipmentByPnAndBatchNumber({\r\n            pnCode: this.pnChoose.pnCode,\r\n            batchNumber\r\n          })\r\n          .subscribe((equipment) => {\r\n            row.manufacturingDate = undefined;\r\n            row.expirationDate = undefined;\r\n            row.stockMvtQuantity = undefined;\r\n            row.stockMvtSn = undefined;\r\n\r\n            if (!!equipment) {\r\n              if (\r\n                this.isTracabilityByBatchAndSn ||\r\n                (isManufacturingBatchType &&\r\n                  equipment.batchType === AWPropertiesConstants.BATCH_TYPE_MANUFACTURING_KEY) ||\r\n                (!isManufacturingBatchType && equipment.batchType === AWPropertiesConstants.BATCH_TYPE_PACKAGING_KEY)\r\n              ) {\r\n                row.manufacturingDate = equipment.manufacturingDate;\r\n\r\n                if (!isManufacturingBatchType) {\r\n                  row.stockMvtQuantity = ObjectUtils.isDefined(equipment.quantity)\r\n                    ? NumberUtils.toString(NumberUtils.roundNumber(equipment.quantity as number))\r\n                    : undefined;\r\n                }\r\n\r\n                if (this.isTracabilityByBatchAndSn) {\r\n                  row.stockMvtSn = equipment.sn;\r\n                }\r\n\r\n                if (\r\n                  !isManufacturingBatchType &&\r\n                  equipment.batchType === AWPropertiesConstants.BATCH_TYPE_PACKAGING_KEY &&\r\n                  ObjectUtils.isDefined(equipment.equEquipmentCode)\r\n                ) {\r\n                  this.logisticsService.findEquipment({ equipmentCode: equipment.equEquipmentCode }).subscribe({\r\n                    next: (fatherEquipment) => {\r\n                      row.manufacturingBatch = fatherEquipment.batchNumber;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                if (!this.isTracabilityByBatchAndSn && !this.isTracabilityByPackagingBatch) {\r\n                  // Expiration date\r\n                  this.logisticsService\r\n                    .findBidoEquipmentCounter({\r\n                      equipmentCode: equipment.equipmentCode,\r\n                      counterCode: BireMeasureReferenceConstants.BIRE_MEASURE_REFERENCE_COUNTER_CODE_CALENDAR_LIMIT,\r\n                      familyCode: BidoFamilyVariantUtils.getFamilyCodeFromFamilyVariantCode(\r\n                        equipment.familyVariantCode\r\n                      ),\r\n                      ratingCode: BireRatingConstants.DEFAULT\r\n                    })\r\n                    .subscribe((bidoEquipmentCounter) => {\r\n                      if (bidoEquipmentCounter) {\r\n                        row.expirationDate = bidoEquipmentCounter.dateLimit;\r\n                      }\r\n                    });\r\n                }\r\n              }\r\n            } else {\r\n              logUnknownEquipment();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  public fillBySn(row: TableBidtStockDTO): void {\r\n    if (this.pnChoose) {\r\n      this.logisticsService\r\n        .findEquipmentByPnAndSn({\r\n          pnCode: this.pnChoose.pnCode,\r\n          sn: row.stockMvtSn\r\n        })\r\n        .subscribe((equipment) => {\r\n          if (equipment) {\r\n            row.manufacturingDate = equipment.manufacturingDate;\r\n            row.stockMvtBatchNumber = equipment.logisticsSequenceCode;\r\n            row.stockMvtQuantity = ObjectUtils.isDefined(equipment.quantity)\r\n              ? NumberUtils.toString(NumberUtils.roundNumber(equipment.quantity as number))\r\n              : undefined;\r\n          } else {\r\n            row.manufacturingDate = undefined;\r\n            row.stockMvtBatchNumber = undefined;\r\n            row.stockMvtQuantity = undefined;\r\n\r\n            this.messageService.showWarningMessage(this.getTranslateKey('warningOnUnknownSn'));\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"scan\\\">\\r\\n          <i class=\\\"fa fa-fw fa-qrcode\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".scanPackage\\\" | translate }}</label>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n            <p-selectButton\\r\\n              [(ngModel)]=\\\"selectedChoice\\\"\\r\\n              [options]=\\\"choiceList\\\"\\r\\n              (onChange)=\\\"resetChoice()\\\"\\r\\n            ></p-selectButton>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group required\\\" *ngIf=\\\"selectedChoice === component.ENTER\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".packageNumber\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"packageNumber\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".packageType\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [(ngModel)]=\\\"selectedPackageType\\\"\\r\\n              [options]=\\\"packagesTypesList\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".article\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control form-control-with-modal\\\">\\r\\n            <div class=\\\"form-control-data\\\" (click)=\\\"openSearchPnDialog()\\\">\\r\\n              {{ article }}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"article\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n              <i\\r\\n                class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                aria-hidden=\\\"true\\\"\\r\\n                (click)=\\\"article = undefined\\\"\\r\\n              ></i>\\r\\n            </div>\\r\\n            <div class=\\\"btn-search-wrapper\\\">\\r\\n              <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openSearchPnDialog()\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".quantity\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input\\r\\n              type=\\\"number\\\"\\r\\n              name=\\\"docName\\\"\\r\\n              class=\\\"aw-input\\\"\\r\\n              [(ngModel)]=\\\"quantity\\\"\\r\\n              min=\\\"0\\\"\\r\\n              oninput=\\\"validity.valid||(value='');\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div\\r\\n          class=\\\"form-group\\\"\\r\\n          [ngClass]=\\\"{\\r\\n            'visibility--hidden': !(pnUse && pnUse.unitOfIssue)\\r\\n          }\\\"\\r\\n        >\\r\\n          <label class=\\\"form-label\\\">{{ \\\"unit\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <div class=\\\"form-control-generic\\\" *ngIf=\\\"pnUse && pnUse.pnCode && pnUse.unitOfIssue\\\">\\r\\n              {{ pnUse.unitOfIssue | formatSelectOption: unitOfIssueOptions }}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\" [disabled]=\\\"!isFormValid()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-pn\\r\\n  *ngIf=\\\"searchPnDialogVisible\\\"\\r\\n  [(display)]=\\\"searchPnDialogVisible\\\"\\r\\n  (onSelected)=\\\"onSelectPn($event)\\\"\\r\\n  [withAllTypes]=\\\"true\\\"\\r\\n  [showPartTypeSelection]=\\\"true\\\"\\r\\n></aw-dialog-search-pn>\\r\\n\"","module.exports = \":host .scan {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column;\\n  flex-grow: 1;\\n  margin-bottom: 4rem; }\\n  :host .scan i {\\n    cursor: pointer;\\n    font-size: 12rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvZ29vZHMtcmVjZWlwdC9mb3JtL2RpYWxvZy1hZGQtcGFja2FnZS9EOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGZyb250ZW5kX2Flcm93ZWJiL3NyY1xcYXBwXFxtYWluXFxsb2dpc3RpY3NcXGdvb2RzLXJlY2VpcHRcXGZvcm1cXGRpYWxvZy1hZGQtcGFja2FnZVxcZGlhbG9nLWFkZC1wYWNrYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLG1CQUFtQixFQUFBO0VBTnZCO0lBU00sZUFBZTtJQUNmLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvZ29vZHMtcmVjZWlwdC9mb3JtL2RpYWxvZy1hZGQtcGFja2FnZS9kaWFsb2ctYWRkLXBhY2thZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgLnNjYW4ge1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZmxleC1ncm93OiAxO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNHJlbTtcclxuXHJcbiAgICBpIHtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICBmb250LXNpemU6IDEycmVtO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { AddReceiptPackageInput } from '../../../../../shared/types/api-input-types/logistic/add-receipt-package-input.interface';\r\nimport { BidtDeliveryFolderDTO } from '../../../../../shared/types/api-types/bidt-delivery-folder-dto.interface';\r\nimport { BidtPackageDTO } from '../../../../../shared/types/api-types/bidt-package-dto.interface';\r\nimport { BirePnDTO } from '../../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { ObjectUtils } from '../../../../../shared/utils/object-utils';\r\nimport { LogisticsService } from '../../../logistics.service';\r\nimport { DeliveryFolderSearchService } from '../../delivery-folder-search.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-add-package',\r\n  styleUrls: ['./dialog-add-package.component.scss'],\r\n  templateUrl: './dialog-add-package.component.html'\r\n})\r\nexport class DialogAddPackageComponent extends DialogComponent implements OnInit {\r\n  public static readonly GENERATE: string = '0';\r\n  public static readonly ENTER: string = '1';\r\n\r\n  @Input()\r\n  public bidtDeliveryFolder: BidtDeliveryFolderDTO;\r\n\r\n  public packageNumber: string;\r\n  public searchPnDialogVisible: boolean;\r\n  public article: string;\r\n  public pnUse: BirePnDTO;\r\n  public quantity: number;\r\n  public choiceList: LabelValue<string>[];\r\n  public selectedChoice: string;\r\n  public isGenerated: boolean;\r\n  public unitOfIssueOptions: LabelValue<string>[];\r\n  public packagesTypesList: LabelValue<string>[];\r\n  public selectedPackageType: string;\r\n\r\n  public component: typeof DialogAddPackageComponent;\r\n\r\n  @Output()\r\n  public onCreate: EventEmitter<BidtPackageDTO>;\r\n\r\n  public constructor(\r\n    private readonly logisticsService: LogisticsService,\r\n    private readonly propertiesService: PropertiesService,\r\n    public readonly deliveryFolderSearchService: DeliveryFolderSearchService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogAddPackageComponent');\r\n    this.searchPnDialogVisible = false;\r\n    this.isGenerated = true;\r\n    this.component = DialogAddPackageComponent;\r\n    this.onCreate = new EventEmitter<BidtPackageDTO>();\r\n    this.loadUnitOfIssueOptions();\r\n  }\r\n\r\n  public isFormValid(): boolean {\r\n    return ObjectUtils.isDefined(this.quantity) && ObjectUtils.isDefined(this.pnUse);\r\n  }\r\n\r\n  public validate() {\r\n    if (this.validateInputs()) {\r\n      const input: AddReceiptPackageInput = {\r\n        packageCode: this.packageNumber,\r\n        bidtDeliveryFolder: this.bidtDeliveryFolder,\r\n        material: this.pnUse,\r\n        quantity: this.quantity,\r\n        isGenerated: this.isGenerated,\r\n        packageType: this.selectedPackageType\r\n      };\r\n\r\n      this.logisticsService.addReceiptPackage(input).subscribe((res) => {\r\n        this.messageService.showSuccessMessage('DialogAddPackageComponent.packageCreateSucces');\r\n        this.onCreate.emit(res);\r\n        this.closeDialog();\r\n      });\r\n    }\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.loadDropDowns();\r\n  }\r\n\r\n  private loadDropDowns(): void {\r\n    const packageTypes = this.propertiesService.getValue(GenericPropertyConstants.PACKAGE_TYPE_MAP);\r\n\r\n    forkJoin({ packageTypes }).subscribe({\r\n      next: (results) => {\r\n        this.packagesTypesList = results.packageTypes;\r\n        this.choiceList = this.deliveryFolderSearchService.loadCreationChoiceListPackage();\r\n        this.selectedChoice = this.choiceList && this.choiceList.length ? this.choiceList[0].value : '';\r\n      }\r\n    });\r\n  }\r\n\r\n  private validateInputs(): boolean {\r\n    if (this.isGenerated) {\r\n      return !!this.pnUse && !!this.quantity;\r\n    } else {\r\n      return !!this.pnUse && ObjectUtils.isDefined(this.packageNumber) && !!this.quantity;\r\n    }\r\n  }\r\n\r\n  public onSelectPn(pn: BirePnDTO): void {\r\n    this.article = pn.pnCode as string;\r\n    this.pnUse = pn;\r\n  }\r\n\r\n  public openSearchPnDialog(): void {\r\n    this.searchPnDialogVisible = true;\r\n  }\r\n\r\n  public resetChoice(): void {\r\n    this.changeMode();\r\n  }\r\n\r\n  private changeMode(): void {\r\n    switch (this.selectedChoice) {\r\n      case this.component.GENERATE:\r\n        this.isGenerated = true;\r\n        break;\r\n\r\n      case this.component.ENTER:\r\n        this.isGenerated = false;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private loadUnitOfIssueOptions(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.UNIT_OF_ISSUE_MAP).subscribe((results) => {\r\n      this.unitOfIssueOptions = results;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".type\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown class=\\\"aw-dropdown fixed-width\\\" placeholder=\\\"&nbsp;\\\" [showClear]=\\\"true\\\"></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".typeOfItemInDispute\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown\\r\\n            class=\\\"aw-dropdown fixed-width\\\"\\r\\n            placeholder=\\\"&nbsp;\\\"\\r\\n            [showClear]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"litigationItem\\\"\\r\\n          ></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".comment\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <textarea class=\\\"aw-textarea\\\" [rows]=\\\"3\\\" maxlength=\\\"300\\\" pInputTextarea></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".isBlockingLitigation\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-checkbox binary=\\\"true\\\"></p-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".observationDate\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-calendar\\r\\n            showButtonBar=\\\"true\\\"\\r\\n            [monthNavigator]=\\\"true\\\"\\r\\n            [yearNavigator]=\\\"true\\\"\\r\\n            [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n            class=\\\"aw-calendar\\\"\\r\\n            [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n            [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n            appendTo=\\\"body\\\"\\r\\n            disabled\\r\\n          ></p-calendar>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".foundBy\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <input class=\\\"aw-input\\\" type=\\\"text\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".responsibleTreatment\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown class=\\\"aw-dropdown fixed-width\\\" placeholder=\\\"&nbsp;\\\" [showClear]=\\\"true\\\"></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".qualityController\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown class=\\\"aw-dropdown fixed-width\\\" placeholder=\\\"&nbsp;\\\" [showClear]=\\\"true\\\"></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group required\\\">\\r\\n        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".actionPlan\\\" | translate }}</label>\\r\\n\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <p-dropdown class=\\\"aw-dropdown fixed-width\\\" placeholder=\\\"&nbsp;\\\" [showClear]=\\\"true\\\"></p-dropdown>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\"></div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      <span>{{ \\\"global.validate\\\" | translate }}</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbG9naXN0aWNzL2dvb2RzLXJlY2VpcHQvZm9ybS9kaWFsb2ctY3JlYXRlLWxpdGlnYXRpb24vZGlhbG9nLWNyZWF0ZS1saXRpZ2F0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-create-litigation',\r\n  templateUrl: './dialog-create-litigation.component.html',\r\n  styleUrls: ['./dialog-create-litigation.component.scss']\r\n})\r\nexport class DialogCreateLitigationComponent extends DialogComponent implements OnInit {\r\n  public litigationItem: number;\r\n\r\n  public constructor(public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DialogCreateLitigationComponent');\r\n  }\r\n\r\n  public ngOnInit() {\r\n    // TODO\r\n  }\r\n\r\n  public validate() {\r\n    // TODO\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"20\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <textarea class=\\\"aw-textarea\\\" [rows]=\\\"7\\\" [(ngModel)]=\\\"dialogContent\\\" disabled=\\\"true\\\"></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.close\\\" | translate }}</button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\n\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\nimport { BidtDfTypeOperationDTO } from '../../../../../shared/types/api-types/bidt-df-type-operation-dto.interface';\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\n\n@Component({\n  selector: 'aw-dialog-document-categories',\n  templateUrl: './dialog-document-categories.component.html'\n})\nexport class DialogDocumentCategoriesReceiptFolderComponent extends DialogComponent implements OnInit {\n  public dialogContent: string;\n  public numberOfDocs: number;\n  @Input() public bidtDfTypeOperationDTO: BidtDfTypeOperationDTO;\n\n  public constructor(private readonly propertiesService: PropertiesService) {\n    super(ComponentOpenMode.Read, 'DialogDocumentCategoriesReceiptFolderComponent');\n  }\n\n  public ngOnInit(): void {\n    this.numberOfDocs = 1;\n    this.dialogContent = '';\n    this.propertiesService.getValue(GenericPropertyConstants.DOC_ASSET_CATEGORY_MAP).subscribe((docCategorieMap) => {\n      if (this.bidtDfTypeOperationDTO.docCategories && this.bidtDfTypeOperationDTO.docCategories.length > 0) {\n        this.bidtDfTypeOperationDTO.docCategories.forEach((categorieOpe) => {\n          if (this.numberOfDocs === 1) {\n            this.dialogContent = `${this.numberOfDocs}. ${\n              docCategorieMap.filter((categorie) => categorie.value === categorieOpe)[0].label\n            }`;\n            this.numberOfDocs++;\n          } else {\n            this.dialogContent = `${this.dialogContent}\\r\\r${this.numberOfDocs}. ${\n              docCategorieMap.filter((categorie) => categorie.value === categorieOpe)[0].label\n            }`;\n            this.dialogContent = this.dialogContent.replace(/\\r?\\n/g, '</br>');\n            this.numberOfDocs++;\n          }\n        });\n      }\n    });\n  }\n}\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div *ngIf=\\\"!isCreateOpenMode && deliveryFolder.dfCode\\\" class=\\\"page-subtitle\\\">\\r\\n          - {{ deliveryFolder.dfCode }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"object-status\\\" *ngIf=\\\"deliveryFolder.dfStatus\\\" (click)=\\\"showStatus()\\\">\\r\\n      {{ deliveryFolder.dfStatus | formatSelectOption: deliveryFolderStatuses }}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"scanAsset()\\\" *ngIf=\\\"!isDeliveryFolderDraftStatus()\\\">\\r\\n        {{ componentData.componentId + \\\".scanAsset\\\" | translate }}\\r\\n      </button>\\r\\n\\r\\n      <button mat-menu-item (click)=\\\"refresh()\\\">\\r\\n        {{ \\\"global.refresh\\\" | translate }}\\r\\n      </button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          {{ \\\"home\\\" | translate }}\\r\\n        </ng-template>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--6\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ \\\"page.mainData\\\" | translate }}\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"column\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".folderNum\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <div class=\\\"form-control-generic\\\">\\r\\n                            {{ deliveryFolder.dfCode }}\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".type\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <div class=\\\"form-control-generic\\\">\\r\\n                            {{ deliveryFolder.bidtDfType?.dftDesignation | extractTranslation }}\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".control\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <div\\r\\n                            class=\\\"alert alert--nok\\\"\\r\\n                            *ngIf=\\\"\\r\\n                              deliveryFolder.criticality === awPropertiesConstants.LOGISTICAL_CRITICALITY_IMMEDIATE\\r\\n                            \\\"\\r\\n                          >\\r\\n                            {{ componentData.componentId + \\\".immediate\\\" | translate }}\\r\\n                          </div>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"alert alert--warning\\\"\\r\\n                            *ngIf=\\\"deliveryFolder.criticality === awPropertiesConstants.LOGISTICAL_CRITICALITY_URGENT\\\"\\r\\n                          >\\r\\n                            {{ componentData.componentId + \\\".urgent\\\" | translate }}\\r\\n                          </div>\\r\\n\\r\\n                          <div\\r\\n                            class=\\\"alert alert--ok\\\"\\r\\n                            *ngIf=\\\"deliveryFolder.criticality === awPropertiesConstants.LOGISTICAL_CRITICALITY_ROUTINE\\\"\\r\\n                          >\\r\\n                            {{ componentData.componentId + \\\".routine\\\" | translate }}\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".created\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <div class=\\\"form-control-generic\\\">\\r\\n                            {{ deliveryFolder.statusDate | date: \\\"shortDate\\\":\\\"\\\":translateService.currentLang }}\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <h4 class=\\\"section-title\\\">\\r\\n                      {{ \\\"origin\\\" | translate }}\\r\\n                    </h4>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".refDocumentNum\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <div class=\\\"form-control-generic\\\" *ngIf=\\\"!shipmentFolderLinked\\\">\\r\\n                          <a (click)=\\\"openOrder(deliveryFolder.bidtTransferOrder?.id)\\\">{{\\r\\n                            deliveryFolder.bidtTransferOrder?.torCode\\r\\n                          }}</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-control-generic\\\" *ngIf=\\\"shipmentFolderLinked\\\">\\r\\n                          <a (click)=\\\"openShipmentFolder()\\\"> {{ shipmentFolderLinked.dfCode }} </a>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".refDocType\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          *ngIf=\\\"!shipmentFolderLinked && deliveryFolder.bidtTransferOrder\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          disabled\\r\\n                          [ngModel]=\\\"\\r\\n                            toNumber(deliveryFolder.bidtTransferOrder.torType)\\r\\n                              | formatSelectOption: torTypeList\\r\\n                              | extractTranslation\\r\\n                          \\\"\\r\\n                        />\\r\\n                        <div class=\\\"form-control-generic\\\" *ngIf=\\\"shipmentFolderLinked\\\">\\r\\n                          {{ this.shipmentFolderLinkedType }}\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".refStatus\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          *ngIf=\\\"!shipmentFolderLinked && deliveryFolder.bidtTransferOrder\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          disabled\\r\\n                          [ngModel]=\\\"\\r\\n                            deliveryFolder.bidtTransferOrder.torStatus\\r\\n                              | formatSelectOption: transfertOrderStatusMap\\r\\n                              | extractTranslation\\r\\n                          \\\"\\r\\n                        />\\r\\n                        <div class=\\\"form-control-generic\\\" *ngIf=\\\"shipmentFolderLinked\\\">\\r\\n                          {{ shipmentFolderLinked.dfStatus | formatSelectOption: shipmentFolderStatuses }}\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-cell--3\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ getComponentName() + \\\".provider\\\" | translate }}\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content\\\">\\r\\n                <div class=\\\"column\\\">\\r\\n                  <div class=\\\"row\\\" *ngIf=\\\"deliveryFolder.bidoCustomerSender?.customerCode\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".partner\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <div class=\\\"form-control-generic\\\">\\r\\n                          {{ deliveryFolder.bidoCustomerSender?.customerCode }}\\r\\n                          <ng-container *ngIf=\\\"deliveryFolder.bidoCustomerSender?.customerName\\\">\\r\\n                            <span style=\\\"padding: 0 8px\\\">-</span>\\r\\n                            {{ deliveryFolder.bidoCustomerSender?.customerName }}\\r\\n                          </ng-container>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\" *ngIf=\\\"deliveryFolder.bidtSiteSender?.siteCode\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".site\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <div class=\\\"form-control-generic\\\">\\r\\n                          {{ deliveryFolder.bidtSiteSender?.siteCode }}\\r\\n                          <ng-container *ngIf=\\\"deliveryFolder.bidtSiteSender?.siteName\\\">\\r\\n                            <span style=\\\"padding: 0 8px\\\">-</span>\\r\\n                            {{ deliveryFolder.bidtSiteSender?.siteName }}\\r\\n                          </ng-container>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\" *ngIf=\\\"deliveryFolder.bidtWarehouseSender?.whCode\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".shop\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <div class=\\\"form-control-generic\\\">\\r\\n                          {{ deliveryFolder.bidtWarehouseSender?.whCode }}\\r\\n                          <ng-container *ngIf=\\\"deliveryFolder.bidtWarehouseSender?.whName\\\">\\r\\n                            <span style=\\\"padding: 0 8px\\\">-</span>\\r\\n                            {{ deliveryFolder.bidtWarehouseSender?.whName }}\\r\\n                          </ng-container>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div #receipentAnchor class=\\\"grid-cell--3\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ getComponentName() + \\\".recipient\\\" | translate }}\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content\\\">\\r\\n                <div class=\\\"column\\\">\\r\\n                  <div class=\\\"row\\\" *ngIf=\\\"deliveryFolder.bidoCustomerReceiver?.customerCode\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".partner\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <div class=\\\"form-control-generic\\\">\\r\\n                          {{ deliveryFolder.bidoCustomerReceiver?.customerCode }}\\r\\n                          <ng-container *ngIf=\\\"deliveryFolder.bidoCustomerReceiver?.customerName\\\">\\r\\n                            <span style=\\\"padding: 0 8px\\\">-</span>\\r\\n                            {{ deliveryFolder.bidoCustomerReceiver?.customerName }}\\r\\n                          </ng-container>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\" *ngIf=\\\"deliveryFolder.bidtSiteReceiver?.siteCode\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".site\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <div class=\\\"form-control-generic\\\">\\r\\n                          {{ deliveryFolder.bidtSiteReceiver?.siteCode }}\\r\\n                          <ng-container *ngIf=\\\"deliveryFolder.bidtSiteReceiver?.siteName\\\">\\r\\n                            <span style=\\\"padding: 0 8px\\\">-</span>\\r\\n                            {{ deliveryFolder.bidtSiteReceiver?.siteName }}\\r\\n                          </ng-container>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\" *ngIf=\\\"deliveryFolder.bidtWarehouseReceiver?.whCode\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".shop\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <div class=\\\"form-control-generic\\\">\\r\\n                          {{ deliveryFolder.bidtWarehouseReceiver?.whCode }}\\r\\n                          <ng-container *ngIf=\\\"deliveryFolder.bidtWarehouseReceiver?.whName\\\">\\r\\n                            <span style=\\\"padding: 0 8px\\\">-</span>\\r\\n                            {{ deliveryFolder.bidtWarehouseReceiver?.whName }}\\r\\n                          </ng-container>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".expectedDate\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <div class=\\\"form-control-generic\\\">\\r\\n                          {{ deliveryFolder.plannedDate | date: \\\"shortDate\\\":\\\"\\\":translateService.currentLang }}\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div #parcelAnchor class=\\\"grid-cell--12\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".parcel\\\" | translate }} ({{\\r\\n                      parcelTableData ? parcelTableData.length : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div class=\\\"section-content\\\">\\r\\n                    <!-- Counter ROW -->\\r\\n                    <!-- <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".expected\\\" | translate }}</label>\\r\\n                          <span> {{ pExpected }} </span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".received\\\" | translate }}</label>\\r\\n                          <span> {{ pReceived }} </span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".accepted\\\" | translate }}</label>\\r\\n                          <span> {{ pAccepted }} </span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".inDispute\\\" | translate }}</label>\\r\\n                          <span> {{ pDispute }} </span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>-->\\r\\n\\r\\n                    <!-- Table -->\\r\\n                    <p-table\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                      #ptableParcels\\r\\n                      class=\\\"aw-table2\\\"\\r\\n                      [columns]=\\\"parcelTableCols\\\"\\r\\n                      [value]=\\\"parcelTableData\\\"\\r\\n                      [(selection)]=\\\"selectedParcels\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                        <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                        <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                          <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                          <div class=\\\"lds-hourglass\\\"></div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"caption\\\">\\r\\n                        <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedParcels.length > 0 }\\\">\\r\\n                          <div class=\\\"aw-table-global-filter\\\">\\r\\n                            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </label>\\r\\n\\r\\n                            <input\\r\\n                              #ptableMeasuresGlobalFilter\\r\\n                              class=\\\"aw-table-global-filter-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                              (input)=\\\"ptableParcels.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                          <div class=\\\"aw-table-actions\\\">\\r\\n                            <button\\r\\n                              *ngIf=\\\"\\r\\n                                selectedParcels.length > 0 &&\\r\\n                                isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                                !isDeliveryFolderPerformedStatus()\\r\\n                              \\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              color=\\\"warn\\\"\\r\\n                              (click)=\\\"deleteReceiptPackage()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.delete\\\" | translate }}\\r\\n                            </button>\\r\\n                            <button\\r\\n                              *ngIf=\\\"\\r\\n                                selectedParcels.length === 0 &&\\r\\n                                isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                                !isDeliveryFolderPerformedStatus()\\r\\n                              \\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"addPackageDialog()\\\"\\r\\n                            >\\r\\n                              {{ componentData.componentId + \\\".addPackage\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"selectedParcels.length > 0 && isUserCanAddHaveRightOnDeliveryFolder()\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"openSelectedGoods()\\\"\\r\\n                            >\\r\\n                              {{ componentData.componentId + \\\".createLitigation\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"\\r\\n                                selectedParcels.length > 0 &&\\r\\n                                isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                                !isDeliveryFolderPerformedStatus()\\r\\n                              \\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"validateOperations()\\\"\\r\\n                            >\\r\\n                              {{ componentData.componentId + \\\".validateOperations\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <div class=\\\"aw-table-icon-actions\\\">\\r\\n                              <i\\r\\n                                class=\\\"fa fa-fw fa-filter aw-icon aw-icon-with-border aw-icon-with-overlay\\\"\\r\\n                                aria-hidden=\\\"true\\\"\\r\\n                                tooltipPosition=\\\"top\\\"\\r\\n                              ></i>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                        <colgroup>\\r\\n                          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                          </th>\\r\\n                          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                            <div *ngIf=\\\"col.isDynamic\\\">\\r\\n                              {{ col.value }}\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!col.isDynamic\\\">\\r\\n                              {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                            </div>\\r\\n                          </th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                          </td>\\r\\n                          <td\\r\\n                            *ngFor=\\\"let col of columns\\\"\\r\\n                            [ngSwitch]=\\\"col.field\\\"\\r\\n                            [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                          >\\r\\n                            <span *ngSwitchCase=\\\"'packageNum'\\\">\\r\\n                              {{ rowData[\\\"packageCode\\\"] }}\\r\\n                            </span>\\r\\n\\r\\n                            <span *ngSwitchCase=\\\"'status'\\\">\\r\\n                              {{ rowData[\\\"packageStatus\\\"] }}\\r\\n                            </span>\\r\\n\\r\\n                            <span *ngSwitchCase=\\\"'progress'\\\">\\r\\n                              <p-progressBar\\r\\n                                [ngClass]=\\\"{ green: rowData[col.field] === component.PROGRESS_MAX }\\\"\\r\\n                                [value]=\\\"rowData[col.field]\\\"\\r\\n                              ></p-progressBar>\\r\\n                            </span>\\r\\n\\r\\n                            <span *ngSwitchCase=\\\"awPropertiesConstants.LOGISTICAL_OPERATION_PHYSICAL_RECEIPT\\\">\\r\\n                              <p-checkbox\\r\\n                                *ngIf=\\\"\\r\\n                                  !isDeliveryFolderDraftStatus() &&\\r\\n                                  isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                                  rowData['isGoodStatus']\\r\\n                                \\\"\\r\\n                                [(ngModel)]=\\\"rowData['received']\\\"\\r\\n                                (onChange)=\\\"onChangeReceivedAndCompliance(rowData, col.field)\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [disabled]=\\\"rowData['isDisable']\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </span>\\r\\n\\r\\n                            <span *ngSwitchCase=\\\"awPropertiesConstants.LOGISTICAL_OPERATION_PACKAGING_CONTROL\\\">\\r\\n                              <p-checkbox\\r\\n                                *ngIf=\\\"!isDeliveryFolderDraftStatus() && isUserCanAddHaveRightOnDeliveryFolder()\\\"\\r\\n                                [(ngModel)]=\\\"rowData['packagingCtrl']\\\"\\r\\n                                (onChange)=\\\"onChangeReceivedAndCompliance(rowData)\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [disabled]=\\\"rowData['isDisable']\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </span>\\r\\n\\r\\n                            <span *ngSwitchDefault>\\r\\n                              {{ rowData[col.field] }}\\r\\n                            </span>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          {{ componentData.componentId + \\\".posts\\\" | translate }}\\r\\n        </ng-template>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div #postsAnchor class=\\\"grid-cell--12\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".posts\\\" | translate }} ({{\\r\\n                      postsTableData ? postsTableData.length : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div class=\\\"section-content\\\">\\r\\n                    <!-- Counter ROW -->\\r\\n                    <!-- <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".planned\\\" | translate }}</label>\\r\\n                          <span> {{ iPlanned }} </span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".inProgress\\\" | translate }}</label>\\r\\n                          <span> {{ iProgress }} </span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".released\\\" | translate }}</label>\\r\\n                          <span> {{ iReleased }} </span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".inDispute\\\" | translate }}</label>\\r\\n                          <span> {{ iDispute }} </span>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>-->\\r\\n                    <p-table\\r\\n                      [resizableColumns]=\\\"true\\\"\\r\\n                      #ptablePosts\\r\\n                      class=\\\"aw-table2\\\"\\r\\n                      [columns]=\\\"postsTableCols\\\"\\r\\n                      [value]=\\\"postsTableData\\\"\\r\\n                      [(selection)]=\\\"selectedPost\\\"\\r\\n                      [scrollable]=\\\"true\\\"\\r\\n                      [paginator]=\\\"false\\\"\\r\\n                    >\\r\\n                      <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                        <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                        <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                          <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                          <div class=\\\"lds-hourglass\\\"></div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"caption\\\">\\r\\n                        <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': isEmpty(selectedPost) > 0 }\\\">\\r\\n                          <div class=\\\"aw-table-global-filter\\\">\\r\\n                            <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                              <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </label>\\r\\n\\r\\n                            <input\\r\\n                              #ptableMeasuresGlobalFilter\\r\\n                              class=\\\"aw-table-global-filter-input\\\"\\r\\n                              type=\\\"text\\\"\\r\\n                              placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                              (input)=\\\"ptablePosts.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                          <div class=\\\"aw-table-actions\\\">\\r\\n                            <button\\r\\n                              *ngIf=\\\"\\r\\n                                selectedPost.length > 0 &&\\r\\n                                isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                                !isDeliveryFolderPerformedStatus()\\r\\n                              \\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              color=\\\"warn\\\"\\r\\n                              (click)=\\\"deleteReceiptItem()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.delete\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <button\\r\\n                              *ngIf=\\\"\\r\\n                                selectedPost.length === 0 &&\\r\\n                                isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                                !isDeliveryFolderPerformedStatus()\\r\\n                              \\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"addItemDialog()\\\"\\r\\n                            >\\r\\n                              {{ componentData.componentId + \\\".addItem\\\" | translate }}\\r\\n                            </button>\\r\\n\\r\\n                            <!--    <button\\r\\n                              *ngIf=\\\"!!selectedPost && isEmpty(selectedPost) > 0\\\"\\r\\n                              type=\\\"button\\\"\\r\\n                              mat-raised-button\\r\\n                              (click)=\\\"openSelectedPost()\\\"\\r\\n                            >\\r\\n                              {{ \\\"global.open\\\" | translate }}\\r\\n                            </button>-->\\r\\n\\r\\n                            <div class=\\\"aw-table-icon-actions\\\">\\r\\n                              <i\\r\\n                                class=\\\"fa fa-fw fa-filter aw-icon aw-icon-with-border aw-icon-with-overlay\\\"\\r\\n                                aria-hidden=\\\"true\\\"\\r\\n                                tooltipPosition=\\\"top\\\"\\r\\n                              ></i>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                        <colgroup>\\r\\n                          <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                          <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                        </colgroup>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                        <tr>\\r\\n                          <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                          </th>\\r\\n                          <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                            <div *ngIf=\\\"col.isDynamic\\\">\\r\\n                              {{ col.value }}\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!col.isDynamic\\\">\\r\\n                              {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                            </div>\\r\\n                          </th>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                          <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                            <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                          </td>\\r\\n                          <td\\r\\n                            *ngFor=\\\"let col of columns\\\"\\r\\n                            [ngSwitch]=\\\"col.field\\\"\\r\\n                            [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                          >\\r\\n                            <span *ngSwitchCase=\\\"'refeArticle'\\\">\\r\\n                              <div>\\r\\n                                <a (click)=\\\"openPartNumberLink(rowData)\\\">{{ rowData[\\\"birePnPnCode\\\"] }}</a>\\r\\n                              </div>\\r\\n                              <div>\\r\\n                                <i>{{ rowData[\\\"articleDesignation\\\"] }}</i>\\r\\n                              </div>\\r\\n                            </span>\\r\\n\\r\\n                            <span *ngSwitchCase=\\\"'quantity'\\\">\\r\\n                              <span>\\r\\n                                {{ rowData[col.field] | formatNumber }}\\r\\n                              </span>\\r\\n                            </span>\\r\\n\\r\\n                            <span *ngSwitchCase=\\\"awPropertiesConstants.LOGISTICAL_OPERATION_QUALITY_CONTROL\\\">\\r\\n                              <p-checkbox\\r\\n                                *ngIf=\\\"\\r\\n                                  !isDeliveryFolderDraftStatus() ||\\r\\n                                  (rowData['isHide'] && isUserCanAddHaveRightOnDeliveryFolder())\\r\\n                                \\\"\\r\\n                                [(ngModel)]=\\\"rowData['controlQuantity']\\\"\\r\\n                                (onChange)=\\\"onChangeItemControl(rowData, col.field)\\\"\\r\\n                                binary=\\\"true\\\"\\r\\n                                [disabled]=\\\"rowData['isDisable']\\\"\\r\\n                              ></p-checkbox>\\r\\n                            </span>\\r\\n                            <span *ngSwitchCase=\\\"'progress'\\\">\\r\\n                              <p-progressBar\\r\\n                                [ngClass]=\\\"{ green: rowData[col.field] === component.PROGRESS_MAX }\\\"\\r\\n                                [value]=\\\"rowData[col.field]\\\"\\r\\n                              ></p-progressBar>\\r\\n                            </span>\\r\\n                            <span *ngSwitchDefault>\\r\\n                              {{ rowData[col.field] }}\\r\\n                            </span>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </ng-template>\\r\\n                    </p-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          {{ getComponentName() + \\\".materials\\\" | translate }}\\r\\n        </ng-template>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div #materialsAnchor class=\\\"grid-cell--12\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container \\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ getComponentName() + \\\".materials\\\" | translate }} ({{\\r\\n                      materialTableData ? materialTableData.length : 0\\r\\n                    }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content\\\">\\r\\n                <!-- Counter ROW -->\\r\\n                <!-- <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".expected\\\" | translate }}</label>\\r\\n                      <span> {{ mExpected }} </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".receptionOK\\\" | translate }}</label>\\r\\n                      <span> {{ mOK }} </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".inDispute\\\" | translate }}</label>\\r\\n                      <span> {{ mDispute }} </span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\"></div>\\r\\n                </div>-->\\r\\n\\r\\n                <!-- MATERIAL TABLE -->\\r\\n                <p-table\\r\\n                  [resizableColumns]=\\\"true\\\"\\r\\n                  #ptableMaterials\\r\\n                  class=\\\"aw-table2\\\"\\r\\n                  [columns]=\\\"materialTableCols\\\"\\r\\n                  [value]=\\\"materialTableData\\\"\\r\\n                  [(selection)]=\\\"selectedMaterials\\\"\\r\\n                  [scrollable]=\\\"true\\\"\\r\\n                >\\r\\n                  <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                    <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                    <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                      <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                      <div class=\\\"lds-hourglass\\\"></div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"caption\\\">\\r\\n                    <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedMaterials.length > 0 }\\\">\\r\\n                      <div class=\\\"aw-table-global-filter\\\">\\r\\n                        <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                          <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </label>\\r\\n\\r\\n                        <input\\r\\n                          #ptableMeasuresGlobalFilter\\r\\n                          class=\\\"aw-table-global-filter-input\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                          (input)=\\\"ptableMaterials.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                      <div class=\\\"aw-table-actions\\\">\\r\\n                        <button\\r\\n                          *ngIf=\\\"\\r\\n                            selectedMaterials.length > 0 &&\\r\\n                            isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                            !isDeliveryFolderPerformedStatus()\\r\\n                          \\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteReceiptMaterial()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"\\r\\n                            selectedMaterials.length === 0 &&\\r\\n                            isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                            !isDeliveryFolderPerformedStatus()\\r\\n                          \\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"addMaterialDialog()\\\"\\r\\n                        >\\r\\n                          {{ componentData.componentId + \\\".addMaterial\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"\\r\\n                            selectedMaterials.length > 0 &&\\r\\n                            isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                            !isDeliveryFolderPerformedStatus()\\r\\n                          \\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"openLitigationDialog()\\\"\\r\\n                        >\\r\\n                          {{ componentData.componentId + \\\".createLitigation\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"\\r\\n                            selectedMaterials.length > 0 &&\\r\\n                            isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                            !isDeliveryFolderPerformedStatus()\\r\\n                          \\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"validateMaterialOperations()\\\"\\r\\n                        >\\r\\n                          {{ componentData.componentId + \\\".validateOperations\\\" | translate }}\\r\\n                        </button>\\r\\n                        <button\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          *ngIf=\\\"isNextMvtContainStockPilling\\\"\\r\\n                          (click)=\\\"toStockpilling()\\\"\\r\\n                        >\\r\\n                          {{ getComponentName() + \\\".stockpilling\\\" | translate }}\\r\\n                        </button>\\r\\n                        <button\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          *ngIf=\\\"isNextMvtContainCrossDocking\\\"\\r\\n                          (click)=\\\"toCrossDocking()\\\"\\r\\n                        >\\r\\n                          {{ getComponentName() + \\\".crossDocking\\\" | translate }}\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                    <colgroup>\\r\\n                      <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                      <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                    </colgroup>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                    <tr>\\r\\n                      <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                      </th>\\r\\n                      <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                        <div *ngIf=\\\"col.isDynamic\\\">\\r\\n                          {{ col.value }}\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!col.isDynamic\\\">\\r\\n                          {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                        </div>\\r\\n                      </th>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n\\r\\n                  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                    <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                      <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                        <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                      </td>\\r\\n                      <td\\r\\n                        *ngFor=\\\"let col of columns\\\"\\r\\n                        [ngSwitch]=\\\"col.field\\\"\\r\\n                        [ngStyle]=\\\"{ 'text-align': col.alignment }\\\"\\r\\n                      >\\r\\n                        <span *ngSwitchCase=\\\"'refeArticle'\\\">\\r\\n                          <div>\\r\\n                            <a (click)=\\\"openPartNumberLink(rowData['item'])\\\">{{ rowData[\\\"pnCode\\\"] }}</a>\\r\\n                          </div>\\r\\n                          <div>\\r\\n                            <span>{{ rowData[\\\"pnDesignation\\\"] }}</span>\\r\\n                          </div>\\r\\n                        </span>\\r\\n                        <span *ngSwitchCase=\\\"'batchNumber'\\\">\\r\\n                          <div *ngIf=\\\"rowData['batchNumber']\\\">\\r\\n                            <a (click)=\\\"openLink(rowData['bidoEquipment'])\\\">{{ rowData[\\\"batchNumber\\\"] }} </a>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"rowData['batchNumber']\\\">\\r\\n                            <span>{{ rowData[\\\"equipmentStatus\\\"] }} </span>\\r\\n                          </div>\\r\\n                        </span>\\r\\n                        <span *ngSwitchCase=\\\"'sn'\\\">\\r\\n                          <div *ngIf=\\\"rowData['bidoEquipment']\\\">\\r\\n                            <a (click)=\\\"openLinkEquipment(rowData['bidoEquipment'].equipmentCode)\\\"\\r\\n                              >{{ rowData[\\\"bidoEquipment\\\"].sn }}\\r\\n                            </a>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"rowData['bidoEquipment'] && !rowData['batchNumber']\\\">\\r\\n                            <span>{{ rowData[\\\"equipmentStatus\\\"] }} </span>\\r\\n                          </div>\\r\\n                        </span>\\r\\n\\r\\n                        <span *ngSwitchCase=\\\"'manufacturingBatch'\\\">\\r\\n                          <div *ngIf=\\\"rowData['manufacturingBatch']\\\">\\r\\n                            <a (click)=\\\"openMfgBatch(rowData['manufacturingBatch'].equipmentCode)\\\"\\r\\n                              >{{ rowData[\\\"manufacturingBatch\\\"].batchNumber }}\\r\\n                            </a>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"rowData['manufacturingBatch'] && !rowData['batchNumber']\\\">\\r\\n                            <span>{{ rowData[\\\"equipmentStatus\\\"] }} </span>\\r\\n                          </div>\\r\\n                        </span>\\r\\n                        <span *ngSwitchCase=\\\"'expirationDate'\\\">\\r\\n                          {{ rowData[\\\"expirationDate\\\"] | date: \\\"yyyy/MM/dd\\\":\\\"\\\":translateService.currentLang }}\\r\\n                        </span>\\r\\n\\r\\n                        <span *ngSwitchCase=\\\"'qty'\\\">\\r\\n                          {{ rowData[\\\"quantity\\\"] | formatNumber }}\\r\\n                        </span>\\r\\n                        <span *ngSwitchCase=\\\"'packageNum'\\\">\\r\\n                          <div *ngIf=\\\"rowData.isContener\\\">\\r\\n                            <a>{{ rowData[col.field] }}</a>\\r\\n                          </div>\\r\\n                          <div *ngIf=\\\"rowData.isContener\\\">\\r\\n                            <span> {{ rowData[\\\"bidtpackageStatus\\\"] }}</span>\\r\\n                          </div>\\r\\n\\r\\n                          <div *ngIf=\\\"!rowData.isContener\\\">{{ rowData[col.field] }}</div>\\r\\n                        </span>\\r\\n                        <span *ngSwitchCase=\\\"awPropertiesConstants.LOGISTICAL_OPERATION_DOCUMENT_CONTROL\\\">\\r\\n                          <div>\\r\\n                            <p-checkbox\\r\\n                              *ngIf=\\\"\\r\\n                                !isDeliveryFolderDraftStatus() &&\\r\\n                                !rowData['isDisable'] &&\\r\\n                                isUserCanAddHaveRightOnDeliveryFolder()\\r\\n                              \\\"\\r\\n                              [(ngModel)]=\\\"rowData['documentary']\\\"\\r\\n                              (onChange)=\\\"onChangeMaterialControl(rowData, col.field)\\\"\\r\\n                              binary=\\\"true\\\"\\r\\n                            ></p-checkbox>\\r\\n                            <i\\r\\n                              *ngIf=\\\"\\r\\n                                !isDeliveryFolderDraftStatus() &&\\r\\n                                !rowData['isDisable'] &&\\r\\n                                isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                                rowData['_operationDocumentary'].bidtDfTypeOperation &&\\r\\n                                rowData['_operationDocumentary'].bidtDfTypeOperation.docCategories\\r\\n                              \\\"\\r\\n                              (click)=\\\"openDocumentDialog(rowData['_operationDocumentary'].bidtDfTypeOperation)\\\"\\r\\n                              class=\\\"fa fa-book icon\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                            ></i>\\r\\n                          </div>\\r\\n                        </span>\\r\\n                        <span *ngSwitchCase=\\\"awPropertiesConstants.LOGISTICAL_OPERATION_VISUAL_CONTROL\\\">\\r\\n                          <div>\\r\\n                            <p-checkbox\\r\\n                              *ngIf=\\\"\\r\\n                                !isDeliveryFolderDraftStatus() &&\\r\\n                                !rowData['isDisable'] &&\\r\\n                                isUserCanAddHaveRightOnDeliveryFolder()\\r\\n                              \\\"\\r\\n                              [(ngModel)]=\\\"rowData['visual']\\\"\\r\\n                              (onChange)=\\\"onChangeMaterialControl(rowData, col.field)\\\"\\r\\n                              binary=\\\"true\\\"\\r\\n                            ></p-checkbox>\\r\\n                            <i\\r\\n                              *ngIf=\\\"\\r\\n                                !isDeliveryFolderDraftStatus() &&\\r\\n                                !rowData['isDisable'] &&\\r\\n                                isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                                rowData['_operationVisual'].bidtDfTypeOperation &&\\r\\n                                rowData['_operationVisual'].bidtDfTypeOperation.docCategories\\r\\n                              \\\"\\r\\n                              (click)=\\\"openDocumentDialog(rowData['_operationVisual'].bidtDfTypeOperation)\\\"\\r\\n                              class=\\\"fa fa-book icon\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                            ></i>\\r\\n                          </div>\\r\\n                        </span>\\r\\n                        <span *ngSwitchCase=\\\"awPropertiesConstants.LOGISTICAL_OPERATION_PHYSICAL_RECEIPT\\\">\\r\\n                          <div>\\r\\n                            <p-checkbox\\r\\n                              *ngIf=\\\"\\r\\n                                !isDeliveryFolderDraftStatus() &&\\r\\n                                !rowData['isDisable'] &&\\r\\n                                isUserCanAddHaveRightOnDeliveryFolder()\\r\\n                              \\\"\\r\\n                              [(ngModel)]=\\\"rowData['physical']\\\"\\r\\n                              (onChange)=\\\"onChangeMaterialControl(rowData, col.field)\\\"\\r\\n                              binary=\\\"true\\\"\\r\\n                            ></p-checkbox>\\r\\n                            <i\\r\\n                              *ngIf=\\\"\\r\\n                                !isDeliveryFolderDraftStatus() &&\\r\\n                                !rowData['isDisable'] &&\\r\\n                                isUserCanAddHaveRightOnDeliveryFolder() &&\\r\\n                                rowData['_operationPhysical'].bidtDfTypeOperation &&\\r\\n                                rowData['_operationPhysical'].bidtDfTypeOperation.docCategories\\r\\n                              \\\"\\r\\n                              (click)=\\\"openDocumentDialog(rowData['_operationPhysical'].bidtDfTypeOperation)\\\"\\r\\n                              class=\\\"fa fa-book icon\\\"\\r\\n                              aria-hidden=\\\"true\\\"\\r\\n                            ></i>\\r\\n                          </div>\\r\\n                        </span>\\r\\n                        <span *ngSwitchCase=\\\"'progress'\\\">\\r\\n                          <p-progressBar\\r\\n                            [ngClass]=\\\"{ green: rowData[col.field] === component.PROGRESS_MAX }\\\"\\r\\n                            [value]=\\\"rowData[col.field]\\\"\\r\\n                          ></p-progressBar>\\r\\n                        </span>\\r\\n                        <span *ngSwitchDefault>\\r\\n                          {{ rowData[col.field] }}\\r\\n                        </span>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-template>\\r\\n                </p-table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n          {{ componentData.componentId + \\\".documents\\\" | translate }}\\r\\n        </ng-template>\\r\\n\\r\\n        <div class=\\\"grid-row\\\">\\r\\n          <div class=\\\"grid-cell--12\\\">\\r\\n            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n              <div class=\\\"grid-cell-header\\\">\\r\\n                <div class=\\\"grid-cell-title-container\\\">\\r\\n                  <h3 class=\\\"grid-cell-title\\\">\\r\\n                    {{ componentData.componentId + \\\".documents\\\" | translate }} ({{ documentTableDataSource.dataCount }})\\r\\n                  </h3>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                <div class=\\\"section\\\">\\r\\n                  <div class=\\\"section-content\\\">\\r\\n                    <a-table [dataSource]=\\\"documentTableDataSource\\\">\\r\\n                      <ng-template tableActionsDef>\\r\\n                        <p-fileUpload\\r\\n                          #fileUploader\\r\\n                          auto=\\\"true\\\"\\r\\n                          chooseLabel=\\\"{{ 'global.upload' | translate }}\\\"\\r\\n                          customUpload=\\\"true\\\"\\r\\n                          mode=\\\"basic\\\"\\r\\n                          name=\\\"document[]\\\"\\r\\n                          (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                          *ngIf=\\\"!documentTableDataSource.hasDataSelection && isUserCanAddHaveRightOnDeliveryFolder()\\\"\\r\\n                        >\\r\\n                        </p-fileUpload>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"documentTableDataSource.hasDataSelection && isUserCanAddHaveRightOnDeliveryFolder()\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          (click)=\\\"downloadFiles()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.download\\\" | translate }}\\r\\n                        </button>\\r\\n\\r\\n                        <button\\r\\n                          *ngIf=\\\"documentTableDataSource.hasDataSelection && isUserCanAddHaveRightOnDeliveryFolder()\\\"\\r\\n                          type=\\\"button\\\"\\r\\n                          mat-raised-button\\r\\n                          color=\\\"warn\\\"\\r\\n                          (click)=\\\"deleteDocuments()\\\"\\r\\n                        >\\r\\n                          {{ \\\"global.delete\\\" | translate }}\\r\\n                        </button>\\r\\n                      </ng-template>\\r\\n\\r\\n                      <ng-template columnDef=\\\"documentPublicationDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                        {{ rowData[\\\"documentPublicationDate\\\"] | date: \\\"shortDate\\\":\\\"\\\":translateService.currentLang }}\\r\\n                      </ng-template>\\r\\n                    </a-table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<aw-dialog-create-litigation *ngIf=\\\"showLitigation\\\" [(display)]=\\\"showLitigation\\\"></aw-dialog-create-litigation>\\r\\n<aw-dialog-add-package\\r\\n  [bidtDeliveryFolder]=\\\"deliveryFolder\\\"\\r\\n  *ngIf=\\\"openAddPackageDialog\\\"\\r\\n  [(display)]=\\\"openAddPackageDialog\\\"\\r\\n  (onCreate)=\\\"onCreatePackage($event)\\\"\\r\\n></aw-dialog-add-package>\\r\\n<aw-dialog-add-item\\r\\n  *ngIf=\\\"openAddItemDialog\\\"\\r\\n  [(display)]=\\\"openAddItemDialog\\\"\\r\\n  [deliveryFolder]=\\\"deliveryFolder\\\"\\r\\n  [packageDtoList]=\\\"packageList\\\"\\r\\n  (onCreate)=\\\"onCreateItem($event)\\\"\\r\\n></aw-dialog-add-item>\\r\\n<aw-dialog-add-material\\r\\n  *ngIf=\\\"openAddMaterialDialog\\\"\\r\\n  [(display)]=\\\"openAddMaterialDialog\\\"\\r\\n  [bidtDeliveryFolder]=\\\"deliveryFolder\\\"\\r\\n  [itemsDtoList]=\\\"itemsList\\\"\\r\\n  [packageDtoList]=\\\"packageList\\\"\\r\\n  (onCreate)=\\\"onCreateMaterial($event)\\\"\\r\\n></aw-dialog-add-material>\\r\\n<aw-dialog-document-categories\\r\\n  *ngIf=\\\"openDocumentCategorieDialog\\\"\\r\\n  [(display)]=\\\"openDocumentCategorieDialog\\\"\\r\\n  [bidtDfTypeOperationDTO]=\\\"selectedOperation\\\"\\r\\n></aw-dialog-document-categories>\\r\\n\\r\\n<aw-goods-receipt-scan-asset\\r\\n  [(display)]=\\\"assetScanDialogVisible\\\"\\r\\n  (onValidate)=\\\"onScanAssetBatchNumber($event)\\\"\\r\\n  [keepDialogOpened]=\\\"true\\\"\\r\\n  *ngIf=\\\"assetScanDialogVisible\\\"\\r\\n></aw-goods-receipt-scan-asset>\\r\\n\"","module.exports = \":host .alert {\\n  display: inline-block;\\n  text-transform: none !important;\\n  font-weight: 600;\\n  width: 8em;\\n  text-align: center; }\\n  :host .alert.alert--ok {\\n    background-color: #4caf50; }\\n  :host .alert.alert--warning {\\n    background-color: #ffc107; }\\n  :host .alert.alert--nok {\\n    background-color: #f6685e; }\\n  :host .alert.alert--none {\\n    background-color: #c8d4d6; }\\n  :host .custom-width {\\n  width: 50%; }\\n  :host .padding-class {\\n  padding-left: 0.5em; }\\n  :host .label-class {\\n  padding-right: 0.5em;\\n  display: inline-block;\\n  width: 2.5em; }\\n  :host .span-label {\\n  color: #007ad9; }\\n  :host .custom-div {\\n  padding-left: 1.2em; }\\n  :host .custom-anchor {\\n  padding: 0.7em 0; }\\n  :host .custom-control {\\n  padding-top: 0.4em; }\\n  :host ::ng-deep .green .ui-progressbar .ui-progressbar-value {\\n  border: 0 none;\\n  margin: 0;\\n  background: #4caf50 !important; }\\n  :host .icon {\\n  margin-left: 8px;\\n  cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvZ29vZHMtcmVjZWlwdC9mb3JtL0Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZnJvbnRlbmRfYWVyb3dlYmIvc3JjXFxhcHBcXG1haW5cXGxvZ2lzdGljc1xcZ29vZHMtcmVjZWlwdFxcZm9ybVxcZ29vZHMtcmVjZWlwdC1mb3JtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tYWluL2xvZ2lzdGljcy9nb29kcy1yZWNlaXB0L2Zvcm0vRDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxmcm9udGVuZF9hZXJvd2ViYi9zcmNcXHN0eWxlc1xcX2NvbnN0YW50cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBRUkscUJBQXFCO0VBQ3JCLCtCQUErQjtFQUMvQixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLGtCQUFrQixFQUFBO0VBTnRCO0lBU00seUJDU2dCLEVBQUE7RURsQnRCO0lBYU0seUJDTVUsRUFBQTtFRG5CaEI7SUFpQk0seUJDSWMsRUFBQTtFRHJCcEI7SUFxQk0seUJDR1MsRUFBQTtFRHhCZjtFQTBCSSxVQUFVLEVBQUE7RUExQmQ7RUE4QkksbUJBQW1CLEVBQUE7RUE5QnZCO0VBa0NJLG9CQUFvQjtFQUNwQixxQkFBcUI7RUFDckIsWUFBWSxFQUFBO0VBcENoQjtFQXdDSSxjQUFjLEVBQUE7RUF4Q2xCO0VBNENJLG1CQUFtQixFQUFBO0VBNUN2QjtFQWdESSxnQkFBZ0IsRUFBQTtFQWhEcEI7RUFvREksa0JBQWtCLEVBQUE7RUFwRHRCO0VBMERRLGNBQWM7RUFDZCxTQUFTO0VBQ1QsOEJBQW9DLEVBQUE7RUE1RDVDO0VBa0VJLGdCQUFnQjtFQUNoQixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2xvZ2lzdGljcy9nb29kcy1yZWNlaXB0L2Zvcm0vZ29vZHMtcmVjZWlwdC1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcImNvbnN0YW50c1wiO1xyXG5AaW1wb3J0IFwibWl4aW5zXCI7XHJcblxyXG46aG9zdCB7XHJcbiAgLmFsZXJ0IHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHRleHQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgd2lkdGg6IDhlbTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAmLmFsZXJ0LS1vayB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmVlbi1saWdodDE7XHJcbiAgICB9XHJcblxyXG4gICAgJi5hbGVydC0td2FybmluZyB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRvcmFuZ2U7XHJcbiAgICB9XHJcblxyXG4gICAgJi5hbGVydC0tbm9rIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHJlZC1saWdodDE7XHJcbiAgICB9XHJcblxyXG4gICAgJi5hbGVydC0tbm9uZSB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmV5MTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5jdXN0b20td2lkdGgge1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICB9XHJcblxyXG4gIC5wYWRkaW5nLWNsYXNzIHtcclxuICAgIHBhZGRpbmctbGVmdDogMC41ZW07XHJcbiAgfVxyXG5cclxuICAubGFiZWwtY2xhc3Mge1xyXG4gICAgcGFkZGluZy1yaWdodDogMC41ZW07XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMi41ZW07XHJcbiAgfVxyXG5cclxuICAuc3Bhbi1sYWJlbCB7XHJcbiAgICBjb2xvcjogIzAwN2FkOTtcclxuICB9XHJcblxyXG4gIC5jdXN0b20tZGl2IHtcclxuICAgIHBhZGRpbmctbGVmdDogMS4yZW07XHJcbiAgfVxyXG5cclxuICAuY3VzdG9tLWFuY2hvciB7XHJcbiAgICBwYWRkaW5nOiAwLjdlbSAwO1xyXG4gIH1cclxuXHJcbiAgLmN1c3RvbS1jb250cm9sIHtcclxuICAgIHBhZGRpbmctdG9wOiAwLjRlbTtcclxuICB9XHJcblxyXG4gIDo6bmctZGVlcCAuZ3JlZW4ge1xyXG4gICAgLnVpLXByb2dyZXNzYmFyIHtcclxuICAgICAgLnVpLXByb2dyZXNzYmFyLXZhbHVlIHtcclxuICAgICAgICBib3JkZXI6IDAgbm9uZTtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJGdyZWVuLWxpZ2h0MSAhaW1wb3J0YW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuaWNvbiB7XHJcbiAgICBtYXJnaW4tbGVmdDogOHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxufVxyXG4iLCIkcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4kc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XHJcbiRwcmltYXJ5LXRleHQtY29sb3I6ICMwMDA7XHJcbiRzZWNvbmRhcnktdGV4dC1jb2xvcjogIzU5NTk1OTtcclxuJGFjY2VudC1jb2xvcjogIzAxNTc5YjtcclxuXHJcbiRib2R5LWJhY2tncm91bmQtY29sb3I6ICNlOGViZWQ7XHJcbiR0b3BiYXItY29sb3I6ICNmYWZhZmE7XHJcblxyXG4vLyAkcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yOiAjMWUxZTFlO1xyXG4vLyAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7XHJcbi8vICRwcmltYXJ5LXRleHQtY29sb3I6ICNlOGU4ZTg7XHJcbi8vICRzZWNvbmRhcnktdGV4dC1jb2xvcjogI2ZmZjtcclxuLy8gJGFjY2VudC1jb2xvcjogIzljZGNmZTtcclxuXHJcbiRib3JkZXItY29sb3I6ICRzZWNvbmRhcnktdGV4dC1jb2xvcjtcclxuJGJvcmRlci1jb2xvci0tZGlzYWJsZWQ6IHRyYW5zcGFyZW50O1xyXG4kYm9yZGVyLWNvbG9yLS1mb2N1czogJGFjY2VudC1jb2xvcjtcclxuJGJvcmRlci1jb2xvci0taG92ZXI6ICMxYTFhMWE7XHJcblxyXG4kZ3JlZW4tZGFyazE6ICMyNzYzMmE7XHJcbiRncmVlbi1saWdodDE6ICM0Y2FmNTA7XHJcbiRvcmFuZ2U6ICNmZmMxMDc7XHJcbiRyZWQtZGFyazE6ICNhODI1MjU7XHJcbiRyZWQtbGlnaHQxOiAjZjY2ODVlO1xyXG4kYmx1ZS1saWdodDE6ICNiOGQwZTg7XHJcbiRibHVlLWRhcmsxOiAjMDA2ZWE5O1xyXG4kZ3JleTE6ICNjOGQ0ZDY7XHJcbiR5ZWxsb3cxOiAjZGRkZjAwO1xyXG5cclxuJGNyaXRpY2FsLXZhbHVlLWRhcms6ICNmYmE2NDM7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG4kY3JpdGljYWwtdmFsdWUtbGlnaHQ6ICNmZWNjOGU7IC8vIFRPRE86IHJlbW92ZSBpdFxyXG4kY2FsZW5kYXIteWVsbG93OiAjZWZlZmIwOyAvLyBUT0RPOiByZW1vdmUgaXRcclxuJGJhZC12YWx1ZS1kYXJrOiAjZmY2NzU4OyAvLyBUT0RPOiByZW1vdmUgaXRcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbiRib3JkZXItcmFkaXVzOiA0cHg7XHJcbiRib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4kYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiRmb250LWZhbWlseTogXCJMYXRvTGF0aW5XZWJcIjtcclxuJGZvbnQtc2l6ZTogMC44NzVyZW07XHJcbiRmb250LXdlaWdodDogNDAwO1xyXG4kbGluZS1oZWlnaHQ6IDEuNDI4NTcxNDI5O1xyXG4kbWFyZ2luLXZhbHVlOiA4cHg7XHJcbiRwYWdlLW1heC13aWR0aDogMTM2NnB4O1xyXG4kYXR0cmlidXRlcy1jb2x1bW4td2lkdGgtNDogNDtcclxuJGF0dHJpYnV0ZXMtY29sdW1uLXdpZHRoLTM6IDM7XHJcbiRhdHRyaWJ1dGVzLWNvbHVtbi13aWR0aC0yOiAyO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuJGxlZnQtc2lkZWJhci13aWR0aC0tY29sbGFwc2VkOiA1MHB4O1xyXG4kbGVmdC1zaWRlYmFyLXdpZHRoLS1leHBhbmRlZDogMjIwcHg7XHJcbiRyaWdodC1zaWRlYmFyLXdpZHRoLS1jb2xsYXBzZWQ6IDUwcHg7XHJcbiRyaWdodC1zaWRlYmFyLXdpZHRoLS1leHBhbmRlZDogMjIwcHg7XHJcbiR0b3BiYXItaGVpZ2h0OiA0MHB4O1xyXG4kbWFpbmJhci1ib3JkZXItY29sb3I6IGRhcmtlbigkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3IsIDUlKTtcclxuJG1haW5iYXItYm9yZGVyLXdpZHRoOiAycHg7XHJcbiRwYWdlLWhlYWRlci1oZWlnaHQ6IDUuNXJlbTtcclxuJGZvcm0tY29udHJvbC1oZWlnaHQ6IDIuNXJlbTtcclxuJGNoZWNrYm94LWhlaWdodDogMS4yNXJlbTtcclxuJHJhZGlvYnV0dG9uLWhlaWdodDogMS4yNXJlbTtcclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FileUpload, SelectItem } from 'primeng/primeng';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { PageTocService } from '../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { BidoFunctionTypeConstants } from '../../../../shared/constants/bido-function-type-constants';\r\nimport { BidtStockMvtTypeConstant } from '../../../../shared/constants/bidt-stock-mvt-type-constants';\r\nimport { BireMeasureReferenceConstants } from '../../../../shared/constants/bire-measure-reference-constants';\r\nimport { BireRatingConstants } from '../../../../shared/constants/bire-rating-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ExtractTranslationPipe } from '../../../../shared/pipes/extract-translation.pipe';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { DfTypeOperationsByDfTypeInput } from '../../../../shared/types/api-input-types/logistic/df-type-operations-by-df-type-input.interface';\r\nimport { FindDeliveryFoldersByCriteriaInput } from '../../../../shared/types/api-input-types/logistic/find-delivery-folders-by-criteria-input.interface';\r\nimport { FindStockMvtsByCriteriaInput } from '../../../../shared/types/api-input-types/logistic/find-stock-mvts-by-criteria-input.interface';\r\nimport { SaveDocumentDeliveryFolderInput } from '../../../../shared/types/api-input-types/logistic/save-document-delivery-folder-input.interface';\r\nimport { UpdateBidtDfItemOperationInput } from '../../../../shared/types/api-input-types/logistic/update-df-item-operation-input.interce';\r\nimport { UpdatePackageOperationInput } from '../../../../shared/types/api-input-types/logistic/update-package-operation-input.interface';\r\nimport { UpdateStockMvtOperationStatusInput } from '../../../../shared/types/api-input-types/logistic/update-stock-mvt-operation-status-input.interface';\r\nimport { CatalogPropertiesTableDTO } from '../../../../shared/types/api-output-types/administration-catalog/catalog-properties-table-dto.interface';\r\nimport { ReferenceBatchDTO } from '../../../../shared/types/api-output-types/fleet-management/reference-batch-dto.interface';\r\nimport { BidoEquipmentDTOId } from '../../../../shared/types/api-types/bido-equipment-dto-id.interface';\r\nimport { BidoEquipmentDTO } from '../../../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BidtDeliveryFolderDTO } from '../../../../shared/types/api-types/bidt-delivery-folder-dto.interface';\r\nimport { BidtDeliveryFolderIdDTO } from '../../../../shared/types/api-types/bidt-delivery-folder-id-dto.interface';\r\nimport { BidtDfItemDTO } from '../../../../shared/types/api-types/bidt-df-item-dto.interface';\r\nimport { BidtDfItemIdDTO } from '../../../../shared/types/api-types/bidt-df-item-id-dto.interface';\r\nimport { BidtDfItemOperationDTO } from '../../../../shared/types/api-types/bidt-df-item-operation-dto.interface';\r\nimport { BidtDfTypeDTO } from '../../../../shared/types/api-types/bidt-df-type-dto.interface';\r\nimport { BidtDfTypeOperationDTO } from '../../../../shared/types/api-types/bidt-df-type-operation-dto.interface';\r\nimport { BidtDocumentDTO } from '../../../../shared/types/api-types/bidt-document-dto.interface';\r\nimport { BidtPackageDTO } from '../../../../shared/types/api-types/bidt-package-dto.interface';\r\nimport { BidtPackageIdDTO } from '../../../../shared/types/api-types/bidt-package-id-dto.interface';\r\nimport { BidtPackageOperationDTO } from '../../../../shared/types/api-types/bidt-package-operation-dto.interface';\r\nimport { BidtStockMvtDTO } from '../../../../shared/types/api-types/bidt-stock-mvt-dto.interface';\r\nimport { BidtStockMvtIdDTO } from '../../../../shared/types/api-types/bidt-stock-mvt-id-dto.interface';\r\nimport { BidtStockMvtOperationDTO } from '../../../../shared/types/api-types/bidt-stock-mvt-operation-dto.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { BidoFamilyVariantUtils } from '../../../../shared/utils/bido-family-variant-utils';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\nimport { ListUtils } from '../../../../shared/utils/list-utils';\r\nimport { SelectItemUtils } from '../../../../shared/utils/select-item-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\nimport { CatalogService } from '../../../administration/catalog/catalog.service';\r\nimport { OverlayService } from '../../../overlay/overlay.service';\r\nimport { LogisticsService } from '../../logistics.service';\r\nimport { SearchService } from '../../stock-movements/search/search.service';\r\nimport { StockMvtParameters } from '../../stock-movements/stock-movement-parameters.interface';\r\n\r\nimport { GoodsReceiptFormService } from './goods-receipt-form.service';\r\nimport { GoodReceiptStatusComponent } from './status/good-receipt-status.component';\r\n\r\ninterface OperationRowData {\r\n  bidtStockMvtOperationDTO?: BidtStockMvtOperationDTO;\r\n  bidtDfTypeOperation?: BidtDfTypeOperationDTO;\r\n}\r\n\r\ninterface TableColumnDynamic extends TableColumn {\r\n  value?: string;\r\n  isDynamic: boolean;\r\n  sequenceCode?: number;\r\n}\r\n\r\ninterface BidtPackageCustomDTO extends BidtPackageDTO {\r\n  isDisable: boolean;\r\n  litigate?: string;\r\n  received?: boolean;\r\n  packagingCtrl?: boolean;\r\n  quality?: boolean;\r\n  progress?: number;\r\n  isGoodStatus: boolean;\r\n}\r\n\r\ninterface BidtDfItemCustomDTO extends BidtDfItemDTO {\r\n  articleDesignation?: string;\r\n  bidtPackageId?: number;\r\n  controlQuantity?: boolean;\r\n  isHide: boolean;\r\n  isDisable: boolean;\r\n  item?: number;\r\n  progress?: number;\r\n  packageNumber?: string;\r\n  unit?: string;\r\n}\r\n\r\ninterface MaterialCustomDTO {\r\n  articleType?: string;\r\n  batchNumber?: string;\r\n  bidoEquipment?: BidoEquipmentDTO;\r\n  bidtpackageStatus?: string;\r\n  dfiCode?: string;\r\n  documentary?: boolean;\r\n  equipmentStatus?: string;\r\n  isContener: boolean;\r\n  isDisable: boolean;\r\n  item?: BidtDfItemDTO;\r\n  manufacturingBatch?: ReferenceBatchDTO;\r\n  opeStatus?: string;\r\n  packageNum?: string;\r\n  packaging?: boolean;\r\n  progress?: number;\r\n  presential?: boolean;\r\n  pnCode?: string;\r\n  pnDesignation?: string;\r\n  quantity?: string;\r\n  sn?: string;\r\n  unit?: string;\r\n  visual?: boolean;\r\n  physical?: boolean;\r\n  expirationDate?: Date;\r\n  _obj: BidtStockMvtDTO;\r\n  _operations: OperationRowData[];\r\n  _operationDocumentary: OperationRowData | undefined;\r\n  _operationVisual: OperationRowData | undefined;\r\n  _operationPhysical: OperationRowData | undefined;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-goods-receipt-form',\r\n  styleUrls: ['./goods-receipt-form.component.scss'],\r\n  templateUrl: './goods-receipt-form.component.html'\r\n})\r\nexport class GoodsReceiptFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public static readonly PROGRESS_MAX: number = 100;\r\n\r\n  private readonly LOG_TYPE_MAP: number = 138;\r\n  public readonly component: typeof GoodsReceiptFormComponent;\r\n  public awPropertiesConstants: typeof AWPropertiesConstants;\r\n\r\n  public deliveryFolder: BidtDeliveryFolderDTO;\r\n  public deliveryFolderId: BidtDeliveryFolderIdDTO;\r\n  public deliveryFolderStatuses: LabelValue<string>[] = [];\r\n  public shipmentFolderStatuses: LabelValue<string>[] = [];\r\n  public shipmentFolderLinked: BidtDeliveryFolderDTO;\r\n  public shipmentFolderLinkedType: string;\r\n  public packageStatusMap: LabelValue<string>[];\r\n  public itemStatusMap: LabelValue<string>[];\r\n  public opeartionalStatusMap: SelectItem[];\r\n  public documentTypes: SelectItem[];\r\n  public deleteDocument: Observable<number>[];\r\n  public torTypeList: LabelValue<number>[] = [];\r\n  public transfertOrderStatusMap: LabelValue<string>[] = [];\r\n\r\n  public packageList: BidtPackageDTO[];\r\n  public itemsList: BidtDfItemDTO[];\r\n  public catalogPropertiesTableDTO: CatalogPropertiesTableDTO[];\r\n\r\n  public isLoading: boolean;\r\n\r\n  // Parcel Table\r\n  public parcelColsDynamicNumber: number;\r\n  public parcelTableCols: TableColumnDynamic[];\r\n  public parcelTableData: BidtPackageCustomDTO[];\r\n  public selectedParcels: BidtPackageCustomDTO[];\r\n\r\n  // Posts Table\r\n  public postsColsDynamicNumber: number;\r\n  public postsTableCols: TableColumnDynamic[];\r\n  public postsTableData: BidtDfItemCustomDTO[];\r\n  public selectedPost: BidtDfItemCustomDTO[];\r\n\r\n  public showLitigation: boolean;\r\n\r\n  public materialsColsDynamicNumber: number;\r\n  public materialTableCols: TableColumnDynamic[];\r\n  public materialTableData: MaterialCustomDTO[];\r\n  public selectedMaterials: MaterialCustomDTO[];\r\n\r\n  public openAddPackageDialog: boolean;\r\n  public openAddMaterialDialog: boolean;\r\n  public openAddItemDialog: boolean;\r\n  public openDocumentCategorieDialog: boolean;\r\n\r\n  public docType: string | undefined;\r\n  public receiptFolder: BidtDeliveryFolderIdDTO | undefined;\r\n  public refStatus: string | undefined;\r\n  public scannedPackageCode: string;\r\n\r\n  public pnTypeList: LabelValue<string>[];\r\n  public packageTypeList: LabelValue<string>[];\r\n  public documentTableDataSource: TableDataSource<BidtDocumentDTO>;\r\n  public selectedDocuments: BidtDocumentDTO[];\r\n\r\n  public selectedOperation: BidtDfTypeOperationDTO;\r\n\r\n  // Package Counters\r\n  public pExpected: number = 0;\r\n  public pReceived: number = 0;\r\n  public pAccepted: number = 0;\r\n  public pDispute: number = 0;\r\n\r\n  // Item Counters\r\n  public iPlanned: number = 0;\r\n  public iProgress: number = 0;\r\n  public iReleased: number = 0;\r\n  public iDispute: number = 0;\r\n\r\n  // Material Counters\r\n  public mExpected: number = 0;\r\n  public mOK: number = 0;\r\n  public mDispute: number = 0;\r\n\r\n  // next mvt variables\r\n  public nextMvtList: BidtStockMvtDTO[];\r\n  public isNextMvtContainStockPilling: boolean;\r\n  public isNextMvtContainCrossDocking: boolean;\r\n\r\n  public assetScanDialogVisible: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    pageTocService: PageTocService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public translateService: TranslateService,\r\n    public sessionService: SessionService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly logisticService: LogisticsService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly catalogService: CatalogService,\r\n    private readonly overlayService: OverlayService,\r\n    private readonly extractTranslationPipe: ExtractTranslationPipe,\r\n    private readonly searchService: SearchService,\r\n    private readonly goodsReceiptFormService: GoodsReceiptFormService\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Read,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n    this.component = GoodsReceiptFormComponent;\r\n    this.getAllMaps();\r\n    this.init();\r\n  }\r\n\r\n  public getAllMaps(): void {\r\n    const deliveryFolderStatuses$ = this.propertiesService.getValue(GenericPropertyConstants.RECEIPT_FOLDER_STATUS_MAP);\r\n    const shipmentFolderStatuses$ = this.propertiesService.getValue(\r\n      GenericPropertyConstants.SHIPMENT_FOLDER_STATUS_MAP\r\n    );\r\n    const packageStatusMap$ = this.propertiesService.getValue(GenericPropertyConstants.PACKAGE_STATUS_MAP);\r\n    const documentTypes$ = this.propertiesService.getValue(GenericPropertyConstants.DOC_PARTNER_CATEGORY_MAP);\r\n    // status equipment maps\r\n    const opeartionalStatusMap$ = this.propertiesService.getValue(GenericPropertyConstants.OPERATIONAL_STATUS_MAP);\r\n    const batchStatusMap$ = this.propertiesService.getValue(GenericPropertyConstants.BATCH_EQUIPMENT_STATUS_MAP);\r\n    const transferOrderStatusMap$ = this.propertiesService.getValue(\r\n      GenericPropertyConstants.TRANSFER_FOLDER_STATUS_MAP\r\n    );\r\n\r\n    this.torTypeList = [];\r\n    this.goodsReceiptFormService.fetchTrasnfertOrderTypeList().subscribe((results) => {\r\n      this.torTypeList = results;\r\n    });\r\n    forkJoin([\r\n      deliveryFolderStatuses$,\r\n      shipmentFolderStatuses$,\r\n      packageStatusMap$,\r\n      documentTypes$,\r\n      opeartionalStatusMap$,\r\n      batchStatusMap$,\r\n      transferOrderStatusMap$\r\n    ]).subscribe({\r\n      next: ([\r\n        deliveryFolderStatuses,\r\n        shipmentFolderStatuses,\r\n        packageStatusMap,\r\n        documentTypes,\r\n        opeartionalStatusMap,\r\n        batchStatusMap,\r\n        transferOrderStatusMap\r\n      ]) => {\r\n        this.deliveryFolderStatuses = deliveryFolderStatuses;\r\n        this.shipmentFolderStatuses = shipmentFolderStatuses;\r\n        this.packageStatusMap = packageStatusMap;\r\n        this.documentTypes = !!documentTypes ? SelectItemUtils.fromLabelValues(documentTypes) : [];\r\n        this.opeartionalStatusMap = !!opeartionalStatusMap ? SelectItemUtils.fromLabelValues(opeartionalStatusMap) : [];\r\n        this.opeartionalStatusMap = this.opeartionalStatusMap.concat(\r\n          !!batchStatusMap ? SelectItemUtils.fromLabelValues(batchStatusMap) : []\r\n        );\r\n        this.transfertOrderStatusMap = transferOrderStatusMap;\r\n      }\r\n    });\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_GOODS_RECEIPT_FORM;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.awPropertiesConstants = AWPropertiesConstants;\r\n    if (this.componentData.objectId) {\r\n      this.deliveryFolderId = this.serializationService.deserialize(\r\n        this.componentData.objectId\r\n      ) as BidtDeliveryFolderIdDTO;\r\n\r\n      this.logisticService.findReceiptFolderWithAllObjectsById(this.deliveryFolderId).subscribe((deliveryFolder) => {\r\n        this.deliveryFolder = deliveryFolder;\r\n        this.findNextMvtReceiptFolder();\r\n\r\n        if (this.deliveryFolder.externalDeliveryNumber) {\r\n          const searchCriteria: FindDeliveryFoldersByCriteriaInput = {\r\n            folderStatusExcluded: [],\r\n            deliveryFolder: {\r\n              dfCode: this.deliveryFolder.externalDeliveryNumber\r\n            }\r\n          };\r\n          this.logisticService.findDeliveryFoldersByCriteria(searchCriteria).subscribe((deliveryFolderList) => {\r\n            this.shipmentFolderLinked = deliveryFolderList[0];\r\n            this.shipmentFolderLinkedType = StringUtils.orEmpty(\r\n              this.extractTranslationPipe.transform(\r\n                (this.shipmentFolderLinked.bidtDfType as BidtDfTypeDTO).dftDesignation\r\n              )\r\n            );\r\n          });\r\n        }\r\n\r\n        this.goodsReceiptFormService\r\n          .findDocumentByDeliveryFolderId(deliveryFolder.id as number)\r\n          .subscribe((documentDtolist) => {\r\n            this.deliveryFolder.bidtDocuments = documentDtolist;\r\n            this.documentTableDataSource.setData(ListUtils.orEmpty(this.deliveryFolder.bidtDocuments));\r\n          });\r\n\r\n        const logTypes = this.catalogService.fetchPropertyValuesTableData(this.LOG_TYPE_MAP);\r\n\r\n        const pnTypes = this.propertiesService.getValue(GenericPropertyConstants.PN_TYPE_MAP);\r\n\r\n        const packageTypes = this.propertiesService.getValue(GenericPropertyConstants.PACKAGE_TYPE_MAP);\r\n\r\n        forkJoin({ logTypes, pnTypes, packageTypes }).subscribe({\r\n          next: (results) => {\r\n            this.pnTypeList = ListUtils.orEmpty(results.pnTypes);\r\n            this.catalogPropertiesTableDTO = results.logTypes;\r\n            this.packageTypeList = results.packageTypes;\r\n            this.loadTableData();\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public findNextMvtReceiptFolder(): void {\r\n    this.goodsReceiptFormService.findNextMvtReceiptFolder(this.deliveryFolder).subscribe((result) => {\r\n      this.nextMvtList = result.bidtStockMvtDtoList;\r\n      this.isNextMvtContainStockPilling = result.containMvtStockPilling;\r\n      this.isNextMvtContainCrossDocking = result.containMvtCrossDocking;\r\n    });\r\n  }\r\n\r\n  private init() {\r\n    this.deliveryFolder = {};\r\n    this.parcelColsDynamicNumber = 0;\r\n    this.postsColsDynamicNumber = 0;\r\n    this.materialsColsDynamicNumber = 0;\r\n    this.deleteDocument = [];\r\n    this.isNextMvtContainStockPilling = false;\r\n    this.isNextMvtContainCrossDocking = false;\r\n    this.assetScanDialogVisible = false;\r\n\r\n    this.packageList = [];\r\n    this.itemsList = [];\r\n    this.selectedPost = [];\r\n    this.selectedParcels = [];\r\n    this.postsTableData = [];\r\n    this.parcelTableData = [];\r\n    this.selectedMaterials = [];\r\n    this.materialTableData = [];\r\n    this.loadTableColumns();\r\n    this.documentTableDataSource.setData([]);\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  /********************************\r\n   * Load Table Columns\r\n   ********************************/\r\n  private loadTableColumns() {\r\n    this.parcelTableCols = [\r\n      { field: 'packageNum', alignment: 'left', isDynamic: false, width: '10%' },\r\n      { field: 'packageType', alignment: 'left', isDynamic: false, width: '10%' },\r\n      { field: 'status', alignment: 'left', isDynamic: false, width: '10%' }\r\n    ];\r\n\r\n    this.postsTableCols = [\r\n      { field: 'dfiCode', alignment: 'left', isDynamic: false, width: '10%' },\r\n      { field: 'refeArticle', alignment: 'left', isDynamic: false },\r\n      { field: 'quantity', alignment: 'left', isDynamic: false, width: '5%' },\r\n      { field: 'unit', alignment: 'left', isDynamic: false, width: '5%' },\r\n      { field: 'dfiStatus', alignment: 'left', isDynamic: false, width: '10%' },\r\n      { field: 'packageNumber', alignment: 'left', isDynamic: false, width: '10%' },\r\n      { field: 'litigate', alignment: 'left', isDynamic: false, width: '10%' }\r\n    ];\r\n\r\n    this.materialTableCols = [\r\n      { field: 'dfiCode', alignment: 'left', isDynamic: false, width: '5%' },\r\n      { field: 'refeArticle', alignment: 'left', isDynamic: false, width: '20%' },\r\n      { field: 'batchNumber', alignment: 'left', isDynamic: false, width: '10%' },\r\n      { field: 'sn', alignment: 'left', isDynamic: false, width: '10%' },\r\n      { field: 'manufacturingBatch', alignment: 'left', isDynamic: false, width: '10%' },\r\n      { field: 'expirationDate', alignment: 'left', isDynamic: false, width: '10%' },\r\n      { field: 'qty', alignment: 'left', isDynamic: false, width: '5%' },\r\n      { field: 'unit', alignment: 'left', isDynamic: false, width: '5%' },\r\n      { field: 'packageNum', alignment: 'left', isDynamic: false, width: '10%' }\r\n    ];\r\n\r\n    this.documentTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'documentName', translateKey: this.getTranslateKey('name'), width: '90%' },\r\n        { field: 'documentPublicationDate', translateKey: this.getTranslateKey('dateAdded'), width: '10%' }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  public refresh(): void {\r\n    this.parcelColsDynamicNumber = 0;\r\n    this.postsColsDynamicNumber = 0;\r\n    this.materialsColsDynamicNumber = 0;\r\n    this.deleteDocument = [];\r\n    this.documentTableDataSource.setData([]);\r\n    this.deliveryFolder = {};\r\n    this.packageList = [];\r\n    this.packageList = [];\r\n    this.itemsList = [];\r\n    this.parcelTableData = [];\r\n    this.parcelTableCols = [];\r\n    this.postsTableData = [];\r\n    this.postsTableCols = [];\r\n    this.materialTableData = [];\r\n    this.materialTableCols = [];\r\n    this.selectedPost = [];\r\n    this.postsTableData = [];\r\n    this.loadTableColumns();\r\n\r\n    this.isLoading = true;\r\n\r\n    this.logisticService\r\n      .findReceiptFolderWithAllObjectsById(this.deliveryFolderId)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.isLoading = false;\r\n        })\r\n      )\r\n      .subscribe((deliveryFolder) => {\r\n        this.deliveryFolder = deliveryFolder;\r\n        this.findNextMvtReceiptFolder();\r\n        this.goodsReceiptFormService\r\n          .findDocumentByDeliveryFolderId(deliveryFolder.id as number)\r\n          .subscribe((documentDtolist) => {\r\n            this.deliveryFolder.bidtDocuments = documentDtolist;\r\n            this.documentTableDataSource.setData(ListUtils.orEmpty(this.deliveryFolder.bidtDocuments));\r\n            this.loadTableData();\r\n          });\r\n      });\r\n  }\r\n\r\n  /********************************\r\n   * Load Table Date\r\n   ********************************/\r\n  private loadTableData() {\r\n    // Fetch Package Table Data\r\n    this.renderPackageTableData();\r\n\r\n    // Fetch Items Table Data\r\n    this.renderItemsTableData();\r\n\r\n    this.sortTables();\r\n  }\r\n\r\n  private sortTables(): void {\r\n    this.sortPackages();\r\n    this.sortItems();\r\n    this.sortMaterials();\r\n  }\r\n\r\n  private sortPackages(): void {\r\n    if (this.parcelTableData && this.parcelTableData.length > 0) {\r\n      this.parcelTableData.sort((a, b) => (a.packageCode as string).localeCompare(b.packageCode as string));\r\n    }\r\n  }\r\n\r\n  private sortItems(): void {\r\n    if (this.postsTableData && this.postsTableData.length > 0) {\r\n      this.postsTableData.sort((a, b) => Number(a.dfiCode) - Number(b.dfiCode));\r\n    }\r\n  }\r\n\r\n  private sortMaterials(): void {\r\n    if (this.materialTableData && this.materialTableData.length > 0) {\r\n      this.materialTableData.sort((a, b) => {\r\n        if ((a.dfiCode as string).localeCompare(b.dfiCode as string) === 0 && a.bidoEquipment && b.bidoEquipment) {\r\n          if (a.bidoEquipment.sn && b.bidoEquipment.sn) {\r\n            return a.bidoEquipment.sn.localeCompare(b.bidoEquipment.sn);\r\n          } else {\r\n            return (a.bidoEquipment.batchNumber as string).localeCompare(b.bidoEquipment.batchNumber as string);\r\n          }\r\n        } else {\r\n          return Number(a.dfiCode) - Number(b.dfiCode);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public getPackageStatus(key: string): string {\r\n    return this.packageStatusMap.filter((status) => status.value === key)[0].label;\r\n  }\r\n\r\n  public getItemStatus(key: string): string {\r\n    return this.deliveryFolderStatuses.filter((status) => status.value === key)[0].label;\r\n  }\r\n\r\n  public getOperationnalStatus(key: string): string {\r\n    return this.opeartionalStatusMap.filter((status) => status.value === key)[0].label as string;\r\n  }\r\n\r\n  public getPackageType(key: string): string {\r\n    return this.packageTypeList.filter((type) => type.value === key)[0].label as string;\r\n  }\r\n\r\n  /********************************\r\n   * Fetch Package Table data\r\n   ********************************/\r\n  private renderPackageTableData() {\r\n    const operationsList = ListUtils.orEmpty(this.deliveryFolder.bidtDfItems)\r\n      .filter((item) => !!item.bidtPackage && !!item.bidtPackage.bidtPackageOperations)\r\n      .map((item) => (item.bidtPackage as BidtPackageDTO).bidtPackageOperations)\r\n      .reduce(\r\n        (acc, val) => (acc as BidtPackageOperationDTO[]).concat(val as BidtPackageOperationDTO[]),\r\n        []\r\n      ) as BidtPackageOperationDTO[];\r\n\r\n    const input: DfTypeOperationsByDfTypeInput = {\r\n      operations: operationsList,\r\n      bidtDfTypeDTOId: (this.deliveryFolder.bidtDfType as BidtDfTypeDTO).id as number\r\n    };\r\n    this.goodsReceiptFormService.getBidtDfTypeOperationsByDfType(input).subscribe((operationsResult) => {\r\n      const operations = operationsResult.map((operation) => {\r\n        const operationList = this.catalogPropertiesTableDTO.filter(\r\n          (ope) => ope.propertiesKey === operation.packopeDesignation\r\n        );\r\n        const tableColumn: TableColumnDynamic = {\r\n          field: `${operation.packopeDesignation}`,\r\n          alignment: 'center',\r\n          value:\r\n            this.translateService.currentLang.toUpperCase() === AWPropertiesConstants.PROPERTY_EN\r\n              ? operationList[0].enPropertiesValue\r\n              : operationList[0].frPropertiesValue,\r\n          isDynamic: true,\r\n          sequenceCode: Number(operation.packopeCode),\r\n          width: '7%'\r\n        };\r\n        this.parcelColsDynamicNumber++;\r\n\r\n        return tableColumn;\r\n      });\r\n\r\n      operations.sort((a, b) => (a.sequenceCode as number) - (b.sequenceCode as number));\r\n      this.parcelTableCols = this.parcelTableCols.concat(operations);\r\n      this.parcelTableCols = [\r\n        ...this.parcelTableCols,\r\n        { field: 'progress', alignment: 'center', isDynamic: false, width: '10%' }\r\n      ];\r\n      this.parcelTableCols = this.parcelTableCols.reduce(\r\n        (unique: TableColumnDynamic[], column: TableColumnDynamic) =>\r\n          unique.every((elt) => elt.field !== column.field) ? [...unique, column] : unique,\r\n        []\r\n      );\r\n\r\n      if (this.deliveryFolder.bidtDfItems && ListUtils.orEmpty(this.deliveryFolder.bidtDfItems)) {\r\n        const packageAllreadyAdded: number[] = [];\r\n        this.deliveryFolder.bidtDfItems.forEach((items) => {\r\n          if (!!items.bidtPackage && !!items.bidtPackage.id && !packageAllreadyAdded.includes(items.bidtPackage.id)) {\r\n            packageAllreadyAdded.push(items.bidtPackage.id);\r\n            const bidtPackage = items.bidtPackage;\r\n            const operationRowList = operationsResult.filter((opeDTO) => opeDTO.bidtPackageId === bidtPackage.id);\r\n            const operationQuality = this.getPackageOperation(\r\n              operationRowList,\r\n              AWPropertiesConstants.LOGISTICAL_OPERATION_QUALITY_CONTROL\r\n            );\r\n            const operationReceived = this.getPackageOperation(\r\n              operationRowList,\r\n              AWPropertiesConstants.LOGISTICAL_OPERATION_PHYSICAL_RECEIPT\r\n            );\r\n            const operationPackaging = this.getPackageOperation(\r\n              operationRowList,\r\n              AWPropertiesConstants.LOGISTICAL_OPERATION_PACKAGING_CONTROL\r\n            );\r\n\r\n            const packageData: BidtPackageCustomDTO = {\r\n              id: bidtPackage.id,\r\n              isDisable: this.isItemOnGoingOrPerformed(items),\r\n              packageCode: bidtPackage.externalPackageCode ? bidtPackage.externalPackageCode : bidtPackage.packageCode,\r\n              packageStatus: this.getPackageStatus(bidtPackage.packageStatus as string),\r\n              isGoodStatus: this.isGoodPackageStatus(bidtPackage.packageStatus as string),\r\n              packageType: bidtPackage.packageType ? this.getPackageType(bidtPackage.packageType) : undefined,\r\n              bidtPackageOperations: operationRowList,\r\n              quality: !!operationQuality\r\n                ? this.isStatusPerformed(operationQuality.packopeStatus as string)\r\n                  ? true\r\n                  : false\r\n                : undefined,\r\n              packagingCtrl: !!operationPackaging\r\n                ? this.isStatusPerformed(operationPackaging.packopeStatus as string)\r\n                  ? true\r\n                  : false\r\n                : undefined,\r\n              progress: 0,\r\n              received: !!operationReceived\r\n                ? this.isStatusPerformed(operationReceived.packopeStatus as string)\r\n                  ? true\r\n                  : false\r\n                : undefined\r\n            };\r\n            packageData.progress = this.calculateProgress([\r\n              packageData.packagingCtrl as boolean,\r\n              packageData.received as boolean,\r\n              packageData.quality as boolean\r\n            ]);\r\n            this.parcelTableData.push(packageData);\r\n            this.packageList.push(bidtPackage);\r\n          }\r\n        });\r\n        this.parcelTableData = this.parcelTableData.reduce(\r\n          (unique: BidtPackageCustomDTO[], bidtPackage: BidtPackageCustomDTO) =>\r\n            unique.every((elt) => elt.packageCode !== bidtPackage.packageCode) ? [...unique, bidtPackage] : unique,\r\n          []\r\n        );\r\n        this.packageList = this.packageList.reduce(\r\n          (unique: BidtPackageDTO[], bidtPackage: BidtPackageDTO) =>\r\n            unique.every((elt) => elt.packageCode !== bidtPackage.packageCode) ? [...unique, bidtPackage] : unique,\r\n          []\r\n        );\r\n        this.sortPackages();\r\n      }\r\n    });\r\n  }\r\n\r\n  public isItemOnGoingOrPerformed(item: BidtDfItemDTO): boolean {\r\n    if (item.bidtDfItemOperations && item.bidtDfItemOperations.length > 0) {\r\n      return (\r\n        (item.dfiStatus as string) === AWPropertiesConstants.RECEIPT_FOLDER_STATUS_ON_GOING ||\r\n        (item.dfiStatus as string) === AWPropertiesConstants.RECEIPT_FOLDER_STATUS_PERFORMED\r\n      );\r\n    } else {\r\n      return this.isOneMaterialOperationPerformed(item);\r\n    }\r\n  }\r\n\r\n  public getPackageOperation(\r\n    bidtPackageOperationDTOList: BidtPackageOperationDTO[],\r\n    colField: string\r\n  ): BidtPackageOperationDTO | undefined {\r\n    const bidtPackageOperation = bidtPackageOperationDTOList.filter(\r\n      (operation) => operation.packopeDesignation === colField\r\n    );\r\n\r\n    if (bidtPackageOperation.length > 0) {\r\n      return bidtPackageOperation[0];\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public isStatusPerformed(key: string): boolean {\r\n    if (key === AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isGoodPackageStatus(key: string): boolean {\r\n    return key !== AWPropertiesConstants.PACKAGE_STATUS_AWAITING;\r\n  }\r\n\r\n  /********************************\r\n   * Fetch Items Table data\r\n   ********************************/\r\n  private renderItemsTableData() {\r\n    const operations = (ListUtils.orEmpty(this.deliveryFolder.bidtDfItems)\r\n      .filter((item) => !!item.bidtDfItemOperations)\r\n      .map((item) => item.bidtDfItemOperations)\r\n      .reduce(\r\n        (acc, val) => (acc as BidtDfItemOperationDTO[]).concat(val as BidtDfItemOperationDTO[]),\r\n        []\r\n      ) as BidtDfItemOperationDTO[]).map((operation) => {\r\n      const operationList = this.catalogPropertiesTableDTO.filter(\r\n        (ope) => ope.propertiesKey === operation.dfioDesignation\r\n      );\r\n      const tableColumn: TableColumnDynamic = {\r\n        field: `${operation.dfioDesignation}`,\r\n        alignment: 'center',\r\n        value:\r\n          this.translateService.currentLang.toUpperCase() === AWPropertiesConstants.PROPERTY_EN\r\n            ? operationList[0].enPropertiesValue\r\n            : operationList[0].frPropertiesValue,\r\n        isDynamic: true,\r\n        sequenceCode: Number(operation.dfioCode),\r\n        width: '10%'\r\n      };\r\n      this.postsColsDynamicNumber++;\r\n\r\n      return tableColumn;\r\n    });\r\n\r\n    operations.sort((a, b) => (a.sequenceCode as number) - (b.sequenceCode as number));\r\n    this.postsTableCols = this.postsTableCols.concat(operations);\r\n    this.postsTableCols = [\r\n      ...this.postsTableCols,\r\n      { field: 'progress', alignment: 'center', isDynamic: false, width: '10%' }\r\n    ];\r\n    this.postsTableCols = this.postsTableCols.reduce(\r\n      (unique: TableColumnDynamic[], column: TableColumnDynamic) =>\r\n        unique.every((elt) => elt.field !== column.field) ? [...unique, column] : unique,\r\n      []\r\n    );\r\n\r\n    this.postsTableData = [];\r\n    this.materialTableData = [];\r\n    if (!!this.deliveryFolder && !!this.deliveryFolder.bidtDfItems && this.deliveryFolder.bidtDfItems.length > 0) {\r\n      const cloneItemList = [...this.deliveryFolder.bidtDfItems];\r\n      cloneItemList.sort((a: BidtDfItemDTO, b: BidtDfItemDTO) => {\r\n        if (!!a.dfiCode && !!b.dfiCode) {\r\n          return parseInt(a.dfiCode, 10) - parseInt(b.dfiCode, 10);\r\n        }\r\n\r\n        return -1;\r\n      });\r\n\r\n      this.itemsList = [];\r\n      cloneItemList.forEach((item, index) => {\r\n        let i = index;\r\n        this.itemsList.push(item);\r\n        const operationQuality = this.getItemOperation(\r\n          item.bidtDfItemOperations as BidtDfItemOperationDTO[],\r\n          AWPropertiesConstants.LOGISTICAL_OPERATION_QUALITY_CONTROL\r\n        );\r\n\r\n        const disable = this.isOneMaterialOperationPerformed(item);\r\n\r\n        let hide = false;\r\n        if (item.bidtPackage) {\r\n          hide = true;\r\n          if (item.bidtPackage.packageStatus === AWPropertiesConstants.PACKAGE_STATUS_DELIVERED) {\r\n            hide = false;\r\n          }\r\n        }\r\n\r\n        const postData: BidtDfItemCustomDTO = {\r\n          item: i++,\r\n          id: item.id,\r\n          bidtDeliveryFolder: item.bidtDeliveryFolder,\r\n          articleDesignation: !!item.birePn ? item.birePn.articleDesignation : undefined,\r\n          birePnPnCode: item.birePnPnCode,\r\n          bidtDfItemOperations: item.bidtDfItemOperations,\r\n          quantity: item.quantity,\r\n          unit: item.birePn ? item.birePn.quantityUnit : undefined,\r\n          dfiCode: item.dfiCode,\r\n          isHide: hide,\r\n          isDisable: disable,\r\n          dfiStatus: this.getItemStatus(item.dfiStatus as string),\r\n          packageNumber: !!item.bidtPackage\r\n            ? item.bidtPackage.externalPackageCode\r\n              ? item.bidtPackage.externalPackageCode\r\n              : item.bidtPackage.packageCode\r\n            : undefined,\r\n          progress: 0,\r\n          controlQuantity: !!operationQuality\r\n            ? this.isStatusPerformed(operationQuality.dfioStatus as string)\r\n              ? true\r\n              : false\r\n            : undefined\r\n        };\r\n\r\n        postData.progress = this.calculateProgresssItem(item);\r\n\r\n        this.postsTableData.push(postData);\r\n        this.sortItems();\r\n\r\n        if (!!item.bidtStockMvts && item.bidtStockMvts.length > 0) {\r\n          this.materialTableData.push(...this.renderMaterialsTableData(item));\r\n        }\r\n      });\r\n\r\n      this.materialTableData.forEach((material) => {\r\n        if (material.item && material.item.birePn && material.sn) {\r\n          const equipmentInput: BidoEquipmentDTO = {\r\n            sn: material.sn,\r\n            pnCode: material.item.birePn.pnCode\r\n          };\r\n\r\n          this.goodsReceiptFormService.findBidoEquipmentsByPnAndSn(equipmentInput).subscribe((equipment) => {\r\n            material.bidoEquipment = equipment[0];\r\n            if (equipment[0] && equipment[0].operationalStatus) {\r\n              material.equipmentStatus = this.getOperationnalStatus(equipment[0].operationalStatus);\r\n            }\r\n            this.sortMaterials();\r\n          });\r\n        } else if (material.item && material.item.birePn && material._obj.stockMvtBatchNumber) {\r\n          const equipmentInput: BidoEquipmentDTO = {\r\n            batchNumber: material._obj.stockMvtBatchNumber,\r\n            pnCode: material.item.birePn.pnCode\r\n          };\r\n          this.goodsReceiptFormService.findBidoEquipmentByPnAndBatchNumber(equipmentInput).subscribe((equipment) => {\r\n            material.bidoEquipment = equipment;\r\n            if (equipment && equipment.equipmentCode) {\r\n              this.logisticService\r\n                .findBidoEquipmentCounter({\r\n                  equipmentCode: equipment.equipmentCode,\r\n                  counterCode: BireMeasureReferenceConstants.BIRE_MEASURE_REFERENCE_COUNTER_CODE_CALENDAR_LIMIT,\r\n                  familyCode: BidoFamilyVariantUtils.getFamilyCodeFromFamilyVariantCode(equipment.familyVariantCode),\r\n                  ratingCode: BireRatingConstants.DEFAULT\r\n                })\r\n                .subscribe((bidoEquipmentCounter) => {\r\n                  if (bidoEquipmentCounter) {\r\n                    material.expirationDate = bidoEquipmentCounter.dateLimit;\r\n                  }\r\n                });\r\n            }\r\n            if (\r\n              ((material.item as BidtDfItemDTO).birePn as BirePnDTO).traceability ===\r\n              AWPropertiesConstants.PN_TRACEABILITY_BY_BATCH\r\n            ) {\r\n              this.goodsReceiptFormService\r\n                .getManufacturingBatchByEquipment(equipment)\r\n                .subscribe((manufacturingBatch) => {\r\n                  material.manufacturingBatch = manufacturingBatch;\r\n                });\r\n            }\r\n            if (equipment.operationalStatus) {\r\n              material.equipmentStatus = this.getOperationnalStatus(equipment.operationalStatus);\r\n            }\r\n          });\r\n          this.sortMaterials();\r\n        }\r\n        if (material._operations.length > 0) {\r\n          const operationsList = material._operations.map((operation) => {\r\n            return operation.bidtStockMvtOperationDTO as BidtStockMvtOperationDTO;\r\n          });\r\n\r\n          this.goodsReceiptFormService.getOperationCategories(operationsList).subscribe((dfOperationsList) => {\r\n            if (dfOperationsList.dfTypeOperationList && dfOperationsList.dfTypeOperationList.length > 0) {\r\n              dfOperationsList.dfTypeOperationList.forEach((dfOperation) => {\r\n                material._operations.filter(\r\n                  (ope) =>\r\n                    !!ope.bidtStockMvtOperationDTO &&\r\n                    ope.bidtStockMvtOperationDTO.bidtDfTypeOperationId === dfOperation.id\r\n                )[0].bidtDfTypeOperation = dfOperation;\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public getItemOperation(\r\n    bidtPackageOperationDTOList: BidtDfItemOperationDTO[],\r\n    colField: string\r\n  ): BidtDfItemOperationDTO | undefined {\r\n    const bidtDfItemOperation = bidtPackageOperationDTOList.filter(\r\n      (operation) => operation.dfioDesignation === colField\r\n    );\r\n\r\n    if (bidtDfItemOperation.length > 0) {\r\n      return bidtDfItemOperation[0];\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public isOneMaterialOperationPerformed(item: BidtDfItemDTO): boolean {\r\n    let state = false;\r\n    if (item.bidtStockMvts && item.bidtStockMvts.length > 0) {\r\n      item.bidtStockMvts\r\n        .filter((stock) => !!stock.bidtStockMvtOperations && stock.bidtStockMvtOperations.length > 0)\r\n        .forEach((stockWithOperation) => {\r\n          (stockWithOperation.bidtStockMvtOperations as BidtStockMvtOperationDTO[]).forEach((operation) => {\r\n            if (operation.smoStatus === AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED) {\r\n              state = true;\r\n            }\r\n          });\r\n        });\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  /********************************\r\n   * Fetch Material Table data\r\n   ********************************/\r\n  private renderMaterialsTableData(rowData: BidtDfItemDTO): MaterialCustomDTO[] {\r\n    const operations = (ListUtils.orEmpty(rowData.bidtStockMvts)\r\n      .filter((material) => !!material.bidtStockMvtOperations)\r\n      .map((material) => material.bidtStockMvtOperations)\r\n      .reduce(\r\n        (acc, val) => (acc as BidtStockMvtOperationDTO[]).concat(val as BidtStockMvtOperationDTO[]),\r\n        []\r\n      ) as BidtStockMvtOperationDTO[]).map((operation) => {\r\n      const operationList = this.catalogPropertiesTableDTO.filter(\r\n        (ope) => ope.propertiesKey === operation.smoDesignation\r\n      );\r\n      const tableColumn: TableColumnDynamic = {\r\n        field: `${operation.smoDesignation}`,\r\n        alignment: 'center',\r\n        value:\r\n          this.translateService.currentLang.toUpperCase() === AWPropertiesConstants.PROPERTY_EN\r\n            ? operationList[0].enPropertiesValue\r\n            : operationList[0].frPropertiesValue,\r\n        isDynamic: true,\r\n        sequenceCode: Number(operation.smoCode),\r\n        width: '10%'\r\n      };\r\n      this.materialsColsDynamicNumber++;\r\n\r\n      return tableColumn;\r\n    });\r\n\r\n    operations.sort((a, b) => (a.sequenceCode as number) - (b.sequenceCode as number));\r\n    this.materialTableCols = this.materialTableCols.concat(operations);\r\n    this.materialTableCols = [\r\n      ...this.materialTableCols,\r\n      { field: 'progress', alignment: 'center', isDynamic: false, width: '7%' }\r\n    ];\r\n    this.materialTableCols = this.materialTableCols.reduce(\r\n      (unique: TableColumnDynamic[], column: TableColumnDynamic) =>\r\n        unique.every((elt) => elt.field !== column.field) ? [...unique, column] : unique,\r\n      []\r\n    );\r\n\r\n    const materialList: MaterialCustomDTO[] = [];\r\n    if (!!rowData.bidtStockMvts && rowData.bidtStockMvts.length > 0) {\r\n      rowData.bidtStockMvts.forEach((material) => {\r\n        const operationsDatas: OperationRowData[] = [];\r\n        const operationDocumentary = this.getMaterialOperation(\r\n          material.bidtStockMvtOperations as BidtStockMvtOperationDTO[],\r\n          AWPropertiesConstants.LOGISTICAL_OPERATION_DOCUMENT_CONTROL\r\n        );\r\n        if (operationDocumentary) {\r\n          operationsDatas.push(operationDocumentary);\r\n        }\r\n        const operationVisual = this.getMaterialOperation(\r\n          material.bidtStockMvtOperations as BidtStockMvtOperationDTO[],\r\n          AWPropertiesConstants.LOGISTICAL_OPERATION_VISUAL_CONTROL\r\n        );\r\n        if (operationVisual) {\r\n          operationsDatas.push(operationVisual);\r\n        }\r\n        const operationPhysical = this.getMaterialOperation(\r\n          material.bidtStockMvtOperations as BidtStockMvtOperationDTO[],\r\n          AWPropertiesConstants.LOGISTICAL_OPERATION_PHYSICAL_RECEIPT\r\n        );\r\n        if (operationPhysical) {\r\n          operationsDatas.push(operationPhysical);\r\n        }\r\n\r\n        let disable = false;\r\n        if (material.bidtStockMvtOperations && material.bidtStockMvtOperations.length > 0) {\r\n          if (rowData.bidtDfItemOperations && rowData.bidtDfItemOperations.length > 0) {\r\n            disable = this.isItemOperationNotPerformed(rowData);\r\n          } else if (rowData.bidtPackage) {\r\n            disable = true;\r\n            if (rowData.bidtPackage.packageStatus === AWPropertiesConstants.PACKAGE_STATUS_DELIVERED) {\r\n              disable = false;\r\n            }\r\n          }\r\n        }\r\n\r\n        const materialCustom: MaterialCustomDTO = {\r\n          _obj: material,\r\n          _operations: operationsDatas,\r\n          _operationDocumentary: operationDocumentary,\r\n          _operationVisual: operationVisual,\r\n          _operationPhysical: operationPhysical,\r\n          item: rowData,\r\n          isDisable: disable,\r\n          pnCode: rowData.birePn ? rowData.birePn.pnCode : undefined,\r\n          pnDesignation: rowData.birePn ? rowData.birePn.articleDesignation : undefined,\r\n          sn: material.stockMvtSn ? material.stockMvtSn : undefined,\r\n          batchNumber: material.stockMvtBatchNumber ? material.stockMvtBatchNumber : undefined,\r\n          unit: rowData.birePn ? rowData.birePn.quantityUnit : undefined,\r\n          quantity: material.stockMvtQuantity,\r\n          packageNum: rowData.bidtPackage\r\n            ? rowData.bidtPackage.externalPackageCode\r\n              ? rowData.bidtPackage.externalPackageCode\r\n              : rowData.bidtPackage.packageCode\r\n            : undefined,\r\n          bidtpackageStatus: rowData.bidtPackage\r\n            ? this.getPackageStatus(rowData.bidtPackage.packageStatus as string)\r\n            : undefined,\r\n          dfiCode: rowData.dfiCode,\r\n          isContener: rowData.bidtPackage ? true : false,\r\n          documentary:\r\n            !!operationDocumentary && operationDocumentary.bidtStockMvtOperationDTO\r\n              ? this.isStatusPerformed(operationDocumentary.bidtStockMvtOperationDTO.smoStatus as string)\r\n                ? true\r\n                : false\r\n              : undefined,\r\n          visual:\r\n            !!operationVisual && operationVisual.bidtStockMvtOperationDTO\r\n              ? this.isStatusPerformed(operationVisual.bidtStockMvtOperationDTO.smoStatus as string)\r\n                ? true\r\n                : false\r\n              : undefined,\r\n          physical:\r\n            !!operationPhysical && operationPhysical.bidtStockMvtOperationDTO\r\n              ? this.isStatusPerformed(operationPhysical.bidtStockMvtOperationDTO.smoStatus as string)\r\n                ? true\r\n                : false\r\n              : undefined\r\n        };\r\n\r\n        materialCustom.progress = this.calculateProgress([\r\n          materialCustom.documentary,\r\n          materialCustom.visual,\r\n          materialCustom.physical\r\n        ]);\r\n\r\n        materialList.push(materialCustom);\r\n      });\r\n    }\r\n\r\n    return materialList;\r\n  }\r\n\r\n  private isItemOperationNotPerformed(item: BidtDfItemDTO): boolean {\r\n    let count = 0;\r\n    (item.bidtDfItemOperations as BidtDfItemOperationDTO[]).forEach((itemOperation) => {\r\n      if (itemOperation.dfioStatus === AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED) {\r\n        count++;\r\n      }\r\n    });\r\n\r\n    return (item.bidtDfItemOperations as BidtDfItemOperationDTO[]).length === count ? false : true;\r\n  }\r\n\r\n  public getMaterialOperation(\r\n    bidtPackageOperationDTOList: BidtStockMvtOperationDTO[],\r\n    colField: string\r\n  ): OperationRowData | undefined {\r\n    const bidtStockMvtOperation = bidtPackageOperationDTOList.filter(\r\n      (operation) => (operation.smoDesignation as string) === colField\r\n    );\r\n\r\n    if (bidtStockMvtOperation.length > 0) {\r\n      const operationRowData: OperationRowData = {\r\n        bidtStockMvtOperationDTO: bidtStockMvtOperation[0]\r\n      };\r\n\r\n      return operationRowData;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public calculateProgress(boolList: (boolean | undefined)[]): number {\r\n    const maxProgress = 100;\r\n    const specificCase = 3;\r\n    let numberCol = 0;\r\n    boolList.forEach((bool) => {\r\n      if (bool !== undefined) {\r\n        numberCol++;\r\n      }\r\n    });\r\n\r\n    const progressForOneOpe = Math.floor(maxProgress / numberCol);\r\n    let count = numberCol === specificCase ? 1 : 0;\r\n\r\n    boolList.forEach((bool) => {\r\n      if (bool) {\r\n        count = count + progressForOneOpe;\r\n      }\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  private calculateProgresssItem(item: BidtDfItemDTO): number {\r\n    const waitingQuantity = Number(item.quantity);\r\n    let receiptQuantity = 0;\r\n    const multiplier = 100;\r\n\r\n    if (item.bidtStockMvts && item.bidtStockMvts.length > 0) {\r\n      item.bidtStockMvts\r\n        .filter((stockMvt) => !!stockMvt.bidtStockMvtOperations && stockMvt.bidtStockMvtOperations.length > 0)\r\n        .forEach((stockMvt) => {\r\n          const nbOperation = (stockMvt.bidtStockMvtOperations as BidtStockMvtOperationDTO[]).length;\r\n          let nbOperationDone = 0;\r\n          (stockMvt.bidtStockMvtOperations as BidtStockMvtOperationDTO[]).forEach((operation) => {\r\n            if (operation.smoStatus === AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED) {\r\n              nbOperationDone++;\r\n            }\r\n          });\r\n          if (nbOperation === nbOperationDone) {\r\n            receiptQuantity = receiptQuantity + Number(stockMvt.stockMvtQuantity);\r\n          }\r\n        });\r\n    }\r\n\r\n    return Math.floor((receiptQuantity / waitingQuantity) * multiplier);\r\n  }\r\n\r\n  /********************************\r\n   * Validate Operations\r\n   ********************************/\r\n  public validateOperations() {\r\n    const partialMessageKey = this.getTranslateKey('validateParcel');\r\n    this.confirmationService.confirm({\r\n      messageKey: partialMessageKey,\r\n      accept: () => {\r\n        const imputList: UpdatePackageOperationInput[] = [];\r\n        this.selectedParcels.forEach((packageCustom) => {\r\n          (packageCustom.bidtPackageOperations as BidtPackageOperationDTO[]).forEach((operation) => {\r\n            const updatepackageInput: UpdatePackageOperationInput = {\r\n              operationId: Number(operation.id),\r\n              bidtDeliveryFolderDto: this.deliveryFolder,\r\n              newStatus: AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED\r\n            };\r\n            imputList.push(updatepackageInput);\r\n          });\r\n        });\r\n        this.performPackageOperations(imputList);\r\n      }\r\n    });\r\n  }\r\n\r\n  /********************************\r\n   * Open Selected Posts\r\n   ********************************/\r\n  public openLitigationDialog() {\r\n    this.showLitigation = true;\r\n  }\r\n\r\n  /********************************\r\n   * Is Object Empty\r\n   ********************************/\r\n  public isEmpty(obj: {}): number {\r\n    return !!obj && Object.keys(obj).length > 0 ? Object.keys(obj).length : 0;\r\n  }\r\n\r\n  public onChangeReceivedAndCompliance(rowData: BidtPackageCustomDTO, colField: string) {\r\n    const operationCheck = this.getPackageOperation(\r\n      rowData.bidtPackageOperations as BidtPackageOperationDTO[],\r\n      colField\r\n    );\r\n\r\n    if (operationCheck) {\r\n      if (this.isStatusPerformed(operationCheck.packopeStatus as string)) {\r\n        operationCheck.packopeStatus = AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PLANNED;\r\n      } else {\r\n        operationCheck.packopeStatus = AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED;\r\n      }\r\n      const updatepackageInput: UpdatePackageOperationInput = {\r\n        operationId: Number(operationCheck.id),\r\n        bidtDeliveryFolderDto: this.deliveryFolder,\r\n        newStatus: operationCheck.packopeStatus as string\r\n      };\r\n      this.performPackageOperations([updatepackageInput]);\r\n    }\r\n  }\r\n\r\n  /**********************************************\r\n   * Operation on Package\r\n   **********************************************/\r\n  private performPackageOperations(operationCheckList: UpdatePackageOperationInput[]) {\r\n    this.logisticService.performPackageOperations(operationCheckList).subscribe((res) => {\r\n      this.selectedParcels = [];\r\n      this.refresh();\r\n    });\r\n  }\r\n\r\n  public onChangeItemControl(rowData: BidtDfItemCustomDTO, colField: string) {\r\n    const operationCheck = this.getItemOperation(rowData.bidtDfItemOperations as BidtDfItemOperationDTO[], colField);\r\n\r\n    if (operationCheck) {\r\n      if (this.isStatusPerformed(operationCheck.dfioStatus as string)) {\r\n        operationCheck.dfioStatus = AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PLANNED;\r\n      } else {\r\n        operationCheck.dfioStatus = AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED;\r\n      }\r\n      const updateBidtDfItemOperationInput: UpdateBidtDfItemOperationInput = {\r\n        operationId: operationCheck.id as number,\r\n        newStatus: operationCheck.dfioStatus as string\r\n      };\r\n      this.performItemOperations([updateBidtDfItemOperationInput]);\r\n    }\r\n  }\r\n\r\n  /**********************************************\r\n   * Operation on Item\r\n   **********************************************/\r\n  private performItemOperations(res: UpdateBidtDfItemOperationInput[]) {\r\n    this.logisticService.performItemOperations(res).subscribe((result) => {\r\n      this.selectedPost = [];\r\n      this.refresh();\r\n    });\r\n  }\r\n\r\n  public onChangeMaterialControl(rowData: MaterialCustomDTO, colField: string) {\r\n    const operationCheck = this.getMaterialOperation(\r\n      rowData._obj.bidtStockMvtOperations as BidtStockMvtOperationDTO[],\r\n      colField\r\n    );\r\n\r\n    if (operationCheck && operationCheck.bidtStockMvtOperationDTO) {\r\n      if (this.isStatusPerformed(operationCheck.bidtStockMvtOperationDTO.smoStatus as string)) {\r\n        operationCheck.bidtStockMvtOperationDTO.smoStatus = AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PLANNED;\r\n      } else {\r\n        operationCheck.bidtStockMvtOperationDTO.smoStatus = AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED;\r\n      }\r\n      const input: UpdateStockMvtOperationStatusInput = {\r\n        bidtStockMvt: rowData._obj,\r\n        operationId: operationCheck.bidtStockMvtOperationDTO.id as number,\r\n        bidtDfItem: rowData.item as BidtDfItemDTO,\r\n        newStatus: operationCheck.bidtStockMvtOperationDTO.smoStatus as string\r\n      };\r\n      this.performStockMovementOperations([input]);\r\n    }\r\n  }\r\n\r\n  /**********************************************\r\n   * Operation on Material\r\n   **********************************************/\r\n  private performStockMovementOperations(input: UpdateStockMvtOperationStatusInput[]): void {\r\n    this.logisticService.performStockMovementOperations(input).subscribe(() => {\r\n      this.selectedMaterials = [];\r\n      this.refresh();\r\n    });\r\n  }\r\n\r\n  /********************************\r\n   * Validate Operations\r\n   ********************************/\r\n  public validateMaterialOperations() {\r\n    const partialMessageKey = this.getTranslateKey('validateAsset');\r\n    this.confirmationService.confirm({\r\n      messageKey: partialMessageKey,\r\n      accept: () => {\r\n        const imputList: UpdateStockMvtOperationStatusInput[] = [];\r\n        this.selectedMaterials.forEach((material) => {\r\n          (material._obj.bidtStockMvtOperations as BidtStockMvtOperationDTO[]).forEach((operation) => {\r\n            const updatepackageInput: UpdateStockMvtOperationStatusInput = {\r\n              bidtStockMvt: material._obj,\r\n              operationId: operation.id as number,\r\n              bidtDfItem: material.item as BidtDfItemDTO,\r\n              newStatus: AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED\r\n            };\r\n            imputList.push(updatepackageInput);\r\n          });\r\n        });\r\n        this.performStockMovementOperations(imputList);\r\n      }\r\n    });\r\n  }\r\n\r\n  public addPackageDialog() {\r\n    this.openAddPackageDialog = true;\r\n  }\r\n\r\n  public addItemDialog() {\r\n    this.openAddItemDialog = true;\r\n  }\r\n\r\n  public addMaterialDialog() {\r\n    this.openAddMaterialDialog = true;\r\n  }\r\n\r\n  public openDocumentDialog(dfTypeOperation: BidtDfTypeOperationDTO) {\r\n    this.selectedOperation = dfTypeOperation;\r\n    this.openDocumentCategorieDialog = true;\r\n  }\r\n\r\n  public openSelectedGoods() {\r\n    // TODO\r\n  }\r\n\r\n  /***********************************************\r\n   * Control Quantity Visibility\r\n   ***********************************************/\r\n  public getControlQuantityVisibility(rowData: BidtDfItemCustomDTO): boolean {\r\n    const COMPLETED = 100;\r\n    let isQuantityEnabled = false;\r\n    this.parcelTableData.filter((res) => {\r\n      if (res.progress === COMPLETED && rowData.packageNumber === res.packageCode) {\r\n        isQuantityEnabled = true;\r\n      }\r\n    });\r\n\r\n    return isQuantityEnabled;\r\n  }\r\n\r\n  public getPresentialVisibility(rowData: MaterialCustomDTO): boolean {\r\n    let isPresentialEnabled = false;\r\n    this.postsTableData.filter((res) => {\r\n      if (res.controlQuantity && rowData.packageNum === res.bidtPackageId) {\r\n        isPresentialEnabled = true;\r\n      }\r\n    });\r\n\r\n    return isPresentialEnabled;\r\n  }\r\n\r\n  /************************************\r\n   * Delete Package\r\n   ************************************/\r\n  public deleteReceiptPackage() {\r\n    this.selectedParcels.forEach((res) => {\r\n      const input: BidtPackageIdDTO = {\r\n        id: res.id\r\n      };\r\n\r\n      // C54\r\n      this.logisticService.deleteReceiptPackage(input).subscribe((data) => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeletePackages'));\r\n        this.selectedParcels = [];\r\n        this.refresh();\r\n      });\r\n    });\r\n  }\r\n\r\n  /************************************\r\n   * Delete Item\r\n   ************************************/\r\n  public deleteReceiptItem() {\r\n    this.selectedPost.forEach((res) => {\r\n      const input: BidtDfItemIdDTO = {\r\n        id: res.id\r\n      };\r\n\r\n      // C53\r\n      this.logisticService.deleteReceiptItem(input).subscribe((data) => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteItems'));\r\n        this.selectedPost = [];\r\n        this.refresh();\r\n      });\r\n    });\r\n  }\r\n\r\n  /************************************\r\n   * Delete Materials\r\n   ************************************/\r\n  public deleteReceiptMaterial() {\r\n    this.selectedMaterials.forEach((res) => {\r\n      const input: BidtStockMvtIdDTO = {\r\n        id: res._obj.id\r\n      };\r\n\r\n      // C55\r\n      this.logisticService.deleteReceiptMaterial(input).subscribe((data) => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteMaterial'));\r\n        this.selectedMaterials = [];\r\n        this.refresh();\r\n      });\r\n    });\r\n  }\r\n\r\n  // on create package\r\n  public onCreatePackage(event: BidtPackageDTO): void {\r\n    this.refresh();\r\n  }\r\n\r\n  // on create item\r\n  public onCreateItem(event: BidtDeliveryFolderDTO): void {\r\n    this.refresh();\r\n  }\r\n\r\n  // on create material\r\n  public onCreateMaterial(event: BidtStockMvtDTO): void {\r\n    this.refresh();\r\n  }\r\n\r\n  public showStatus(): void {\r\n    if (this.deliveryFolder.dfStatus !== AWPropertiesConstants.RECEIPT_FOLDER_STATUS_CANCELED) {\r\n      const overlayRef = this.overlayService.openWithPositionCenter<string | undefined>({\r\n        content: GoodReceiptStatusComponent,\r\n        data: this.deliveryFolder\r\n      });\r\n\r\n      overlayRef.afterClosed$.subscribe({\r\n        next: (event) => {\r\n          if (event.data) {\r\n            if (event.data === AWPropertiesConstants.RECEIPT_FOLDER_STATUS_ON_GOING) {\r\n              const input = ListUtils.orEmpty(this.deliveryFolder.bidtDfItems).map((dfItem) => {\r\n                return {\r\n                  bidtDfItemDTO: dfItem,\r\n                  newStatus: AWPropertiesConstants.RECEIPT_FOLDER_STATUS_ON_GOING\r\n                };\r\n              });\r\n              this.goodsReceiptFormService.updateItemsStatus(input).subscribe(() => {\r\n                this.refresh();\r\n              });\r\n            } else {\r\n              this.deliveryFolder.dfStatus = event.data;\r\n              this.save();\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public save(): void {\r\n    this.goodsReceiptFormService.addOrUpdateReceiptFolder(this.deliveryFolder).subscribe({\r\n      next: (deliveryFolder) => {\r\n        this.deliveryFolderId = {\r\n          id: deliveryFolder.id\r\n        };\r\n        this.refresh();\r\n      }\r\n    });\r\n  }\r\n\r\n  public openLinkEquipment(code: string): void {\r\n    if (code) {\r\n      this.openEquipment(code, ComponentOpenMode.Read);\r\n    }\r\n  }\r\n\r\n  public openEquipment(objectId: string | undefined, openMode: ComponentOpenMode): void {\r\n    const labelKey = 'transaction.EquipmentFormComponent';\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: 'EquipmentFormComponent',\r\n      openMode\r\n    };\r\n    if (!!objectId) {\r\n      const equipmentId: BidoEquipmentDTOId = {\r\n        equipmentCode: objectId\r\n      };\r\n      data.objectId = this.serializationService.serialize(equipmentId);\r\n    }\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public openLink(equipment: BidoEquipmentDTO) {\r\n    if (equipment.sn) {\r\n      this.openEquipment(equipment.equipmentCode, ComponentOpenMode.Read);\r\n    } else {\r\n      this.openSelectedBatch(equipment.equipmentCode as string);\r\n    }\r\n  }\r\n\r\n  public openSelectedBatch(code: string) {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_PACKAGING_BATCH_FORM,\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n\r\n    data.objectId = code;\r\n\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (!!event.files) {\r\n      const file: File = event.files[0];\r\n\r\n      // Check if the file already exists\r\n      const fileExists = this.documentTableDataSource.data.some((document) => document.documentName === file.name);\r\n      if (fileExists) {\r\n        this.messageService.showWarningMessage('global.warningOnFileExists');\r\n      } else {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          if (!!fileContent) {\r\n            const selectedDocumentType = this.documentTypes.find(\r\n              (documentType) => !!file.type && (documentType.value as string) === file.type\r\n            );\r\n            const document: BidtDocumentDTO = {\r\n              documentContent: fileContent,\r\n              documentName: file.name,\r\n              documentType: !!selectedDocumentType ? StringUtils.orEmpty(selectedDocumentType.label) : '',\r\n              documentPublicationDate: new Date()\r\n            };\r\n\r\n            this.deliveryFolder.bidtDocuments = [...ListUtils.orEmpty(this.deliveryFolder.bidtDocuments), document];\r\n            this.documentTableDataSource.addData([document]);\r\n            this.saveBidtDocuments();\r\n          }\r\n        });\r\n      }\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public downloadFiles(): void {\r\n    this.documentTableDataSource.dataSelection.forEach((documentRow) => {\r\n      if (!!documentRow) {\r\n        FileUtils.downloadFile(documentRow.documentContent, documentRow.documentName);\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveBidtDocuments(): void {\r\n    if (this.deliveryFolder.bidtDocuments) {\r\n      const saveDocumentDeliveryFolderInput: SaveDocumentDeliveryFolderInput = {\r\n        deliveryFolderDTO: this.deliveryFolder,\r\n        documentList: this.deliveryFolder.bidtDocuments\r\n      };\r\n\r\n      this.goodsReceiptFormService.saveDocuments(saveDocumentDeliveryFolderInput).subscribe((document) => {\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnCreateDocument'));\r\n      });\r\n    }\r\n  }\r\n\r\n  public deleteDocuments(): void {\r\n    this.documentTableDataSource.dataSelection.forEach((selection) => {\r\n      this.deleteDocument.push(this.goodsReceiptFormService.deleteByid(selection.id as number));\r\n    });\r\n\r\n    forkJoin(this.deleteDocument).subscribe((result) => {\r\n      this.messageService.showSuccessMessage(this.getTranslateKey('successOnDeleteDocument'));\r\n      this.refresh();\r\n    });\r\n  }\r\n\r\n  public isDeliveryFolderDraftStatus(): boolean {\r\n    if (this.deliveryFolder.dfStatus === AWPropertiesConstants.RECEIPT_FOLDER_STATUS_DRAFT) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isDeliveryFolderPerformedStatus(): boolean {\r\n    if (this.deliveryFolder.dfStatus === AWPropertiesConstants.RECEIPT_FOLDER_STATUS_PERFORMED) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isUserCanAddHaveRightOnDeliveryFolder(): boolean {\r\n    return this.sessionService.hasUserRightByUseCase(\r\n      BidoFunctionTypeConstants.UC_MM_RECEIVING,\r\n      BidoFunctionTypeConstants.DEGREE_MANAGE\r\n    );\r\n  }\r\n\r\n  public openMfgBatch(objectId: string | undefined): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_MANUFACTURING_BATCH_FORM,\r\n      objectId: objectId ? this.serializationService.serialize({ customerCode: objectId }) : undefined,\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  /**********************************\r\n   * OPEN PART NUMBER UC\r\n   **********************************/\r\n  public openPartNumberLink(item: BidtDfItemCustomDTO): void {\r\n    this.openPN(item.birePnPnCode, ComponentOpenMode.Read);\r\n  }\r\n\r\n  private openPN(objectId: string | undefined, openMode: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.ENG_PART_NUMBER_FORM,\r\n      objectId,\r\n      openMode\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  /**********************************\r\n   * open shipment folder\r\n   **********************************/\r\n  public openShipmentFolder(): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_GOODS_SHIPMENT_FORM,\r\n      openMode: ComponentOpenMode.Read,\r\n      objectId: this.serializationService.serialize({ id: this.shipmentFolderLinked.id })\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  /**********************************\r\n   * go to stockpilling\r\n   **********************************/\r\n  public toStockpilling(): void {\r\n    this.searchService.findByCriteria(this.getSearchCriteriaStockpilling()).subscribe((mvtList) => {\r\n      const params: StockMvtParameters = {\r\n        searchParameters: this.getSearchCriteriaStockpilling(),\r\n        bidtStockList: mvtList,\r\n        bidtReceiptFolder: this.deliveryFolder\r\n      };\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.LOG_STOCK_MOVEMENTS_FORM_STOCKPILLING,\r\n        openMode: ComponentOpenMode.Read,\r\n        objectId: this.serializationService.serialize(params)\r\n      };\r\n      const labelKey = 'transaction.' + data.componentId;\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    });\r\n  }\r\n\r\n  private getSearchCriteriaStockpilling(): FindStockMvtsByCriteriaInput {\r\n    const searchCriteria: FindStockMvtsByCriteriaInput = {\r\n      mvtStatus: [],\r\n      mvtStatusExcluded: [\r\n        AWPropertiesConstants.MM_MVT_STATUS_CANCELED_KEY,\r\n        AWPropertiesConstants.MM_MVT_STATUS_EXECUTED_KEY\r\n      ],\r\n      untilPlannedDate: new Date(),\r\n      untilRealDate: undefined,\r\n      stockMvt: {\r\n        bidtSiteByBidtSiteIssueId: undefined,\r\n        bidtSiteByBidtSiteReceiptId: this.deliveryFolder.bidtSiteReceiver\r\n          ? this.deliveryFolder.bidtSiteReceiver.siteId\r\n          : undefined,\r\n        bidtWarehouseByBidtWarehouseIssueId: undefined,\r\n        bidtWarehouseByBidtWarehouseReceiptId: this.deliveryFolder.bidtWarehouseReceiver\r\n          ? this.deliveryFolder.bidtWarehouseReceiver.wareHouseId\r\n          : undefined,\r\n        bidtStockMvtTypeId: BidtStockMvtTypeConstant.STORAGE\r\n      },\r\n      finalReceiverCustomerCode: undefined,\r\n      finalReceiverSiteId: undefined,\r\n      finalReceiverWarehouseId: undefined,\r\n      pnCode: undefined,\r\n      withAlternatives: false,\r\n      criticality: undefined,\r\n      dfShipmentSearch: false\r\n    };\r\n\r\n    return searchCriteria;\r\n  }\r\n\r\n  /**********************************\r\n   * go to crossDocking\r\n   **********************************/\r\n  public toCrossDocking(): void {\r\n    this.searchService.findByCriteria(this.getSearchCriteriaCrossDocking()).subscribe((mvtList) => {\r\n      const params: StockMvtParameters = {\r\n        searchParameters: this.getSearchCriteriaCrossDocking(),\r\n        bidtStockList: mvtList,\r\n        bidtReceiptFolder: this.deliveryFolder\r\n      };\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.LOG_STOCK_MOVEMENTS_FORM,\r\n        openMode: ComponentOpenMode.Read,\r\n        objectId: this.serializationService.serialize(params)\r\n      };\r\n      const labelKey = 'transaction.' + data.componentId;\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    });\r\n  }\r\n\r\n  private getSearchCriteriaCrossDocking(): FindStockMvtsByCriteriaInput {\r\n    const searchCriteria: FindStockMvtsByCriteriaInput = {\r\n      mvtStatus: [],\r\n      mvtStatusExcluded: [\r\n        AWPropertiesConstants.MM_MVT_STATUS_CANCELED_KEY,\r\n        AWPropertiesConstants.MM_MVT_STATUS_EXECUTED_KEY\r\n      ],\r\n      untilPlannedDate: new Date(),\r\n      stockMvt: {\r\n        bidtSiteByBidtSiteReceiptId: this.deliveryFolder.bidtSiteReceiver\r\n          ? this.deliveryFolder.bidtSiteReceiver.siteId\r\n          : undefined,\r\n        bidtWarehouseByBidtWarehouseReceiptId: this.deliveryFolder.bidtWarehouseReceiver\r\n          ? this.deliveryFolder.bidtWarehouseReceiver.wareHouseId\r\n          : undefined,\r\n        bidtStockMvtTypeId: BidtStockMvtTypeConstant.CROSS_DOCKING\r\n      },\r\n      withAlternatives: false,\r\n      dfShipmentSearch: false\r\n    };\r\n\r\n    return searchCriteria;\r\n  }\r\n\r\n  /**********************************\r\n   * OPEN TRANSFERT ORDER\r\n   **********************************/\r\n  public openOrder(id: number | undefined) {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_TRANSFER_ORDER_FORM,\r\n      objectId: this.serializationService.serialize(id),\r\n      openMode: ComponentOpenMode.Read\r\n    };\r\n\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public toNumber(str: string): number {\r\n    return Number(str);\r\n  }\r\n\r\n  public scanAsset(): void {\r\n    this.assetScanDialogVisible = true;\r\n  }\r\n\r\n  public onScanAssetBatchNumber(batchNumber: string): void {\r\n    const matchingAsset = this.materialTableData.find((elt) => elt._obj.stockMvtBatchNumber === batchNumber);\r\n\r\n    if (!matchingAsset) {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('noAssetWithBatchNumber'));\r\n    } else {\r\n      const bidtDfItem = matchingAsset.item as BidtDfItemDTO;\r\n      const bidtPackage = bidtDfItem.bidtPackage as BidtPackageDTO;\r\n      const bidtPackageOperation = ListUtils.orEmpty(bidtPackage.bidtPackageOperations).find(\r\n        (operation) => operation.packopeDesignation === AWPropertiesConstants.LOGISTICAL_OPERATION_PHYSICAL_RECEIPT\r\n      );\r\n\r\n      if (\r\n        !!bidtPackageOperation &&\r\n        bidtPackageOperation.packopeStatus !== AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED\r\n      ) {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('physicalReceiptOnPackageNotPerformed'));\r\n      } else {\r\n        const operationCheck = this.getMaterialOperation(\r\n          matchingAsset._obj.bidtStockMvtOperations as BidtStockMvtOperationDTO[],\r\n          AWPropertiesConstants.LOGISTICAL_OPERATION_VISUAL_CONTROL\r\n        );\r\n\r\n        if (operationCheck && operationCheck.bidtStockMvtOperationDTO) {\r\n          if (this.isStatusPerformed(operationCheck.bidtStockMvtOperationDTO.smoStatus as string)) {\r\n            this.messageService.showWarningMessage(this.getTranslateKey('visualControlAlreadyPerformed'));\r\n          } else {\r\n            const input: UpdateStockMvtOperationStatusInput = {\r\n              bidtStockMvt: matchingAsset._obj,\r\n              operationId: operationCheck.bidtStockMvtOperationDTO.id as number,\r\n              bidtDfItem: matchingAsset.item as BidtDfItemDTO,\r\n              newStatus: AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED\r\n            };\r\n            this.performStockMovementOperations([input]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { FileUploadModule } from 'primeng/primeng';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DialogSearchCustomerModule } from '../../../shared/components/dialog-search-customer/dialog-search-customer.module';\r\nimport { DialogSearchEquipmentModule } from '../../../shared/components/dialog-search-equipment/dialog-search-equipment.module';\r\nimport { DialogSearchPnModule } from '../../../shared/components/dialog-search-pn/dialog-search-pn.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { CatalogService } from '../../administration/catalog/catalog.service';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\nimport { SearchService } from '../stock-movements/search/search.service';\r\nimport { TransferOrderService } from '../transfer-order/shared/transfer-order-service';\r\n\r\nimport { DeliveryFolderSearchService } from './delivery-folder-search.service';\r\nimport { DialogAddItemComponent } from './form/dialog-add-item/dialog-add-item.component';\r\nimport { DialogAddMaterialComponent } from './form/dialog-add-material/dialog-add-material.component';\r\nimport { DialogAddPackageComponent } from './form/dialog-add-package/dialog-add-package.component';\r\nimport { DialogCreateLitigationComponent } from './form/dialog-create-litigation/dialog-create-litigation.component';\r\nimport { DialogDocumentCategoriesReceiptFolderComponent } from './form/dialog-document-categories/dialog-document-categories.component';\r\nimport { GoodsReceiptFormComponent } from './form/goods-receipt-form.component';\r\nimport { GoodsReceiptFormService } from './form/goods-receipt-form.service';\r\nimport { DialogGoodsReceiptAssetScanComponent } from './search/dialog-asset-scan/dialog-asset-scan.component';\r\nimport { DialogCreateReceiptComponent } from './search/dialog-create-receipt/dialog-create-receipt.component';\r\nimport { DialogGoodsReceiptPackageScanComponent } from './search/dialog-package-scan/dialog-package-scan.component';\r\nimport { ExternalGoodReceiptSearchComponent } from './search/external-good-receipt-search.components';\r\nimport { LocalGoodReceiptSearchComponent } from './search/local-good-receipt-search.components';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  PrimeNgTableModule,\r\n  FileUploadModule,\r\n  TooltipModule,\r\n  DropdownModule,\r\n  TableModule,\r\n  CheckboxModule,\r\n  SelectButtonModule,\r\n  CalendarModule,\r\n  OverlayPanelModule,\r\n  ProgressBarModule,\r\n  InputTextareaModule,\r\n  ComponentSidebarModule,\r\n  ModalModule,\r\n  DialogSearchCustomerModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [DialogSearchPnModule, DialogSearchEquipmentModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [];\r\n\r\nconst DYNAMIC_COMPONENTS = [\r\n  GoodsReceiptFormComponent,\r\n  LocalGoodReceiptSearchComponent,\r\n  ExternalGoodReceiptSearchComponent,\r\n  DialogCreateLitigationComponent,\r\n  DialogGoodsReceiptAssetScanComponent,\r\n  DialogGoodsReceiptPackageScanComponent,\r\n  DialogCreateReceiptComponent,\r\n  DialogAddPackageComponent,\r\n  DialogAddItemComponent,\r\n  DialogAddMaterialComponent,\r\n  DialogDocumentCategoriesReceiptFolderComponent\r\n];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [\r\n  GoodsReceiptFormService,\r\n  DeliveryFolderSearchService,\r\n  CatalogService,\r\n  SearchService,\r\n  TransferOrderService\r\n];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class GoodsReceiptModule {}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"25\\\">\\r\\n  <a-content>\\r\\n    <div class=\\\"column container\\\">\\r\\n      <i class=\\\"fa fa-fw fa-qrcode icon\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\r\\n      <span class=\\\"label\\\">\\r\\n        {{ getComponentName() + \\\".scan\\\" | translate }}\\r\\n      </span>\\r\\n\\r\\n      <input #codeInput type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"code\\\" (keyup)=\\\"onScan(code)\\\" />\\r\\n    </div>\\r\\n  </a-content>\\r\\n</a-modal>\\r\\n\"","module.exports = \":host .container {\\n  align-items: center; }\\n  :host .container input {\\n    opacity: 0; }\\n  :host .container .icon {\\n    font-size: 8rem; }\\n  :host .container .label {\\n    font-size: 1.25rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvZ29vZHMtcmVjZWlwdC9zZWFyY2gvZGlhbG9nLWFzc2V0LXNjYW4vRDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxmcm9udGVuZF9hZXJvd2ViYi9zcmNcXGFwcFxcbWFpblxcbG9naXN0aWNzXFxnb29kcy1yZWNlaXB0XFxzZWFyY2hcXGRpYWxvZy1hc3NldC1zY2FuXFxkaWFsb2ctYXNzZXQtc2Nhbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLG1CQUFtQixFQUFBO0VBRnZCO0lBS00sVUFBVSxFQUFBO0VBTGhCO0lBU00sZUFBZSxFQUFBO0VBVHJCO0lBYU0sa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2xvZ2lzdGljcy9nb29kcy1yZWNlaXB0L3NlYXJjaC9kaWFsb2ctYXNzZXQtc2Nhbi9kaWFsb2ctYXNzZXQtc2Nhbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAuY29udGFpbmVyIHtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICAgaW5wdXQge1xyXG4gICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC5pY29uIHtcclxuICAgICAgZm9udC1zaXplOiA4cmVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5sYWJlbCB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19 */\"","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-goods-receipt-scan-asset',\r\n  templateUrl: './dialog-asset-scan.component.html',\r\n  styleUrls: ['./dialog-asset-scan.component.scss']\r\n})\r\nexport class DialogGoodsReceiptAssetScanComponent extends DialogComponent implements AfterViewInit {\r\n  private static readonly CODE_DEBOUNCE_TIME: number = 1000;\r\n\r\n  @Input()\r\n  public keepDialogOpened: boolean;\r\n\r\n  @Output()\r\n  public onValidate: EventEmitter<string>;\r\n\r\n  @ViewChild('codeInput')\r\n  public codeInputElt: ElementRef<HTMLElement>;\r\n\r\n  public codeChanged: Subject<string>;\r\n  public code: string;\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public constructor(private readonly messageService: MessageService) {\r\n    super(ComponentOpenMode.Read, 'DialogGoodsReceiptAssetScanComponent');\r\n\r\n    this.keepDialogOpened = false;\r\n    this.onValidate = new EventEmitter<string>();\r\n\r\n    this.code = '';\r\n\r\n    this.registerCodeObservable();\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.codeInputElt.nativeElement.focus();\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public onScan(searchTextValue: string) {\r\n    this.codeChanged.next(searchTextValue);\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  private registerCodeObservable(): void {\r\n    this.codeChanged = new Subject<string>();\r\n    this.codeChanged\r\n      .pipe(\r\n        debounceTime(DialogGoodsReceiptAssetScanComponent.CODE_DEBOUNCE_TIME),\r\n        distinctUntilChanged(),\r\n        takeUntil(this.unsubscribe)\r\n      )\r\n      .subscribe({\r\n        next: (value) => {\r\n          if (value) {\r\n            try {\r\n              this.onValidate.emit(value);\r\n\r\n              if (!this.keepDialogOpened) {\r\n                this.closeDialog();\r\n              }\r\n            } catch (error) {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('errorOnParsing'));\r\n            }\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"75\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"section\\\">\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group required\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".receptionType\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                appendTo=\\\"body\\\"\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [options]=\\\"dfTypes\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"selectedDfType\\\"\\r\\n                (onChange)=\\\"onSelectedDfTypeChange()\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group required\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".expectedDate\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-calendar\\r\\n                showButtonBar=\\\"true\\\"\\r\\n                [monthNavigator]=\\\"true\\\"\\r\\n                [yearNavigator]=\\\"true\\\"\\r\\n                [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                appendTo=\\\"body\\\"\\r\\n                class=\\\"aw-calendar\\\"\\r\\n                [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                [(ngModel)]=\\\"selectedPlannedDate\\\"\\r\\n              ></p-calendar>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\" style=\\\"height: 47px;\\\">\\r\\n            <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".critical\\\" | translate }} </label>\\r\\n\\r\\n            <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n              <p-selectButton [options]=\\\"criticalities\\\" [(ngModel)]=\\\"selectedCriticality\\\"></p-selectButton>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"section\\\">\\r\\n      <h4 class=\\\"section-title\\\">{{ getComponentName() + \\\".recipient\\\" | translate }}</h4>\\r\\n\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group required\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".site\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                appendTo=\\\"body\\\"\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [options]=\\\"sites\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"selectedRecipientSite\\\"\\r\\n                (onChange)=\\\"onChangeRecipientSite()\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group flex--2\\\" style=\\\"height: 47px;\\\">\\r\\n            <label class=\\\"form-label\\\">\\r\\n              {{ selectedRecipientWarehouseCategory | formatSelectOption: warehouseCategories }}\\r\\n            </label>\\r\\n\\r\\n            <div class=\\\"form-control aw-selectbutton-wrapper aw-selectbutton-with-dropdown\\\">\\r\\n              <p-selectButton\\r\\n                [options]=\\\"warehouseCategories\\\"\\r\\n                [(ngModel)]=\\\"selectedRecipientWarehouseCategory\\\"\\r\\n                (onChange)=\\\"onChangeRecipientWarehouseCategory()\\\"\\r\\n              ></p-selectButton>\\r\\n\\r\\n              <p-dropdown\\r\\n                appendTo=\\\"body\\\"\\r\\n                class=\\\"aw-dropdown\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [options]=\\\"recipientWarehouses\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"selectedRecipientWarehouse\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"section\\\">\\r\\n      <h4 class=\\\"section-title\\\">{{ getComponentName() + \\\".sender\\\" | translate }}</h4>\\r\\n\\r\\n      <div class=\\\"section-content\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!showPartnerDropdown || contextComponent == componentContext.LOCALE\\\">\\r\\n          <div class=\\\"form-group required\\\">\\r\\n            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".site\\\" | translate }}</label>\\r\\n\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <p-dropdown\\r\\n                appendTo=\\\"body\\\"\\r\\n                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [options]=\\\"sites\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"selectedShipperSite\\\"\\r\\n                (onChange)=\\\"onChangeShipperSite()\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group flex--2\\\" style=\\\"height: 47px;\\\">\\r\\n            <label class=\\\"form-label\\\">\\r\\n              {{ selectedShipperWarehouseCategory | formatSelectOption: warehouseCategories }}\\r\\n            </label>\\r\\n\\r\\n            <div class=\\\"form-control aw-selectbutton-wrapper aw-selectbutton-with-dropdown\\\">\\r\\n              <p-selectButton\\r\\n                [options]=\\\"warehouseCategories\\\"\\r\\n                [(ngModel)]=\\\"selectedShipperWarehouseCategory\\\"\\r\\n                (onChange)=\\\"onChangeShipperWarehouseCategory()\\\"\\r\\n              ></p-selectButton>\\r\\n\\r\\n              <p-dropdown\\r\\n                appendTo=\\\"body\\\"\\r\\n                class=\\\"aw-dropdown\\\"\\r\\n                placeholder=\\\"&nbsp;\\\"\\r\\n                [options]=\\\"shipperWarehouses\\\"\\r\\n                [showClear]=\\\"true\\\"\\r\\n                [(ngModel)]=\\\"selectedShipperWarehouse\\\"\\r\\n              ></p-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"showPartnerDropdown && contextComponent == componentContext.EXTERNAL\\\">\\r\\n        <div class=\\\"form-group required\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".partner\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              appendTo=\\\"body\\\"\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [options]=\\\"businessPartnerList\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"bidoCustomerSender\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\"></div>\\r\\n        <div class=\\\"form-group\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"section\\\">\\r\\n      <div\\r\\n        class=\\\"section-content\\\"\\r\\n        *ngIf=\\\"selectedRecipientWarehouse && selectedRecipientWarehouse === selectedShipperWarehouse\\\"\\r\\n      >\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"form-label warning\\\">{{ getComponentName() + \\\".warningMessage\\\" | translate }}</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button mat-raised-button type=\\\"button\\\" (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      [disabled]=\\\"!canValidate() || !isSitesOk()\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \":host .form-label.warning {\\n  color: #a82525 !important;\\n  font-style: italic; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvZ29vZHMtcmVjZWlwdC9zZWFyY2gvZGlhbG9nLWNyZWF0ZS1yZWNlaXB0L0Q6XFxQcm9maWxlc1xcYXByYWRoYW5cXERlc2t0b3BcXEFlcm93ZWJiXFxQUk9KRUNUU1xcZnJvbnRlbmRfYWVyb3dlYmIvc3JjXFxhcHBcXG1haW5cXGxvZ2lzdGljc1xcZ29vZHMtcmVjZWlwdFxcc2VhcmNoXFxkaWFsb2ctY3JlYXRlLXJlY2VpcHRcXGRpYWxvZy1jcmVhdGUtcmVjZWlwdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUdNLHlCQUE0QjtFQUM1QixrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vbG9naXN0aWNzL2dvb2RzLXJlY2VpcHQvc2VhcmNoL2RpYWxvZy1jcmVhdGUtcmVjZWlwdC9kaWFsb2ctY3JlYXRlLXJlY2VpcHQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiY29uc3RhbnRzXCI7XHJcblxyXG46aG9zdCB7XHJcbiAgLmZvcm0tbGFiZWwge1xyXG4gICAgJi53YXJuaW5nIHtcclxuICAgICAgY29sb3I6ICRyZWQtZGFyazEgIWltcG9ydGFudDtcclxuICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AWPropertiesConstants } from '../../../../../shared/constants/aw-properties-constants';\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { ExtractTranslationPipe } from '../../../../../shared/pipes/extract-translation.pipe';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidoCustomerDTO } from '../../../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { BidtDeliveryFolderDTO } from '../../../../../shared/types/api-types/bidt-delivery-folder-dto.interface';\r\nimport { BidtDfTypeDTO } from '../../../../../shared/types/api-types/bidt-df-type-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { ListUtils } from '../../../../../shared/utils/list-utils';\r\nimport { StringUtils } from '../../../../../shared/utils/string-utils';\r\nimport { LogisticsService } from '../../../logistics.service';\r\nimport { DeliveryFolderSearchService } from '../../delivery-folder-search.service';\r\n\r\nexport enum ComponentContext {\r\n  LOCALE,\r\n  EXTERNAL\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-create-receipt',\r\n  templateUrl: './dialog-create-receipt.component.html',\r\n  styleUrls: ['./dialog-create-receipt.component.scss']\r\n})\r\nexport class DialogCreateReceiptComponent extends DialogComponent {\r\n  @Input()\r\n  public readonly contextComponent: number;\r\n\r\n  @Output()\r\n  public readonly onValidate: EventEmitter<BidtDeliveryFolderDTO>;\r\n\r\n  public readonly componentContext: typeof ComponentContext;\r\n  public criticalities: LabelValue<string | undefined>[];\r\n  public dfTypes: LabelValue<BidtDfTypeDTO>[];\r\n  public recipientWarehouses: LabelValue<number>[];\r\n  public shipperWarehouses: LabelValue<number>[];\r\n  public sites: LabelValue<number>[];\r\n  public warehouseCategories: LabelValue<string>[];\r\n\r\n  public selectedCriticality: string | undefined;\r\n  public selectedDfType: BidtDfTypeDTO | undefined;\r\n  public selectedPlannedDate: Date | undefined;\r\n  public selectedRecipientSite: number | undefined;\r\n  public selectedRecipientWarehouse: number | undefined;\r\n  public selectedRecipientWarehouseCategory: string | undefined;\r\n  public selectedShipperSite: number | undefined;\r\n  public selectedShipperWarehouse: number | undefined;\r\n  public selectedShipperWarehouseCategory: string | undefined;\r\n  public showPartnerDropdown: boolean;\r\n  public businessPartnerList: SelectItem[];\r\n  public bidoCustomerReceiver: BidoCustomerDTO;\r\n  public bidoCustomerSender: BidoCustomerDTO;\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly extractTranslationPipe: ExtractTranslationPipe,\r\n    private readonly dfSearchService: DeliveryFolderSearchService,\r\n    private readonly logisticsService: LogisticsService,\r\n    private readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogCreateReceiptComponent');\r\n    this.componentContext = ComponentContext;\r\n    this.onValidate = new EventEmitter<BidtDeliveryFolderDTO>();\r\n\r\n    this.init();\r\n    this.loadSites();\r\n    this.loadWarehouseCategories();\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  public canValidate(): boolean {\r\n    return this.selectedDfType &&\r\n      (this.selectedRecipientWarehouse || (this.bidoCustomerReceiver && this.bidoCustomerReceiver.customerCode)) &&\r\n      (this.selectedShipperWarehouse || (this.bidoCustomerSender && this.bidoCustomerSender.customerCode)) &&\r\n      this.selectedRecipientWarehouse !== this.selectedShipperWarehouse\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  public isSitesOk(): boolean {\r\n    if (\r\n      this.selectedDfType &&\r\n      this.selectedDfType.transferType === AWPropertiesConstants.MM_TRANSFER_TYPE_INTRA_SITE_KEY\r\n    ) {\r\n      return this.selectedRecipientSite === this.selectedShipperSite;\r\n    } else if (\r\n      this.selectedDfType &&\r\n      this.selectedDfType.transferType === AWPropertiesConstants.MM_TRANSFER_TYPE_INTER_SITE_KEY\r\n    ) {\r\n      return this.selectedRecipientSite !== this.selectedShipperSite;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public onChangeRecipientSite(): void {\r\n    this.onChangeRecipientWarehouseCategory();\r\n  }\r\n\r\n  public onChangeRecipientWarehouseCategory(): void {\r\n    this.unselectRecipientWarehouse();\r\n\r\n    if (this.selectedRecipientSite) {\r\n      this.loadWareHouses(this.selectedRecipientSite, this.selectedRecipientWarehouseCategory as string).subscribe({\r\n        next: (warehouses) => {\r\n          this.recipientWarehouses = warehouses;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public onChangeShipperSite(): void {\r\n    this.onChangeShipperWarehouseCategory();\r\n  }\r\n\r\n  public onChangeShipperWarehouseCategory(): void {\r\n    this.unselectShipperWarehouse();\r\n\r\n    if (this.selectedShipperSite) {\r\n      this.loadWareHouses(this.selectedShipperSite, this.selectedShipperWarehouseCategory as string).subscribe({\r\n        next: (warehouses) => {\r\n          this.shipperWarehouses = warehouses;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    const input: BidtDeliveryFolderDTO = {\r\n      bidtDfTypeId: this.selectedDfType && this.selectedDfType.id,\r\n      bidtSiteByBidtSiteReceiverId: this.selectedRecipientSite,\r\n      bidtSiteByBidtSiteSenderId: this.selectedShipperSite,\r\n      bidtWarehouseByBidtWarehouseReceiverId: this.selectedRecipientWarehouse,\r\n      bidtWarehouseByBidtWarehouseSenderId: this.selectedShipperWarehouse,\r\n      criticality: this.selectedCriticality,\r\n      plannedDate: this.selectedPlannedDate,\r\n      bidoCustomerReceiver: this.bidoCustomerReceiver,\r\n      bidoCustomerSender: this.bidoCustomerSender\r\n    };\r\n    this.logisticsService.addOrUpdateReceiptFolder(input).subscribe((res) => {\r\n      this.onValidate.emit(res);\r\n      this.messageService.showSuccessMessage(this.getTranslateKey('successOnCreate'));\r\n\r\n      this.closeDialog();\r\n    });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  private init(): void {\r\n    this.criticalities = [];\r\n    this.dfTypes = [];\r\n    this.recipientWarehouses = [];\r\n    this.shipperWarehouses = [];\r\n    this.sites = [];\r\n    this.warehouseCategories = [];\r\n    this.bidoCustomerReceiver = {};\r\n\r\n    this.selectedCriticality = AWPropertiesConstants.LOGISTICAL_CRITICALITY_ROUTINE;\r\n    this.selectedDfType = undefined;\r\n    this.selectedPlannedDate = new Date();\r\n    this.selectedRecipientSite = undefined;\r\n    this.selectedRecipientWarehouse = undefined;\r\n    this.selectedRecipientWarehouseCategory = undefined;\r\n    this.selectedShipperSite = undefined;\r\n    this.selectedShipperWarehouse = undefined;\r\n    this.selectedShipperWarehouseCategory = undefined;\r\n    this.showPartnerDropdown = false;\r\n    this.businessPartnerList = [];\r\n\r\n    this.loadCriticalities();\r\n    this.loadDfTypes();\r\n    this.loadSites();\r\n    this.loadWarehouseCategories();\r\n    this.loadBusinessPartnerList();\r\n  }\r\n\r\n  private loadCriticalities(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.LOGISTICAL_CRITICALITY_MAP).subscribe({\r\n      next: (criticalities) => {\r\n        this.criticalities = criticalities.map((criticality) => {\r\n          return {\r\n            label: criticality.label,\r\n            value: criticality.value\r\n          };\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadDfTypes(): void {\r\n    this.logisticsService.findReceiptDfTypes().subscribe({\r\n      next: (dfTypes) => {\r\n        if (this.contextComponent === this.componentContext.LOCALE) {\r\n          this.dfTypes = ListUtils.orEmpty(dfTypes)\r\n            .filter((dfType) => !StringUtils.isNullOrEmpty(dfType.dftDesignation))\r\n            .filter((dfType) => dfType.transferType === AWPropertiesConstants.MM_TRANSFER_TYPE_INTRA_SITE_KEY)\r\n            .map((dfType) => {\r\n              return {\r\n                label: StringUtils.orEmpty(this.extractTranslationPipe.transform(dfType.dftDesignation)),\r\n                value: dfType\r\n              };\r\n            })\r\n            .sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n\r\n          this.selectedDfType = this.dfTypes.length === 1 ? this.dfTypes[0].value : undefined;\r\n        } else {\r\n          this.dfTypes = ListUtils.orEmpty(dfTypes)\r\n            .filter((dfType) => !StringUtils.isNullOrEmpty(dfType.dftDesignation))\r\n            .filter(\r\n              (dfType) =>\r\n                dfType.transferType === AWPropertiesConstants.MM_TRANSFER_TYPE_INTER_SITE_KEY ||\r\n                dfType.transferType === AWPropertiesConstants.MM_TRANSFER_TYPE_EXTERNAL_KEY\r\n            )\r\n            .map((dfType) => {\r\n              return {\r\n                label: StringUtils.orEmpty(this.extractTranslationPipe.transform(dfType.dftDesignation)),\r\n                value: dfType\r\n              };\r\n            })\r\n            .sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n\r\n          this.selectedDfType = this.dfTypes.length === 1 ? this.dfTypes[0].value : undefined;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadBusinessPartnerList(): void {\r\n    this.logisticsService.findAllBidoCustomer().subscribe((results) => {\r\n      this.businessPartnerList = ListUtils.orEmpty(results)\r\n        .filter((customer) => !!customer.customerCode)\r\n        .map((customer) => {\r\n          return {\r\n            label: StringUtils.isNullOrEmpty(customer.customerName)\r\n              ? customer.customerCode\r\n              : `${customer.customerName} (${customer.customerCode})`,\r\n            value: customer\r\n          };\r\n        });\r\n    });\r\n  }\r\n\r\n  public onSelectedDfTypeChange(): void {\r\n    this.showPartnerDropdown =\r\n      (this.selectedDfType &&\r\n        this.selectedDfType.transferType === AWPropertiesConstants.MM_TRANSFER_TYPE_INTRA_SITE_KEY) ||\r\n      (this.selectedDfType &&\r\n        this.selectedDfType.transferType === AWPropertiesConstants.MM_TRANSFER_TYPE_INTER_SITE_KEY)\r\n        ? false\r\n        : true;\r\n  }\r\n\r\n  private loadSites(): void {\r\n    this.dfSearchService.findAllSiteList().subscribe({\r\n      next: (sites) => {\r\n        this.sites = ListUtils.orEmpty(sites)\r\n          .map((site) => {\r\n            return {\r\n              label: `${site.siteCode} - ${site.siteName}`,\r\n              value: site.siteId as number\r\n            };\r\n          })\r\n          .sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadWarehouseCategories(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.WAREHOUSE_CATEGORY_MAP).subscribe({\r\n      next: (warehouseCategories) => {\r\n        this.warehouseCategories = ListUtils.orEmpty(warehouseCategories).sort((s1, s2) =>\r\n          s1.value.localeCompare(s2.value)\r\n        );\r\n\r\n        const warehouseCategory = this.warehouseCategories.length > 0 ? this.warehouseCategories[0].value : undefined;\r\n        this.selectedRecipientWarehouseCategory = warehouseCategory;\r\n        this.selectedShipperWarehouseCategory = warehouseCategory;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadWareHouses(site: number, warehouseCategory: string): Observable<LabelValue<number>[]> {\r\n    return this.dfSearchService.getWarehousesBySiteId(site).pipe(\r\n      map((warehouses) => {\r\n        return ListUtils.orEmpty(warehouses)\r\n          .filter((warehouse) => warehouse.whCategory === warehouseCategory)\r\n          .map((warehouse) => {\r\n            return {\r\n              label: `${warehouse.whCode} - ${warehouse.whName}`,\r\n              value: warehouse.wareHouseId as number\r\n            };\r\n          })\r\n          .sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n      })\r\n    );\r\n  }\r\n\r\n  private unselectRecipientWarehouse(): void {\r\n    this.recipientWarehouses = [];\r\n    this.selectedRecipientWarehouse = undefined;\r\n  }\r\n\r\n  private unselectShipperWarehouse(): void {\r\n    this.shipperWarehouses = [];\r\n    this.selectedShipperWarehouse = undefined;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"25\\\">\\r\\n  <a-content>\\r\\n    <div class=\\\"column container\\\">\\r\\n      <i class=\\\"fa fa-fw fa-qrcode icon\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\r\\n      <span class=\\\"label\\\">\\r\\n        {{ getComponentName() + \\\".scan\\\" | translate }}\\r\\n      </span>\\r\\n\\r\\n      <input #codeInput type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"code\\\" (keyup)=\\\"onScan(code)\\\" />\\r\\n    </div>\\r\\n  </a-content>\\r\\n</a-modal>\\r\\n\"","module.exports = \":host .container {\\n  align-items: center; }\\n  :host .container input {\\n    opacity: 0; }\\n  :host .container .icon {\\n    font-size: 8rem; }\\n  :host .container .label {\\n    font-size: 1.25rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvZ29vZHMtcmVjZWlwdC9zZWFyY2gvZGlhbG9nLXBhY2thZ2Utc2Nhbi9EOlxcUHJvZmlsZXNcXGFwcmFkaGFuXFxEZXNrdG9wXFxBZXJvd2ViYlxcUFJPSkVDVFNcXGZyb250ZW5kX2Flcm93ZWJiL3NyY1xcYXBwXFxtYWluXFxsb2dpc3RpY3NcXGdvb2RzLXJlY2VpcHRcXHNlYXJjaFxcZGlhbG9nLXBhY2thZ2Utc2NhblxcZGlhbG9nLXBhY2thZ2Utc2Nhbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLG1CQUFtQixFQUFBO0VBRnZCO0lBS00sVUFBVSxFQUFBO0VBTGhCO0lBU00sZUFBZSxFQUFBO0VBVHJCO0lBYU0sa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tYWluL2xvZ2lzdGljcy9nb29kcy1yZWNlaXB0L3NlYXJjaC9kaWFsb2ctcGFja2FnZS1zY2FuL2RpYWxvZy1wYWNrYWdlLXNjYW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgLmNvbnRhaW5lciB7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgIGlucHV0IHtcclxuICAgICAgb3BhY2l0eTogMDtcclxuICAgIH1cclxuXHJcbiAgICAuaWNvbiB7XHJcbiAgICAgIGZvbnQtc2l6ZTogOHJlbTtcclxuICAgIH1cclxuXHJcbiAgICAubGFiZWwge1xyXG4gICAgICBmb250LXNpemU6IDEuMjVyZW07XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { AfterViewInit, Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-goods-receipt-scan',\r\n  templateUrl: './dialog-package-scan.component.html',\r\n  styleUrls: ['./dialog-package-scan.component.scss']\r\n})\r\nexport class DialogGoodsReceiptPackageScanComponent extends DialogComponent implements AfterViewInit {\r\n  private static readonly CODE_DEBOUNCE_TIME: number = 1000;\r\n\r\n  @Output()\r\n  public onValidate: EventEmitter<string>;\r\n\r\n  @ViewChild('codeInput')\r\n  public codeInputElt: ElementRef<HTMLElement>;\r\n\r\n  public codeChanged: Subject<string>;\r\n  public code: string;\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public constructor(private readonly messageService: MessageService) {\r\n    super(ComponentOpenMode.Read, 'DialogGoodsReceiptPackageScanComponent');\r\n\r\n    this.onValidate = new EventEmitter<string>();\r\n\r\n    this.code = '';\r\n\r\n    this.registerCodeObservable();\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.codeInputElt.nativeElement.focus();\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public onScan(searchTextValue: string) {\r\n    this.codeChanged.next(searchTextValue);\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  private registerCodeObservable(): void {\r\n    this.codeChanged = new Subject<string>();\r\n    this.codeChanged\r\n      .pipe(\r\n        debounceTime(DialogGoodsReceiptPackageScanComponent.CODE_DEBOUNCE_TIME),\r\n        distinctUntilChanged(),\r\n        takeUntil(this.unsubscribe)\r\n      )\r\n      .subscribe({\r\n        next: (value) => {\r\n          if (value) {\r\n            try {\r\n              this.onValidate.emit(value);\r\n              this.closeDialog();\r\n            } catch (error) {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('errorOnParsing'));\r\n            }\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { ExtractTranslationPipe } from '../../../../shared/pipes/extract-translation.pipe';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { LogisticsService } from '../../logistics.service';\r\nimport { TransferOrderService } from '../../transfer-order/shared/transfer-order-service';\r\nimport { DeliveryFolderSearchService } from '../delivery-folder-search.service';\r\n\r\nimport { ComponentContext, GoodsReceiptSearchComponent } from './goods-receipt-search.component';\r\n\r\n@Component({\r\n  selector: 'aw-local-goods-receipt-search',\r\n  styleUrls: ['./goods-receipt-search.component.scss'],\r\n  templateUrl: './goods-receipt-search.component.html'\r\n})\r\nexport class ExternalGoodReceiptSearchComponent extends GoodsReceiptSearchComponent {\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public sessionService: SessionService,\r\n    public translateService: TranslateService,\r\n    public readonly dfSearchService: DeliveryFolderSearchService,\r\n    public readonly logisticsService: LogisticsService,\r\n    public readonly propertiesService: PropertiesService,\r\n    public readonly transferOrderService: TransferOrderService,\r\n    public readonly extractTranslationPipe: ExtractTranslationPipe\r\n  ) {\r\n    super(\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      sessionService,\r\n      translateService,\r\n      dfSearchService,\r\n      logisticsService,\r\n      propertiesService,\r\n      transferOrderService,\r\n      extractTranslationPipe\r\n    );\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_EXTERNAL_GOODS_RECEIPT_SEARCH;\r\n  }\r\n\r\n  public get getCurrentComponentContext(): number {\r\n    return ComponentContext.EXTERNAL;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </h2>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"scanPackage()\\\">\\r\\n      {{ componentData.componentId + \\\".scanPackage\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"scanAsset()\\\">\\r\\n      {{ componentData.componentId + \\\".scanAsset\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"isCreateButtonnIsVisible()\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"create()\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">{{ \\\"addToFavorite\\\" | translate }}</button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".recipient\\\" | translate }}</h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group required\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".site\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [options]=\\\"recipientSites\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"selectedRecipientSite\\\"\\r\\n                          (onChange)=\\\"onChangeRecipientSite()\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group flex--2\\\" style=\\\"height: 47px;\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ selectedRecipientWarehouseCategory | formatSelectOption: warehouseCategories }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control aw-selectbutton-wrapper aw-selectbutton-with-dropdown\\\">\\r\\n                        <p-selectButton\\r\\n                          [options]=\\\"warehouseCategories\\\"\\r\\n                          [(ngModel)]=\\\"selectedRecipientWarehouseCategory\\\"\\r\\n                          (onChange)=\\\"onChangeRecipientWarehouseCategory()\\\"\\r\\n                        ></p-selectButton>\\r\\n\\r\\n                        <p-dropdown\\r\\n                          appendTo=\\\"body\\\"\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [options]=\\\"recipientWarehouses\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"selectedRecipientWarehouse\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".sender\\\" | translate }}</h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".site\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [options]=\\\"shipperSites\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"selectedShipperSite\\\"\\r\\n                          (onChange)=\\\"onChangeShipperSite()\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group flex--2\\\" style=\\\"height: 47px;\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ selectedShipperWarehouseCategory | formatSelectOption: warehouseCategories }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control aw-selectbutton-wrapper aw-selectbutton-with-dropdown\\\">\\r\\n                        <p-selectButton\\r\\n                          [options]=\\\"warehouseCategories\\\"\\r\\n                          [(ngModel)]=\\\"selectedShipperWarehouseCategory\\\"\\r\\n                          (onChange)=\\\"onChangeShipperWarehouseCategory()\\\"\\r\\n                        ></p-selectButton>\\r\\n\\r\\n                        <p-dropdown\\r\\n                          appendTo=\\\"body\\\"\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [options]=\\\"shipperWarehouses\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"selectedShipperWarehouse\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".receptionFolder\\\" | translate }}</h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".folderNumber\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"selectedDfCode\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".receptionType\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [options]=\\\"dfTypes\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"selectedDfType\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\" style=\\\"height: 47px;\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".critical\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                        <p-selectButton [options]=\\\"criticalities\\\" [(ngModel)]=\\\"selectedCriticality\\\"></p-selectButton>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".status\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [options]=\\\"dfStatuses\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          [(ngModel)]=\\\"selectedStatus\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".expectedDate\\\" | translate }} </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-calendar\\r\\n                          showButtonBar=\\\"true\\\"\\r\\n                          [monthNavigator]=\\\"true\\\"\\r\\n                          [yearNavigator]=\\\"true\\\"\\r\\n                          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                          class=\\\"aw-calendar\\\"\\r\\n                          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                          [(ngModel)]=\\\"selectedPlannedDate\\\"\\r\\n                        ></p-calendar>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".packageNumber\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"selectedPackageCode\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".pn\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control form-control-with-modal\\\">\\r\\n                        <div class=\\\"form-control-data\\\" (click)=\\\"openItemPnDialog()\\\">\\r\\n                          {{ selectedItemPn?.pnCode }}\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"selectedItemPn\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"clearItemPn()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                        <div class=\\\"btn-search-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"openItemPnDialog()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".asset\\\" | translate }}</h4>\\r\\n\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".pn\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control form-control-with-modal\\\">\\r\\n                        <div class=\\\"form-control-data\\\" (click)=\\\"openAssetPnDialog()\\\">\\r\\n                          {{ selectedAssetPn?.pnCode }}\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"selectedAssetPn\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"clearAssetPn()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                        <div class=\\\"btn-search-wrapper\\\">\\r\\n                          <i\\r\\n                            class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n                            aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"openAssetPnDialog()\\\"\\r\\n                          ></i>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".sn\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"selectedSn\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".packagingNumber\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"selectedBatchNumber\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group flex--3\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".designation\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"selectedDesignation\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"advanced-criteria\\\" [ngClass]=\\\"{ 'display--none': !advancedCriteriaVisible }\\\">\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <h4 class=\\\"section-title\\\">{{ componentData.componentId + \\\".referenceDocument\\\" | translate }}</h4>\\r\\n\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ getComponentName() + \\\".documentType\\\" | translate }} </label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <p-dropdown\\r\\n                                class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                placeholder=\\\"&nbsp;\\\"\\r\\n                                [options]=\\\"documentTypes\\\"\\r\\n                                [showClear]=\\\"true\\\"\\r\\n                                [(ngModel)]=\\\"selectedDocumentType\\\"\\r\\n                              ></p-dropdown>\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">\\r\\n                              {{ componentData.componentId + \\\".documentNumber\\\" | translate }}\\r\\n                            </label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <input\\r\\n                                class=\\\"aw-input\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                [disabled]=\\\"!selectedDocumentType\\\"\\r\\n                                [(ngModel)]=\\\"selectedDocumentCode\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-group flex--2\\\"></div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row search-criteria-footer\\\">\\r\\n                    <button mat-button (click)=\\\"advancedCriteriaVisible = !advancedCriteriaVisible\\\">\\r\\n                      <ng-container *ngIf=\\\"advancedCriteriaVisible\\\">\\r\\n                        <mat-icon>remove</mat-icon>\\r\\n                        {{ \\\"global.collapseCriteria\\\" | translate }}\\r\\n                      </ng-container>\\r\\n                      <ng-container *ngIf=\\\"!advancedCriteriaVisible\\\">\\r\\n                        <mat-icon>add</mat-icon>\\r\\n                        {{ \\\"global.expandCriteria\\\" | translate }}\\r\\n                      </ng-container>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"section\\\">\\r\\n                <div class=\\\"section-content\\\">\\r\\n                  <div class=\\\"row search-criteria-footer\\\">\\r\\n                    <div class=\\\"search-actions\\\">\\r\\n                      <button\\r\\n                        appKeyPress\\r\\n                        mat-raised-button\\r\\n                        color=\\\"primary\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        [disabled]=\\\"!canSearch()\\\"\\r\\n                        [keyCode]=\\\"'Enter'\\\"\\r\\n                        (click)=\\\"search()\\\"\\r\\n                        (keyPress)=\\\"search()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.toSearch\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.results\\\" | translate }} ({{ dfTable ? dfTable.length : 0 }})</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <p-table\\r\\n                #ptableResult\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"dfTableColumns\\\"\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n                [value]=\\\"dfTable\\\"\\r\\n                [(selection)]=\\\"selectedDfs\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!dfTableLoading\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"dfTableLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\" [ngClass]=\\\"{ 'rows-selected': selectedDfs.length > 0 }\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"ptableResult.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        (click)=\\\"deleteDf()\\\"\\r\\n                        *ngIf=\\\"selectedDfs.length > 0\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        mat-raised-button\\r\\n                        type=\\\"button\\\"\\r\\n                        (click)=\\\"openDf(selectedDfs[0]._obj)\\\"\\r\\n                        *ngIf=\\\"selectedDfs.length == 1\\\"\\r\\n                      >\\r\\n                        {{ \\\"open\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-icon-actions\\\">\\r\\n                      <i\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                        class=\\\"fa fa-fw aw-icon aw-icon-with-border\\\"\\r\\n                        [ngClass]=\\\"{\\r\\n                          'fa-th-list': dfTableViewMode == viewMode.COLLAPSE,\\r\\n                          'fa-list': dfTableViewMode == viewMode.EXPAND\\r\\n                        }\\\"\\r\\n                        (click)=\\\"toogleViewMode()\\\"\\r\\n                        *ngIf=\\\"dfTable.length > 0\\\"\\r\\n                        pTooltip=\\\"{{ 'GoodsReceiptSearchComponent.changedView' | translate }}\\\"\\r\\n                        tooltipPosition=\\\"top\\\"\\r\\n                      ></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ componentData.componentId + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      <ng-container *ngSwitchCase=\\\"'receptionFile'\\\">\\r\\n                        <div class=\\\"bold\\\">\\r\\n                          <a (click)=\\\"openDf(rowData['_obj'])\\\">{{ rowData[\\\"code\\\"] }}</a>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"italic\\\">\\r\\n                          {{ rowData[\\\"designation\\\"] | extractTranslation }}\\r\\n                        </div>\\r\\n                      </ng-container>\\r\\n\\r\\n                      <ng-container *ngSwitchCase=\\\"'referenceDocument'\\\">\\r\\n                        <div class=\\\"bold\\\">\\r\\n                          <a (click)=\\\"openDocument(rowData)\\\">{{ rowData[\\\"docCode\\\"] }}</a>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"italic\\\">\\r\\n                          {{ rowData[\\\"docType\\\"] }}\\r\\n                        </div>\\r\\n                      </ng-container>\\r\\n\\r\\n                      <ng-container *ngSwitchCase=\\\"'sender'\\\">\\r\\n                        <div class=\\\"bold\\\">\\r\\n                          {{ rowData[\\\"shipperSiteName\\\"] }}\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"italic\\\">\\r\\n                          {{ rowData[\\\"shipperWarehouseName\\\"] }}\\r\\n                        </div>\\r\\n                      </ng-container>\\r\\n\\r\\n                      <ng-container *ngSwitchCase=\\\"'recipient'\\\">\\r\\n                        <div class=\\\"bold\\\">\\r\\n                          {{ rowData[\\\"recipientSiteName\\\"] }}\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"italic\\\">\\r\\n                          {{ rowData[\\\"recipientWarehouseName\\\"] }}\\r\\n                        </div>\\r\\n                      </ng-container>\\r\\n\\r\\n                      <ng-container *ngSwitchCase=\\\"'articles'\\\">\\r\\n                        <ng-container\\r\\n                          *ngIf=\\\"dfTableViewMode == viewMode.COLLAPSE && rowData['itemsNb'] > 1; else articleTemplate\\\"\\r\\n                        >\\r\\n                          {{ rowData[\\\"itemsNb\\\"] }} {{ \\\"items\\\" | translate }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #articleTemplate>\\r\\n                          <div class=\\\"bold\\\">\\r\\n                            <a (click)=\\\"openArticle(rowData['itemPn'])\\\">{{ rowData[\\\"itemPn\\\"] }}</a>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"italic\\\">\\r\\n                            {{ rowData[\\\"itemDesignation\\\"] }}\\r\\n                          </div>\\r\\n                        </ng-template>\\r\\n                      </ng-container>\\r\\n\\r\\n                      <ng-container *ngSwitchCase=\\\"'quantity'\\\">\\r\\n                        <span class=\\\"bold\\\">\\r\\n                          {{ rowData[\\\"quantity\\\"] }}\\r\\n                        </span>\\r\\n                      </ng-container>\\r\\n\\r\\n                      <ng-container *ngSwitchCase=\\\"'status'\\\">\\r\\n                        <div class=\\\"bold\\\">\\r\\n                          {{ rowData[\\\"status\\\"] | formatSelectOption: dfStatuses }}\\r\\n                        </div>\\r\\n\\r\\n                        <div>\\r\\n                          {{ rowData[\\\"statusDate\\\"] | date: appConstants.JS_DATE }}\\r\\n                        </div>\\r\\n                      </ng-container>\\r\\n\\r\\n                      <ng-container *ngSwitchCase=\\\"'expectedOn'\\\">\\r\\n                        <span class=\\\"bold\\\">\\r\\n                          {{ rowData[\\\"plannedDate\\\"] | date: appConstants.JS_DATE }}\\r\\n                        </span>\\r\\n                      </ng-container>\\r\\n\\r\\n                      <ng-container *ngSwitchCase=\\\"'situation'\\\">\\r\\n                        <span\\r\\n                          class=\\\"alert alert--nok\\\"\\r\\n                          *ngIf=\\\"rowData['criticality'] === awPropertiesConstants.LOGISTICAL_CRITICALITY_IMMEDIATE\\\"\\r\\n                        >\\r\\n                          {{ componentData.componentId + \\\".immediate\\\" | translate }}\\r\\n                        </span>\\r\\n                        <span\\r\\n                          class=\\\"alert alert--warning\\\"\\r\\n                          *ngIf=\\\"rowData['criticality'] === awPropertiesConstants.LOGISTICAL_CRITICALITY_URGENT\\\"\\r\\n                        >\\r\\n                          {{ componentData.componentId + \\\".urgent\\\" | translate }}\\r\\n                        </span>\\r\\n                        <span\\r\\n                          class=\\\"alert alert--ok\\\"\\r\\n                          *ngIf=\\\"rowData['criticality'] === awPropertiesConstants.LOGISTICAL_CRITICALITY_ROUTINE\\\"\\r\\n                        >\\r\\n                          {{ componentData.componentId + \\\".routine\\\" | translate }}\\r\\n                        </span>\\r\\n                      </ng-container>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-create-receipt\\r\\n    [(display)]=\\\"createDialogVisible\\\"\\r\\n    (onValidate)=\\\"openDf($event)\\\"\\r\\n    [contextComponent]=\\\"getCurrentComponentContext\\\"\\r\\n    *ngIf=\\\"createDialogVisible\\\"\\r\\n  ></aw-dialog-create-receipt>\\r\\n\\r\\n  <aw-goods-receipt-scan\\r\\n    [(display)]=\\\"packageScanDialogVisible\\\"\\r\\n    (onValidate)=\\\"loadByPackageCode($event)\\\"\\r\\n    *ngIf=\\\"packageScanDialogVisible\\\"\\r\\n  ></aw-goods-receipt-scan>\\r\\n\\r\\n  <aw-goods-receipt-scan-asset\\r\\n    [(display)]=\\\"assetScanDialogVisible\\\"\\r\\n    (onValidate)=\\\"loadByAssetBatchNumber($event)\\\"\\r\\n    *ngIf=\\\"assetScanDialogVisible\\\"\\r\\n  ></aw-goods-receipt-scan-asset>\\r\\n\\r\\n  <aw-dialog-search-pn\\r\\n    [showPartTypeSelection]=\\\"true\\\"\\r\\n    [(display)]=\\\"assetPnDialogVisible\\\"\\r\\n    (onSelected)=\\\"onSelectAssetPn($event)\\\"\\r\\n    *ngIf=\\\"assetPnDialogVisible\\\"\\r\\n  ></aw-dialog-search-pn>\\r\\n\\r\\n  <aw-dialog-search-pn\\r\\n    [showPartTypeSelection]=\\\"true\\\"\\r\\n    [(display)]=\\\"itemPnDialogVisible\\\"\\r\\n    (onSelected)=\\\"onSelectItemPn($event)\\\"\\r\\n    *ngIf=\\\"itemPnDialogVisible\\\"\\r\\n  ></aw-dialog-search-pn>\\r\\n</div>\\r\\n\\r\\n<!-- <aw-dialog-search-customer\\r\\n    *ngIf=\\\"showCustomerDialog\\\"\\r\\n    [(display)]=\\\"showCustomerDialog\\\"\\r\\n    [customer-code]=\\\"selectedPartnerCode\\\"\\r\\n    (onSelected)=\\\"onSelectedCustomer($event)\\\"\\r\\n  ></aw-dialog-search-customer> -->\\r\\n\\r\\n<!-- <div class=\\\"row\\\" *ngIf=\\\"selectedProvider === component.EXTERNAL_SENDER\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"form-label\\\">{{ componentData.componentId + \\\".partner\\\" | translate }}</label>\\r\\n\\r\\n    <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n      <div class=\\\"form-control-data\\\" (click)=\\\"openCustomerDialog()\\\">\\r\\n        {{ selectedPartner }}\\r\\n        <span *ngIf=\\\"selectedPartner\\\">({{ selectedPartner }})</span>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"selectedPartnerCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n        <i\\r\\n          class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"resetCustomerCode()\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n      <div class=\\\"btn-search-wrapper\\\">\\r\\n        <i\\r\\n          class=\\\"fa fa-fw fa-search aw-icon btn-search\\\"\\r\\n          aria-hidden=\\\"true\\\"\\r\\n          (click)=\\\"openCustomerDialog()\\\"\\r\\n        ></i>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div> -->\\r\\n\"","module.exports = \":host .alert {\\n  font-weight: 600;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvZ29vZHMtcmVjZWlwdC9zZWFyY2gvRDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxmcm9udGVuZF9hZXJvd2ViYi9zcmNcXGFwcFxcbWFpblxcbG9naXN0aWNzXFxnb29kcy1yZWNlaXB0XFxzZWFyY2hcXGdvb2RzLXJlY2VpcHQtc2VhcmNoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBRUksZ0JBQWdCO0VBQ2hCLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWFpbi9sb2dpc3RpY3MvZ29vZHMtcmVjZWlwdC9zZWFyY2gvZ29vZHMtcmVjZWlwdC1zZWFyY2guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiY29uc3RhbnRzXCI7XHJcblxyXG46aG9zdCB7XHJcbiAgLmFsZXJ0IHtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import { ElementRef, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as moment from 'moment';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { finalize, map } from 'rxjs/operators';\r\n\r\nimport { AppConstants } from '../../../../shared/constants/app-constants';\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { BidoFunctionTypeConstants } from '../../../../shared/constants/bido-function-type-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ExtractTranslationPipe } from '../../../../shared/pipes/extract-translation.pipe';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { FindDeliveryFoldersByCriteriaInput } from '../../../../shared/types/api-input-types/logistic/find-delivery-folders-by-criteria-input.interface';\r\nimport { BidtDeliveryFolderDTO } from '../../../../shared/types/api-types/bidt-delivery-folder-dto.interface';\r\nimport { BidtDfItemDTO } from '../../../../shared/types/api-types/bidt-df-item-dto.interface';\r\nimport { BidtPackageDTO } from '../../../../shared/types/api-types/bidt-package-dto.interface';\r\nimport { BidtSiteDTO } from '../../../../shared/types/api-types/bidt-site-dto.interface';\r\nimport { BidtStockMvtDTO } from '../../../../shared/types/api-types/bidt-stock-mvt-dto.interface';\r\nimport { BidtTransferOrderDTO } from '../../../../shared/types/api-types/bidt-transfer-order-dto.interface';\r\nimport { BirePnDTO } from '../../../../shared/types/api-types/bire-pn-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../../shared/types/table-column.interface';\r\nimport { ListUtils } from '../../../../shared/utils/list-utils';\r\nimport { NumberUtils } from '../../../../shared/utils/number-utils';\r\nimport { ObjectUtils } from '../../../../shared/utils/object-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\nimport { LogisticsService } from '../../logistics.service';\r\nimport { TransferOrderService } from '../../transfer-order/shared/transfer-order-service';\r\nimport { DeliveryFolderSearchService } from '../delivery-folder-search.service';\r\n\r\nexport enum ComponentContext {\r\n  LOCALE,\r\n  EXTERNAL\r\n}\r\n\r\nenum DocumentType {\r\n  DOCUMENT_TYPE_SHIPPING_FOLDER = 1,\r\n  DOCUMENT_TYPE_TRANSFER_ORDER\r\n}\r\n\r\nenum ViewMode {\r\n  COLLAPSE,\r\n  EXPAND\r\n}\r\n\r\ninterface DfTableRow {\r\n  code?: string;\r\n  criticality?: string;\r\n  designation?: string;\r\n  docCode?: string;\r\n  docType?: string;\r\n  itemDesignation?: string;\r\n  itemPn?: string;\r\n  itemsNb?: number;\r\n  plannedDate?: Date;\r\n  quantity?: number;\r\n  recipientSiteName?: string;\r\n  recipientWarehouseName?: string;\r\n  shipperSiteName?: string;\r\n  shipperWarehouseName?: string;\r\n  status?: string;\r\n  statusDate?: Date;\r\n  _obj: BidtDeliveryFolderDTO;\r\n}\r\n\r\nexport abstract class GoodsReceiptSearchComponent extends PageComponent<PageComponentData> {\r\n  public readonly appConstants: typeof AppConstants;\r\n  public readonly awPropertiesConstants: typeof AWPropertiesConstants;\r\n  public readonly viewMode: typeof ViewMode;\r\n\r\n  @ViewChild('resultsContainerAnchor')\r\n  public resultsContainerAnchor: ElementRef;\r\n\r\n  public criticalities: LabelValue<string | undefined>[];\r\n  public dfStatuses: LabelValue<string>[];\r\n  public dfTypes: LabelValue<number>[];\r\n  public documentTypes: LabelValue<number>[];\r\n  public recipientSites: LabelValue<number>[];\r\n  public recipientWarehouses: LabelValue<number>[];\r\n  public shipperSites: LabelValue<number>[];\r\n  public shipperWarehouses: LabelValue<number>[];\r\n  public warehouseCategories: LabelValue<string>[];\r\n\r\n  public selectedAssetPn: BirePnDTO | undefined;\r\n  public selectedBatchNumber: string | undefined;\r\n  public selectedCriticality: string | undefined;\r\n  public selectedDesignation: string | undefined;\r\n  public selectedDfCode: string | undefined;\r\n  public selectedDfType: number | undefined;\r\n  public selectedDocumentCode: string | undefined;\r\n  public selectedDocumentType: number | undefined;\r\n  public selectedItemPn: BirePnDTO | undefined;\r\n  public selectedPackageCode: string | undefined;\r\n  public selectedPlannedDate: Date | undefined;\r\n  public selectedRecipientSite: number | undefined;\r\n  public selectedRecipientWarehouse: number | undefined;\r\n  public selectedRecipientWarehouseCategory: string | undefined;\r\n  public selectedShipperSite: number | undefined;\r\n  public selectedShipperWarehouse: number | undefined;\r\n  public selectedShipperWarehouseCategory: string | undefined;\r\n  public selectedSn: string | undefined;\r\n  public selectedStatus: string | undefined;\r\n\r\n  public dfTableColumns: TableColumn[];\r\n  public dfTable: DfTableRow[];\r\n  public dfTableLoading: boolean;\r\n  public dfTableViewMode: ViewMode;\r\n  public selectedDfs: DfTableRow[];\r\n\r\n  public advancedCriteriaVisible: boolean;\r\n  public assetPnDialogVisible: boolean;\r\n  public createDialogVisible: boolean;\r\n  public itemPnDialogVisible: boolean;\r\n  public packageScanDialogVisible: boolean;\r\n  public assetScanDialogVisible: boolean;\r\n\r\n  private dfs: BidtDeliveryFolderDTO[];\r\n  public typeList: LabelValue<number>[];\r\n\r\n  private userSiteId: number | undefined;\r\n  private userWarehouseId: number | undefined;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public sessionService: SessionService,\r\n    public translateService: TranslateService,\r\n    public readonly dfSearchService: DeliveryFolderSearchService,\r\n    public readonly logisticsService: LogisticsService,\r\n    public readonly propertiesService: PropertiesService,\r\n    public readonly transferOrderService: TransferOrderService,\r\n    public readonly extractTranslationPipe: ExtractTranslationPipe\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n    this.appConstants = AppConstants;\r\n    this.awPropertiesConstants = AWPropertiesConstants;\r\n    this.viewMode = ViewMode;\r\n\r\n    this.init();\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public abstract get getCurrentComponentContext(): number;\r\n\r\n  public canSearch(): boolean {\r\n    return ObjectUtils.isDefined(this.selectedRecipientSite);\r\n  }\r\n\r\n  public clearAssetPn(): void {\r\n    this.selectedAssetPn = undefined;\r\n  }\r\n\r\n  public clearItemPn(): void {\r\n    this.selectedItemPn = undefined;\r\n  }\r\n\r\n  public create(): void {\r\n    this.createDialogVisible = true;\r\n  }\r\n\r\n  public deleteDf(): void {\r\n    forkJoin(\r\n      this.selectedDfs.map((df) =>\r\n        this.logisticsService.deleteDeliveryFolder({\r\n          id: df._obj.id\r\n        })\r\n      )\r\n    ).subscribe({\r\n      next: () => {\r\n        this.search();\r\n      }\r\n    });\r\n  }\r\n\r\n  public onChangeRecipientSite(): void {\r\n    this.onChangeRecipientWarehouseCategory();\r\n  }\r\n\r\n  public onChangeRecipientWarehouseCategory(): void {\r\n    this.unselectRecipientWarehouse();\r\n\r\n    if (this.selectedRecipientSite) {\r\n      this.loadWareHouses(this.selectedRecipientSite, this.selectedRecipientWarehouseCategory as string).subscribe({\r\n        next: (warehouses) => {\r\n          this.recipientWarehouses = warehouses;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public onChangeShipperSite(): void {\r\n    this.onChangeShipperWarehouseCategory();\r\n  }\r\n\r\n  public onChangeShipperWarehouseCategory(): void {\r\n    this.unselectShipperWarehouse();\r\n\r\n    if (this.selectedShipperSite) {\r\n      this.loadWareHouses(this.selectedShipperSite, this.selectedShipperWarehouseCategory as string).subscribe({\r\n        next: (warehouses) => {\r\n          this.shipperWarehouses = warehouses;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public loadByAssetBatchNumber(batchNumber: string): void {\r\n    this.logisticsService\r\n      .findDeliveryFoldersByCriteria({\r\n        batchNumber,\r\n        folderStatusExcluded: [AWPropertiesConstants.RECEIPT_FOLDER_STATUS_PERFORMED],\r\n        deliveryFolder: {}\r\n      })\r\n      .subscribe({\r\n        next: (bidtDeliveryFolders) => {\r\n          if (!bidtDeliveryFolders || bidtDeliveryFolders.length === 0) {\r\n            // No match\r\n            this.messageService.showErrorMessage(this.getTranslateKey('noMatchingDeliveryFolder'));\r\n          } else if (bidtDeliveryFolders.length === 1) {\r\n            // One match\r\n            const bidtDeliveryFolder = bidtDeliveryFolders[0];\r\n\r\n            if (\r\n              !this.userSiteId ||\r\n              !this.userWarehouseId ||\r\n              !bidtDeliveryFolder.bidtSiteReceiver ||\r\n              !bidtDeliveryFolder.bidtWarehouseReceiver ||\r\n              this.userSiteId !== bidtDeliveryFolder.bidtSiteReceiver.siteId ||\r\n              this.userWarehouseId !== bidtDeliveryFolder.bidtWarehouseReceiver.wareHouseId\r\n            ) {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('missingRights'));\r\n            } else {\r\n              const bidtDfItems = ListUtils.orEmpty(bidtDeliveryFolder.bidtDfItems).filter((item) =>\r\n                ListUtils.orEmpty(item.bidtStockMvts).some((stockMvt) => stockMvt.stockMvtBatchNumber === batchNumber)\r\n              );\r\n\r\n              const assetsToUpdate$ = bidtDfItems\r\n                .map((bidtDfItem) => {\r\n                  const bidtPackage = bidtDfItem.bidtPackage as BidtPackageDTO;\r\n                  const bidtPackageOperation = ListUtils.orEmpty(bidtPackage.bidtPackageOperations).find(\r\n                    (operation) =>\r\n                      operation.packopeDesignation === AWPropertiesConstants.LOGISTICAL_OPERATION_PHYSICAL_RECEIPT\r\n                  );\r\n                  const bidtStockMvt = ListUtils.orEmpty(bidtDfItem.bidtStockMvts).find(\r\n                    (stockMvt) => stockMvt.stockMvtBatchNumber === batchNumber\r\n                  ) as BidtStockMvtDTO;\r\n                  const bidtStockMvtOperation = ListUtils.orEmpty(bidtStockMvt.bidtStockMvtOperations).find(\r\n                    (operation) =>\r\n                      operation.smoDesignation === AWPropertiesConstants.LOGISTICAL_OPERATION_VISUAL_CONTROL\r\n                  );\r\n\r\n                  if (\r\n                    bidtDeliveryFolder.dfStatus !== AWPropertiesConstants.RECEIPT_FOLDER_STATUS_DRAFT &&\r\n                    !!bidtPackageOperation &&\r\n                    bidtPackageOperation.packopeStatus ===\r\n                      AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED &&\r\n                    !!bidtStockMvtOperation &&\r\n                    bidtStockMvtOperation.smoStatus !== AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED\r\n                  ) {\r\n                    return this.logisticsService.performStockMovementOperations([\r\n                      {\r\n                        bidtDfItem,\r\n                        bidtStockMvt,\r\n                        newStatus: AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED,\r\n                        operationId: bidtStockMvtOperation.id as number\r\n                      }\r\n                    ]);\r\n                  } else {\r\n                    return undefined;\r\n                  }\r\n                })\r\n                .filter((elt) => elt !== undefined) as Observable<void>[];\r\n\r\n              // Perform visual check on given asset\r\n              if (assetsToUpdate$.length > 0) {\r\n                forkJoin(assetsToUpdate$).subscribe(() => {\r\n                  this.messageService.showSuccessMessage(this.getTranslateKey('visualCheckPerformed'));\r\n                  this.openDf({ id: bidtDeliveryFolder.id });\r\n                });\r\n              } else {\r\n                this.openDf({ id: bidtDeliveryFolder.id });\r\n              }\r\n            }\r\n          } else {\r\n            // Several matches\r\n            this.dfs = bidtDeliveryFolders;\r\n\r\n            this.createDfTable();\r\n\r\n            super.differ(() => {\r\n              super.scrollToAnchor(this.resultsContainerAnchor);\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  public loadByPackageCode(packageCode: string): void {\r\n    this.logisticsService.findDeliveryFoldersByPackageCode(packageCode).subscribe({\r\n      next: (bidtDeliveryFolders) => {\r\n        if (!bidtDeliveryFolders || bidtDeliveryFolders.length === 0) {\r\n          // No match\r\n          this.messageService.showErrorMessage(this.getTranslateKey('noMatchingDeliveryFolder'));\r\n        } else if (bidtDeliveryFolders.length === 1) {\r\n          // One match\r\n          if (\r\n            !this.userSiteId ||\r\n            !this.userWarehouseId ||\r\n            !bidtDeliveryFolders[0].bidtSiteReceiver ||\r\n            !bidtDeliveryFolders[0].bidtWarehouseReceiver ||\r\n            this.userSiteId !== bidtDeliveryFolders[0].bidtSiteReceiver.siteId ||\r\n            this.userWarehouseId !== bidtDeliveryFolders[0].bidtWarehouseReceiver.wareHouseId\r\n          ) {\r\n            this.messageService.showErrorMessage(this.getTranslateKey('missingRights'));\r\n          } else {\r\n            const bidtPackage = (ListUtils.orEmpty(bidtDeliveryFolders[0].bidtDfItems).find(\r\n              (dfItem) =>\r\n                !!dfItem.bidtPackage &&\r\n                (dfItem.bidtPackage.packageCode === packageCode ||\r\n                  dfItem.bidtPackage.externalPackageCode === packageCode)\r\n            ) as BidtDfItemDTO).bidtPackage as BidtPackageDTO;\r\n            const bidtPackageOperation = ListUtils.orEmpty(bidtPackage.bidtPackageOperations).find(\r\n              (operation) =>\r\n                operation.packopeDesignation === AWPropertiesConstants.LOGISTICAL_OPERATION_PHYSICAL_RECEIPT\r\n            );\r\n\r\n            // Perform physical receipt if delivery folder is not draft\r\n            if (\r\n              bidtDeliveryFolders[0].dfStatus !== AWPropertiesConstants.RECEIPT_FOLDER_STATUS_DRAFT &&\r\n              !!bidtPackageOperation &&\r\n              bidtPackageOperation.packopeStatus !== AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED\r\n            ) {\r\n              this.logisticsService\r\n                .performPackageOperations([\r\n                  {\r\n                    bidtDeliveryFolderDto: bidtDeliveryFolders[0],\r\n                    newStatus: AWPropertiesConstants.LOGISTICAL_OPERATION_STATUS_PERFORMED,\r\n                    operationId: bidtPackageOperation.id as number\r\n                  }\r\n                ])\r\n                .subscribe(() => {\r\n                  this.messageService.showSuccessMessage(this.getTranslateKey('packageReceived'));\r\n                  this.openDf({ id: bidtDeliveryFolders[0].id });\r\n                });\r\n            } else {\r\n              this.openDf({ id: bidtDeliveryFolders[0].id });\r\n            }\r\n          }\r\n        } else {\r\n          // Several matches\r\n          this.dfs = bidtDeliveryFolders;\r\n\r\n          this.createDfTable();\r\n\r\n          super.differ(() => {\r\n            super.scrollToAnchor(this.resultsContainerAnchor);\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public onSelectAssetPn(pn: BirePnDTO): void {\r\n    this.selectedAssetPn = pn;\r\n  }\r\n\r\n  public onSelectItemPn(pn: BirePnDTO): void {\r\n    this.selectedItemPn = pn;\r\n  }\r\n\r\n  public openArticle(pn: string): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_MATERIAL_FORM,\r\n      openMode: ComponentOpenMode.Read,\r\n      objectId: this.serializationService.serialize({ pnCode: pn })\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public openAssetPnDialog(): void {\r\n    this.assetPnDialogVisible = true;\r\n  }\r\n\r\n  public openDf(df: BidtDeliveryFolderDTO): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.LOG_GOODS_RECEIPT_FORM,\r\n      openMode: ComponentOpenMode.Read,\r\n      objectId: this.serializationService.serialize({ id: df.id })\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  public openItemPnDialog(): void {\r\n    this.itemPnDialogVisible = true;\r\n  }\r\n\r\n  public openDocument(dfRow: DfTableRow): void {\r\n    if (dfRow._obj.bidtTransferOrder) {\r\n      // Transfer Order\r\n      // TODO: add objectId\r\n      const data: PageComponentData = {\r\n        id: this.tabService.generateId(),\r\n        componentId: ComponentConstants.LOG_TRANSFER_ORDER_FORM,\r\n        openMode: ComponentOpenMode.Read\r\n      };\r\n      const labelKey = 'transaction.' + data.componentId;\r\n\r\n      this.tabService.open(this.tabService.create(data, labelKey, true));\r\n    } else if (dfRow.docCode) {\r\n      const searchCriteria: FindDeliveryFoldersByCriteriaInput = {\r\n        folderStatusExcluded: [],\r\n        deliveryFolder: {\r\n          dfCode: dfRow.docCode\r\n        }\r\n      };\r\n      this.logisticsService.findDeliveryFoldersByCriteria(searchCriteria).subscribe((deliveryFolderList) => {\r\n        // Delivery Folder\r\n        const data: PageComponentData = {\r\n          id: this.tabService.generateId(),\r\n          componentId: ComponentConstants.LOG_GOODS_SHIPMENT_FORM,\r\n          openMode: ComponentOpenMode.Read,\r\n          objectId: this.serializationService.serialize({ id: deliveryFolderList[0].id })\r\n        };\r\n        const labelKey = 'transaction.' + data.componentId;\r\n\r\n        this.tabService.open(this.tabService.create(data, labelKey, true));\r\n      });\r\n    }\r\n  }\r\n\r\n  public scanPackage(): void {\r\n    this.packageScanDialogVisible = true;\r\n  }\r\n\r\n  public scanAsset(): void {\r\n    this.assetScanDialogVisible = true;\r\n  }\r\n\r\n  public search(): void {\r\n    this.dfs = [];\r\n    this.dfTableLoading = true;\r\n    this.selectedDfs = [];\r\n\r\n    const searchCriteria: FindDeliveryFoldersByCriteriaInput = {\r\n      assetDesignation: this.selectedDesignation,\r\n      assetPn: this.selectedAssetPn ? this.selectedAssetPn.pnCode : undefined,\r\n      batchNumber: this.selectedBatchNumber,\r\n      folderStatusExcluded: this.selectedStatus ? [] : [AWPropertiesConstants.RECEIPT_FOLDER_STATUS_PERFORMED],\r\n      itemPn: this.selectedItemPn ? this.selectedItemPn.pnCode : undefined,\r\n      packageCode: this.selectedPackageCode,\r\n      sn: this.selectedSn,\r\n      shippingFolderCode:\r\n        this.selectedDocumentType === DocumentType.DOCUMENT_TYPE_SHIPPING_FOLDER\r\n          ? this.selectedDocumentCode\r\n          : undefined,\r\n      torCode:\r\n        this.selectedDocumentType === DocumentType.DOCUMENT_TYPE_TRANSFER_ORDER ? this.selectedDocumentCode : undefined,\r\n      deliveryFolder: {\r\n        bidtDfTypeId: this.selectedDfType,\r\n        bidtSiteByBidtSiteReceiverId: this.selectedRecipientSite,\r\n        bidtSiteByBidtSiteSenderId: this.selectedShipperSite,\r\n        bidtWarehouseByBidtWarehouseReceiverId: this.selectedRecipientWarehouse,\r\n        bidtWarehouseByBidtWarehouseSenderId: this.selectedShipperWarehouse,\r\n        criticality: this.selectedCriticality,\r\n        dfCode: this.selectedDfCode,\r\n        dfStatus: this.selectedStatus,\r\n        plannedDate: this.selectedPlannedDate\r\n          ? moment(this.selectedPlannedDate)\r\n              .endOf('day')\r\n              .toDate()\r\n          : undefined\r\n      },\r\n      folderCategorie: this.selectedDfType ? undefined : AWPropertiesConstants.DELIVERY_CATEGORY_RECEIPT,\r\n      transferType:\r\n        this.getCurrentComponentContext === ComponentContext.LOCALE\r\n          ? [AWPropertiesConstants.MM_TRANSFER_TYPE_INTRA_SITE_KEY]\r\n          : [AWPropertiesConstants.MM_TRANSFER_TYPE_INTER_SITE_KEY, AWPropertiesConstants.MM_TRANSFER_TYPE_EXTERNAL_KEY]\r\n    };\r\n\r\n    this.logisticsService\r\n      .findDeliveryFoldersByCriteria(searchCriteria)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.dfTableLoading = false;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (dfs) => {\r\n          this.dfs = dfs;\r\n\r\n          this.createDfTable();\r\n\r\n          super.differ(() => {\r\n            super.scrollToAnchor(this.resultsContainerAnchor);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  public toogleViewMode(): void {\r\n    this.dfTableViewMode = this.dfTableViewMode === ViewMode.COLLAPSE ? ViewMode.EXPAND : ViewMode.COLLAPSE;\r\n\r\n    this.createDfTable();\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  private createDfTable(): void {\r\n    if (this.dfTableViewMode === ViewMode.COLLAPSE) {\r\n      this.dfTable = this.dfs.map((df) => this.createDfTableRowForCollapseView(df));\r\n    } else {\r\n      this.dfTable = this.dfs\r\n        .map((df) => ListUtils.orEmpty(df.bidtDfItems).map((dfItem) => this.createDfTableRowForExpandView(df, dfItem)))\r\n        .reduce((acc, curr) => acc.concat(curr), []);\r\n    }\r\n  }\r\n\r\n  private createDfTableRow(df: BidtDeliveryFolderDTO): DfTableRow {\r\n    const dfRow = {\r\n      code: df.dfCode,\r\n      criticality: df.criticality,\r\n      designation: df.bidtDfType ? df.bidtDfType.dftDesignation : '',\r\n      plannedDate: df.plannedDate,\r\n      recipientSiteName: df.bidtSiteReceiver ? df.bidtSiteReceiver.siteName : '',\r\n      recipientWarehouseName: df.bidtWarehouseReceiver ? df.bidtWarehouseReceiver.whName : '',\r\n      shipperSiteName: df.bidtSiteSender ? df.bidtSiteSender.siteName : '',\r\n      shipperWarehouseName: df.bidtWarehouseSender ? df.bidtWarehouseSender.whName : '',\r\n      status: df.dfStatus,\r\n      statusDate: df.statusDate,\r\n      _obj: df\r\n    };\r\n\r\n    this.retrieveDocData(df, dfRow);\r\n\r\n    return dfRow;\r\n  }\r\n\r\n  private createDfTableRowForCollapseView(df: BidtDeliveryFolderDTO): DfTableRow {\r\n    const items = ListUtils.orEmpty(df.bidtDfItems);\r\n    const quantity = items\r\n      .filter((item) => !StringUtils.isNullOrEmpty(item.quantity))\r\n      .map((item) => NumberUtils.fromString(item.quantity as string))\r\n      .reduce((a, b) => a + b, 0);\r\n\r\n    let itemDesignation: string | undefined;\r\n    let itemPn: string | undefined;\r\n    if (items.length === 1 && items[0] && items[0].birePn) {\r\n      itemDesignation = items[0].birePn.articleDesignation;\r\n      itemPn = items[0].birePn.pnCode;\r\n    }\r\n\r\n    return { itemDesignation, itemPn, quantity, itemsNb: items.length, ...this.createDfTableRow(df) };\r\n  }\r\n\r\n  private createDfTableRowForExpandView(df: BidtDeliveryFolderDTO, dfItem: BidtDfItemDTO | undefined): DfTableRow {\r\n    let itemDesignation: string | undefined;\r\n    let itemPn: string | undefined;\r\n    let quantity = 0;\r\n    if (dfItem && dfItem.birePn) {\r\n      itemDesignation = dfItem.birePn.articleDesignation;\r\n      itemPn = dfItem.birePn.pnCode;\r\n      quantity = dfItem.quantity ? NumberUtils.fromString(dfItem.quantity) : 0;\r\n    }\r\n\r\n    return { itemDesignation, itemPn, quantity, ...this.createDfTableRow(df) };\r\n  }\r\n\r\n  private formatSites(sites: BidtSiteDTO[]): LabelValue<number>[] {\r\n    return ListUtils.orEmpty(sites)\r\n      .map((site) => {\r\n        return {\r\n          label: `${site.siteCode} - ${site.siteName}`,\r\n          value: site.siteId as number\r\n        };\r\n      })\r\n      .sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n  }\r\n\r\n  private init(): void {\r\n    this.criticalities = [];\r\n    this.dfs = [];\r\n    this.dfStatuses = [];\r\n    this.dfTypes = [];\r\n    this.documentTypes = [];\r\n    this.recipientSites = [];\r\n    this.recipientWarehouses = [];\r\n    this.shipperSites = [];\r\n    this.shipperWarehouses = [];\r\n    this.warehouseCategories = [];\r\n\r\n    this.selectedAssetPn = undefined;\r\n    this.selectedBatchNumber = undefined;\r\n    this.selectedCriticality = undefined;\r\n    this.selectedDesignation = undefined;\r\n    this.selectedDfCode = undefined;\r\n    this.selectedDfType = undefined;\r\n    this.selectedDocumentCode = undefined;\r\n    this.selectedDocumentType = undefined;\r\n    this.selectedItemPn = undefined;\r\n    this.selectedPackageCode = undefined;\r\n    this.selectedPlannedDate = undefined;\r\n    this.selectedRecipientSite = undefined;\r\n    this.selectedRecipientWarehouse = undefined;\r\n    this.selectedRecipientWarehouseCategory = undefined;\r\n    this.selectedShipperSite = undefined;\r\n    this.selectedShipperWarehouse = undefined;\r\n    this.selectedShipperWarehouseCategory = undefined;\r\n    this.selectedSn = undefined;\r\n    this.selectedStatus = undefined;\r\n\r\n    this.dfTable = [];\r\n    this.dfTableLoading = false;\r\n    this.dfTableViewMode = ViewMode.COLLAPSE;\r\n    this.selectedDfs = [];\r\n\r\n    this.advancedCriteriaVisible = false;\r\n    this.assetPnDialogVisible = false;\r\n    this.createDialogVisible = false;\r\n    this.itemPnDialogVisible = false;\r\n    this.packageScanDialogVisible = false;\r\n    this.assetScanDialogVisible = false;\r\n\r\n    this.sessionService.getUserSiteId().subscribe({\r\n      next: (site) => {\r\n        this.userSiteId = site ? site.siteId : undefined;\r\n        this.selectedRecipientSite = site ? site.siteId : undefined;\r\n      }\r\n    });\r\n    this.sessionService.getUserWarehouseId().subscribe({\r\n      next: (warehouse) => {\r\n        this.userWarehouseId = warehouse ? warehouse.wareHouseId : undefined;\r\n        this.selectedRecipientWarehouseCategory = warehouse ? warehouse.whCategory : undefined;\r\n\r\n        this.loadWareHouses(\r\n          this.selectedRecipientSite as number,\r\n          this.selectedRecipientWarehouseCategory as string\r\n        ).subscribe({\r\n          next: (warehouses) => {\r\n            this.recipientWarehouses = warehouses;\r\n\r\n            if (warehouse && warehouse.wareHouseId) {\r\n              this.selectedRecipientWarehouse = warehouse ? warehouse.wareHouseId : undefined;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.loadCriticalities();\r\n    this.loadDfStatuses();\r\n    this.loadDfTypes();\r\n    this.loadDocumentTypes();\r\n    this.loadRecipientSites();\r\n    this.loadShipperSites();\r\n    this.loadWarehouseCategories();\r\n    this.setDfTableColumns();\r\n  }\r\n\r\n  private loadCriticalities(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.LOGISTICAL_CRITICALITY_MAP).subscribe({\r\n      next: (criticalities) => {\r\n        this.criticalities = [\r\n          {\r\n            label: this.translateService.instant(this.getTranslateKey('all')) as string,\r\n            value: undefined\r\n          },\r\n          ...criticalities.map((criticality) => {\r\n            return {\r\n              label: criticality.label,\r\n              value: criticality.value\r\n            };\r\n          })\r\n        ];\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadDfStatuses(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.RECEIPT_FOLDER_STATUS_MAP).subscribe({\r\n      next: (dfStatuses) => {\r\n        this.dfStatuses = dfStatuses;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadDfTypes(): void {\r\n    if (this.getCurrentComponentContext === ComponentContext.LOCALE) {\r\n      this.logisticsService.findReceiptDfTypes().subscribe({\r\n        next: (dfTypes) => {\r\n          this.dfTypes = ListUtils.orEmpty(dfTypes)\r\n            .filter((dfType) => !StringUtils.isNullOrEmpty(dfType.dftDesignation))\r\n            .filter((dfType) => dfType.transferType === AWPropertiesConstants.MM_TRANSFER_TYPE_INTRA_SITE_KEY)\r\n            .map((dfType) => {\r\n              return {\r\n                label: StringUtils.orEmpty(this.extractTranslationPipe.transform(dfType.dftDesignation)),\r\n                value: dfType.id as number\r\n              };\r\n            })\r\n            .sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n\r\n          this.selectedDfType = this.dfTypes.length === 1 ? this.dfTypes[0].value : undefined;\r\n        }\r\n      });\r\n    } else if (this.getCurrentComponentContext === ComponentContext.EXTERNAL) {\r\n      this.logisticsService.findReceiptDfTypes().subscribe({\r\n        next: (dfTypes) => {\r\n          this.dfTypes = ListUtils.orEmpty(dfTypes)\r\n            .filter((dfType) => !StringUtils.isNullOrEmpty(dfType.dftDesignation))\r\n            .filter(\r\n              (dfType) =>\r\n                dfType.transferType === AWPropertiesConstants.MM_TRANSFER_TYPE_INTER_SITE_KEY ||\r\n                dfType.transferType === AWPropertiesConstants.MM_TRANSFER_TYPE_EXTERNAL_KEY\r\n            )\r\n            .map((dfType) => {\r\n              return {\r\n                label: StringUtils.orEmpty(this.extractTranslationPipe.transform(dfType.dftDesignation)),\r\n                value: dfType.id as number\r\n              };\r\n            })\r\n            .sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n\r\n          this.selectedDfType = this.dfTypes.length === 1 ? this.dfTypes[0].value : undefined;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.transferOrderService.fetchTypeList().subscribe((res) => {\r\n      this.typeList = res;\r\n    });\r\n  }\r\n\r\n  private loadDocumentTypes(): void {\r\n    this.documentTypes = [\r\n      {\r\n        label: this.translateService.instant('shippingFolder') as string,\r\n        value: DocumentType.DOCUMENT_TYPE_SHIPPING_FOLDER\r\n      },\r\n      {\r\n        label: this.translateService.instant('transferOrder') as string,\r\n        value: DocumentType.DOCUMENT_TYPE_TRANSFER_ORDER\r\n      }\r\n    ];\r\n  }\r\n\r\n  private loadRecipientSites(): void {\r\n    this.dfSearchService.findAllSiteList().subscribe({\r\n      next: (sites) => {\r\n        this.recipientSites = this.formatSites(sites);\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadShipperSites(): void {\r\n    this.dfSearchService.findAllBireSite().subscribe({\r\n      next: (sites) => {\r\n        this.shipperSites = this.formatSites(sites);\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadWarehouseCategories(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.WAREHOUSE_CATEGORY_MAP).subscribe({\r\n      next: (warehouseCategories) => {\r\n        this.warehouseCategories = ListUtils.orEmpty(warehouseCategories).sort((s1, s2) =>\r\n          s1.value.localeCompare(s2.value)\r\n        );\r\n\r\n        const warehouseCategory = this.warehouseCategories.length > 0 ? this.warehouseCategories[0].value : undefined;\r\n        this.selectedRecipientWarehouseCategory = warehouseCategory;\r\n        this.selectedShipperWarehouseCategory = warehouseCategory;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadWareHouses(site: number, warehouseCategory: string): Observable<LabelValue<number>[]> {\r\n    return this.dfSearchService.getWarehousesBySiteId(site).pipe(\r\n      map((warehouses) => {\r\n        return ListUtils.orEmpty(warehouses)\r\n          .filter((warehouse) => warehouse.whCategory === warehouseCategory)\r\n          .map((warehouse) => {\r\n            return {\r\n              label: `${warehouse.whCode} - ${warehouse.whName}`,\r\n              value: warehouse.wareHouseId as number\r\n            };\r\n          })\r\n          .sort((s1, s2) => s1.label.localeCompare(s2.label));\r\n      })\r\n    );\r\n  }\r\n\r\n  private retrieveDocData(df: BidtDeliveryFolderDTO, dfRow: DfTableRow): void {\r\n    if (df.bidtTransferOrder) {\r\n      dfRow.docCode = df.bidtTransferOrder.torCode;\r\n      dfRow.docType = this.typeList\r\n        .filter((ty) => ty.value.toString() === (df.bidtTransferOrder as BidtTransferOrderDTO).torType)\r\n        .map((res) => res.label)[0];\r\n    } else if (df.externalDeliveryNumber) {\r\n      dfRow.docCode = df.externalDeliveryNumber;\r\n    }\r\n  }\r\n\r\n  private setDfTableColumns(): void {\r\n    this.dfTableColumns = [\r\n      { field: 'receptionFile', alignment: 'left', width: '12.5%' },\r\n      { field: 'referenceDocument', alignment: 'left', width: '12.5%' },\r\n      { field: 'sender', alignment: 'left', width: '12.5%' },\r\n      { field: 'recipient', alignment: 'left', width: '12.5%' },\r\n      { field: 'articles', alignment: 'left', width: '20%' },\r\n      { field: 'quantity', alignment: 'left', width: '7.5%' },\r\n      { field: 'status', alignment: 'left', width: '7.5%' },\r\n      { field: 'expectedOn', alignment: 'left', width: '7.5%' },\r\n      { field: 'situation', alignment: 'left', width: '7.5%' }\r\n    ];\r\n  }\r\n\r\n  private unselectRecipientWarehouse(): void {\r\n    this.recipientWarehouses = [];\r\n    this.selectedRecipientWarehouse = undefined;\r\n  }\r\n\r\n  private unselectShipperWarehouse(): void {\r\n    this.shipperWarehouses = [];\r\n    this.selectedShipperWarehouse = undefined;\r\n  }\r\n\r\n  public isCreateButtonnIsVisible() {\r\n    return this.sessionService.hasUserRightByUseCase(\r\n      BidoFunctionTypeConstants.UC_MM_RECEIVING,\r\n      BidoFunctionTypeConstants.DEGREE_MANAGE\r\n    );\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { ExtractTranslationPipe } from '../../../../shared/pipes/extract-translation.pipe';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { DeliveryFolderSearchService } from '../../goods-receipt/delivery-folder-search.service';\r\nimport { LogisticsService } from '../../logistics.service';\r\nimport { TransferOrderService } from '../../transfer-order/shared/transfer-order-service';\r\n\r\nimport { ComponentContext, GoodsReceiptSearchComponent } from './goods-receipt-search.component';\r\n\r\n@Component({\r\n  selector: 'aw-local-goods-receipt-search',\r\n  styleUrls: ['./goods-receipt-search.component.scss'],\r\n  templateUrl: './goods-receipt-search.component.html'\r\n})\r\nexport class LocalGoodReceiptSearchComponent extends GoodsReceiptSearchComponent {\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public sessionService: SessionService,\r\n    public translateService: TranslateService,\r\n    public readonly dfSearchService: DeliveryFolderSearchService,\r\n    public readonly logisticsService: LogisticsService,\r\n    public readonly propertiesService: PropertiesService,\r\n    public readonly transferOrderService: TransferOrderService,\r\n    public readonly extractTranslationPipe: ExtractTranslationPipe\r\n  ) {\r\n    super(\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      sessionService,\r\n      translateService,\r\n      dfSearchService,\r\n      logisticsService,\r\n      propertiesService,\r\n      transferOrderService,\r\n      extractTranslationPipe\r\n    );\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.LOG_LOCAL_GOODS_RECEIPT_SEARCH;\r\n  }\r\n\r\n  public get getCurrentComponentContext(): number {\r\n    return ComponentContext.LOCALE;\r\n  }\r\n}\r\n","import { ConnectedPosition, Overlay, OverlayConfig, PositionStrategy } from '@angular/cdk/overlay';\r\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\r\nimport { Injectable, Injector, Type } from '@angular/core';\r\n\r\nimport { OverlayRef } from './overlay-ref';\r\nimport { OverlayComponent } from './overlay.component';\r\n\r\nexport interface OverlayParams {\r\n  content: Type<unknown>;\r\n  data?: unknown;\r\n  hasBackdrop?: boolean;\r\n  hasVisibleBackdrop?: boolean;\r\n  height?: number | string;\r\n  width?: number | string;\r\n}\r\n\r\nexport interface OverlayWithGlobalPositionParams extends OverlayParams {\r\n  positions: { bottom?: string; left?: string; right?: string; top?: string };\r\n}\r\n\r\nexport interface OverlayWithRelativePositionParams extends OverlayParams {\r\n  origin: HTMLElement;\r\n  positions?: ConnectedPosition[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OverlayService {\r\n  public constructor(private readonly _injector: Injector, private readonly _overlay: Overlay) {}\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public openWithPositionAbsolute<T>(params: OverlayWithGlobalPositionParams): OverlayRef<T> {\r\n    return this.open(params, this.getConfig(params, this.getPositionAbsolute(params)));\r\n  }\r\n\r\n  public openWithPositionCenter<T>(params: OverlayParams): OverlayRef<T> {\r\n    return this.open(\r\n      params,\r\n      this.getConfig(\r\n        { ...params, hasVisibleBackdrop: params.hasVisibleBackdrop !== undefined ? params.hasVisibleBackdrop : true },\r\n        this.getPositionCenter()\r\n      )\r\n    );\r\n  }\r\n\r\n  public openWithPositionRelative<T>(params: OverlayWithRelativePositionParams): OverlayRef<T> {\r\n    return this.open(params, this.getConfig(params, this.getPositionRelative(params)));\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  private createInjector<T>(overlayRef: OverlayRef<T>, injector: Injector): PortalInjector {\r\n    const tokens = new WeakMap([[OverlayRef, overlayRef]]);\r\n\r\n    return new PortalInjector(injector, tokens);\r\n  }\r\n\r\n  private getConfig(params: OverlayParams, positionStrategy: PositionStrategy): OverlayConfig {\r\n    const hasBackdrop = params.hasBackdrop !== undefined ? params.hasBackdrop : true;\r\n\r\n    return new OverlayConfig({\r\n      hasBackdrop,\r\n      positionStrategy,\r\n      backdropClass: hasBackdrop && params.hasVisibleBackdrop ? 'cdk-overlay-dark-backdrop' : '',\r\n      height: params.height,\r\n      scrollStrategy: this._overlay.scrollStrategies.reposition(),\r\n      width: params.width\r\n    });\r\n  }\r\n\r\n  private getPositionAbsolute(params: OverlayWithGlobalPositionParams): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .bottom(params.positions.bottom)\r\n      .left(params.positions.left)\r\n      .right(params.positions.right)\r\n      .top(params.positions.top);\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private getPositionCenter(): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .global()\r\n      .centerHorizontally()\r\n      .centerVertically();\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private getPositionRelative(params: OverlayWithRelativePositionParams): PositionStrategy {\r\n    const positionStrategy = this._overlay\r\n      .position()\r\n      .flexibleConnectedTo(params.origin)\r\n      .withPositions(params.positions || [])\r\n      .withFlexibleDimensions(false)\r\n      .withPush(false);\r\n\r\n    return positionStrategy;\r\n  }\r\n\r\n  private open<T>(params: OverlayParams, overlayConfig: OverlayConfig): OverlayRef<T> {\r\n    const cdkOverlayRef = this._overlay.create(overlayConfig);\r\n    const overlayRef = new OverlayRef<T>(cdkOverlayRef, params.content, params.data);\r\n\r\n    const injector = this.createInjector(overlayRef, this._injector);\r\n    cdkOverlayRef.attach(new ComponentPortal(OverlayComponent, undefined, injector));\r\n\r\n    return overlayRef;\r\n  }\r\n}\r\n","export class BireMeasureReferenceConstants {\r\n  // Calendar Limit\r\n  public static readonly BIRE_MEASURE_REFERENCE_COUNTER_CODE_CALENDAR_LIMIT: string = 'CAL';\r\n\r\n  // References for Maintenance Program\r\n  public static readonly BIRE_MEASURE_REFERENCE_COUNTER_CODE_PRE_FLIGHT: string = 'BF';\r\n  public static readonly BIRE_MEASURE_REFERENCE_COUNTER_CODE_POST_FLIGHT: string = 'AF';\r\n  public static readonly BIRE_MEASURE_REFERENCE_COUNTER_CODE_DAILY: string = 'DAILY';\r\n  public static readonly BIRE_MEASURE_REFERENCE_COUNTER_CODE_TSN: string = 'TSN';\r\n}\r\n","export class BireRatingConstants {\r\n  public static readonly DEFAULT = '_';\r\n}\r\n","import { BidoEquipmentDTO } from '../../shared/types/api-types/bido-equipment-dto.interface';\r\nimport { BireItemDTOId } from '../../shared/types/api-types/bire-item-dto-id.interface';\r\nimport { StringUtils } from '../../shared/utils/string-utils';\r\nimport { AWPropertiesConstants } from '../constants/aw-properties-constants';\r\n\r\nimport { BidoFamilyVariantUtils } from './bido-family-variant-utils';\r\n\r\nexport class BidoEquipmentUtils {\r\n  public static createAssetName(equipment: BidoEquipmentDTO | undefined): string {\r\n    if (!equipment) {\r\n      return '';\r\n    } else {\r\n      let designation: string;\r\n      switch (equipment.equipmentFunction) {\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_AIRCRAFT_KEY:\r\n          designation = StringUtils.orEmpty(equipment.registration);\r\n          break;\r\n\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_ENGINE_KEY:\r\n          designation = StringUtils.orEmpty(equipment.sn);\r\n          break;\r\n\r\n        default:\r\n          designation = StringUtils.orEmpty(equipment.pnCode) + '/' + StringUtils.orEmpty(equipment.sn);\r\n          break;\r\n      }\r\n\r\n      return designation;\r\n    }\r\n  }\r\n\r\n  public static createAircraftRepresentation(equipment: BidoEquipmentDTO | undefined): string {\r\n    let aircraftRepresentation = '';\r\n    if (!equipment) {\r\n      return '';\r\n    } else {\r\n      if (BidoEquipmentUtils.createAssetName(equipment) !== '') {\r\n        aircraftRepresentation =\r\n          'MSN ' + StringUtils.orEmpty(equipment.sn) + ' | ' + BidoEquipmentUtils.createAssetName(equipment);\r\n      }\r\n      if (BidoEquipmentUtils.createAssetName(equipment) === '' && StringUtils.orEmpty(equipment.sn) !== '') {\r\n        aircraftRepresentation = 'MSN ' + StringUtils.orEmpty(equipment.sn);\r\n      }\r\n\r\n      return aircraftRepresentation;\r\n    }\r\n  }\r\n\r\n  public static createAssetRepresentation(equipment: BidoEquipmentDTO | undefined): string {\r\n    let assetRepresentation = '';\r\n    if (equipment) {\r\n      let designation: string;\r\n      switch (equipment.equipmentFunction) {\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_AIRCRAFT_KEY:\r\n          assetRepresentation =\r\n            StringUtils.orEmpty(equipment.familyVariantCode) +\r\n            ' | MSN ' +\r\n            StringUtils.orEmpty(equipment.sn) +\r\n            ' | ' +\r\n            StringUtils.orEmpty(equipment.registration);\r\n          designation = StringUtils.orEmpty(equipment.registration);\r\n          break;\r\n        case AWPropertiesConstants.ITEM_FAMILY_CODE_ENGINE_KEY:\r\n          assetRepresentation =\r\n            StringUtils.orEmpty(equipment.familyVariantCode) +\r\n            ' | MSN ' +\r\n            StringUtils.orEmpty(equipment.sn) +\r\n            ' | ' +\r\n            StringUtils.orEmpty(equipment.registration);\r\n          designation = StringUtils.orEmpty(equipment.registration);\r\n          break;\r\n        default:\r\n          assetRepresentation =\r\n            StringUtils.orEmpty(equipment.familyVariantCode) + ' | SN ' + StringUtils.orEmpty(equipment.sn);\r\n          designation = StringUtils.orEmpty(equipment.sn);\r\n          break;\r\n      }\r\n    }\r\n\r\n    return assetRepresentation;\r\n  }\r\n\r\n  public static getBireItemPK(equipment: BidoEquipmentDTO): BireItemDTOId | undefined {\r\n    if (\r\n      !!equipment.chapter &&\r\n      !StringUtils.isEmpty(equipment.chapter) &&\r\n      !!equipment.marks &&\r\n      !StringUtils.isEmpty(equipment.marks) &&\r\n      !!equipment.section &&\r\n      !StringUtils.isEmpty(equipment.section) &&\r\n      !!equipment.sheet &&\r\n      !StringUtils.isEmpty(equipment.sheet) &&\r\n      !!equipment.subject &&\r\n      !StringUtils.isEmpty(equipment.subject)\r\n    ) {\r\n      const itemId: BireItemDTOId = {\r\n        familyCode: BidoFamilyVariantUtils.getFamilyCodeFromFamilyVariantCode(equipment.familyVariantCode),\r\n        chapter: equipment.chapter,\r\n        subject: equipment.subject,\r\n        variantCode: BidoFamilyVariantUtils.getVariantCodeFromFamilyVariantCode(equipment.familyVariantCode),\r\n        section: equipment.section,\r\n        sheet: equipment.sheet,\r\n        marks: equipment.marks,\r\n        structureType: AWPropertiesConstants.STRUCTURE_TYPE_IPC_KEY\r\n      };\r\n\r\n      return itemId;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public static toString(asset: BidoEquipmentDTO | undefined, withFamilyVariantCode: boolean = true): string {\r\n    if (!asset) {\r\n      return '';\r\n    }\r\n\r\n    const equipmentCode = asset.equipmentCode;\r\n    const equipmentFunction = asset.equipmentFunction;\r\n    const familyVariantCode = withFamilyVariantCode ? `${asset.familyVariantCode} | ` : '';\r\n    const pn = asset.pnCode;\r\n    const registration = asset.registration;\r\n    const sn = asset.sn;\r\n\r\n    if (equipmentFunction === AWPropertiesConstants.ITEM_FAMILY_CODE_AIRCRAFT_KEY) {\r\n      const formattedMsn = !StringUtils.isNullOrEmpty(sn) ? `MSN ${sn}` : '';\r\n      const formattedRegistration = !StringUtils.isNullOrEmpty(registration) ? ` | ${registration}` : '';\r\n\r\n      return `${familyVariantCode}${formattedMsn}${formattedRegistration}`;\r\n    } else if (equipmentFunction === AWPropertiesConstants.ITEM_FAMILY_CODE_ENGINE_KEY) {\r\n      const formattedEsn = !StringUtils.isNullOrEmpty(sn) ? `ESN ${sn}` : '';\r\n\r\n      return `${familyVariantCode}${formattedEsn}`;\r\n    } else {\r\n      if (!StringUtils.isNullOrEmpty(pn)) {\r\n        if (!StringUtils.isNullOrEmpty(sn)) {\r\n          return `P/N ${pn} | S/N ${sn}`;\r\n        } else {\r\n          return `P/N ${pn}`;\r\n        }\r\n      } else if (!StringUtils.isNullOrEmpty(sn)) {\r\n        return `S/N ${sn}`;\r\n      } else {\r\n        return StringUtils.orEmpty(equipmentCode);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { StringUtils } from '../../shared/utils/string-utils';\r\n\r\nexport class BidoFamilyVariantUtils {\r\n  public static buildFamilyVariantCode(\r\n    familyCode: string | undefined,\r\n    variantCode: string | undefined\r\n  ): string | undefined {\r\n    if (StringUtils.isNullOrEmpty(familyCode) || StringUtils.isNullOrEmpty(variantCode)) {\r\n      return undefined;\r\n    } else {\r\n      return `${familyCode}-${variantCode}`;\r\n    }\r\n  }\r\n\r\n  public static getFamilyCodeFromFamilyVariantCode(familyVariantCode: string | undefined): string | undefined {\r\n    return !!familyVariantCode && familyVariantCode.indexOf('-') > -1\r\n      ? familyVariantCode.substring(0, familyVariantCode.indexOf('-'))\r\n      : undefined;\r\n  }\r\n\r\n  public static getVariantCodeFromFamilyVariantCode(familyVariantCode: string | undefined): string | undefined {\r\n    return !!familyVariantCode && familyVariantCode.indexOf('-') > -1\r\n      ? familyVariantCode.substring(familyVariantCode.indexOf('-') + 1)\r\n      : undefined;\r\n  }\r\n}\r\n"],"sourceRoot":""}