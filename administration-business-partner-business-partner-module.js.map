{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/primeng/components/inputtextarea/inputtextarea.js","webpack:///./node_modules/primeng/fileupload.js","webpack:///./node_modules/primeng/inputtextarea.js","webpack:///./src/app/main/administration/business-partner/business-partner.module.ts","webpack:///./src/app/main/administration/business-partner/form/business-partner-form.component.html","webpack:///./src/app/main/administration/business-partner/form/business-partner-form.component.ts","webpack:///./src/app/main/administration/business-partner/form/business-partner-form.service.ts","webpack:///./src/app/main/administration/business-partner/form/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component.html","webpack:///./src/app/main/administration/business-partner/form/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component.ts","webpack:///./src/app/main/administration/business-partner/form/dialog-business-partner-cus-customer/dialog-business-partner-cus-customer.component.html","webpack:///./src/app/main/administration/business-partner/form/dialog-business-partner-cus-customer/dialog-business-partner-cus-customer.component.ts","webpack:///./src/app/main/administration/business-partner/form/dialog-business-partner-customer-evolution/dialog-business-partner-customer-evolution.component.html","webpack:///./src/app/main/administration/business-partner/form/dialog-business-partner-customer-evolution/dialog-business-partner-customer-evolution.component.ts","webpack:///./src/app/main/administration/business-partner/search/business-partner-search.component.html","webpack:///./src/app/main/administration/business-partner/search/business-partner-search.component.ts","webpack:///./src/app/main/administration/business-partner/search/business-partner-search.service.ts","webpack:///./src/app/shared/components/dialog-status/dialog-status.component.html","webpack:///./src/app/shared/components/dialog-status/dialog-status.component.ts","webpack:///./src/app/shared/components/dialog-status/dialog-status.module.ts","webpack:///./src/app/shared/constants/bido-evolution-constants.ts","webpack:///./src/app/shared/utils/file-utils.ts"],"names":[],"mappings":"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","file":"administration-business-partner-business-partner-module.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar common_1 = require(\"@angular/common\");\nvar InputTextarea = /** @class */ (function () {\n    function InputTextarea(el, ngModel) {\n        this.el = el;\n        this.ngModel = ngModel;\n        this.onResize = new core_1.EventEmitter();\n    }\n    InputTextarea.prototype.ngDoCheck = function () {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize();\n        }\n    };\n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    InputTextarea.prototype.onInput = function (e) {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.updateFilledState = function () {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    };\n    InputTextarea.prototype.onFocus = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.onBlur = function (e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    };\n    InputTextarea.prototype.resize = function (event) {\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n        this.onResize.emit(event || {});\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], InputTextarea.prototype, \"autoResize\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], InputTextarea.prototype, \"onResize\", void 0);\n    __decorate([\n        core_1.HostListener('input', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onInput\", null);\n    __decorate([\n        core_1.HostListener('focus', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onFocus\", null);\n    __decorate([\n        core_1.HostListener('blur', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], InputTextarea.prototype, \"onBlur\", null);\n    InputTextarea = __decorate([\n        core_1.Directive({\n            selector: '[pInputTextarea]',\n            host: {\n                '[class.ui-inputtext]': 'true',\n                '[class.ui-corner-all]': 'true',\n                '[class.ui-inputtextarea-resizable]': 'autoResize',\n                '[class.ui-state-default]': 'true',\n                '[class.ui-widget]': 'true',\n                '[class.ui-state-filled]': 'filled'\n            }\n        }),\n        __param(1, core_1.Optional()),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, forms_1.NgModel])\n    ], InputTextarea);\n    return InputTextarea;\n}());\nexports.InputTextarea = InputTextarea;\nvar InputTextareaModule = /** @class */ (function () {\n    function InputTextareaModule() {\n    }\n    InputTextareaModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [InputTextarea],\n            declarations: [InputTextarea]\n        })\n    ], InputTextareaModule);\n    return InputTextareaModule;\n}());\nexports.InputTextareaModule = InputTextareaModule;\n//# sourceMappingURL=inputtextarea.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/fileupload/fileupload\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputtextarea/inputtextarea\"));","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { DialogStatusModule } from '../../../shared/components/dialog-status/dialog-status.module';\r\nimport { DialogTableModule } from '../../../shared/components/dialog-table/dialog-table.module';\r\nimport { DynamicAttributesModule } from '../../../shared/components/dynamic-attributes/dynamic-attributes.module';\r\nimport { ManageSearchCriteriaModule } from '../../../shared/components/manage-search-criteria/manage-search-criteria.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { BusinessPartnerFormComponent } from './form/business-partner-form.component';\r\nimport { BusinessPartnerFormService } from './form/business-partner-form.service';\r\nimport { DialogBusinessPartnerBidoDocumentComponent } from './form/dialog-business-partner-bido-document/dialog-business-partner-bido-document.component';\r\nimport { DialogBusinessPartnerCusCustomerComponent } from './form/dialog-business-partner-cus-customer/dialog-business-partner-cus-customer.component';\r\nimport { DialogBusinessPartnerCustomerEvolutionComponent } from './form/dialog-business-partner-customer-evolution/dialog-business-partner-customer-evolution.component';\r\nimport { BusinessPartnerSearchComponent } from './search/business-partner-search.component';\r\nimport { BusinessPartnerSearchService } from './search/business-partner-search.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  CalendarModule,\r\n  CheckboxModule,\r\n  DropdownModule,\r\n  FileUploadModule,\r\n  InputTextareaModule,\r\n  PrimeNgTableModule,\r\n  TooltipModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [\r\n  ComponentSidebarModule,\r\n  DialogTableModule,\r\n  DialogStatusModule,\r\n  DynamicAttributesModule,\r\n  ModalModule,\r\n  TableModule\r\n];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [\r\n  DialogBusinessPartnerBidoDocumentComponent,\r\n  DialogBusinessPartnerCusCustomerComponent,\r\n  DialogBusinessPartnerCustomerEvolutionComponent\r\n];\r\n\r\nconst DYNAMIC_COMPONENTS = [BusinessPartnerFormComponent, BusinessPartnerSearchComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [BusinessPartnerFormService, BusinessPartnerSearchService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ManageSearchCriteriaModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class BusinessPartnerModule {}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\" *ngIf=\\\"!isCreateOpenMode && componentData && componentData.objectId\\\">\\r\\n          - {{ serializationService.deserialize(componentData.objectId)[\\\"customerCode\\\"] }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      *ngIf=\\\"isReadOpenMode && hasUpdateAccessRight\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"editBusinessPartner()\\\"\\r\\n    >\\r\\n      {{ \\\"global.edit\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode && !isCreateOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      color=\\\"warn\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"cancelBusinessPartner()\\\"\\r\\n    >\\r\\n      {{ \\\"global.cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      class=\\\"btn-with-spinner\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      (click)=\\\"saveBusinessPartner()\\\"\\r\\n    >\\r\\n      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"showSaveSpinner\\\"></span>\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"reloadBusinessPartner()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div #page class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ \\\"page.mainData\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div id=\\\"code\\\" class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"global.code\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"businessPartner.customerCode\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode || !isCreateOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"name\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"global.name\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"businessPartner.customerName\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"comments\\\" class=\\\"form-group flex--2\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"global.comments\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <textarea\\r\\n                          class=\\\"aw-textarea\\\"\\r\\n                          [rows]=\\\"3\\\"\\r\\n                          pInputTextarea\\r\\n                          [(ngModel)]=\\\"businessPartner.comments\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></textarea>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"icaoCode\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"global.icaoCode\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"icaoCodes\\\"\\r\\n                          [(ngModel)]=\\\"businessPartner.icaoCode\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div id=\\\"isOwner\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".isOwner\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"businessPartner.isOwner\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"isOperator\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".isOperator\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-checkbox\\r\\n                          binary=\\\"true\\\"\\r\\n                          class=\\\"aw-checkbox\\\"\\r\\n                          [(ngModel)]=\\\"businessPartner.isOperator\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-checkbox>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div id=\\\"website\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"global.website\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"businessPartner.webSite\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"phone1\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"global.phone1\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"businessPartner.phone1\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"phone2\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"global.phone2\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"businessPartner.phone2\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"fax\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"global.fax\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"businessPartner.fax\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"email\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ \\\"global.email\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          class=\\\"aw-input\\\"\\r\\n                          [(ngModel)]=\\\"businessPartner.email\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"otherType\\\" class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".otherType\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"customerTypes\\\"\\r\\n                          [(ngModel)]=\\\"businessPartner.customerType\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.airport\\\" | translate }}/{{ \\\"global.base\\\" | translate }}</h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div id=\\\"airportName\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ \\\"global.name\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"businessPartner.airport\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"address\\\" class=\\\"form-group flex--2\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ \\\"global.address\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <textarea\\r\\n                              class=\\\"aw-textarea\\\"\\r\\n                              [rows]=\\\"3\\\"\\r\\n                              pInputTextarea\\r\\n                              [(ngModel)]=\\\"businessPartner.address\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></textarea>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"town\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ \\\"global.town\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input\\r\\n                              type=\\\"text\\\"\\r\\n                              class=\\\"aw-input\\\"\\r\\n                              [(ngModel)]=\\\"businessPartner.town\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"zone\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ \\\"global.zone\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"zones\\\"\\r\\n                              [(ngModel)]=\\\"businessPartner.zone\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                              (onChange)=\\\"updateCountries()\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"country\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ \\\"global.country\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"countries\\\"\\r\\n                              [(ngModel)]=\\\"businessPartner.country\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div id=\\\"airportIcaoCode\\\" class=\\\"form-group\\\">\\r\\n                          <label class=\\\"form-label\\\">\\r\\n                            {{ \\\"global.icaoCode\\\" | translate }}\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <p-dropdown\\r\\n                              class=\\\"aw-dropdown fixed-width\\\"\\r\\n                              [options]=\\\"icaoCodes\\\"\\r\\n                              [(ngModel)]=\\\"businessPartner.airportIcaoCode\\\"\\r\\n                              [showClear]=\\\"true\\\"\\r\\n                              placeholder=\\\"&nbsp;\\\"\\r\\n                              [disabled]=\\\"isReadOpenMode\\\"\\r\\n                            ></p-dropdown>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ getComponentName() + \\\".activity\\\" | translate }}\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content grid-cell-content-with-section\\\">\\r\\n                  <div class=\\\"section\\\">\\r\\n                    <div class=\\\"section-content\\\"></div>\\r\\n                  </div>\\r\\n\\r\\n                  <aw-dynamic-attributes\\r\\n                    id=\\\"dynamicAttributes\\\"\\r\\n                    [attributes]=\\\"dynamicAttributes\\\"\\r\\n                    [workflowControls]=\\\"userWorkflow ? userWorkflow.listControlByIdentifier : []\\\"\\r\\n                    [isReadOpenMode]=\\\"isReadOpenMode\\\"\\r\\n                  >\\r\\n                  </aw-dynamic-attributes>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"global.general\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <!-- Customers list table -->\\r\\n\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".associatedBusinessPartner\\\" | translate }}\\r\\n                      ({{ customerTableDataSource ? customerTableDataSource.dataCount : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <a-table [dataSource]=\\\"customerTableDataSource\\\">\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && customerTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteCusCustomers()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && customerTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editCusCustomer()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"customerTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openCusCustomer()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && !customerTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"createCusCustomer()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <!-- Contacts list table -->\\r\\n\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".listContacts\\\" | translate }}\\r\\n                      ({{ contactTableDataSource ? contactTableDataSource.dataCount : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <a-table [dataSource]=\\\"contactTableDataSource\\\">\\r\\n                    <ng-template columnDef=\\\"primaryContact\\\" let-rowData=\\\"rowData\\\">\\r\\n                      <div class=\\\"ui-g-12\\\">\\r\\n                        <p-checkbox [(ngModel)]=\\\"rowData.primaryContact\\\" [disabled]=\\\"isReadOpenMode\\\" binary=\\\"true\\\">\\r\\n                        </p-checkbox>\\r\\n                      </div>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <!-- Customer evolutions table -->\\r\\n\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".customizedEvolutionsCompliance\\\" | translate }}\\r\\n                      ({{ customerEvolutionTableDataSource ? customerEvolutionTableDataSource.dataCount : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <a-table [dataSource]=\\\"customerEvolutionTableDataSource\\\">\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && customerEvolutionTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteCustomerEvolutions()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && customerEvolutionTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editCustomerEvolution()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"customerEvolutionTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openCustomerEvolution()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && !customerEvolutionTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"createCustomerEvolution()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- New documents table -->\\r\\n\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ \\\"global.documents\\\" | translate }}\\r\\n                      ({{ documentTableDataSource ? documentTableDataSource.dataCount : 0 }})\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <a-table [dataSource]=\\\"documentTableDataSource\\\">\\r\\n                    <ng-template tableActionsDef>\\r\\n                      <button\\r\\n                        *ngIf=\\\"documentTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"downloadFiles()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.download\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && documentTableDataSource.hasDataSelection\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteDocuments()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"!isReadOpenMode && documentTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editDocument()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"documentTableDataSource.dataSelectionCount === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openDocument()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <p-fileUpload\\r\\n                        #fileUploader\\r\\n                        *ngIf=\\\"!isReadOpenMode && !documentTableDataSource.hasDataSelection\\\"\\r\\n                        mode=\\\"basic\\\"\\r\\n                        name=\\\"document[]\\\"\\r\\n                        (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                        chooseLabel=\\\"{{ 'global.upload' | translate }}\\\"\\r\\n                        customUpload=\\\"true\\\"\\r\\n                        auto=\\\"true\\\"\\r\\n                      >\\r\\n                      </p-fileUpload>\\r\\n                    </ng-template>\\r\\n                  </a-table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <aw-dialog-business-partner-cus-customer\\r\\n    *ngIf=\\\"showCusCustomerDialog\\\"\\r\\n    [(display)]=\\\"showCusCustomerDialog\\\"\\r\\n    [cusCustomer]=\\\"currentCusCustomer\\\"\\r\\n    [openMode]=\\\"cusCustomerDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddCusCustomer($event)\\\"\\r\\n  >\\r\\n  </aw-dialog-business-partner-cus-customer>\\r\\n\\r\\n  <aw-dialog-business-partner-customer-evolution\\r\\n    *ngIf=\\\"showCustomerEvolutionDialog\\\"\\r\\n    [(display)]=\\\"showCustomerEvolutionDialog\\\"\\r\\n    [customerEvolution]=\\\"currentCustomerEvolution\\\"\\r\\n    [openMode]=\\\"customerEvolutionDialogOpenMode\\\"\\r\\n    (onValidated)=\\\"onAddCustomerEvolution($event)\\\"\\r\\n  >\\r\\n  </aw-dialog-business-partner-customer-evolution>\\r\\n\\r\\n  <aw-dialog-business-partner-bido-document\\r\\n    *ngIf=\\\"showDocumentDialog\\\"\\r\\n    [(display)]=\\\"showDocumentDialog\\\"\\r\\n    [document]=\\\"currentDocument\\\"\\r\\n    [openMode]=\\\"documentDialogOpenMode\\\"\\r\\n    [types]=\\\"documentTypes\\\"\\r\\n    (onValidated)=\\\"onAddDocument($event)\\\"\\r\\n  ></aw-dialog-business-partner-bido-document>\\r\\n  <aw-dialog-status\\r\\n    *ngIf=\\\"showStatusUpdatesPopup\\\"\\r\\n    [isStatusEditable]=\\\"false\\\"\\r\\n    [item]=\\\"businessPartner\\\"\\r\\n    [itemId]=\\\"businessPartner.customerCode\\\"\\r\\n    [(display)]=\\\"showStatusUpdatesPopup\\\"\\r\\n  ></aw-dialog-status>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { FileUpload } from 'primeng/fileupload';\r\nimport { Observable, forkJoin } from 'rxjs';\r\n\r\nimport { PageTocService } from '../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { PageTocEntry } from '../../../../shared/components/component-sidebar/types/page-toc-entry.interface';\r\nimport { DynamicAttributesService } from '../../../../shared/components/dynamic-attributes/dynamic-attributes.service';\r\nimport { DynamicAttributes } from '../../../../shared/components/dynamic-attributes/types/dynamic-attributes.interface';\r\nimport { ColumnAlignment, TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { AWPropertiesConstants } from '../../../../shared/constants/aw-properties-constants';\r\nimport { BidoAttributeConstants } from '../../../../shared/constants/bido-attribute-constants';\r\nimport { BidoEvolutionConstants } from '../../../../shared/constants/bido-evolution-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { LangConstants } from '../../../../shared/constants/lang-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../../shared/services/date.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { SaveBidoCustomerInput } from '../../../../shared/types/api-input-types/fleet-management/save-bido-customer-input.interface';\r\nimport { BidoAttributeDTOId } from '../../../../shared/types/api-types/bido-attribute-dto-id.interface';\r\nimport { BidoAttributeDTO } from '../../../../shared/types/api-types/bido-attribute-dto.interface';\r\nimport { BidoAttributeValueDTO } from '../../../../shared/types/api-types/bido-attribute-value-dto.interface';\r\nimport { BidoContactDTO } from '../../../../shared/types/api-types/bido-contact-dto.interface';\r\nimport { BidoCusCustomerDTO } from '../../../../shared/types/api-types/bido-cus-customer-dto.interface';\r\nimport { BidoCustomerDTOId } from '../../../../shared/types/api-types/bido-customer-dto-id.interface';\r\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { BidoCustomerEvolutionDTO } from '../../../../shared/types/api-types/bido-customer-evolution-dto.interface';\r\nimport { BidoDocumentationDTO } from '../../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { DTOUtils } from '../../../../shared/utils/dto-utils';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\nimport { ListUtils } from '../../../../shared/utils/list-utils';\r\nimport { SelectItemUtils } from '../../../../shared/utils/select-item-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\n\r\nimport { BusinessPartnerFormService } from './business-partner-form.service';\r\n\r\ninterface CusCustomerRow {\r\n  customerCode: string;\r\n  customerLink: string;\r\n  customerName: string;\r\n  _obj: BidoCusCustomerDTO;\r\n}\r\n\r\ninterface CustomerEvolutionRow {\r\n  customerCode: string;\r\n  customizedCompliance: string;\r\n  evolutionNumber: string;\r\n  evolutionRevisionNumber: string;\r\n  evolutionType: string;\r\n  _obj: BidoCustomerEvolutionDTO;\r\n}\r\n\r\ninterface DocumentRow {\r\n  docEndOfValidityDate: string;\r\n  docExtension: string;\r\n  docName: string;\r\n  docPublicationDate: string;\r\n  docSize: string;\r\n  docCategory: string;\r\n  _obj: BidoDocumentationDTO;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-business-partner-form',\r\n  templateUrl: './business-partner-form.component.html'\r\n})\r\nexport class BusinessPartnerFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public static readonly CONTACT_TABLE_ANCHOR_ID: string = 'contactTableAnchor';\r\n  public static readonly CUSTOMER_EVOLUTION_ANCHOR_ID: string = 'customerEvolutionTableAnchor';\r\n  public static readonly CUSTOMER_TABLE_ANCHOR_ID: string = 'cusCustomerTableAnchor';\r\n  public static readonly DOCUMENT_TABLE_ANCHOR_ID: string = 'documentTableAnchor';\r\n  public static readonly MAIN_DATA_ANCHOR_ID: string = 'mainDataAnchor';\r\n  public static readonly MAIN_INFORMATION_ANCHOR_ID: string = 'mainInformationAnchor';\r\n\r\n  public readonly component: typeof BusinessPartnerFormComponent;\r\n  public readonly tabAttributesId: string;\r\n  public readonly tabDocumentsId: string;\r\n  public readonly tabGeneralId: string;\r\n\r\n  public businessPartner: BidoCustomerDTO;\r\n  public contactTableDataSource: TableDataSource<BidoContactDTO>;\r\n  public countries: SelectItem[];\r\n  public currentTabId: string;\r\n  public customerTableDataSource: TableDataSource<CusCustomerRow>;\r\n  public customerEvolutionTableDataSource: TableDataSource<CustomerEvolutionRow>;\r\n  public customerTypes: SelectItem[];\r\n  public documentTableDataSource: TableDataSource<DocumentRow>;\r\n  public documentTypes: SelectItem[];\r\n  public dynamicAttributes: DynamicAttributes[];\r\n  public icaoCodes: SelectItem[];\r\n  public zones: SelectItem[];\r\n\r\n  private cusCustomers: BidoCusCustomerDTO[];\r\n  private customerEvolutions: BidoCustomerEvolutionDTO[];\r\n  private documents: BidoDocumentationDTO[];\r\n\r\n  public currentCusCustomer: BidoCusCustomerDTO | undefined;\r\n  public cusCustomerDialogOpenMode: ComponentOpenMode;\r\n  public showCusCustomerDialog: boolean;\r\n  private currentCusCustomerIndex: number;\r\n\r\n  public currentCustomerEvolution: BidoCustomerEvolutionDTO | undefined;\r\n  public customerEvolutionDialogOpenMode: ComponentOpenMode;\r\n  public showCustomerEvolutionDialog: boolean;\r\n  private currentCustomerEvolutionIndex: number;\r\n\r\n  public currentDocument: BidoDocumentationDTO | undefined;\r\n  public documentDialogOpenMode: ComponentOpenMode;\r\n  public showDocumentDialog: boolean;\r\n  private currentDocumentIndex: number;\r\n\r\n  private customerEvolutionsAdded: BidoCustomerEvolutionDTO[];\r\n  private customerEvolutionsRemoved: BidoCustomerEvolutionDTO[];\r\n  private customerEvolutionsUpdated: BidoCustomerEvolutionDTO[];\r\n  private customerLinks: LabelValue<string>[];\r\n  private customizedCompliances: LabelValue<string>[];\r\n  private documentsAdded: BidoDocumentationDTO[];\r\n  private documentsRemoved: BidoDocumentationDTO[];\r\n  private documentsUpdated: BidoDocumentationDTO[];\r\n  public showStatusUpdatesPopup: boolean;\r\n\r\n  // Table of content ***********************************************************\r\n\r\n  @ViewChild(BusinessPartnerFormComponent.MAIN_INFORMATION_ANCHOR_ID)\r\n  public mainInformationEltRef: ElementRef;\r\n\r\n  @ViewChild(BusinessPartnerFormComponent.MAIN_DATA_ANCHOR_ID)\r\n  public mainDataEltRef: ElementRef;\r\n\r\n  @ViewChild(BusinessPartnerFormComponent.CUSTOMER_TABLE_ANCHOR_ID)\r\n  public customerTableEltRef: ElementRef;\r\n\r\n  @ViewChild(BusinessPartnerFormComponent.CONTACT_TABLE_ANCHOR_ID)\r\n  public contactTableEltRef: ElementRef;\r\n\r\n  @ViewChild(BusinessPartnerFormComponent.CUSTOMER_EVOLUTION_ANCHOR_ID)\r\n  public customerEvolutionEltRef: ElementRef;\r\n\r\n  @ViewChild(BusinessPartnerFormComponent.DOCUMENT_TABLE_ANCHOR_ID)\r\n  public documentTableEltRef: ElementRef;\r\n\r\n  public toc: PageTocEntry[];\r\n\r\n  // ****************************************************************************\r\n\r\n  public showSaveSpinner: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    pageTocService: PageTocService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public translateService: TranslateService,\r\n    private readonly businessPartnerFormService: BusinessPartnerFormService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly dateService: DateService,\r\n    private readonly dynamicAttributesService: DynamicAttributesService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Read,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n\r\n    this.component = BusinessPartnerFormComponent;\r\n    this.tabAttributesId = 'attributes';\r\n    this.tabDocumentsId = 'documents';\r\n    this.tabGeneralId = 'general';\r\n\r\n    super.registerPageTocEntryObservable();\r\n\r\n    this.openGeneralTab();\r\n    this.initContactTableDataSource();\r\n    this.initCustomerTableDataSource();\r\n    this.initCustomerEvolutionTableDataSource();\r\n    this.initDocumentTableDataSource();\r\n\r\n    this.init();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_BUSINESS_PARTNER_FORM;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.updateOpenMode(this.componentData.openMode);\r\n\r\n    this.setTableOfContent();\r\n\r\n    const context = !!this.componentData.objectId\r\n      ? this.serializationService.deserialize(this.componentData.objectId).customerCode\r\n      : 'tab.createMode';\r\n    this.displayComponentContext(context, this.isCreateOpenMode);\r\n\r\n    this.loadBusinessPartner();\r\n    this.loadUserWorkflow(undefined);\r\n  }\r\n\r\n  public cancelBusinessPartner(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Read);\r\n\r\n    this.reloadBusinessPartner();\r\n  }\r\n\r\n  public downloadFiles(): void {\r\n    this.documentTableDataSource.dataSelection.forEach((documentRow) => {\r\n      FileUtils.downloadFile(documentRow._obj.docFile, documentRow._obj.docName);\r\n    });\r\n  }\r\n\r\n  public editBusinessPartner(): void {\r\n    this.updateOpenMode(ComponentOpenMode.Write);\r\n  }\r\n\r\n  public reloadBusinessPartner(): void {\r\n    this.init();\r\n    this.loadBusinessPartner();\r\n  }\r\n\r\n  public saveBusinessPartner(): void {\r\n    if (StringUtils.isNullOrEmpty(this.businessPartner.customerCode)) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    } else {\r\n      // Contacts\r\n      this.contactTableDataSource.setData(\r\n        this.contactTableDataSource.dataSrc.map((contact) => this.fillContact(contact, this.businessPartner))\r\n      );\r\n\r\n      // CusCustomers\r\n      this.cusCustomers = this.cusCustomers.map((cusCustomer) =>\r\n        this.fillCusCustomer(cusCustomer, this.businessPartner)\r\n      );\r\n\r\n      // Customer evolutions\r\n      this.customerEvolutionsAdded = this.customerEvolutionsAdded.map((customerEvolution) => {\r\n        return this.fillCustomerEvolution(customerEvolution, this.businessPartner);\r\n      });\r\n      this.customerEvolutionsRemoved = this.customerEvolutionsRemoved.map((customerEvolution) => {\r\n        return this.fillCustomerEvolution(customerEvolution, this.businessPartner);\r\n      });\r\n      this.customerEvolutionsUpdated = this.customerEvolutionsUpdated.map((customerEvolution) => {\r\n        return this.fillCustomerEvolution(customerEvolution, this.businessPartner);\r\n      });\r\n\r\n      // Documents\r\n      this.documentsAdded = this.documentsAdded.map((document) => this.fillDocument(document, this.businessPartner));\r\n      this.documentsRemoved = this.documentsRemoved.map((document) =>\r\n        this.fillDocument(document, this.businessPartner)\r\n      );\r\n      this.documentsUpdated = this.documentsUpdated.map((document) =>\r\n        this.fillDocument(document, this.businessPartner)\r\n      );\r\n\r\n      // Dynamic attributes\r\n      if (!!this.businessPartner.customerCode) {\r\n        this.businessPartner.bidoCustomerAttributeDatas = this.dynamicAttributesService.toBidoCustomerAttribute(\r\n          this.businessPartner.customerCode,\r\n          this.dynamicAttributes\r\n        );\r\n      }\r\n\r\n      const saveBidoCustomerInput: SaveBidoCustomerInput = {\r\n        bidoCustomer: this.businessPartner,\r\n        bidoContactList: this.contactTableDataSource.dataSrc,\r\n        bidoCusCustomerList: this.cusCustomers,\r\n        bidoCustomerEvolutionAddedList: this.customerEvolutionsAdded,\r\n        bidoCustomerEvolutionRemovedList: this.customerEvolutionsRemoved,\r\n        bidoCustomerEvolutionUpdatedList: this.customerEvolutionsUpdated,\r\n        bidoDocumentationAddedList: this.documentsAdded,\r\n        bidoDocumentationRemovedList: this.documentsRemoved,\r\n        bidoDocumentationUpdatedList: this.documentsUpdated\r\n      };\r\n\r\n      if (this.isCreateOpenMode) {\r\n        this.createBusinessPartner(saveBidoCustomerInput);\r\n      } else {\r\n        this.updateBusinessPartner(saveBidoCustomerInput);\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateCountries(): void {\r\n    this.businessPartner.country = undefined;\r\n\r\n    this.propertiesService.getCountriesInZone(this.businessPartner.zone).subscribe((results) => {\r\n      this.countries = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  private areSameDocument(obj1: BidoDocumentationDTO | undefined, obj2: BidoDocumentationDTO | undefined): boolean {\r\n    if (!obj1 || !obj2) {\r\n      return false;\r\n    } else {\r\n      return !!obj1.docName && !!obj2.docName && obj1.docName === obj2.docName;\r\n    }\r\n  }\r\n\r\n  private createBusinessPartner(saveBidoCustomerInput: SaveBidoCustomerInput): void {\r\n    this.showSaveSpinner = true;\r\n    this.businessPartnerFormService.createBidoCustomer(saveBidoCustomerInput).subscribe(\r\n      () => {\r\n        if (!!this.businessPartner.customerCode) {\r\n          const businessPartnerFormId: BidoCustomerDTOId = {\r\n            customerCode: this.businessPartner.customerCode\r\n          };\r\n          this.componentData.objectId = this.serializationService.serialize(businessPartnerFormId);\r\n          this.updateOpenMode(ComponentOpenMode.Write);\r\n          this.displayComponentContext(this.businessPartner.customerCode, this.isCreateOpenMode);\r\n\r\n          this.onSavedBusinessPartner();\r\n          this.messageService.showSuccessMessage(this.getTranslateKey('successOnCreateBusinessPartner'));\r\n        }\r\n        this.showSaveSpinner = false;\r\n      },\r\n      (error) => {\r\n        this.showSaveSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  private createCusCustomerRow(cusCustomer: BidoCusCustomerDTO): CusCustomerRow {\r\n    const cusCustomerRow: CusCustomerRow = {\r\n      customerCode: cusCustomer.customerCode as string,\r\n      customerLink: this.formatCustomerLink(cusCustomer),\r\n      customerName: StringUtils.orEmpty(cusCustomer.customerName),\r\n      _obj: cusCustomer\r\n    };\r\n\r\n    return cusCustomerRow;\r\n  }\r\n\r\n  private createCustomerEvolutionRow(customerEvolution: BidoCustomerEvolutionDTO): CustomerEvolutionRow {\r\n    const customerEvolutionRow: CustomerEvolutionRow = {\r\n      customerCode: customerEvolution.customerCode as string,\r\n      customizedCompliance: this.formatCustomizedCompliance(customerEvolution),\r\n      evolutionNumber: customerEvolution.evolutionNumber as string,\r\n      evolutionRevisionNumber: customerEvolution.evolutionRevisionNumber as string,\r\n      evolutionType: customerEvolution.evolutionType as string,\r\n      _obj: customerEvolution\r\n    };\r\n\r\n    return customerEvolutionRow;\r\n  }\r\n\r\n  private createDocumentRow(document: BidoDocumentationDTO): DocumentRow {\r\n    const selectedDocumentType = this.documentTypes.find(\r\n      (documentType) => !!document.docCategory && (documentType.value as string) === document.docCategory\r\n    );\r\n\r\n    const documentRow: DocumentRow = {\r\n      docEndOfValidityDate: this.dateService.dateToString(document.docEndOfValidityDate),\r\n      docExtension: this.formatDocExtension(document),\r\n      docName: document.docName as string,\r\n      docPublicationDate: this.dateService.dateToString(document.docPublicationDate),\r\n      docSize: this.formatDocSize(document),\r\n      docCategory: !!selectedDocumentType ? StringUtils.orEmpty(selectedDocumentType.label) : '',\r\n      _obj: document\r\n    };\r\n\r\n    return documentRow;\r\n  }\r\n\r\n  private fillContact(contact: BidoContactDTO, businessPartner: BidoCustomerDTO): BidoContactDTO {\r\n    contact.customerCode = businessPartner.customerCode;\r\n\r\n    return contact;\r\n  }\r\n\r\n  private fillCusCustomer(cusCustomer: BidoCusCustomerDTO, businessPartner: BidoCustomerDTO): BidoCusCustomerDTO {\r\n    cusCustomer.bidCustomerCode = businessPartner.customerCode;\r\n    cusCustomer.bidCustomerName = businessPartner.customerName;\r\n\r\n    return cusCustomer;\r\n  }\r\n\r\n  private fillCustomerEvolution(\r\n    customerEvolution: BidoCustomerEvolutionDTO,\r\n    businessPartner: BidoCustomerDTO\r\n  ): BidoCustomerEvolutionDTO {\r\n    customerEvolution.customerCode = businessPartner.customerCode;\r\n\r\n    return customerEvolution;\r\n  }\r\n\r\n  private fillDocument(document: BidoDocumentationDTO, businessPartner: BidoCustomerDTO): BidoDocumentationDTO {\r\n    document.customerCode = businessPartner.customerCode;\r\n\r\n    return document;\r\n  }\r\n\r\n  private formatCustomerLink(cusCustomer: BidoCusCustomerDTO): string {\r\n    if (!!cusCustomer.customerLink) {\r\n      const selectedCustomerLink = this.customerLinks.find((customerLink) => {\r\n        return customerLink.value === cusCustomer.customerLink;\r\n      });\r\n\r\n      return !!selectedCustomerLink ? selectedCustomerLink.label : cusCustomer.customerLink;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private formatCustomizedCompliance(customerEvolution: BidoCustomerEvolutionDTO): string {\r\n    if (!!customerEvolution.customizedCompliance) {\r\n      const selectedCustomizedCompliance = this.customizedCompliances.find((customizedCompliance) => {\r\n        return customizedCompliance.value === customerEvolution.customizedCompliance;\r\n      });\r\n\r\n      return !!selectedCustomizedCompliance\r\n        ? selectedCustomizedCompliance.label\r\n        : customerEvolution.customizedCompliance;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private formatDocExtension(document: BidoDocumentationDTO): string {\r\n    return FileUtils.getExtension(document.docName).toUpperCase();\r\n  }\r\n\r\n  private formatDocSize(document: BidoDocumentationDTO): string {\r\n    return !!document.docFile ? FileUtils.getFormattedSize(document.docFile.length) : '';\r\n  }\r\n\r\n  private getDynamicAttributesObservable(attributeCategory: string): Observable<BidoAttributeDTO[]> {\r\n    return this.businessPartnerFormService.findBidoAttributesByAttributeCategory(attributeCategory);\r\n  }\r\n\r\n  private init(): void {\r\n    this.businessPartner = {};\r\n\r\n    this.countries = [];\r\n    this.cusCustomers = [];\r\n    this.customerEvolutions = [];\r\n    this.customerEvolutionsAdded = [];\r\n    this.customerEvolutionsRemoved = [];\r\n    this.customerEvolutionsUpdated = [];\r\n    this.customerLinks = [];\r\n    this.customerTypes = [];\r\n    this.customizedCompliances = [];\r\n    this.documentsAdded = [];\r\n    this.documentsRemoved = [];\r\n    this.documentsUpdated = [];\r\n    this.documents = [];\r\n    this.documentTypes = [];\r\n    this.dynamicAttributes = [];\r\n    this.icaoCodes = [];\r\n    this.zones = [];\r\n\r\n    this.customerTableDataSource.dataSelection = [];\r\n    this.customerEvolutionTableDataSource.dataSelection = [];\r\n    this.documentTableDataSource.dataSelection = [];\r\n\r\n    this.currentCusCustomer = undefined;\r\n    this.currentCusCustomerIndex = -1;\r\n    this.cusCustomerDialogOpenMode = ComponentOpenMode.Read;\r\n    this.showCusCustomerDialog = false;\r\n\r\n    this.currentCustomerEvolution = undefined;\r\n    this.currentCustomerEvolutionIndex = -1;\r\n    this.customerEvolutionDialogOpenMode = ComponentOpenMode.Read;\r\n    this.showCustomerEvolutionDialog = false;\r\n\r\n    this.currentDocument = undefined;\r\n    this.currentDocumentIndex = -1;\r\n    this.documentDialogOpenMode = ComponentOpenMode.Read;\r\n    this.showDocumentDialog = false;\r\n\r\n    this.loadCustomerLinks();\r\n    this.loadCustomerTypes();\r\n    this.loadCustomizedCompliances();\r\n    this.loadDocumentTypes();\r\n    this.loadIcaoCodes();\r\n    this.loadZones();\r\n  }\r\n\r\n  private loadBusinessPartner(): void {\r\n    // Load dynamic attributes\r\n    const observables: Observable<BidoAttributeDTO[]>[] = [\r\n      this.getDynamicAttributesObservable(AWPropertiesConstants.FM_ATTRIBUTE_CATEGORY_ALL_KEY),\r\n      this.getDynamicAttributesObservable(AWPropertiesConstants.FM_ATTRIBUTE_CATEGORY_CUSTOMER_KEY)\r\n    ];\r\n\r\n    forkJoin(observables).subscribe(([allAttribute, customerAttribute]) => {\r\n      let attributes: BidoAttributeDTO[] = [];\r\n      attributes = !!allAttribute ? [...attributes, ...allAttribute] : attributes;\r\n      attributes = !!customerAttribute ? [...attributes, ...customerAttribute] : attributes;\r\n      this.dynamicAttributes = this.dynamicAttributesService.from(attributes);\r\n\r\n      if (!!this.componentData.objectId) {\r\n        // Load business partner object\r\n        const businessPartnerId: BidoCustomerDTOId = this.serializationService.deserialize(this.componentData.objectId);\r\n\r\n        this.businessPartnerFormService.findBidoCustomer(businessPartnerId).subscribe((result) => {\r\n          if (!!result) {\r\n            this.businessPartner = result;\r\n\r\n            if (!!this.businessPartner && !!this.businessPartner.customerCode) {\r\n              const customerCode = this.businessPartner.customerCode;\r\n\r\n              this.loadContacts(customerCode);\r\n              this.loadCusCustomers(customerCode);\r\n              this.loadCustomerEvolutions(customerCode);\r\n              this.loadDocuments(customerCode);\r\n\r\n              if (!!this.businessPartner.bidoCustomerAttributeDatas) {\r\n                this.dynamicAttributesService.setValues(\r\n                  this.dynamicAttributes,\r\n                  this.businessPartner.bidoCustomerAttributeDatas\r\n                );\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadContacts(customerCode: string): void {\r\n    this.businessPartnerFormService.findBidoContactsByCustomerCode(customerCode).subscribe((results) => {\r\n      this.contactTableDataSource.setData(ListUtils.orEmpty(results));\r\n    });\r\n  }\r\n\r\n  private loadCusCustomers(customerCode: string): void {\r\n    this.businessPartnerFormService.findBidoCusCustomersByCustomerCode(customerCode).subscribe((results) => {\r\n      this.cusCustomers = ListUtils.orEmpty(results).filter((cusCustomer) => !!cusCustomer.customerCode);\r\n      this.customerTableDataSource.setData(\r\n        this.cusCustomers.map((cusCustomer) => this.createCusCustomerRow(cusCustomer))\r\n      );\r\n    });\r\n  }\r\n\r\n  private loadCustomerEvolutions(customerCode: string): void {\r\n    this.businessPartnerFormService.findBidoCustomerEvolutionsByCustomerCode(customerCode).subscribe((results) => {\r\n      this.customerEvolutions = ListUtils.orEmpty(results).filter((customerEvolution) => {\r\n        return (\r\n          !!customerEvolution.customerCode &&\r\n          !!customerEvolution.evolutionNumber &&\r\n          !!customerEvolution.evolutionRevisionNumber &&\r\n          !!customerEvolution.evolutionType\r\n        );\r\n      });\r\n      this.customerEvolutionTableDataSource.setData(\r\n        this.customerEvolutions.map((customerEvolution) => this.createCustomerEvolutionRow(customerEvolution))\r\n      );\r\n    });\r\n  }\r\n\r\n  private loadCustomerTypes(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.CUSTOMER_TYPE_MAP).subscribe((results) => {\r\n      this.customerTypes = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  private loadDocuments(customerCode: string): void {\r\n    this.businessPartnerFormService.findBidoDocumentationsByCustomerCode(customerCode).subscribe((results) => {\r\n      this.documents = ListUtils.orEmpty(results).filter((document) => !!document.docName);\r\n      this.documentTableDataSource.setData(this.documents.map((document) => this.createDocumentRow(document)));\r\n    });\r\n  }\r\n\r\n  private loadIcaoCodes(): void {\r\n    const attributeId: BidoAttributeDTOId = {\r\n      attributeId: BidoAttributeConstants.ICAO_CODE.toString()\r\n    };\r\n\r\n    this.businessPartnerFormService.findBidoAttribute(attributeId).subscribe((result) => {\r\n      if (!!result && !!result.bidoAttributeValueDatas) {\r\n        this.icaoCodes = result.bidoAttributeValueDatas.map((attributeValueData: BidoAttributeValueDTO) => {\r\n          const label =\r\n            this.translateService.currentLang === LangConstants.FRENCH_CODE\r\n              ? attributeValueData.textFr\r\n              : attributeValueData.textEn;\r\n          const icaoCode: SelectItem = {\r\n            label,\r\n            value: attributeValueData.attributeValue\r\n          };\r\n\r\n          return icaoCode;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadZones(): void {\r\n    this.propertiesService.getZones().subscribe((results) => {\r\n      this.zones = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n\r\n      this.updateCountries();\r\n    });\r\n  }\r\n\r\n  private onSavedBusinessPartner(): void {\r\n    this.documentsAdded = [];\r\n    this.documentsRemoved = [];\r\n    this.documentsUpdated = [];\r\n    this.customerEvolutionsAdded = [];\r\n    this.customerEvolutionsRemoved = [];\r\n  }\r\n\r\n  private initContactTableDataSource(): void {\r\n    this.contactTableDataSource = new TableDataSource({\r\n      enableSelection: false,\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'contactName',\r\n          translateKey: this.getTranslateKey('contactName'),\r\n          alignment: ColumnAlignment.LEFT,\r\n          width: '70%'\r\n        },\r\n        {\r\n          field: 'primaryContact',\r\n          translateKey: this.getTranslateKey('primaryContact'),\r\n          alignment: ColumnAlignment.CENTER,\r\n          width: '30%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initCustomerTableDataSource(): void {\r\n    this.customerTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'customerCode',\r\n          translateKey: this.getTranslateKey('customerCode'),\r\n          alignment: ColumnAlignment.LEFT,\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'customerName',\r\n          translateKey: this.getTranslateKey('customerName'),\r\n          alignment: ColumnAlignment.LEFT,\r\n          width: '40%'\r\n        },\r\n        {\r\n          field: 'customerLink',\r\n          translateKey: this.getTranslateKey('customerLink'),\r\n          alignment: ColumnAlignment.LEFT,\r\n          width: '40%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initCustomerEvolutionTableDataSource(): void {\r\n    this.customerEvolutionTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'evolutionNumber',\r\n          translateKey: this.getTranslateKey('evolutionNumber'),\r\n          alignment: ColumnAlignment.RIGHT,\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'evolutionRevisionNumber',\r\n          translateKey: this.getTranslateKey('evolutionRevisionNumber'),\r\n          alignment: ColumnAlignment.RIGHT,\r\n          width: '40%'\r\n        },\r\n        {\r\n          field: 'customizedCompliance',\r\n          translateKey: this.getTranslateKey('customizedCompliance'),\r\n          alignment: ColumnAlignment.LEFT,\r\n          width: '40%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private initDocumentTableDataSource(): void {\r\n    this.documentTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'docName',\r\n          translateKey: this.getTranslateKey('docName'),\r\n          alignment: ColumnAlignment.LEFT,\r\n          width: '60%'\r\n        },\r\n        {\r\n          field: 'docCategory',\r\n          translateKey: this.getTranslateKey('docType'),\r\n          alignment: ColumnAlignment.LEFT,\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'docPublicationDate',\r\n          translateKey: this.getTranslateKey('docPublicationDate'),\r\n          alignment: ColumnAlignment.LEFT,\r\n          width: '20%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  private updateBusinessPartner(saveBidoCustomerInput: SaveBidoCustomerInput): void {\r\n    this.showSaveSpinner = true;\r\n    this.businessPartnerFormService.updateBidoCustomer(saveBidoCustomerInput).subscribe(\r\n      () => {\r\n        this.onSavedBusinessPartner();\r\n        this.messageService.showSuccessMessage(this.getTranslateKey('successOnCreateBusinessPartner'));\r\n        this.showSaveSpinner = false;\r\n      },\r\n      (error) => {\r\n        this.showSaveSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Attributes tab\r\n   *************************************************************************/\r\n\r\n  public openAttributesTab(): void {\r\n    this.currentTabId = this.tabAttributesId;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Documents tab\r\n   *************************************************************************/\r\n\r\n  public deleteDocuments(): void {\r\n    const partialMessageKey =\r\n      this.documentTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedDocuments'\r\n        : 'confirmDeleteSelectedDocument';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.documentTableDataSource.dataSelection.forEach((selectedDocumentRow) => {\r\n          const documentsAddedWithoutSelection = this.documentsAdded.filter(\r\n            (document) => !this.areSameDocument(document, selectedDocumentRow._obj)\r\n          );\r\n          // list of added objects contains the selection\r\n          if (this.documentsAdded.length !== documentsAddedWithoutSelection.length) {\r\n            // Remove selection from added objects\r\n            this.documentsAdded = documentsAddedWithoutSelection;\r\n          } else {\r\n            const documentsUpdatedWithoutSelection = this.documentsUpdated.filter(\r\n              (document) => !this.areSameDocument(document, selectedDocumentRow._obj)\r\n            );\r\n            // list of updated objects contains the selection\r\n            if (this.documentsUpdated.length !== documentsUpdatedWithoutSelection.length) {\r\n              // Remove selection from added objects\r\n              this.documentsUpdated = documentsUpdatedWithoutSelection;\r\n            }\r\n\r\n            this.documentsRemoved = [...this.documentsRemoved, selectedDocumentRow._obj];\r\n          }\r\n        });\r\n\r\n        this.documents = this.documents.filter((document) => {\r\n          return !this.documentTableDataSource.dataSelection.some((selectedDocumentRow) =>\r\n            this.areSameDocument(document, selectedDocumentRow._obj)\r\n          );\r\n        });\r\n\r\n        this.documentTableDataSource.setData(\r\n          this.documentTableDataSource.dataSrc.filter((documentRow) => {\r\n            return !this.documentTableDataSource.dataSelection.some((selectedDocumentRow) => {\r\n              return this.areSameDocument(documentRow._obj, selectedDocumentRow._obj);\r\n            });\r\n          })\r\n        );\r\n        this.documentTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public editDocument(): void {\r\n    if (this.documentTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocumentIndex = this.documents.findIndex((document) =>\r\n        this.areSameDocument(document, this.documentTableDataSource.dataSelection[0]._obj)\r\n      );\r\n\r\n      this.currentDocument = { ...this.documentTableDataSource.dataSelection[0]._obj };\r\n      this.documentDialogOpenMode = ComponentOpenMode.Write;\r\n      this.showDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public openDocument(): void {\r\n    if (this.documentTableDataSource.dataSelection.length === 1) {\r\n      this.currentDocument = this.documentTableDataSource.dataSelection[0]._obj;\r\n      this.currentDocumentIndex = -1;\r\n      this.documentDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public openDocumentsTab(): void {\r\n    this.currentTabId = this.tabDocumentsId;\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (!!event.files) {\r\n      const file: File = event.files[0];\r\n\r\n      // Check if the file already exists\r\n      const fileExists = this.documents.some((document) => document.docName === file.name);\r\n      if (fileExists) {\r\n        this.messageService.showWarningMessage('global.warningOnFileExists');\r\n      } else {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          if (!!fileContent) {\r\n            const document: BidoDocumentationDTO = {\r\n              docFile: fileContent,\r\n              docName: file.name,\r\n              docPublicationDate: new Date()\r\n            };\r\n\r\n            this.documents = [...this.documents, document];\r\n            this.documentsAdded = [...this.documentsAdded, document];\r\n            this.documentTableDataSource.addData([this.createDocumentRow(document)]);\r\n          }\r\n        });\r\n      }\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  /**************************************************************************\r\n   * General tab\r\n   *************************************************************************/\r\n\r\n  public createCusCustomer(): void {\r\n    this.currentCusCustomer = undefined;\r\n    this.cusCustomerDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showCusCustomerDialog = true;\r\n  }\r\n\r\n  public createCustomerEvolution(): void {\r\n    this.currentCustomerEvolution = undefined;\r\n    this.customerEvolutionDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showCustomerEvolutionDialog = true;\r\n  }\r\n\r\n  public deleteCusCustomers(): void {\r\n    const partialMessageKey =\r\n      this.documentTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedCusCustomers'\r\n        : 'confirmDeleteSelectedCusCustomer';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.cusCustomers = this.cusCustomers.filter((cusCustomer) => {\r\n          return !this.customerTableDataSource.dataSelection.some((selectedCusCustomerRow) => {\r\n            return (\r\n              !!cusCustomer.customerCode &&\r\n              !!selectedCusCustomerRow.customerCode &&\r\n              cusCustomer.customerCode === selectedCusCustomerRow.customerCode\r\n            );\r\n          });\r\n        });\r\n        this.customerTableDataSource.setData(\r\n          this.customerTableDataSource.dataSrc.filter((cusCustomerRow) => {\r\n            return !this.customerTableDataSource.dataSelection.some((selectedCusCustomerRow) => {\r\n              return cusCustomerRow.customerCode === selectedCusCustomerRow.customerCode;\r\n            });\r\n          })\r\n        );\r\n\r\n        this.customerTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public deleteCustomerEvolutions(): void {\r\n    const partialMessageKey =\r\n      this.customerEvolutionTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedCustomerEvolutions'\r\n        : 'confirmDeleteSelectedCustomerEvolution';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.customerEvolutionTableDataSource.dataSelection.forEach((selectedCustomerEvolutionRow) => {\r\n          const customerEvolutionsAddedWithoutSelection = this.customerEvolutionsAdded.filter((customerEvolution) =>\r\n            DTOUtils.equalsBidoCustomerEvolutionDTO(customerEvolution, selectedCustomerEvolutionRow._obj)\r\n          );\r\n          // list of added objects contains the selection\r\n          if (this.customerEvolutionsAdded.length !== customerEvolutionsAddedWithoutSelection.length) {\r\n            // Remove selection from added objects\r\n            this.customerEvolutionsAdded = customerEvolutionsAddedWithoutSelection;\r\n          } else {\r\n            const customerEvolutionsUpdatedWithoutSelection = this.customerEvolutionsUpdated.filter(\r\n              (customerEvolution) =>\r\n                DTOUtils.equalsBidoCustomerEvolutionDTO(customerEvolution, selectedCustomerEvolutionRow._obj)\r\n            );\r\n            // list of updated objects contains the selection\r\n            if (this.customerEvolutionsUpdated.length !== customerEvolutionsUpdatedWithoutSelection.length) {\r\n              // Remove selection from added objects\r\n              this.customerEvolutionsUpdated = customerEvolutionsUpdatedWithoutSelection;\r\n            }\r\n\r\n            this.customerEvolutionsRemoved = [...this.customerEvolutionsRemoved, selectedCustomerEvolutionRow._obj];\r\n          }\r\n        });\r\n\r\n        this.customerEvolutions = this.customerEvolutions.filter((customerEvolution) => {\r\n          return !this.customerEvolutionTableDataSource.dataSelection.some((selectedCustomerEvolutionRow) => {\r\n            return DTOUtils.equalsBidoCustomerEvolutionDTO(customerEvolution, selectedCustomerEvolutionRow._obj);\r\n          });\r\n        });\r\n\r\n        this.customerEvolutionTableDataSource.setData(\r\n          this.customerEvolutionTableDataSource.dataSrc.filter((customerEvolutionRow) => {\r\n            return !this.customerEvolutionTableDataSource.dataSelection.some((selectedCustomerEvolutionRow) => {\r\n              return DTOUtils.equalsBidoCustomerEvolutionDTO(\r\n                customerEvolutionRow._obj,\r\n                selectedCustomerEvolutionRow._obj\r\n              );\r\n            });\r\n          })\r\n        );\r\n        this.customerEvolutionTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public editCusCustomer(): void {\r\n    if (this.customerTableDataSource.dataSelectionCount === 1) {\r\n      this.currentCusCustomerIndex = this.cusCustomers.findIndex((cusCustomer) => {\r\n        return (\r\n          !!cusCustomer.customerCode &&\r\n          !!this.customerTableDataSource.dataSelection[0]._obj.customerCode &&\r\n          cusCustomer.customerCode === this.customerTableDataSource.dataSelection[0]._obj.customerCode\r\n        );\r\n      });\r\n\r\n      this.currentCusCustomer = { ...this.customerTableDataSource.dataSelection[0]._obj };\r\n      this.cusCustomerDialogOpenMode = ComponentOpenMode.Write;\r\n      this.showCusCustomerDialog = true;\r\n    }\r\n  }\r\n\r\n  public editCustomerEvolution(): void {\r\n    if (this.customerEvolutionTableDataSource.dataSelectionCount === 1) {\r\n      this.currentCustomerEvolutionIndex = this.customerEvolutions.findIndex((customerEvolution) => {\r\n        return DTOUtils.equalsBidoCustomerEvolutionDTO(\r\n          customerEvolution,\r\n          this.customerEvolutionTableDataSource.dataSelection[0]._obj\r\n        );\r\n      });\r\n\r\n      this.currentCustomerEvolution = { ...this.customerEvolutionTableDataSource.dataSelection[0]._obj };\r\n      this.customerEvolutionDialogOpenMode = ComponentOpenMode.Write;\r\n      this.showCustomerEvolutionDialog = true;\r\n    }\r\n  }\r\n\r\n  public openCusCustomer(): void {\r\n    if (this.customerTableDataSource.dataSelectionCount === 1) {\r\n      this.currentCusCustomer = this.customerTableDataSource.dataSelection[0]._obj;\r\n      this.currentCusCustomerIndex = -1;\r\n      this.cusCustomerDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showCusCustomerDialog = true;\r\n    }\r\n  }\r\n\r\n  public openCustomerEvolution(): void {\r\n    if (this.customerEvolutionTableDataSource.dataSelectionCount === 1) {\r\n      this.currentCustomerEvolution = this.customerEvolutionTableDataSource.dataSelection[0]._obj;\r\n      this.currentCustomerEvolutionIndex = -1;\r\n      this.customerEvolutionDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showCustomerEvolutionDialog = true;\r\n    }\r\n  }\r\n\r\n  public openGeneralTab(): void {\r\n    this.currentTabId = this.tabGeneralId;\r\n  }\r\n\r\n  private loadCustomerLinks(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.CUSTOMER_LINK_MAP).subscribe((results) => {\r\n      this.customerLinks = ListUtils.orEmpty(results);\r\n    });\r\n  }\r\n\r\n  private loadCustomizedCompliances(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.COMPLIANCE_MAP).subscribe((results) => {\r\n      this.customizedCompliances = ListUtils.orEmpty(results);\r\n    });\r\n  }\r\n\r\n  private loadDocumentTypes(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.DOC_PARTNER_CATEGORY_MAP).subscribe((results) => {\r\n      this.documentTypes = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Cus Customer Dialog\r\n   *************************************************************************/\r\n\r\n  public onAddCusCustomer(cusCustomer: BidoCusCustomerDTO): void {\r\n    if (!!cusCustomer) {\r\n      if (this.currentCusCustomerIndex !== -1) {\r\n        this.cusCustomers[this.currentCusCustomerIndex] = cusCustomer;\r\n        this.customerTableDataSource.replaceData(\r\n          this.customerTableDataSource.dataSelection[0],\r\n          this.createCusCustomerRow(cusCustomer)\r\n        );\r\n      } else {\r\n        this.cusCustomers = [...this.cusCustomers, cusCustomer];\r\n        this.customerTableDataSource.addData([this.createCusCustomerRow(cusCustomer)]);\r\n      }\r\n    }\r\n\r\n    this.customerTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Customer Evolution Dialog\r\n   *************************************************************************/\r\n\r\n  public onAddCustomerEvolution(customerEvolution: BidoCustomerEvolutionDTO): void {\r\n    if (!!customerEvolution) {\r\n      customerEvolution.evolutionType = BidoEvolutionConstants.CODE_EVOLUTION;\r\n\r\n      if (this.currentCustomerEvolutionIndex !== -1) {\r\n        this.customerEvolutions[this.currentCustomerEvolutionIndex] = customerEvolution;\r\n        this.customerEvolutionTableDataSource.replaceData(\r\n          this.customerEvolutionTableDataSource.dataSelection[0],\r\n          this.createCustomerEvolutionRow(customerEvolution)\r\n        );\r\n\r\n        const updatedCustomerEvolutionIndex = this.customerEvolutionsUpdated.findIndex((customerEvolutionUpdated) =>\r\n          DTOUtils.equalsBidoCustomerEvolutionDTO(customerEvolutionUpdated, customerEvolution)\r\n        );\r\n        if (updatedCustomerEvolutionIndex !== -1) {\r\n          this.customerEvolutionsUpdated[updatedCustomerEvolutionIndex] = customerEvolution;\r\n        } else {\r\n          this.customerEvolutionsUpdated = [...this.customerEvolutionsUpdated, customerEvolution];\r\n        }\r\n      } else {\r\n        const isAdded = this.customerEvolutionsAdded.some((customerEvolutionAdded) =>\r\n          DTOUtils.equalsBidoCustomerEvolutionDTO(customerEvolutionAdded, customerEvolution)\r\n        );\r\n        if (isAdded) {\r\n          this.messageService.showWarningMessage(this.getTranslateKey('warningOnCustomerEvolutionExists'));\r\n        } else {\r\n          this.customerEvolutions = [...this.customerEvolutions, customerEvolution];\r\n          this.customerEvolutionsAdded = [...this.customerEvolutionsAdded, customerEvolution];\r\n          this.customerEvolutionTableDataSource.addData([this.createCustomerEvolutionRow(customerEvolution)]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.customerEvolutionTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Document Dialog\r\n   *************************************************************************/\r\n\r\n  public onAddDocument(document: BidoDocumentationDTO): void {\r\n    if (!!document) {\r\n      if (this.currentDocumentIndex !== -1) {\r\n        const isAdded = this.documentsAdded.some((documentAdded) => this.areSameDocument(documentAdded, document));\r\n        if (isAdded) {\r\n          const indexInAddedList = this.documentsAdded.findIndex((doc) => this.areSameDocument(doc, document));\r\n          this.documentsAdded[indexInAddedList] = document;\r\n        } else if (!isAdded) {\r\n          this.documentsUpdated = [...this.documentsUpdated, document];\r\n        }\r\n        this.documentTableDataSource.replaceData(\r\n          this.documentTableDataSource.dataSelection[0],\r\n          this.createDocumentRow(document)\r\n        );\r\n      }\r\n    }\r\n\r\n    this.documentTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Table Of Content\r\n   *************************************************************************/\r\n\r\n  private setTableOfContent(): void {\r\n    const mainDataKey = 'page.mainData';\r\n    const generalKey = 'global.general';\r\n    const associatedBusinessPartnerKey = this.getTranslateKey('associatedBusinessPartner');\r\n    const listContactsKey = this.getTranslateKey('listContacts');\r\n    const customizedEvolutionsComplianceKey = this.getTranslateKey('customizedEvolutionsCompliance');\r\n    const documentsKey = 'global.documents';\r\n    this.translateService\r\n      .get([\r\n        mainDataKey,\r\n        generalKey,\r\n        associatedBusinessPartnerKey,\r\n        listContactsKey,\r\n        customizedEvolutionsComplianceKey,\r\n        documentsKey\r\n      ])\r\n      .subscribe((results: string[]) => {\r\n        const mainDataLabel = !!results ? results[mainDataKey] : 'Main Information';\r\n        const generalLabel = !!results ? results[generalKey] : 'General';\r\n        const associatedBusinessPartnerLabel = !!results\r\n          ? results[associatedBusinessPartnerKey]\r\n          : 'Associated Business Partner';\r\n        const listContactsLabel = !!results ? results[listContactsKey] : 'List of Contacts';\r\n        const customizedEvolutionsComplianceLabel = !!results\r\n          ? results[customizedEvolutionsComplianceKey]\r\n          : 'Customized Evolutions Compliance';\r\n        const documentsLabel = !!results ? results[documentsKey] : 'Documents';\r\n\r\n        this.toc = [\r\n          {\r\n            id: 'mainInformationAnchor',\r\n            anchor: this.mainInformationEltRef,\r\n            label: mainDataLabel\r\n          },\r\n          {\r\n            id: 'mainDataAnchor',\r\n            anchor: this.mainDataEltRef,\r\n            label: generalLabel\r\n          },\r\n          {\r\n            id: 'cusCustomerTableAnchor',\r\n            anchor: this.customerTableEltRef,\r\n            label: associatedBusinessPartnerLabel\r\n          },\r\n          {\r\n            id: 'contactTableAnchor',\r\n            anchor: this.contactTableEltRef,\r\n            label: listContactsLabel\r\n          },\r\n          {\r\n            id: 'customerEvolutionTableAnchor',\r\n            anchor: this.customerEvolutionEltRef,\r\n            label: customizedEvolutionsComplianceLabel\r\n          },\r\n          {\r\n            id: 'documentTableAnchor',\r\n            anchor: this.documentTableEltRef,\r\n            label: documentsLabel\r\n          }\r\n        ];\r\n\r\n        super.selectPageTocEntry(this.component.MAIN_INFORMATION_ANCHOR_ID);\r\n      });\r\n  }\r\n  public openStatusUpdatesPopup() {\r\n    this.showStatusUpdatesPopup = true;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../shared/api/fleet-management.api';\r\nimport { ProductStructureManagementApi } from '../../../../shared/api/product-structure-management.api';\r\nimport { UserProfileManagementApi } from '../../../../shared/api/user-profile-management.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { SaveBidoCustomerInput } from '../../../../shared/types/api-input-types/fleet-management/save-bido-customer-input.interface';\r\nimport { UpdateFieldsOfBidoDocumentationInput } from '../../../../shared/types/api-input-types/fleet-management/update-fields-of-bido-documentation-input.interface';\r\nimport { FindBireEvolutionsByEvolutionCriteriaInput } from '../../../../shared/types/api-input-types/product-structure-management/find-bire-evolutions-by-evolution-criteria-input.interface';\r\nimport { BidoAttributeDTOId } from '../../../../shared/types/api-types/bido-attribute-dto-id.interface';\r\nimport { BidoAttributeDTO } from '../../../../shared/types/api-types/bido-attribute-dto.interface';\r\nimport { BidoContactDTO } from '../../../../shared/types/api-types/bido-contact-dto.interface';\r\nimport { BidoCusCustomerDTO } from '../../../../shared/types/api-types/bido-cus-customer-dto.interface';\r\nimport { BidoCustomerDTOId } from '../../../../shared/types/api-types/bido-customer-dto-id.interface';\r\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { BidoCustomerEvolutionDTOId } from '../../../../shared/types/api-types/bido-customer-evolution-dto-id.interface';\r\nimport { BidoCustomerEvolutionDTO } from '../../../../shared/types/api-types/bido-customer-evolution-dto.interface';\r\nimport { BidoDocumentationDTOId } from '../../../../shared/types/api-types/bido-documentation-dto-id.interface';\r\nimport { BidoDocumentationDTO } from '../../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { BidoEvolutionDTOId } from '../../../../shared/types/api-types/bido-evolution-dto-id.interface';\r\nimport { BidoEvolutionDTO } from '../../../../shared/types/api-types/bido-evolution-dto.interface';\r\nimport { BidoFunctionTypeDTOId } from '../../../../shared/types/api-types/bido-function-type-dto-id.interface';\r\nimport { BidoFunctionTypeDTO } from '../../../../shared/types/api-types/bido-function-type-dto.interface';\r\nimport { BireEvolutionDTOId } from '../../../../shared/types/api-types/bire-evolution-dto-id.interface';\r\nimport { BireEvolutionDTO } from '../../../../shared/types/api-types/bire-evolution-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../shared/types/api-types/search-results-dto.interface';\r\n\r\n@Injectable()\r\nexport class BusinessPartnerFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi,\r\n    private readonly userProfileManagementApi: UserProfileManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Fleet management api\r\n   *************************************************************************/\r\n\r\n  public addBidoCusCustomers(cusCustomerData: BidoCusCustomerDTO[]): Observable<void> {\r\n    return super.post<BidoCusCustomerDTO[], void>(this.fleetManagementApi.addBidoCusCustomers, cusCustomerData);\r\n  }\r\n\r\n  public createBidoCustomer(customer: SaveBidoCustomerInput): Observable<void> {\r\n    return super.post<SaveBidoCustomerInput, void>(this.fleetManagementApi.createBidoCustomer, customer);\r\n  }\r\n\r\n  public createBidoCustomerEvolution(\r\n    customerEvolution: BidoCustomerEvolutionDTO\r\n  ): Observable<BidoCustomerEvolutionDTOId> {\r\n    return super.post<BidoCustomerEvolutionDTO, BidoCustomerEvolutionDTOId>(\r\n      this.fleetManagementApi.createBidoCustomerEvolution,\r\n      customerEvolution\r\n    );\r\n  }\r\n\r\n  public createBidoDocumentation(documentation: BidoDocumentationDTO): Observable<BidoDocumentationDTOId> {\r\n    return super.post<BidoDocumentationDTO, BidoDocumentationDTOId>(\r\n      this.fleetManagementApi.createBidoDocumentation,\r\n      documentation\r\n    );\r\n  }\r\n\r\n  public createBidoEvolution(evolution: BidoEvolutionDTO): Observable<BidoEvolutionDTOId> {\r\n    return super.post<BidoEvolutionDTO, BidoEvolutionDTOId>(this.fleetManagementApi.createBidoEvolution, evolution);\r\n  }\r\n\r\n  public findBidoAttribute(attributeId: BidoAttributeDTOId): Observable<BidoAttributeDTO> {\r\n    return super.post<BidoAttributeDTOId, BidoAttributeDTO>(this.fleetManagementApi.findBidoAttribute, attributeId);\r\n  }\r\n\r\n  public findBidoAttributesByAttributeCategory(attributeCategory: string): Observable<BidoAttributeDTO[]> {\r\n    return super.post<string, BidoAttributeDTO[]>(\r\n      this.fleetManagementApi.findBidoAttributesByAttributeCategory,\r\n      attributeCategory\r\n    );\r\n  }\r\n\r\n  public findBidoContactsByCustomerCode(customerCode: string): Observable<BidoContactDTO[]> {\r\n    return super.post<string, BidoAttributeDTO[]>(this.fleetManagementApi.findBidoContactsByCustomerCode, customerCode);\r\n  }\r\n\r\n  public findBidoCusCustomersByCustomerCode(customerCode: string): Observable<BidoCusCustomerDTO[]> {\r\n    return super.post<string, BidoCusCustomerDTO[]>(\r\n      this.fleetManagementApi.findBidoCusCustomersByCustomerCode,\r\n      customerCode\r\n    );\r\n  }\r\n\r\n  public findBidoCustomer(customerId: BidoCustomerDTOId): Observable<BidoCustomerDTO> {\r\n    return super.post<BidoCustomerDTOId, BidoCustomerDTO>(this.fleetManagementApi.findBidoCustomer, customerId);\r\n  }\r\n\r\n  public findBidoCustomerEvolutionsByCustomerCode(customerCode: string): Observable<BidoCustomerEvolutionDTO[]> {\r\n    return super.post<string, BidoCustomerEvolutionDTO[]>(\r\n      this.fleetManagementApi.findBidoCustomerEvolutionsByCustomerCode,\r\n      customerCode\r\n    );\r\n  }\r\n\r\n  public findBidoCustomersBySearchCriteria(criteria: BidoCustomerDTO): Observable<SearchResultsDTO<BidoCustomerDTO>> {\r\n    return super.post<BidoCustomerDTO, SearchResultsDTO<BidoCustomerDTO>>(\r\n      this.fleetManagementApi.findBidoCustomersBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public findBidoDocumentationsByCustomerCode(customerCode: string): Observable<BidoDocumentationDTO[]> {\r\n    return super.post<string, BidoDocumentationDTO[]>(\r\n      this.fleetManagementApi.findBidoDocumentationsByCustomerCode,\r\n      customerCode\r\n    );\r\n  }\r\n\r\n  public removeAllBidoCusCustomersByCustomerCode(customerCode: string): Observable<void> {\r\n    return super.post<string, void>(this.fleetManagementApi.removeAllBidoCusCustomersByCustomerCode, customerCode);\r\n  }\r\n\r\n  public removeBidoCustomerEvolution(customerEvolutionId: BidoCustomerEvolutionDTOId): Observable<void> {\r\n    return super.post<BidoCustomerEvolutionDTOId, void>(\r\n      this.fleetManagementApi.removeBidoCustomerEvolution,\r\n      customerEvolutionId\r\n    );\r\n  }\r\n\r\n  public removeBidoDocumentation(documentationId: BidoDocumentationDTOId): Observable<void> {\r\n    return super.post<BidoDocumentationDTOId, void>(this.fleetManagementApi.removeBidoDocumentation, documentationId);\r\n  }\r\n\r\n  public updateBidoContact(contact: BidoContactDTO): Observable<void> {\r\n    return super.post<BidoCustomerDTO, void>(this.fleetManagementApi.updateBidoContact, contact);\r\n  }\r\n\r\n  public updateBidoCustomer(customer: SaveBidoCustomerInput): Observable<void> {\r\n    return super.post<SaveBidoCustomerInput, void>(this.fleetManagementApi.updateBidoCustomer, customer);\r\n  }\r\n\r\n  public updateBidoCustomerEvolution(customerEvolution: BidoCustomerEvolutionDTO): Observable<void> {\r\n    return super.post<BidoCustomerDTO, void>(this.fleetManagementApi.updateBidoCustomerEvolution, customerEvolution);\r\n  }\r\n\r\n  public updateFieldsOfBidoDocumentation(\r\n    documentationId: BidoDocumentationDTOId,\r\n    docName: string,\r\n    docDescription: string,\r\n    publicationDate: Date,\r\n    endOfValidityDate: Date,\r\n    docCategory: string,\r\n    docVersion: string,\r\n    docLanguage: string\r\n  ): Observable<void> {\r\n    const documentation: BidoDocumentationDTO = {\r\n      docCode: documentationId.docCode\r\n    };\r\n    const params: UpdateFieldsOfBidoDocumentationInput = {\r\n      bidoDocumentationDTO: documentation,\r\n      docName,\r\n      docDescription,\r\n      publicationDate,\r\n      endOfValidityDate,\r\n      docCategory,\r\n      docVersion,\r\n      docLanguage\r\n    };\r\n\r\n    return super.post<UpdateFieldsOfBidoDocumentationInput, void>(\r\n      this.fleetManagementApi.updateFieldsOfBidoDocumentation,\r\n      params\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Product structure management api\r\n   *************************************************************************/\r\n\r\n  public findBireEvolution(evolutionId: BireEvolutionDTOId): Observable<BireEvolutionDTO> {\r\n    return super.post<BireEvolutionDTOId, BireEvolutionDTO>(\r\n      this.productStructureManagementApi.findBireEvolution,\r\n      evolutionId\r\n    );\r\n  }\r\n\r\n  public findBireEvolutionsByEvolutionCriteria(\r\n    evolution: BireEvolutionDTO,\r\n    familyCode: string | undefined,\r\n    structureType: string | undefined,\r\n    variantCode: string | undefined\r\n  ): Observable<SearchResultsDTO<BireEvolutionDTO>> {\r\n    const params: FindBireEvolutionsByEvolutionCriteriaInput = {\r\n      bireEvolutionDTO: evolution,\r\n      familyCode,\r\n      structureType,\r\n      variantCode\r\n    };\r\n\r\n    return super.post<FindBireEvolutionsByEvolutionCriteriaInput, SearchResultsDTO<BireEvolutionDTO>>(\r\n      this.productStructureManagementApi.findBireEvolutionsByEvolutionCriteria,\r\n      params\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * User profile management api\r\n   *************************************************************************/\r\n\r\n  public createFunctionType(functionType: BidoFunctionTypeDTO): Observable<BidoFunctionTypeDTOId> {\r\n    return super.post<BidoFunctionTypeDTO, BidoFunctionTypeDTOId>(\r\n      this.userProfileManagementApi.createFunctionType,\r\n      functionType\r\n    );\r\n  }\r\n\r\n  public updateFunctionType(functionType: BidoFunctionTypeDTO): Observable<void> {\r\n    return super.post<BidoFunctionTypeDTO, void>(this.userProfileManagementApi.updateFunctionType, functionType);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docName\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"document.docName\\\" [disabled]=\\\"isReadOpenMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docPublicationDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"document.docPublicationDate\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docEndOfValidityDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"document.docEndOfValidityDate\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docType\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"types\\\"\\r\\n          [(ngModel)]=\\\"document.docCategory\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docDescription\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          pInputTextarea\\r\\n          [rows]=\\\"3\\\"\\r\\n          [(ngModel)]=\\\"document.docDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BidoDocumentationDTO } from '../../../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-business-partner-bido-document',\r\n  templateUrl: './dialog-business-partner-bido-document.component.html'\r\n})\r\nexport class DialogBusinessPartnerBidoDocumentComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public document: BidoDocumentationDTO;\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Input()\r\n  public types: SelectItem[];\r\n  @Output()\r\n  public onValidated: EventEmitter<BidoDocumentationDTO>;\r\n\r\n  public constructor(public sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DialogBusinessPartnerBidoDocumentComponent');\r\n\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidoDocumentationDTO>();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.updateOpenMode(this.openMode);\r\n\r\n    if (!this.document) {\r\n      this.document = {};\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.document);\r\n    this.closeDialog();\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".customerCode\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n        <div class=\\\"form-control-data\\\" (click)=\\\"openCustomerDialog()\\\">\\r\\n          {{ cusCustomer.customerCode }} <span *ngIf=\\\"cusCustomer.customerName\\\">({{ cusCustomer.customerName }})</span>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"cusCustomer.customerCode\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n          <i\\r\\n            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n            aria-hidden=\\\"true\\\"\\r\\n            (click)=\\\"resetCusCustomer()\\\"\\r\\n          ></i>\\r\\n        </div>\\r\\n        <div class=\\\"btn-search-wrapper\\\">\\r\\n          <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openCustomerDialog()\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".customerLink\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"customerLinks\\\"\\r\\n          [(ngModel)]=\\\"cusCustomer.customerLink\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"!cusCustomer.customerCode || cusCustomer.customerCode.length === 0\\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-table\\r\\n  *ngIf=\\\"showCustomerDialog\\\"\\r\\n  [data]=\\\"customerTableData\\\"\\r\\n  [(display)]=\\\"showCustomerDialog\\\"\\r\\n  (onSelected)=\\\"onSelectedCustomer($event)\\\"\\r\\n></aw-dialog-table>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { DialogTableData } from '../../../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { TableColumnFilterMode } from '../../../../../shared/enums/table-column-filter-mode.enum';\r\nimport { TableSelectionMode } from '../../../../../shared/enums/table-selection-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { BidoCusCustomerDTO } from '../../../../../shared/types/api-types/bido-cus-customer-dto.interface';\r\nimport { BidoCustomerDTO } from '../../../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { TableColumn } from '../../../../../shared/types/table-column.interface';\r\nimport { SelectItemUtils } from '../../../../../shared/utils/select-item-utils';\r\nimport { StringUtils } from '../../../../../shared/utils/string-utils';\r\nimport { BusinessPartnerFormService } from '../business-partner-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-business-partner-cus-customer',\r\n  templateUrl: './dialog-business-partner-cus-customer.component.html'\r\n})\r\nexport class DialogBusinessPartnerCusCustomerComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public cusCustomer: BidoCusCustomerDTO;\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Output()\r\n  public onValidated: EventEmitter<BidoCusCustomerDTO>;\r\n\r\n  public customerLinks: SelectItem[];\r\n\r\n  public customerTableData: DialogTableData<BidoCustomerDTO>;\r\n  public showCustomerDialog: boolean;\r\n\r\n  public constructor(\r\n    private readonly businessPartnerFormService: BusinessPartnerFormService,\r\n    private readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogBusinessPartnerCusCustomerComponent');\r\n\r\n    this.onValidated = new EventEmitter<BidoCusCustomerDTO>();\r\n\r\n    this.showCustomerDialog = false;\r\n\r\n    this.initCustomerTableData();\r\n    this.loadCustomerLinks();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.updateOpenMode(this.openMode);\r\n\r\n    if (!this.cusCustomer) {\r\n      this.resetCusCustomer();\r\n    }\r\n  }\r\n\r\n  public openCustomerDialog(): void {\r\n    this.showCustomerDialog = true;\r\n  }\r\n\r\n  public resetCusCustomer(): void {\r\n    this.cusCustomer = {};\r\n  }\r\n\r\n  public validate(): void {\r\n    if (StringUtils.isNullOrEmpty(this.cusCustomer.customerCode)) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    } else {\r\n      this.onValidated.emit(this.cusCustomer);\r\n      this.closeDialog();\r\n    }\r\n  }\r\n\r\n  private initCustomerTableData(): void {\r\n    const customerTableCols: TableColumn[] = [\r\n      { field: 'customerCode', alignment: 'left', filterMode: TableColumnFilterMode.Input, width: '15rem' },\r\n      { field: 'customerName', alignment: 'left', filterMode: TableColumnFilterMode.Input, width: '15rem' }\r\n    ];\r\n\r\n    this.customerTableData = {\r\n      componentId: 'DialogCustomer',\r\n      tableCols: customerTableCols,\r\n      tableRows: this.businessPartnerFormService.findBidoCustomersBySearchCriteria({}),\r\n      dataKey: undefined,\r\n      selectionMode: TableSelectionMode.Single,\r\n      globalFilter: true\r\n    };\r\n  }\r\n\r\n  private loadCustomerLinks(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.CUSTOMER_LINK_MAP).subscribe((results) => {\r\n      this.customerLinks = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Customer Dialog\r\n   *************************************************************************/\r\n\r\n  public onSelectedCustomer(cusCustomer: BidoCustomerDTO): void {\r\n    if (!!cusCustomer) {\r\n      this.cusCustomer.customerCode = cusCustomer.customerCode;\r\n      this.cusCustomer.customerName = cusCustomer.customerName;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{ required: !isReadOpenMode }\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".evolutionNumber\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control form-control-with-modal\\\" [ngClass]=\\\"{ disabled: isReadOpenMode }\\\">\\r\\n        <div class=\\\"form-control-data\\\" (click)=\\\"openEvolutionDialog()\\\">\\r\\n          {{ customerEvolution.evolutionNumber }}\\r\\n          <span *ngIf=\\\"customerEvolution.evolutionRevisionNumber\\\"\\r\\n            >- {{ customerEvolution.evolutionRevisionNumber }}</span\\r\\n          >\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"customerEvolution.evolutionNumber\\\" class=\\\"btn-clear-wrapper\\\">\\r\\n          <i\\r\\n            class=\\\"ui-dropdown-clear-icon pi pi-times aw-icon btn-clear\\\"\\r\\n            aria-hidden=\\\"true\\\"\\r\\n            (click)=\\\"resetCustomerEvolution()\\\"\\r\\n          ></i>\\r\\n        </div>\\r\\n        <div class=\\\"btn-search-wrapper\\\">\\r\\n          <i class=\\\"fa fa-fw fa-search aw-icon btn-search\\\" aria-hidden=\\\"true\\\" (click)=\\\"openEvolutionDialog()\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".customizedCompliance\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"customizedCompliances\\\"\\r\\n          [(ngModel)]=\\\"customerEvolution.customizedCompliance\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      *ngIf=\\\"!isReadOpenMode\\\"\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n      [disabled]=\\\"\\r\\n        customerEvolution.evolutionNumber === undefined ||\\r\\n        customerEvolution.evolutionNumber === null ||\\r\\n        customerEvolution.evolutionNumber.length === 0 ||\\r\\n        customerEvolution.evolutionRevisionNumber === undefined ||\\r\\n        customerEvolution.evolutionRevisionNumber === null ||\\r\\n        customerEvolution.evolutionRevisionNumber.length === 0\\r\\n      \\\"\\r\\n    >\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-table\\r\\n  *ngIf=\\\"showEvolutionDialog\\\"\\r\\n  [data]=\\\"evolutionTableData\\\"\\r\\n  [keyMap]=\\\"keyMap\\\"\\r\\n  [(display)]=\\\"showEvolutionDialog\\\"\\r\\n  (onSelected)=\\\"onSelectedEvolution($event)\\\"\\r\\n></aw-dialog-table>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { DialogTableData } from '../../../../../shared/components/dialog-table/types/dialog-table-data.interface';\r\nimport { GenericPropertyConstants } from '../../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { TableColumnFilterMode } from '../../../../../shared/enums/table-column-filter-mode.enum';\r\nimport { TableSelectionMode } from '../../../../../shared/enums/table-selection-mode.enum';\r\nimport { MessageService } from '../../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../../shared/services/properties.service';\r\nimport { BidoCustomerEvolutionDTO } from '../../../../../shared/types/api-types/bido-customer-evolution-dto.interface';\r\nimport { BireEvolutionDTO } from '../../../../../shared/types/api-types/bire-evolution-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../../shared/types/label-value.interface';\r\nimport { TableColumn } from '../../../../../shared/types/table-column.interface';\r\nimport { SelectItemUtils } from '../../../../../shared/utils/select-item-utils';\r\nimport { StringUtils } from '../../../../../shared/utils/string-utils';\r\nimport { BusinessPartnerFormService } from '../business-partner-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-business-partner-customer-evolution',\r\n  templateUrl: './dialog-business-partner-customer-evolution.component.html'\r\n})\r\nexport class DialogBusinessPartnerCustomerEvolutionComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public customerEvolution: BidoCustomerEvolutionDTO;\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Output()\r\n  public onValidated: EventEmitter<BidoCustomerEvolutionDTO>;\r\n\r\n  public customizedCompliances: SelectItem[];\r\n\r\n  public evolutionTableData: DialogTableData<BireEvolutionDTO>;\r\n  public keyMap: Map<string, Observable<LabelValue<string>[]>>;\r\n  public showEvolutionDialog: boolean;\r\n\r\n  public constructor(\r\n    private readonly businessPartnerFormService: BusinessPartnerFormService,\r\n    private readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Read, 'DialogBusinessPartnerCustomerEvolutionComponent');\r\n\r\n    this.onValidated = new EventEmitter<BidoCustomerEvolutionDTO>();\r\n\r\n    this.showEvolutionDialog = false;\r\n\r\n    this.initEvolutionTableData();\r\n    this.initKeyMap();\r\n    this.loadCustomizedCompliances();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.updateOpenMode(this.openMode);\r\n\r\n    if (!this.customerEvolution) {\r\n      this.resetCustomerEvolution();\r\n    }\r\n  }\r\n\r\n  public openEvolutionDialog(): void {\r\n    if (this.isReadOpenMode) {\r\n      this.showEvolutionDialog = false;\r\n    } else {\r\n      this.showEvolutionDialog = true;\r\n    }\r\n  }\r\n\r\n  public resetCustomerEvolution(): void {\r\n    this.customerEvolution = {};\r\n  }\r\n\r\n  public validate(): void {\r\n    if (\r\n      StringUtils.isNullOrEmpty(this.customerEvolution.evolutionNumber) ||\r\n      StringUtils.isNullOrEmpty(this.customerEvolution.evolutionRevisionNumber)\r\n    ) {\r\n      this.messageService.showWarningMessage('global.warningOnMissingRequiredFields');\r\n    } else {\r\n      this.onValidated.emit(this.customerEvolution);\r\n      this.closeDialog();\r\n    }\r\n  }\r\n\r\n  private initEvolutionTableData(): void {\r\n    const evolutionTableCols: TableColumn[] = [\r\n      { field: 'evolutionNumber', alignment: 'left', width: '7.5rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'evolutionRevisionNumber', alignment: 'left', width: '7.5rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'evolutionType', alignment: 'left', width: '7.5rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'evolutionLevel', alignment: 'left', width: '7.5rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'evolutionCompliance', alignment: 'left', width: '7.5rem', filterMode: TableColumnFilterMode.Input },\r\n      { field: 'tracked', alignment: 'center', width: '5rem', filterMode: TableColumnFilterMode.Tricheckbox },\r\n      { field: 'evolutionSummary', alignment: 'left', width: '20rem', filterMode: TableColumnFilterMode.Input }\r\n    ];\r\n\r\n    this.evolutionTableData = {\r\n      componentId: 'DialogEvolution',\r\n      tableCols: evolutionTableCols,\r\n      tableRows: this.businessPartnerFormService.findBireEvolutionsByEvolutionCriteria(\r\n        {},\r\n        undefined,\r\n        undefined,\r\n        undefined\r\n      ),\r\n      dataKey: undefined,\r\n      selectionMode: TableSelectionMode.Single,\r\n      globalFilter: true\r\n    };\r\n  }\r\n\r\n  private initKeyMap(): void {\r\n    this.keyMap = new Map<string, Observable<LabelValue<string>[]>>();\r\n    this.keyMap.set('evolutionCompliance', this.propertiesService.getValue(GenericPropertyConstants.COMPLIANCE_MAP));\r\n    this.keyMap.set('evolutionType', this.propertiesService.getValue(GenericPropertyConstants.EVOLUTION_TYPE_MAP));\r\n  }\r\n\r\n  private loadCustomizedCompliances(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.COMPLIANCE_MAP).subscribe((results) => {\r\n      this.customizedCompliances = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Evolution Dialog\r\n   *************************************************************************/\r\n\r\n  public onSelectedEvolution(customerEvolution: BireEvolutionDTO): void {\r\n    if (!!customerEvolution) {\r\n      this.customerEvolution.evolutionNumber = customerEvolution.evolutionNumber;\r\n      this.customerEvolution.evolutionRevisionNumber = customerEvolution.evolutionRevisionNumber;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">- {{ \\\"page.searchPage\\\" | translate }}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"openNewCustomer()\\\" *ngIf=\\\"hasUpdateAccessRight\\\">\\r\\n      {{ \\\"global.create\\\" | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container search-page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"global.search\\\" | translate }}</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"column\\\">\\r\\n                <div class=\\\"row search-criteria-header\\\">\\r\\n                  <aw-manage-search-criteria\\r\\n                    [componentId]=\\\"SEARCH_CRITERIA_ID\\\"\\r\\n                    (onSelected)=\\\"loadSearchCriteria($event)\\\"\\r\\n                    (onSavedAsked)=\\\"saveSearchCriteriaAsked()\\\"\\r\\n                    [objectFromPage]=\\\"searchCriteriaToSave\\\"\\r\\n                    [canChange]=\\\"!searchCriteriaCalculated\\\"\\r\\n                  ></aw-manage-search-criteria>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".businessPartnerCode\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchCriteria.customerCode\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".businessPartnerName\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchCriteria.customerName\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".businessPartnerCountry\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-dropdown\\r\\n                        class=\\\"aw-dropdown fixed-width\\\"\\r\\n                        [options]=\\\"countries\\\"\\r\\n                        [(ngModel)]=\\\"searchCriteria.country\\\"\\r\\n                        [showClear]=\\\"true\\\"\\r\\n                        (keyup.enter)=\\\"search()\\\"\\r\\n                        placeholder=\\\"&nbsp;\\\"\\r\\n                      ></p-dropdown>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".isOperator\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-checkbox\\r\\n                        class=\\\"aw-checkbox\\\"\\r\\n                        binary=\\\"true\\\"\\r\\n                        [(ngModel)]=\\\"searchCriteria.isOperator\\\"\\r\\n                      ></p-checkbox>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\"> {{ componentData.componentId + \\\".isOwner\\\" | translate }} </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-checkbox class=\\\"aw-checkbox\\\" binary=\\\"true\\\" [(ngModel)]=\\\"searchCriteria.isOwner\\\"></p-checkbox>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"advanced-criteria\\\" [ngClass]=\\\"{ 'display--none': !showAdvancedSearchCriteria }\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">\\r\\n                        {{ componentData.componentId + \\\".businessPartnerType\\\" | translate }}\\r\\n                      </label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-dropdown\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [options]=\\\"customerTypes\\\"\\r\\n                          [(ngModel)]=\\\"searchCriteria.customerType\\\"\\r\\n                          [showClear]=\\\"true\\\"\\r\\n                          placeholder=\\\"&nbsp;\\\"\\r\\n                        ></p-dropdown>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group flex--4\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row search-criteria-footer\\\">\\r\\n                  <button mat-button (click)=\\\"showAdvancedSearchCriteria = !showAdvancedSearchCriteria\\\">\\r\\n                    <ng-container *ngIf=\\\"showAdvancedSearchCriteria\\\">\\r\\n                      <mat-icon>remove</mat-icon>\\r\\n                      {{ \\\"global.collapseCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                    <ng-container *ngIf=\\\"!showAdvancedSearchCriteria\\\">\\r\\n                      <mat-icon>add</mat-icon>\\r\\n                      {{ \\\"global.expandCriteria\\\" | translate }}\\r\\n                    </ng-container>\\r\\n                  </button>\\r\\n\\r\\n                  <div class=\\\"search-actions\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      mat-raised-button\\r\\n                      class=\\\"btn-with-spinner\\\"\\r\\n                      color=\\\"primary\\\"\\r\\n                      (click)=\\\"search()\\\"\\r\\n                      appKeyPress\\r\\n                      [keyCode]=\\\"'Enter'\\\"\\r\\n                      (keyPress)=\\\"search()\\\"\\r\\n                    >\\r\\n                      <span *ngIf=\\\"customerTableDataSource.isLoading\\\" class=\\\"lds-hourglass\\\"></span>\\r\\n                      {{ \\\"global.toSearch\\\" | translate }}\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div #resultsContainerAnchor class=\\\"grid-cell grid-cell--container\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">{{ \\\"results\\\" | translate }} ({{ customerTableDataSource.dataCount }})</h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <a-table [dataSource]=\\\"customerTableDataSource\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"exportCustomerTable()\\\"\\r\\n                    *ngIf=\\\"customerTableDataSource.hasData && !customerTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.export\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteCustomers(customerTableDataSource.dataSelection)\\\"\\r\\n                    *ngIf=\\\"hasManageAccessRight && customerTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openCustomers(customerTableDataSource.dataSelection)\\\"\\r\\n                    *ngIf=\\\"customerTableDataSource.hasDataSelection\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"customerCode\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <a (click)=\\\"openCustomer(rowData.customerCode)\\\">{{ rowData.customerCode }}</a>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"isOperator\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i class=\\\"fa fa-fw fa-check\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"rowData.isOperator\\\"></i>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template columnDef=\\\"isOwner\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <i class=\\\"fa fa-fw fa-check\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"rowData.isOwner\\\"></i>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { forkJoin, of } from 'rxjs';\r\nimport { finalize, map } from 'rxjs/operators';\r\n\r\nimport { ISearchCriteria } from '../../../../shared/components/manage-search-criteria/search-criteria.interface';\r\nimport { ColumnAlignment, TableDataSource } from '../../../../shared/components/table/table-data-source';\r\nimport { AppConstants } from '../../../../shared/constants/app-constants';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { ExportService } from '../../../../shared/services/export.service';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponent } from '../../../../shared/types/page-component';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { ListUtils } from '../../../../shared/utils/list-utils';\r\nimport { StringUtils } from '../../../../shared/utils/string-utils';\r\n\r\nimport { BusinessPartnerSearchService } from './business-partner-search.service';\r\n\r\ninterface CustomerRow {\r\n  country: string;\r\n  customerCode: string;\r\n  customerName: string;\r\n  customerType: string;\r\n  isOperator: boolean | undefined;\r\n  isOwner: boolean | undefined;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-business-partner-search',\r\n  templateUrl: './business-partner-search.component.html'\r\n})\r\nexport class BusinessPartnerSearchComponent extends PageComponent<PageComponentData> implements OnInit {\r\n  private static readonly CUSTOMER_TABLE_EXPORT_NAME: string = 'business-partner-list';\r\n\r\n  public readonly SEARCH_CRITERIA_ID: string = AppConstants.BUSINESS_PARTNER_SEARCH_CRITERIA_ID;\r\n\r\n  public countries: LabelValue<string>[];\r\n  public customerTableDataSource: TableDataSource<CustomerRow>;\r\n  public customerTypes: LabelValue<string>[];\r\n  public searchCriteria: BidoCustomerDTO;\r\n  public searchCriteriaCalculated: boolean;\r\n  public searchCriteriaToSave: BidoCustomerDTO;\r\n\r\n  public showAdvancedSearchCriteria: boolean;\r\n\r\n  /* HTML references ***********************************************************/\r\n\r\n  @ViewChild('resultsContainerAnchor')\r\n  public resultsContainerAnchor: ElementRef;\r\n\r\n  /* ***************************************************************************/\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    private readonly businessPartnerSearchService: BusinessPartnerSearchService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly exportService: ExportService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n\r\n    this.onBeforeLoad();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n\r\n    this.displayComponentContext('global.search', true);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_BUSINESS_PARTNER_SEARCH;\r\n  }\r\n\r\n  public onBeforeLoad(): void {\r\n    this.init();\r\n    this.initCustomerTableDataSource();\r\n    this.loadReferentialData();\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public deleteCustomers(customers: CustomerRow[]): void {\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(\r\n        customers.length === 1 ? 'confirmDeleteSelectedBusinessPartner' : 'confirmDeleteSelectedBusinessPartners'\r\n      ),\r\n      accept: () => {\r\n        const observables = customers.map((customer) =>\r\n          this.businessPartnerSearchService.removeBidoCustomer({\r\n            customerCode: customer.customerCode\r\n          })\r\n        );\r\n        forkJoin(observables).subscribe({\r\n          next: () => {\r\n            this.customerTableDataSource.deleteDataSelection();\r\n\r\n            this.messageService.showSuccessMessage(\r\n              this.getTranslateKey(\r\n                customers.length === 1 ? 'successOnDeleteBusinessPartner' : 'successOnDeleteBusinessPartners'\r\n              )\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public exportCustomerTable(): void {\r\n    this.exportService.toExcel(\r\n      this.customerTableDataSource.sanitizedData,\r\n      BusinessPartnerSearchComponent.CUSTOMER_TABLE_EXPORT_NAME,\r\n      this.componentData.componentId\r\n    );\r\n  }\r\n\r\n  public loadSearchCriteria(event: ISearchCriteria): void {\r\n    const criteria = event.criteria as BidoCustomerDTO | undefined;\r\n    if (criteria) {\r\n      // FIXME: Do not load criteria first time if we come from stock alert page\r\n      if (!this.componentData.objectId) {\r\n        this.searchCriteria = criteria;\r\n      } else {\r\n        this.componentData.objectId = undefined;\r\n      }\r\n\r\n      this.search();\r\n    } else {\r\n      this.clearSearchCriteria();\r\n    }\r\n  }\r\n\r\n  public openCustomer(objectId: string): void {\r\n    this.businessPartnerSearchService.openCustomer(objectId);\r\n  }\r\n\r\n  public openNewCustomer(): void {\r\n    this.businessPartnerSearchService.openCustomer(undefined);\r\n  }\r\n\r\n  public openCustomers(customers: CustomerRow[]): void {\r\n    customers.forEach((customer) => {\r\n      this.businessPartnerSearchService.openCustomer(customer.customerCode as string);\r\n    });\r\n  }\r\n\r\n  private loadReferentialData(): void {\r\n    forkJoin({\r\n      countries: ListUtils.isEmpty(this.countries) ? this.propertiesService.getCountries() : of(this.countries),\r\n      customerTypes: ListUtils.isEmpty(this.customerTypes)\r\n        ? this.propertiesService.getValue(GenericPropertyConstants.CUSTOMER_TYPE_MAP)\r\n        : of(this.customerTypes)\r\n    }).subscribe((result) => {\r\n      this.countries = result.countries;\r\n      this.customerTypes = result.customerTypes;\r\n    });\r\n  }\r\n\r\n  public search(): void {\r\n    this.customerTableDataSource.setData([]);\r\n    this.customerTableDataSource.isLoading = true;\r\n\r\n    this.businessPartnerSearchService\r\n      .findBidoCustomersBySearchCriteria(this.searchCriteria)\r\n      .pipe(\r\n        map((result) => {\r\n          return result.list\r\n            .filter((customer) => !StringUtils.isNullOrEmpty(customer.customerCode))\r\n            .map((customer, i) => {\r\n              const customerRow: CustomerRow = {\r\n                country: this.formatCountry(customer.country),\r\n                customerCode: customer.customerCode as string,\r\n                customerName: StringUtils.orEmpty(customer.customerName),\r\n                customerType: this.formatCustomerType(customer.customerType),\r\n                isOperator: customer.isOperator,\r\n                isOwner: customer.isOwner\r\n              };\r\n\r\n              return customerRow;\r\n            });\r\n        }),\r\n        finalize(() => {\r\n          this.customerTableDataSource.isLoading = false;\r\n\r\n          super.differ(() => {\r\n            super.scrollToAnchor(this.resultsContainerAnchor);\r\n          });\r\n        })\r\n      )\r\n      .subscribe((customers) => {\r\n        this.customerTableDataSource.setData(customers);\r\n        this.customerTableDataSource.addReferenceDataToColumn('country', this.countries);\r\n        this.customerTableDataSource.addReferenceDataToColumn('customerType', this.customerTypes);\r\n      });\r\n  }\r\n\r\n  private clearSearchCriteria(): void {\r\n    this.searchCriteria = {};\r\n  }\r\n\r\n  public saveSearchCriteriaAsked(): void {\r\n    this.searchCriteriaToSave = this.searchCriteria;\r\n  }\r\n\r\n  private init(): void {\r\n    this.countries = [];\r\n    this.customerTypes = [];\r\n    this.searchCriteria = {};\r\n    this.showAdvancedSearchCriteria = false;\r\n  }\r\n\r\n  private initCustomerTableDataSource(): void {\r\n    this.customerTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        { field: 'customerCode', width: '20%' },\r\n        {\r\n          field: 'customerName',\r\n          translateKey: this.getTranslateKey('customerName'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'isOwner',\r\n          alignment: ColumnAlignment.CENTER,\r\n          translateKey: this.getTranslateKey('isOwner'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'isOperator',\r\n          alignment: ColumnAlignment.CENTER,\r\n          translateKey: this.getTranslateKey('isOperator'),\r\n          width: '10%'\r\n        },\r\n        {\r\n          field: 'customerType',\r\n          translateKey: this.getTranslateKey('customerType'),\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'country',\r\n          translateKey: this.getTranslateKey('country'),\r\n          width: '20%'\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  private formatCountry(countryKey: string | undefined): string {\r\n    if (!!countryKey) {\r\n      const matchingCountry = this.countries.find((country) => country.value === countryKey);\r\n\r\n      return !!matchingCountry ? StringUtils.orEmpty(matchingCountry.label) : '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  private formatCustomerType(customerTypeKey: string | undefined): string {\r\n    if (!!customerTypeKey) {\r\n      const matchingCustomerType = this.customerTypes.find((customerType) => customerType.value === customerTypeKey);\r\n\r\n      return !!matchingCustomerType ? StringUtils.orEmpty(matchingCustomerType.label) : '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetManagementApi } from '../../../../shared/api/fleet-management.api';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { BidoCustomerDTOId } from '../../../../shared/types/api-types/bido-customer-dto-id.interface';\r\nimport { BidoCustomerDTO } from '../../../../shared/types/api-types/bido-customer-dto.interface';\r\nimport { SearchResultsDTO } from '../../../../shared/types/api-types/search-results-dto.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\n\r\n@Injectable()\r\nexport class BusinessPartnerSearchService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetManagementApi: FleetManagementApi,\r\n    private readonly serializationService: SerializationService,\r\n    private readonly tabService: TabService\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public openCustomer(objectId: string | undefined): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.ADM_BUSINESS_PARTNER_FORM,\r\n      objectId: objectId ? this.serializationService.serialize({ customerCode: objectId }) : undefined,\r\n      openMode: objectId ? ComponentOpenMode.Read : ComponentOpenMode.Create\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  // //////////////////////////////////////////////////////////////////////////\r\n\r\n  public findBidoCustomersBySearchCriteria(criteria: BidoCustomerDTO): Observable<SearchResultsDTO<BidoCustomerDTO>> {\r\n    return super.post<BidoCustomerDTO, SearchResultsDTO<BidoCustomerDTO>>(\r\n      this.fleetManagementApi.findBidoCustomersBySearchCriteria,\r\n      criteria\r\n    );\r\n  }\r\n\r\n  public removeBidoCustomer(bidoCustomerId: BidoCustomerDTOId): Observable<boolean> {\r\n    return super.post<BidoCustomerDTOId, boolean>(this.fleetManagementApi.removeBidoCustomer, bidoCustomerId);\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusState\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"statusList\\\"\\r\\n          [(ngModel)]=\\\"item.statusState\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          [disabled]=\\\"!isStatusEditable\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"item.statusDate\\\"\\r\\n          [disabled]=\\\"true\\\"\\r\\n          [showTime]=\\\"true\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".statusUser\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input class=\\\"aw-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"item.statusUser\\\" [disabled]=\\\"true\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.close\\\" | translate }}</button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { DialogComponent } from '../../../shared/types/dialog-component';\r\nimport { ComponentOpenMode } from '../../enums/component-open-mode.enum';\r\nimport { MessageService } from '../../services/message.service';\r\nimport { PropertiesService } from '../../services/properties.service';\r\nimport { SessionService } from '../../services/session.service';\r\nimport { LabelValue } from '../../types/label-value.interface';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-status',\r\n  templateUrl: './dialog-status.component.html'\r\n})\r\nexport class DialogStatusComponent<T> extends DialogComponent implements OnInit {\r\n  @Input() public item: T;\r\n\r\n  @Input() public itemId: string;\r\n\r\n  @Input('isStatusEditable') public isStatusEditable: boolean;\r\n\r\n  @Input('isObjectTypeOfBireSbDTO') public readonly isObjectTypeOfBireSbDTO: boolean;\r\n\r\n  @Input('isObjectTypeOfBireEvolutionDTO') public readonly isObjectTypeOfBireEvolutionDTO: boolean;\r\n\r\n  @Input('isObjectTypeOfBireMaintenancePlanDTO') public readonly isObjectTypeOfBireMaintenancePlanDTO: boolean;\r\n\r\n  @Input('isSapSession') private readonly isSapSession: boolean;\r\n\r\n  public statusList: LabelValue<string>[];\r\n\r\n  public readonly componentId: string;\r\n\r\n  public constructor(\r\n    public readonly sessionService: SessionService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly messageService: MessageService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogStatusComponent');\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.loadStatusList();\r\n  }\r\n\r\n  public close(): void {\r\n    this.display = false;\r\n  }\r\n\r\n  private loadStatusList(): void {\r\n    const statusState = 'statusState';\r\n    this.propertiesService\r\n      .getObjectStatusList(\r\n        this.isObjectTypeOfBireSbDTO,\r\n        this.isObjectTypeOfBireEvolutionDTO,\r\n        this.isObjectTypeOfBireMaintenancePlanDTO,\r\n        this.item[statusState],\r\n        this.isSapSession\r\n      )\r\n      .subscribe(\r\n        (result) => {\r\n          this.statusList = result;\r\n        },\r\n        () => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('errorOnLoadStatusList'));\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\n\r\nimport { DialogStatusComponent } from './dialog-status.component';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [CalendarModule, DropdownModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogStatusComponent];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ]\r\n})\r\nexport class DialogStatusModule {}\r\n","export class BidoEvolutionConstants {\r\n  public static readonly CODE_MODIFICATION: string = 'MOD';\r\n\r\n  public static readonly CODE_EVOLUTION: string = 'EVOL';\r\n\r\n  public static readonly CODE_SB: string = 'SB';\r\n\r\n  public static readonly MODULE_HR: string = 'AD';\r\n\r\n  public static readonly CODE_AD: string = 'AD';\r\n}\r\n","import * as FileSaver from 'file-saver';\r\n\r\nimport { NumberUtils } from './number-utils';\r\n\r\nexport class FileUtils {\r\n  public static readonly KIBIOCTET: number = 1024;\r\n  public static readonly KILOOCTET: number = 1000;\r\n\r\n  public static downloadFile(file: Uint8Array | undefined, fileName: string | undefined): void {\r\n    if (!!file && !!fileName) {\r\n      const byteCharacters = atob(file.toString());\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n\r\n      FileSaver.saveAs(new Blob([new Uint8Array(byteNumbers)]), fileName);\r\n    }\r\n  }\r\n\r\n  public static getExtension(fileName: string | undefined): string {\r\n    return !!fileName && fileName.includes('.') ? fileName.substring(fileName.lastIndexOf('.') + 1) : '';\r\n  }\r\n\r\n  public static getFileContentAsBase64(file: File | undefined, callback: (fileContent: Uint8Array) => void): void {\r\n    if (!!file) {\r\n      const reader: FileReader = new FileReader();\r\n      reader.onloadend = () => {\r\n        let fileContent: any = reader.result; // tslint:disable-line:no-any\r\n        fileContent = fileContent.substring((fileContent.indexOf(',') as number) + 1); // Remove data:*/*;base64,\r\n        callback(fileContent);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  public static getFormattedSize(size: number | undefined): string {\r\n    if (!!size) {\r\n      return size / FileUtils.KILOOCTET < FileUtils.KILOOCTET\r\n        ? `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET)} Ko`\r\n        : `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET / FileUtils.KILOOCTET)} Mo`;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}