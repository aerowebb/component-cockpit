{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/primeng/autocomplete.js","webpack:///./node_modules/primeng/card.js","webpack:///./node_modules/primeng/inputswitch.js","webpack:///./node_modules/primeng/message.js","webpack:///./node_modules/primeng/overlaypanel.js","webpack:///./node_modules/primeng/progressbar.js","webpack:///./node_modules/primeng/radiobutton.js","webpack:///./node_modules/primeng/selectbutton.js","webpack:///./node_modules/primeng/splitbutton.js","webpack:///./src/app/shared/components/add-edit-inventory/add-edit-inventory.component.html","webpack:///./src/app/shared/components/add-edit-inventory/add-edit-inventory.component.scss","webpack:///./src/app/shared/components/add-edit-inventory/add-edit-inventory.component.ts","webpack:///./src/app/shared/components/add-edit-inventory/add-edit-inventory.module.ts","webpack:///./src/app/shared/components/add-edit-inventory/add-edit-inventory.service.ts","webpack:///./src/app/shared/components/add-edit-inventory/dialog-findings/dialog-cockpit-bido-document/dialog-cockpit-bido-document.component.html","webpack:///./src/app/shared/components/add-edit-inventory/dialog-findings/dialog-cockpit-bido-document/dialog-cockpit-bido-document.component.ts","webpack:///./src/app/shared/components/add-edit-inventory/dialog-findings/dialog-findings.component.html","webpack:///./src/app/shared/components/add-edit-inventory/dialog-findings/dialog-findings.component.ts","webpack:///./src/app/shared/components/add-edit-inventory/document-upload-dialog/document-upload-dialog.component.html","webpack:///./src/app/shared/components/add-edit-inventory/document-upload-dialog/document-upload-dialog.component.scss","webpack:///./src/app/shared/components/add-edit-inventory/document-upload-dialog/document-upload-dialog.component.ts","webpack:///./src/app/shared/constants/control-config-constants.ts","webpack:///./src/app/shared/utils/file-utils.ts","webpack:///./src/app/shared/utils/image-utils.ts"],"names":[],"mappings":"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","file":"default~maintenance-cockpit-inspection-cockpit-inspection-module~maintenance-cockpit-workscope-cockp~91d7ce95.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/autocomplete/autocomplete\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/card/card\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputswitch/inputswitch\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/message/message\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/overlaypanel/overlaypanel\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/progressbar/progressbar\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/radiobutton/radiobutton\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/selectbutton/selectbutton\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/splitbutton/splitbutton\"));","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        <span *ngIf=\\\"!!pageComponentData.title\\\">\\r\\n          {{ getComponentName() + \\\".inventoryTitle\\\" | translate }} {{ pageComponentData.title }}\\r\\n        </span>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\">\\r\\n          <span *ngIf=\\\"!!pageComponentData.subtittle\\\"> - {{ pageComponentData.subtittle }} </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-primary-actions\\\">\\r\\n    <button\\r\\n      id=\\\"favorites\\\"\\r\\n      *ngIf=\\\"(!isAddInventory || !addNewInventory) && selectedInventoryList.length > 0\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"warn\\\"\\r\\n      (click)=\\\"deleteInventories()\\\"\\r\\n    >\\r\\n      {{ getComponentName() + \\\".deleteInventory\\\" | translate }}\\r\\n    </button>\\r\\n    <button color=\\\"primary\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"saveInventory()\\\">\\r\\n      {{ \\\"global.save\\\" | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n      id=\\\"actions\\\"\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button id=\\\"favorites\\\" mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <div class=\\\"grid-row\\\" *ngIf=\\\"!isAddInventory\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container grid-cell-scope\\\">\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"grid-cell--12 row-button\\\">\\r\\n                <div class=\\\"grid-cell--11 buttons\\\">\\r\\n                  <!-- ACTIONS -->\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <label *ngIf=\\\"!showInventories && cardList.length > 0\\\" class=\\\"form-label link-class\\\"\\r\\n                      ><a (click)=\\\"toggleInventoryDisplay()\\\"\\r\\n                        >+{{ getComponentName() + \\\".showInventory\\\" | translate }}</a\\r\\n                      ></label\\r\\n                    >\\r\\n                    <label *ngIf=\\\"showInventories && cardList.length > 0\\\" class=\\\"form-label link-class\\\"\\r\\n                      ><a (click)=\\\"toggleInventoryDisplay()\\\"\\r\\n                        >-{{ getComponentName() + \\\".hideInventory\\\" | translate }}</a\\r\\n                      ></label\\r\\n                    >\\r\\n                    <label *ngIf=\\\"cardList.length > 1\\\" class=\\\"form-label  link-class\\\"\\r\\n                      ><a (click)=\\\"selectAllInventories()\\\">{{\\r\\n                        getComponentName() + \\\".selectAll\\\" | translate\\r\\n                      }}</a></label\\r\\n                    >\\r\\n                    <label *ngIf=\\\"cardList.length > 1\\\" class=\\\"form-label  link-class\\\"\\r\\n                      ><a (click)=\\\"unselectAllInventories()\\\">{{\\r\\n                        getComponentName() + \\\".unselectAll\\\" | translate\\r\\n                      }}</a></label\\r\\n                    >\\r\\n                    <label\\r\\n                      class=\\\"form-label link-class\\\"\\r\\n                      *ngIf=\\\"cardList.length > maxVisibleInventories\\\"\\r\\n                      (click)=\\\"expandAll()\\\"\\r\\n                      ><a\\r\\n                        ><span *ngIf=\\\"!expandInventoryList\\\">+ {{ getComponentName() + \\\".showAll\\\" | translate }}</span>\\r\\n                        <span *ngIf=\\\"expandInventoryList\\\">- {{ getComponentName() + \\\".collapse\\\" | translate }}</span></a\\r\\n                      ></label\\r\\n                    >\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                    <div class=\\\"form-group\\\"></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell--1\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <!-- Filter -->\\r\\n                    <span class=\\\"row align-custom custom-height\\\">\\r\\n                      <span class=\\\"lds-hourglass\\\" *ngIf=\\\"loadInventoriesFlag\\\"></span>\\r\\n                      <i\\r\\n                        class=\\\"fa fa-fw fa-filter aw-icon aw-icon-with-overlay\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                        pTooltip=\\\"{{\\r\\n                          getComponentName() + (filtersVisible ? '.hideFilters' : '.showFilters') | translate\\r\\n                        }}\\\"\\r\\n                        tooltipPosition=\\\"top\\\"\\r\\n                        [ngClass]=\\\"{ active: filtersVisible }\\\"\\r\\n                        (click)=\\\"opFilters.toggle($event)\\\"\\r\\n                      ></i>\\r\\n\\r\\n                      <p-overlayPanel\\r\\n                        #opFilters\\r\\n                        [appendTo]=\\\"'body'\\\"\\r\\n                        class=\\\"aw-overlay\\\"\\r\\n                        [dismissable]=\\\"true\\\"\\r\\n                        (onShow)=\\\"filtersVisible = true\\\"\\r\\n                        (onHide)=\\\"filtersVisible = false\\\"\\r\\n                      >\\r\\n                        <div class=\\\"page-content\\\" *ngIf=\\\"overlayContentReady\\\">\\r\\n                          <div class=\\\"grid-row\\\">\\r\\n                            <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                              <div class=\\\"grid-cell-content\\\">\\r\\n                                <div class=\\\"column\\\">\\r\\n                                  <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"form-group flex--auto\\\">\\r\\n                                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pn\\\" | translate }}</label>\\r\\n\\r\\n                                      <div class=\\\"form-control\\\">\\r\\n                                        <p-dropdown\\r\\n                                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                          [(ngModel)]=\\\"searchCriteria.selectedPN\\\"\\r\\n                                          [options]=\\\"inventoryPNList\\\"\\r\\n                                          placeholder=\\\"&nbsp;\\\"\\r\\n                                          [showClear]=\\\"true\\\"\\r\\n                                        ></p-dropdown>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group flex--auto\\\">\\r\\n                                      <label class=\\\"form-label\\\">{{\\r\\n                                        getComponentName() + \\\".workorder\\\" | translate\\r\\n                                      }}</label>\\r\\n\\r\\n                                      <div class=\\\"form-control\\\">\\r\\n                                        <p-dropdown\\r\\n                                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                          [(ngModel)]=\\\"searchCriteria.selectedWO\\\"\\r\\n                                          [options]=\\\"inventoryWOList\\\"\\r\\n                                          placeholder=\\\"&nbsp;\\\"\\r\\n                                          [showClear]=\\\"true\\\"\\r\\n                                        ></p-dropdown>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"form-group flex--auto\\\">\\r\\n                                      <label class=\\\"form-label\\\">{{\\r\\n                                        getComponentName() + \\\".sentence\\\" | translate\\r\\n                                      }}</label>\\r\\n\\r\\n                                      <div class=\\\"form-control\\\">\\r\\n                                        <p-dropdown\\r\\n                                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                          [(ngModel)]=\\\"searchCriteria.selectedSentence\\\"\\r\\n                                          [options]=\\\"inventorySentenceList\\\"\\r\\n                                          placeholder=\\\"&nbsp;\\\"\\r\\n                                          [showClear]=\\\"true\\\"\\r\\n                                        ></p-dropdown>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group flex--auto\\\">\\r\\n                                      <label class=\\\"form-label\\\">{{\\r\\n                                        getComponentName() + \\\".decision\\\" | translate\\r\\n                                      }}</label>\\r\\n\\r\\n                                      <div class=\\\"form-control footer-div\\\">\\r\\n                                        <p-dropdown\\r\\n                                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                                          [(ngModel)]=\\\"searchCriteria.selectedDecision\\\"\\r\\n                                          [options]=\\\"inventoryDecisionList\\\"\\r\\n                                          placeholder=\\\"&nbsp;\\\"\\r\\n                                          [showClear]=\\\"true\\\"\\r\\n                                        ></p-dropdown>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                      <label class=\\\"form-label\\\"> &nbsp;</label>\\r\\n\\r\\n                                      <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n                                        <p-selectButton\\r\\n                                          [(ngModel)]=\\\"searchCriteria.control\\\"\\r\\n                                          [options]=\\\"statusList\\\"\\r\\n                                          multiple=\\\"true\\\"\\r\\n                                        ></p-selectButton>\\r\\n                                      </div>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n\\r\\n                                  <div class=\\\"row action-list\\\">\\r\\n                                    <button type=\\\"button\\\" mat-raised-button (click)=\\\"reset()\\\">\\r\\n                                      {{ \\\"global.reset\\\" | translate }}\\r\\n                                    </button>\\r\\n\\r\\n                                    <button type=\\\"button\\\" mat-raised-button (click)=\\\"filter(); opFilters.hide()\\\">\\r\\n                                      {{ \\\"global.filter\\\" | translate }}\\r\\n                                    </button>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </p-overlayPanel>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"grid-cell--12 custom-control\\\">\\r\\n                <div class=\\\"grid-cell--1 add-inventory\\\" (click)=\\\"addInventory()\\\">\\r\\n                  <p-card>\\r\\n                    <h1>+</h1>\\r\\n                  </p-card>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell--11 column custom-panel margin-class\\\" *ngIf=\\\"!loadInventoriesFlag\\\">\\r\\n                  <div\\r\\n                    class=\\\"row card-row\\\"\\r\\n                    [ngClass]=\\\"{\\r\\n                      'custom-card-row': !expandInventoryList\\r\\n                    }\\\"\\r\\n                    *ngIf=\\\"showInventories\\\"\\r\\n                  >\\r\\n                    <div\\r\\n                      class=\\\"card-container\\\"\\r\\n                      [ngClass]=\\\"{\\r\\n                        'card-serialize-item': isItemSerialized,\\r\\n                        'card-not-serialize-item': !isItemSerialized\\r\\n                      }\\\"\\r\\n                      *ngFor=\\\"let inventory of cardList\\\"\\r\\n                      (click)=\\\"selectInventory(inventory)\\\"\\r\\n                      [class.current]=\\\"inventory.isSelected\\\"\\r\\n                    >\\r\\n                      <p-card class=\\\"card-class\\\"\\r\\n                      [ngClass]=\\\"{\\r\\n                        'card-class': isItemSerialized,\\r\\n                        'card-class-not-serialize': !isItemSerialized\\r\\n                      }\\\"\\r\\n                      [styleClass]=\\\"getStyles(inventory.icon)\\\">\\r\\n                        <div class=\\\"row custom-row\\\">\\r\\n                          <div *ngIf=\\\"!isItemSerialized\\\" title=\\\"{{ inventory.quantity }}\\\">\\r\\n                            <span class=\\\"quantity-non-serialized\\\"> (Q= {{ getTrimQty(inventory.quantity) }})</span>\\r\\n                          </div>\\r\\n                          <div class=\\\"form\\\">\\r\\n                            <label class=\\\"form-label\\\"\\r\\n                              ><b>{{ getComponentName() + \\\".pn\\\" | translate }} :</b></label\\r\\n                            >\\r\\n                            <span class=\\\"margin-class\\\"\\r\\n                              ><a>{{ getTrimQty(inventory.pn) }}</a>\\r\\n                            </span>\\r\\n                          </div>\\r\\n                          <div class=\\\"form\\\" *ngIf=\\\"isItemSerialized && !!inventory.sn\\\">\\r\\n                            <label class=\\\"form-label\\\"\\r\\n                              ><b>{{ getComponentName() + \\\".sn\\\" | translate }} :</b></label\\r\\n                            >\\r\\n                            <span class=\\\"margin-class\\\"\\r\\n                              ><a>{{ getTrimQty(inventory.sn) }}</a></span\\r\\n                            >\\r\\n                          </div>\\r\\n                          <div class=\\\"form\\\" *ngIf=\\\"!isItemSerialized && !!inventory.trackingNumber\\\">\\r\\n                            <label class=\\\"form-label\\\"\\r\\n                              ><b>{{ getComponentName() + \\\".tn\\\" | translate }} :</b></label\\r\\n                            >\\r\\n                            <span class=\\\"margin-class\\\"\\r\\n                              ><a>{{ getTrimQty(inventory.trackingNumber) }}</a></span\\r\\n                            >\\r\\n                          </div>\\r\\n                          <div class=\\\"form\\\">\\r\\n                            <i *ngIf=\\\"!!inventory.sentenceValue\\\"\\r\\n                              ><span class=\\\"quantity\\\">S:</span>\\r\\n                              {{ getTrimLabel(getSentenceLabel(inventory.sentenceValue)) }}</i\\r\\n                            >\\r\\n                            <i *ngIf=\\\"!inventory.sentenceValue\\\"\\r\\n                              ><span class=\\\"quantity\\\">S:</span> {{ getComponentName() + \\\".notSet\\\" | translate }}</i\\r\\n                            >\\r\\n                          </div>\\r\\n                          <div class=\\\"form\\\">\\r\\n                            <i *ngIf=\\\"!!inventory.decisionValue\\\"\\r\\n                              ><span class=\\\"quantity\\\">D:</span>\\r\\n                              {{ getTrimLabel(getDecisionLabel(inventory.decisionValue)) }}</i\\r\\n                            >\\r\\n                            <i *ngIf=\\\"!inventory.decisionValue\\\"\\r\\n                              ><span class=\\\"quantity\\\">D:</span> {{ getComponentName() + \\\".notSet\\\" | translate }}</i\\r\\n                            >\\r\\n                          </div>\\r\\n                          <div class=\\\"form footer-div\\\">\\r\\n                            <i class=\\\"wks-float\\\" *ngIf=\\\"!!inventory.woCode\\\"\\r\\n                              ><b>Wks: </b> {{ getTrimQty(inventory.woCode) }}</i\\r\\n                            >\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </p-card>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- PANEL 2 -->\\r\\n      <div class=\\\"grid-row\\\">\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container grid-cell-scope\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container  loading-indicator\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ getComponentName() + \\\".technicalQuotation\\\" | translate }}\\r\\n                  <div *ngIf=\\\"loadInventoriesFlag\\\" class=\\\"lds-hourglass\\\"></div>\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <div class=\\\"grid-cell--12\\\">\\r\\n                <div class=\\\"grid-cell--4\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"!showOtherPN\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".pn\\\" | translate }}</label>\\r\\n                        <div class=\\\"form-control\\\" *ngIf=\\\"isPNCommon && selectedInventoryList.length > 1 && !selectedPN\\\">\\r\\n                          <i>{{ getComponentName() + \\\".differentPN\\\" | translate }}</i>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <p-autoComplete\\r\\n                            class=\\\"aw-dropdown fixed-width\\\"\\r\\n                            [(ngModel)]=\\\"selectedPN\\\"\\r\\n                            [suggestions]=\\\"pnList\\\"\\r\\n                            [immutable]=\\\"true\\\"\\r\\n                            [dropdown]=\\\"true\\\"\\r\\n                            [forceSelection]=\\\"true\\\"\\r\\n                            (completeMethod)=\\\"searchPN($event)\\\"\\r\\n                            (onSelect)=\\\"onChangePN()\\\"\\r\\n                          ></p-autoComplete>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"showOtherPN\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".otherPN\\\" | translate }}</label>\\r\\n                        <div\\r\\n                          class=\\\"form-control\\\"\\r\\n                          *ngIf=\\\"isOtherPNDifferent && selectedInventoryList.length > 1 && !selectedPN\\\"\\r\\n                        >\\r\\n                          <i>{{ getComponentName() + \\\".differentOtherPN\\\" | translate }}</i>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"otherPN\\\" />\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <!-- Toggle PN and Other PN -->\\r\\n                          <button color=\\\"primary\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"togglePNButton()\\\">\\r\\n                            <span *ngIf=\\\"showOtherPN\\\">{{ getComponentName() + \\\".pnList\\\" | translate }}</span>\\r\\n                            <span *ngIf=\\\"!showOtherPN\\\">{{ getComponentName() + \\\".otherPN\\\" | translate }}</span>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group flex--2\\\" *ngIf=\\\"selectedInventoryList.length === 1 && isItemSerialized\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".sn\\\" | translate }}</label>\\r\\n\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"selectedInventoryList[0].sn\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"isAddInventory || (addNewInventory && selectedInventoryList.length === 0)\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\"\\r\\n                          >{{ getComponentName() + \\\".quantity\\\" | translate }} ({{\\r\\n                            getComponentName() + \\\".expected\\\" | translate\\r\\n                          }}= {{ bireItemDTO.expectedQuantity }})</label\\r\\n                        >\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            [(ngModel)]=\\\"quantityValue\\\"\\r\\n                            (input)=\\\"onQuantityChange()\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"serial-class\\\">\\r\\n                        <!-- SERIALIZED -->\\r\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"isItemSerialized\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".serialNo\\\" | translate }}</label>\\r\\n                          <div class=\\\"form-control custom-control\\\" *ngFor=\\\"let count of snCount; let i = index\\\">\\r\\n                            <span class=\\\"margin-top-class\\\" *ngIf=\\\"snCount.length > 1\\\">#{{ i + 1 }} </span>\\r\\n                            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"count.value\\\" />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div\\r\\n                      *ngIf=\\\"\\r\\n                        !isAddInventory &&\\r\\n                        !addNewInventory &&\\r\\n                        (!isItemSerialized || (isItemSerialized && selectedInventoryList.length > 1))\\r\\n                      \\\"\\r\\n                    >\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-label\\\"\\r\\n                          >{{ getComponentName() + \\\".quantity\\\" | translate }} ({{\\r\\n                            getComponentName() + \\\".expected\\\" | translate\\r\\n                          }}= {{ bireItemDTO.expectedQuantity }})</label\\r\\n                        >\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input\\r\\n                            type=\\\"number\\\"\\r\\n                            class=\\\"aw-input\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            [disabled]=\\\"isItemSerialized || (!isItemSerialized && selectedInventoryList.length > 1)\\\"\\r\\n                            [(ngModel)]=\\\"sumRealQuantity\\\"\\r\\n                            (input)=\\\"onQuantityChange()\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"serial-class\\\">\\r\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"isItemSerialized\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".serialNo\\\" | translate }}</label>\\r\\n                          <div\\r\\n                            class=\\\"form-control custom-control\\\"\\r\\n                            *ngFor=\\\"let inventory of selectedInventoryList; let i = index\\\"\\r\\n                          >\\r\\n                            <span class=\\\"margin-top-class\\\" *ngIf=\\\"selectedInventoryList.length > 1\\\">#{{ i + 1 }} </span>\\r\\n                            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"inventory.sn\\\" />\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- NOT SERIALIZED -->\\r\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"!isItemSerialized && selectedInventoryList.length > 1\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".trackingNumber\\\" | translate }}</label>\\r\\n                          <div class=\\\"form-control\\\" *ngIf=\\\"isTNCommon\\\">\\r\\n                            <i>{{ getComponentName() + \\\".differentTN\\\" | translate }}</i>\\r\\n                          </div>\\r\\n                          <span *ngIf=\\\"selectedInventoryList.length > 1\\\">\\r\\n                            <div class=\\\"form-control\\\" *ngFor=\\\"let inventory of selectedInventoryList\\\">\\r\\n                              <input\\r\\n                                type=\\\"text\\\"\\r\\n                                class=\\\"aw-input\\\"\\r\\n                                *ngIf=\\\"!!inventory.trackingNumber\\\"\\r\\n                                disabled\\r\\n                                [(ngModel)]=\\\"inventory.trackingNumber\\\"\\r\\n                              />\\r\\n                            </div>\\r\\n                          </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\" *ngIf=\\\"selectedInventoryList.length === 1 && !isItemSerialized\\\">\\r\\n                          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".trackingNumber\\\" | translate }}</label>\\r\\n\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"selectedInventoryList[0].trackingNumber\\\" />\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"isAddInventory || (addNewInventory && selectedInventoryList.length === 0)\\\">\\r\\n                      <!-- NOT SERIALIZED -->\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"!isItemSerialized\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".trackingNumber\\\" | translate }}</label>\\r\\n\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"newInventory.trackingNumber\\\" />\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".targetPN\\\" | translate }}</label>\\r\\n                      <div\\r\\n                        class=\\\"form-control\\\"\\r\\n                        *ngIf=\\\"isTargetPNCommon && selectedInventoryList.length > 1 && !selectedTargetPN\\\"\\r\\n                      >\\r\\n                        <i>{{ getComponentName() + \\\".differentTargetPN\\\" | translate }}</i>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <p-autoComplete\\r\\n                          class=\\\"aw-dropdown fixed-width\\\"\\r\\n                          [(ngModel)]=\\\"selectedTargetPN\\\"\\r\\n                          [suggestions]=\\\"targetPNList\\\"\\r\\n                          [immutable]=\\\"true\\\"\\r\\n                          [dropdown]=\\\"true\\\"\\r\\n                          [forceSelection]=\\\"true\\\"\\r\\n                          (completeMethod)=\\\"searchTargetPN($event)\\\"\\r\\n                          (onSelect)=\\\"onChangeTargetPN()\\\"\\r\\n                        ></p-autoComplete>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell--11\\\">\\r\\n                  <div class=\\\"column\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group flex--2\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".sentence\\\" | translate }}</label>\\r\\n                        <div\\r\\n                          class=\\\"form-control\\\"\\r\\n                          *ngIf=\\\"isIntersectionSentenceDiff && selectedInventoryList.length > 1 && !selectedSentence\\\"\\r\\n                        >\\r\\n                          <i>{{ getComponentName() + \\\".differentSentence\\\" | translate }}</i>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-control aw-selectbutton-wrapper select-button-custom\\\">\\r\\n                          <p-selectButton\\r\\n                            [(ngModel)]=\\\"selectedSentence\\\"\\r\\n                            [options]=\\\"sentenceList\\\"\\r\\n                            (onChange)=\\\"changeSentence()\\\"\\r\\n                          ></p-selectButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"selectedInventoryList.length > 0\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".configurationStatus\\\" | translate }}</label>\\r\\n                        <span *ngIf=\\\"getConfiguration() === ok\\\" class=\\\"alert alert--ok\\\">OK</span>\\r\\n                        <span *ngIf=\\\"getConfiguration() === nok\\\" class=\\\"alert alert--nok\\\">NOK</span>\\r\\n                        <span *ngIf=\\\"getConfiguration() === warning\\\" class=\\\"alert alert--warning\\\">WARNING</span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"form-group flex--2\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".decision\\\" | translate }}</label>\\r\\n                        <div\\r\\n                          class=\\\"form-control\\\"\\r\\n                          *ngIf=\\\"isIntersectionDecisionDiff && selectedInventoryList.length > 1 && !selectedDecision\\\"\\r\\n                        >\\r\\n                          <i>{{ getComponentName() + \\\".differentDecision\\\" | translate }}</i>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-control aw-selectbutton-wrapper footer-div select-button-custom\\\">\\r\\n                          <p-selectButton\\r\\n                            [(ngModel)]=\\\"selectedDecision\\\"\\r\\n                            [options]=\\\"decisionList\\\"\\r\\n                            (onChange)=\\\"changeDecision()\\\"\\r\\n                          ></p-selectButton>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\" *ngIf=\\\"selectedInventoryList.length > 0\\\">\\r\\n                        <label class=\\\"form-label\\\">{{ getComponentName() + \\\".wo\\\" | translate }}</label>\\r\\n                        <div class=\\\"form-control\\\">\\r\\n                          <a class=\\\"link-class\\\" (click)=\\\"openWorkOrderLink(selectedInventoryList[0])\\\">{{\\r\\n                            selectedInventoryList[0].woCode\\r\\n                          }}</a>\\r\\n                          <p-progressBar\\r\\n                            *ngIf=\\\"!!selectedInventoryList[0].woCode\\\"\\r\\n                            [value]=\\\"selectedInventoryList[0].progress\\\"\\r\\n                          >\\r\\n                          </p-progressBar>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".comment\\\" | translate }}</label>\\r\\n                      <div class=\\\"form-control\\\">\\r\\n                        <textarea\\r\\n                          class=\\\"aw-textarea\\\"\\r\\n                          [rows]=\\\"3\\\"\\r\\n                          pInputTextarea\\r\\n                          maxlength=\\\"150\\\"\\r\\n                          [disabled]=\\\"isReadOpenMode\\\"\\r\\n                        ></textarea>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"grid-cell--1\\\" *ngIf=\\\"!isAddInventory && selectedInventoryList.length !== 0\\\">\\r\\n                  <img />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- PANEL 2 -->\\r\\n      <div class=\\\"grid-row\\\" *ngIf=\\\"isFromInspection\\\">\\r\\n        <!-- FINDINGS -->\\r\\n        <div class=\\\"grid-cell--6\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container grid-cell-scope\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container loading-indicator\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ getComponentName() + \\\".findings\\\" | translate }}\\r\\n                  <div *ngIf=\\\"loadInventoriesFlag\\\" class=\\\"lds-hourglass\\\"></div>\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\" *ngIf=\\\"!loadInventoriesFlag\\\">\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #ptableFindingsElement\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"findingCols\\\"\\r\\n                [value]=\\\"findingsList\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n                scrollHeight=\\\"25vh\\\"\\r\\n                [(selection)]=\\\"selectedFinding\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isfilterTable\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isfilterTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableCusCustomerGlobalFilter\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"ptableFindingsElement.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        *ngIf=\\\"selectedFinding.length > 0\\\"\\r\\n                        mat-raised-button\\r\\n                        color=\\\"warn\\\"\\r\\n                        (click)=\\\"deleteFindings()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.delete\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        type=\\\"button\\\"\\r\\n                        *ngIf=\\\"selectedFinding.length === 1\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"editFindings()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.edit\\\" | translate }}\\r\\n                      </button>\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedFinding.length === 0\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openFindingsDialog()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.add\\\" | translate }}\\r\\n                      </button>\\r\\n\\r\\n                      <button\\r\\n                        *ngIf=\\\"selectedFinding.length === 1\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        mat-raised-button\\r\\n                        (click)=\\\"openFindingsDialogInReadMode()\\\"\\r\\n                      >\\r\\n                        {{ \\\"global.open\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      {{ getComponentName() + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                      <span *ngSwitchCase=\\\"'damage'\\\">\\r\\n                        <div>\\r\\n                          <a>{{ rowData[\\\"damageCode\\\"] }}</a>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                          <i>{{ rowData[\\\"damageDescription\\\"] }}</i>\\r\\n                        </div>\\r\\n\\r\\n                        <div>\\r\\n                          {{ getComponentName() + \\\".criticality\\\" | translate }} : <b>{{ rowData[\\\"criticality\\\"] }}</b>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                          {{ getComponentName() + \\\".quantity\\\" | translate }} : <b>{{ rowData[\\\"quantity\\\"] }}</b>\\r\\n                        </div>\\r\\n                      </span>\\r\\n                      <span *ngSwitchCase=\\\"'localisation'\\\">\\r\\n                        <div>\\r\\n                          <b>{{ rowData[\\\"localisationCode\\\"] }}</b>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                          <a>{{ rowData[\\\"location\\\"] }}</a>\\r\\n                        </div>\\r\\n                      </span>\\r\\n                      <span *ngSwitchCase=\\\"'illustration'\\\">\\r\\n                        <div class=\\\"illustration\\\">\\r\\n                          <img\\r\\n                            class=\\\"img-class\\\"\\r\\n                            *ngIf=\\\"\\r\\n                              !!rowData.bireDocumentDTOList &&\\r\\n                              rowData.bireDocumentDTOList.length > 0 &&\\r\\n                              !!rowData.bireDocumentDTOList[0].docFile\\r\\n                            \\\"\\r\\n                            [src]=\\\"rowData.additionalData\\\"\\r\\n                          />\\r\\n                        </div>\\r\\n                      </span>\\r\\n\\r\\n                      <span *ngSwitchDefault>\\r\\n                        {{ rowData[col.field] }}\\r\\n                      </span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- WORKS -->\\r\\n        <div class=\\\"grid-cell--6\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container grid-cell-scope\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container  loading-indicator\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ getComponentName() + \\\".works\\\" | translate }}\\r\\n                  <div *ngIf=\\\"loadInventoriesFlag\\\" class=\\\"lds-hourglass\\\"></div>\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\" *ngIf=\\\"!loadInventoriesFlag\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">{{ getComponentName() + \\\".reworkedPN\\\" | translate }}</label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      [options]=\\\"reworkPNs\\\"\\r\\n                      placeholder=\\\"&nbsp;\\\"\\r\\n                      [showClear]=\\\"true\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">{{ getComponentName() + \\\".mroCenter\\\" | translate }}</label>\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      [(ngModel)]=\\\"selectedMroCenter\\\"\\r\\n                      [options]=\\\"mroCenterList\\\"\\r\\n                      (onChange)=\\\"changeMroCenterAndLoadTask()\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskType\\\" | translate }}</label>\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <p-dropdown\\r\\n                      class=\\\"aw-dropdown fixed-width\\\"\\r\\n                      [(ngModel)]=\\\"selectedTask\\\"\\r\\n                      [options]=\\\"taskList\\\"\\r\\n                      (onChange)=\\\"changeTaskType()\\\"\\r\\n                    ></p-dropdown>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <p-table\\r\\n                [resizableColumns]=\\\"true\\\"\\r\\n                #ptableWorksElement\\r\\n                class=\\\"aw-table2\\\"\\r\\n                [columns]=\\\"worksCols\\\"\\r\\n                [value]=\\\"workList\\\"\\r\\n                [(selection)]=\\\"selectedWork\\\"\\r\\n                [scrollable]=\\\"true\\\"\\r\\n                scrollHeight=\\\"25vh\\\"\\r\\n              >\\r\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n                  <span *ngIf=\\\"!isfilterTable\\\"> &nbsp;</span>\\r\\n\\r\\n                  <div *ngIf=\\\"isfilterTable\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                    <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                    <div class=\\\"lds-hourglass\\\"></div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"caption\\\">\\r\\n                  <div class=\\\"aw-table-header\\\">\\r\\n                    <div class=\\\"aw-table-global-filter\\\">\\r\\n                      <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                        <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </label>\\r\\n\\r\\n                      <input\\r\\n                        #ptableCusCustomerGlobalFilter\\r\\n                        class=\\\"aw-table-global-filter-input\\\"\\r\\n                        type=\\\"text\\\"\\r\\n                        placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                        (input)=\\\"ptableWorksElement.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"aw-table-actions\\\">\\r\\n                      <button type=\\\"button\\\" mat-raised-button *ngIf=\\\"selectedWork.length > 0\\\" (click)=\\\"applyTask()\\\">\\r\\n                        {{ getComponentName() + \\\".applied\\\" | translate }}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"aw-table-icon-actions\\\">\\r\\n                      <i\\r\\n                        class=\\\"fa fa-fw fa-filter aw-icon aw-icon-with-border aw-icon-with-overlay\\\"\\r\\n                        aria-hidden=\\\"true\\\"\\r\\n                        tooltipPosition=\\\"top\\\"\\r\\n                        (click)=\\\"workFilters.toggle($event)\\\"\\r\\n                      ></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n                  <colgroup>\\r\\n                    <col class=\\\"aw-table-checkbox-wrapper\\\" />\\r\\n                    <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width, display: col.display }\\\" />\\r\\n                  </colgroup>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                  <tr>\\r\\n                    <th class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableHeaderCheckbox class=\\\"aw-table-checkbox\\\"></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n\\r\\n                    <th\\r\\n                      pResizableColumn\\r\\n                      *ngFor=\\\"let col of columns\\\"\\r\\n                      [ngStyle]=\\\"{ 'text-align': col.alignment, display: col.display }\\\"\\r\\n                    >\\r\\n                      {{ getComponentName() + \\\".\\\" + col.field | translate }}\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n\\r\\n                <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n                  <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                    <td class=\\\"aw-table-checkbox-wrapper\\\">\\r\\n                      <p-tableCheckbox class=\\\"aw-table-checkbox\\\" [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n\\r\\n                    <td\\r\\n                      *ngFor=\\\"let col of columns\\\"\\r\\n                      [ngSwitch]=\\\"col.field\\\"\\r\\n                      [ngStyle]=\\\"{ 'text-align': col.alignment, display: col.display }\\\"\\r\\n                    >\\r\\n                      <span *ngSwitchCase=\\\"'task'\\\">\\r\\n                        <div>\\r\\n                          <b>{{ rowData[\\\"taskCode\\\"] }}</b>\\r\\n                        </div>\\r\\n                        <div title=\\\"{{ rowData['designation'] }}\\\" class=\\\"description\\\">\\r\\n                          <i>{{ rowData[\\\"taskDesignation\\\"] }}</i>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                          {{ getComponentName() + \\\".type\\\" | translate }} : <b>{{ rowData[\\\"taskTypeLabel\\\"] }}</b>\\r\\n                        </div>\\r\\n                      </span>\\r\\n                      <span *ngSwitchCase=\\\"'workorder'\\\">\\r\\n                        <div>\\r\\n                          <a>{{ rowData[\\\"workorder\\\"] }}</a>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!!rowData['progress']\\\">\\r\\n                          <p-progressBar [value]=\\\"rowData['progress']\\\"></p-progressBar>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                          <i>{{ rowData[\\\"woText\\\"] }}</i>\\r\\n                        </div>\\r\\n                      </span>\\r\\n                      <span *ngSwitchCase=\\\"'applied'\\\">\\r\\n                        <p-inputSwitch [(ngModel)]=\\\"rowData[col.field]\\\" (onChange)=\\\"taskApplied()\\\"></p-inputSwitch>\\r\\n                      </span>\\r\\n                      <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </ng-template>\\r\\n              </p-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- DOCUMENT TAB -->\\r\\n      <div\\r\\n        class=\\\"grid-row\\\"\\r\\n        *ngIf=\\\"selectedInventoryList.length === 1 || ((isAddInventory || addNewInventory) && quantityValue === 1)\\\"\\r\\n      >\\r\\n        <div class=\\\"grid-cell--12\\\">\\r\\n          <div class=\\\"grid-cell grid-cell--container grid-cell-scope\\\">\\r\\n            <div class=\\\"grid-cell-header\\\">\\r\\n              <div class=\\\"grid-cell-title-container  loading-indicator\\\">\\r\\n                <h3 class=\\\"grid-cell-title\\\">\\r\\n                  {{ getComponentName() + \\\".documents\\\" | translate }}\\r\\n                  ({{ documentTableDataSource ? documentTableDataSource.dataCount : 0 }})\\r\\n                </h3>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell-content\\\">\\r\\n              <a-table [dataSource]=\\\"documentTableDataSource\\\">\\r\\n                <ng-template tableActionsDef>\\r\\n                  <button\\r\\n                    *ngIf=\\\"documentTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"downloadFiles()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.download\\\" | translate }}\\r\\n                  </button>\\r\\n                  <button\\r\\n                    *ngIf=\\\"!isReadOpenMode && documentTableDataSource.hasDataSelection\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    (click)=\\\"deleteDocuments()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.delete\\\" | translate }}\\r\\n                  </button>\\r\\n                  <button\\r\\n                    *ngIf=\\\"!isReadOpenMode && documentTableDataSource.dataSelectionCount === 1\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"editDocument()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.edit\\\" | translate }}\\r\\n                  </button>\\r\\n\\r\\n                  <button\\r\\n                    *ngIf=\\\"!isReadOpenMode && documentTableDataSource.dataSelectionCount === 1\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    mat-raised-button\\r\\n                    (click)=\\\"openDocument()\\\"\\r\\n                  >\\r\\n                    {{ \\\"global.open\\\" | translate }}\\r\\n                  </button>\\r\\n                  <p-fileUpload\\r\\n                    #fileUploader\\r\\n                    *ngIf=\\\"!isReadOpenMode && !documentTableDataSource.hasDataSelection\\\"\\r\\n                    chooseLabel=\\\"{{ 'global.upload' | translate }}\\\"\\r\\n                    name=\\\"document[]\\\"\\r\\n                    customUpload=\\\"true\\\"\\r\\n                    mode=\\\"basic\\\"\\r\\n                    auto=\\\"true\\\"\\r\\n                    (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                  ></p-fileUpload>\\r\\n                </ng-template>\\r\\n                <ng-template columnDef=\\\"docEndOfValidityDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                  {{ rowData.docEndOfValidityDate | date: \\\"yyyy/MM/dd\\\" }}\\r\\n                </ng-template>\\r\\n                <ng-template columnDef=\\\"docExtension\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <span> {{ showDocExtension(rowData) }} </span>\\r\\n                </ng-template>\\r\\n                <ng-template columnDef=\\\"docPublicationDate\\\" let-rowData=\\\"rowData\\\">\\r\\n                  <span>\\r\\n                    {{ rowData.docPublicationDate | date: \\\"yyyy/MM/dd\\\" }}\\r\\n                  </span>\\r\\n                </ng-template>\\r\\n              </a-table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<p-overlayPanel #workFilters class=\\\"aw-overlay\\\" (onShow)=\\\"showFilterPanel = true\\\" (onHide)=\\\"showFilterPanel = false\\\">\\r\\n  <div class=\\\"grid-row\\\">\\r\\n    <div class=\\\"grid-cell--12\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">&nbsp;</label>\\r\\n\\r\\n          <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n            <p-selectButton\\r\\n              [(ngModel)]=\\\"worksSearchCriteria.selectedToggle\\\"\\r\\n              [options]=\\\"toggleList\\\"\\r\\n              multiple=\\\"true\\\"\\r\\n            ></p-selectButton>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".reworkedPN\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [(ngModel)]=\\\"worksSearchCriteria.selectedReworkPN\\\"\\r\\n              [options]=\\\"reworkPNList\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">{{ getComponentName() + \\\".taskCode\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-autoComplete\\r\\n              *ngIf=\\\"showFilterPanel\\\"\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [(ngModel)]=\\\"worksSearchCriteria.selectedCode\\\"\\r\\n              [suggestions]=\\\"taskCodeList\\\"\\r\\n              field=\\\"label\\\"\\r\\n              [immutable]=\\\"true\\\"\\r\\n              [dropdown]=\\\"true\\\"\\r\\n              [forceSelection]=\\\"true\\\"\\r\\n              (completeMethod)=\\\"searchTaskCodeList($event)\\\"\\r\\n            ></p-autoComplete>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".taskDesignation\\\" | translate }}</label>\\r\\n\\r\\n          <div class=\\\"form-control aw-selectbutton-wrapper\\\">\\r\\n            <p-autoComplete\\r\\n              *ngIf=\\\"showFilterPanel\\\"\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              [(ngModel)]=\\\"worksSearchCriteria.selectedDesignation\\\"\\r\\n              [suggestions]=\\\"designationList\\\"\\r\\n              field=\\\"label\\\"\\r\\n              [immutable]=\\\"true\\\"\\r\\n              [dropdown]=\\\"true\\\"\\r\\n              [forceSelection]=\\\"true\\\"\\r\\n              (completeMethod)=\\\"searchDesignationList($event)\\\"\\r\\n            ></p-autoComplete>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row action-list\\\">\\r\\n        <button type=\\\"button\\\" mat-raised-button (click)=\\\"resetWorks()\\\">\\r\\n          {{ \\\"global.reset\\\" | translate }}\\r\\n        </button>\\r\\n\\r\\n        <button type=\\\"button\\\" mat-raised-button (click)=\\\"workFilters.hide(); showFilterPanel = false; filterWorks()\\\">\\r\\n          {{ \\\"global.filter\\\" | translate }}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</p-overlayPanel>\\r\\n\\r\\n<aw-dialog-findings\\r\\n  *ngIf=\\\"showFindingsDialog\\\"\\r\\n  [openMode]=\\\"findingsDialogOpenMode\\\"\\r\\n  [(display)]=\\\"showFindingsDialog\\\"\\r\\n  [finding]=\\\"finding\\\"\\r\\n  (onAddFindings)=\\\"addFindings($event)\\\"\\r\\n></aw-dialog-findings>\\r\\n\\r\\n<aw-document-upload-dialog\\r\\n  *ngIf=\\\"showAddDocumentDialog\\\"\\r\\n  [(display)]=\\\"showAddDocumentDialog\\\"\\r\\n  [openMode]=\\\"documentDialogOpenMode\\\"\\r\\n  [document]=\\\"currentDocument\\\"\\r\\n  [types]=\\\"documentTypes\\\"\\r\\n  (onValidated)=\\\"addNewDocument($event)\\\"\\r\\n>\\r\\n</aw-document-upload-dialog>\\r\\n\"","module.exports = \".display--flex-column {\\n  display: flex !important;\\n  flex-direction: column !important; }\\n\\n.display--flex-row {\\n  display: flex !important;\\n  flex-direction: row !important; }\\n\\n.display--none {\\n  display: none !important; }\\n\\n.height--100 {\\n  height: 100%; }\\n\\n.min-width--fit-content {\\n  min-width: -webkit-fit-content !important;\\n  min-width: -moz-fit-content !important;\\n  min-width: fit-content !important; }\\n\\n.position--relative {\\n  position: relative !important; }\\n\\n.scroll-y--none {\\n  overflow-y: hidden !important; }\\n\\n.text--unselectable {\\n  -webkit-user-select: none !important;\\n     -moz-user-select: none !important;\\n      -ms-user-select: none !important;\\n          user-select: none !important; }\\n\\n.visibility--hidden {\\n  visibility: hidden !important; }\\n\\n.width--10 {\\n  width: 10%; }\\n\\n.width--20 {\\n  width: 20%; }\\n\\n.width--30 {\\n  width: 30%; }\\n\\n.width--40 {\\n  width: 50%; }\\n\\n.width--50 {\\n  width: 50%; }\\n\\n.width--60 {\\n  width: 60%; }\\n\\n.width--70 {\\n  width: 70%; }\\n\\n.width--80 {\\n  width: 80%; }\\n\\n.width--90 {\\n  width: 90%; }\\n\\n.width--100 {\\n  width: 100%; }\\n\\n.flex--1 {\\n  flex: 1 !important; }\\n\\n.flex--2 {\\n  flex: 2 !important; }\\n\\n.flex--3 {\\n  flex: 3 !important; }\\n\\n.flex--4 {\\n  flex: 4 !important; }\\n\\n.flex--5 {\\n  flex: 5 !important; }\\n\\n.flex--auto {\\n  flex: auto !important; }\\n\\n.flex-row--align-center {\\n  align-items: center !important; }\\n\\n.flex-row--align-end {\\n  align-items: flex-end !important; }\\n\\n.flex-row--align-start {\\n  align-items: flex-start !important; }\\n\\n.flex-row--justify-center {\\n  justify-content: center !important; }\\n\\n.flex-row--justify-end {\\n  justify-content: flex-end !important; }\\n\\n.flex-row--justify-start {\\n  justify-content: flex-start !important; }\\n\\n:host .alert {\\n  display: inline-block;\\n  text-transform: uppercase;\\n  font-weight: 600;\\n  width: 8em;\\n  text-align: center;\\n  margin-left: 1.2em;\\n  margin-top: 1em; }\\n\\n:host .alert.alert--ok {\\n    background-color: #4caf50;\\n    border-radius: 1em; }\\n\\n:host .alert.alert--warning {\\n    background-color: #ffc107;\\n    border-radius: 1em; }\\n\\n:host .alert.alert--nok {\\n    background-color: #f6685e;\\n    border-radius: 1em; }\\n\\n:host .alert.alert--none {\\n    background-color: #c8d4d6; }\\n\\n:host .card-container {\\n  margin-right: 0.5em;\\n  margin-left: 0.5em;\\n  margin-bottom: 0.5em;\\n  border-radius: 1em !important; }\\n\\n:host .card-serialize-item {\\n  width: 14.5em; }\\n\\n:host .card-not-serialize-item {\\n  width: 16.5em; }\\n\\n:host .custom-cell {\\n  border-radius: 1em !important;\\n  box-shadow: 0.2em 0.2em #888888 !important; }\\n\\n:host ::ng-deep .ui-card {\\n  cursor: pointer !important; }\\n\\n:host .link-class {\\n  padding-right: 10em;\\n  cursor: pointer; }\\n\\n:host .custom-column {\\n  padding: 1em; }\\n\\n:host .custom-height {\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  font-size: 1.2em; }\\n\\n:host .custom-row {\\n  display: grid !important; }\\n\\n:host .form {\\n  padding: 0.2em; }\\n\\n:host .margin-class {\\n  margin-left: 0.3em; }\\n\\n:host .margin-top-class {\\n  margin-top: 0.25em;\\n  margin-right: 0.5em; }\\n\\n:host .custom-grid {\\n  width: auto !important; }\\n\\n:host .border-class {\\n  border: 1px solid !important; }\\n\\n:host ::ng-deep .card-class .alert--ok {\\n  border-left: 0.3em solid #4caf50 !important;\\n  height: 10em !important; }\\n\\n:host ::ng-deep .card-class .alert--nok {\\n  border-left: 0.3em solid #f6685e !important;\\n  height: 10em !important; }\\n\\n:host ::ng-deep .card-class .alert--warning {\\n  border-left: 0.3em solid #f6685e !important;\\n  height: 10em !important; }\\n\\n:host ::ng-deep .card-class-not-serialize .alert--ok {\\n  border-left: 0.3em solid #4caf50 !important;\\n  height: 10.5em !important; }\\n\\n:host ::ng-deep .card-class-not-serialize .alert--nok {\\n  border-left: 0.3em solid #f6685e !important;\\n  height: 10.5em !important; }\\n\\n:host ::ng-deep .card-class-not-serialize .alert--warning {\\n  border-left: 0.3em solid #f6685e !important;\\n  height: 10.5em !important; }\\n\\n:host .footer-div {\\n  display: inline !important; }\\n\\n:host .wks-float {\\n  float: left; }\\n\\n:host .action-class {\\n  float: right; }\\n\\n:host .add-inventory {\\n  cursor: pointer;\\n  margin-top: 2em; }\\n\\n:host .link-class {\\n  cursor: pointer; }\\n\\n:host .current {\\n  border: 0.2em solid #595959 !important;\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content; }\\n\\n:host .align-custom {\\n  text-align: right; }\\n\\n:host .custom-button {\\n  display: flex;\\n  position: absolute;\\n  padding: 1em; }\\n\\n:host .float-right {\\n  float: right;\\n  padding-right: 0.5em;\\n  cursor: pointer; }\\n\\n:host .custom-control {\\n  display: flex;\\n  padding: 0 !important; }\\n\\n:host .buttons {\\n  display: contents; }\\n\\n:host .row-button {\\n  display: flex;\\n  padding: 0.2em !important; }\\n\\n:host .quantity {\\n  font-weight: bold; }\\n\\n:host .quantity-non-serialized {\\n  font-weight: bold;\\n  float: right; }\\n\\n:host .custom-panel {\\n  width: 100%;\\n  overflow-x: auto; }\\n\\n:host .custom-card-row {\\n  flex-wrap: initial !important; }\\n\\n:host .card-row {\\n  padding-bottom: 1em; }\\n\\n:host .serial-class {\\n  overflow-y: auto;\\n  max-height: 20em; }\\n\\n:host .inventory-title {\\n  padding-left: 0.5em;\\n  font-style: italic;\\n  font-size: large; }\\n\\n:host .select-button-custom {\\n  display: block !important; }\\n\\n:host .description {\\n  font-style: italic;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  max-width: 15em; }\\n\\n:host .btn-group {\\n  margin-right: -2em !important; }\\n\\n::ng-deep .action-list {\\n  justify-content: flex-end; }\\n\\n::ng-deep .action-list .aw-btn {\\n    margin-left: 8px; }\\n\\n::ng-deep .action-list .aw-btn:first-of-type {\\n      margin-left: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { cloneDeep as _cloneDeep } from 'lodash-es';\r\nimport { MenuItem, SelectItem } from 'primeng/api';\r\nimport { FileUpload } from 'primeng/primeng';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ComponentOpenMode } from '../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../shared/services/session.service';\r\nimport { TabService } from '../../../shared/services/tab.service';\r\nimport { PageComponentData } from '../../../shared/types/page-component-data.interface';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { ComponentConstants } from '../../constants/component-constants';\r\nimport { ControlConfigConstants } from '../../constants/control-config-constants';\r\nimport { GenericPropertyConstants } from '../../constants/generic-property-constants';\r\nimport { ConfirmationService } from '../../services/confirmation.service';\r\nimport { DateService } from '../../services/date.service';\r\nimport { PropertiesService } from '../../services/properties.service';\r\nimport { FetchSentenceDecisionInputDTO } from '../../types/api-input-types/maintenance-component-cockpit/fetch-sentence-decision-input-dto.interface';\r\nimport { BidoDocumentationTableOutputDTO } from '../../types/api-output-types/fleet-management/bido-documentation-table-output-dto.interface';\r\nimport { GetPartNumberStructureOutputDTO } from '../../types/api-output-types/get-part-number-structure-output-dto.interface';\r\nimport { IWBFindingsCustom } from '../../types/api-output-types/maintenance-component-cockpit/iwb-findings-custom.interface';\r\nimport { SentenceAndDecisionListOutput } from '../../types/api-output-types/maintenance-component-cockpit/sentence-and-decision-list-output.interface';\r\nimport { TechnicalQuotationOutput } from '../../types/api-output-types/maintenance-component-cockpit/technical-quotation-output.interface';\r\nimport { DamagesWithItemVersionOutput } from '../../types/api-output-types/task-management/damages-with-item-version-output.interface';\r\nimport { TaskAssociatedItemOutput } from '../../types/api-output-types/task-management/task-associated-item-output.interface';\r\nimport { BireItemForWorkscopeTreeDTO } from '../../types/api-output-types/workscope-component/bire-item-for-workscope-tree-dto.interface';\r\nimport { BidmWorkOrderDTOId } from '../../types/api-types/bidm-work-order-dto-id.interface';\r\nimport { BidoDocumentationDTOId } from '../../types/api-types/bido-documentation-dto-id.interface';\r\nimport { BidoDocumentationDTO } from '../../types/api-types/bido-documentation-dto.interface';\r\nimport { BireDocumentDTO } from '../../types/api-types/bire-document-dto.interface';\r\nimport { BireItemDTOId } from '../../types/api-types/bire-item-dto-id.interface';\r\nimport { BireItemVersionDTOId } from '../../types/api-types/bire-item-version-dto-id.interface';\r\nimport { BireLocalisationItemDTO } from '../../types/api-types/bire-localisation-item-dto.interface';\r\nimport { BirePnDTOId } from '../../types/api-types/bire-pn-dto-id.interface';\r\nimport { BireTaskDTO } from '../../types/api-types/bire-task-dto.interface';\r\nimport { BsdeProjectDTO } from '../../types/api-types/bsde-project-dto.interface';\r\nimport { FormPageComponent } from '../../types/form-page-component';\r\nimport { LabelValue } from '../../types/label-value.interface';\r\nimport { FileUtils } from '../../utils/file-utils';\r\nimport { ImageUtils } from '../../utils/image-utils';\r\nimport { SelectItemUtils } from '../../utils/select-item-utils';\r\nimport { StringUtils } from '../../utils/string-utils';\r\nimport { TableDataSource } from '../table/table-data-source';\r\n\r\nimport { AddEditInventoryService } from './add-edit-inventory.service';\r\n\r\nexport interface BreadcrumbsLabel {\r\n  title?: string;\r\n  subtittle?: string;\r\n  index: number;\r\n  data?: BsdeProjectDTO;\r\n}\r\n\r\n// Inventory DTO\r\ninterface InventoryDTO extends TechnicalQuotationOutput {\r\n  index: number;\r\n  control?: string;\r\n  quantity?: string;\r\n  icon?: string;\r\n  sentenceList?: string[];\r\n  decisionList?: string[];\r\n  serialized?: boolean;\r\n  isSelected?: boolean;\r\n  targetPN?: string;\r\n  comment?: string;\r\n  trackingNumber?: string;\r\n  progress?: number;\r\n  findings?: FindingsInterface[];\r\n  works?: WorkListInterface[];\r\n  document?: BidoDocumentationTableOutputDTO[];\r\n  documentsUpdated?: BidoDocumentationTableOutputDTO[];\r\n  documentsAdded?: BidoDocumentationTableOutputDTO[];\r\n}\r\n\r\n// Findings Table Interface\r\ninterface FindingsInterface extends IWBFindingsCustom {\r\n  index?: number;\r\n  damageDescription?: string;\r\n  location?: string;\r\n  findingComment?: string;\r\n  bireDocumentDTOList?: BireDocumentDTO[];\r\n  additionalData?: unknown;\r\n}\r\n\r\n// Work List Table Interface\r\ninterface WorkListInterface extends BireTaskDTO {\r\n  damage?: string;\r\n  mroCenter?: string;\r\n  workOrder?: string;\r\n  applied?: boolean;\r\n  progress?: number;\r\n  taskTypeLabel?: string;\r\n}\r\n\r\ninterface SNListInterface {\r\n  value?: string;\r\n}\r\n\r\ninterface SearchCriteria {\r\n  selectedPN?: string;\r\n  selectedWO?: string;\r\n  selectedSentence?: string;\r\n  selectedDecision?: string;\r\n  control?: string[];\r\n}\r\n\r\n// Document Table Interface\r\ninterface DocumentTableRow {\r\n  docName?: string;\r\n  docPublicationDate?: string;\r\n  docEndOfValidityDate?: string;\r\n  docDescription?: string;\r\n  docExtension?: string;\r\n  docCode?: string;\r\n  docCategory?: string;\r\n  _obj?: BidoDocumentationDTO;\r\n}\r\n\r\ninterface BreadcrumbsInventoryLabel extends BreadcrumbsLabel {\r\n  bireItem?: BireItemForWorkscopeTreeDTO;\r\n  isFromInspection?: boolean;\r\n  isAddInventory?: boolean;\r\n  inventoryList?: InventoryDTO[];\r\n}\r\n\r\ninterface DamagesWithItemVersionOutputCustom {\r\n  damageCode?: string;\r\n  familyCode?: string;\r\n  structureType?: string;\r\n  variantCode?: string;\r\n  chapter?: string;\r\n  sheet?: string;\r\n  marks?: string;\r\n  section?: string;\r\n  subject?: string;\r\n  versionNumber?: string;\r\n  damageDescription?: string;\r\n  unitCode?: string;\r\n}\r\n\r\ninterface CustomTableColumn extends TableColumn {\r\n  display?: string;\r\n}\r\n\r\ninterface WorksSearchCriteriaFilter {\r\n  selectedReworkPN?: string;\r\n  selectedToggle?: number[];\r\n  selectedDesignation?: LabelValue<string>;\r\n  selectedCode?: LabelValue<string>;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-add-edit-inventory',\r\n  templateUrl: './add-edit-inventory.component.html',\r\n  styleUrls: ['./add-edit-inventory.component.scss']\r\n})\r\nexport class AddEditInventoryComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  private static readonly OK: string = ControlConfigConstants.ICON_GREEN;\r\n  private static readonly WARNING: string = ControlConfigConstants.ICON_YELLOW;\r\n  private static readonly NOK: string = ControlConfigConstants.ICON_RED;\r\n  private static readonly APPLIED: number = 0;\r\n  private static readonly NOT_APPLIED: number = 1;\r\n\r\n  public inventoryList: InventoryDTO[];\r\n  public bsdeProjectDTO: BsdeProjectDTO;\r\n  public isFromInspection: boolean;\r\n  public isAddInventory: boolean;\r\n  public bireItemDTO: BireItemForWorkscopeTreeDTO;\r\n  public pageComponentData: BreadcrumbsInventoryLabel;\r\n  public findingCols: TableColumn[];\r\n  public worksCols: CustomTableColumn[];\r\n  public sentenceList: SelectItem[];\r\n  public decisionList: SelectItem[];\r\n  public pnList: string[];\r\n  public clonePnList: string[];\r\n  public snList: SelectItem[];\r\n  public tnList: SelectItem[];\r\n  public targetPNList: string[];\r\n  public cloneTargetPNList: string[];\r\n  public items: MenuItem[];\r\n  public cardList: InventoryDTO[];\r\n  public cloneCardList: InventoryDTO[];\r\n  public snCount: SNListInterface[];\r\n  public selectedInventoryList: InventoryDTO[];\r\n  public findingsList: FindingsInterface[];\r\n  public selectedFinding: FindingsInterface[];\r\n  public workList: WorkListInterface[];\r\n  public dbWorkList: WorkListInterface[];\r\n  public selectedWork: WorkListInterface[];\r\n  public mroCenterList: LabelValue<string>[];\r\n  public taskList: LabelValue<string>[];\r\n  public reworkPNs: LabelValue<string>[];\r\n\r\n  public selectedSentence: string | undefined;\r\n  public selectedDecision: string | undefined;\r\n  public selectedMroCenter: string | undefined;\r\n\r\n  public showEquipments: boolean;\r\n  public isScreenSaved: boolean;\r\n  public showFindingsDialog: boolean;\r\n  public showInventories: boolean = true;\r\n  public isSentenceMatch: boolean = true;\r\n  public isDecisionMatch: boolean = true;\r\n  public isTNCommon: boolean;\r\n  public isIntersectionSentenceDiff: boolean;\r\n  public isIntersectionDecisionDiff: boolean;\r\n  public isTargetPNCommon: boolean;\r\n  public findingsDialogOpenMode: ComponentOpenMode;\r\n  public addNewInventory: boolean;\r\n  public expandInventoryList: boolean;\r\n  public isPNCommon: boolean;\r\n  public isItemSerialized: boolean;\r\n\r\n  public quantityValue: number | undefined;\r\n  public finding: FindingsInterface | undefined;\r\n  public selectedTask: string | undefined;\r\n\r\n  public selectedTN: string | undefined;\r\n  public selectedFindingsIndex: number = -1;\r\n\r\n  public selectedPN: string | undefined;\r\n  public selectedTargetPN: string | undefined;\r\n  public otherPN: string | undefined;\r\n  public isOtherPNDifferent: boolean;\r\n  public showOtherPN: boolean;\r\n\r\n  public nok: string = ControlConfigConstants.ICON_RED;\r\n  public ok: string = ControlConfigConstants.ICON_GREEN;\r\n  public warning: string = ControlConfigConstants.ICON_YELLOW_TRIANGLE_CODE;\r\n\r\n  public newInventory: InventoryDTO;\r\n  public sumRealQuantity: number | undefined = 0;\r\n  private itemVersions: string[];\r\n  private unknown: string;\r\n  private addPNList: string[];\r\n\r\n  // Overlay\r\n  public inventoryPNList: LabelValue<string>[];\r\n  public inventoryWOList: LabelValue<string>[];\r\n  public inventorySentenceList: LabelValue<string>[];\r\n  public inventoryDecisionList: LabelValue<string>[];\r\n  public statusList: LabelValue<string>[];\r\n  public overlayContentReady: boolean;\r\n  public searchCriteria: SearchCriteria;\r\n\r\n  // Work Overlay\r\n  public toggleList: LabelValue<number>[];\r\n  public reworkPNList: LabelValue<string>[];\r\n  public cloneReworkPNList: LabelValue<string>[];\r\n  public taskCodeList: LabelValue<string>[];\r\n  public cloneTaskCodeList: LabelValue<string>[];\r\n  public designationList: LabelValue<string>[];\r\n  public cloneDesignationList: LabelValue<string>[];\r\n  public worksSearchCriteria: WorksSearchCriteriaFilter;\r\n\r\n  // documents\r\n  private documentsAdded: BidoDocumentationTableOutputDTO[];\r\n  private documentsUpdated: BidoDocumentationTableOutputDTO[];\r\n  private documents: BidoDocumentationTableOutputDTO[];\r\n  public documentTableDataSource: TableDataSource<DocumentTableRow>;\r\n  public showAddDocumentDialog: Boolean;\r\n  public currentDocument: BidoDocumentationDTO | undefined;\r\n  public documentTypes: SelectItem[];\r\n  public currentDocumentIndex: number;\r\n  public addedDocumentIndex: number;\r\n  public documentDialogOpenMode: ComponentOpenMode;\r\n\r\n  // Variables to store list of all sentence and decision\r\n  // specific to Item\r\n  public globalSentenceList: LabelValue<string>[];\r\n  public globalDecisionList: LabelValue<string>[];\r\n  public sentenceDecisionDTO: SentenceAndDecisionListOutput;\r\n\r\n  private oldSentence: string | undefined;\r\n  private oldDecision: string | undefined;\r\n  public maxVisibleInventories: number = 4;\r\n\r\n  public showFilterPanel: boolean;\r\n  public filtersVisible: boolean;\r\n  public loadInventoriesFlag: boolean;\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public readonly sessionService: SessionService,\r\n    public translateService: TranslateService,\r\n    private readonly dateService: DateService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly domSanitizer: DomSanitizer,\r\n    private readonly addEditInventoryService: AddEditInventoryService,\r\n    public readonly confirmationService: ConfirmationService\r\n  ) {\r\n    super(ComponentOpenMode.Write, favoriteService, loaderService, messageService, serializationService, tabService);\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.MAI_ITEM_INVENTORY;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.bsdeProjectDTO = {};\r\n\r\n    this.pageComponentData = !!this.componentData.objectId\r\n      ? this.serializationService.deserialize(this.componentData.objectId)\r\n      : undefined;\r\n\r\n    if (!!this.pageComponentData) {\r\n      // Trim down subtitle to 25 characters\r\n      const MAX_LENGTH = 25;\r\n      this.pageComponentData.subtittle =\r\n        !!this.pageComponentData.subtittle && this.pageComponentData.subtittle.length > MAX_LENGTH\r\n          ? `${this.pageComponentData.subtittle.substring(0, MAX_LENGTH)}...`\r\n          : !this.pageComponentData.subtittle\r\n          ? undefined\r\n          : this.pageComponentData.subtittle;\r\n      this.displayComponentContext(`N°${this.pageComponentData.subtittle}`, this.isCreateOpenMode);\r\n    }\r\n\r\n    this.cardList = [];\r\n    this.cloneCardList = [];\r\n    this.sentenceList = [];\r\n    this.decisionList = [];\r\n    this.findingsList = [];\r\n    this.inventoryPNList = [];\r\n    this.clonePnList = [];\r\n    this.cloneTargetPNList = [];\r\n    this.inventoryWOList = [];\r\n    this.tnList = [];\r\n    this.inventorySentenceList = [];\r\n    this.inventoryDecisionList = [];\r\n    this.statusList = [];\r\n    this.globalSentenceList = [];\r\n    this.globalDecisionList = [];\r\n    this.addPNList = [];\r\n    this.searchCriteria = {};\r\n    this.worksSearchCriteria = {};\r\n\r\n    this.statusList.push(\r\n      { label: 'OK', value: AddEditInventoryComponent.OK },\r\n      { label: 'WARNING', value: AddEditInventoryComponent.WARNING },\r\n      { label: 'NOK', value: AddEditInventoryComponent.NOK }\r\n    );\r\n\r\n    this.toggleList = [\r\n      {\r\n        label: `${this.translateService.instant(this.getTranslateKey('applied'))}`,\r\n        value: AddEditInventoryComponent.APPLIED\r\n      },\r\n      {\r\n        label: `${this.translateService.instant(this.getTranslateKey('notApplied'))}`,\r\n        value: AddEditInventoryComponent.NOT_APPLIED\r\n      }\r\n    ];\r\n\r\n    this.worksSearchCriteria.selectedToggle = [\r\n      AddEditInventoryComponent.APPLIED,\r\n      AddEditInventoryComponent.NOT_APPLIED\r\n    ];\r\n\r\n    this.unknown = `${this.translateService.instant(this.getTranslateKey('unknown'))}`;\r\n\r\n    this.documentsAdded = [];\r\n    this.documents = [];\r\n    this.documentsUpdated = [];\r\n    this.documentDialogOpenMode = ComponentOpenMode.Read;\r\n\r\n    this.resetData();\r\n    this.init();\r\n    this.loadDocumentTypes();\r\n    this.initDocumentTableDataSource();\r\n  }\r\n\r\n  private resetData() {\r\n    this.snCount = [];\r\n    this.selectedWork = [];\r\n    this.selectedFinding = [];\r\n    this.selectedInventoryList = [];\r\n    this.tnList = [];\r\n    this.items = [];\r\n    this.newInventory = {\r\n      index: 0,\r\n      iwbFindingsToDisplay: [],\r\n      iwbTask: []\r\n    };\r\n    this.quantityValue = undefined;\r\n    this.selectedPN = undefined;\r\n    this.otherPN = undefined;\r\n    this.selectedTargetPN = undefined;\r\n    this.selectedSentence = undefined;\r\n    this.selectedDecision = undefined;\r\n    this.resetDecisionList();\r\n  }\r\n\r\n  private init() {\r\n    this.renderTableCols();\r\n\r\n    // Setting Page component Data\r\n    if (!!this.pageComponentData && !!this.pageComponentData.bireItem) {\r\n      this.inventoryList = !!this.pageComponentData.inventoryList ? this.pageComponentData.inventoryList : [];\r\n      this.isFromInspection = this.pageComponentData.isFromInspection as boolean;\r\n      this.isItemSerialized = !!this.pageComponentData.bireItem\r\n        ? (this.pageComponentData.bireItem.serializedPart as boolean)\r\n        : false;\r\n      this.isAddInventory = this.pageComponentData.isAddInventory as boolean;\r\n      this.bireItemDTO = this.pageComponentData.bireItem as BireItemForWorkscopeTreeDTO;\r\n      this.bsdeProjectDTO = this.pageComponentData.data as BsdeProjectDTO;\r\n      this.selectedMroCenter = this.bsdeProjectDTO.repairCenterCode || undefined;\r\n      this.loadInventoriesFlag = true;\r\n\r\n      this.renderList();\r\n      this.displayComponentContext(`N°${this.bsdeProjectDTO.projectNumber}`, this.isCreateOpenMode);\r\n    }\r\n\r\n    this.loadTaskTypes();\r\n  }\r\n\r\n  private loadTaskTypes(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.TASK_TYPE_MAP).subscribe((results) => {\r\n      this.taskList = results || [];\r\n\r\n      this.selectedTask = this.taskList.length > 0 ? this.taskList[0].value : undefined;\r\n    });\r\n  }\r\n\r\n  /****************************************************\r\n   * DOCUMENT TABLE\r\n   ****************************************************/\r\n  private initDocumentTableDataSource(): void {\r\n    this.documentTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'docName',\r\n          translateKey: this.getTranslateKey('docName')\r\n        },\r\n        {\r\n          field: 'docPublicationDate',\r\n          translateKey: this.getTranslateKey('docPublicationDate')\r\n        },\r\n        {\r\n          field: 'docEndOfValidityDate',\r\n          translateKey: this.getTranslateKey('docEndOfValidityDate')\r\n        },\r\n        {\r\n          field: 'docCategory',\r\n          translateKey: this.getTranslateKey('docCategory')\r\n        },\r\n        {\r\n          field: 'docDescription',\r\n          translateKey: this.getTranslateKey('docDescription')\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  /***********************************************\r\n   * Load PN List\r\n   ***********************************************/\r\n  private loadPNList() {\r\n    this.clonePnList = [];\r\n    this.cloneTargetPNList = [];\r\n    this.reworkPNs = [];\r\n    this.addPNList = [];\r\n\r\n    const input: BireItemDTOId = this.bireItemDTO as BireItemDTOId;\r\n\r\n    this.addEditInventoryService.getPartNumberStructure(input).subscribe((res: GetPartNumberStructureOutputDTO[]) => {\r\n      if (!!res && res.length > 0) {\r\n        res.forEach((dto) => {\r\n          this.addPNList.push(dto.pn as string);\r\n        });\r\n\r\n        this.addPNList.push(this.unknown);\r\n\r\n        // Setting rework PN\r\n        this.addPNList.forEach((pn) => {\r\n          if (pn !== this.unknown) {\r\n            this.reworkPNs.push({\r\n              label: pn,\r\n              value: pn as string\r\n            });\r\n          }\r\n        });\r\n\r\n        this.loadNewPNList();\r\n        this.clonePnList = [...this.addPNList];\r\n\r\n        // Rework PN\r\n        this.cloneReworkPNList = [...this.reworkPNs];\r\n        this.reworkPNList = [...this.cloneReworkPNList];\r\n\r\n        this.loadSentenceDecisionSpecificToItem();\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadFindingsList() {\r\n    this.findingsList.forEach((res, index) => (res.index = index));\r\n    this.findingsList.forEach((res) => {\r\n      if (!!res && !!res.bireDocumentDTOList && res.bireDocumentDTOList.length > 0) {\r\n        res.additionalData = this.loadItemStructureNodeIllustrationList(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  /*********************************\r\n   * Load Findings list\r\n   *********************************/\r\n  private fetchFidingsList() {\r\n    const input: FetchSentenceDecisionInputDTO = {\r\n      projectNumber: this.bsdeProjectDTO.projectNumber,\r\n      bireItemKey: this.getKey(this.bireItemDTO) as string\r\n    };\r\n    this.addEditInventoryService.loadFindingsList(input).subscribe((res) => {\r\n      this.findingsList = res;\r\n      this.updateFindingsToInventories();\r\n    });\r\n  }\r\n\r\n  /**********************************\r\n   * Load Image\r\n   **********************************/\r\n  private loadItemStructureNodeIllustrationList(result: FindingsInterface): SafeResourceUrl | undefined {\r\n    if (!!result.bireDocumentDTOList && result.bireDocumentDTOList.length > 0) {\r\n      const doc = result.bireDocumentDTOList[0] as BireDocumentDTO;\r\n\r\n      return this.domSanitizer.bypassSecurityTrustResourceUrl(\r\n        `${ImageUtils.getBase64Prefix(doc.docType)}${doc.docFile}`\r\n      );\r\n    }\r\n  }\r\n\r\n  /********************************************\r\n   * Filter PN List\r\n   *******************************************/\r\n  public searchPN(ev) {\r\n    let dataArr: string[] = [];\r\n    if (!!ev && !!ev.query && !!this.clonePnList) {\r\n      dataArr = this.clonePnList.filter((pn) => pn.toLowerCase().startsWith(ev.query.toLowerCase()));\r\n    } else {\r\n      dataArr = this.clonePnList || [];\r\n    }\r\n\r\n    this.pnList = [...dataArr];\r\n  }\r\n\r\n  /********************************************\r\n   * Filter Target PN List\r\n   *******************************************/\r\n  public searchTargetPN(ev) {\r\n    let dataArr: string[] = [];\r\n    if (!!ev && !!ev.query && !!this.cloneTargetPNList) {\r\n      dataArr = this.cloneTargetPNList.filter((pn) => pn.toLowerCase().startsWith(ev.query.toLowerCase()));\r\n    } else {\r\n      dataArr = this.cloneTargetPNList || [];\r\n    }\r\n\r\n    this.targetPNList = [...dataArr];\r\n  }\r\n\r\n  /**********************************\r\n   * RENDER SCREEN ELEMENTS\r\n   **********************************/\r\n  private renderTableCols() {\r\n    this.findingCols = [\r\n      { field: 'damage', alignment: 'left' },\r\n      { field: 'localisation', alignment: 'left' },\r\n      { field: 'findingComment', alignment: 'left' },\r\n      { field: 'illustration', alignment: 'center' }\r\n    ];\r\n\r\n    this.worksCols = [\r\n      { field: 'task', alignment: 'left', display: 'table-cell' },\r\n      { field: 'code', alignment: 'left', display: 'none' },\r\n      { field: 'type', alignment: 'left', display: 'none' },\r\n      { field: 'designation', alignment: 'left', display: 'none' },\r\n      { field: 'workorder', alignment: 'left', display: 'table-cell' },\r\n      { field: 'applied', alignment: 'center', display: 'table-cell' }\r\n    ];\r\n  }\r\n\r\n  /**********************************\r\n   * INIT DROPDOWN\r\n   **********************************/\r\n  private renderList() {\r\n    this.sentenceList = [];\r\n    this.decisionList = [];\r\n\r\n    // Load Sentence and Decision\r\n    this.fetchSentence();\r\n\r\n    this.addEditInventoryService.findMROCenter().subscribe((res) => {\r\n      this.mroCenterList = res;\r\n    });\r\n  }\r\n\r\n  /***********************************\r\n   * Load Sentence\r\n   ***********************************/\r\n  private fetchSentence() {\r\n    this.addEditInventoryService\r\n      .fetchSentenceList()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.fetchDecision();\r\n        })\r\n      )\r\n      .subscribe((res) => {\r\n        this.globalSentenceList = res;\r\n      });\r\n  }\r\n\r\n  /***********************************\r\n   * Load Decision\r\n   ***********************************/\r\n  private fetchDecision() {\r\n    this.addEditInventoryService\r\n      .fetchDecisionList()\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadPNList();\r\n          this.initVersionsData();\r\n          this.fetchFidingsList();\r\n        })\r\n      )\r\n      .subscribe((res) => {\r\n        this.globalDecisionList = res;\r\n      });\r\n  }\r\n\r\n  /***********************************\r\n   * Load Sentence Decision\r\n   ***********************************/\r\n  private loadSentenceDecisionSpecificToItem() {\r\n    this.sentenceList = [];\r\n    this.decisionList = [];\r\n\r\n    const input: FetchSentenceDecisionInputDTO = {\r\n      projectNumber: this.bsdeProjectDTO.projectNumber,\r\n      bireItemKey: this.getKey(this.bireItemDTO) as string\r\n    };\r\n\r\n    this.addEditInventoryService\r\n      .getSentenceAndDecisionList(input)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadInventories();\r\n          this.getInventoryIcon();\r\n        })\r\n      )\r\n      .subscribe((res) => {\r\n        this.sentenceDecisionDTO = res;\r\n        if (!!res.sentenceList && res.sentenceList.length > 0) {\r\n          res.sentenceList.forEach((sentence) => {\r\n            this.sentenceList.push({\r\n              value: sentence,\r\n              label: this.getSentenceLabel(sentence) || ''\r\n            });\r\n          });\r\n        }\r\n\r\n        if (!!res.decisionList && res.decisionList.length > 0) {\r\n          res.decisionList.forEach((decision) => {\r\n            this.decisionList.push({\r\n              value: decision,\r\n              label: this.getDecisionLabel(decision) || ''\r\n            });\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  // Get SN\r\n  private getSN() {\r\n    if (this.isItemSerialized) {\r\n      if (this.isAddInventory || this.addNewInventory) {\r\n        if (!!this.snCount && this.snCount.length > 0) {\r\n          return this.snCount[0].value;\r\n        }\r\n      } else if (this.selectedInventoryList.length === 1) {\r\n        return this.selectedInventoryList[0].sn;\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  // Get Quantity\r\n  private getQuantity() {\r\n    return !!this.quantityValue ? (this.isItemSerialized ? `${this.quantityValue}` : `${this.sumRealQuantity}`) : '1';\r\n  }\r\n\r\n  /***********************************\r\n   * Load Inventories\r\n   ***********************************/\r\n  private loadInventories() {\r\n    // Render Inventories List\r\n    this.cardList = [];\r\n\r\n    if (this.inventoryList.length > 0) {\r\n      this.inventoryList.forEach((inventory, index) => {\r\n        inventory.index = index;\r\n        inventory.sentenceList = !!inventory.sentenceValue ? [inventory.sentenceValue] : undefined; // TODO: add sentence List\r\n        inventory.decisionList = !!inventory.decisionValue ? [inventory.decisionValue] : undefined; // TODO: add decision List\r\n        this.cardList.push(inventory);\r\n        this.selectInventory(inventory);\r\n      });\r\n      this.loadFavoriteCombination();\r\n      this.cloneCardList = _cloneDeep(this.cardList);\r\n    } else {\r\n      this.loadInventoriesFlag = false;\r\n    }\r\n\r\n    // Collapsing if only 1 inventory\r\n    if (this.cardList.length === 1) {\r\n      this.toggleInventoryDisplay();\r\n    }\r\n\r\n    if (this.selectedInventoryList.length > 0) {\r\n      this.modifyInventoryList();\r\n    }\r\n\r\n    if (this.isAddInventory) {\r\n      this.loadFavoriteCombination();\r\n    }\r\n\r\n    this.filtersVisible = false;\r\n    this.updateFilterCriteria();\r\n  }\r\n\r\n  /**************************************\r\n   * Update filter\r\n   **************************************/\r\n  private updateFilterCriteria() {\r\n    this.overlayContentReady = false;\r\n    this.searchCriteria = {};\r\n    this.inventoryPNList = [];\r\n    this.inventoryDecisionList = [];\r\n    this.inventorySentenceList = [];\r\n    this.inventoryWOList = [];\r\n\r\n    this.cardList.forEach((inventory) => {\r\n      const isPNExist = this.inventoryPNList.find((pn) => pn.label === inventory.pn);\r\n      if (!isPNExist && !!inventory.pn && this.pnList.includes(inventory.pn)) {\r\n        this.inventoryPNList.push({\r\n          label: inventory.pn,\r\n          value: inventory.pn\r\n        });\r\n      }\r\n\r\n      if (!!inventory.decisionValue) {\r\n        const isDecisionExist = this.inventoryDecisionList.find((dec) => dec.value === inventory.decisionValue);\r\n\r\n        if (!isDecisionExist) {\r\n          this.inventoryDecisionList.push({\r\n            label: this.getDecisionLabel(inventory.decisionValue) || '',\r\n            value: inventory.decisionValue\r\n          });\r\n        }\r\n      }\r\n\r\n      if (!!inventory.woCode) {\r\n        const isWOExist = this.inventoryWOList.find((dec) => dec.value === inventory.woCode);\r\n        if (!isWOExist) {\r\n          this.inventoryWOList.push({\r\n            label: inventory.woCode,\r\n            value: inventory.woCode\r\n          });\r\n        }\r\n      }\r\n\r\n      if (!!inventory.sentenceValue) {\r\n        const isSentenceExist = this.inventorySentenceList.find((dec) => dec.value === inventory.sentenceValue);\r\n        if (!isSentenceExist) {\r\n          this.inventorySentenceList.push({\r\n            label: this.getSentenceLabel(inventory.sentenceValue) || '',\r\n            value: inventory.sentenceValue\r\n          });\r\n        }\r\n      }\r\n\r\n      this.overlayContentReady = true;\r\n    });\r\n  }\r\n\r\n  private loadFilterPanel() {\r\n    this.inventorySentenceList = [];\r\n    this.inventoryPNList = [];\r\n    this.inventoryDecisionList = [];\r\n    this.inventoryWOList = [];\r\n\r\n    if (this.inventoryList.length > 0) {\r\n      this.inventoryList.forEach((inventory) => {\r\n        const isPNExist = this.inventoryPNList.filter((pn) => pn.label === inventory.pn);\r\n        if (isPNExist.length === 0 && !!inventory.pn) {\r\n          this.inventoryPNList.push({\r\n            label: inventory.pn,\r\n            value: inventory.pn\r\n          });\r\n        }\r\n\r\n        if (!!inventory.decisionValue) {\r\n          const isDecisionExist = this.inventoryDecisionList.filter((dec) => dec.value === inventory.decisionValue);\r\n\r\n          if (isDecisionExist.length === 0) {\r\n            this.inventoryDecisionList.push({\r\n              label: this.getDecisionLabel(inventory.decisionValue) || '',\r\n              value: inventory.decisionValue\r\n            });\r\n          }\r\n        }\r\n\r\n        if (!!inventory.woCode) {\r\n          const isWOExist = this.inventoryWOList.filter((dec) => dec.value === inventory.woCode);\r\n          if (isWOExist.length === 0) {\r\n            this.inventoryWOList.push({\r\n              label: inventory.woCode,\r\n              value: inventory.woCode\r\n            });\r\n          }\r\n        }\r\n\r\n        if (!!inventory.sentenceValue) {\r\n          const isSentenceExist = this.inventorySentenceList.filter((dec) => dec.value === inventory.sentenceValue);\r\n          if (isSentenceExist.length === 0) {\r\n            this.inventorySentenceList.push({\r\n              label: this.getSentenceLabel(inventory.sentenceValue) || '',\r\n              value: inventory.sentenceValue\r\n            });\r\n          }\r\n        }\r\n\r\n        this.overlayContentReady = true;\r\n      });\r\n\r\n      this.cloneCardList = _cloneDeep(this.cardList);\r\n    }\r\n  }\r\n\r\n  /*********************************************\r\n   * Fetch Sentence List\r\n   *********************************************/\r\n  public getSentenceLabel(val: string): string | undefined {\r\n    const dto = this.globalSentenceList.filter((res) => res.value === val);\r\n\r\n    return !!dto && dto.length > 0 ? dto[0].label : undefined;\r\n  }\r\n\r\n  /*********************************************\r\n   * Fetch Decision List\r\n   *********************************************/\r\n  public getDecisionLabel(val: string): string | undefined {\r\n    const dto = this.globalDecisionList.filter((res) => res.value === val);\r\n\r\n    return !!dto && dto.length > 0 ? dto[0].label : undefined;\r\n  }\r\n\r\n  private initVersionsData(): void {\r\n    const bireItemDTOId: BireItemDTOId = this.returnBireItemDTOId();\r\n    this.itemVersions = [];\r\n    this.addEditInventoryService.findBireItemVersions(bireItemDTOId).subscribe((results) => {\r\n      if (!!results) {\r\n        results.forEach((data: LabelValue<string>) => {\r\n          this.itemVersions.push(data.value);\r\n        });\r\n\r\n        this.initDamagesAndLocationData();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Return Bire Item DTO ID\r\n   */\r\n  private returnBireItemDTOId(): BireItemDTOId {\r\n    let bireItemDTOId: BireItemDTOId = {\r\n      chapter: '',\r\n      marks: '',\r\n      section: '',\r\n      sheet: '',\r\n      subject: '',\r\n      structureType: ''\r\n    };\r\n\r\n    if (!!this.bireItemDTO) {\r\n      bireItemDTOId = {\r\n        familyCode: this.bireItemDTO.familyCode,\r\n        chapter: this.bireItemDTO.chapter as string,\r\n        section: this.bireItemDTO.section as string,\r\n        sheet: this.bireItemDTO.sheet as string,\r\n        marks: this.bireItemDTO.marks as string,\r\n        subject: this.bireItemDTO.subject as string,\r\n        structureType: this.bireItemDTO.structureType as string,\r\n        variantCode: this.bireItemDTO.variantCode\r\n      };\r\n    }\r\n\r\n    return bireItemDTOId;\r\n  }\r\n\r\n  // Damage table\r\n  private initDamagesAndLocationData() {\r\n    const damages: DamagesWithItemVersionOutputCustom[] = [];\r\n    const locations: BireLocalisationItemDTO[] = [];\r\n\r\n    this.itemVersions.forEach((res) => {\r\n      const bireItemVersionDTOId: BireItemVersionDTOId = {\r\n        chapter: this.bireItemDTO.chapter as string,\r\n        familyCode: this.bireItemDTO.familyCode as string,\r\n        marks: this.bireItemDTO.marks as string,\r\n        section: this.bireItemDTO.section as string,\r\n        sheet: this.bireItemDTO.sheet as string,\r\n        structureType: this.bireItemDTO.structureType as string,\r\n        subject: this.bireItemDTO.subject as string,\r\n        variantCode: this.bireItemDTO.variantCode as string,\r\n        versionNumber: res as string\r\n      };\r\n\r\n      // Damages\r\n      this.addEditInventoryService\r\n        .findBireDamageItemsByItemVersionItemScreen(bireItemVersionDTOId)\r\n        .subscribe((results: DamagesWithItemVersionOutput[]) => {\r\n          results.forEach((dto: DamagesWithItemVersionOutput) => {\r\n            if (!!dto && !!dto.bireDamageItemDTO) {\r\n              const damageCustomDTO: DamagesWithItemVersionOutputCustom = {\r\n                damageCode: dto.bireDamageItemDTO.damageCode as string,\r\n                chapter: dto.bireDamageItemDTO.chapter as string,\r\n                familyCode: dto.bireDamageItemDTO.familyCode as string,\r\n                marks: dto.bireDamageItemDTO.marks as string,\r\n                section: dto.bireDamageItemDTO.section as string,\r\n                sheet: dto.bireDamageItemDTO.sheet as string,\r\n                structureType: dto.bireDamageItemDTO.structureType as string,\r\n                subject: dto.bireDamageItemDTO.subject as string,\r\n                variantCode: dto.bireDamageItemDTO.variantCode as string,\r\n                damageDescription: dto.description,\r\n                versionNumber: dto.bireDamageItemDTO.versionNumber\r\n              };\r\n              damages.push(damageCustomDTO);\r\n            }\r\n          });\r\n          this.addEditInventoryService.damagesList = [...damages];\r\n        });\r\n\r\n      // Location\r\n      this.addEditInventoryService\r\n        .findBireLocalisationItemsByItemVersion(bireItemVersionDTOId)\r\n        .subscribe((results: BireLocalisationItemDTO[]) => {\r\n          results.forEach((dto: BireLocalisationItemDTO) => {\r\n            locations.push(dto);\r\n          });\r\n          this.addEditInventoryService.localisationList = [...locations];\r\n        });\r\n    });\r\n\r\n    // Items\r\n    this.initTasksData();\r\n  }\r\n\r\n  /**********************************\r\n   * CHANGE QUANTITY VALUE\r\n   **********************************/\r\n  public onQuantityChange() {\r\n    if (this.isAddInventory || this.addNewInventory) {\r\n      this.snCount = [];\r\n\r\n      if (this.quantityValue !== undefined && Number.isInteger(this.quantityValue)) {\r\n        let count = 0;\r\n\r\n        // Add Mode\r\n        if (this.isAddInventory || this.addNewInventory) {\r\n          count = this.quantityValue;\r\n        }\r\n\r\n        // Creating snList of dynamic size depending upon number entered by user\r\n        Array(count)\r\n          .fill({})\r\n          .map(() => {\r\n            this.snCount.push({\r\n              value: undefined\r\n            });\r\n          });\r\n      }\r\n    } else if (!this.isItemSerialized && this.selectedInventoryList.length === 1 && !!this.sumRealQuantity) {\r\n      this.selectedInventoryList[0].quantity = `${this.sumRealQuantity}`;\r\n    }\r\n  }\r\n\r\n  /***********************************************\r\n   * Get color of configuration\r\n   ***********************************************/\r\n  public getStyles(controlCode) {\r\n    return controlCode === ControlConfigConstants.ICON_GREEN\r\n      ? 'alert--ok'\r\n      : controlCode === ControlConfigConstants.ICON_YELLOW\r\n      ? 'alert--warning'\r\n      : controlCode === ControlConfigConstants.ICON_RED\r\n      ? 'alert--nok'\r\n      : 'none';\r\n  }\r\n\r\n  /**************************************************\r\n   * GET CONFIGURATON CONTROL OF SELECTED INVENTORIES\r\n   *************************************************/\r\n  public getConfiguration() {\r\n    let warning = 0;\r\n    let ok = 0;\r\n    let nok = 0;\r\n\r\n    if (this.selectedInventoryList.length > 0) {\r\n      this.selectedInventoryList.forEach((res) => {\r\n        if (res.icon === ControlConfigConstants.ICON_GREEN) {\r\n          ok++;\r\n        } else if (res.icon === ControlConfigConstants.ICON_RED) {\r\n          nok++;\r\n        } else if (res.icon === ControlConfigConstants.ICON_YELLOW) {\r\n          warning++;\r\n        }\r\n      });\r\n    }\r\n\r\n    return !!nok\r\n      ? ControlConfigConstants.ICON_RED\r\n      : !!warning\r\n      ? ControlConfigConstants.ICON_YELLOW\r\n      : ControlConfigConstants.ICON_GREEN;\r\n  }\r\n\r\n  /****************************************\r\n   * Inventories Action\r\n   ****************************************/\r\n  public addInventory() {\r\n    this.resetTaskDamagesAndDocuments();\r\n    this.addNewInventory = true;\r\n    this.unselectAllInventories();\r\n    this.resetData();\r\n    this.loadFavoriteCombination();\r\n    this.quantityValue = 1;\r\n  }\r\n\r\n  private loadNewPNList() {\r\n    this.clonePnList = [];\r\n    this.cloneTargetPNList = [];\r\n\r\n    this.clonePnList = [...this.addPNList];\r\n    this.cloneTargetPNList = _cloneDeep(this.clonePnList);\r\n\r\n    this.pnList = _cloneDeep(this.clonePnList);\r\n    this.targetPNList = _cloneDeep(this.clonePnList);\r\n  }\r\n\r\n  private loadFavoriteCombination() {\r\n    // Set favorite combination, if exist\r\n    if (\r\n      (this.isAddInventory || this.addNewInventory) &&\r\n      !!this.sentenceDecisionDTO &&\r\n      !!this.sentenceDecisionDTO.favoriteCombination\r\n    ) {\r\n      this.selectedSentence = this.sentenceDecisionDTO.favoriteCombination.sentence;\r\n      this.modifyDecisionList();\r\n      this.oldSentence = this.selectedSentence;\r\n      this.selectedDecision = this.sentenceDecisionDTO.favoriteCombination.decision;\r\n      this.oldDecision = this.selectedDecision;\r\n      this.selectedPN = this.sentenceDecisionDTO.favoriteCombination.pn;\r\n    }\r\n  }\r\n\r\n  public toggleInventoryDisplay() {\r\n    this.showInventories = this.showInventories ? false : true;\r\n  }\r\n\r\n  public expandAll() {\r\n    this.expandInventoryList = !this.expandInventoryList;\r\n  }\r\n\r\n  public selectAllInventories() {\r\n    this.otherPN = undefined;\r\n\r\n    // Removing favorites, if any\r\n    this.selectedSentence = undefined;\r\n    this.selectedDecision = undefined;\r\n    this.selectedPN = undefined;\r\n\r\n    this.modifyInventories(true);\r\n    this.sumRealQuantity = this.selectedInventoryList\r\n      .map((obj) => (!!obj.quantity ? Number(obj.quantity) : 0))\r\n      .reduce((sum, quantity) => sum + quantity, 0);\r\n\r\n    this.loadFindingsWorksAndDocuments();\r\n  }\r\n\r\n  public unselectAllInventories() {\r\n    this.modifyInventories(false);\r\n    this.sumRealQuantity = 0;\r\n    this.selectedSentence = undefined;\r\n    this.selectedDecision = undefined;\r\n    this.otherPN = undefined;\r\n\r\n    this.addNewInventory = true;\r\n    this.resetData();\r\n    this.loadFavoriteCombination();\r\n    this.loadFindingsWorksAndDocuments();\r\n  }\r\n\r\n  private modifyInventories(selection: boolean) {\r\n    this.otherPN = undefined;\r\n    this.cardList.forEach((res) => {\r\n      res.isSelected = selection;\r\n    });\r\n\r\n    this.updateSelectionAndQuantity();\r\n    this.modifyInventoryList();\r\n  }\r\n\r\n  private updateSelectionAndQuantity() {\r\n    this.updateInventoriesSelection();\r\n    this.sumRealQuantity = this.selectedInventoryList\r\n      .map((obj) => (!!obj.quantity ? Number(obj.quantity) : 0))\r\n      .reduce((sum, quantity) => sum + quantity, 0);\r\n  }\r\n\r\n  private updateInventoriesSelection() {\r\n    this.selectedInventoryList = this.cardList.filter((res) => res.isSelected);\r\n  }\r\n\r\n  /****************************************\r\n   * On selection of inventories\r\n   ****************************************/\r\n  public selectInventory(inventory: InventoryDTO) {\r\n    this.otherPN = undefined;\r\n    this.addNewInventory = false;\r\n    inventory.isSelected = inventory.isSelected ? false : true;\r\n\r\n    this.selectedInventoryList = [];\r\n    this.selectedInventoryList = this.cardList.filter((res) => res.isSelected);\r\n    this.sumRealQuantity = this.selectedInventoryList\r\n      .map((obj) => (!!obj.quantity ? Number(obj.quantity) : 0))\r\n      .reduce((sum, quantity) => sum + quantity, 0);\r\n\r\n    this.quantityValue = this.selectedInventoryList.length;\r\n\r\n    this.selectedSentence = undefined;\r\n    this.selectedDecision = undefined;\r\n    if (this.selectedInventoryList.length > 0) {\r\n      this.modifyInventoryList();\r\n    } else {\r\n      this.resetData();\r\n      this.addNewInventory = true;\r\n      this.loadFavoriteCombination();\r\n    }\r\n\r\n    this.loadFindingsWorksAndDocuments();\r\n  }\r\n\r\n  private modifyInventoryList() {\r\n    const sentenceArr: string[][] = [];\r\n    const diffPNArr: string[] = [];\r\n    const otherPNArr: string[] = [];\r\n    this.snList = [];\r\n    this.tnList = [];\r\n    this.addNewInventory = false;\r\n\r\n    const decisionArr: string[][] = [];\r\n    const trackNumberArr: string[][] = [];\r\n\r\n    this.selectedInventoryList.forEach((res) => {\r\n      const snIndex = this.snList.findIndex((sn) => !!res.sn && res.sn === sn.value);\r\n      const tnIndex = this.tnList.findIndex((tn) => !!res.trackingNumber && res.trackingNumber === tn.value);\r\n\r\n      if (!!res.pn) {\r\n        if (this.clonePnList.indexOf(res.pn) !== -1 && diffPNArr.indexOf(res.pn) === -1) {\r\n          diffPNArr.push(res.pn);\r\n        } else if (this.clonePnList.indexOf(res.pn) === -1 && otherPNArr.indexOf(res.pn) === -1) {\r\n          otherPNArr.push(res.pn);\r\n        }\r\n      }\r\n\r\n      if (snIndex === -1 && !!res.sn) {\r\n        this.snList.push({\r\n          value: res.sn,\r\n          label: res.sn\r\n        });\r\n      }\r\n\r\n      if (tnIndex === -1 && !!res.trackingNumber) {\r\n        this.tnList.push({\r\n          value: res.trackingNumber,\r\n          label: res.trackingNumber\r\n        });\r\n\r\n        trackNumberArr.push([res.trackingNumber]);\r\n      }\r\n\r\n      if (!!res.sentenceValue) {\r\n        sentenceArr.push([res.sentenceValue]);\r\n      }\r\n\r\n      if (!!res.decisionValue) {\r\n        decisionArr.push([res.decisionValue]);\r\n      }\r\n    });\r\n\r\n    this.isPNCommon = diffPNArr.length > 1 && this.selectedInventoryList.length > 1 ? this.setCommonPN() : false;\r\n    this.isOtherPNDifferent =\r\n      otherPNArr.length > 1 && this.selectedInventoryList.length > 1 ? this.setDiffOtherPN() : false;\r\n\r\n    if (this.addNewInventory || this.newInventory) {\r\n      this.selectedTargetPN = undefined;\r\n    } else {\r\n      this.isTargetPNCommon =\r\n        this.selectedInventoryList.length > 1 && this.cloneTargetPNList.length === this.selectedInventoryList.length\r\n          ? this.setCommonTargetPN()\r\n          : false;\r\n    }\r\n\r\n    // Fill Sentence and Decision List of intersection\r\n    if (sentenceArr.length > 0 && sentenceArr.length !== this.selectedInventoryList.length) {\r\n      this.selectedSentence = undefined;\r\n      this.oldSentence = undefined;\r\n      this.isIntersectionSentenceDiff = true;\r\n      this.resetDecisionList();\r\n    } else if (!!sentenceArr && sentenceArr.length > 0) {\r\n      const commonSent = sentenceArr.reduce((a, b) => a.filter((c) => b.includes(c)));\r\n      if (!!commonSent && commonSent.length > 0) {\r\n        this.selectedSentence = commonSent[0];\r\n        this.oldSentence = this.selectedSentence;\r\n        this.modifyDecisionList();\r\n      } else {\r\n        this.selectedSentence = undefined;\r\n        this.oldSentence = undefined;\r\n        this.isIntersectionSentenceDiff = true;\r\n        this.resetDecisionList();\r\n      }\r\n    } else {\r\n      this.isIntersectionSentenceDiff = false;\r\n    }\r\n\r\n    if (decisionArr.length > 0 && decisionArr.length !== this.selectedInventoryList.length) {\r\n      this.selectedDecision = undefined;\r\n      this.oldSentence = undefined;\r\n      this.isIntersectionDecisionDiff = true;\r\n    } else if (!!decisionArr && decisionArr.length > 0) {\r\n      const commonDec = decisionArr.reduce((a, b) => a.filter((c) => b.includes(c)));\r\n      if (!!commonDec && commonDec.length > 0) {\r\n        this.selectedDecision = commonDec[0];\r\n        this.oldDecision = this.selectedDecision;\r\n      } else {\r\n        this.selectedDecision = undefined;\r\n        this.oldSentence = undefined;\r\n        this.isIntersectionDecisionDiff = true;\r\n      }\r\n    } else {\r\n      this.isIntersectionDecisionDiff = false;\r\n    }\r\n\r\n    if (!!trackNumberArr && trackNumberArr.length > 0) {\r\n      const commonTN = trackNumberArr.reduce((a, b) => a.filter((c) => b.includes(c)));\r\n      this.isTNCommon = commonTN.length === 0;\r\n    }\r\n\r\n    if (!this.addNewInventory || !this.newInventory) {\r\n      if (!this.isOtherPNDifferent) {\r\n        this.otherPN = diffPNArr.length === 0 && otherPNArr.length > 0 ? otherPNArr[0] : undefined;\r\n      }\r\n\r\n      if (!this.isPNCommon) {\r\n        this.selectedPN =\r\n          otherPNArr.length === 0 && this.clonePnList.length > 0 && diffPNArr.length > 0 ? diffPNArr[0] : undefined;\r\n      }\r\n    }\r\n\r\n    this.showOtherPN = otherPNArr.length > 0 && diffPNArr.length === 0;\r\n\r\n    if (this.cloneTargetPNList.length > 0 && (!this.addNewInventory || !this.newInventory)) {\r\n      this.selectedTargetPN = this.isTargetPNCommon ? undefined : this.cloneTargetPNList[0];\r\n    }\r\n\r\n    this.pnList = [...this.clonePnList];\r\n    this.targetPNList = [...this.cloneTargetPNList];\r\n  }\r\n\r\n  private setCommonPN(): boolean {\r\n    this.selectedPN = undefined;\r\n\r\n    return true;\r\n  }\r\n\r\n  private setCommonTargetPN(): boolean {\r\n    this.selectedTargetPN = undefined;\r\n\r\n    return true;\r\n  }\r\n\r\n  private setDiffOtherPN(): boolean {\r\n    this.otherPN = undefined;\r\n\r\n    return true;\r\n  }\r\n\r\n  /****************************************************\r\n   * Onchange event for sentence and decision dropdown\r\n   ****************************************************/\r\n  public changeSentence() {\r\n    if (this.selectedSentence === this.oldSentence) {\r\n      this.selectedSentence = undefined;\r\n      this.oldSentence = undefined;\r\n      this.resetDecisionList();\r\n    } else {\r\n      this.oldSentence = this.selectedSentence;\r\n    }\r\n    this.selectedDecision = undefined;\r\n    this.oldDecision = undefined;\r\n\r\n    this.selectedInventoryList.forEach((res) => {\r\n      res.sentenceList = [];\r\n      res.sentenceList.push(this.selectedSentence as string);\r\n      res.sentenceValue = this.selectedSentence;\r\n    });\r\n\r\n    this.modifyDecisionList();\r\n    if (this.decisionList.length === 1 && !!this.selectedSentence) {\r\n      this.selectedDecision = this.decisionList[0].value as string;\r\n\r\n      // Assign decision to all selected inventories\r\n      this.selectedInventoryList.forEach((res) => {\r\n        res.decisionValue = this.selectedDecision;\r\n      });\r\n    } else {\r\n      this.selectedDecision = undefined;\r\n    }\r\n\r\n    this.changeDecision(true);\r\n\r\n    if (this.selectedInventoryList.length > 0) {\r\n      this.modifyInventoryList();\r\n    }\r\n\r\n    this.filtersVisible = false;\r\n    this.updateFilterCriteria();\r\n    this.cloneCardList = _cloneDeep(this.cardList);\r\n  }\r\n\r\n  /***************************************\r\n   * Update Decision List on basis of sentence\r\n   ***************************************/\r\n  private modifyDecisionList() {\r\n    if (\r\n      !!this.sentenceDecisionDTO &&\r\n      !!this.sentenceDecisionDTO.sentenceDecisionList &&\r\n      this.sentenceDecisionDTO.sentenceDecisionList.length > 0\r\n    ) {\r\n      const dto = this.sentenceDecisionDTO.sentenceDecisionList.filter(\r\n        (res) => res.sentence === this.selectedSentence && res.decisionList\r\n      );\r\n\r\n      if (!!dto && dto.length > 0 && !!dto[0].decisionList) {\r\n        this.decisionList = [];\r\n        dto[0].decisionList.forEach((res) => {\r\n          this.decisionList.push({\r\n            label: this.getDecisionLabel(res),\r\n            value: res\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public changeDecision(isModify?: boolean) {\r\n    // Dont modify in case change is happened from sentence\r\n    if (!isModify) {\r\n      if (this.selectedDecision === this.oldDecision) {\r\n        this.selectedDecision = undefined;\r\n        this.oldDecision = undefined;\r\n      } else {\r\n        this.oldDecision = this.selectedDecision;\r\n      }\r\n    }\r\n\r\n    this.selectedInventoryList.forEach((res) => {\r\n      res.decisionList = [];\r\n      res.decisionList.push(this.selectedDecision as string);\r\n      res.decisionValue = this.selectedDecision;\r\n    });\r\n\r\n    this.loadFilterPanel();\r\n\r\n    if (this.selectedInventoryList.length > 0) {\r\n      this.modifyInventoryList();\r\n    }\r\n\r\n    this.cloneCardList = _cloneDeep(this.cardList);\r\n    this.filtersVisible = false;\r\n    this.updateFilterCriteria();\r\n  }\r\n\r\n  /****************************************************\r\n   * Onchange event for pn and target PN dropdown\r\n   ****************************************************/\r\n  public onChangeTargetPN() {\r\n    this.selectedInventoryList.forEach((res) => {\r\n      res.targetPN = this.selectedTargetPN;\r\n    });\r\n\r\n    if (this.selectedInventoryList.length > 0) {\r\n      this.modifyInventoryList();\r\n    }\r\n\r\n    this.getInventoryIcon();\r\n  }\r\n\r\n  public onChangePN() {\r\n    this.selectedInventoryList.forEach((res) => {\r\n      res.pn = this.selectedPN;\r\n    });\r\n\r\n    this.getInventoryIcon();\r\n  }\r\n\r\n  private getMatchingIconInput(): FetchSentenceDecisionInputDTO {\r\n    return {\r\n      projectNumber: this.bsdeProjectDTO.projectNumber,\r\n      pn: !!this.selectedPN ? this.selectedPN : !!this.otherPN ? this.otherPN : undefined,\r\n      sn: this.getSN(),\r\n      bireItemKey: this.getKey(this.bireItemDTO) as string,\r\n      quantity: this.getQuantity(),\r\n      sentence: this.selectedSentence\r\n    };\r\n  }\r\n\r\n  private getControlForMultipleInventories(): FetchSentenceDecisionInputDTO[] {\r\n    const list: FetchSentenceDecisionInputDTO[] = [];\r\n    this.selectedInventoryList.forEach((res) => {\r\n      list.push({\r\n        projectNumber: this.bsdeProjectDTO.projectNumber,\r\n        pn: res.pn,\r\n        sn: !!res.sn ? res.sn : undefined,\r\n        bireItemKey: this.getKey(this.bireItemDTO) as string,\r\n        quantity: res.quantity,\r\n        sentence: res.sentenceValue\r\n      });\r\n    });\r\n\r\n    return list;\r\n  }\r\n\r\n  public openFindingsDialog() {\r\n    this.finding = _cloneDeep(this.selectedFinding[0]);\r\n    this.findingsDialogOpenMode = ComponentOpenMode.Create;\r\n    this.showFindingsDialog = true;\r\n  }\r\n\r\n  /****************************************************\r\n   * EDIT FINDINGS\r\n   ****************************************************/\r\n  public editFindings() {\r\n    const dto = _cloneDeep(this.selectedFinding[0]);\r\n    this.finding = dto;\r\n    this.selectedFindingsIndex = this.findingsList.findIndex(\r\n      (res) => res.index === (this.finding as FindingsInterface).index\r\n    );\r\n\r\n    this.findingsDialogOpenMode = ComponentOpenMode.Write;\r\n    this.showFindingsDialog = true;\r\n  }\r\n\r\n  /****************************************************\r\n   * DELETE FINDINGS\r\n   ****************************************************/\r\n  public deleteFindings() {\r\n    const partialMessageKey =\r\n      this.findingsList.length > 1 ? 'confirmDeleteSelectedFindings' : 'confirmDeleteSelectedFinding';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.selectedFinding.forEach((dto) => {\r\n          const index = this.findingsList.findIndex(\r\n            (res) => res.damageCode === dto.damageCode && res.index === dto.index\r\n          );\r\n          if (index !== -1) {\r\n            this.findingsList.splice(index, 1);\r\n            this.deleteInventoriesFindings(dto);\r\n          }\r\n        });\r\n        this.selectedFinding = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  private deleteInventoriesFindings(dto: FindingsInterface) {\r\n    this.selectedInventoryList.forEach((res) => {\r\n      if (!!res.findings && res.findings.length > 0) {\r\n        const index = res.findings.findIndex(\r\n          (finding) => finding.damageCode === dto.damageCode && finding.index === dto.index\r\n        );\r\n        if (index !== -1 && !!this.cardList && !!this.cardList[res.index] && !!this.cardList[res.index].findings) {\r\n          (this.cardList[res.index].findings as FindingsInterface[]).splice(index, 1);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public openFindingsDialogInReadMode() {\r\n    this.finding = _cloneDeep(this.selectedFinding[0]);\r\n    this.findingsDialogOpenMode = ComponentOpenMode.Read;\r\n    this.showFindingsDialog = true;\r\n  }\r\n\r\n  public addFindings(event: FindingsInterface) {\r\n    if (this.selectedFindingsIndex !== -1) {\r\n      this.findingsList[this.selectedFindingsIndex] = event;\r\n    } else {\r\n      if (!this.findingsList) {\r\n        this.findingsList = [];\r\n      }\r\n      this.findingsList.push(event);\r\n    }\r\n\r\n    this.loadFindingsList();\r\n    this.updateFindingsToInventories(event);\r\n    this.finding = undefined;\r\n    this.selectedFinding = [];\r\n  }\r\n\r\n  // Item Data\r\n  private initTasksData() {\r\n    this.workList = [];\r\n    this.dbWorkList = [];\r\n    this.reworkPNList = [];\r\n    const bireItemDTOId: BireItemDTOId = this.returnBireItemDTOId();\r\n\r\n    // Setting work list\r\n    this.addEditInventoryService\r\n      .findBireTaskItemsByItemTaskTab(bireItemDTOId)\r\n      .subscribe((results: TaskAssociatedItemOutput[]) => {\r\n        results.forEach((task) => {\r\n          this.workList.push({\r\n            taskCode: task.code,\r\n            taskVersion: task.version,\r\n            taskDesignation: task.designation\r\n          });\r\n        });\r\n        this.updateWorksToInventories();\r\n        this.fetchMROCenterForEachTask();\r\n      });\r\n  }\r\n\r\n  private returnTaskTypeLabel(key): LabelValue<string>[] {\r\n    return this.taskList.filter((task) => task.value === key);\r\n  }\r\n\r\n  // Fetch MRO Center of each task\r\n  private fetchMROCenterForEachTask() {\r\n    this.workList.forEach((task, index) => {\r\n      this.addEditInventoryService\r\n        .findBireTask({ taskCode: task.taskCode as string, taskVersion: task.taskVersion as string })\r\n        .pipe(\r\n          finalize(() => {\r\n            this.changeMroCenterAndLoadTask();\r\n          })\r\n        )\r\n        .subscribe((dto) => {\r\n          const taskTypeCodeDTO = this.returnTaskTypeLabel(dto.taskTypeCode);\r\n          task.taskTypeCode = dto.taskTypeCode;\r\n          task.taskTypeLabel = !!taskTypeCodeDTO && taskTypeCodeDTO.length > 0 ? taskTypeCodeDTO[0].label : undefined;\r\n          task.mroCenter = dto.repairCenterCode;\r\n          this.dbWorkList[index] = task;\r\n        });\r\n    });\r\n  }\r\n\r\n  public changeMroCenterAndLoadTask() {\r\n    this.changeMROCenter();\r\n    // Assign task list for selected MRO Center\r\n    this.loadTaskList();\r\n  }\r\n\r\n  private changeMROCenter() {\r\n    if (this.taskList.length > 0 && !this.selectedMroCenter) {\r\n      this.workList = [...this.dbWorkList];\r\n    } else {\r\n      this.workList = this.dbWorkList.filter((res) => res.mroCenter === this.selectedMroCenter);\r\n    }\r\n  }\r\n\r\n  // Setting content of filter panel\r\n  private loadTaskList() {\r\n    this.cloneTaskCodeList = [];\r\n    this.cloneDesignationList = [];\r\n    this.workList.filter((task) => {\r\n      this.cloneTaskCodeList.push({\r\n        label: task.taskCode as string,\r\n        value: task.taskCode as string\r\n      });\r\n\r\n      this.cloneDesignationList.push({\r\n        label: task.taskDesignation as string,\r\n        value: task.taskDesignation as string\r\n      });\r\n    });\r\n    this.taskCodeList = [...this.cloneTaskCodeList];\r\n    this.designationList = [...this.cloneDesignationList];\r\n  }\r\n\r\n  public changeTaskType() {\r\n    if (this.taskList.length > 0 && (this.selectedTask === this.taskList[0].value || !this.selectedTask)) {\r\n      this.workList = this.dbWorkList.filter((res) => res.mroCenter === this.selectedMroCenter);\r\n    } else {\r\n      this.workList = this.dbWorkList.filter(\r\n        (res) => res.taskTypeCode === this.selectedTask && res.mroCenter === this.selectedMroCenter\r\n      );\r\n    }\r\n\r\n    // Assign task list for selected MRO Center\r\n    this.loadTaskList();\r\n  }\r\n\r\n  // Documents\r\n  private loadDocumentTypes(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.DOC_ASSET_CATEGORY_MAP).subscribe((results) => {\r\n      this.documentTypes = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    let flag = false;\r\n    if (!!event.files) {\r\n      const file: File = event.files[0];\r\n      this.documents.forEach((document) => {\r\n        if (!!document.bidoDocumentationDTO) {\r\n          if (document.bidoDocumentationDTO.docName === file.name) {\r\n            flag = true;\r\n          }\r\n        }\r\n      });\r\n      if (flag) {\r\n        this.messageService.showWarningMessage('global.warningOnFileExists');\r\n      } else {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          const fileNameParts = file.name && file.name.includes('.') ? file.name.split('.') : [];\r\n          const docType = fileNameParts.length > 0 ? fileNameParts[fileNameParts.length - 1].toUpperCase() : undefined;\r\n\r\n          if (!!fileContent) {\r\n            const document: BidoDocumentationDTO = {\r\n              docType,\r\n              docFile: fileContent,\r\n              docName: file.name,\r\n              docPublicationDate: new Date()\r\n            };\r\n            const bidoDoc: BidoDocumentationTableOutputDTO = {\r\n              bidoDocumentationDTO: document\r\n            };\r\n            this.documents = [...this.documents, bidoDoc];\r\n            this.documentsAdded = [...this.documentsAdded, bidoDoc];\r\n            this.documentTableDataSource.addData([this.addData(document)]);\r\n          }\r\n          this.updateDocumentsToInventories();\r\n        });\r\n      }\r\n\r\n      fileUploader.clear();\r\n    }\r\n  }\r\n\r\n  public openDocument(): void {\r\n    if (this.documentTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocumentIndex = -1;\r\n      this.addedDocumentIndex = -1;\r\n      this.currentDocument = this.documentTableDataSource.dataSelection[0]._obj;\r\n      this.documentDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showAddDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public deleteDocuments(): void {\r\n    const partialMessageKey =\r\n      this.documentTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedDocuments'\r\n        : 'confirmDeleteSelectedDocument';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        const temp: BidoDocumentationDTOId[] = [];\r\n        this.documentTableDataSource.dataSelection.forEach((data) => {\r\n          if (!!data && !!data._obj && !!data._obj.docCode) {\r\n            const codeId: BidoDocumentationDTOId = {\r\n              docCode: data._obj.docCode\r\n            };\r\n            temp.push(codeId);\r\n          }\r\n        });\r\n        // this.equipment.removeBidoDocumentationId = temp;\r\n\r\n        this.documentTableDataSource.setData(\r\n          this.documentTableDataSource.dataSrc.filter((data) => {\r\n            return !this.documentTableDataSource.dataSelection.some((row) => {\r\n              return data.docName === row.docName;\r\n            });\r\n          })\r\n        );\r\n\r\n        this.documents = this.documents.filter((data) => {\r\n          return !this.documentTableDataSource.dataSelection.some((row) => {\r\n            return !!data.bidoDocumentationDTO && data.bidoDocumentationDTO.docName === row.docName;\r\n          });\r\n        });\r\n\r\n        this.documentsAdded = this.documentsAdded.filter((data) => {\r\n          return !this.documentTableDataSource.dataSelection.some((row) => {\r\n            return !!data.bidoDocumentationDTO && data.bidoDocumentationDTO.docName === row.docName;\r\n          });\r\n        });\r\n        this.documentsUpdated = this.documentsUpdated.filter((data) => {\r\n          return !this.documentTableDataSource.dataSelection.some((row) => {\r\n            return !!data.bidoDocumentationDTO && data.bidoDocumentationDTO.docName === row.docName;\r\n          });\r\n        });\r\n\r\n        this.documentTableDataSource.dataSelection = [];\r\n        this.updateDocumentsToInventories();\r\n      }\r\n    });\r\n  }\r\n\r\n  public downloadFiles(): void {\r\n    this.documentTableDataSource.dataSelection.forEach((documentRow) => {\r\n      if (!!documentRow._obj) {\r\n        FileUtils.downloadFile(documentRow._obj.docFile, documentRow._obj.docName);\r\n      }\r\n    });\r\n  }\r\n\r\n  public editDocument(): void {\r\n    if (this.documentTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocumentIndex = this.documents.findIndex((list) => {\r\n        return (\r\n          !!list.bidoDocumentationDTO &&\r\n          !!this.documentTableDataSource.dataSelection[0].docName &&\r\n          list.bidoDocumentationDTO.docName === this.documentTableDataSource.dataSelection[0].docName\r\n        );\r\n      });\r\n      this.addedDocumentIndex = this.documentsAdded.findIndex((list) => {\r\n        return (\r\n          !!list.bidoDocumentationDTO &&\r\n          !!this.documentTableDataSource.dataSelection[0].docName &&\r\n          list.bidoDocumentationDTO.docName === this.documentTableDataSource.dataSelection[0].docName\r\n        );\r\n      });\r\n      this.currentDocument = { ...this.documentTableDataSource.dataSelection[0]._obj };\r\n      this.documentDialogOpenMode = ComponentOpenMode.Write;\r\n      this.showAddDocumentDialog = true;\r\n    }\r\n    this.updateDocumentsToInventories();\r\n  }\r\n\r\n  public addNewDocument(newDocument: BidoDocumentationDTO) {\r\n    const bidoDoc: BidoDocumentationTableOutputDTO = {\r\n      bidoDocumentationDTO: newDocument\r\n    };\r\n    let fileExists = true;\r\n    if (!!newDocument) {\r\n      this.documentTableDataSource.dataSrc.forEach((doc, i) => {\r\n        if (doc.docName === newDocument.docName) {\r\n          if (this.currentDocumentIndex === i) {\r\n            fileExists = true;\r\n          } else {\r\n            fileExists = false;\r\n            this.messageService.showWarningMessage('global.warningOnFileExists');\r\n          }\r\n        }\r\n      });\r\n      if (fileExists) {\r\n        if (this.currentDocumentIndex !== -1) {\r\n          this.documents[this.currentDocumentIndex] = bidoDoc;\r\n          this.documentTableDataSource[this.currentDocumentIndex] = this.addData(newDocument);\r\n          const updatedDocumentIndex = this.documentsUpdated.findIndex((obj) => {\r\n            return (\r\n              !!obj.bidoDocumentationDTO &&\r\n              !!obj.bidoDocumentationDTO.docName &&\r\n              !!bidoDoc.bidoDocumentationDTO &&\r\n              !!bidoDoc.bidoDocumentationDTO.docName &&\r\n              obj.bidoDocumentationDTO.docName === bidoDoc.bidoDocumentationDTO.docName\r\n            );\r\n          });\r\n          if (newDocument.docCode) {\r\n            if (updatedDocumentIndex !== -1) {\r\n              this.documentsUpdated[updatedDocumentIndex] = bidoDoc;\r\n            } else {\r\n              this.documentsUpdated = [...this.documentsUpdated, bidoDoc];\r\n            }\r\n          } else {\r\n            if (this.addedDocumentIndex !== -1) {\r\n              this.documentsAdded[this.addedDocumentIndex] = bidoDoc;\r\n            } else {\r\n              this.documentsAdded = [...this.documentsAdded, bidoDoc];\r\n            }\r\n          }\r\n        } else {\r\n          const isAdded = this.documentsAdded.some((documentAdded) => this.areSameDocument(documentAdded, bidoDoc));\r\n          if (isAdded) {\r\n            this.messageService.showWarningMessage('global.warningOnDocumentExists');\r\n          } else {\r\n            this.documents = [...this.documents, bidoDoc];\r\n            this.documentsAdded = [...this.documentsAdded, bidoDoc];\r\n            this.documentTableDataSource.addData([this.addData(newDocument)]);\r\n          }\r\n        }\r\n        this.updateDocumentsToInventories();\r\n      }\r\n      this.documentTableDataSource.dataSelection = [];\r\n    }\r\n  }\r\n\r\n  private areSameDocument(\r\n    obj1: BidoDocumentationTableOutputDTO | undefined,\r\n    obj2: BidoDocumentationTableOutputDTO | undefined\r\n  ): boolean {\r\n    if (!obj1 || !obj2) {\r\n      return false;\r\n    } else {\r\n      return (\r\n        !!obj1.bidoDocumentationDTO &&\r\n        !!obj1.bidoDocumentationDTO.docName &&\r\n        !!obj2.bidoDocumentationDTO &&\r\n        !!obj2.bidoDocumentationDTO.docName &&\r\n        obj1.bidoDocumentationDTO.docName === obj2.bidoDocumentationDTO.docName\r\n      );\r\n    }\r\n  }\r\n\r\n  public addData(newDocument: BidoDocumentationDTO): DocumentTableRow {\r\n    const selectedDocumentType = this.documentTypes.find(\r\n      (documentType) => !!newDocument.docCategory && (documentType.value as string) === newDocument.docCategory\r\n    );\r\n    const row: DocumentTableRow = {\r\n      docName: newDocument.docName,\r\n      docExtension: this.showDocExtension(newDocument),\r\n      docDescription: newDocument.docDescription,\r\n      docCategory: !!selectedDocumentType ? StringUtils.orEmpty(selectedDocumentType.label) : '',\r\n      docPublicationDate: this.dateService.dateToString(newDocument.docPublicationDate),\r\n      docEndOfValidityDate: this.dateService.dateToString(newDocument.docEndOfValidityDate),\r\n      _obj: newDocument\r\n    };\r\n\r\n    return row;\r\n  }\r\n\r\n  public showDocExtension(document: BidoDocumentationDTO): string {\r\n    return FileUtils.getExtension(document.docName).toUpperCase();\r\n  }\r\n\r\n  /*************************\r\n   * Overlay Actions\r\n   *************************/\r\n  public filter() {\r\n    if (!!this.searchCriteria && Object.keys(this.searchCriteria).length > 0) {\r\n      this.cardList = this.cloneCardList.filter((res) => {\r\n        let isPNMatch = true;\r\n        if (!!this.searchCriteria.selectedPN) {\r\n          isPNMatch = this.searchCriteria.selectedPN === res.pn;\r\n        }\r\n\r\n        let isWOMatch = true;\r\n        if (!!this.searchCriteria.selectedWO) {\r\n          isWOMatch = this.searchCriteria.selectedWO === res.woCode;\r\n        }\r\n\r\n        let isSentenceMatch = true;\r\n\r\n        if (!!this.searchCriteria.selectedSentence) {\r\n          isSentenceMatch = this.searchCriteria.selectedSentence === res.sentenceValue;\r\n        }\r\n\r\n        let isDecisionMatch = true;\r\n        if (!!this.searchCriteria.selectedDecision) {\r\n          isDecisionMatch = this.searchCriteria.selectedDecision === res.decisionValue;\r\n        }\r\n\r\n        let control = true;\r\n        if (!!this.searchCriteria.control && this.searchCriteria.control.length > 0 && !!res.icon) {\r\n          control = this.searchCriteria.control.indexOf(res.icon) === -1 ? false : true;\r\n        }\r\n\r\n        // Make inventory selected if match is true\r\n        res.isSelected = isPNMatch && isWOMatch && isSentenceMatch && isDecisionMatch && control ? true : false;\r\n\r\n        return true;\r\n      });\r\n\r\n      this.cardList = _cloneDeep(this.cardList);\r\n    } else {\r\n      this.selectedInventoryList = [];\r\n      this.cardList = _cloneDeep(this.cloneCardList);\r\n\r\n      // Make all selected\r\n      this.cardList.forEach((res) => (res.isSelected = true));\r\n    }\r\n\r\n    this.updateSelectionAndQuantity();\r\n\r\n    if (this.selectedInventoryList.length > 0) {\r\n      this.modifyInventoryList();\r\n    } else {\r\n      this.addNewInventory = true;\r\n      this.quantityValue = this.isItemSerialized ? 1 : undefined;\r\n      this.loadFavoriteCombination();\r\n    }\r\n  }\r\n\r\n  public reset() {\r\n    this.searchCriteria = {};\r\n  }\r\n\r\n  /**********************************************\r\n   * Validate\r\n   *********************************************/\r\n  private validateScreenAndSave() {\r\n    // PN Validity\r\n    if (!this.otherPN && !this.selectedPN && (this.isAddInventory || this.addNewInventory)) {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('missingPN'));\r\n\r\n      return;\r\n    }\r\n\r\n    // Is other PN Valid\r\n    if (!!this.otherPN) {\r\n      const pnId: BirePnDTOId = {\r\n        pnCode: this.otherPN\r\n      };\r\n\r\n      this.addEditInventoryService.findBirePn(pnId).subscribe(\r\n        (result) => {\r\n          if (!!result) {\r\n            this.validateQty();\r\n          }\r\n        },\r\n        (err) => {\r\n          this.messageService.showErrorMessage(this.getTranslateKey('invalidPN'));\r\n\r\n          return;\r\n        }\r\n      );\r\n    } else {\r\n      this.validateQty();\r\n    }\r\n  }\r\n\r\n  /*************************************\r\n   * Validate for Quantity\r\n   *************************************/\r\n  private validateQty() {\r\n    // check has to verify that the quantity of all inventories is equal to expected quantity,\r\n    // if it is not equal, then do not save and display the message\r\n    const totalInventory = this.inventoryList.length + (this.quantityValue || 0);\r\n    if (\r\n      (this.isAddInventory || this.addNewInventory) &&\r\n      !!this.bireItemDTO.expectedQuantity &&\r\n      !!totalInventory &&\r\n      (totalInventory > parseInt(this.bireItemDTO.expectedQuantity, 10) ||\r\n        totalInventory < parseInt(this.bireItemDTO.expectedQuantity, 10))\r\n    ) {\r\n      this.confirmationService.confirmDelete({\r\n        messageKey: this.getTranslateKey('inventoryQuantityNotCorrect'),\r\n        accept: () => {\r\n          // SN Validity\r\n          if (\r\n            !(this.isAddInventory || this.addNewInventory) &&\r\n            !!this.selectedInventoryList &&\r\n            this.selectedInventoryList.length > 0\r\n          ) {\r\n            let isSNAdded = true;\r\n            const snArray: string[] = [];\r\n\r\n            this.selectedInventoryList.forEach((res) => {\r\n              if (!res.sn) {\r\n                isSNAdded = false;\r\n              } else {\r\n                snArray.push(res.sn);\r\n              }\r\n            });\r\n\r\n            if (!isSNAdded) {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('snMandatory'));\r\n\r\n              return;\r\n            }\r\n\r\n            // Find duplicate sn\r\n            const findDuplicates = (arr: string[]) => arr.filter((item, index) => arr.indexOf(item) !== index);\r\n\r\n            if (findDuplicates(snArray).length > 0) {\r\n              const pn = !!this.selectedPN ? this.selectedPN : this.otherPN;\r\n              const errMsg = `${this.translateService.instant(this.getTranslateKey('duplicateSN'))} ${pn} / ${\r\n                findDuplicates(snArray)[0]\r\n              }`;\r\n\r\n              this.messageService.showErrorMessage(errMsg);\r\n\r\n              return;\r\n            }\r\n          }\r\n\r\n          if ((this.isAddInventory || this.addNewInventory) && this.isItemSerialized) {\r\n            let isSNAdded = true;\r\n            const snArray: string[] = [];\r\n\r\n            this.snCount.forEach((res) => {\r\n              if (!res.value) {\r\n                isSNAdded = false;\r\n              } else {\r\n                snArray.push(res.value);\r\n              }\r\n            });\r\n\r\n            if (this.snCount.length === 0 || !isSNAdded || this.snCount.length !== snArray.length) {\r\n              this.messageService.showErrorMessage(this.getTranslateKey('snMandatory'));\r\n\r\n              return;\r\n            }\r\n\r\n            // Find duplicate sn\r\n            const findDuplicates = (arr: string[]) => arr.filter((item, index) => arr.indexOf(item) !== index);\r\n\r\n            if (findDuplicates(snArray).length > 0) {\r\n              const pn = !!this.selectedPN ? this.selectedPN : this.otherPN;\r\n              const errMsg = `${this.translateService.instant(this.getTranslateKey('duplicateSN'))} ${pn} / ${\r\n                findDuplicates(snArray)[0]\r\n              }`;\r\n\r\n              this.messageService.showErrorMessage(errMsg);\r\n\r\n              return;\r\n            }\r\n          }\r\n          this.save();\r\n        },\r\n        reject: () => {\r\n          return;\r\n        }\r\n      });\r\n    } else {\r\n      this.save();\r\n    }\r\n  }\r\n\r\n  /*******************************\r\n   * Event to save Inventory\r\n   *******************************/\r\n  public saveInventory() {\r\n    this.validateScreenAndSave();\r\n  }\r\n\r\n  public save() {\r\n    // TODO\r\n\r\n    // Remove other PN in case both PN and Other PN are entered\r\n    if (!!this.selectedPN && !!this.otherPN) {\r\n      this.otherPN = undefined;\r\n    }\r\n\r\n    // Assign PN\r\n    if (this.selectedPN || this.otherPN) {\r\n      const pn = this.selectedPN || this.otherPN;\r\n\r\n      this.selectedInventoryList.forEach((res) => (res.pn = pn));\r\n    }\r\n\r\n    // Check if any inventory is empty for sentence/decision, then assign favorite to it\r\n    this.cardList.forEach((inventory) => {\r\n      if (!!this.sentenceDecisionDTO && !!this.sentenceDecisionDTO.favoriteCombination) {\r\n        if (!inventory.sentenceValue && !inventory.decisionValue) {\r\n          inventory.sentenceValue = this.sentenceDecisionDTO.favoriteCombination.sentence;\r\n          if (!!inventory.sentenceValue) {\r\n            inventory.sentenceList = [inventory.sentenceValue];\r\n          }\r\n\r\n          inventory.decisionValue = this.sentenceDecisionDTO.favoriteCombination.decision;\r\n          if (!!inventory.decisionValue) {\r\n            inventory.decisionList = [inventory.decisionValue];\r\n          }\r\n\r\n          // Setting up favorite selection\r\n          this.selectedSentence = this.sentenceDecisionDTO.favoriteCombination.sentence;\r\n          this.modifyDecisionList();\r\n          this.oldSentence = this.selectedSentence;\r\n          this.selectedDecision = this.sentenceDecisionDTO.favoriteCombination.decision;\r\n          this.oldDecision = this.selectedDecision;\r\n        }\r\n      }\r\n\r\n      // Assign decision if length is 1\r\n      if (this.decisionList.length === 1 && !!this.selectedSentence) {\r\n        this.selectedDecision = this.decisionList[0].value as string;\r\n        this.oldDecision = this.selectedDecision;\r\n        inventory.decisionValue = this.selectedDecision;\r\n      }\r\n    });\r\n\r\n    if (!this.addNewInventory && !this.newInventory) {\r\n      this.modifyInventories(true);\r\n    }\r\n\r\n    this.filtersVisible = false;\r\n    this.updateFilterCriteria();\r\n\r\n    // Update dbCopy\r\n    this.cloneCardList = _cloneDeep(this.cardList);\r\n    this.getInventoryIcon();\r\n    this.messageService.showSuccessMessage('global.successOnSave');\r\n  }\r\n\r\n  private resetTaskDamagesAndDocuments() {\r\n    this.workList.forEach((res) => (res.applied = false));\r\n    this.findingsList = [];\r\n    this.documents = [];\r\n    this.documentsAdded = [];\r\n    this.documentsUpdated = [];\r\n  }\r\n\r\n  public deleteInventories() {\r\n    const partialMessageKey =\r\n      this.selectedInventoryList.length === 1\r\n        ? 'confirmDeleteInventory'\r\n        : this.selectedInventoryList.length === this.cardList.length\r\n        ? 'confirmDeleteAllInventories'\r\n        : 'confirmDeleteSelectedInventory';\r\n\r\n    const message =\r\n      this.selectedInventoryList.length === this.cardList.length\r\n        ? ` ${this.pageComponentData.title} ?`\r\n        : `\\n ${this.getInventoryList(this.isItemSerialized)}`;\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      contextKeys: [message],\r\n      accept: () => {\r\n        this.selectedInventoryList.forEach((inventory) => {\r\n          const index = this.cardList.findIndex((res) => res.index === inventory.index);\r\n          this.cardList.splice(index, 1);\r\n        });\r\n        this.selectedInventoryList = [];\r\n        this.cloneCardList = _cloneDeep(this.cardList);\r\n        this.unselectAllInventories();\r\n      }\r\n    });\r\n  }\r\n\r\n  private getInventoryList(isItemSerialized: boolean): string {\r\n    const maxSize = 5;\r\n    const list: string[] = [];\r\n    let str: string;\r\n    this.selectedInventoryList.forEach((res) => {\r\n      if (list.length < maxSize) {\r\n        if (isItemSerialized) {\r\n          str = !!res.sn ? `- P/N ${res.pn} | S/N ${res.sn}` : `- P/N ${res.pn}`;\r\n        } else {\r\n          str = !!res.trackingNumber\r\n            ? `- P/N ${res.pn} | T/N ${res.trackingNumber} (${this.translateService.instant(\r\n                this.getTranslateKey('qty')\r\n              )} = ${res.quantity})`\r\n            : `- P/N ${res.pn} (${this.translateService.instant(this.getTranslateKey('qty'))} = ${res.quantity})`;\r\n        }\r\n        list.push(str);\r\n      }\r\n\r\n      if (this.selectedInventoryList.length > maxSize && list.length === maxSize) {\r\n        list.push('- ...');\r\n      }\r\n    });\r\n\r\n    return list.join('\\n');\r\n  }\r\n\r\n  /**********************************************\r\n   * Filter Item List\r\n   *********************************************/\r\n  public searchReworkPNList(ev) {\r\n    if (!!ev && !!ev.query && !!this.cloneReworkPNList) {\r\n      this.reworkPNList = this.cloneReworkPNList.filter((res) =>\r\n        res.label.toLowerCase().startsWith(ev.query.toLowerCase())\r\n      );\r\n    } else {\r\n      this.reworkPNList = [...this.reworkPNList];\r\n    }\r\n  }\r\n\r\n  /**********************************************\r\n   * Filter Item List\r\n   *********************************************/\r\n  public searchTaskCodeList(ev) {\r\n    if (!!ev && !!ev.query && !!this.cloneTaskCodeList) {\r\n      this.taskCodeList = this.cloneTaskCodeList.filter((res) =>\r\n        res.label.toLowerCase().startsWith(ev.query.toLowerCase())\r\n      );\r\n    } else {\r\n      this.taskCodeList = [...this.taskCodeList];\r\n    }\r\n  }\r\n\r\n  /**********************************************\r\n   * Filter Item List\r\n   *********************************************/\r\n  public searchDesignationList(ev) {\r\n    if (!!ev && !!ev.query && !!this.cloneDesignationList) {\r\n      this.designationList = this.cloneDesignationList.filter((res) =>\r\n        res.label.toLowerCase().startsWith(ev.query.toLowerCase())\r\n      );\r\n    } else {\r\n      this.designationList = [...this.designationList];\r\n    }\r\n  }\r\n\r\n  public resetWorks() {\r\n    this.worksSearchCriteria.selectedToggle = [\r\n      AddEditInventoryComponent.APPLIED,\r\n      AddEditInventoryComponent.NOT_APPLIED\r\n    ];\r\n    this.worksSearchCriteria.selectedDesignation = undefined;\r\n    this.worksSearchCriteria.selectedReworkPN = undefined;\r\n    this.worksSearchCriteria.selectedCode = undefined;\r\n  }\r\n\r\n  public filterWorks() {\r\n    if (!!this.worksSearchCriteria && Object.keys(this.worksSearchCriteria).length > 0) {\r\n      this.workList = this.dbWorkList.filter((res) => {\r\n        let isCodeMatch = true;\r\n        if (!!this.worksSearchCriteria.selectedCode) {\r\n          isCodeMatch = this.worksSearchCriteria.selectedCode.value === res.taskCode;\r\n        }\r\n\r\n        let isDesignationMatch = true;\r\n        if (!!this.worksSearchCriteria.selectedDesignation) {\r\n          isDesignationMatch = this.worksSearchCriteria.selectedDesignation.value === res.taskDesignation;\r\n        }\r\n\r\n        let control = true;\r\n        if (!!this.worksSearchCriteria.selectedToggle && this.worksSearchCriteria.selectedToggle.length > 0) {\r\n          const code = res.applied ? 0 : 1;\r\n          control = this.worksSearchCriteria.selectedToggle.indexOf(code) === -1 ? false : true;\r\n        }\r\n\r\n        return isCodeMatch && isDesignationMatch && control;\r\n      });\r\n\r\n      this.workList = this.workList.filter(\r\n        (res) => !!this.selectedMroCenter && res.mroCenter === this.selectedMroCenter\r\n      );\r\n      this.workList = _cloneDeep(this.workList);\r\n    } else {\r\n      this.changeMroCenterAndLoadTask();\r\n      this.workList = _cloneDeep(this.dbWorkList);\r\n    }\r\n    this.showFilterPanel = false;\r\n  }\r\n\r\n  public togglePNButton() {\r\n    this.showOtherPN = this.showOtherPN ? false : true;\r\n\r\n    if (this.showOtherPN && !!this.selectedPN) {\r\n      this.selectedPN = undefined;\r\n    }\r\n\r\n    if (!this.showOtherPN && !!this.otherPN) {\r\n      this.otherPN = undefined;\r\n    }\r\n\r\n    if (this.addNewInventory || this.newInventory) {\r\n      this.loadFavoriteCombination();\r\n    } else {\r\n      this.modifyInventoryList();\r\n    }\r\n\r\n    this.getInventoryIcon();\r\n  }\r\n\r\n  /**********************************\r\n   * OPEN WORK ORDER UC\r\n   **********************************/\r\n  public openWorkOrderLink(rowData: TechnicalQuotationOutput): void {\r\n    if (!!rowData.woId && !!rowData.woProjectId) {\r\n      const workOrderDTOId: BidmWorkOrderDTOId = {\r\n        woId: rowData.woId,\r\n        projectId: rowData.woProjectId\r\n      };\r\n      this.openWorkOrder(workOrderDTOId, ComponentOpenMode.Read);\r\n    }\r\n  }\r\n\r\n  public openWorkOrder(wo: BidmWorkOrderDTOId, openModeWanted: ComponentOpenMode): void {\r\n    const data: PageComponentData = {\r\n      id: this.tabService.generateId(),\r\n      componentId: ComponentConstants.MAI_WORK_ORDER_FORM,\r\n      openMode: openModeWanted,\r\n      objectId: this.serializationService.serialize(wo)\r\n    };\r\n    const labelKey = 'transaction.' + data.componentId;\r\n\r\n    this.tabService.open(this.tabService.create(data, labelKey, true));\r\n  }\r\n\r\n  // Getting identifier key for an item node\r\n  public getKey(item: BireItemForWorkscopeTreeDTO): string {\r\n    return `${item.chapter}-${item.section}-${item.subject}-${item.sheet}-${item.marks}`;\r\n  }\r\n\r\n  /**************************************\r\n   * Update Sentence Decision List\r\n   **************************************/\r\n  private loadSentenceDecisionListByPN(targetIcon?: string) {\r\n    const input: FetchSentenceDecisionInputDTO = {\r\n      projectNumber: this.bsdeProjectDTO.projectNumber,\r\n      pn: this.selectedPN || this.otherPN,\r\n      bireItemKey: this.getKey(this.bireItemDTO) as string,\r\n      sn: !!this.snCount && this.snCount.length > 0 ? this.snCount[0].value : undefined,\r\n      quantity: !!this.quantityValue\r\n        ? this.isItemSerialized\r\n          ? `${this.quantityValue}`\r\n          : `${this.sumRealQuantity}`\r\n        : '1',\r\n      sentence: this.selectedSentence,\r\n      icon: !!targetIcon\r\n        ? targetIcon\r\n        : this.selectedInventoryList.length > 0\r\n        ? this.getConfiguration()\r\n        : this.bireItemDTO.resultAssignmentIcon\r\n    };\r\n\r\n    this.addEditInventoryService\r\n      .getSentenceAndDecisionList(input)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.modifyDecisionList();\r\n        })\r\n      )\r\n      .subscribe((res) => {\r\n        this.sentenceDecisionDTO.sentenceDecisionList = res.sentenceDecisionList;\r\n      });\r\n  }\r\n\r\n  /**************************************\r\n   * Apply Task\r\n   **************************************/\r\n  public applyTask() {\r\n    this.selectedWork.forEach((res) => {\r\n      res.applied = true;\r\n    });\r\n\r\n    this.updateDBList();\r\n  }\r\n\r\n  public taskApplied() {\r\n    this.updateDBList();\r\n  }\r\n\r\n  private updateDBList() {\r\n    this.workList.forEach((work) => {\r\n      const index = this.dbWorkList.findIndex((res) => res.taskCode === work.taskCode);\r\n      if (index !== -1) {\r\n        this.dbWorkList[index] = work;\r\n      }\r\n    });\r\n    this.updateWorksToInventories();\r\n  }\r\n\r\n  /*****************************************************\r\n   * Callback method to fetch icon\r\n   *****************************************************/\r\n  private getInventoryIcon() {\r\n    const input: FetchSentenceDecisionInputDTO[] =\r\n      this.isAddInventory || this.addNewInventory || this.selectedInventoryList.length === 1\r\n        ? [this.getMatchingIconInput()]\r\n        : this.getControlForMultipleInventories();\r\n\r\n    this.addEditInventoryService\r\n      .fetchMatchingIcon(input)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.loadInventoriesFlag = false;\r\n        })\r\n      )\r\n      .subscribe((res) => {\r\n        if (res.length === 1) {\r\n          this.loadSentenceDecisionListByPN(res[0].icon);\r\n        } else {\r\n          res.forEach((dto, index) => {\r\n            this.selectedInventoryList[index].icon = dto.icon;\r\n          });\r\n          this.loadSentenceDecisionListByPN(this.getConfiguration());\r\n          this.filtersVisible = false;\r\n          this.updateFilterCriteria();\r\n        }\r\n      });\r\n  }\r\n\r\n  public getTrimLabel(label: string): string {\r\n    const maxLength = 25;\r\n    const lastIndex = 22;\r\n\r\n    return !!label && label.length > maxLength ? `${label.substring(0, lastIndex)}...` : label;\r\n  }\r\n\r\n  public getTrimQty(label: string): string {\r\n    const maxLength = 17;\r\n    const lastIndex = 16;\r\n\r\n    return !!label && label.length > maxLength ? `${label.substring(0, lastIndex)}...` : label;\r\n  }\r\n\r\n  /***************************************\r\n   * Update Findings\r\n   ***************************************/\r\n  private updateFindingsToInventories(isAddUpdateData?: FindingsInterface) {\r\n    if (!!this.selectedInventoryList && !!this.cardList && this.cardList.length > 0) {\r\n      if (this.selectedInventoryList.length === 1) {\r\n        this.selectedInventoryList[0].findings = this.findingsList;\r\n      } else if (this.selectedInventoryList.length > 1) {\r\n        this.cardList.forEach((res) => {\r\n          if (res.isSelected) {\r\n            if (!res.findings) {\r\n              res.findings = [];\r\n            }\r\n\r\n            // If method called from updation/edition\r\n            if (!!isAddUpdateData && this.selectedFindingsIndex !== -1) {\r\n              res.findings[this.selectedFindingsIndex] = isAddUpdateData;\r\n            } else {\r\n              res.findings = [...res.findings, ...this.findingsList];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /***************************************\r\n   * Update Works\r\n   ***************************************/\r\n  private updateWorksToInventories() {\r\n    if (!!this.cardList && this.cardList.length > 0) {\r\n      this.cardList.forEach((res) => {\r\n        if (res.isSelected) {\r\n          res.works = _cloneDeep(this.dbWorkList);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /***************************************\r\n   * Update Documents\r\n   ***************************************/\r\n  private updateDocumentsToInventories() {\r\n    if (this.cardList.length > 0) {\r\n      if (!!this.cardList && this.cardList.length > 0) {\r\n        this.cardList.forEach((res) => {\r\n          if (res.isSelected) {\r\n            res.document = _cloneDeep(this.documents);\r\n            res.documentsAdded = _cloneDeep(this.documentsAdded);\r\n            res.documentsUpdated = _cloneDeep(this.documentsUpdated);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /*****************************************\r\n   * Method to load findings and works of\r\n   * selected Inventory\r\n   *****************************************/\r\n  private loadFindingsWorksAndDocuments() {\r\n    const docListIndex = 0;\r\n    const docAddIndex = 1;\r\n    const docUpdateIndex = 2;\r\n\r\n    this.updateInventoriesSelection();\r\n    if (this.selectedInventoryList.length > 0) {\r\n      // Load Findings\r\n      this.findingsList =\r\n        this.selectedInventoryList.length === 1\r\n          ? !!this.selectedInventoryList[0].findings\r\n            ? _cloneDeep(this.selectedInventoryList[0].findings)\r\n            : []\r\n          : this.loadCommonFindings();\r\n\r\n      // Load Works\r\n      const workList: WorkListInterface[] =\r\n        this.selectedInventoryList.length === 1 && !!this.selectedInventoryList[0].works\r\n          ? _cloneDeep(this.selectedInventoryList[0].works)\r\n          : this.loadCommonWorks();\r\n\r\n      this.updateWorkTable(workList);\r\n\r\n      // Load Document\r\n      this.documents =\r\n        this.selectedInventoryList.length === 1\r\n          ? this.selectedInventoryList[0].document || []\r\n          : this.loadCommonDocuments(docListIndex) || [];\r\n      this.documentsAdded =\r\n        this.selectedInventoryList.length === 1\r\n          ? this.selectedInventoryList[0].documentsAdded || []\r\n          : this.loadCommonDocuments(docAddIndex) || [];\r\n      this.documentsUpdated =\r\n        this.selectedInventoryList.length === 1\r\n          ? this.selectedInventoryList[0].documentsUpdated || []\r\n          : this.loadCommonDocuments(docUpdateIndex) || [];\r\n\r\n      if (!!this.documents) {\r\n        this.loadDocumentTable();\r\n      }\r\n    } else {\r\n      this.resetTaskDamagesAndDocuments();\r\n    }\r\n  }\r\n\r\n  private updateWorkTable(list: WorkListInterface[]) {\r\n    this.workList = [];\r\n    this.workList = list.filter((res) => res.mroCenter === this.selectedMroCenter);\r\n  }\r\n\r\n  /**************************************\r\n   * Load documents of inventories\r\n   **************************************/\r\n  private loadDocumentTable() {\r\n    this.documentTableDataSource.setData([]);\r\n    const docArr: DocumentTableRow[] = [];\r\n\r\n    this.documents.forEach((res) => {\r\n      if (!!res && !!res.bidoDocumentationDTO) {\r\n        docArr.push(this.addData(res.bidoDocumentationDTO));\r\n      }\r\n    });\r\n\r\n    this.documentTableDataSource.setData(docArr);\r\n  }\r\n\r\n  /*******************************************\r\n   * Load inventories findings\r\n   *******************************************/\r\n  private loadCommonFindings(): FindingsInterface[] {\r\n    const findings: unknown[][] = [];\r\n    this.selectedInventoryList.forEach((inventory) => {\r\n      if (!!inventory.findings && inventory.findings.length > 0) {\r\n        findings.push(inventory.findings);\r\n      }\r\n    });\r\n    let findingsArr: FindingsInterface[] = [];\r\n\r\n    if (!!findings && findings.length > 1) {\r\n      const intersectionArr = findings.reduce((intersection, array) => {\r\n        return (intersection as FindingsInterface[]).filter((intersectedItem) =>\r\n          (array as FindingsInterface[]).some(\r\n            (item) =>\r\n              intersectedItem.findingComment === item.findingComment &&\r\n              intersectedItem.localisationCode === item.localisationCode &&\r\n              intersectedItem.quantity === item.quantity &&\r\n              intersectedItem.unitCode === item.unitCode &&\r\n              intersectedItem.criticality === item.criticality &&\r\n              intersectedItem.damageCode === item.damageCode\r\n          )\r\n        );\r\n      }, findings[0]);\r\n\r\n      if (!!intersectionArr && intersectionArr.length > 0) {\r\n        findingsArr = intersectionArr as FindingsInterface[];\r\n      }\r\n    } else {\r\n      findingsArr = [];\r\n    }\r\n\r\n    return findingsArr;\r\n  }\r\n\r\n  /*******************************************\r\n   * Load Intersection of works\r\n   *******************************************/\r\n  private loadCommonWorks(): WorkListInterface[] {\r\n    const works: WorkListInterface[][] = [];\r\n    let worksArr: WorkListInterface[] = [];\r\n\r\n    this.selectedInventoryList.forEach((inventory) => {\r\n      if (!!inventory.works) {\r\n        works.push(inventory.works);\r\n      }\r\n    });\r\n\r\n    if (!!works && works.length > 0) {\r\n      const intersectionArr: WorkListInterface[] = works[0];\r\n      works.forEach((res: WorkListInterface[]) => {\r\n        res.forEach((work) => {\r\n          if (!work.applied) {\r\n            const eleIndex = intersectionArr.findIndex((dto) => dto.taskCode === work.taskCode);\r\n            if (eleIndex !== -1) {\r\n              intersectionArr[eleIndex] = work;\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      worksArr =\r\n        !!intersectionArr && intersectionArr.length > 0\r\n          ? (intersectionArr as WorkListInterface[])\r\n          : this.resetWorksTable();\r\n    } else {\r\n      worksArr = this.resetWorksTable();\r\n    }\r\n\r\n    return worksArr;\r\n  }\r\n\r\n  private resetWorksTable() {\r\n    this.resetWorks();\r\n    const workArr = _cloneDeep(this.dbWorkList);\r\n    workArr.forEach((res) => (res.applied = false));\r\n\r\n    return workArr;\r\n  }\r\n\r\n  /********************************\r\n   * Load Common Documents\r\n   ********************************/\r\n  private loadCommonDocuments(index: number) {\r\n    let docsArr: BidoDocumentationTableOutputDTO[] = [];\r\n\r\n    const list =\r\n      index === 0\r\n        ? this.selectedInventoryList.map((inventory) => inventory.document)\r\n        : index === 1\r\n        ? this.selectedInventoryList.map((inventory) => inventory.documentsAdded)\r\n        : this.selectedInventoryList.map((inventory) => inventory.documentsUpdated);\r\n\r\n    if (!!list) {\r\n      list.forEach((res) => {\r\n        if (!!res) {\r\n          docsArr = [...docsArr, ...res];\r\n        }\r\n      });\r\n    }\r\n\r\n    return docsArr;\r\n  }\r\n\r\n  /********************************\r\n   * Reset decision list\r\n   ********************************/\r\n  private resetDecisionList() {\r\n    if (!!this.sentenceDecisionDTO && !!this.sentenceDecisionDTO.decisionList) {\r\n      this.decisionList = [];\r\n      this.sentenceDecisionDTO.decisionList.forEach((res) => {\r\n        this.decisionList.push({\r\n          label: this.getDecisionLabel(res),\r\n          value: res\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { CardModule } from 'primeng/card';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { CalendarModule, FileUploadModule } from 'primeng/primeng';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { TableModule as PrimeNgTableModule } from 'primeng/table';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { DynamicComponentLoaderModule } from '../../../main/dynamic-component-loader/dynamic-component-loader.module';\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { TableModule } from '../../../shared/components/table/table.module';\r\nimport { CockpitComponentApi } from '../../api/cockpit-component.api';\r\n\r\nimport { AddEditInventoryComponent } from './add-edit-inventory.component';\r\nimport { AddEditInventoryService } from './add-edit-inventory.service';\r\nimport { DialogCockpitBidoDocumentComponent } from './dialog-findings/dialog-cockpit-bido-document/dialog-cockpit-bido-document.component';\r\nimport { DialogFindingsComponent } from './dialog-findings/dialog-findings.component';\r\nimport { DocumentUploadDialogComponent } from './document-upload-dialog/document-upload-dialog.component';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  CheckboxModule,\r\n  ModalModule,\r\n  DropdownModule,\r\n  MessageModule,\r\n  RadioButtonModule,\r\n  PrimeNgTableModule,\r\n  SelectButtonModule,\r\n  TableModule,\r\n  TooltipModule,\r\n  CardModule,\r\n  SplitButtonModule,\r\n  OverlayPanelModule,\r\n  InputSwitchModule,\r\n  ProgressBarModule,\r\n  FileUploadModule,\r\n  MultiSelectModule,\r\n  AutoCompleteModule,\r\n  CalendarModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [\r\n  AddEditInventoryComponent,\r\n  DialogFindingsComponent,\r\n  DialogCockpitBidoDocumentComponent,\r\n  DocumentUploadDialogComponent\r\n];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [AddEditInventoryService, CockpitComponentApi];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class AddEditInventoryModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { CockpitComponentApi } from '../../api/cockpit-component.api';\r\nimport { ProductStructureManagementApi } from '../../api/product-structure-management.api';\r\nimport { TaskManagementApi } from '../../api/task-management.api';\r\nimport { AbstractAwHttpService } from '../../http/abstract-aw-http';\r\nimport { AppConfigService } from '../../services/app-config.service';\r\nimport { FetchSentenceDecisionInputDTO } from '../../types/api-input-types/maintenance-component-cockpit/fetch-sentence-decision-input-dto.interface';\r\nimport { GetPartNumberStructureOutputDTO } from '../../types/api-output-types/get-part-number-structure-output-dto.interface';\r\nimport { IWBFindingsCustom } from '../../types/api-output-types/maintenance-component-cockpit/iwb-findings-custom.interface';\r\nimport { SentenceAndDecisionListOutput } from '../../types/api-output-types/maintenance-component-cockpit/sentence-and-decision-list-output.interface';\r\nimport { DamagesWithItemVersionOutput } from '../../types/api-output-types/task-management/damages-with-item-version-output.interface';\r\nimport { TaskAssociatedItemOutput } from '../../types/api-output-types/task-management/task-associated-item-output.interface';\r\nimport { BireItemForWorkscopeTreeDTO } from '../../types/api-output-types/workscope-component/bire-item-for-workscope-tree-dto.interface';\r\nimport { BireItemDTOId } from '../../types/api-types/bire-item-dto-id.interface';\r\nimport { BireItemVersionDTOId } from '../../types/api-types/bire-item-version-dto-id.interface';\r\nimport { BireLocalisationItemDTO } from '../../types/api-types/bire-localisation-item-dto.interface';\r\nimport { BirePnDTOId } from '../../types/api-types/bire-pn-dto-id.interface';\r\nimport { BirePnDTO } from '../../types/api-types/bire-pn-dto.interface';\r\nimport { BireTaskDTOId } from '../../types/api-types/bire-task-dto-id.interface';\r\nimport { BireTaskDTO } from '../../types/api-types/bire-task-dto.interface';\r\nimport { LabelValue } from '../../types/label-value.interface';\r\n\r\ninterface DamagesWithItemVersionOutputCustom {\r\n  damageCode?: string;\r\n  familyCode?: string;\r\n  structureType?: string;\r\n  variantCode?: string;\r\n  chapter?: string;\r\n  sheet?: string;\r\n  marks?: string;\r\n  section?: string;\r\n  subject?: string;\r\n  versionNumber?: string;\r\n  damageDescription?: string;\r\n  unitCode?: string;\r\n}\r\n\r\n@Injectable()\r\nexport class AddEditInventoryService extends AbstractAwHttpService {\r\n  // Damages\r\n  public damagesList: DamagesWithItemVersionOutputCustom[];\r\n\r\n  // Localisation\r\n  public localisationList: BireLocalisationItemDTO[];\r\n\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly cockpitComponentApi: CockpitComponentApi,\r\n    private readonly taskManagementApi: TaskManagementApi,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public fetchSentenceList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.cockpitComponentApi.getSentenceList);\r\n  }\r\n\r\n  public fetchDecisionList(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.cockpitComponentApi.getDecisionList);\r\n  }\r\n\r\n  public findMROCenter(): Observable<LabelValue<string>[]> {\r\n    return super.post<void, LabelValue<string>[]>(this.productStructureManagementApi.findAllBireSiteForTask);\r\n  }\r\n\r\n  public getPartNumberStructure(bireItemDTOId: BireItemDTOId): Observable<GetPartNumberStructureOutputDTO[]> {\r\n    return super.post<BireItemDTOId, GetPartNumberStructureOutputDTO[]>(\r\n      this.productStructureManagementApi.getPartNumberStructure,\r\n      bireItemDTOId\r\n    );\r\n  }\r\n\r\n  public findBireDamageItemsByItemVersionItemScreen(\r\n    bireItemVersionDTOId: BireItemVersionDTOId\r\n  ): Observable<DamagesWithItemVersionOutput[]> {\r\n    return super.post<BireItemVersionDTOId, DamagesWithItemVersionOutput[]>(\r\n      this.taskManagementApi.findBireDamageItemsByItemVersionItemScreen,\r\n      bireItemVersionDTOId\r\n    );\r\n  }\r\n\r\n  public findBireLocalisationItemsByItemVersion(\r\n    bireItemVersionDTOId: BireItemVersionDTOId\r\n  ): Observable<BireLocalisationItemDTO[]> {\r\n    return super.post<BireItemVersionDTOId, BireLocalisationItemDTO[]>(\r\n      this.taskManagementApi.findBireLocalisationItemsByItemVersion,\r\n      bireItemVersionDTOId\r\n    );\r\n  }\r\n\r\n  public findBireTask(input: BireTaskDTOId): Observable<BireTaskDTO> {\r\n    return super.post<BireTaskDTOId, BireTaskDTO>(this.taskManagementApi.findBireTask, input);\r\n  }\r\n\r\n  public findBireItemVersions(bireItemDTOId: BireItemDTOId): Observable<LabelValue<string>[]> {\r\n    return super.post<BireItemDTOId, LabelValue<string>[]>(\r\n      this.productStructureManagementApi.findBireItemVersionsByItem,\r\n      bireItemDTOId\r\n    );\r\n  }\r\n\r\n  public findBireTaskItemsByItemTaskTab(bireItemDTOId: BireItemDTOId): Observable<TaskAssociatedItemOutput[]> {\r\n    return super.post<BireItemDTOId, TaskAssociatedItemOutput[]>(\r\n      this.taskManagementApi.findBireTaskItemsByItemTaskTab,\r\n      bireItemDTOId\r\n    );\r\n  }\r\n\r\n  public findBirePn(pn: BirePnDTOId): Observable<BirePnDTO> {\r\n    return super.post<BirePnDTOId, BirePnDTO>(this.productStructureManagementApi.findBirePn, pn);\r\n  }\r\n\r\n  public getSentenceAndDecisionList(input: FetchSentenceDecisionInputDTO): Observable<SentenceAndDecisionListOutput> {\r\n    return super.post<FetchSentenceDecisionInputDTO, SentenceAndDecisionListOutput>(\r\n      this.cockpitComponentApi.getSentenceAndDecisionList,\r\n      input\r\n    );\r\n  }\r\n\r\n  public loadFindingsList(input: FetchSentenceDecisionInputDTO): Observable<IWBFindingsCustom[]> {\r\n    return super.post<FetchSentenceDecisionInputDTO, IWBFindingsCustom[]>(\r\n      this.cockpitComponentApi.loadFindingsList,\r\n      input\r\n    );\r\n  }\r\n\r\n  public fetchMatchingIcon(input: FetchSentenceDecisionInputDTO[]): Observable<BireItemForWorkscopeTreeDTO[]> {\r\n    return super.post<FetchSentenceDecisionInputDTO[], BireItemForWorkscopeTreeDTO[]>(\r\n      this.cockpitComponentApi.fetchMatchingIcon,\r\n      input\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docName\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"document.docName\\\" [disabled]=\\\"isReadOpenMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docPublicationDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"document.docPublicationDate\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docDescription\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          pInputTextarea\\r\\n          [rows]=\\\"3\\\"\\r\\n          [(ngModel)]=\\\"document.docDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button *ngIf=\\\"isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" color=\\\"primary\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../../shared/services/session.service';\r\nimport { BireDocumentDTO } from '../../../../../shared/types/api-types/bire-document-dto.interface';\r\nimport { DialogComponent } from '../../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-cockpit-bido-document',\r\n  templateUrl: './dialog-cockpit-bido-document.component.html'\r\n})\r\nexport class DialogCockpitBidoDocumentComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public document: BireDocumentDTO;\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n  @Input()\r\n  public types: SelectItem[];\r\n  @Output()\r\n  public onValidated: EventEmitter<BireDocumentDTO>;\r\n\r\n  public constructor(public sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DialogCockpitBidoDocumentComponent');\r\n\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BireDocumentDTO>();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.updateOpenMode(this.openMode);\r\n\r\n    if (!this.document) {\r\n      this.document = {};\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.document);\r\n    this.closeDialog();\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"35\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"column\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".damage\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [options]=\\\"damagesList\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"finding.damageCode\\\"\\r\\n              (onChange)=\\\"onChangeDamage()\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".quantity\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <input type=\\\"number\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"finding.quantity\\\" [disabled]=\\\"isReadOpenMode\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".localisation\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [options]=\\\"locationList\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [(ngModel)]=\\\"finding.localisationCode\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".criticality\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <p-dropdown\\r\\n              class=\\\"aw-dropdown fixed-width\\\"\\r\\n              placeholder=\\\"&nbsp;\\\"\\r\\n              [showClear]=\\\"true\\\"\\r\\n              [options]=\\\"criticalityList\\\"\\r\\n              [(ngModel)]=\\\"finding.criticality\\\"\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n            ></p-dropdown>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"form-label\\\">\\r\\n            {{ getComponentName() + \\\".comment\\\" | translate }}\\r\\n          </label>\\r\\n\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <textarea\\r\\n              class=\\\"aw-textarea\\\"\\r\\n              [rows]=\\\"3\\\"\\r\\n              pInputTextarea\\r\\n              [disabled]=\\\"isReadOpenMode\\\"\\r\\n              [(ngModel)]=\\\"finding.findingComment\\\"\\r\\n            ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"section search-criteria-section\\\">\\r\\n          <h4 class=\\\"section-title\\\">\\r\\n            {{ getComponentName() + \\\".document\\\" | translate }} ({{\\r\\n              documentTableDataSource ? documentTableDataSource.dataCount : 0\\r\\n            }})\\r\\n          </h4>\\r\\n\\r\\n          <div class=\\\"section-content\\\">\\r\\n            <a-table [dataSource]=\\\"documentTableDataSource\\\">\\r\\n              <ng-template tableActionsDef>\\r\\n                <button\\r\\n                  *ngIf=\\\"documentTableDataSource.hasDataSelection\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  mat-raised-button\\r\\n                  (click)=\\\"downloadFiles()\\\"\\r\\n                >\\r\\n                  {{ \\\"global.download\\\" | translate }}\\r\\n                </button>\\r\\n\\r\\n                <button\\r\\n                  *ngIf=\\\"!isReadOpenMode && documentTableDataSource.hasDataSelection\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  mat-raised-button\\r\\n                  color=\\\"warn\\\"\\r\\n                  (click)=\\\"deleteDocuments()\\\"\\r\\n                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                >\\r\\n                  {{ \\\"global.delete\\\" | translate }}\\r\\n                </button>\\r\\n\\r\\n                <button\\r\\n                  *ngIf=\\\"!isReadOpenMode && documentTableDataSource.dataSelectionCount === 1\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  mat-raised-button\\r\\n                  (click)=\\\"editDocument()\\\"\\r\\n                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                >\\r\\n                  {{ \\\"global.edit\\\" | translate }}\\r\\n                </button>\\r\\n\\r\\n                <button\\r\\n                  *ngIf=\\\"documentTableDataSource.dataSelectionCount === 1\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  mat-raised-button\\r\\n                  (click)=\\\"openDocument()\\\"\\r\\n                  [disabled]=\\\"isReadOpenMode\\\"\\r\\n                >\\r\\n                  {{ \\\"global.open\\\" | translate }}\\r\\n                </button>\\r\\n\\r\\n                <p-fileUpload\\r\\n                  #fileUploader\\r\\n                  *ngIf=\\\"!isReadOpenMode && !documentTableDataSource.hasDataSelection\\\"\\r\\n                  chooseLabel=\\\"{{ 'global.upload' | translate }}\\\"\\r\\n                  name=\\\"document[]\\\"\\r\\n                  customUpload=\\\"true\\\"\\r\\n                  mode=\\\"basic\\\"\\r\\n                  auto=\\\"true\\\"\\r\\n                  (uploadHandler)=\\\"uploadDocument($event, fileUploader)\\\"\\r\\n                ></p-fileUpload>\\r\\n              </ng-template>\\r\\n            </a-table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">{{ \\\"global.cancel\\\" | translate }}</button>\\r\\n\\r\\n    <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-cockpit-bido-document\\r\\n  *ngIf=\\\"showDocumentDialog\\\"\\r\\n  [(display)]=\\\"showDocumentDialog\\\"\\r\\n  [document]=\\\"currentDocument\\\"\\r\\n  [openMode]=\\\"documentDialogOpenMode\\\"\\r\\n  [types]=\\\"documentTypes\\\"\\r\\n  (onValidated)=\\\"onAddDocument($event)\\\"\\r\\n>\\r\\n</aw-dialog-cockpit-bido-document>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FileUpload, SelectItem } from 'primeng/primeng';\r\n\r\nimport { GenericPropertyConstants } from '../../../../shared/constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../../../shared/services/confirmation.service';\r\nimport { DateService } from '../../../../shared/services/date.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { PropertiesService } from '../../../../shared/services/properties.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { IWBFindingsCustom } from '../../../../shared/types/api-output-types/maintenance-component-cockpit/iwb-findings-custom.interface';\r\nimport { BireDocumentDTO } from '../../../../shared/types/api-types/bire-document-dto.interface';\r\nimport { DialogComponent } from '../../../../shared/types/dialog-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\nimport { SelectItemUtils } from '../../../../shared/utils/select-item-utils';\r\nimport { ColumnAlignment, TableDataSource } from '../../table/table-data-source';\r\nimport { AddEditInventoryService } from '../add-edit-inventory.service';\r\n\r\ninterface DocumentRow {\r\n  docExtension: string;\r\n  docName: string;\r\n  docPublicationDate: string;\r\n  docSize: string;\r\n  docDescription?: string;\r\n  docFile?: Uint8Array;\r\n  _obj: BireDocumentDTO;\r\n}\r\n\r\ninterface FindingsInterface extends IWBFindingsCustom {\r\n  damageDescription?: string;\r\n  location?: string;\r\n  bireDocumentDTOList?: BireDocumentDTO[];\r\n  additionalData?: unknown;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-findings',\r\n  templateUrl: './dialog-findings.component.html'\r\n})\r\nexport class DialogFindingsComponent extends DialogComponent implements OnInit {\r\n  @Input() public finding: FindingsInterface;\r\n  @Input()\r\n  public openMode: ComponentOpenMode;\r\n\r\n  @Output() public onAddFindings: EventEmitter<FindingsInterface>;\r\n\r\n  public damagesList: LabelValue<string>[];\r\n  public locationList: LabelValue<string>[];\r\n  public criticalityList: LabelValue<string>[];\r\n  public quantity: number = 1;\r\n  public selectedDamage: string | undefined;\r\n  public selectedLocation: string | undefined;\r\n  public selectedCriticity: string | undefined;\r\n  public comment: string | undefined;\r\n\r\n  public documentTableDataSource: TableDataSource<DocumentRow>;\r\n  private documentsAdded: BireDocumentDTO[];\r\n  private documentsRemoved: BireDocumentDTO[];\r\n  private documentsUpdated: BireDocumentDTO[];\r\n  public currentDocument: BireDocumentDTO | undefined;\r\n  public documentDialogOpenMode: ComponentOpenMode;\r\n  public showDocumentDialog: boolean;\r\n  private documents: BireDocumentDTO[];\r\n  public currentDocumentIndex: number;\r\n  public documentTypes: SelectItem[];\r\n\r\n  public constructor(\r\n    public sessionService: SessionService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService,\r\n    private readonly dateService: DateService,\r\n    private readonly translateService: TranslateService,\r\n    public readonly addEditInventoryService: AddEditInventoryService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogFindingsComponent');\r\n    this.onAddFindings = new EventEmitter();\r\n  }\r\n\r\n  // ****************************************************************************\r\n\r\n  public ngOnInit(): void {\r\n    this.documents = [];\r\n    this.documentsAdded = [];\r\n    this.documentsRemoved = [];\r\n    this.documentsUpdated = [];\r\n    this.damagesList = [];\r\n    this.locationList = [];\r\n\r\n    this.initDocumentTableDataSource();\r\n    this.loadDocumentTypes();\r\n\r\n    this.updateOpenMode(this.openMode);\r\n\r\n    if (!!this.addEditInventoryService.damagesList) {\r\n      this.addEditInventoryService.damagesList.forEach((res) => {\r\n        const label = !!res.damageDescription ? `${res.damageCode} - ${res.damageDescription}` : `${res.damageCode}`;\r\n        this.damagesList.push({\r\n          label,\r\n          value: res.damageCode as string\r\n        });\r\n      });\r\n    }\r\n\r\n    if (!!this.addEditInventoryService.localisationList) {\r\n      this.addEditInventoryService.localisationList.forEach((res) => {\r\n        this.locationList.push({\r\n          label: res.localisationDescription || (res.localisationCode as string),\r\n          value: res.localisationCode as string\r\n        });\r\n      });\r\n    }\r\n\r\n    this.criticalityList = [\r\n      {\r\n        label: `${this.translateService.instant(this.getTranslateKey('acceptable'))}`,\r\n        value: `${this.translateService.instant(this.getTranslateKey('acceptable'))}`\r\n      },\r\n      {\r\n        label: `${this.translateService.instant(this.getTranslateKey('repairable'))}`,\r\n        value: `${this.translateService.instant(this.getTranslateKey('repairable'))}`\r\n      },\r\n      {\r\n        label: `${this.translateService.instant(this.getTranslateKey('scrap'))}`,\r\n        value: `${this.translateService.instant(this.getTranslateKey('scrap'))}`\r\n      }\r\n    ];\r\n\r\n    if (!this.finding) {\r\n      this.finding = {\r\n        quantity: '1'\r\n      };\r\n    } else {\r\n      if (!!this.finding.bireDocumentDTOList && this.finding.bireDocumentDTOList.length > 0) {\r\n        this.finding.bireDocumentDTOList.forEach((document) => {\r\n          this.documentTableDataSource.addData([this.createDocumentRow(document)]);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadDocumentTypes(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.DOC_PARTNER_CATEGORY_MAP).subscribe((results) => {\r\n      this.documentTypes = !!results ? SelectItemUtils.fromLabelValues(results) : [];\r\n    });\r\n  }\r\n\r\n  private initDocumentTableDataSource(): void {\r\n    this.documentTableDataSource = new TableDataSource({\r\n      allowMultiSelect: true,\r\n      columns: [\r\n        {\r\n          field: 'docName',\r\n          translateKey: this.getTranslateKey('name'),\r\n          alignment: ColumnAlignment.LEFT,\r\n          width: '60%'\r\n        },\r\n        {\r\n          field: 'docPublicationDate',\r\n          translateKey: this.getTranslateKey('date'),\r\n          alignment: ColumnAlignment.LEFT,\r\n          width: '20%'\r\n        },\r\n        {\r\n          field: 'docDescription',\r\n          translateKey: this.getTranslateKey('description'),\r\n          alignment: ColumnAlignment.LEFT,\r\n          width: '20%'\r\n        }\r\n      ],\r\n      data: []\r\n    });\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Documents tab\r\n   *************************************************************************/\r\n\r\n  public deleteDocuments(): void {\r\n    const partialMessageKey =\r\n      this.documentTableDataSource.dataSelectionCount > 1\r\n        ? 'confirmDeleteSelectedDocuments'\r\n        : 'confirmDeleteSelectedDocument';\r\n\r\n    this.confirmationService.confirmDelete({\r\n      messageKey: this.getTranslateKey(partialMessageKey),\r\n      accept: () => {\r\n        this.documentTableDataSource.dataSelection.forEach((selectedDocumentRow) => {\r\n          const documentsAddedWithoutSelection = this.documentsAdded.filter(\r\n            (document) => !this.areSameDocument(document, selectedDocumentRow._obj)\r\n          );\r\n          // list of added objects contains the selection\r\n          if (this.documentsAdded.length !== documentsAddedWithoutSelection.length) {\r\n            // Remove selection from added objects\r\n            this.documentsAdded = documentsAddedWithoutSelection;\r\n          } else {\r\n            const documentsUpdatedWithoutSelection = this.documentsUpdated.filter(\r\n              (document) => !this.areSameDocument(document, selectedDocumentRow._obj)\r\n            );\r\n            // list of updated objects contains the selection\r\n            if (this.documentsUpdated.length !== documentsUpdatedWithoutSelection.length) {\r\n              // Remove selection from added objects\r\n              this.documentsUpdated = documentsUpdatedWithoutSelection;\r\n            }\r\n\r\n            this.documentsRemoved = [...this.documentsRemoved, selectedDocumentRow._obj];\r\n          }\r\n        });\r\n\r\n        this.documents = this.documents.filter((document) => {\r\n          return !this.documentTableDataSource.dataSelection.some((selectedDocumentRow) =>\r\n            this.areSameDocument(document, selectedDocumentRow._obj)\r\n          );\r\n        });\r\n\r\n        this.documentTableDataSource.setData(\r\n          this.documentTableDataSource.dataSrc.filter((documentRow) => {\r\n            return !this.documentTableDataSource.dataSelection.some((selectedDocumentRow) => {\r\n              return this.areSameDocument(documentRow._obj, selectedDocumentRow._obj);\r\n            });\r\n          })\r\n        );\r\n        this.documentTableDataSource.dataSelection = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  public editDocument(): void {\r\n    if (this.documentTableDataSource.dataSelectionCount === 1) {\r\n      this.currentDocumentIndex = this.documents.findIndex((document) =>\r\n        this.areSameDocument(document, this.documentTableDataSource.dataSelection[0]._obj)\r\n      );\r\n\r\n      this.currentDocument = { ...this.documentTableDataSource.dataSelection[0]._obj };\r\n      this.documentDialogOpenMode = ComponentOpenMode.Write;\r\n      this.showDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public openDocument(): void {\r\n    if (this.documentTableDataSource.dataSelection.length === 1) {\r\n      this.currentDocument = this.documentTableDataSource.dataSelection[0]._obj;\r\n      this.currentDocumentIndex = -1;\r\n      this.documentDialogOpenMode = ComponentOpenMode.Read;\r\n      this.showDocumentDialog = true;\r\n    }\r\n  }\r\n\r\n  public downloadFiles(): void {\r\n    this.documentTableDataSource.dataSelection.forEach((documentRow) => {\r\n      FileUtils.downloadFile(documentRow._obj.docFile, documentRow._obj.docName);\r\n    });\r\n  }\r\n\r\n  public uploadDocument(event: { files: File[] }, fileUploader: FileUpload): void {\r\n    if (!!event.files) {\r\n      const file: File = event.files[0];\r\n\r\n      // Check if the file already exists\r\n      const fileExists = this.documents.some((document) => document.docName === file.name);\r\n      if (fileExists) {\r\n        this.messageService.showWarningMessage('global.warningOnFileExists');\r\n      } else {\r\n        FileUtils.getFileContentAsBase64(file, (fileContent) => {\r\n          if (!!fileContent) {\r\n            const document: BireDocumentDTO = {\r\n              docFile: fileContent,\r\n              docName: file.name,\r\n              docPublicationDate: new Date()\r\n            };\r\n\r\n            this.documents = [...this.documents, document];\r\n            this.documentsAdded = [...this.documentsAdded, document];\r\n            this.documentTableDataSource.addData([this.createDocumentRow(document)]);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (!!fileUploader) {\r\n        fileUploader.clear();\r\n      }\r\n    }\r\n  }\r\n\r\n  private createDocumentRow(document: BireDocumentDTO): DocumentRow {\r\n    const documentRow: DocumentRow = {\r\n      docExtension: this.formatDocExtension(document),\r\n      docName: document.docName as string,\r\n      docPublicationDate: this.dateService.dateToString(document.docPublicationDate),\r\n      docSize: this.formatDocSize(document),\r\n      docDescription: document.docDescription,\r\n      docFile: document.docFile,\r\n      _obj: document\r\n    };\r\n\r\n    return documentRow;\r\n  }\r\n\r\n  private formatDocExtension(document: BireDocumentDTO): string {\r\n    return FileUtils.getExtension(document.docName).toUpperCase();\r\n  }\r\n\r\n  private formatDocSize(document: BireDocumentDTO): string {\r\n    return !!document.docFile ? FileUtils.getFormattedSize(document.docFile.length) : '';\r\n  }\r\n\r\n  private areSameDocument(obj1: BireDocumentDTO | undefined, obj2: BireDocumentDTO | undefined): boolean {\r\n    if (!obj1 || !obj2) {\r\n      return false;\r\n    } else {\r\n      return !!obj1.docName && !!obj2.docName && obj1.docName === obj2.docName;\r\n    }\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Document Dialog\r\n   *************************************************************************/\r\n\r\n  public onAddDocument(document: BireDocumentDTO): void {\r\n    if (!!document) {\r\n      if (this.currentDocumentIndex !== -1) {\r\n        this.documents[this.currentDocumentIndex] = document;\r\n        this.documentTableDataSource[this.currentDocumentIndex] = this.createDocumentRow(document);\r\n\r\n        const updatedDocumentIndex = this.documentsUpdated.findIndex((documentUpdated) =>\r\n          this.areSameDocument(documentUpdated, document)\r\n        );\r\n        if (updatedDocumentIndex !== -1) {\r\n          this.documentsUpdated[updatedDocumentIndex] = document;\r\n        } else {\r\n          this.documentsUpdated = [...this.documentsUpdated, document];\r\n        }\r\n      } else {\r\n        const isAdded = this.documentsAdded.some((documentAdded) => this.areSameDocument(documentAdded, document));\r\n        if (isAdded) {\r\n          this.messageService.showWarningMessage('global.warningOnDocumentExists');\r\n        } else {\r\n          this.documents = [...this.documents, document];\r\n          this.documentsAdded = [...this.documentsAdded, document];\r\n          this.documentTableDataSource.addData([this.createDocumentRow(document)]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.documentTableDataSource.dataSelection = [];\r\n  }\r\n\r\n  public validate() {\r\n    if (!this.finding.damageCode && !this.finding.findingComment) {\r\n      this.messageService.showErrorMessage(this.getTranslateKey('commentMandatory'));\r\n    } else {\r\n      this.finding.bireDocumentDTOList = this.documentTableDataSource.data as BireDocumentDTO[];\r\n      this.onAddFindings.emit(this.finding);\r\n      this.closeDialog();\r\n    }\r\n  }\r\n\r\n  public onChangeDamage() {\r\n    const dto = this.damagesList.filter((res) => res.value === this.finding.damageCode);\r\n\r\n    this.finding.damageDescription = !!dto && dto.length > 0 ? dto[0].label : undefined;\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".docManagement\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docName\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"document.docName\\\" [disabled]=\\\"isReadOpenMode\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docPublicationDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"document.docPublicationDate\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docEndOfValidityDate\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-calendar\\r\\n          showButtonBar=\\\"true\\\"\\r\\n          [monthNavigator]=\\\"true\\\"\\r\\n          [yearNavigator]=\\\"true\\\"\\r\\n          [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n          class=\\\"aw-calendar\\\"\\r\\n          [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n          [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n          [(ngModel)]=\\\"document.docEndOfValidityDate\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></p-calendar>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docType\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <p-dropdown\\r\\n          class=\\\"aw-dropdown fixed-width\\\"\\r\\n          [options]=\\\"types\\\"\\r\\n          [(ngModel)]=\\\"document.docCategory\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n          [showClear]=\\\"true\\\"\\r\\n          placeholder=\\\"&nbsp;\\\"\\r\\n          appendTo=\\\"body\\\"\\r\\n        ></p-dropdown>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"form-label\\\">{{ getComponentName() + \\\".docDescription\\\" | translate }}</label>\\r\\n\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <textarea\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          pInputTextarea\\r\\n          [rows]=\\\"3\\\"\\r\\n          [(ngModel)]=\\\"document.docDescription\\\"\\r\\n          [disabled]=\\\"isReadOpenMode\\\"\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button *ngIf=\\\"!isReadOpenMode\\\" type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"validate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL2FkZC1lZGl0LWludmVudG9yeS9kb2N1bWVudC11cGxvYWQtZGlhbG9nL2RvY3VtZW50LXVwbG9hZC1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { BidoDocumentationDTO } from '../../../../shared/types/api-types/bido-documentation-dto.interface';\r\nimport { DialogComponent } from '../../../../shared/types/dialog-component';\r\n\r\n@Component({\r\n  selector: 'aw-document-upload-dialog',\r\n  templateUrl: './document-upload-dialog.component.html',\r\n  styleUrls: ['./document-upload-dialog.component.scss']\r\n})\r\nexport class DocumentUploadDialogComponent extends DialogComponent implements OnInit {\r\n  @Input() public document: BidoDocumentationDTO;\r\n  @Input() public openMode: ComponentOpenMode;\r\n  @Input() public types: SelectItem[];\r\n  @Output() public onValidated: EventEmitter<BidoDocumentationDTO>;\r\n\r\n  public constructor(public readonly sessionService: SessionService) {\r\n    super(ComponentOpenMode.Read, 'DocumentUploadDialogComponent');\r\n    this.displayChange = new EventEmitter<boolean>();\r\n    this.onValidated = new EventEmitter<BidoDocumentationDTO>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.updateOpenMode(this.openMode);\r\n    if (!this.document) {\r\n      this.document = {};\r\n    }\r\n  }\r\n\r\n  public validate(): void {\r\n    this.onValidated.emit(this.document);\r\n    this.closeDialog();\r\n  }\r\n}\r\n","export class ControlConfigConstants {\r\n  public static readonly ICON_GREEN: string = '9';\r\n  public static readonly ICON_RED: string = '10';\r\n  public static readonly ICON_YELLOW: string = '11';\r\n  public static readonly ICON_NONE: string = '12';\r\n\r\n  public static readonly CUSTOMIZATION_STATUS_NONE : string = '0';\r\n  public static readonly CUSTOMIZATION_STATUS_OK_ASSUMED : string = '10';\r\n  public static readonly CUSTOMIZATION_STATUS_OK_CUSTOMIZED : string = '11';\r\n  public static readonly CUSTOMIZATION_STATUS_WARNING_NO_ALTERNATIVE : string = '21';\r\n\r\n  public static readonly ICON_GREEN_LIGHT_CODE: string = '0';\r\n  public static readonly ICON_RED_LIGHT_CODE: string = '1';\r\n  public static readonly ICON_YELLOW_LIGHT_CODE: string = '2';\r\n  public static readonly ICON_NONE_LIGHT_CODE: string = '3';\r\n  public static readonly ICON_EQUIPMENT_CODE: string = '5';\r\n  public static readonly ICON_GREEN_ROUND_CODE: string = '6';\r\n  public static readonly ICON_ITEM_CODE: string = '4';\r\n  public static readonly ICON_YELLOW_TRIANGLE_CODE: string = '7';\r\n  public static readonly ICON_RED_SQUARE_CODE: string = '8';\r\n  public static readonly ICON_GREEN_LED_CODE: string = '9';\r\n  public static readonly ICON_YELLOW_LED_CODE: string = '11';\r\n  public static readonly ICON_RED_LED_CODE: string = '10';\r\n  public static readonly ICON_NONE_LED_CODE: string = '12';\r\n\r\n  public static readonly OME_CHECK_EQUIPMENT_MISSING: string = 'MISSING';\r\n  public static readonly OME_CHECK_EQUIPMENT_TO_REMOVE: string = 'REMOVE';\r\n  public static readonly OME_CHECK_EQUIPMENT_TO_REPLACE: string = 'REPLACE';\r\n\r\n  public static readonly OME_CHECK_CORRECTIVE_ACTION_SUGGESTED: string = 'SUGGESTED';\r\n  public static readonly OME_CHECK_CORRECTIVE_ACTION_VALIDATED: string = 'VALIDATED';\r\n  public static readonly OME_CHECK_CORRECTIVE_ACTION_ON_GOING: string = 'ON_GOING';\r\n}\r\n","import * as FileSaver from 'file-saver';\r\n\r\nimport { NumberUtils } from './number-utils';\r\n\r\nexport class FileUtils {\r\n  public static readonly KIBIOCTET: number = 1024;\r\n  public static readonly KILOOCTET: number = 1000;\r\n\r\n  public static downloadFile(file: Uint8Array | undefined, fileName: string | undefined): void {\r\n    if (!!file && !!fileName) {\r\n      const byteCharacters = atob(file.toString());\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n\r\n      FileSaver.saveAs(new Blob([new Uint8Array(byteNumbers)]), fileName);\r\n    }\r\n  }\r\n\r\n  public static getExtension(fileName: string | undefined): string {\r\n    return !!fileName && fileName.includes('.') ? fileName.substring(fileName.lastIndexOf('.') + 1) : '';\r\n  }\r\n\r\n  public static getFileContentAsBase64(file: File | undefined, callback: (fileContent: Uint8Array) => void): void {\r\n    if (!!file) {\r\n      const reader: FileReader = new FileReader();\r\n      reader.onloadend = () => {\r\n        let fileContent: any = reader.result; // tslint:disable-line:no-any\r\n        fileContent = fileContent.substring((fileContent.indexOf(',') as number) + 1); // Remove data:*/*;base64,\r\n        callback(fileContent);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  public static getFormattedSize(size: number | undefined): string {\r\n    if (!!size) {\r\n      return size / FileUtils.KILOOCTET < FileUtils.KILOOCTET\r\n        ? `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET)} Ko`\r\n        : `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET / FileUtils.KILOOCTET)} Mo`;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n","import { StringUtils } from './string-utils';\r\n\r\nexport class ImageUtils {\r\n  private static readonly JPG_BASE64_ID = 'jpg';\r\n  private static readonly PNG_BASE64_ID = 'png';\r\n\r\n  private static readonly JPG_EXTENSION_LIST = ['jpeg', 'jpg'];\r\n  private static readonly PNG_EXTENSION_LIST = ['png'];\r\n\r\n  public static getBase64Prefix(extension: string | undefined): string {\r\n    let formattedExtension = '';\r\n    if (this.isJpg(extension)) {\r\n      formattedExtension = ImageUtils.JPG_BASE64_ID;\r\n    } else if (this.isPng(extension)) {\r\n      formattedExtension = ImageUtils.PNG_BASE64_ID;\r\n    }\r\n\r\n    return StringUtils.isEmpty(formattedExtension) ? '' : `data:image/${formattedExtension};base64,`;\r\n  }\r\n\r\n  public static isJpg(extension: string | undefined): boolean {\r\n    return this.isFormatMatching(extension, ImageUtils.JPG_EXTENSION_LIST);\r\n  }\r\n\r\n  public static isPng(extension: string | undefined): boolean {\r\n    return this.isFormatMatching(extension, ImageUtils.PNG_EXTENSION_LIST);\r\n  }\r\n\r\n  private static isFormatMatching(extension: string | undefined, validExtensionList: string[]): boolean {\r\n    if (StringUtils.isNullOrEmpty(extension)) {\r\n      return false;\r\n    } else {\r\n      const extensionToCheck = (extension as string).toLowerCase();\r\n\r\n      return validExtensionList.some((elt) => elt === extensionToCheck);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}