{"version":3,"sources":["webpack:///./node_modules/primeng/selectbutton.js","webpack:///./src/app/shared/components/dialog-search-pn-alternatives/dialog-search-pn-alternatives.component.html","webpack:///./src/app/shared/components/dialog-search-pn-alternatives/dialog-search-pn-alternatives.component.ts","webpack:///./src/app/shared/components/dialog-search-pn-alternatives/dialog-search-pn-alternatives.module.ts","webpack:///./src/app/shared/components/dialog-search-pn-alternatives/dialog-search-pn-alternatives.service.ts","webpack:///./src/app/shared/components/dialog-search-pn/dialog-search-pn.component.html","webpack:///./src/app/shared/components/dialog-search-pn/dialog-search-pn.component.ts","webpack:///./src/app/shared/components/dialog-search-pn/dialog-search-pn.module.ts","webpack:///./src/app/shared/components/dialog-search-pn/dialog-search-pn.service.ts"],"names":[],"mappings":"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","file":"default~engineering-management-engineering-management-module~fleet-management-asset-asset-module~fle~924f9586.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/selectbutton/selectbutton\"));","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <a-table [dataSource]=\\\"alternativesTableDataSource\\\"> </a-table>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      {{ \\\"cancel\\\" | translate }}\\r\\n    </button>\\r\\n\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"onSelect()\\\"\\r\\n      [disabled]=\\\"!alternativesTableDataSource.hasDataSelection\\\"\\r\\n    >\\r\\n      {{ \\\"validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { DialogComponent } from '../../../shared/types/dialog-component';\r\nimport { ComponentOpenMode } from '../../enums/component-open-mode.enum';\r\nimport { FindAlternativePnsByPnCodeOutput } from '../../types/api-output-types/product-structure-management/find-alternative-pns-by-pn-code-output.interface';\r\nimport { BirePnDTO } from '../../types/api-types/bire-pn-dto.interface';\r\nimport { StringUtils } from '../../utils/string-utils';\r\nimport { TableDataSource } from '../table/table-data-source';\r\n\r\nimport { DialogSearchPnAlternativesService } from './dialog-search-pn-alternatives.service';\r\n\r\ninterface AlternativeRow {\r\n  designation: string;\r\n  interchangeability: string;\r\n  manufacturerOtanCode: string;\r\n  otanPnReference: string;\r\n  pnCode: string;\r\n  _obj: FindAlternativePnsByPnCodeOutput;\r\n}\r\n\r\n@Component({\r\n  selector: 'aw-dialog-search-pn-alternatives[pn]',\r\n  templateUrl: 'dialog-search-pn-alternatives.component.html'\r\n})\r\nexport class DialogSearchPnAlternativesComponent extends DialogComponent implements OnInit {\r\n  @Input()\r\n  public pn: BirePnDTO;\r\n\r\n  @Output()\r\n  public readonly onSelected = new EventEmitter<BirePnDTO>();\r\n\r\n  public alternativesTableDataSource: TableDataSource<AlternativeRow>;\r\n\r\n  public constructor(private readonly dialogSearchPnAlternativesService: DialogSearchPnAlternativesService) {\r\n    super(ComponentOpenMode.Write, 'DialogSearchPnAlternativesComponent');\r\n\r\n    this.onSelected = new EventEmitter<BirePnDTO>();\r\n\r\n    this.init();\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public ngOnInit(): void {\r\n    this.load();\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  public onSelect(): void {\r\n    this.onSelected.emit(this.alternativesTableDataSource.dataSelection[0]._obj.birePn);\r\n  }\r\n\r\n  // ////////////////////////////////////////////////////////////////////////////\r\n\r\n  private init(): void {\r\n    this.initAlternativesTableDataSource();\r\n  }\r\n\r\n  private initAlternativesTableDataSource(): void {\r\n    this.alternativesTableDataSource = new TableDataSource({\r\n      allowMultiSelect: false,\r\n      columns: [\r\n        { field: 'pnCode', translateKey: this.getTranslateKey('pnCode'), width: '15%' },\r\n        { field: 'designation', translateKey: this.getTranslateKey('designation'), width: '40%' },\r\n        { field: 'manufacturerOtanCode', translateKey: this.getTranslateKey('manufacturerOtanCode'), width: '15%' },\r\n        { field: 'otanPnReference', translateKey: this.getTranslateKey('otanPnReference'), width: '15%' },\r\n        { field: 'interchangeability', translateKey: this.getTranslateKey('interchangeability'), width: '15%' }\r\n      ]\r\n    });\r\n  }\r\n\r\n  private load(): void {\r\n    this.alternativesTableDataSource.setData([]);\r\n    this.alternativesTableDataSource.isLoading = true;\r\n\r\n    this.dialogSearchPnAlternativesService\r\n      .findAlternatives(this.pn.pnCode as string)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.alternativesTableDataSource.isLoading = false;\r\n        })\r\n      )\r\n      .subscribe((results) => {\r\n        const alternatives = results\r\n          .reduce((acc: FindAlternativePnsByPnCodeOutput[], current) => {\r\n            const isPresent = acc.find((item) => item.birePn.pnCode === current.birePn.pnCode);\r\n            if (!isPresent) {\r\n              return acc.concat([current]);\r\n            } else {\r\n              return acc;\r\n            }\r\n          }, [])\r\n          .map((result) => {\r\n            return {\r\n              designation: StringUtils.orEmpty(result.birePn.articleDesignation),\r\n              interchangeability: StringUtils.orEmpty(result.interchangeability),\r\n              manufacturerOtanCode: StringUtils.orEmpty(result.birePn.manufacturerOtanCode),\r\n              otanPnReference: StringUtils.orEmpty(result.birePn.otanPnReference),\r\n              pnCode: StringUtils.orEmpty(result.birePn.pnCode),\r\n              _obj: result\r\n            };\r\n          });\r\n\r\n        this.alternativesTableDataSource.setData(alternatives);\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\nimport { TableModule } from '../table/table.module';\r\n\r\nimport { DialogSearchPnAlternativesComponent } from './dialog-search-pn-alternatives.component';\r\nimport { DialogSearchPnAlternativesService } from './dialog-search-pn-alternatives.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [TableModule];\r\n\r\nconst INTERNAL_MODULES = [ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogSearchPnAlternativesComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [DialogSearchPnAlternativesService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class DialogSearchPnAlternativesModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProductStructureManagementApi } from '../../api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../http/abstract-aw-http';\r\nimport { AppConfigService } from '../../services/app-config.service';\r\nimport { FindAlternativePnsByPnCodeOutput } from '../../types/api-output-types/product-structure-management/find-alternative-pns-by-pn-code-output.interface';\r\n\r\n@Injectable()\r\nexport class DialogSearchPnAlternativesService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public findAlternatives(pnCode: string): Observable<FindAlternativePnsByPnCodeOutput[]> {\r\n    return super.post<string, FindAlternativePnsByPnCodeOutput[]>(\r\n      this.productStructureManagementApi.findAlternativePnsByPnCode,\r\n      pnCode\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<a-modal class=\\\"aw-modal\\\" [(visible)]=\\\"display\\\" [width]=\\\"85\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ getComponentName() + \\\".title\\\" | translate }}</div>\\r\\n\\r\\n    <i class=\\\"material-icons aw-icon aw-icon-with-border\\\" (click)=\\\"onCancel()\\\">close</i>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"search-dialog-container\\\">\\r\\n      <div class=\\\"section search-criteria-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">{{ \\\"global.search\\\" | translate }}</h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <div class=\\\"column\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group\\\" *ngIf=\\\"showFamilyVariantSelection\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".familyVariant\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"propertyVariant\\\"\\r\\n                    [(ngModel)]=\\\"familyVariant\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <ng-container\\r\\n                  *ngIf=\\\"!showPartTypeSelection && !showFamilyVariantSelection; then designation; else pnCode\\\"\\r\\n                ></ng-container>\\r\\n\\r\\n                <ng-template #pnCode>\\r\\n                  <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".pnCode\\\" | translate }} </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.pnCode\\\" />\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\" *ngIf=\\\"showPartTypeSelection\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".type\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    [options]=\\\"pnTypes\\\"\\r\\n                    [(ngModel)]=\\\"pnType\\\"\\r\\n                    [showClear]=\\\"false\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <ng-container\\r\\n                  *ngIf=\\\"!showPartTypeSelection && !showFamilyVariantSelection; then designation; else otanPnReference\\\"\\r\\n                ></ng-container>\\r\\n\\r\\n                <ng-template #otanPnReference>\\r\\n                  <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".otanPnReference\\\" | translate }} </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.otanPnReference\\\" />\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <ng-container\\r\\n                  *ngIf=\\\"!showPartTypeSelection && !showFamilyVariantSelection; then pnCode; else designation\\\"\\r\\n                ></ng-container>\\r\\n\\r\\n                <ng-template #designation>\\r\\n                  <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".designation\\\" | translate }} </label>\\r\\n\\r\\n                  <div class=\\\"form-control\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"aw-input\\\" [(ngModel)]=\\\"searchObject.articleDesignation\\\" />\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"withSparePartClass\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"form-label\\\"> {{ getComponentName() + \\\".sparePartClass\\\" | translate }} </label>\\r\\n\\r\\n                <div class=\\\"form-control\\\">\\r\\n                  <p-dropdown\\r\\n                    class=\\\"aw-dropdown fixed-width\\\"\\r\\n                    placeholder=\\\"&nbsp;\\\"\\r\\n                    [showClear]=\\\"true\\\"\\r\\n                    [(ngModel)]=\\\"searchObject.sparePartClassCode\\\"\\r\\n                    [options]=\\\"sparePartClasses\\\"\\r\\n                    appendTo=\\\"body\\\"\\r\\n                    [disabled]=\\\"isSparePartClassPredefined\\\"\\r\\n                  ></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group flex--3\\\"></div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row search-criteria-footer\\\">\\r\\n              <div class=\\\"search-actions\\\">\\r\\n                <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"search()\\\">\\r\\n                  <span>{{ \\\"global.toSearch\\\" | translate }}</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"section results-section\\\">\\r\\n        <h4 class=\\\"section-title\\\">\\r\\n          {{ \\\"global.results\\\" | translate }} ({{ resultsTable.list ? resultsTable.list.length : 0 }})\\r\\n        </h4>\\r\\n\\r\\n        <div class=\\\"section-content\\\">\\r\\n          <p-table\\r\\n            #ptable\\r\\n            class=\\\"aw-table2\\\"\\r\\n            [columns]=\\\"resultsTableCols\\\"\\r\\n            [value]=\\\"resultsTable.list\\\"\\r\\n            selectionMode=\\\"single\\\"\\r\\n            [(selection)]=\\\"selectedPn\\\"\\r\\n            [scrollable]=\\\"true\\\"\\r\\n          >\\r\\n            <ng-template pTemplate=\\\"emptymessage\\\">\\r\\n              <span *ngIf=\\\"!isLoading\\\"> &nbsp;</span>\\r\\n\\r\\n              <div *ngIf=\\\"isLoading\\\" class=\\\"aw-table-loading-indicator\\\">\\r\\n                <div class=\\\"loading-message\\\">{{ \\\"table.loadingData\\\" | translate }}</div>\\r\\n                <div class=\\\"lds-hourglass\\\"></div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"caption\\\">\\r\\n              <div class=\\\"aw-table-header\\\">\\r\\n                <div class=\\\"aw-table-global-filter\\\">\\r\\n                  <label class=\\\"aw-table-global-filter-label\\\">\\r\\n                    <i class=\\\"fa fa-fw fa-search\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </label>\\r\\n\\r\\n                  <input\\r\\n                    #ptableGlobalFilter\\r\\n                    class=\\\"aw-table-global-filter-input\\\"\\r\\n                    type=\\\"text\\\"\\r\\n                    placeholder=\\\"{{ 'table.globalFilterText' | translate }}\\\"\\r\\n                    (input)=\\\"ptable.filterGlobal($event.target.value, 'contains')\\\"\\r\\n                  />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"aw-table-actions\\\">\\r\\n                  <button type=\\\"button\\\" mat-raised-button *ngIf=\\\"selectedPn\\\" (click)=\\\"showPnAlternativesDialog()\\\">\\r\\n                    {{ getComponentName() + \\\".showAlternatives\\\" | translate }}\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"colgroup\\\" let-columns>\\r\\n              <colgroup>\\r\\n                <col *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ width: col.width }\\\" />\\r\\n              </colgroup>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n              <tr>\\r\\n                <th pResizableColumn *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\">\\r\\n                  {{ getComponentName() + \\\".\\\" + col.field | translate }}\\r\\n                </th>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\" let-rowIndex=\\\"rowIndex\\\">\\r\\n              <tr [pSelectableRow]=\\\"rowData\\\" [pSelectableRowIndex]=\\\"rowIndex\\\">\\r\\n                <td *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"{ 'text-align': col.alignment }\\\" [ngSwitch]=\\\"col.field\\\">\\r\\n                  <span *ngSwitchCase=\\\"'statusState'\\\"> {{ statusDictionary[rowData[col.field]] }}</span>\\r\\n                  <span *ngSwitchDefault>{{ rowData[col.field] }}</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </ng-template>\\r\\n          </p-table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"onCancel()\\\">\\r\\n      <span>{{ \\\"global.cancel\\\" | translate }}</span>\\r\\n    </button>\\r\\n\\r\\n    <button [disabled]=\\\"!selectedPn\\\" color=\\\"primary\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"onValidate()\\\">\\r\\n      {{ \\\"global.validate\\\" | translate }}\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\\r\\n<aw-dialog-search-pn-alternatives\\r\\n  *ngIf=\\\"pnAlternativesDialogVisible\\\"\\r\\n  [(display)]=\\\"pnAlternativesDialogVisible\\\"\\r\\n  [pn]=\\\"selectedPn\\\"\\r\\n  (onSelected)=\\\"onSelectPnAlternative($event)\\\"\\r\\n></aw-dialog-search-pn-alternatives>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { DialogComponent } from '../../../shared/types/dialog-component';\r\nimport { TableColumn } from '../../../shared/types/table-column.interface';\r\nimport { AWPropertiesConstants } from '../../constants/aw-properties-constants';\r\nimport { BidoFunctionTypeConstants } from '../../constants/bido-function-type-constants';\r\nimport { GenericPropertyConstants } from '../../constants/generic-property-constants';\r\nimport { ComponentOpenMode } from '../../enums/component-open-mode.enum';\r\nimport { ConfirmationService } from '../../services/confirmation.service';\r\nimport { MessageService } from '../../services/message.service';\r\nimport { PropertiesService } from '../../services/properties.service';\r\nimport { FindFamilyVariantInput } from '../../types/api-input-types/product-structure-management/find-family-variant-input.interface';\r\nimport { BirePnDTO } from '../../types/api-types/bire-pn-dto.interface';\r\nimport { FamilyVariantDTO } from '../../types/api-types/family-variant-dto.interface';\r\nimport { LabelValue } from '../../types/label-value.interface';\r\nimport { ListUtils } from '../../utils/list-utils';\r\nimport { ObjectUtils } from '../../utils/object-utils';\r\n\r\nimport { DialogSearchPnService } from './dialog-search-pn.service';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-search-pn',\r\n  templateUrl: 'dialog-search-pn.component.html'\r\n})\r\nexport class DialogSearchPnComponent extends DialogComponent implements OnInit {\r\n  public selectedPn: BirePnDTO | undefined;\r\n  public resultsTable: SearchResultsDTO<BirePnDTO>;\r\n  public resultsTableCols: TableColumn[];\r\n  public searchObject: BirePnDTO;\r\n  public familyVariantMap: Map<LabelValue<string>, FamilyVariantDTO>;\r\n  public pnTypes: LabelValue<string>[];\r\n  public propertyStatus: LabelValue<string>[];\r\n  public statusDictionary: { [value: string]: string };\r\n  public statusState: string;\r\n  public propertyVariant: LabelValue<string>[];\r\n  public isLoading: boolean;\r\n  public sparePartClasses: LabelValue<string>[];\r\n\r\n  public pnAlternativesDialogVisible: boolean;\r\n\r\n  @Input()\r\n  public familyVariant: string | undefined;\r\n\r\n  @Input()\r\n  public pnType: string;\r\n\r\n  @Input()\r\n  public toolSearch: boolean;\r\n\r\n  @Input()\r\n  public showPartTypeSelection: boolean;\r\n\r\n  @Input()\r\n  public showFamilyVariantSelection: boolean;\r\n\r\n  @Input()\r\n  public checkContainer?: boolean;\r\n\r\n  @Output()\r\n  public onSelected = new EventEmitter<BirePnDTO>();\r\n\r\n  @Input()\r\n  public withAllTypes?: boolean;\r\n\r\n  @Input()\r\n  public withSparePartClass?: boolean;\r\n\r\n  @Input()\r\n  public isSparePartClassPredefined?: boolean;\r\n\r\n  public constructor(\r\n    public dialogSearchPnService: DialogSearchPnService,\r\n    private readonly confirmationService: ConfirmationService,\r\n    private readonly messageService: MessageService,\r\n    private readonly propertiesService: PropertiesService\r\n  ) {\r\n    super(ComponentOpenMode.Write, 'DialogSearchPnComponent');\r\n\r\n    this.resultsTable = { list: [], moreResults: false };\r\n    this.searchObject = {};\r\n    this.selectedPn = undefined;\r\n    this.showFamilyVariantSelection = true;\r\n    this.sparePartClasses = [];\r\n\r\n    this.familyVariantMap = new Map<LabelValue<string>, FamilyVariantDTO>();\r\n    this.propertyVariant = [];\r\n    this.isLoading = false;\r\n\r\n    this.resultsTableCols = [\r\n      { field: 'pnCode', width: '20%', alignment: 'left' },\r\n      { field: 'articleDesignation', width: '32%', alignment: 'left' },\r\n      { field: 'manufacturerOtanCode', width: '18%', alignment: 'left' },\r\n      { field: 'otanPnReference', width: '15%', alignment: 'left' },\r\n      { field: 'statusState', width: '15%', alignment: 'left' }\r\n    ];\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (!this.pnType && (!ObjectUtils.isDefined(this.withAllTypes) || !this.withAllTypes)) {\r\n      this.pnType = AWPropertiesConstants.PN_TYPE_PART_KEY;\r\n    }\r\n\r\n    this.loadDropDownLists();\r\n\r\n    if (this.withSparePartClass) {\r\n      this.loadSparePartClasses();\r\n    }\r\n  }\r\n\r\n  private loadDropDownLists(): void {\r\n    const familyVariantInput: FindFamilyVariantInput = {\r\n      useCase: BidoFunctionTypeConstants.UC_MCH_BOM,\r\n      module: BidoFunctionTypeConstants.MODULE_FAMILY\r\n    };\r\n    this.statusDictionary = {};\r\n    this.dialogSearchPnService.getFamilyVariant(familyVariantInput).subscribe(\r\n      (results) => {\r\n        const list = new Array<LabelValue<string>>();\r\n        results.forEach((variantElement) => {\r\n          if (!!variantElement.labelValueDTO) {\r\n            list.push(variantElement.labelValueDTO);\r\n            this.familyVariantMap.set(variantElement.labelValueDTO, variantElement);\r\n          }\r\n        });\r\n        this.propertyVariant = list;\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFamilyVariant'));\r\n      }\r\n    );\r\n\r\n    if (this.withAllTypes) {\r\n      this.propertiesService.getValue(GenericPropertyConstants.PN_TYPE_MAP).subscribe((results) => {\r\n        this.pnTypes = results.sort((x, y) => x.label.localeCompare(y.label));\r\n      });\r\n    } else {\r\n      this.propertiesService.getValue(GenericPropertyConstants.ENGINEERING_PN_TYPES_MAP).subscribe((results) => {\r\n        this.pnTypes = results.sort((x, y) => x.label.localeCompare(y.label));\r\n      });\r\n    }\r\n\r\n    this.propertiesService.getValue(GenericPropertyConstants.FUNC_OBJECT_STATUS_MAP).subscribe(\r\n      (results) => {\r\n        this.propertyStatus = results;\r\n        this.fillStatusDictionary(results);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFamilyVariant'));\r\n      }\r\n    );\r\n\r\n    this.propertiesService.getValue(GenericPropertyConstants.OBJECT_STATUS_MAP).subscribe(\r\n      (results) => {\r\n        this.fillStatusDictionary(results);\r\n      },\r\n      () => {\r\n        this.messageService.showErrorMessage(this.getTranslateKey('errorOnGetFamilyVariant'));\r\n      }\r\n    );\r\n  }\r\n\r\n  public search(): void {\r\n    this.resultsTable.list = [];\r\n    this.resultsTable.moreResults = false;\r\n    this.selectedPn = undefined;\r\n\r\n    let familyCode;\r\n    let structureType;\r\n    let variantCode;\r\n    this.isLoading = true;\r\n    if (this.familyVariant) {\r\n      let familyVariantDTO: FamilyVariantDTO = {};\r\n      this.familyVariantMap.forEach((variantElement) => {\r\n        if (!!variantElement.labelValueDTO && variantElement.labelValueDTO.value === this.familyVariant) {\r\n          familyVariantDTO = variantElement;\r\n        }\r\n      });\r\n      familyCode = familyVariantDTO.familyCode;\r\n      structureType = familyVariantDTO.structureType;\r\n      variantCode = familyVariantDTO.variantCode;\r\n    }\r\n\r\n    this.searchObject.pnType = this.pnType;\r\n\r\n    this.dialogSearchPnService\r\n      .findBirePnsBySearchCriteria(this.searchObject, familyCode, structureType, variantCode, this.toolSearch)\r\n      .pipe(\r\n        finalize(() => {\r\n          this.isLoading = false;\r\n        })\r\n      )\r\n      .subscribe((results) => {\r\n        this.resultsTable = results;\r\n      });\r\n  }\r\n\r\n  private fillStatusDictionary(references: LabelValue<string>[]) {\r\n    references.forEach((lv) => (this.statusDictionary[lv.value] = lv.label));\r\n  }\r\n\r\n  public onValidate(): void {\r\n    if (this.selectedPn) {\r\n      if (this.checkContainer && this.selectedPn.pnCode) {\r\n        this.dialogSearchPnService.isPartWithContainer(this.selectedPn.pnCode).subscribe({\r\n          next: (isPartWithContainer) => {\r\n            if (isPartWithContainer) {\r\n              this.confirmationService.confirm({\r\n                messageKey: this.getTranslateKey('pnWithContainer'),\r\n                contextKeys: [this.getTranslateKey('confirmContinue')],\r\n                accept: () => {\r\n                  this.validate();\r\n                }\r\n              });\r\n            } else {\r\n              this.validate();\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        this.validate();\r\n      }\r\n    }\r\n  }\r\n\r\n  private validate(): void {\r\n    this.onSelected.emit(this.selectedPn);\r\n\r\n    this.closeDialog();\r\n  }\r\n\r\n  // Clean the selectedObject object if the row is unselect\r\n  public onRowUnselect(): void {\r\n    this.selectedPn = undefined;\r\n  }\r\n\r\n  public onCancel(): void {\r\n    this.resultsTable = {\r\n      list: [],\r\n      moreResults: false\r\n    };\r\n\r\n    this.closeDialog();\r\n  }\r\n\r\n  public showPnAlternativesDialog(): void {\r\n    this.pnAlternativesDialogVisible = true;\r\n  }\r\n\r\n  public onSelectPnAlternative(event: BirePnDTO): void {\r\n    this.onSelected.emit(event);\r\n\r\n    this.closeDialog();\r\n  }\r\n\r\n  private loadSparePartClasses(): void {\r\n    this.propertiesService.getValue(GenericPropertyConstants.SPARE_PART_CLASS_CODE).subscribe({\r\n      next: (sparePartClasses) => {\r\n        this.sparePartClasses = ListUtils.orEmpty(sparePartClasses).sort((x, y) => x.label.localeCompare(y.label));\r\n        if (this.isSparePartClassPredefined) {\r\n          this.searchObject.sparePartClassCode = AWPropertiesConstants.SPC_REPAIRABLE_KEY;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { TableModule } from 'primeng/table';\r\n\r\nimport { AngularCommonSharedModule } from '../../angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../app-common-shared.module';\r\nimport { DialogSearchPnAlternativesModule } from '../dialog-search-pn-alternatives/dialog-search-pn-alternatives.module';\r\nimport { ModalModule } from '../modal/modal.module';\r\n\r\nimport { DialogSearchPnComponent } from './dialog-search-pn.component';\r\nimport { DialogSearchPnService } from './dialog-search-pn.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [TableModule, DropdownModule];\r\n\r\nconst INTERNAL_MODULES = [DialogSearchPnAlternativesModule, ModalModule];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogSearchPnComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [DialogSearchPnService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS],\r\n  exports: [...COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class DialogSearchPnModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SearchResultsDTO } from '../../../shared/types/api-types/search-results-dto.interface';\r\nimport { ProductStructureManagementApi } from '../../api/product-structure-management.api';\r\nimport { AbstractAwHttpService } from '../../http/abstract-aw-http';\r\nimport { AppConfigService } from '../../services/app-config.service';\r\nimport { FindBirePnsBySearchCriteriaPSMInput } from '../../types/api-input-types/product-structure-management/find-bire-pns-by-search-criteria-input.interface';\r\nimport { BirePnDTO } from '../../types/api-types/bire-pn-dto.interface';\r\nimport { FamilyVariantDTO } from '../../types/api-types/family-variant-dto.interface';\r\nimport { FindFamilyVariantInput } from '../../types/api-types/find-family-variant-input.interface';\r\n\r\n@Injectable()\r\nexport class DialogSearchPnService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly productStructureManagementApi: ProductStructureManagementApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public isPartWithContainer(input: string): Observable<boolean> {\r\n    return super.post<string, boolean>(this.productStructureManagementApi.isPartWithContainer, input);\r\n  }\r\n\r\n  public getFamilyVariant(familyVariantInput: FindFamilyVariantInput): Observable<FamilyVariantDTO[]> {\r\n    return super.post<FindFamilyVariantInput, FamilyVariantDTO[]>(\r\n      this.productStructureManagementApi.findFamilyVariant,\r\n      familyVariantInput\r\n    );\r\n  }\r\n\r\n  public findBirePnsBySearchCriteria(\r\n    criteria: BirePnDTO,\r\n    familyCode: string,\r\n    structureType: string,\r\n    variantCode: string,\r\n    toolSearch: boolean\r\n  ): Observable<SearchResultsDTO<BirePnDTO>> {\r\n    const params: FindBirePnsBySearchCriteriaPSMInput = {\r\n      birePnDTOCriteria: criteria,\r\n      familyCode,\r\n      structureType,\r\n      variantCode,\r\n      toolSearch\r\n    };\r\n\r\n    return super.post<FindBirePnsBySearchCriteriaPSMInput, SearchResultsDTO<BirePnDTO>>(\r\n      this.productStructureManagementApi.findBirePnsBySearchCriteria,\r\n      params\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}