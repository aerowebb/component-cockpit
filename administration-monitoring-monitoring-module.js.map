{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/primeng/components/selectbutton/selectbutton.js","webpack:///./node_modules/primeng/dialog.js","webpack:///./node_modules/primeng/selectbutton.js","webpack:///./src/app/main/administration/monitoring/form/dialog-librairies-report/dialog-librairies-report.component.html","webpack:///./src/app/main/administration/monitoring/form/dialog-librairies-report/dialog-librairies-report.component.ts","webpack:///./src/app/main/administration/monitoring/form/monitoring-form.component.html","webpack:///./src/app/main/administration/monitoring/form/monitoring-form.component.scss","webpack:///./src/app/main/administration/monitoring/form/monitoring-form.component.ts","webpack:///./src/app/main/administration/monitoring/form/monitoring-form.service.ts","webpack:///./src/app/main/administration/monitoring/monitoring.module.ts","webpack:///./src/app/shared/utils/file-utils.ts"],"names":[],"mappings":"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","file":"administration-monitoring-monitoring-module.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar objectutils_1 = require(\"../utils/objectutils\");\nvar forms_1 = require(\"@angular/forms\");\nexports.SELECTBUTTON_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return SelectButton; }),\n    multi: true\n};\nvar SelectButton = /** @class */ (function () {\n    function SelectButton(cd) {\n        this.cd = cd;\n        this.tabindex = 0;\n        this.onOptionClick = new core_1.EventEmitter();\n        this.onChange = new core_1.EventEmitter();\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n    }\n    Object.defineProperty(SelectButton.prototype, \"options\", {\n        get: function () {\n            return this._options;\n        },\n        set: function (val) {\n            var opts = this.optionLabel ? objectutils_1.ObjectUtils.generateSelectItems(val, this.optionLabel) : val;\n            this._options = opts;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SelectButton.prototype.writeValue = function (value) {\n        this.value = value;\n        this.cd.markForCheck();\n    };\n    SelectButton.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    SelectButton.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    SelectButton.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    SelectButton.prototype.onItemClick = function (event, option, index) {\n        if (this.disabled || option.disabled) {\n            return;\n        }\n        if (this.multiple) {\n            var itemIndex_1 = this.findItemIndex(option);\n            if (itemIndex_1 != -1)\n                this.value = this.value.filter(function (val, i) { return i != itemIndex_1; });\n            else\n                this.value = (this.value || []).concat([option.value]);\n        }\n        else {\n            this.value = option.value;\n        }\n        this.onOptionClick.emit({\n            originalEvent: event,\n            option: option,\n            index: index\n        });\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    };\n    SelectButton.prototype.onFocus = function (event) {\n        this.focusedItem = event.target;\n    };\n    SelectButton.prototype.onBlur = function (event) {\n        this.focusedItem = null;\n        this.onModelTouched();\n    };\n    SelectButton.prototype.isSelected = function (option) {\n        if (this.multiple)\n            return this.findItemIndex(option) != -1;\n        else\n            return objectutils_1.ObjectUtils.equals(option.value, this.value, this.dataKey);\n    };\n    SelectButton.prototype.findItemIndex = function (option) {\n        var index = -1;\n        if (this.value) {\n            for (var i = 0; i < this.value.length; i++) {\n                if (this.value[i] == option.value) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], SelectButton.prototype, \"tabindex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SelectButton.prototype, \"multiple\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], SelectButton.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SelectButton.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"dataKey\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SelectButton.prototype, \"optionLabel\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], SelectButton.prototype, \"onOptionClick\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], SelectButton.prototype, \"onChange\", void 0);\n    __decorate([\n        core_1.ContentChild(core_1.TemplateRef),\n        __metadata(\"design:type\", Object)\n    ], SelectButton.prototype, \"itemTemplate\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], SelectButton.prototype, \"options\", null);\n    SelectButton = __decorate([\n        core_1.Component({\n            selector: 'p-selectButton',\n            template: \"\\n        <div [ngClass]=\\\"'ui-selectbutton ui-buttonset ui-widget ui-corner-all ui-buttonset-' + (options ? options.length : 0)\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div *ngFor=\\\"let option of options; let i = index\\\" #btn class=\\\"ui-button ui-widget ui-state-default ui-button-text-only {{option.styleClass}}\\\"\\n                [ngClass]=\\\"{'ui-state-active':isSelected(option), 'ui-state-disabled': disabled || option.disabled, 'ui-state-focus': btn == focusedItem, \\n                'ui-button-text-icon-left': (option.icon != null), 'ui-button-icon-only': (option.icon && !option.label)}\\\" (click)=\\\"onItemClick($event,option,i)\\\" (keydown.enter)=\\\"onItemClick($event,option,i)\\\"\\n                [attr.title]=\\\"option.title\\\" [attr.aria-label]=\\\"option.label\\\" (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\" [attr.tabindex]=\\\"tabindex\\\">\\n                <ng-container *ngIf=\\\"!itemTemplate else customcontent\\\">\\n                    <span [ngClass]=\\\"['ui-clickable', 'ui-button-icon-left']\\\" [class]=\\\"option.icon\\\" *ngIf=\\\"option.icon\\\"></span>\\n                    <span class=\\\"ui-button-text ui-clickable\\\">{{option.label||'ui-btn'}}</span>\\n                </ng-container>\\n                <ng-template #customcontent>\\n                    <ng-container *ngTemplateOutlet=\\\"itemTemplate; context: {$implicit: option, index: i}\\\"></ng-container>\\n                </ng-template>\\n            </div>\\n        </div>\\n    \",\n            providers: [exports.SELECTBUTTON_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\n    ], SelectButton);\n    return SelectButton;\n}());\nexports.SelectButton = SelectButton;\nvar SelectButtonModule = /** @class */ (function () {\n    function SelectButtonModule() {\n    }\n    SelectButtonModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [SelectButton],\n            declarations: [SelectButton]\n        })\n    ], SelectButtonModule);\n    return SelectButtonModule;\n}());\nexports.SelectButtonModule = SelectButtonModule;\n//# sourceMappingURL=selectbutton.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dialog/dialog\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/selectbutton/selectbutton\"));","module.exports = \"<a-modal style=\\\"height: 28em;\\\" class=\\\"aw-modal\\\" [(visible)]=\\\"displayValue\\\" [width]=\\\"600\\\">\\r\\n  <a-header>\\r\\n    <div class=\\\"modal-title\\\">{{ componentId + \\\".title\\\" | translate }}</div>\\r\\n  </a-header>\\r\\n\\r\\n  <a-content>\\r\\n    <div class=\\\"form-group\\\" style=\\\"overflow: hidden\\\">\\r\\n      <label class=\\\"form-label\\\"></label>\\r\\n\\r\\n      <div class=\\\"form-control\\\" style=\\\"height: auto\\\">\\r\\n        <textarea\\r\\n          pInputTextArea\\r\\n          [cols]=\\\"100\\\"\\r\\n          [rows]=\\\"30\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"aw-textarea\\\"\\r\\n          [(ngModel)]=\\\"importReportMessage\\\"\\r\\n          disabled\\r\\n        ></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n  </a-content>\\r\\n\\r\\n  <a-footer>\\r\\n    <button type=\\\"button\\\" mat-raised-button (click)=\\\"closeDialog()\\\">\\r\\n      <span>{{ \\\"global.close\\\" | translate }}</span>\\r\\n    </button>\\r\\n  </a-footer>\\r\\n</a-modal>\\r\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aw-dialog-librairies-report',\r\n  templateUrl: './dialog-librairies-report.component.html'\r\n})\r\nexport class DialogLibrairiesReportComponent implements OnInit {\r\n  @Input()\r\n  public get display() {\r\n    return this.displayValue;\r\n  }\r\n\r\n  public set display(displayValue) {\r\n    this.displayValue = displayValue;\r\n    this.displayChange.emit(this.displayValue);\r\n  }\r\n\r\n  @Output()\r\n  public displayChange: EventEmitter<boolean>;\r\n\r\n  @Input() public importReportMessage: string | null;\r\n\r\n  public readonly componentId: string;\r\n  public displayValue: boolean;\r\n\r\n  public constructor() {\r\n    this.componentId = 'DialogLibrairiesReportComponent';\r\n    this.displayChange = new EventEmitter<boolean>();\r\n  }\r\n\r\n  public ngOnInit() {\r\n    // TODO\r\n  }\r\n\r\n  public closeDialog() {\r\n    this.display = false;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"page-header\\\">\\r\\n  <div class=\\\"page-info\\\">\\r\\n    <div>\\r\\n      <div class=\\\"page-title\\\">\\r\\n        {{ \\\"transaction.\\\" + componentData.componentId | translate }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"page-subtitle\\\">\\r\\n        <div class=\\\"page-subtitle\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"page-actions\\\">\\r\\n    <button\\r\\n      mat-icon-button\\r\\n      class=\\\"mat-elevation-z1\\\"\\r\\n      matTooltip=\\\"{{ 'global.showAllActionTooltip' | translate }}\\\"\\r\\n      matTooltipPosition=\\\"above\\\"\\r\\n      aria-label=\\\"Show all actions\\\"\\r\\n      [matMenuTriggerFor]=\\\"actions\\\"\\r\\n    >\\r\\n      <mat-icon>more_horiz</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #actions=\\\"matMenu\\\">\\r\\n      <button mat-menu-item (click)=\\\"refresh()\\\">{{ \\\"global.refresh\\\" | translate }}</button>\\r\\n      <button mat-menu-item (click)=\\\"updateFavoriteState()\\\">\\r\\n        {{ (isFavoriteEntry ? \\\"page.removeFromFavorites\\\" : \\\"page.addToFavorites\\\") | translate }}\\r\\n      </button>\\r\\n    </mat-menu>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-wrapper\\\">\\r\\n  <div class=\\\"page-container\\\">\\r\\n    <div class=\\\"page-content\\\">\\r\\n      <mat-tab-group animationDuration=\\\"0ms\\\" dynamicHeight>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ \\\"home\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <!-- SPRING AND DATABASE -->\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container loading-indicator\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".spring\\\" | translate }}\\r\\n                      <div *ngIf=\\\"panelLoading\\\" class=\\\"lds-hourglass\\\"></div>\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".creationDate\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <p-calendar\\r\\n                        showButtonBar=\\\"true\\\"\\r\\n                        [monthNavigator]=\\\"true\\\"\\r\\n                        [yearNavigator]=\\\"true\\\"\\r\\n                        [yearRange]=\\\"sessionService.calendarYearRange\\\"\\r\\n                        class=\\\"aw-calendar\\\"\\r\\n                        [dateFormat]=\\\"sessionService.dateFormatPrimeNG\\\"\\r\\n                        [locale]=\\\"sessionService.calendarFormat\\\"\\r\\n                        [(ngModel)]=\\\"monitoringData.creationDate\\\"\\r\\n                        [showTime]=\\\"true\\\"\\r\\n                        [disabled]=\\\"true\\\"\\r\\n                      ></p-calendar>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".architectureType\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"aw-input\\\"\\r\\n                        [disabled]=\\\"true\\\"\\r\\n                        [(ngModel)]=\\\"monitoringData.architecturalType\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"grid-cell--6\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container loading-indicator\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".database\\\" | translate }}\\r\\n                      <div *ngIf=\\\"panelLoading\\\" class=\\\"lds-hourglass\\\"></div>\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".dbURL\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"aw-input\\\"\\r\\n                        [disabled]=\\\"true\\\"\\r\\n                        title=\\\"{{ monitoringData.dbUrl }}\\\"\\r\\n                        [(ngModel)]=\\\"dbURLString\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-label\\\">\\r\\n                      {{ componentData.componentId + \\\".dbUser\\\" | translate }}\\r\\n                    </label>\\r\\n\\r\\n                    <div class=\\\"form-control\\\">\\r\\n                      <input type=\\\"text\\\" class=\\\"aw-input\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"monitoringData.dbUser\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- LIBRAIRIES -->\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container loading-indicator\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".libraries\\\" | translate }}\\r\\n                      <div *ngIf=\\\"panelLoading\\\" class=\\\"lds-hourglass\\\"></div>\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content\\\">\\r\\n                  <button type=\\\"button\\\" mat-raised-button (click)=\\\"openReportDialog()\\\">\\r\\n                    <span>{{ componentData.componentId + \\\".refreshLibraries\\\" | translate }}</span>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab>\\r\\n          <ng-template mat-tab-label>\\r\\n            {{ componentData.componentId + \\\".performances\\\" | translate }}\\r\\n          </ng-template>\\r\\n          <!-- SERVICE PERFORMANCE -->\\r\\n          <div class=\\\"grid-row\\\">\\r\\n            <div class=\\\"grid-cell--12\\\">\\r\\n              <div class=\\\"grid-cell grid-cell--container\\\">\\r\\n                <div class=\\\"grid-cell-header\\\">\\r\\n                  <div class=\\\"grid-cell-title-container loading-indicator\\\">\\r\\n                    <h3 class=\\\"grid-cell-title\\\">\\r\\n                      {{ componentData.componentId + \\\".servicePerformance\\\" | translate }}\\r\\n                      <div *ngIf=\\\"panelLoading\\\" class=\\\"lds-hourglass\\\"></div>\\r\\n                    </h3>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"grid-cell-content  grid-cell-content-with-section\\\">\\r\\n                  <div *ngIf=\\\"!panelLoading\\\" class=\\\"grid-cell--12\\\">\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">\\r\\n                              <b class=\\\"fontClass\\\">{{ componentData.componentId + \\\".note\\\" | translate }}</b>\\r\\n                            </label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <ul style=\\\"list-style-type:disc;\\\">\\r\\n                                <li class=\\\"fontClass\\\">\\r\\n                                  {{ componentData.componentId + \\\".statsReportHelp\\\" | translate }}\\r\\n                                </li>\\r\\n                                <li class=\\\"fontClass\\\">\\r\\n                                  {{ componentData.componentId + \\\".detailedStatsHelp\\\" | translate }}\\r\\n                                </li>\\r\\n                              </ul>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">\\r\\n                              {{ componentData.componentId + \\\".report\\\" | translate }}\\r\\n                            </label>\\r\\n\\r\\n                            <div class=\\\"form-control\\\">\\r\\n                              <textarea\\r\\n                                pInputTextarea\\r\\n                                [rows]=\\\"5\\\"\\r\\n                                class=\\\"aw-textarea\\\"\\r\\n                                [disabled]=\\\"true\\\"\\r\\n                                style=\\\"background: #E5EAF3; font: caption; font-size: small\\\"\\r\\n                                [(ngModel)]=\\\"monitoringData.serviceReport\\\"\\r\\n                                maxlength=\\\"300\\\"\\r\\n                              ></textarea>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\" style=\\\"margin-left: 15px\\\">\\r\\n                          <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" mat-raised-button (click)=\\\"fetchStats(0)\\\">\\r\\n                            <span class=\\\"lds-hourglass\\\" *ngIf=\\\"resetStatLoader\\\"></span>\\r\\n                            {{ componentData.componentId + \\\".resetStats\\\" | translate }}\\r\\n                          </button>\\r\\n                          &nbsp;&nbsp;\\r\\n                          <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" mat-raised-button (click)=\\\"fetchStats(1)\\\">\\r\\n                            <span class=\\\"lds-hourglass\\\" *ngIf=\\\"refreshStatLoader\\\"></span>\\r\\n                            {{ componentData.componentId + \\\".refreshStats\\\" | translate }}\\r\\n                          </button>\\r\\n                          &nbsp;&nbsp;\\r\\n                          <button type=\\\"button\\\" class=\\\"btn-with-spinner\\\" mat-raised-button (click)=\\\"fetchStats(2)\\\">\\r\\n                            <span class=\\\"lds-hourglass\\\" *ngIf=\\\"detailedStatLoader\\\"></span>\\r\\n                            {{ componentData.componentId + \\\".detailedStats\\\" | translate }}\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"grid-cell--8\\\">\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <h4 class=\\\"section-title\\\">\\r\\n                        {{ componentData.componentId + \\\".log4jConf\\\" | translate }}\\r\\n                      </h4>\\r\\n\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div\\r\\n                          class=\\\"row\\\"\\r\\n                          *ngFor=\\\"let conf of monitoringData.log4jConfigurationList; let caseIndex = index\\\"\\r\\n                        >\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-label\\\">{{ conf.logText }}</label>\\r\\n                          </div>\\r\\n\\r\\n                          <div class=\\\"form-control\\\" style=\\\"margin: auto\\\">\\r\\n                            <p-selectButton\\r\\n                              [options]=\\\"levelList\\\"\\r\\n                              [(ngModel)]=\\\"conf.betweenText\\\"\\r\\n                              (click)=\\\"changeLogLevel(conf)\\\"\\r\\n                            ></p-selectButton>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"grid-cell--12\\\">\\r\\n                    <div class=\\\"section\\\">\\r\\n                      <h4 class=\\\"section-title\\\">\\r\\n                        {{ componentData.componentId + \\\".jobsMonitoring\\\" | translate }}\\r\\n                      </h4>\\r\\n\\r\\n                      <div class=\\\"section-content\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <div class=\\\"form-control\\\">\\r\\n                            <textarea\\r\\n                              pInputTextarea\\r\\n                              [rows]=\\\"5\\\"\\r\\n                              class=\\\"aw-textarea\\\"\\r\\n                              [disabled]=\\\"true\\\"\\r\\n                              style=\\\"background: #E5EAF3; font: caption; font-size: small\\\"\\r\\n                              [(ngModel)]=\\\"monitoringData.jobMonitoring\\\"\\r\\n                              maxlength=\\\"300\\\"\\r\\n                            ></textarea>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-tab>\\r\\n      </mat-tab-group>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- LIBRAIRIES REPORT -->\\r\\n<aw-dialog-librairies-report\\r\\n  *ngIf=\\\"showLibrariesReportDialog\\\"\\r\\n  [(display)]=\\\"showLibrariesReportDialog\\\"\\r\\n  [importReportMessage]=\\\"monitoringData.libraryReport\\\"\\r\\n></aw-dialog-librairies-report>\\r\\n\"","module.exports = \":host .fontClass {\\n  color: #007ad9;\\n  font-style: italic; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9hZG1pbmlzdHJhdGlvbi9tb25pdG9yaW5nL2Zvcm0vRDpcXFByb2ZpbGVzXFxhcHJhZGhhblxcRGVza3RvcFxcQWVyb3dlYmJcXFBST0pFQ1RTXFxmcm9udGVuZF9hZXJvd2ViYi9zcmNcXGFwcFxcbWFpblxcYWRtaW5pc3RyYXRpb25cXG1vbml0b3JpbmdcXGZvcm1cXG1vbml0b3JpbmctZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGNBQWM7RUFDZCxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21haW4vYWRtaW5pc3RyYXRpb24vbW9uaXRvcmluZy9mb3JtL21vbml0b3JpbmctZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAuZm9udENsYXNzIHtcclxuICAgIGNvbG9yOiAjMDA3YWQ5O1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { PageTocService } from '../../../../shared/components/component-sidebar/page-toc.service';\r\nimport { PageTocEntry } from '../../../../shared/components/component-sidebar/types/page-toc-entry.interface';\r\nimport { ComponentConstants } from '../../../../shared/constants/component-constants';\r\nimport { ComponentOpenMode } from '../../../../shared/enums/component-open-mode.enum';\r\nimport { FavoriteService } from '../../../../shared/services/favorite.service';\r\nimport { LoaderService } from '../../../../shared/services/loader.service';\r\nimport { MessageService } from '../../../../shared/services/message.service';\r\nimport { SerializationService } from '../../../../shared/services/serialization.service';\r\nimport { SessionService } from '../../../../shared/services/session.service';\r\nimport { TabService } from '../../../../shared/services/tab.service';\r\nimport { Log4jConfigurationTextOutput } from '../../../../shared/types/api-output-types/administration-monitoring/log4j-configuration-text-output-dto.interface';\r\nimport { MonitoringOutput } from '../../../../shared/types/api-output-types/administration-monitoring/monitoring-output-dto.interface';\r\nimport { FormPageComponent } from '../../../../shared/types/form-page-component';\r\nimport { LabelValue } from '../../../../shared/types/label-value.interface';\r\nimport { PageComponentData } from '../../../../shared/types/page-component-data.interface';\r\nimport { FileUtils } from '../../../../shared/utils/file-utils';\r\n\r\nimport { MonitoringFormService } from './monitoring-form.service';\r\n\r\n@Component({\r\n  selector: 'aw-monitoring-form',\r\n  styleUrls: ['./monitoring-form.component.scss'],\r\n  templateUrl: './monitoring-form.component.html'\r\n})\r\nexport class MonitoringFormComponent extends FormPageComponent<PageComponentData> implements OnInit {\r\n  public static readonly SPRING_ANCHOR_ID: string = 'springAnchor';\r\n  public static readonly DATABASE_ANCHOR_ID: string = 'databaseAnchor';\r\n  public static readonly SERVICE_PERFORMANCE_ANCHOR_ID: string = 'servicePerformanceAnchor';\r\n  public static readonly LIBRARIES_ANCHOR_ID: string = 'librariesAnchor';\r\n\r\n  public readonly component: typeof MonitoringFormComponent;\r\n\r\n  // Screen Data\r\n  public monitoringData: MonitoringOutput;\r\n\r\n  // Configuration List\r\n  public levelList: LabelValue<string>[];\r\n\r\n  // Loader\r\n  public panelLoading: boolean;\r\n  public resetStatLoader: boolean;\r\n  public refreshStatLoader: boolean;\r\n  public detailedStatLoader: boolean;\r\n\r\n  public showLibrariesReportDialog: boolean;\r\n\r\n  public dbURLString: string;\r\n\r\n  // Table of content ***********************************************************\r\n\r\n  @ViewChild(MonitoringFormComponent.SPRING_ANCHOR_ID)\r\n  public springEltRef: ElementRef;\r\n\r\n  @ViewChild(MonitoringFormComponent.DATABASE_ANCHOR_ID)\r\n  public dbEltRef: ElementRef;\r\n\r\n  @ViewChild(MonitoringFormComponent.SERVICE_PERFORMANCE_ANCHOR_ID)\r\n  public performanceEltRef: ElementRef;\r\n\r\n  @ViewChild(MonitoringFormComponent.LIBRARIES_ANCHOR_ID)\r\n  public librariesEltRef: ElementRef;\r\n\r\n  public toc: PageTocEntry[];\r\n\r\n  // ****************************************************************************\r\n\r\n  public constructor(\r\n    favoriteService: FavoriteService,\r\n    loaderService: LoaderService,\r\n    messageService: MessageService,\r\n    serializationService: SerializationService,\r\n    tabService: TabService,\r\n    public sessionService: SessionService,\r\n    pageTocService: PageTocService,\r\n    public translateService: TranslateService,\r\n    private readonly monitoringFormService: MonitoringFormService\r\n  ) {\r\n    super(\r\n      ComponentOpenMode.Write,\r\n      favoriteService,\r\n      loaderService,\r\n      messageService,\r\n      serializationService,\r\n      tabService,\r\n      pageTocService\r\n    );\r\n\r\n    this.component = MonitoringFormComponent;\r\n\r\n    super.registerPageTocEntryObservable();\r\n  }\r\n\r\n  public getComponentName(): string {\r\n    return ComponentConstants.ADM_MONITORING;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    super.ngOnInit();\r\n    this.setTableOfContent();\r\n    this.init();\r\n  }\r\n\r\n  public refresh() {\r\n    this.init();\r\n  }\r\n\r\n  /**********************************\r\n   * SET TABLE OF CONTENT\r\n   **********************************/\r\n  private setTableOfContent() {\r\n    const springKey = this.getTranslateKey('spring');\r\n    const databaseKey = this.getTranslateKey('database');\r\n    const performanceKey = this.getTranslateKey('servicePerformance');\r\n    const librariesKey = this.getTranslateKey('libraries');\r\n    this.translateService.get([springKey, databaseKey, performanceKey, librariesKey]).subscribe((results: string[]) => {\r\n      const springLabel = !!results ? results[springKey] : 'Spring';\r\n      const dbLabel = !!results ? results[databaseKey] : 'Database';\r\n      const performanceLabel = !!results ? results[performanceKey] : 'Service Performance';\r\n      const librariesLabel = !!results ? results[librariesKey] : 'Librairies';\r\n\r\n      this.toc = [\r\n        {\r\n          id: 'springAnchor',\r\n          anchor: this.springEltRef,\r\n          label: springLabel\r\n        },\r\n        {\r\n          id: 'databaseAnchor',\r\n          anchor: this.dbEltRef,\r\n          label: dbLabel\r\n        },\r\n        {\r\n          id: 'servicePerformanceAnchor',\r\n          anchor: this.performanceEltRef,\r\n          label: performanceLabel\r\n        },\r\n        {\r\n          id: 'librariesAnchor',\r\n          anchor: this.librariesEltRef,\r\n          label: librariesLabel\r\n        }\r\n      ];\r\n\r\n      super.selectPageTocEntry(this.component.SPRING_ANCHOR_ID);\r\n    });\r\n  }\r\n\r\n  /**********************************\r\n   * INIT METHOD\r\n   **********************************/\r\n  private init() {\r\n    this.monitoringData = {};\r\n    this.setConfigurationList();\r\n    this.loadMonitoringData();\r\n  }\r\n\r\n  /**********************************\r\n   * SET CONFIGURATION SELECT BUTTON LIST\r\n   **********************************/\r\n  private setConfigurationList() {\r\n    this.levelList = [\r\n      {\r\n        label: 'Debug',\r\n        value: 'DEBUG'\r\n      },\r\n      {\r\n        label: 'Info',\r\n        value: 'INFO'\r\n      },\r\n      {\r\n        label: 'Error',\r\n        value: 'ERROR'\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**********************************\r\n   * LOAD SCREEN DATA\r\n   **********************************/\r\n  private loadMonitoringData() {\r\n    this.panelLoading = true;\r\n    this.monitoringFormService.adminMonitoring().subscribe(\r\n      (data) => {\r\n        this.monitoringData = data;\r\n\r\n        if (!!this.monitoringData.dbUrl) {\r\n          const endIndex = 40;\r\n          if (this.monitoringData.dbUrl.length > endIndex) {\r\n            this.dbURLString = `${this.monitoringData.dbUrl.substring(0, endIndex)}...`;\r\n          } else {\r\n            this.dbURLString = this.monitoringData.dbUrl;\r\n          }\r\n        }\r\n        this.panelLoading = false;\r\n      },\r\n      (error) => {\r\n        this.panelLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  public openReportDialog() {\r\n    this.showLibrariesReportDialog = true;\r\n  }\r\n\r\n  /**********************************\r\n   * LOAD STATS\r\n   **********************************/\r\n  public fetchStats(stat: number) {\r\n    switch (stat) {\r\n      case 0: {\r\n        this.resetStatLoader = true;\r\n        this.monitoringFormService.reset().subscribe(\r\n          (data: string) => {\r\n            this.monitoringData.serviceReport = data;\r\n            this.resetStatLoader = false;\r\n          },\r\n          (error) => {\r\n            this.resetStatLoader = false;\r\n          }\r\n        );\r\n        break;\r\n      }\r\n      case 1: {\r\n        this.refreshStatLoader = true;\r\n        this.monitoringFormService.refresh().subscribe(\r\n          (data: string) => {\r\n            this.monitoringData.serviceReport = data;\r\n            this.refreshStatLoader = false;\r\n          },\r\n          (error) => {\r\n            this.refreshStatLoader = false;\r\n          }\r\n        );\r\n        break;\r\n      }\r\n      default: {\r\n        this.detailedStatLoader = true;\r\n        this.monitoringFormService.detailed().subscribe(\r\n          (data) => {\r\n            FileUtils.downloadFile(data.content, data.fileName);\r\n            this.detailedStatLoader = false;\r\n          },\r\n          (error) => {\r\n            this.detailedStatLoader = false;\r\n          }\r\n        );\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**********************************\r\n   * Change Log Level\r\n   **********************************/\r\n  public changeLogLevel(conf: Log4jConfigurationTextOutput) {\r\n    this.monitoringFormService.changeLogLevel(conf).subscribe(\r\n      () => {\r\n        // TODO\r\n      },\r\n      (error) => {\r\n        this.detailedStatLoader = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FleetBusinessApi } from '../../../../shared/api/fleet-business.api';\r\nimport { AbstractAwHttpService } from '../../../../shared/http/abstract-aw-http';\r\nimport { AppConfigService } from '../../../../shared/services/app-config.service';\r\nimport { DetailedStatsOutput } from '../../../../shared/types/api-output-types/administration-monitoring/detailed-stats-output-dto.interface';\r\nimport { Log4jConfigurationTextOutput } from '../../../../shared/types/api-output-types/administration-monitoring/log4j-configuration-text-output-dto.interface';\r\nimport { MonitoringOutput } from '../../../../shared/types/api-output-types/administration-monitoring/monitoring-output-dto.interface';\r\n\r\n@Injectable()\r\nexport class MonitoringFormService extends AbstractAwHttpService {\r\n  public constructor(\r\n    http: HttpClient,\r\n    appConfigService: AppConfigService,\r\n    private readonly fleetBusinessApi: FleetBusinessApi\r\n  ) {\r\n    super(http, appConfigService);\r\n  }\r\n\r\n  public adminMonitoring(): Observable<MonitoringOutput> {\r\n    return super.post<void, MonitoringOutput>(this.fleetBusinessApi.adminMonitoring);\r\n  }\r\n\r\n  /**********************************\r\n   * STATS OPERATIONS\r\n   **********************************/\r\n  public reset(): Observable<string> {\r\n    return super.post<void, string>(this.fleetBusinessApi.resetStats);\r\n  }\r\n\r\n  public refresh(): Observable<string> {\r\n    return super.post<void, string>(this.fleetBusinessApi.refreshStats);\r\n  }\r\n\r\n  public detailed(): Observable<DetailedStatsOutput> {\r\n    return super.post<void, DetailedStatsOutput>(this.fleetBusinessApi.detailedStats);\r\n  }\r\n\r\n  public changeLogLevel(conf: Log4jConfigurationTextOutput): Observable<void> {\r\n    return super.post<Log4jConfigurationTextOutput, void>(this.fleetBusinessApi.changeLogLevel, conf);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AngularCommonSharedModule } from '../../../shared/angular-common-shared.module';\r\nimport { AngularGenericTemplatesSharedModule } from '../../../shared/angular-generic-templates-shared-module';\r\nimport { AppCommonSharedModule } from '../../../shared/app-common-shared.module';\r\nimport { ComponentSidebarModule } from '../../../shared/components/component-sidebar/component-sidebar.mdule';\r\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\r\nimport { DynamicComponentLoaderModule } from '../../dynamic-component-loader/dynamic-component-loader.module';\r\n\r\nimport { DialogLibrairiesReportComponent } from './form/dialog-librairies-report/dialog-librairies-report.component';\r\nimport { MonitoringFormComponent } from './form/monitoring-form.component';\r\nimport { MonitoringFormService } from './form/monitoring-form.service';\r\n\r\n/******************************************************************************\r\n * Modules\r\n *************************************************************************** */\r\n\r\nconst EXTERNAL_MODULES = [\r\n  DialogModule,\r\n  TooltipModule,\r\n  SelectButtonModule,\r\n  CalendarModule,\r\n  ModalModule,\r\n  ComponentSidebarModule\r\n];\r\n\r\nconst INTERNAL_MODULES = [];\r\n\r\n/******************************************************************************\r\n * Components\r\n *************************************************************************** */\r\n\r\nconst COMPONENTS = [DialogLibrairiesReportComponent];\r\n\r\nconst DYNAMIC_COMPONENTS = [MonitoringFormComponent];\r\n\r\n/******************************************************************************\r\n * Services\r\n *************************************************************************** */\r\n\r\nconst SERVICES = [MonitoringFormService];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...DYNAMIC_COMPONENTS],\r\n  imports: [\r\n    AngularCommonSharedModule,\r\n    AngularGenericTemplatesSharedModule,\r\n    AppCommonSharedModule,\r\n    DynamicComponentLoaderModule.forChild(DYNAMIC_COMPONENTS),\r\n    ...EXTERNAL_MODULES,\r\n    ...INTERNAL_MODULES\r\n  ],\r\n  providers: [...SERVICES]\r\n})\r\nexport class MonitoringModule {}\r\n","import * as FileSaver from 'file-saver';\r\n\r\nimport { NumberUtils } from './number-utils';\r\n\r\nexport class FileUtils {\r\n  public static readonly KIBIOCTET: number = 1024;\r\n  public static readonly KILOOCTET: number = 1000;\r\n\r\n  public static downloadFile(file: Uint8Array | undefined, fileName: string | undefined): void {\r\n    if (!!file && !!fileName) {\r\n      const byteCharacters = atob(file.toString());\r\n      const byteNumbers = new Array(byteCharacters.length);\r\n      for (let i = 0; i < byteCharacters.length; i++) {\r\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n      }\r\n\r\n      FileSaver.saveAs(new Blob([new Uint8Array(byteNumbers)]), fileName);\r\n    }\r\n  }\r\n\r\n  public static getExtension(fileName: string | undefined): string {\r\n    return !!fileName && fileName.includes('.') ? fileName.substring(fileName.lastIndexOf('.') + 1) : '';\r\n  }\r\n\r\n  public static getFileContentAsBase64(file: File | undefined, callback: (fileContent: Uint8Array) => void): void {\r\n    if (!!file) {\r\n      const reader: FileReader = new FileReader();\r\n      reader.onloadend = () => {\r\n        let fileContent: any = reader.result; // tslint:disable-line:no-any\r\n        fileContent = fileContent.substring((fileContent.indexOf(',') as number) + 1); // Remove data:*/*;base64,\r\n        callback(fileContent);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  public static getFormattedSize(size: number | undefined): string {\r\n    if (!!size) {\r\n      return size / FileUtils.KILOOCTET < FileUtils.KILOOCTET\r\n        ? `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET)} Ko`\r\n        : `${NumberUtils.roundNumber(size / FileUtils.KILOOCTET / FileUtils.KILOOCTET)} Mo`;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}